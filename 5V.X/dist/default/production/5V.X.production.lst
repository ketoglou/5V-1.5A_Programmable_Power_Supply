

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 06 21:11:20 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           ; Version 2.05
    24                           ; Generated 20/12/2018 GMT
    25                           ; 
    26                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F25K50 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _ANSELCbits	set	3933
    58  0000                     _ANSELA	set	3931
    59  0000                     _SPBRG1	set	4015
    60  0000                     _BAUDCON1	set	4024
    61  0000                     _IPR1bits	set	3999
    62  0000                     _RCSTA1	set	4011
    63  0000                     _TXSTA1	set	4012
    64  0000                     _PMD0bits	set	3966
    65  0000                     _TRISCbits	set	3988
    66  0000                     _LATA	set	3977
    67  0000                     _TRISA	set	3986
    68  0000                     _INTCONbits	set	4082
    69  0000                     _RCONbits	set	4048
    70  0000                     _OSCCON2bits	set	4050
    71  0000                     _OSCCONbits	set	4051
    72  0000                     _OSCTUNE	set	3995
    73  0000                     _OSCCON2	set	4050
    74  0000                     _OSCCON	set	4051
    75  0000                     _RCREG1	set	4014
    76  0000                     _RCSTA1bits	set	4011
    77  0000                     _TXREG1	set	4013
    78  0000                     _TXSTA1bits	set	4012
    79  0000                     _PIR1bits	set	3998
    80  0000                     _PIE1bits	set	3997
    81                           
    82                           	psect	smallconst
    83  000800                     __psmallconst:
    84                           	opt callstack 0
    85  000800  00                 	db	0
    86  000801                     STR_1:
    87  000801  76                 	db	118	;'v'
    88  000802  6F                 	db	111	;'o'
    89  000803  75                 	db	117	;'u'
    90  000804  6C                 	db	108	;'l'
    91  000805  61                 	db	97	;'a'
    92  000806  6B                 	db	107	;'k'
    93  000807  69                 	db	105	;'i'
    94  000808  0A                 	db	10
    95  000809  00                 	db	0
    96                           
    97                           ; #config settings
    98  00080A  00                 	db	0	; dummy byte at the end
    99  0000                     
   100                           	psect	cinit
   101  000B04                     __pcinit:
   102                           	opt callstack 0
   103  000B04                     start_initialization:
   104                           	opt callstack 0
   105  000B04                     __initialization:
   106                           	opt callstack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (35 bytes)
   109  000B04  EE00  F001         	lfsr	0,__pbssCOMRAM
   110  000B08  0E23               	movlw	35
   111  000B0A                     clear_0:
   112  000B0A  6AEE               	clrf	postinc0,c
   113  000B0C  06E8               	decf	wreg,f,c
   114  000B0E  E1FD               	bnz	clear_0
   115  000B10                     end_of_initialization:
   116                           	opt callstack 0
   117  000B10                     __end_of__initialization:
   118                           	opt callstack 0
   119  000B10  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120  000B12  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121  000B14  0E00               	movlw	low (__Lmediumconst shr (0+16))
   122  000B16  6EF8               	movwf	tblptru,c
   123  000B18  0100               	movlb	0
   124  000B1A  EF06  F004         	goto	_main	;jump to C main() function
   125                           
   126                           	psect	bssCOMRAM
   127  000001                     __pbssCOMRAM:
   128                           	opt callstack 0
   129  000001                     _rx_buffer:
   130                           	opt callstack 0
   131  000001                     	ds	32
   132  000021                     _rx_counter:
   133                           	opt callstack 0
   134  000021                     	ds	2
   135  000023                     _tx_byte:
   136                           	opt callstack 0
   137  000023                     	ds	1
   138                           
   139                           	psect	cstackCOMRAM
   140  000024                     __pcstackCOMRAM:
   141                           	opt callstack 0
   142  000024                     ??i2_Initialize_Baud_Rate:
   143  000024                     
   144                           ; 2 bytes @ 0x0
   145  000024                     	ds	2
   146  000026                     i2Initialize_Baud_Rate@baud_rate:
   147                           	opt callstack 0
   148                           
   149                           ; 1 bytes @ 0x2
   150  000026                     	ds	1
   151  000027                     i2USART_Init@baud_rate:
   152                           	opt callstack 0
   153                           
   154                           ; 2 bytes @ 0x3
   155  000027                     	ds	2
   156  000029                     ??_high_isr:
   157  000029                     
   158                           ; 1 bytes @ 0x5
   159  000029                     	ds	2
   160  00002B                     ??_Initialize_Baud_Rate:
   161  00002B                     ??_USART_ReceiveByte:
   162  00002B                     ?_USART_SendByte:
   163                           	opt callstack 0
   164                           
   165                           ; 2 bytes @ 0x7
   166  00002B                     	ds	1
   167  00002C                     USART_ReceiveByte@temp_char:
   168                           	opt callstack 0
   169                           
   170                           ; 1 bytes @ 0x8
   171  00002C                     	ds	1
   172  00002D                     Initialize_Baud_Rate@baud_rate:
   173                           	opt callstack 0
   174  00002D                     USART_SendByte@byte:
   175                           	opt callstack 0
   176  00002D                     USART_ReceiveByte@i:
   177                           	opt callstack 0
   178                           
   179                           ; 2 bytes @ 0x9
   180  00002D                     	ds	1
   181  00002E                     USART_Init@baud_rate:
   182                           	opt callstack 0
   183  00002E                     USART_SendString@str:
   184                           	opt callstack 0
   185                           
   186                           ; 2 bytes @ 0xA
   187  00002E                     	ds	1
   188  00002F                     ?_USART_ReceiveString:
   189                           	opt callstack 0
   190  00002F                     USART_ReceiveString@buffer:
   191                           	opt callstack 0
   192                           
   193                           ; 2 bytes @ 0xB
   194  00002F                     	ds	1
   195  000030                     USART_SendString@size:
   196                           	opt callstack 0
   197                           
   198                           ; 2 bytes @ 0xC
   199  000030                     	ds	1
   200  000031                     USART_ReceiveString@size:
   201                           	opt callstack 0
   202                           
   203                           ; 2 bytes @ 0xD
   204  000031                     	ds	1
   205  000032                     ??_USART_SendString:
   206                           
   207                           ; 1 bytes @ 0xE
   208  000032                     	ds	1
   209  000033                     ??_USART_ReceiveString:
   210                           
   211                           ; 1 bytes @ 0xF
   212  000033                     	ds	1
   213  000034                     USART_SendString@i:
   214                           	opt callstack 0
   215  000034                     USART_ReceiveString@i:
   216                           	opt callstack 0
   217                           
   218                           ; 2 bytes @ 0x10
   219  000034                     	ds	2
   220  000036                     USART_SendString@attempts:
   221                           	opt callstack 0
   222                           
   223                           ; 2 bytes @ 0x12
   224  000036                     	ds	2
   225  000038                     ??_main:
   226                           
   227                           ; 1 bytes @ 0x14
   228  000038                     	ds	2
   229  00003A                     main@okrec:
   230                           	opt callstack 0
   231                           
   232                           ; 7 bytes @ 0x16
   233  00003A                     	ds	7
   234                           
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 41 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;  okrec           7   22[COMRAM] unsigned char [7]
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   254 ;;      Params:         0       0       0       0       0       0       0       0       0
   255 ;;      Locals:         7       0       0       0       0       0       0       0       0
   256 ;;      Temps:          2       0       0       0       0       0       0       0       0
   257 ;;      Totals:         9       0       0       0       0       0       0       0       0
   258 ;;Total ram usage:        9 bytes
   259 ;; Hardware stack levels required when called:    5
   260 ;; This function calls:
   261 ;;		_USART_Init
   262 ;;		_USART_ReceiveString
   263 ;;		_USART_SendString
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text0
   270  00080C                     __ptext0:
   271                           	opt callstack 0
   272  00080C                     _main:
   273                           	opt callstack 26
   274                           
   275                           ;main.c: 42:     OSCCON = 0x70;
   276                           
   277                           ;incstack = 0
   278  00080C  0E70               	movlw	112
   279  00080E  6ED3               	movwf	4051,c	;volatile
   280                           
   281                           ;main.c: 43:     OSCCON2 = 0x94;
   282  000810  0E94               	movlw	148
   283  000812  6ED2               	movwf	4050,c	;volatile
   284                           
   285                           ;main.c: 44:     OSCTUNE = 0x80;
   286  000814  0E80               	movlw	128
   287  000816  6E9B               	movwf	3995,c	;volatile
   288  000818                     l62:
   289  000818  A4D3               	btfss	4051,2,c	;volatile
   290  00081A  B2D2               	btfsc	4050,1,c	;volatile
   291  00081C  D002               	goto	u450
   292  00081E  AED2               	btfss	4050,7,c	;volatile
   293  000820  D7FB               	goto	l62
   294  000822                     u450:
   295                           
   296                           ;main.c: 47:     USART_Init(3);
   297  000822  0E00               	movlw	0
   298  000824  6E2F               	movwf	USART_Init@baud_rate+1,c
   299  000826  0E03               	movlw	3
   300  000828  6E2E               	movwf	USART_Init@baud_rate,c
   301  00082A  EC46  F005         	call	_USART_Init	;wreg free
   302                           
   303                           ;main.c: 50:     RCONbits.IPEN = 1;
   304  00082E  8ED0               	bsf	4048,7,c	;volatile
   305                           
   306                           ;main.c: 51:     INTCONbits.GIE = 1;
   307  000830  8EF2               	bsf	4082,7,c	;volatile
   308                           
   309                           ;main.c: 52:     INTCONbits.PEIE = 1;
   310  000832  8CF2               	bsf	4082,6,c	;volatile
   311                           
   312                           ;main.c: 54:     TRISA = 0x00;
   313  000834  0E00               	movlw	0
   314  000836  6E92               	movwf	3986,c	;volatile
   315                           
   316                           ;main.c: 55:     ANSELA = 0;
   317  000838  0E00               	movlw	0
   318  00083A  010F               	movlb	15	; () banked
   319  00083C  6F5B               	movwf	91,b	;volatile
   320  00083E                     l1214:
   321                           
   322                           ;main.c: 60:         LATA = 0x01;
   323  00083E  0E01               	movlw	1
   324  000840  6E89               	movwf	3977,c	;volatile
   325                           
   326                           ;main.c: 61:         _delay((unsigned long)((1000)*(48000000/4000.0)));
   327  000842  0E3D               	movlw	61
   328  000844  6E39               	movwf	(??_main+1)& (0+255),c
   329  000846  0EE1               	movlw	225
   330  000848  6E38               	movwf	??_main& (0+255),c
   331  00084A  0E40               	movlw	64
   332  00084C                     u497:
   333  00084C  2EE8               	decfsz	wreg,f,c
   334  00084E  D7FE               	bra	u497
   335  000850  2E38               	decfsz	??_main& (0+255),f,c
   336  000852  D7FC               	bra	u497
   337  000854  2E39               	decfsz	(??_main+1)& (0+255),f,c
   338  000856  D7FA               	bra	u497
   339                           
   340                           ;main.c: 62:         LATA = 0x00;
   341  000858  0E00               	movlw	0
   342  00085A  6E89               	movwf	3977,c	;volatile
   343                           
   344                           ;main.c: 63:         _delay((unsigned long)((1000)*(48000000/4000.0)));
   345  00085C  0E3D               	movlw	61
   346  00085E  6E39               	movwf	(??_main+1)& (0+255),c
   347  000860  0EE1               	movlw	225
   348  000862  6E38               	movwf	??_main& (0+255),c
   349  000864  0E40               	movlw	64
   350  000866                     u507:
   351  000866  2EE8               	decfsz	wreg,f,c
   352  000868  D7FE               	bra	u507
   353  00086A  2E38               	decfsz	??_main& (0+255),f,c
   354  00086C  D7FC               	bra	u507
   355  00086E  2E39               	decfsz	(??_main+1)& (0+255),f,c
   356  000870  D7FA               	bra	u507
   357  000872                     l1222:
   358  000872  0E3A               	movlw	low main@okrec
   359  000874  6E2F               	movwf	USART_ReceiveString@buffer,c
   360  000876  0E00               	movlw	high main@okrec
   361  000878  6E30               	movwf	USART_ReceiveString@buffer+1,c
   362  00087A  0E00               	movlw	0
   363  00087C  6E32               	movwf	USART_ReceiveString@size+1,c
   364  00087E  0E02               	movlw	2
   365  000880  6E31               	movwf	USART_ReceiveString@size,c
   366  000882  ECDA  F004         	call	_USART_ReceiveString	;wreg free
   367  000886  282F               	incf	?_USART_ReceiveString,w,c
   368  000888  E103               	bnz	u460
   369  00088A  2830               	incf	?_USART_ReceiveString+1,w,c
   370  00088C  B4D8               	btfsc	status,2,c
   371  00088E  D7F1               	goto	l1222
   372  000890                     u460:
   373                           
   374                           ;main.c: 65:         if (okrec[0] == 'o' && okrec[1] == 'k')
   375  000890  0E6F               	movlw	111
   376  000892  183A               	xorwf	main@okrec,w,c
   377  000894  A4D8               	btfss	status,2,c
   378  000896  D7D3               	goto	l1214
   379  000898  0E6B               	movlw	107
   380  00089A  183B               	xorwf	main@okrec+1,w,c
   381  00089C  A4D8               	btfss	status,2,c
   382  00089E  D7CF               	goto	l1214
   383                           
   384                           ;main.c: 66:             USART_SendString("voulaki\n",8);
   385  0008A0  0E01               	movlw	low STR_1
   386  0008A2  6E2E               	movwf	USART_SendString@str,c
   387  0008A4  0E08               	movlw	high STR_1
   388  0008A6  6E2F               	movwf	USART_SendString@str+1,c
   389  0008A8  0E00               	movlw	0
   390  0008AA  6E31               	movwf	USART_SendString@size+1,c
   391  0008AC  0E08               	movlw	8
   392  0008AE  6E30               	movwf	USART_SendString@size,c
   393  0008B0  EC5B  F004         	call	_USART_SendString	;wreg free
   394  0008B4  D7C4               	goto	l1214
   395  0008B6                     __end_of_main:
   396                           	opt callstack 0
   397                           
   398 ;; *************** function _USART_SendString *****************
   399 ;; Defined at:
   400 ;;		line 56 in file "USART.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;  str             2   10[COMRAM] PTR unsigned char 
   403 ;;		 -> STR_1(9), 
   404 ;;  size            2   12[COMRAM] int 
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  attempts        2   18[COMRAM] int 
   407 ;;  i               2   16[COMRAM] int 
   408 ;; Return value:  Size  Location     Type
   409 ;;                  2   10[COMRAM] int 
   410 ;; Registers used:
   411 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   417 ;;      Params:         4       0       0       0       0       0       0       0       0
   418 ;;      Locals:         4       0       0       0       0       0       0       0       0
   419 ;;      Temps:          2       0       0       0       0       0       0       0       0
   420 ;;      Totals:        10       0       0       0       0       0       0       0       0
   421 ;;Total ram usage:       10 bytes
   422 ;; Hardware stack levels used:    1
   423 ;; Hardware stack levels required when called:    4
   424 ;; This function calls:
   425 ;;		_USART_SendByte
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text1
   432  0008B6                     __ptext1:
   433                           	opt callstack 0
   434  0008B6                     _USART_SendString:
   435                           	opt callstack 26
   436                           
   437                           ;USART.c: 57:     int attempts =3000,i;
   438                           
   439                           ;incstack = 0
   440  0008B6  0E0B               	movlw	11
   441  0008B8  6E37               	movwf	USART_SendString@attempts+1,c
   442  0008BA  0EB8               	movlw	184
   443  0008BC  6E36               	movwf	USART_SendString@attempts,c
   444  0008BE                     l1132:
   445  0008BE  0E0D               	movlw	13
   446  0008C0  EC72  F005         	call	_USART_SendByte
   447  0008C4  502B               	movf	?_USART_SendByte,w,c
   448  0008C6  102C               	iorwf	?_USART_SendByte+1,w,c
   449  0008C8  A4D8               	btfss	status,2,c
   450  0008CA  D008               	goto	u300
   451  0008CC  0636               	decf	USART_SendString@attempts,f,c
   452  0008CE  A0D8               	btfss	status,0,c
   453  0008D0  0637               	decf	USART_SendString@attempts+1,f,c
   454  0008D2  2836               	incf	USART_SendString@attempts,w,c
   455  0008D4  E1F4               	bnz	l1132
   456  0008D6  2837               	incf	USART_SendString@attempts+1,w,c
   457  0008D8  A4D8               	btfss	status,2,c
   458  0008DA  D7F1               	goto	l1132
   459  0008DC                     u300:
   460  0008DC                     l1136:
   461  0008DC  0E0A               	movlw	10
   462  0008DE  EC72  F005         	call	_USART_SendByte
   463  0008E2  502B               	movf	?_USART_SendByte,w,c
   464  0008E4  102C               	iorwf	?_USART_SendByte+1,w,c
   465  0008E6  A4D8               	btfss	status,2,c
   466  0008E8  D008               	goto	u320
   467  0008EA  0636               	decf	USART_SendString@attempts,f,c
   468  0008EC  A0D8               	btfss	status,0,c
   469  0008EE  0637               	decf	USART_SendString@attempts+1,f,c
   470  0008F0  2836               	incf	USART_SendString@attempts,w,c
   471  0008F2  E1F4               	bnz	l1136
   472  0008F4  2837               	incf	USART_SendString@attempts+1,w,c
   473  0008F6  A4D8               	btfss	status,2,c
   474  0008F8  D7F1               	goto	u300
   475  0008FA                     u320:
   476                           
   477                           ;USART.c: 60:     for(i=0;i<size;i++){
   478  0008FA  0E00               	movlw	0
   479  0008FC  6E35               	movwf	USART_SendString@i+1,c
   480  0008FE  0E00               	movlw	0
   481  000900  6E34               	movwf	USART_SendString@i,c
   482  000902  D01E               	goto	l1152
   483  000904                     l1142:
   484                           
   485                           ;USART.c: 61:         if(!USART_SendByte(*(str + i))){
   486  000904  5034               	movf	USART_SendString@i,w,c
   487  000906  242E               	addwf	USART_SendString@str,w,c
   488  000908  6E32               	movwf	??_USART_SendString& (0+255),c
   489  00090A  5035               	movf	USART_SendString@i+1,w,c
   490  00090C  202F               	addwfc	USART_SendString@str+1,w,c
   491  00090E  6E33               	movwf	(??_USART_SendString+1)& (0+255),c
   492  000910  C032  FFF6         	movff	??_USART_SendString,tblptrl
   493  000914  C033  FFF7         	movff	??_USART_SendString+1,tblptrh
   494  000918                     	if	0	;tblptru may be non-zero
   495  000918                     	endif
   496  000918                     	if	0	;tblptru may be non-zero
   497  000918                     	endif
   498  000918  0008               	tblrd		*
   499  00091A  50F5               	movf	tablat,w,c
   500  00091C  EC72  F005         	call	_USART_SendByte
   501  000920  502B               	movf	?_USART_SendByte,w,c
   502  000922  102C               	iorwf	?_USART_SendByte+1,w,c
   503  000924  A4D8               	btfss	status,2,c
   504  000926  D006               	goto	l1146
   505                           
   506                           ;USART.c: 62:             attempts --;
   507  000928  0636               	decf	USART_SendString@attempts,f,c
   508  00092A  A0D8               	btfss	status,0,c
   509  00092C  0637               	decf	USART_SendString@attempts+1,f,c
   510                           
   511                           ;USART.c: 63:             i --;
   512  00092E  0634               	decf	USART_SendString@i,f,c
   513  000930  A0D8               	btfss	status,0,c
   514  000932  0635               	decf	USART_SendString@i+1,f,c
   515  000934                     l1146:
   516                           
   517                           ;USART.c: 65:         if(!attempts)
   518  000934  5036               	movf	USART_SendString@attempts,w,c
   519  000936  1037               	iorwf	USART_SendString@attempts+1,w,c
   520  000938  B4D8               	btfsc	status,2,c
   521  00093A  0012               	return	
   522                           
   523                           ;USART.c: 67:     }
   524  00093C  4A34               	infsnz	USART_SendString@i,f,c
   525  00093E  2A35               	incf	USART_SendString@i+1,f,c
   526  000940                     l1152:
   527  000940  5030               	movf	USART_SendString@size,w,c
   528  000942  5C34               	subwf	USART_SendString@i,w,c
   529  000944  5035               	movf	USART_SendString@i+1,w,c
   530  000946  0A80               	xorlw	128
   531  000948  6E32               	movwf	??_USART_SendString& (0+255),c
   532  00094A  5031               	movf	USART_SendString@size+1,w,c
   533  00094C  0A80               	xorlw	128
   534  00094E  5832               	subwfb	??_USART_SendString& (0+255),w,c
   535  000950  B0D8               	btfsc	status,0,c
   536  000952  0012               	return	
   537  000954  D7D7               	goto	l1142
   538  000956                     __end_of_USART_SendString:
   539                           	opt callstack 0
   540                           
   541 ;; *************** function _USART_SendByte *****************
   542 ;; Defined at:
   543 ;;		line 47 in file "USART.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;  byte            1    wreg     unsigned char 
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  byte            1    9[COMRAM] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  2    7[COMRAM] int 
   550 ;; Registers used:
   551 ;;		wreg, status,2
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   557 ;;      Params:         2       0       0       0       0       0       0       0       0
   558 ;;      Locals:         1       0       0       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0
   560 ;;      Totals:         3       0       0       0       0       0       0       0       0
   561 ;;Total ram usage:        3 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    3
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_USART_SendString
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text2
   572  000AE4                     __ptext2:
   573                           	opt callstack 0
   574  000AE4                     _USART_SendByte:
   575                           	opt callstack 26
   576                           
   577                           ;incstack = 0
   578                           ;USART_SendByte@byte stored from wreg
   579  000AE4  6E2D               	movwf	USART_SendByte@byte,c
   580                           
   581                           ;USART.c: 48:     if(!PIE1bits.TXIE){
   582  000AE6  B89D               	btfsc	3997,4,c	;volatile
   583  000AE8  D008               	goto	l1076
   584                           
   585                           ;USART.c: 49:         tx_byte = byte;
   586  000AEA  C02D  F023         	movff	USART_SendByte@byte,_tx_byte	;volatile
   587                           
   588                           ;USART.c: 50:         PIE1bits.TXIE = 1;
   589  000AEE  889D               	bsf	3997,4,c	;volatile
   590                           
   591                           ;USART.c: 51:         return 1;
   592  000AF0  0E00               	movlw	0
   593  000AF2  6E2C               	movwf	?_USART_SendByte+1,c
   594  000AF4  0E01               	movlw	1
   595  000AF6  6E2B               	movwf	?_USART_SendByte,c
   596  000AF8  0012               	return	
   597  000AFA                     l1076:
   598                           
   599                           ;USART.c: 53:     return 0;
   600  000AFA  0E00               	movlw	0
   601  000AFC  6E2C               	movwf	?_USART_SendByte+1,c
   602  000AFE  0E00               	movlw	0
   603  000B00  6E2B               	movwf	?_USART_SendByte,c
   604  000B02  0012               	return		;funcret
   605  000B04                     __end_of_USART_SendByte:
   606                           	opt callstack 0
   607                           
   608 ;; *************** function _USART_ReceiveString *****************
   609 ;; Defined at:
   610 ;;		line 84 in file "USART.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  buffer          2   11[COMRAM] PTR unsigned char 
   613 ;;		 -> main@okrec(7), 
   614 ;;  size            2   13[COMRAM] int 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  i               2   16[COMRAM] int 
   617 ;; Return value:  Size  Location     Type
   618 ;;                  2   11[COMRAM] int 
   619 ;; Registers used:
   620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   626 ;;      Params:         4       0       0       0       0       0       0       0       0
   627 ;;      Locals:         2       0       0       0       0       0       0       0       0
   628 ;;      Temps:          1       0       0       0       0       0       0       0       0
   629 ;;      Totals:         7       0       0       0       0       0       0       0       0
   630 ;;Total ram usage:        7 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    4
   633 ;; This function calls:
   634 ;;		_USART_ReceiveByte
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text3
   641  0009B4                     __ptext3:
   642                           	opt callstack 0
   643  0009B4                     _USART_ReceiveString:
   644                           	opt callstack 26
   645                           
   646                           ;USART.c: 85:     if(rx_counter < size){
   647                           
   648                           ;incstack = 0
   649  0009B4  5031               	movf	USART_ReceiveString@size,w,c
   650  0009B6  5C21               	subwf	_rx_counter,w,c
   651  0009B8  5022               	movf	_rx_counter+1,w,c
   652  0009BA  0A80               	xorlw	128
   653  0009BC  6E33               	movwf	??_USART_ReceiveString& (0+255),c
   654  0009BE  5032               	movf	USART_ReceiveString@size+1,w,c
   655  0009C0  0A80               	xorlw	128
   656  0009C2  5833               	subwfb	??_USART_ReceiveString& (0+255),w,c
   657  0009C4  B0D8               	btfsc	status,0,c
   658  0009C6  D003               	goto	l1118
   659                           
   660                           ;USART.c: 86:         return -1;
   661  0009C8  682F               	setf	?_USART_ReceiveString,c
   662  0009CA  6830               	setf	?_USART_ReceiveString+1,c
   663  0009CC  0012               	return	
   664  0009CE                     l1118:
   665                           
   666                           ;USART.c: 88:     for(int i=0;i<size;i++){
   667  0009CE  0E00               	movlw	0
   668  0009D0  6E35               	movwf	USART_ReceiveString@i+1,c
   669  0009D2  0E00               	movlw	0
   670  0009D4  6E34               	movwf	USART_ReceiveString@i,c
   671  0009D6  D00D               	goto	l1124
   672  0009D8                     l1120:
   673                           
   674                           ;USART.c: 89:         buffer[i] = USART_ReceiveByte();
   675  0009D8  ECAB  F004         	call	_USART_ReceiveByte	;wreg free
   676  0009DC  6E33               	movwf	??_USART_ReceiveString& (0+255),c
   677  0009DE  5034               	movf	USART_ReceiveString@i,w,c
   678  0009E0  242F               	addwf	USART_ReceiveString@buffer,w,c
   679  0009E2  6ED9               	movwf	fsr2l,c
   680  0009E4  5035               	movf	USART_ReceiveString@i+1,w,c
   681  0009E6  2030               	addwfc	USART_ReceiveString@buffer+1,w,c
   682  0009E8  6EDA               	movwf	fsr2h,c
   683  0009EA  C033  FFDF         	movff	??_USART_ReceiveString,indf2
   684                           
   685                           ;USART.c: 90:     }
   686  0009EE  4A34               	infsnz	USART_ReceiveString@i,f,c
   687  0009F0  2A35               	incf	USART_ReceiveString@i+1,f,c
   688  0009F2                     l1124:
   689  0009F2  5031               	movf	USART_ReceiveString@size,w,c
   690  0009F4  5C34               	subwf	USART_ReceiveString@i,w,c
   691  0009F6  5035               	movf	USART_ReceiveString@i+1,w,c
   692  0009F8  0A80               	xorlw	128
   693  0009FA  6E33               	movwf	??_USART_ReceiveString& (0+255),c
   694  0009FC  5032               	movf	USART_ReceiveString@size+1,w,c
   695  0009FE  0A80               	xorlw	128
   696  000A00  5833               	subwfb	??_USART_ReceiveString& (0+255),w,c
   697  000A02  A0D8               	btfss	status,0,c
   698  000A04  D7E9               	goto	l1120
   699                           
   700                           ;USART.c: 91:     return 1;
   701  000A06  0E00               	movlw	0
   702  000A08  6E30               	movwf	?_USART_ReceiveString+1,c
   703  000A0A  0E01               	movlw	1
   704  000A0C  6E2F               	movwf	?_USART_ReceiveString,c
   705  000A0E  0012               	return		;funcret
   706  000A10                     __end_of_USART_ReceiveString:
   707                           	opt callstack 0
   708                           
   709 ;; *************** function _USART_ReceiveByte *****************
   710 ;; Defined at:
   711 ;;		line 71 in file "USART.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  i               2    9[COMRAM] int 
   716 ;;  temp_char       1    8[COMRAM] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      unsigned char 
   719 ;; Registers used:
   720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   726 ;;      Params:         0       0       0       0       0       0       0       0       0
   727 ;;      Locals:         3       0       0       0       0       0       0       0       0
   728 ;;      Temps:          1       0       0       0       0       0       0       0       0
   729 ;;      Totals:         4       0       0       0       0       0       0       0       0
   730 ;;Total ram usage:        4 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    3
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_USART_ReceiveString
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text4
   741  000956                     __ptext4:
   742                           	opt callstack 0
   743  000956                     _USART_ReceiveByte:
   744                           	opt callstack 26
   745                           
   746                           ;USART.c: 72:     if(rx_counter > 0){
   747                           
   748                           ;incstack = 0
   749  000956  BE22               	btfsc	_rx_counter+1,7,c
   750  000958  D02B               	goto	l872
   751  00095A  5022               	movf	_rx_counter+1,w,c
   752  00095C  E103               	bnz	u20
   753  00095E  0421               	decf	_rx_counter,w,c
   754  000960  A0D8               	btfss	status,0,c
   755  000962  D026               	goto	l872
   756  000964                     u20:
   757                           
   758                           ;USART.c: 73:         rx_counter --;
   759  000964  0621               	decf	_rx_counter,f,c
   760  000966  A0D8               	btfss	status,0,c
   761  000968  0622               	decf	_rx_counter+1,f,c
   762                           
   763                           ;USART.c: 74:         char temp_char = rx_buffer[0];
   764  00096A  C001  F02C         	movff	_rx_buffer,USART_ReceiveByte@temp_char
   765                           
   766                           ;USART.c: 75:         for(int i =0;i<rx_counter;i++){
   767  00096E  0E00               	movlw	0
   768  000970  6E2E               	movwf	USART_ReceiveByte@i+1,c
   769  000972  0E00               	movlw	0
   770  000974  6E2D               	movwf	USART_ReceiveByte@i,c
   771  000976  D010               	goto	l866
   772  000978                     l862:
   773                           
   774                           ;USART.c: 76:             rx_buffer[i] = rx_buffer[i+1];
   775  000978  0E02               	movlw	low (_rx_buffer+1)
   776  00097A  242D               	addwf	USART_ReceiveByte@i,w,c
   777  00097C  6ED9               	movwf	fsr2l,c
   778  00097E  0E00               	movlw	high (_rx_buffer+1)
   779  000980  202E               	addwfc	USART_ReceiveByte@i+1,w,c
   780  000982  6EDA               	movwf	fsr2h,c
   781  000984  0E01               	movlw	low _rx_buffer
   782  000986  242D               	addwf	USART_ReceiveByte@i,w,c
   783  000988  6EE1               	movwf	fsr1l,c
   784  00098A  0E00               	movlw	high _rx_buffer
   785  00098C  202E               	addwfc	USART_ReceiveByte@i+1,w,c
   786  00098E  6EE2               	movwf	fsr1h,c
   787  000990  CFDF FFE7          	movff	indf2,indf1
   788                           
   789                           ;USART.c: 77:         }
   790  000994  4A2D               	infsnz	USART_ReceiveByte@i,f,c
   791  000996  2A2E               	incf	USART_ReceiveByte@i+1,f,c
   792  000998                     l866:
   793  000998  5021               	movf	_rx_counter,w,c
   794  00099A  5C2D               	subwf	USART_ReceiveByte@i,w,c
   795  00099C  502E               	movf	USART_ReceiveByte@i+1,w,c
   796  00099E  0A80               	xorlw	128
   797  0009A0  6E2B               	movwf	??_USART_ReceiveByte& (0+255),c
   798  0009A2  5022               	movf	_rx_counter+1,w,c
   799  0009A4  0A80               	xorlw	128
   800  0009A6  582B               	subwfb	??_USART_ReceiveByte& (0+255),w,c
   801  0009A8  A0D8               	btfss	status,0,c
   802  0009AA  D7E6               	goto	l862
   803                           
   804                           ;USART.c: 78:         return temp_char;
   805  0009AC  502C               	movf	USART_ReceiveByte@temp_char,w,c
   806  0009AE  0012               	return	
   807  0009B0                     l872:
   808                           
   809                           ;USART.c: 80:     return 0;
   810  0009B0  0E00               	movlw	0
   811  0009B2  0012               	return		;funcret
   812  0009B4                     __end_of_USART_ReceiveByte:
   813                           	opt callstack 0
   814                           
   815 ;; *************** function _USART_Init *****************
   816 ;; Defined at:
   817 ;;		line 5 in file "USART.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  baud_rate       2   10[COMRAM] int 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   831 ;;      Params:         2       0       0       0       0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0
   834 ;;      Totals:         2       0       0       0       0       0       0       0       0
   835 ;;Total ram usage:        2 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    4
   838 ;; This function calls:
   839 ;;		_Initialize_Baud_Rate
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text5
   846  000A8C                     __ptext5:
   847                           	opt callstack 0
   848  000A8C                     _USART_Init:
   849                           	opt callstack 26
   850                           
   851                           ;USART.c: 7:     TRISCbits.RC6 = 1;
   852                           
   853                           ;incstack = 0
   854  000A8C  8C94               	bsf	3988,6,c	;volatile
   855                           
   856                           ;USART.c: 8:     TRISCbits.RC7 = 1;
   857  000A8E  8E94               	bsf	3988,7,c	;volatile
   858                           
   859                           ;USART.c: 9:     ANSELCbits.ANSC6 = 0;
   860  000A90  010F               	movlb	15	; () banked
   861  000A92  9D5D               	bcf	93,6,b	;volatile
   862                           
   863                           ;USART.c: 10:     ANSELCbits.ANSC7 = 0;
   864  000A94  9F5D               	bcf	93,7,b	;volatile
   865                           
   866                           ; BSR set to: 15
   867                           ;USART.c: 12:     rx_counter = 0;
   868  000A96  0E00               	movlw	0
   869  000A98  6E22               	movwf	_rx_counter+1,c
   870  000A9A  0E00               	movlw	0
   871  000A9C  6E21               	movwf	_rx_counter,c
   872                           
   873                           ; BSR set to: 15
   874                           ;USART.c: 14:     PMD0bits.UARTMD = 0;
   875  000A9E  9C7E               	bcf	3966,6,c	;volatile
   876                           
   877                           ;USART.c: 15:     TXSTA1 = 0x24;
   878  000AA0  0E24               	movlw	36
   879  000AA2  6EAC               	movwf	4012,c	;volatile
   880                           
   881                           ; BSR set to: 15
   882                           ;USART.c: 16:     Initialize_Baud_Rate(baud_rate);
   883  000AA4  502E               	movf	USART_Init@baud_rate,w,c
   884  000AA6  EC08  F005         	call	_Initialize_Baud_Rate
   885                           
   886                           ;USART.c: 17:     RCSTA1 = 0x90;
   887  000AAA  0E90               	movlw	144
   888  000AAC  6EAB               	movwf	4011,c	;volatile
   889                           
   890                           ;USART.c: 20:     IPR1bits.TXIP = 1;
   891  000AAE  889F               	bsf	3999,4,c	;volatile
   892                           
   893                           ;USART.c: 21:     IPR1bits.RCIP = 1;
   894  000AB0  8A9F               	bsf	3999,5,c	;volatile
   895                           
   896                           ;USART.c: 22:     PIE1bits.RCIE = 1;
   897  000AB2  8A9D               	bsf	3997,5,c	;volatile
   898                           
   899                           ;USART.c: 23:     PIE1bits.TXIE = 0;
   900  000AB4  989D               	bcf	3997,4,c	;volatile
   901  000AB6  0012               	return		;funcret
   902  000AB8                     __end_of_USART_Init:
   903                           	opt callstack 0
   904                           
   905 ;; *************** function _Initialize_Baud_Rate *****************
   906 ;; Defined at:
   907 ;;		line 27 in file "USART.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  baud_rate       1    wreg     unsigned char 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  baud_rate       1    9[COMRAM] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  2   84[None  ] int 
   914 ;; Registers used:
   915 ;;		wreg, status,2, status,0
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   921 ;;      Params:         0       0       0       0       0       0       0       0       0
   922 ;;      Locals:         1       0       0       0       0       0       0       0       0
   923 ;;      Temps:          2       0       0       0       0       0       0       0       0
   924 ;;      Totals:         3       0       0       0       0       0       0       0       0
   925 ;;Total ram usage:        3 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; Hardware stack levels required when called:    3
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_USART_Init
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text6
   936  000A10                     __ptext6:
   937                           	opt callstack 0
   938  000A10                     _Initialize_Baud_Rate:
   939                           	opt callstack 26
   940                           
   941                           ;incstack = 0
   942                           ;Initialize_Baud_Rate@baud_rate stored from wreg
   943  000A10  6E2D               	movwf	Initialize_Baud_Rate@baud_rate,c
   944                           
   945                           ;USART.c: 29:     BAUDCON1 = 0x00;
   946  000A12  0E00               	movlw	0
   947  000A14  6EB8               	movwf	4024,c	;volatile
   948                           
   949                           ;USART.c: 31:     switch(baud_rate){
   950  000A16  D009               	goto	l834
   951  000A18                     l826:
   952                           
   953                           ;USART.c: 33:             SPBRG1 = 155;
   954  000A18  0E9B               	movlw	155
   955  000A1A  6EAF               	movwf	4015,c	;volatile
   956                           
   957                           ;USART.c: 34:             break;
   958  000A1C  0012               	return	
   959  000A1E                     l828:
   960                           
   961                           ;USART.c: 36:             SPBRG1 = 51;
   962  000A1E  0E33               	movlw	51
   963  000A20  6EAF               	movwf	4015,c	;volatile
   964                           
   965                           ;USART.c: 37:             break;
   966  000A22  0012               	return	
   967  000A24                     l830:
   968                           
   969                           ;USART.c: 39:             SPBRG1 = 25;
   970  000A24  0E19               	movlw	25
   971  000A26  6EAF               	movwf	4015,c	;volatile
   972                           
   973                           ;USART.c: 40:             break;
   974  000A28  0012               	return	
   975  000A2A                     l834:
   976  000A2A  502D               	movf	Initialize_Baud_Rate@baud_rate,w,c
   977  000A2C  6E2B               	movwf	??_Initialize_Baud_Rate& (0+255),c
   978  000A2E  6A2C               	clrf	(??_Initialize_Baud_Rate+1)& (0+255),c
   979                           
   980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   981                           ; Switch size 1, requested type "simple"
   982                           ; Number of cases is 1, Range of values is 0 to 0
   983                           ; switch strategies available:
   984                           ; Name         Instructions Cycles
   985                           ; simple_byte            4     3 (average)
   986                           ;	Chosen strategy is simple_byte
   987  000A30  502C               	movf	??_Initialize_Baud_Rate+1,w,c
   988  000A32  0A00               	xorlw	0	; case 0
   989  000A34  A4D8               	btfss	status,2,c
   990  000A36  0012               	return	
   991                           
   992                           ; Switch size 1, requested type "simple"
   993                           ; Number of cases is 3, Range of values is 1 to 3
   994                           ; switch strategies available:
   995                           ; Name         Instructions Cycles
   996                           ; simple_byte           10     6 (average)
   997                           ;	Chosen strategy is simple_byte
   998  000A38  502B               	movf	??_Initialize_Baud_Rate,w,c
   999  000A3A  0A01               	xorlw	1	; case 1
  1000  000A3C  B4D8               	btfsc	status,2,c
  1001  000A3E  D7EC               	goto	l826
  1002  000A40  0A03               	xorlw	3	; case 2
  1003  000A42  B4D8               	btfsc	status,2,c
  1004  000A44  D7EC               	goto	l828
  1005  000A46  0A01               	xorlw	1	; case 3
  1006  000A48  A4D8               	btfss	status,2,c
  1007  000A4A  0012               	return	
  1008  000A4C  D7EB               	goto	l830
  1009  000A4E                     __end_of_Initialize_Baud_Rate:
  1010                           	opt callstack 0
  1011                           
  1012 ;; *************** function _high_isr *****************
  1013 ;; Defined at:
  1014 ;;		line 17 in file "main.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1028 ;;      Params:         0       0       0       0       0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1030 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1031 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1032 ;;Total ram usage:        2 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    2
  1035 ;; This function calls:
  1036 ;;		i2_USART_Init
  1037 ;; This function is called by:
  1038 ;;		Interrupt level 2
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	intcode
  1043  000008                     __pintcode:
  1044                           	opt callstack 0
  1045  000008                     _high_isr:
  1046                           	opt callstack 26
  1047                           
  1048                           ;incstack = 0
  1049  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1050  00000A  CFD9 F029          	movff	fsr2l,??_high_isr
  1051  00000E  CFDA F02A          	movff	fsr2h,??_high_isr+1
  1052                           
  1053                           ;main.c: 19:     if(PIE1bits.TXIE && PIR1bits.TXIF && TXSTA1bits.TRMT){
  1054  000012  B89D               	btfsc	3997,4,c	;volatile
  1055  000014  A89E               	btfss	3998,4,c	;volatile
  1056  000016  D005               	goto	i2l51
  1057  000018  A2AC               	btfss	4012,1,c	;volatile
  1058  00001A  D003               	goto	i2l51
  1059                           
  1060                           ;main.c: 20:         TXREG1 = tx_byte;
  1061  00001C  C023  FFAD         	movff	_tx_byte,4013	;volatile
  1062                           
  1063                           ;main.c: 21:         PIE1bits.TXIE = 0;
  1064  000020  989D               	bcf	3997,4,c	;volatile
  1065  000022                     i2l51:
  1066                           
  1067                           ;main.c: 24:     if(PIR1bits.RCIF){
  1068  000022  AA9E               	btfss	3998,5,c	;volatile
  1069  000024  D01C               	goto	i2l57
  1070                           
  1071                           ;main.c: 25:         if(!RCSTA1bits.FERR){
  1072  000026  B4AB               	btfsc	4011,2,c	;volatile
  1073  000028  D018               	goto	i2l53
  1074                           
  1075                           ;main.c: 26:             if(RCSTA1bits.OERR)
  1076  00002A  B2AB               	btfsc	4011,1,c	;volatile
  1077                           
  1078                           ;main.c: 27:                 RCSTA1bits.OERR = 0;
  1079  00002C  92AB               	bcf	4011,1,c	;volatile
  1080                           
  1081                           ;main.c: 28:             rx_buffer[rx_counter] = RCREG1;
  1082  00002E  0E01               	movlw	low _rx_buffer
  1083  000030  2421               	addwf	_rx_counter,w,c
  1084  000032  6ED9               	movwf	fsr2l,c
  1085  000034  0E00               	movlw	high _rx_buffer
  1086  000036  2022               	addwfc	_rx_counter+1,w,c
  1087  000038  6EDA               	movwf	fsr2h,c
  1088  00003A  CFAE FFDF          	movff	4014,indf2	;volatile
  1089                           
  1090                           ;main.c: 29:             rx_counter ++;
  1091  00003E  4A21               	infsnz	_rx_counter,f,c
  1092  000040  2A22               	incf	_rx_counter+1,f,c
  1093                           
  1094                           ;main.c: 30:             if(rx_counter == (32 +1)){
  1095  000042  0E21               	movlw	33
  1096  000044  1821               	xorwf	_rx_counter,w,c
  1097  000046  1022               	iorwf	_rx_counter+1,w,c
  1098  000048  A4D8               	btfss	status,2,c
  1099  00004A  D009               	goto	i2l57
  1100  00004C                     i2u42_40:
  1101                           
  1102                           ;main.c: 32:                 USART_Init(3);
  1103  00004C  0E00               	movlw	0
  1104  00004E  6E28               	movwf	i2USART_Init@baud_rate+1,c
  1105  000050  0E03               	movlw	3
  1106  000052  6E27               	movwf	i2USART_Init@baud_rate,c
  1107  000054  EC5C  F005         	call	i2_USART_Init	;wreg free
  1108  000058  D002               	goto	i2l57
  1109  00005A                     i2l53:
  1110                           
  1111                           ;main.c: 35:             RCSTA1bits.SPEN = 0;
  1112  00005A  9EAB               	bcf	4011,7,c	;volatile
  1113  00005C  D7F7               	goto	i2u42_40
  1114  00005E                     i2l57:
  1115  00005E  C02A  FFDA         	movff	??_high_isr+1,fsr2h
  1116  000062  C029  FFD9         	movff	??_high_isr,fsr2l
  1117  000066  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1118  000068  0011               	retfie		f
  1119  00006A                     __end_of_high_isr:
  1120                           	opt callstack 0
  1121                           
  1122 ;; *************** function i2_USART_Init *****************
  1123 ;; Defined at:
  1124 ;;		line 5 in file "USART.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  baud_rate       2    3[COMRAM] int 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1138 ;;      Params:         2       0       0       0       0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1141 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    1
  1145 ;; This function calls:
  1146 ;;		i2_Initialize_Baud_Rate
  1147 ;; This function is called by:
  1148 ;;		_high_isr
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text8
  1153  000AB8                     __ptext8:
  1154                           	opt callstack 0
  1155  000AB8                     i2_USART_Init:
  1156                           	opt callstack 26
  1157                           
  1158                           ;USART.c: 7:     TRISCbits.RC6 = 1;
  1159                           
  1160                           ;incstack = 0
  1161  000AB8  8C94               	bsf	3988,6,c	;volatile
  1162                           
  1163                           ;USART.c: 8:     TRISCbits.RC7 = 1;
  1164  000ABA  8E94               	bsf	3988,7,c	;volatile
  1165                           
  1166                           ;USART.c: 9:     ANSELCbits.ANSC6 = 0;
  1167  000ABC  010F               	movlb	15	; () banked
  1168  000ABE  9D5D               	bcf	93,6,b	;volatile
  1169                           
  1170                           ;USART.c: 10:     ANSELCbits.ANSC7 = 0;
  1171  000AC0  9F5D               	bcf	93,7,b	;volatile
  1172                           
  1173                           ; BSR set to: 15
  1174                           ;USART.c: 12:     rx_counter = 0;
  1175  000AC2  0E00               	movlw	0
  1176  000AC4  6E22               	movwf	_rx_counter+1,c
  1177  000AC6  0E00               	movlw	0
  1178  000AC8  6E21               	movwf	_rx_counter,c
  1179                           
  1180                           ; BSR set to: 15
  1181                           ;USART.c: 14:     PMD0bits.UARTMD = 0;
  1182  000ACA  9C7E               	bcf	3966,6,c	;volatile
  1183                           
  1184                           ;USART.c: 15:     TXSTA1 = 0x24;
  1185  000ACC  0E24               	movlw	36
  1186  000ACE  6EAC               	movwf	4012,c	;volatile
  1187                           
  1188                           ; BSR set to: 15
  1189                           ;USART.c: 16:     Initialize_Baud_Rate(baud_rate);
  1190  000AD0  5027               	movf	i2USART_Init@baud_rate,w,c
  1191  000AD2  EC27  F005         	call	i2_Initialize_Baud_Rate
  1192                           
  1193                           ;USART.c: 17:     RCSTA1 = 0x90;
  1194  000AD6  0E90               	movlw	144
  1195  000AD8  6EAB               	movwf	4011,c	;volatile
  1196                           
  1197                           ;USART.c: 20:     IPR1bits.TXIP = 1;
  1198  000ADA  889F               	bsf	3999,4,c	;volatile
  1199                           
  1200                           ;USART.c: 21:     IPR1bits.RCIP = 1;
  1201  000ADC  8A9F               	bsf	3999,5,c	;volatile
  1202                           
  1203                           ;USART.c: 22:     PIE1bits.RCIE = 1;
  1204  000ADE  8A9D               	bsf	3997,5,c	;volatile
  1205                           
  1206                           ;USART.c: 23:     PIE1bits.TXIE = 0;
  1207  000AE0  989D               	bcf	3997,4,c	;volatile
  1208  000AE2  0012               	return		;funcret
  1209  000AE4                     __end_ofi2_USART_Init:
  1210                           	opt callstack 0
  1211                           
  1212 ;; *************** function i2_Initialize_Baud_Rate *****************
  1213 ;; Defined at:
  1214 ;;		line 27 in file "USART.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  baud_rate       1    wreg     unsigned char 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  baud_rate       1    2[COMRAM] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  2    0[None  ] int 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0
  1229 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1230 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1231 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1232 ;;Total ram usage:        3 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		i2_USART_Init
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text9
  1242  000A4E                     __ptext9:
  1243                           	opt callstack 0
  1244  000A4E                     i2_Initialize_Baud_Rate:
  1245                           	opt callstack 26
  1246                           
  1247                           ;incstack = 0
  1248                           ;i2Initialize_Baud_Rate@baud_rate stored from wreg
  1249  000A4E  6E26               	movwf	i2Initialize_Baud_Rate@baud_rate,c
  1250                           
  1251                           ;USART.c: 29:     BAUDCON1 = 0x00;
  1252  000A50  0E00               	movlw	0
  1253  000A52  6EB8               	movwf	4024,c	;volatile
  1254                           
  1255                           ;USART.c: 31:     switch(baud_rate){
  1256  000A54  D009               	goto	i2l1090
  1257  000A56                     i2l1082:
  1258                           
  1259                           ;USART.c: 33:             SPBRG1 = 155;
  1260  000A56  0E9B               	movlw	155
  1261  000A58  6EAF               	movwf	4015,c	;volatile
  1262                           
  1263                           ;USART.c: 34:             break;
  1264  000A5A  0012               	return	
  1265  000A5C                     i2l1084:
  1266                           
  1267                           ;USART.c: 36:             SPBRG1 = 51;
  1268  000A5C  0E33               	movlw	51
  1269  000A5E  6EAF               	movwf	4015,c	;volatile
  1270                           
  1271                           ;USART.c: 37:             break;
  1272  000A60  0012               	return	
  1273  000A62                     i2l1086:
  1274                           
  1275                           ;USART.c: 39:             SPBRG1 = 25;
  1276  000A62  0E19               	movlw	25
  1277  000A64  6EAF               	movwf	4015,c	;volatile
  1278                           
  1279                           ;USART.c: 40:             break;
  1280  000A66  0012               	return	
  1281  000A68                     i2l1090:
  1282  000A68  5026               	movf	i2Initialize_Baud_Rate@baud_rate,w,c
  1283  000A6A  6E24               	movwf	??i2_Initialize_Baud_Rate& (0+255),c
  1284  000A6C  6A25               	clrf	(??i2_Initialize_Baud_Rate+1)& (0+255),c
  1285                           
  1286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1287                           ; Switch size 1, requested type "simple"
  1288                           ; Number of cases is 1, Range of values is 0 to 0
  1289                           ; switch strategies available:
  1290                           ; Name         Instructions Cycles
  1291                           ; simple_byte            4     3 (average)
  1292                           ;	Chosen strategy is simple_byte
  1293  000A6E  5025               	movf	??i2_Initialize_Baud_Rate+1,w,c
  1294  000A70  0A00               	xorlw	0	; case 0
  1295  000A72  A4D8               	btfss	status,2,c
  1296  000A74  0012               	return	
  1297                           
  1298                           ; Switch size 1, requested type "simple"
  1299                           ; Number of cases is 3, Range of values is 1 to 3
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte           10     6 (average)
  1303                           ;	Chosen strategy is simple_byte
  1304  000A76  5024               	movf	??i2_Initialize_Baud_Rate,w,c
  1305  000A78  0A01               	xorlw	1	; case 1
  1306  000A7A  B4D8               	btfsc	status,2,c
  1307  000A7C  D7EC               	goto	i2l1082
  1308  000A7E  0A03               	xorlw	3	; case 2
  1309  000A80  B4D8               	btfsc	status,2,c
  1310  000A82  D7EC               	goto	i2l1084
  1311  000A84  0A01               	xorlw	1	; case 3
  1312  000A86  A4D8               	btfss	status,2,c
  1313  000A88  0012               	return	
  1314  000A8A  D7EB               	goto	i2l1086
  1315  000A8C                     __end_ofi2_Initialize_Baud_Rate:
  1316                           	opt callstack 0
  1317                           
  1318                           	psect	rparam
  1319  0000                     
  1320                           	psect	temp
  1321  000041                     btemp:
  1322                           	opt callstack 0
  1323  000041                     	ds	1
  1324  0000                     int$flags	set	btemp
  1325  0000                     wtemp8	set	btemp+1
  1326  0000                     ttemp5	set	btemp+1
  1327  0000                     ttemp6	set	btemp+4
  1328  0000                     ttemp7	set	btemp+8
  1329                           tosu	equ	0xFFF
  1330                           tosh	equ	0xFFE
  1331                           tosl	equ	0xFFD
  1332                           stkptr	equ	0xFFC
  1333                           pclatu	equ	0xFFB
  1334                           pclath	equ	0xFFA
  1335                           pcl	equ	0xFF9
  1336                           tblptru	equ	0xFF8
  1337                           tblptrh	equ	0xFF7
  1338                           tblptrl	equ	0xFF6
  1339                           tablat	equ	0xFF5
  1340                           prodh	equ	0xFF4
  1341                           prodl	equ	0xFF3
  1342                           indf0	equ	0xFEF
  1343                           postinc0	equ	0xFEE
  1344                           postdec0	equ	0xFED
  1345                           preinc0	equ	0xFEC
  1346                           plusw0	equ	0xFEB
  1347                           fsr0h	equ	0xFEA
  1348                           fsr0l	equ	0xFE9
  1349                           wreg	equ	0xFE8
  1350                           indf1	equ	0xFE7
  1351                           postinc1	equ	0xFE6
  1352                           postdec1	equ	0xFE5
  1353                           preinc1	equ	0xFE4
  1354                           plusw1	equ	0xFE3
  1355                           fsr1h	equ	0xFE2
  1356                           fsr1l	equ	0xFE1
  1357                           bsr	equ	0xFE0
  1358                           indf2	equ	0xFDF
  1359                           postinc2	equ	0xFDE
  1360                           postdec2	equ	0xFDD
  1361                           preinc2	equ	0xFDC
  1362                           plusw2	equ	0xFDB
  1363                           fsr2h	equ	0xFDA
  1364                           fsr2l	equ	0xFD9
  1365                           status	equ	0xFD8


Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USART_ReceiveString@buffer	PTR unsigned char  size(2) Largest target is 7
		 -> main@okrec(COMRAM[7]), 

    USART_SendString@str	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_USART_SendString
    _USART_SendString->_USART_SendByte
    _USART_ReceiveString->_USART_ReceiveByte
    _USART_Init->_Initialize_Baud_Rate

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_USART_Init
    i2_USART_Init->i2_Initialize_Baud_Rate

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     939
                                             20 COMRAM     9     9      0
                         _USART_Init
                _USART_ReceiveString
                   _USART_SendString
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                    10     6      4     333
                                             10 COMRAM    10     6      4
                     _USART_SendByte
 ---------------------------------------------------------------------------------
 (2) _USART_SendByte                                       3     1      2      22
                                              7 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _USART_ReceiveString                                  7     3      4     324
                                             11 COMRAM     7     3      4
                  _USART_ReceiveByte
 ---------------------------------------------------------------------------------
 (2) _USART_ReceiveByte                                    4     4      0      60
                                              7 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           2     0      2     213
                                             10 COMRAM     2     0      2
               _Initialize_Baud_Rate
 ---------------------------------------------------------------------------------
 (2) _Initialize_Baud_Rate                                 3     3      0      15
                                              7 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             2     2      0      96
                                              5 COMRAM     2     2      0
                       i2_USART_Init
 ---------------------------------------------------------------------------------
 (4) i2_USART_Init                                         2     0      2      96
                                              3 COMRAM     2     0      2
             i2_Initialize_Baud_Rate
 ---------------------------------------------------------------------------------
 (5) i2_Initialize_Baud_Rate                               3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
     _Initialize_Baud_Rate
   _USART_ReceiveString
     _USART_ReceiveByte
   _USART_SendString
     _USART_SendByte

 _high_isr (ROOT)
   i2_USART_Init
     i2_Initialize_Baud_Rate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      40       1       68.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40       6        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 06 21:11:20 2019

                             l62 0818           __end_of_USART_SendByte 0B04  
                             u20 0964                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                              l830 0A24  
                            l826 0A18                              l834 0A2A  
                            l828 0A1E                              l862 0978  
                            l872 09B0                              l866 0998  
                   __CFG_CPB$OFF 000000                              u300 08DC  
                            u320 08FA                              u450 0822  
                   __CFG_CPD$OFF 000000                              u507 0866  
                            u460 0890                              u497 084C  
  __size_of_Initialize_Baud_Rate 003E                              wreg 000FE8  
                     _TXSTA1bits 000FAC               USART_ReceiveByte@i 002D  
                   __CFG_LVP$OFF 000000                             l1120 09D8  
                           l1124 09F2                             l1132 08BE  
                           l1118 09CE                             l1142 0904  
                           l1222 0872                             l1214 083E  
                           l1152 0940                             l1136 08DC  
                           l1146 0934                             l1076 0AFA  
                           STR_1 0801                             _LATA 000F89  
                           i2l51 0022                             i2l53 005A  
                           i2l57 005E                    __CFG_FCMEN$ON 000000  
                           _main 080C                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0041         __end_of_USART_SendString 0956  
                  __CFG_BORV$285 000000                             start 006A  
                  __CFG_IESO$OFF 000000                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000000                  ?_USART_SendByte 002B  
                          ?_main 0024           i2_Initialize_Baud_Rate 0A4E  
                          _TRISA 000F92                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000                            tablat 000FF5  
                          ttemp5 0042                            ttemp6 0045  
                          ttemp7 0049                            status 000FD8  
                 __CFG_T3CMX$RC0 000000                            wtemp8 0042  
                 __CFG_ICPRT$OFF 000000                      ?_USART_Init 002E  
                __initialization 0B04                     __end_of_main 08B6  
             USART_SendByte@byte 002D                   __CFG_PCLKEN$ON 000000  
                         ??_main 0038                    __activetblptr 000002  
                 __CFG_SDOMX$RB3 000000     __size_of_USART_ReceiveString 005C  
           USART_ReceiveString@i 0034                  __CFG_CCP2MX$RC1 000000  
                         _ANSELA 000F5B                           i2l1082 0A56  
                         i2l1090 0A68                           i2l1084 0A5C  
                         i2l1086 0A62                   __CFG_WDTEN$OFF 000000  
                         _RCREG1 000FAE                           _RCSTA1 000FAB  
                         _OSCCON 000FD3                           _SPBRG1 000FAF  
                 __CFG_WDTPS$256 000000                           _TXREG1 000FAD  
                         _TXSTA1 000FAC                   __CFG_XINST$OFF 000000  
               __end_of_high_isr 006A                   __CFG_STVREN$ON 000000  
                         clear_0 0B0A                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8              __size_of_USART_Init 002C  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 0B10                  __CFG_PBADEN$OFF 000000  
                  ___rparam_used 000001                   __pcstackCOMRAM 0024  
               __CFG_nPWRTEN$OFF 000000            i2USART_Init@baud_rate 0027  
   __end_of_Initialize_Baud_Rate 0A4E                ?_USART_SendString 002E  
  Initialize_Baud_Rate@baud_rate 002D  i2Initialize_Baud_Rate@baud_rate 0026  
                  ?i2_USART_Init 0027          USART_ReceiveString@size 0031  
               ??_USART_SendByte 002D               ??_USART_SendString 0032  
              __CFG_PLLSEL$PLL3X 000000          ?i2_Initialize_Baud_Rate 0024  
                        _OSCCON2 000FD2                          i2u42_40 004C  
                        _OSCTUNE 000F9B                        ?_high_isr 0024  
               __CFG_CFGPLLEN$ON 000000                   ??i2_USART_Init 0029  
                   ??_USART_Init 0030                          __Hparam 0000  
                        __Lparam 0000              _USART_ReceiveString 09B4  
 __end_ofi2_Initialize_Baud_Rate 0A8C         USART_SendString@attempts 0036  
                   __psmallconst 0800                          __pcinit 0B04  
                        __ramtop 0800                          __ptext0 080C  
                        __ptext1 08B6                          __ptext2 0AE4  
                        __ptext3 09B4                          __ptext4 0956  
                        __ptext5 0A8C                          __ptext6 0A10  
                        __ptext8 0AB8                          __ptext9 0A4E  
            USART_SendString@str 002E             ?_USART_ReceiveString 002F  
             __end_of_USART_Init 0AB8                          _tx_byte 0023  
                     ??_high_isr 0029             end_of_initialization 0B10  
                  __Lmediumconst 0000                          postinc0 000FEE  
          ??_USART_ReceiveString 0033             _Initialize_Baud_Rate 0A10  
                      _TRISCbits 000F94                       _rx_counter 0021  
            USART_Init@baud_rate 002E            ?_Initialize_Baud_Rate 0024  
            start_initialization 0B04             __end_ofi2_USART_Init 0AE4  
                __CFG_nLPBOR$OFF 000000       USART_ReceiveByte@temp_char 002C  
              _USART_ReceiveByte 0956                USART_SendString@i 0034  
             ?_USART_ReceiveByte 0024              ??_USART_ReceiveByte 002B  
      __size_of_USART_SendString 00A0                      __pbssCOMRAM 0001  
              __size_of_high_isr 0062        __end_of_USART_ReceiveByte 09B4  
                      __pintcode 0008           ??_Initialize_Baud_Rate 002B  
                    __smallconst 0800                         _BAUDCON1 000FB8  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                       _PMD0bits 000F7E                         _PIR1bits 000F9E  
                       _RCONbits 000FD0            __size_ofi2_USART_Init 002C  
                      _rx_buffer 0001          __size_of_USART_SendByte 0020  
                      main@okrec 003A       __size_of_USART_ReceiveByte 005E  
                       __Hrparam 0000                     i2_USART_Init 0AB8  
                       __Lrparam 0000               __CFG_BOREN$SBORDIS 000000  
    __end_of_USART_ReceiveString 0A10                 _USART_SendString 08B6  
                     _ANSELCbits 000F5D             USART_SendString@size 0030  
                       _high_isr 0008                      _OSCCON2bits 000FD2  
                  __size_of_main 00AA         ??i2_Initialize_Baud_Rate 0024  
                       int$flags 0041                       _INTCONbits 000FF2  
      USART_ReceiveString@buffer 002F                         intlevel2 0000  
                     _RCSTA1bits 000FAB                       _OSCCONbits 000FD3  
           __CFG_CPUDIV$NOCLKDIV 000000                   _USART_SendByte 0AE4  
             __CFG_FOSC$INTOSCIO 000000  __size_ofi2_Initialize_Baud_Rate 003E  
                     _USART_Init 0A8C  
