

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri May 17 19:13:00 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=4,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=4,class=CODE,delta=1
    59                           	psect	text44,global,reloc=4,class=CODE,delta=1
    60                           	psect	text45,global,reloc=4,class=CODE,delta=1
    61                           	psect	text46,global,reloc=4,class=CODE,delta=1
    62                           	psect	text47,global,reloc=4,class=CODE,delta=1
    63                           	psect	text48,global,reloc=4,class=CODE,delta=1
    64                           	psect	text49,global,reloc=4,class=CODE,delta=1
    65                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68  0000                     
    69                           ; Version 2.05
    70                           ; Generated 20/12/2018 GMT
    71                           ; 
    72                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F27K42 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  005348                     __pidataBANK0:
   106                           	opt callstack 0
   107                           
   108                           ;initializer for _CURRENT_LIMIT_AMPLIFIED_DVOLTAGE
   109  005348  0000               	dw	0
   110  00534A  3FC0               	dw	16320
   111                           
   112                           ;initializer for _measur_vol_or_cur
   113  00534C  01                 	db	1
   114                           
   115                           ;initializer for _AD5272_VOLTAGE_ADDRESS
   116  00534D  5E                 	db	94
   117  0000                     _PIR3	set	14755
   118  0000                     _PIE2bits	set	14738
   119  0000                     _PIR2bits	set	14754
   120  0000                     _IPR2bits	set	14722
   121  0000                     _PIE1bits	set	14737
   122  0000                     _IPR1bits	set	14721
   123  0000                     _IPR3bits	set	14723
   124  0000                     _WDTCON0	set	14683
   125  0000                     _WDTCON1	set	14684
   126  0000                     _OSCSTATbits	set	14812
   127  0000                     _OSCEN	set	14813
   128  0000                     _OSCTUNE	set	14814
   129  0000                     _OSCFRQ	set	14815
   130  0000                     _PIR1bits	set	14753
   131  0000                     _PIE3bits	set	14739
   132  0000                     _PIR3bits	set	14755
   133  0000                     _RC7PPS	set	14871
   134  0000                     _U1RXPPS	set	15077
   135  0000                     _ANSELCbits	set	14944
   136  0000                     _RB0PPS	set	14856
   137  0000                     _RB1PPS	set	14857
   138  0000                     _I2C1SDAPPS	set	15074
   139  0000                     _I2C1SCLPPS	set	15073
   140  0000                     _SLRCONBbits	set	14931
   141  0000                     _RB1I2C	set	14938
   142  0000                     _ODCONBbits	set	14930
   143  0000                     _ANSELBbits	set	14928
   144  0000                     _ANSELAbits	set	14912
   145  0000                     _PPSLOCKbits	set	15039
   146  0000                     _U1CON1bits	set	15859
   147  0000                     _U1UIR	set	15864
   148  0000                     _U1ERRIE	set	15866
   149  0000                     _U2CON2	set	15836
   150  0000                     _U1CON1	set	15859
   151  0000                     _U1CON0	set	15858
   152  0000                     _U1BRGL	set	15861
   153  0000                     _U1BRGH	set	15862
   154  0000                     _I2C1ADB1	set	15726
   155  0000                     _I2C1CNT	set	15724
   156  0000                     _I2C1STAT0bits	set	15735
   157  0000                     _I2C1CON0bits	set	15731
   158  0000                     _I2C1PIEbits	set	15738
   159  0000                     _I2C1ERR	set	15734
   160  0000                     _I2C1CLK	set	15739
   161  0000                     _I2C1CON2	set	15733
   162  0000                     _I2C1CON1	set	15732
   163  0000                     _I2C1CON0	set	15731
   164  0000                     _I2C1PIR	set	15737
   165  0000                     _I2C1PIRbits	set	15737
   166  0000                     _I2C1RXB	set	15722
   167  0000                     _I2C1TXB	set	15723
   168  0000                     _U1RXB	set	15848
   169  0000                     _U1TXB	set	15850
   170  0000                     _ADCON0bits	set	16120
   171  0000                     _ADREF	set	16125
   172  0000                     _ADCON2	set	16122
   173  0000                     _ADCON1	set	16121
   174  0000                     _ADCON0	set	16120
   175  0000                     _ADPCH	set	16113
   176  0000                     _ADRESH	set	16112
   177  0000                     _ADRESL	set	16111
   178  0000                     _TRISCbits	set	16324
   179  0000                     _T0CON1	set	16313
   180  0000                     _T0CON0	set	16312
   181  0000                     _LATBbits	set	16315
   182  0000                     _TRISBbits	set	16323
   183  0000                     _TRISAbits	set	16322
   184  0000                     _INTCON0bits	set	16338
   185  0000                     _IVTLOCK	set	16340
   186  0000                     _TMR0H	set	16311
   187  0000                     _TMR0L	set	16310
   188  0000                     _LATAbits	set	16314
   189  0000                     _T0CON0bits	set	16312
   190                           
   191                           	psect	smallconst
   192  002000                     __psmallconst:
   193                           	opt callstack 0
   194  002000  00                 	db	0
   195  002001                     STR_3:
   196  002001  56                 	db	86	;'V'
   197  002002  65                 	db	101	;'e'
   198  002003  72                 	db	114	;'r'
   199  002004  73                 	db	115	;'s'
   200  002005  69                 	db	105	;'i'
   201  002006  6F                 	db	111	;'o'
   202  002007  6E                 	db	110	;'n'
   203  002008  20                 	db	32
   204  002009  31                 	db	49	;'1'
   205  00200A  2E                 	db	46
   206  00200B  30                 	db	48	;'0'
   207  00200C  0A                 	db	10
   208  00200D  54                 	db	84	;'T'
   209  00200E  65                 	db	101	;'e'
   210  00200F  61                 	db	97	;'a'
   211  002010  6D                 	db	109	;'m'
   212  002011  20                 	db	32
   213  002012  35                 	db	53	;'5'
   214  002013  56                 	db	86	;'V'
   215  002014  0A                 	db	10
   216  002015  58                 	db	88	;'X'
   217  002016  61                 	db	97	;'a'
   218  002017  72                 	db	114	;'r'
   219  002018  69                 	db	105	;'i'
   220  002019  73                 	db	115	;'s'
   221  00201A  20                 	db	32
   222  00201B  4B                 	db	75	;'K'
   223  00201C  65                 	db	101	;'e'
   224  00201D  74                 	db	116	;'t'
   225  00201E  6F                 	db	111	;'o'
   226  00201F  67                 	db	103	;'g'
   227  002020  6C                 	db	108	;'l'
   228  002021  6F                 	db	111	;'o'
   229  002022  75                 	db	117	;'u'
   230  002023  2C                 	db	44
   231  002024  56                 	db	86	;'V'
   232  002025  6F                 	db	111	;'o'
   233  002026  75                 	db	117	;'u'
   234  002027  6C                 	db	108	;'l'
   235  002028  61                 	db	97	;'a'
   236  002029  20                 	db	32
   237  00202A  4B                 	db	75	;'K'
   238  00202B  6F                 	db	111	;'o'
   239  00202C  6E                 	db	110	;'n'
   240  00202D  74                 	db	116	;'t'
   241  00202E  6F                 	db	111	;'o'
   242  00202F  74                 	db	116	;'t'
   243  002030  6F                 	db	111	;'o'
   244  002031  6C                 	db	108	;'l'
   245  002032  69                 	db	105	;'i'
   246  002033  00                 	db	0
   247  002034                     STR_4:
   248  002034  43                 	db	67	;'C'
   249  002035  6F                 	db	111	;'o'
   250  002036  6D                 	db	109	;'m'
   251  002037  6D                 	db	109	;'m'
   252  002038  61                 	db	97	;'a'
   253  002039  6E                 	db	110	;'n'
   254  00203A  64                 	db	100	;'d'
   255  00203B  20                 	db	32
   256  00203C  6E                 	db	110	;'n'
   257  00203D  6F                 	db	111	;'o'
   258  00203E  74                 	db	116	;'t'
   259  00203F  20                 	db	32
   260  002040  72                 	db	114	;'r'
   261  002041  65                 	db	101	;'e'
   262  002042  63                 	db	99	;'c'
   263  002043  6F                 	db	111	;'o'
   264  002044  67                 	db	103	;'g'
   265  002045  6E                 	db	110	;'n'
   266  002046  69                 	db	105	;'i'
   267  002047  7A                 	db	122	;'z'
   268  002048  65                 	db	101	;'e'
   269  002049  64                 	db	100	;'d'
   270  00204A  21                 	db	33
   271  00204B  00                 	db	0
   272  00204C                     STR_6:
   273  00204C  42                 	db	66	;'B'
   274  00204D  6C                 	db	108	;'l'
   275  00204E  69                 	db	105	;'i'
   276  00204F  6E                 	db	110	;'n'
   277  002050  6B                 	db	107	;'k'
   278  002051  69                 	db	105	;'i'
   279  002052  6E                 	db	110	;'n'
   280  002053  67                 	db	103	;'g'
   281  002054  20                 	db	32
   282  002055  4C                 	db	76	;'L'
   283  002056  45                 	db	69	;'E'
   284  002057  44                 	db	68	;'D'
   285  002058  20                 	db	32
   286  002059  69                 	db	105	;'i'
   287  00205A  73                 	db	115	;'s'
   288  00205B  20                 	db	32
   289  00205C  4F                 	db	79	;'O'
   290  00205D  46                 	db	70	;'F'
   291  00205E  46                 	db	70	;'F'
   292  00205F  21                 	db	33
   293  002060  00                 	db	0
   294  002061                     STR_5:
   295  002061  42                 	db	66	;'B'
   296  002062  6C                 	db	108	;'l'
   297  002063  69                 	db	105	;'i'
   298  002064  6E                 	db	110	;'n'
   299  002065  6B                 	db	107	;'k'
   300  002066  69                 	db	105	;'i'
   301  002067  6E                 	db	110	;'n'
   302  002068  67                 	db	103	;'g'
   303  002069  20                 	db	32
   304  00206A  4C                 	db	76	;'L'
   305  00206B  45                 	db	69	;'E'
   306  00206C  44                 	db	68	;'D'
   307  00206D  20                 	db	32
   308  00206E  69                 	db	105	;'i'
   309  00206F  73                 	db	115	;'s'
   310  002070  20                 	db	32
   311  002071  4F                 	db	79	;'O'
   312  002072  4E                 	db	78	;'N'
   313  002073  21                 	db	33
   314  002074  00                 	db	0
   315  002075                     STR_8:
   316  002075  43                 	db	67	;'C'
   317  002076  75                 	db	117	;'u'
   318  002077  72                 	db	114	;'r'
   319  002078  72                 	db	114	;'r'
   320  002079  65                 	db	101	;'e'
   321  00207A  6E                 	db	110	;'n'
   322  00207B  74                 	db	116	;'t'
   323  00207C  20                 	db	32
   324  00207D  4C                 	db	76	;'L'
   325  00207E  69                 	db	105	;'i'
   326  00207F  6D                 	db	109	;'m'
   327  002080  69                 	db	105	;'i'
   328  002081  74                 	db	116	;'t'
   329  002082  20                 	db	32
   330  002083  73                 	db	115	;'s'
   331  002084  65                 	db	101	;'e'
   332  002085  74                 	db	116	;'t'
   333  002086  21                 	db	33
   334  002087  00                 	db	0
   335  002088                     STR_7:
   336  002088  56                 	db	86	;'V'
   337  002089  6F                 	db	111	;'o'
   338  00208A  6C                 	db	108	;'l'
   339  00208B  74                 	db	116	;'t'
   340  00208C  61                 	db	97	;'a'
   341  00208D  67                 	db	103	;'g'
   342  00208E  65                 	db	101	;'e'
   343  00208F  20                 	db	32
   344  002090  73                 	db	115	;'s'
   345  002091  65                 	db	101	;'e'
   346  002092  74                 	db	116	;'t'
   347  002093  21                 	db	33
   348  002094  00                 	db	0
   349  002095                     STR_10:
   350  002095  49                 	db	73	;'I'
   351  002096  4E                 	db	78	;'N'
   352  002097  46                 	db	70	;'F'
   353  002098  00                 	db	0
   354  002099                     STR_14:
   355  002099  4E                 	db	78	;'N'
   356  00209A  41                 	db	65	;'A'
   357  00209B  4E                 	db	78	;'N'
   358  00209C  00                 	db	0
   359  00209D                     STR_11:
   360  00209D  69                 	db	105	;'i'
   361  00209E  6E                 	db	110	;'n'
   362  00209F  66                 	db	102	;'f'
   363  0020A0  00                 	db	0
   364  0020A1                     STR_15:
   365  0020A1  6E                 	db	110	;'n'
   366  0020A2  61                 	db	97	;'a'
   367  0020A3  6E                 	db	110	;'n'
   368  0020A4  00                 	db	0
   369  0020A5                     STR_18:
   370  0020A5  6C                 	db	108	;'l'
   371  0020A6  66                 	db	102	;'f'
   372  0020A7  00                 	db	0
   373  0020A8                     STR_1:
   374  0020A8  25                 	db	37
   375  0020A9  66                 	db	102	;'f'
   376  0020AA  00                 	db	0
   377  0000                     
   378                           ; #config settings
   379  0020AB  00                 	db	0	; dummy byte at the end
   380  0000                     
   381                           	psect	cinit
   382  004FCC                     __pcinit:
   383                           	opt callstack 0
   384  004FCC                     start_initialization:
   385                           	opt callstack 0
   386  004FCC                     __initialization:
   387                           	opt callstack 0
   388                           
   389                           ; Initialize objects allocated to BANK0 (6 bytes)
   390                           ; load TBLPTR registers with __pidataBANK0
   391  004FCC  0E48               	movlw	low __pidataBANK0
   392  004FCE  6EF6               	movwf	tblptrl,c
   393  004FD0  0E53               	movlw	high __pidataBANK0
   394  004FD2  6EF7               	movwf	tblptrh,c
   395  004FD4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   396  004FD6  6EF8               	movwf	tblptru,c
   397  004FD8  EE00  F0FA         	lfsr	0,__pdataBANK0
   398  004FDC  EE10 F006          	lfsr	1,6
   399  004FE0                     copy_data0:
   400  004FE0  0009               	tblrd		*+
   401  004FE2  006F FFD7 FFEE     	movff	tablat,postinc0
   402  004FE8  50E5               	movf	postdec1,w,c
   403  004FEA  50E1               	movf	fsr1l,w,c
   404  004FEC  E1F9               	bnz	copy_data0
   405                           
   406                           ; Clear objects allocated to BANK1 (175 bytes)
   407  004FEE  EE00  F100         	lfsr	0,__pbssBANK1
   408  004FF2  0EAF               	movlw	175
   409  004FF4                     clear_0:
   410  004FF4  6AEE               	clrf	postinc0,c
   411  004FF6  06E8               	decf	wreg,f,c
   412  004FF8  E1FD               	bnz	clear_0
   413                           
   414                           ; Clear objects allocated to BANK0 (52 bytes)
   415  004FFA  EE00  F0C6         	lfsr	0,__pbssBANK0
   416  004FFE  0E34               	movlw	52
   417  005000                     clear_1:
   418  005000  6AEE               	clrf	postinc0,c
   419  005002  06E8               	decf	wreg,f,c
   420  005004  E1FD               	bnz	clear_1
   421                           
   422                           ; Clear objects allocated to COMRAM (5 bytes)
   423  005006  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   424  005008  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   425  00500A  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   426  00500C  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   427  00500E  6A56               	clrf	__pbssCOMRAM& (0+255),c
   428                           
   429                           ;
   430                           ; Setup IVTBASE
   431                           ;
   432  005010  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   433  005012  6ED5               	movwf	213,c
   434  005014  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   435  005016  6ED6               	movwf	214,c
   436  005018  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   437  00501A  6ED7               	movwf	215,c
   438  00501C                     end_of_initialization:
   439                           	opt callstack 0
   440  00501C                     __end_of__initialization:
   441                           	opt callstack 0
   442  00501C  0100               	movlb	0
   443  00501E  EF19  F022         	goto	_main	;jump to C main() function
   444                           
   445                           	psect	bssCOMRAM
   446  000056                     __pbssCOMRAM:
   447                           	opt callstack 0
   448  000056                     _prec:
   449                           	opt callstack 0
   450  000056                     	ds	2
   451  000058                     _flags:
   452                           	opt callstack 0
   453  000058                     	ds	2
   454  00005A                     _rx_counter:
   455                           	opt callstack 0
   456  00005A                     	ds	1
   457                           
   458                           	psect	bssBANK0
   459  0000C6                     __pbssBANK0:
   460                           	opt callstack 0
   461  0000C6                     _rx_buffer:
   462                           	opt callstack 0
   463  0000C6                     	ds	32
   464  0000E6                     _nout:
   465                           	opt callstack 0
   466  0000E6                     	ds	2
   467  0000E8                     _width:
   468                           	opt callstack 0
   469  0000E8                     	ds	2
   470  0000EA                     _ADC_CURRENT_RESULT:
   471                           	opt callstack 0
   472  0000EA                     	ds	2
   473  0000EC                     _ADC_VOLTAGE_RESULT:
   474                           	opt callstack 0
   475  0000EC                     	ds	2
   476  0000EE                     _COMMAND_WRITE_NUMBER:
   477                           	opt callstack 0
   478  0000EE                     	ds	2
   479  0000F0                     _led_enable:
   480                           	opt callstack 0
   481  0000F0                     	ds	1
   482  0000F1                     _counter_timer0:
   483                           	opt callstack 0
   484  0000F1                     	ds	1
   485  0000F2                     _I2C_STOP_DETECTED:
   486                           	opt callstack 0
   487  0000F2                     	ds	1
   488  0000F3                     _I2C_RX_COUNTER:
   489                           	opt callstack 0
   490  0000F3                     	ds	1
   491  0000F4                     _I2C_TX_COUNTER:
   492                           	opt callstack 0
   493  0000F4                     	ds	1
   494  0000F5                     _COMMAND:
   495                           	opt callstack 0
   496  0000F5                     	ds	1
   497  0000F6                     _COMMAND_WR:
   498                           	opt callstack 0
   499  0000F6                     	ds	1
   500  0000F7                     _tx_byte:
   501                           	opt callstack 0
   502  0000F7                     	ds	1
   503  0000F8                     _AD5272_COMMANDS:
   504                           	opt callstack 0
   505  0000F8                     	ds	2
   506                           
   507                           	psect	dataBANK0
   508  0000FA                     __pdataBANK0:
   509                           	opt callstack 0
   510  0000FA                     _CURRENT_LIMIT_AMPLIFIED_DVOLTAGE:
   511                           	opt callstack 0
   512  0000FA                     	ds	4
   513  0000FE                     _measur_vol_or_cur:
   514                           	opt callstack 0
   515  0000FE                     	ds	1
   516  0000FF                     _AD5272_VOLTAGE_ADDRESS:
   517                           	opt callstack 0
   518  0000FF                     	ds	1
   519                           
   520                           	psect	bssBANK1
   521  000100                     __pbssBANK1:
   522                           	opt callstack 0
   523  000100                     _I2C_RX_BUFFER:
   524                           	opt callstack 0
   525  000100                     	ds	10
   526  00010A                     _I2C_TX_BUFFER:
   527                           	opt callstack 0
   528  00010A                     	ds	10
   529  000114                     floorf@F524:
   530                           	opt callstack 0
   531  000114                     	ds	4
   532  000118                     ___fpclassifyf@F463:
   533                           	opt callstack 0
   534  000118                     	ds	4
   535  00011C                     _CURRENT_REAL_AMPLIFIED_DVOLTAGE:
   536                           	opt callstack 0
   537  00011C                     	ds	4
   538  000120                     _dbuf:
   539                           	opt callstack 0
   540  000120                     	ds	80
   541  000170                     _tx_buffer:
   542                           	opt callstack 0
   543  000170                     	ds	55
   544  0001A7                     _COMMAND_CURRENT_LIMIT:
   545                           	opt callstack 0
   546  0001A7                     	ds	8
   547                           
   548                           	psect	cstackBANK1
   549  0001AF                     __pcstackBANK1:
   550                           	opt callstack 0
   551  0001AF                     _UART_handler$2468:
   552                           	opt callstack 0
   553                           
   554                           ; 4 bytes @ 0x0
   555  0001AF                     	ds	4
   556                           
   557                           	psect	cstackBANK0
   558  000060                     __pcstackBANK0:
   559                           	opt callstack 0
   560  000060                     efgtoa@ou:
   561                           	opt callstack 0
   562                           
   563                           ; 4 bytes @ 0x0
   564  000060                     	ds	4
   565  000064                     _efgtoa$1671:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0x4
   569  000064                     	ds	2
   570  000066                     _efgtoa$1672:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x6
   574  000066                     	ds	2
   575  000068                     _efgtoa$1677:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x8
   579  000068                     	ds	2
   580  00006A                     _efgtoa$1681:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0xA
   584  00006A                     	ds	2
   585  00006C                     _efgtoa$1682:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0xC
   589  00006C                     	ds	2
   590  00006E                     _efgtoa$1683:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0xE
   594  00006E                     	ds	2
   595  000070                     efgtoa@t:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0x10
   599  000070                     	ds	2
   600  000072                     efgtoa@pp:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0x12
   604  000072                     	ds	2
   605  000074                     efgtoa@m:
   606                           	opt callstack 0
   607                           
   608                           ; 2 bytes @ 0x14
   609  000074                     	ds	2
   610  000076                     efgtoa@ne:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x16
   614  000076                     	ds	2
   615  000078                     efgtoa@d:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0x18
   619  000078                     	ds	2
   620  00007A                     efgtoa@sign:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0x1A
   624  00007A                     	ds	2
   625  00007C                     efgtoa@p:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x1C
   629  00007C                     	ds	2
   630  00007E                     efgtoa@nmode:
   631                           	opt callstack 0
   632                           
   633                           ; 1 bytes @ 0x1E
   634  00007E                     	ds	1
   635  00007F                     efgtoa@w:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x1F
   639  00007F                     	ds	2
   640  000081                     efgtoa@mode:
   641                           	opt callstack 0
   642                           
   643                           ; 1 bytes @ 0x21
   644  000081                     	ds	1
   645  000082                     efgtoa@h:
   646                           	opt callstack 0
   647                           
   648                           ; 4 bytes @ 0x22
   649  000082                     	ds	4
   650  000086                     efgtoa@l:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0x26
   654  000086                     	ds	4
   655  00008A                     efgtoa@i:
   656                           	opt callstack 0
   657                           
   658                           ; 2 bytes @ 0x2A
   659  00008A                     	ds	2
   660  00008C                     efgtoa@g:
   661                           	opt callstack 0
   662                           
   663                           ; 4 bytes @ 0x2C
   664  00008C                     	ds	4
   665  000090                     efgtoa@e:
   666                           	opt callstack 0
   667                           
   668                           ; 2 bytes @ 0x30
   669  000090                     	ds	2
   670  000092                     efgtoa@n:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x32
   674  000092                     	ds	2
   675  000094                     efgtoa@u:
   676                           	opt callstack 0
   677                           
   678                           ; 4 bytes @ 0x34
   679  000094                     	ds	4
   680  000098                     ?_vfpfcnvrt:
   681                           	opt callstack 0
   682  000098                     vfpfcnvrt@fp:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x38
   686  000098                     	ds	2
   687  00009A                     vfpfcnvrt@fmt:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x3A
   691  00009A                     	ds	2
   692  00009C                     vfpfcnvrt@ap:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x3C
   696  00009C                     	ds	2
   697  00009E                     _vfpfcnvrt$1700:
   698                           	opt callstack 0
   699                           
   700                           ; 2 bytes @ 0x3E
   701  00009E                     	ds	2
   702  0000A0                     vfpfcnvrt@f:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0x40
   706  0000A0                     	ds	4
   707  0000A4                     vfpfcnvrt@ct:
   708                           	opt callstack 0
   709                           
   710                           ; 3 bytes @ 0x44
   711  0000A4                     	ds	3
   712  0000A7                     vfpfcnvrt@c:
   713                           	opt callstack 0
   714                           
   715                           ; 1 bytes @ 0x47
   716  0000A7                     	ds	1
   717  0000A8                     ?_vfprintf:
   718                           	opt callstack 0
   719  0000A8                     vfprintf@fp:
   720                           	opt callstack 0
   721                           
   722                           ; 2 bytes @ 0x48
   723  0000A8                     	ds	2
   724  0000AA                     vfprintf@fmt:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x4A
   728  0000AA                     	ds	2
   729  0000AC                     vfprintf@ap:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x4C
   733  0000AC                     	ds	2
   734  0000AE                     vfprintf@cfmt:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x4E
   738  0000AE                     	ds	2
   739  0000B0                     ?_sprintf:
   740                           	opt callstack 0
   741  0000B0                     sprintf@s:
   742                           	opt callstack 0
   743                           
   744                           ; 2 bytes @ 0x50
   745  0000B0                     	ds	2
   746  0000B2                     sprintf@fmt:
   747                           	opt callstack 0
   748                           
   749                           ; 2 bytes @ 0x52
   750  0000B2                     	ds	8
   751  0000BA                     sprintf@ap:
   752                           	opt callstack 0
   753                           
   754                           ; 2 bytes @ 0x5A
   755  0000BA                     	ds	2
   756  0000BC                     sprintf@f:
   757                           	opt callstack 0
   758                           
   759                           ; 6 bytes @ 0x5C
   760  0000BC                     	ds	6
   761  0000C2                     ??_UART_handler:
   762                           
   763                           ; 1 bytes @ 0x62
   764  0000C2                     	ds	2
   765  0000C4                     ??_main:
   766                           
   767                           ; 1 bytes @ 0x64
   768  0000C4                     	ds	2
   769                           
   770                           	psect	cstackCOMRAM
   771  000001                     __pcstackCOMRAM:
   772                           	opt callstack 0
   773  000001                     ADC_Start@pin:
   774                           	opt callstack 0
   775  000001                     
   776                           ; 1 bytes @ 0x0
   777  000001                     	ds	1
   778  000002                     ??_ADC_ISR:
   779                           
   780                           ; 1 bytes @ 0x1
   781  000002                     	ds	2
   782  000004                     ADC_ISR@adc_result:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x3
   786  000004                     	ds	2
   787  000006                     ??_UART1_Init:
   788  000006                     ?_GetStringSize:
   789                           	opt callstack 0
   790  000006                     ?_strlen:
   791                           	opt callstack 0
   792  000006                     ?___fpclassifyf:
   793                           	opt callstack 0
   794  000006                     ?_isupper:
   795                           	opt callstack 0
   796  000006                     ?_strncmp:
   797                           	opt callstack 0
   798  000006                     ?___wmul:
   799                           	opt callstack 0
   800  000006                     ?___awdiv:
   801                           	opt callstack 0
   802  000006                     ?___awmod:
   803                           	opt callstack 0
   804  000006                     ?___fldiv:
   805                           	opt callstack 0
   806  000006                     ?___flneg:
   807                           	opt callstack 0
   808  000006                     ?___fltol:
   809                           	opt callstack 0
   810  000006                     ?___xxtofl:
   811                           	opt callstack 0
   812  000006                     UART1_SendByte@byte:
   813                           	opt callstack 0
   814  000006                     memset@st:
   815                           	opt callstack 0
   816  000006                     I2C_Transmit@buffer:
   817                           	opt callstack 0
   818  000006                     ___wmul@multiplier:
   819                           	opt callstack 0
   820  000006                     ___awdiv@dividend:
   821                           	opt callstack 0
   822  000006                     ___awmod@dividend:
   823                           	opt callstack 0
   824  000006                     isupper@c:
   825                           	opt callstack 0
   826  000006                     fputc@c:
   827                           	opt callstack 0
   828  000006                     strcpy@dest:
   829                           	opt callstack 0
   830  000006                     strlen@s:
   831                           	opt callstack 0
   832  000006                     strncmp@_l:
   833                           	opt callstack 0
   834  000006                     ___fleq@ff1:
   835                           	opt callstack 0
   836  000006                     ___flneg@f1:
   837                           	opt callstack 0
   838  000006                     ___fltol@f1:
   839                           	opt callstack 0
   840  000006                     ___fldiv@b:
   841                           	opt callstack 0
   842  000006                     ___xxtofl@val:
   843                           	opt callstack 0
   844  000006                     ___fpclassifyf@x:
   845                           	opt callstack 0
   846                           
   847                           ; 4 bytes @ 0x5
   848  000006                     	ds	2
   849  000008                     ??_isupper:
   850  000008                     memset@x:
   851                           	opt callstack 0
   852  000008                     I2C_Transmit@buffer_size:
   853                           	opt callstack 0
   854  000008                     UART1_Init@baud_rate:
   855                           	opt callstack 0
   856  000008                     GetStringSize@i:
   857                           	opt callstack 0
   858  000008                     ___wmul@multiplicand:
   859                           	opt callstack 0
   860  000008                     ___awdiv@divisor:
   861                           	opt callstack 0
   862  000008                     ___awmod@divisor:
   863                           	opt callstack 0
   864  000008                     fputc@fp:
   865                           	opt callstack 0
   866  000008                     strcpy@src:
   867                           	opt callstack 0
   868  000008                     strlen@a:
   869                           	opt callstack 0
   870  000008                     strncmp@_r:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x7
   874  000008                     	ds	1
   875  000009                     I2C_Transmit@address:
   876                           	opt callstack 0
   877  000009                     memset@size:
   878                           	opt callstack 0
   879                           
   880                           ; 2 bytes @ 0x8
   881  000009                     	ds	1
   882  00000A                     ??_I2C_Transmit:
   883  00000A                     ??_fputc:
   884  00000A                     ??___fpclassifyf:
   885  00000A                     ??_strcpy:
   886  00000A                     ??___fltol:
   887  00000A                     ??___xxtofl:
   888  00000A                     ___awdiv@counter:
   889                           	opt callstack 0
   890  00000A                     ___awmod@counter:
   891                           	opt callstack 0
   892  00000A                     UART1_SendString@str:
   893                           	opt callstack 0
   894  00000A                     ___wmul@product:
   895                           	opt callstack 0
   896  00000A                     strncmp@n:
   897                           	opt callstack 0
   898  00000A                     ___fleq@ff2:
   899                           	opt callstack 0
   900  00000A                     ___fldiv@a:
   901                           	opt callstack 0
   902                           
   903                           ; 4 bytes @ 0x9
   904  00000A                     	ds	1
   905  00000B                     ??_memset:
   906  00000B                     ___awdiv@sign:
   907                           	opt callstack 0
   908  00000B                     ___awmod@sign:
   909                           	opt callstack 0
   910                           
   911                           ; 1 bytes @ 0xA
   912  00000B                     	ds	1
   913  00000C                     ??_UART1_ReceiveCommand:
   914  00000C                     ??_strncmp:
   915  00000C                     ?_tolower:
   916                           	opt callstack 0
   917  00000C                     memset@i:
   918                           	opt callstack 0
   919  00000C                     UART1_SendString@size:
   920                           	opt callstack 0
   921  00000C                     ___awdiv@quotient:
   922                           	opt callstack 0
   923  00000C                     strcpy@s:
   924                           	opt callstack 0
   925  00000C                     tolower@c:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0xB
   929  00000C                     	ds	1
   930  00000D                     strncmp@l:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0xC
   934  00000D                     	ds	1
   935  00000E                     ??_tolower:
   936  00000E                     ??___fldiv:
   937  00000E                     ??___fleq:
   938  00000E                     UART1_ReceiveCommand@i:
   939                           	opt callstack 0
   940  00000E                     ___fltol@sign1:
   941                           	opt callstack 0
   942  00000E                     ___xxtofl@sign:
   943                           	opt callstack 0
   944  00000E                     UART1_SendString@i:
   945                           	opt callstack 0
   946  00000E                     ___fpclassifyf@e:
   947                           	opt callstack 0
   948  00000E                     strcpy@d:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0xD
   952  00000E                     	ds	1
   953  00000F                     ___fltol@exp1:
   954                           	opt callstack 0
   955  00000F                     ___xxtofl@exp:
   956                           	opt callstack 0
   957  00000F                     fputs@s:
   958                           	opt callstack 0
   959  00000F                     strncmp@r:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0xE
   963  00000F                     	ds	1
   964  000010                     UART1_SendString@attempts:
   965                           	opt callstack 0
   966  000010                     ___xxtofl@arg:
   967                           	opt callstack 0
   968  000010                     ___fpclassifyf@u:
   969                           	opt callstack 0
   970                           
   971                           ; 4 bytes @ 0xF
   972  000010                     	ds	1
   973  000011                     I2C_Transmit@i:
   974                           	opt callstack 0
   975  000011                     fputs@fp:
   976                           	opt callstack 0
   977                           
   978                           ; 2 bytes @ 0x10
   979  000011                     	ds	1
   980  000012                     I2C_handler@value:
   981                           	opt callstack 0
   982  000012                     _tolower$2255:
   983                           	opt callstack 0
   984  000012                     ___fldiv@rem:
   985                           	opt callstack 0
   986                           
   987                           ; 4 bytes @ 0x11
   988  000012                     	ds	1
   989  000013                     fputs@c:
   990                           	opt callstack 0
   991                           
   992                           ; 1 bytes @ 0x12
   993  000013                     	ds	1
   994  000014                     ?___flmul:
   995                           	opt callstack 0
   996  000014                     fputs@i:
   997                           	opt callstack 0
   998  000014                     ___flmul@b:
   999                           	opt callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x13
  1002  000014                     	ds	2
  1003  000016                     ?_pad:
  1004                           	opt callstack 0
  1005  000016                     ___fldiv@sign:
  1006                           	opt callstack 0
  1007  000016                     pad@fp:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x15
  1011  000016                     	ds	1
  1012  000017                     ___fldiv@new_exp:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x16
  1016  000017                     	ds	1
  1017  000018                     pad@buf:
  1018                           	opt callstack 0
  1019  000018                     ___flmul@a:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x17
  1023  000018                     	ds	1
  1024  000019                     ___fldiv@grs:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x18
  1028  000019                     	ds	1
  1029  00001A                     pad@p:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x19
  1033  00001A                     	ds	2
  1034  00001C                     ??___flmul:
  1035  00001C                     ??_pad:
  1036                           
  1037                           ; 1 bytes @ 0x1B
  1038  00001C                     	ds	1
  1039  00001D                     ___fldiv@bexp:
  1040                           	opt callstack 0
  1041  00001D                     pad@i:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x1C
  1045  00001D                     	ds	1
  1046  00001E                     ___fldiv@aexp:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x1D
  1050  00001E                     	ds	1
  1051  00001F                     ?_floorf:
  1052                           	opt callstack 0
  1053  00001F                     pad@w:
  1054                           	opt callstack 0
  1055  00001F                     floorf@x:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x1E
  1059  00001F                     	ds	1
  1060  000020                     ___flmul@sign:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x1F
  1064  000020                     	ds	1
  1065  000021                     ___flmul@aexp:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x20
  1069  000021                     	ds	1
  1070  000022                     ___flmul@grs:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x21
  1074  000022                     	ds	1
  1075  000023                     ??_floorf:
  1076                           
  1077                           ; 1 bytes @ 0x22
  1078  000023                     	ds	3
  1079  000026                     ___flmul@bexp:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x25
  1083  000026                     	ds	1
  1084  000027                     ___flmul@prod:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x26
  1088  000027                     	ds	2
  1089  000029                     floorf@m:
  1090                           	opt callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x28
  1093  000029                     	ds	2
  1094  00002B                     ___flmul@temp:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x2A
  1098  00002B                     	ds	2
  1099  00002D                     ?___fladd:
  1100                           	opt callstack 0
  1101  00002D                     floorf@e:
  1102                           	opt callstack 0
  1103  00002D                     ___flge@ff1:
  1104                           	opt callstack 0
  1105  00002D                     ___fladd@b:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x2C
  1109  00002D                     	ds	2
  1110  00002F                     floorf@u:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x2E
  1114  00002F                     	ds	2
  1115  000031                     ___flge@ff2:
  1116                           	opt callstack 0
  1117  000031                     ___fladd@a:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x30
  1121  000031                     	ds	4
  1122  000035                     ??___fladd:
  1123  000035                     ??___flge:
  1124                           
  1125                           ; 1 bytes @ 0x34
  1126  000035                     	ds	4
  1127  000039                     ___fladd@signs:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x38
  1131  000039                     	ds	1
  1132  00003A                     ___fladd@aexp:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x39
  1136  00003A                     	ds	1
  1137  00003B                     ___fladd@bexp:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x3A
  1141  00003B                     	ds	1
  1142  00003C                     ___fladd@grs:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x3B
  1146  00003C                     	ds	1
  1147  00003D                     ?_stof:
  1148                           	opt callstack 0
  1149  00003D                     ?___flsub:
  1150                           	opt callstack 0
  1151  00003D                     stof@s:
  1152                           	opt callstack 0
  1153  00003D                     ___flsub@b:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x3C
  1157  00003D                     	ds	4
  1158  000041                     ??_stof:
  1159  000041                     ___flsub@a:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x40
  1163  000041                     	ds	1
  1164  000042                     stof@point_seen:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x41
  1168  000042                     	ds	2
  1169  000044                     stof@rez:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x43
  1173  000044                     	ds	1
  1174  000045                     ?_efgtoa:
  1175                           	opt callstack 0
  1176  000045                     efgtoa@fp:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x44
  1180  000045                     	ds	2
  1181  000047                     efgtoa@f:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x46
  1185  000047                     	ds	1
  1186  000048                     stof@fact:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x47
  1190  000048                     	ds	3
  1191  00004B                     efgtoa@c:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x4A
  1195  00004B                     	ds	1
  1196  00004C                     ??_efgtoa:
  1197  00004C                     stof@d:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x4B
  1201  00004C                     	ds	5
  1202  000051                     ??_vfpfcnvrt:
  1203                           
  1204                           ; 1 bytes @ 0x50
  1205  000051                     	ds	4
  1206  000055                     main@receive_command:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x54
  1210  000055                     	ds	1
  1211                           
  1212 ;;
  1213 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1214 ;;
  1215 ;; *************** function _main *****************
  1216 ;; Defined at:
  1217 ;;		line 131 in file "main.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  receive_comm    1   84[COMRAM] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1233 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1234 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1235 ;;Total ram usage:        3 bytes
  1236 ;; Hardware stack levels required when called:   11
  1237 ;; This function calls:
  1238 ;;		_ADC_Init
  1239 ;;		_I2C_Init
  1240 ;;		_I2C_Transmit
  1241 ;;		_UART1_Init
  1242 ;;		_UART1_ReceiveCommand
  1243 ;;		_UART_handler
  1244 ;;		___flge
  1245 ;;		___flmul
  1246 ;;		___xxtofl
  1247 ;;		_timer0_init
  1248 ;; This function is called by:
  1249 ;;		Startup code after reset
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text0
  1254  004432                     __ptext0:
  1255                           	opt callstack 0
  1256  004432                     _main:
  1257                           	opt callstack 20
  1258                           
  1259                           ;main.c: 132:     OSCFRQ = 0x08;
  1260                           
  1261                           ;incstack = 0
  1262  004432  0E08               	movlw	8
  1263  004434  0139               	movlb	57	; () banked
  1264  004436  6FDF               	movwf	223,b	;volatile
  1265                           
  1266                           ;main.c: 133:     OSCTUNE = 0x00;
  1267  004438  0E00               	movlw	0
  1268  00443A  6FDE               	movwf	222,b	;volatile
  1269                           
  1270                           ;main.c: 134:     OSCEN = 0x40;
  1271  00443C  0E40               	movlw	64
  1272  00443E  6FDD               	movwf	221,b	;volatile
  1273  004440                     l209:
  1274                           
  1275                           ; BSR set to: 57
  1276  004440  BDDC               	btfsc	220,6,b	;volatile
  1277  004442  D002               	goto	u10130
  1278                           
  1279                           ; BSR set to: 57
  1280  004444  A5DC               	btfss	220,2,b	;volatile
  1281  004446  D7FC               	goto	l209
  1282  004448                     u10130:
  1283                           
  1284                           ; BSR set to: 57
  1285                           ;main.c: 141:     IVTLOCK = 0x01;
  1286  004448  0E01               	movlw	1
  1287  00444A  6ED4               	movwf	16340,c	;volatile
  1288                           
  1289                           ;main.c: 144:     WDTCON1 = 0x07;
  1290  00444C  0E07               	movlw	7
  1291  00444E  6F5C               	movwf	92,b	;volatile
  1292                           
  1293                           ;main.c: 145:     WDTCON0 = 0x3F;
  1294  004450  0E3F               	movlw	63
  1295  004452  6F5B               	movwf	91,b	;volatile
  1296                           
  1297                           ; BSR set to: 57
  1298                           ;main.c: 148:     PPSLOCKbits.PPSLOCKED = 0;
  1299  004454  013A               	movlb	58	; () banked
  1300  004456  91BF               	bcf	191,0,b	;volsfr
  1301                           
  1302                           ; BSR set to: 58
  1303                           ;main.c: 151:     timer0_init();
  1304  004458  EC35  F029         	call	_timer0_init	;wreg free
  1305                           
  1306                           ;main.c: 152:     UART1_Init(1);
  1307  00445C  0E01               	movlw	1
  1308  00445E  EC42  F026         	call	_UART1_Init
  1309                           
  1310                           ;main.c: 153:     ADC_Init();
  1311  004462  EC46  F029         	call	_ADC_Init	;wreg free
  1312                           
  1313                           ;main.c: 154:     I2C_Init();
  1314  004466  ECF4  F026         	call	_I2C_Init	;wreg free
  1315                           
  1316                           ;main.c: 156:     INTCON0bits.GIEH = 1;
  1317  00446A  8ED2               	bsf	16338,7,c	;volatile
  1318                           
  1319                           ;main.c: 157:     INTCON0bits.GIEL = 1;
  1320  00446C  8CD2               	bsf	16338,6,c	;volatile
  1321                           
  1322                           ;main.c: 158:     INTCON0bits.IPEN = 1;
  1323  00446E  8AD2               	bsf	16338,5,c	;volatile
  1324                           
  1325                           ;main.c: 161:     TRISAbits.TRISA0 = 0;
  1326  004470  90C2               	bcf	16322,0,c	;volatile
  1327                           
  1328                           ;main.c: 162:     ANSELAbits.ANSELA0 = 1;
  1329  004472  013A               	movlb	58	; () banked
  1330  004474  8140               	bsf	64,0,b	;volatile
  1331                           
  1332                           ; BSR set to: 58
  1333                           ;main.c: 163:     led_enable = 1;
  1334  004476  0E01               	movlw	1
  1335  004478  0100               	movlb	0	; () banked
  1336  00447A  6FF0               	movwf	_led_enable& (0+255),b
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;main.c: 165:     TRISAbits.TRISA1 = 0;
  1340  00447C  92C2               	bcf	16322,1,c	;volatile
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;main.c: 166:     ANSELAbits.ANSELA1 = 1;
  1344  00447E  013A               	movlb	58	; () banked
  1345  004480  8340               	bsf	64,1,b	;volatile
  1346                           
  1347                           ; BSR set to: 58
  1348                           ;main.c: 167:     LATAbits.LA1 = 0;
  1349  004482  92BA               	bcf	16314,1,c	;volatile
  1350                           
  1351                           ; BSR set to: 58
  1352                           ;main.c: 169:     TRISBbits.TRISB2 = 0;
  1353  004484  94C3               	bcf	16323,2,c	;volatile
  1354                           
  1355                           ; BSR set to: 58
  1356                           ;main.c: 170:     TRISBbits.TRISB3 = 0;
  1357  004486  96C3               	bcf	16323,3,c	;volatile
  1358                           
  1359                           ; BSR set to: 58
  1360                           ;main.c: 171:     LATBbits.LB2 = 1;
  1361  004488  84BB               	bsf	16315,2,c	;volatile
  1362                           
  1363                           ; BSR set to: 58
  1364                           ;main.c: 172:     LATBbits.LB3 = 1;
  1365  00448A  86BB               	bsf	16315,3,c	;volatile
  1366                           
  1367                           ; BSR set to: 58
  1368                           ;main.c: 174:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1369  00448C  0EA3               	movlw	163
  1370  00448E  0100               	movlb	0	; () banked
  1371  004490  6FC5               	movwf	(??_main+1)& (0+255),b
  1372  004492  0E57               	movlw	87
  1373  004494  6FC4               	movwf	??_main& (0+255),b
  1374  004496  0E02               	movlw	2
  1375  004498                     u10177:
  1376  004498  2EE8               	decfsz	wreg,f,c
  1377  00449A  D7FE               	bra	u10177
  1378  00449C  2FC4               	decfsz	??_main& (0+255),f,b
  1379  00449E  D7FC               	bra	u10177
  1380  0044A0  2FC5               	decfsz	(??_main+1)& (0+255),f,b
  1381  0044A2  D7FA               	bra	u10177
  1382  0044A4  F000               	nop	
  1383                           
  1384                           ;main.c: 176:     AD5272_COMMANDS[0] = 0x1C;
  1385  0044A6  0E1C               	movlw	28
  1386  0044A8  0100               	movlb	0	; () banked
  1387  0044AA  6FF8               	movwf	_AD5272_COMMANDS& (0+255),b
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;main.c: 177:     AD5272_COMMANDS[1] = 0x02;
  1391  0044AC  0E02               	movlw	2
  1392  0044AE  6FF9               	movwf	(_AD5272_COMMANDS+1)& (0+255),b
  1393                           
  1394                           ; BSR set to: 0
  1395  0044B0  0EF8               	movlw	low _AD5272_COMMANDS
  1396  0044B2  6E06               	movwf	I2C_Transmit@buffer,c
  1397  0044B4  0E00               	movlw	high _AD5272_COMMANDS
  1398  0044B6  6E07               	movwf	I2C_Transmit@buffer+1,c
  1399  0044B8  0E02               	movlw	2
  1400  0044BA  6E08               	movwf	I2C_Transmit@buffer_size,c
  1401  0044BC  0E5E               	movlw	94
  1402  0044BE  6E09               	movwf	I2C_Transmit@address,c
  1403  0044C0  EC1A  F025         	call	_I2C_Transmit	;wreg free
  1404  0044C4                     l7177:
  1405  0044C4  0100               	movlb	0	; () banked
  1406  0044C6  51F2               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  1407  0044C8  B4D8               	btfsc	status,2,c
  1408  0044CA  D7FC               	goto	l7177
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;main.c: 180:     AD5272_COMMANDS[0] = 0x04;
  1412  0044CC  0E04               	movlw	4
  1413  0044CE  6FF8               	movwf	_AD5272_COMMANDS& (0+255),b
  1414  0044D0                     l7181:
  1415                           
  1416                           ;main.c: 185:         receive_command = UART1_ReceiveCommand();
  1417  0044D0  EC49  F01B         	call	_UART1_ReceiveCommand	;wreg free
  1418  0044D4  6E55               	movwf	main@receive_command,c
  1419                           
  1420                           ;main.c: 186:         CURRENT_REAL_AMPLIFIED_DVOLTAGE = ADC_CURRENT_RESULT * 0.00122;
  1421  0044D6  0060  F3A8  F006   	movff	_ADC_CURRENT_RESULT,___xxtofl@val
  1422  0044DC  0060  F3AC  F007   	movff	_ADC_CURRENT_RESULT+1,___xxtofl@val+1
  1423  0044E2  0E00               	movlw	0
  1424  0044E4  BE07               	btfsc	___xxtofl@val+1,7,c
  1425  0044E6  0EFF               	movlw	-1
  1426  0044E8  6E08               	movwf	___xxtofl@val+2,c
  1427  0044EA  6E09               	movwf	___xxtofl@val+3,c
  1428  0044EC  0E01               	movlw	1
  1429  0044EE  EC67  F021         	call	___xxtofl
  1430  0044F2  0060  F018  F014   	movff	?___xxtofl,___flmul@b
  1431  0044F8  0060  F01C  F015   	movff	?___xxtofl+1,___flmul@b+1
  1432  0044FE  0060  F020  F016   	movff	?___xxtofl+2,___flmul@b+2
  1433  004504  0060  F024  F017   	movff	?___xxtofl+3,___flmul@b+3
  1434  00450A  0E68               	movlw	104
  1435  00450C  6E18               	movwf	___flmul@a,c
  1436  00450E  0EE8               	movlw	232
  1437  004510  6E19               	movwf	___flmul@a+1,c
  1438  004512  0E9F               	movlw	159
  1439  004514  6E1A               	movwf	___flmul@a+2,c
  1440  004516  0E3A               	movlw	58
  1441  004518  6E1B               	movwf	___flmul@a+3,c
  1442  00451A  EC01  F016         	call	___flmul	;wreg free
  1443  00451E  0060  F050  F11C   	movff	?___flmul,_CURRENT_REAL_AMPLIFIED_DVOLTAGE
  1444  004524  0060  F054  F11D   	movff	?___flmul+1,_CURRENT_REAL_AMPLIFIED_DVOLTAGE+1
  1445  00452A  0060  F058  F11E   	movff	?___flmul+2,_CURRENT_REAL_AMPLIFIED_DVOLTAGE+2
  1446  004530  0060  F05C  F11F   	movff	?___flmul+3,_CURRENT_REAL_AMPLIFIED_DVOLTAGE+3
  1447                           
  1448                           ;main.c: 187:         if(CURRENT_LIMIT_AMPLIFIED_DVOLTAGE <= CURRENT_REAL_AMPLIFIED_DVOL
      +                          TAGE)
  1449  004536  0060  F470  F02D   	movff	_CURRENT_REAL_AMPLIFIED_DVOLTAGE,___flge@ff1
  1450  00453C  0060  F474  F02E   	movff	_CURRENT_REAL_AMPLIFIED_DVOLTAGE+1,___flge@ff1+1
  1451  004542  0060  F478  F02F   	movff	_CURRENT_REAL_AMPLIFIED_DVOLTAGE+2,___flge@ff1+2
  1452  004548  0060  F47C  F030   	movff	_CURRENT_REAL_AMPLIFIED_DVOLTAGE+3,___flge@ff1+3
  1453  00454E  0060  F3E8  F031   	movff	_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE,___flge@ff2
  1454  004554  0060  F3EC  F032   	movff	_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+1,___flge@ff2+1
  1455  00455A  0060  F3F0  F033   	movff	_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+2,___flge@ff2+2
  1456  004560  0060  F3F4  F034   	movff	_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+3,___flge@ff2+3
  1457  004566  EC36  F023         	call	___flge	;wreg free
  1458  00456A  A0D8               	btfss	status,0,c
  1459  00456C  D002               	goto	l218
  1460                           
  1461                           ;main.c: 188:             LATAbits.LA1 = 1;
  1462  00456E  82BA               	bsf	16314,1,c	;volatile
  1463  004570  D001               	goto	l7189
  1464  004572                     l218:
  1465                           
  1466                           ;main.c: 190:             LATAbits.LA1 = 0;
  1467  004572  92BA               	bcf	16314,1,c	;volatile
  1468  004574                     l7189:
  1469                           
  1470                           ;main.c: 191:         if(receive_command)
  1471  004574  5055               	movf	main@receive_command,w,c
  1472  004576  B4D8               	btfsc	status,2,c
  1473  004578  D7AB               	goto	l7181
  1474                           
  1475                           ;main.c: 192:             UART_handler();
  1476  00457A  EC34  F01E         	call	_UART_handler	;wreg free
  1477  00457E  D7A8               	goto	l7181
  1478  004580                     __end_of_main:
  1479                           	opt callstack 0
  1480                           
  1481 ;; *************** function _timer0_init *****************
  1482 ;; Defined at:
  1483 ;;		line 244 in file "main.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    2
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text1
  1512  00526A                     __ptext1:
  1513                           	opt callstack 0
  1514  00526A                     _timer0_init:
  1515                           	opt callstack 28
  1516                           
  1517                           ;main.c: 245:     T0CON0 = 0x10;
  1518                           
  1519                           ;incstack = 0
  1520  00526A  0E10               	movlw	16
  1521  00526C  6EB8               	movwf	16312,c	;volatile
  1522                           
  1523                           ;main.c: 246:     T0CON1 = 0x75;
  1524  00526E  0E75               	movlw	117
  1525  005270  6EB9               	movwf	16313,c	;volatile
  1526                           
  1527                           ;main.c: 247:     TMR0L = 0xB0;
  1528  005272  0EB0               	movlw	176
  1529  005274  6EB6               	movwf	16310,c	;volatile
  1530                           
  1531                           ;main.c: 248:     TMR0H = 0x3C;
  1532  005276  0E3C               	movlw	60
  1533  005278  6EB7               	movwf	16311,c	;volatile
  1534                           
  1535                           ;main.c: 249:     counter_timer0 = 0;
  1536  00527A  0E00               	movlw	0
  1537  00527C  0100               	movlb	0	; () banked
  1538  00527E  6FF1               	movwf	_counter_timer0& (0+255),b
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;main.c: 250:     IPR3bits.TMR0IP = 0;
  1542  005280  0139               	movlb	57	; () banked
  1543  005282  9F83               	bcf	131,7,b	;volatile
  1544                           
  1545                           ; BSR set to: 57
  1546                           ;main.c: 251:     PIR3bits.TMR0IF = 0;
  1547  005284  9FA3               	bcf	163,7,b	;volatile
  1548                           
  1549                           ; BSR set to: 57
  1550                           ;main.c: 252:     PIE3bits.TMR0IE = 1;
  1551  005286  8F93               	bsf	147,7,b	;volatile
  1552                           
  1553                           ; BSR set to: 57
  1554                           ;main.c: 253:     T0CON0bits.EN = 1;
  1555  005288  8EB8               	bsf	16312,7,c	;volatile
  1556                           
  1557                           ; BSR set to: 57
  1558  00528A  0012               	return		;funcret
  1559  00528C                     __end_of_timer0_init:
  1560                           	opt callstack 0
  1561                           
  1562 ;; *************** function _UART_handler *****************
  1563 ;; Defined at:
  1564 ;;		line 198 in file "main.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1579 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1580 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1581 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1582 ;;Total ram usage:        6 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:   10
  1585 ;; This function calls:
  1586 ;;		_GetStringSize
  1587 ;;		_I2C_handler
  1588 ;;		_UART1_SendString
  1589 ;;		___flmul
  1590 ;;		___xxtofl
  1591 ;;		_memset
  1592 ;;		_sprintf
  1593 ;;		_stof
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text2
  1600  003C68                     __ptext2:
  1601                           	opt callstack 0
  1602  003C68                     _UART_handler:
  1603                           	opt callstack 20
  1604                           
  1605                           ;main.c: 199:     memset(tx_buffer,0,55);
  1606                           
  1607                           ; BSR set to: 57
  1608                           ;incstack = 0
  1609  003C68  0E70               	movlw	low _tx_buffer
  1610  003C6A  6E06               	movwf	memset@st,c
  1611  003C6C  0E01               	movlw	high _tx_buffer
  1612  003C6E  6E07               	movwf	memset@st+1,c
  1613  003C70  0E00               	movlw	0
  1614  003C72  6E08               	movwf	memset@x,c
  1615  003C74  0E00               	movlw	0
  1616  003C76  6E0A               	movwf	memset@size+1,c
  1617  003C78  0E37               	movlw	55
  1618  003C7A  6E09               	movwf	memset@size,c
  1619  003C7C  ECBA  F028         	call	_memset	;wreg free
  1620                           
  1621                           ;main.c: 200:     if(COMMAND_WR){
  1622  003C80  0100               	movlb	0	; () banked
  1623  003C82  51F6               	movf	_COMMAND_WR& (0+255),w,b
  1624  003C84  A4D8               	btfss	status,2,c
  1625  003C86  D0A7               	goto	l7091
  1626  003C88  D113               	goto	l7115
  1627  003C8A                     l7077:
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;main.c: 203:                 sprintf(tx_buffer,"%f",((float)ADC_VOLTAGE_RESULT * 0.0012
      +                          2));
  1631  003C8A  0060  F3B0  F006   	movff	_ADC_VOLTAGE_RESULT,___xxtofl@val
  1632  003C90  0060  F3B4  F007   	movff	_ADC_VOLTAGE_RESULT+1,___xxtofl@val+1
  1633  003C96  0E00               	movlw	0
  1634  003C98  BE07               	btfsc	___xxtofl@val+1,7,c
  1635  003C9A  0EFF               	movlw	-1
  1636  003C9C  6E08               	movwf	___xxtofl@val+2,c
  1637  003C9E  6E09               	movwf	___xxtofl@val+3,c
  1638  003CA0  0E01               	movlw	1
  1639  003CA2  EC67  F021         	call	___xxtofl
  1640  003CA6  0060  F018  F014   	movff	?___xxtofl,___flmul@b
  1641  003CAC  0060  F01C  F015   	movff	?___xxtofl+1,___flmul@b+1
  1642  003CB2  0060  F020  F016   	movff	?___xxtofl+2,___flmul@b+2
  1643  003CB8  0060  F024  F017   	movff	?___xxtofl+3,___flmul@b+3
  1644  003CBE  0E68               	movlw	104
  1645  003CC0  6E18               	movwf	___flmul@a,c
  1646  003CC2  0EE8               	movlw	232
  1647  003CC4  6E19               	movwf	___flmul@a+1,c
  1648  003CC6  0E9F               	movlw	159
  1649  003CC8  6E1A               	movwf	___flmul@a+2,c
  1650  003CCA  0E3A               	movlw	58
  1651  003CCC  6E1B               	movwf	___flmul@a+3,c
  1652  003CCE  EC01  F016         	call	___flmul	;wreg free
  1653  003CD2  0060  F050  F1AF   	movff	?___flmul,_UART_handler$2468
  1654  003CD8  0060  F054  F1B0   	movff	?___flmul+1,_UART_handler$2468+1
  1655  003CDE  0060  F058  F1B1   	movff	?___flmul+2,_UART_handler$2468+2
  1656  003CE4  0060  F05C  F1B2   	movff	?___flmul+3,_UART_handler$2468+3
  1657                           
  1658                           ;main.c: 203:                 sprintf(tx_buffer,"%f",((float)ADC_VOLTAGE_RESULT * 0.0012
      +                          2));
  1659  003CEA  0E70               	movlw	low _tx_buffer
  1660  003CEC  0100               	movlb	0	; () banked
  1661  003CEE  6FB0               	movwf	sprintf@s& (0+255),b
  1662  003CF0  0E01               	movlw	high _tx_buffer
  1663  003CF2  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1664  003CF4  0EA8               	movlw	low STR_1
  1665  003CF6  6FB2               	movwf	sprintf@fmt& (0+255),b
  1666  003CF8  0E20               	movlw	high STR_1
  1667  003CFA  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1668  003CFC  0060  F6BC  F0B4   	movff	_UART_handler$2468,?_sprintf+4
  1669  003D02  0060  F6C0  F0B5   	movff	_UART_handler$2468+1,?_sprintf+5
  1670  003D08  0060  F6C4  F0B6   	movff	_UART_handler$2468+2,?_sprintf+6
  1671  003D0E  0060  F6C8  F0B7   	movff	_UART_handler$2468+3,?_sprintf+7
  1672  003D14  EC8D  F027         	call	_sprintf	;wreg free
  1673                           
  1674                           ;main.c: 204:                 break;
  1675  003D18  D0DD               	goto	l7117
  1676  003D1A                     l7081:
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;main.c: 206:                 sprintf(tx_buffer,"%f",((float)ADC_CURRENT_RESULT * 0.0012
      +                          2));
  1680  003D1A  0060  F3A8  F006   	movff	_ADC_CURRENT_RESULT,___xxtofl@val
  1681  003D20  0060  F3AC  F007   	movff	_ADC_CURRENT_RESULT+1,___xxtofl@val+1
  1682  003D26  0E00               	movlw	0
  1683  003D28  BE07               	btfsc	___xxtofl@val+1,7,c
  1684  003D2A  0EFF               	movlw	-1
  1685  003D2C  6E08               	movwf	___xxtofl@val+2,c
  1686  003D2E  6E09               	movwf	___xxtofl@val+3,c
  1687  003D30  0E01               	movlw	1
  1688  003D32  EC67  F021         	call	___xxtofl
  1689  003D36  0060  F018  F014   	movff	?___xxtofl,___flmul@b
  1690  003D3C  0060  F01C  F015   	movff	?___xxtofl+1,___flmul@b+1
  1691  003D42  0060  F020  F016   	movff	?___xxtofl+2,___flmul@b+2
  1692  003D48  0060  F024  F017   	movff	?___xxtofl+3,___flmul@b+3
  1693  003D4E  0E68               	movlw	104
  1694  003D50  6E18               	movwf	___flmul@a,c
  1695  003D52  0EE8               	movlw	232
  1696  003D54  6E19               	movwf	___flmul@a+1,c
  1697  003D56  0E9F               	movlw	159
  1698  003D58  6E1A               	movwf	___flmul@a+2,c
  1699  003D5A  0E3A               	movlw	58
  1700  003D5C  6E1B               	movwf	___flmul@a+3,c
  1701  003D5E  EC01  F016         	call	___flmul	;wreg free
  1702  003D62  0060  F050  F1AF   	movff	?___flmul,_UART_handler$2468
  1703  003D68  0060  F054  F1B0   	movff	?___flmul+1,_UART_handler$2468+1
  1704  003D6E  0060  F058  F1B1   	movff	?___flmul+2,_UART_handler$2468+2
  1705  003D74  0060  F05C  F1B2   	movff	?___flmul+3,_UART_handler$2468+3
  1706                           
  1707                           ;main.c: 206:                 sprintf(tx_buffer,"%f",((float)ADC_CURRENT_RESULT * 0.0012
      +                          2));
  1708  003D7A  0E70               	movlw	low _tx_buffer
  1709  003D7C  0100               	movlb	0	; () banked
  1710  003D7E  6FB0               	movwf	sprintf@s& (0+255),b
  1711  003D80  0E01               	movlw	high _tx_buffer
  1712  003D82  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1713  003D84  0EA8               	movlw	low STR_1
  1714  003D86  6FB2               	movwf	sprintf@fmt& (0+255),b
  1715  003D88  0E20               	movlw	high STR_1
  1716  003D8A  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1717  003D8C  0060  F6BC  F0B4   	movff	_UART_handler$2468,?_sprintf+4
  1718  003D92  0060  F6C0  F0B5   	movff	_UART_handler$2468+1,?_sprintf+5
  1719  003D98  0060  F6C4  F0B6   	movff	_UART_handler$2468+2,?_sprintf+6
  1720  003D9E  0060  F6C8  F0B7   	movff	_UART_handler$2468+3,?_sprintf+7
  1721  003DA4  EC8D  F027         	call	_sprintf	;wreg free
  1722                           
  1723                           ;main.c: 207:                 break;
  1724  003DA8  D095               	goto	l7117
  1725  003DAA                     l7085:
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;main.c: 209:                 sprintf(tx_buffer,"Version 1.0\nTeam 5V\nXaris Ketoglou,Vo
      +                          ula Kontotoli");
  1729  003DAA  0E70               	movlw	low _tx_buffer
  1730  003DAC  6FB0               	movwf	sprintf@s& (0+255),b
  1731  003DAE  0E01               	movlw	high _tx_buffer
  1732  003DB0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1733  003DB2  0E01               	movlw	low STR_3
  1734  003DB4  6FB2               	movwf	sprintf@fmt& (0+255),b
  1735  003DB6  0E20               	movlw	high STR_3
  1736  003DB8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1737  003DBA  EC8D  F027         	call	_sprintf	;wreg free
  1738                           
  1739                           ;main.c: 210:                 break;
  1740  003DBE  D08A               	goto	l7117
  1741  003DC0                     l7087:
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;main.c: 212:                 sprintf(tx_buffer,"Command not recognized!");
  1745  003DC0  0E70               	movlw	low _tx_buffer
  1746  003DC2  6FB0               	movwf	sprintf@s& (0+255),b
  1747  003DC4  0E01               	movlw	high _tx_buffer
  1748  003DC6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1749  003DC8  0E34               	movlw	low STR_4
  1750  003DCA  6FB2               	movwf	sprintf@fmt& (0+255),b
  1751  003DCC  0E20               	movlw	high STR_4
  1752  003DCE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1753  003DD0  EC8D  F027         	call	_sprintf	;wreg free
  1754                           
  1755                           ;main.c: 213:                 break;
  1756  003DD4  D07F               	goto	l7117
  1757  003DD6                     l7091:
  1758                           
  1759                           ; BSR set to: 0
  1760  003DD6  51F5               	movf	_COMMAND& (0+255),w,b
  1761  003DD8  6FC2               	movwf	??_UART_handler& (0+255),b
  1762  003DDA  6BC3               	clrf	(??_UART_handler+1)& (0+255),b
  1763                           
  1764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1765                           ; Switch size 1, requested type "simple"
  1766                           ; Number of cases is 1, Range of values is 0 to 0
  1767                           ; switch strategies available:
  1768                           ; Name         Instructions Cycles
  1769                           ; simple_byte            4     3 (average)
  1770                           ;	Chosen strategy is simple_byte
  1771  003DDC  51C3               	movf	(??_UART_handler+1)& (0+255),w,b
  1772  003DDE  0A00               	xorlw	0	; case 0
  1773  003DE0  A4D8               	btfss	status,2,c
  1774  003DE2  D7EE               	goto	l7087
  1775                           
  1776                           ; BSR set to: 0
  1777                           ; Switch size 1, requested type "simple"
  1778                           ; Number of cases is 3, Range of values is 0 to 2
  1779                           ; switch strategies available:
  1780                           ; Name         Instructions Cycles
  1781                           ; simple_byte           10     6 (average)
  1782                           ;	Chosen strategy is simple_byte
  1783  003DE4  51C2               	movf	??_UART_handler& (0+255),w,b
  1784  003DE6  0A00               	xorlw	0	; case 0
  1785  003DE8  B4D8               	btfsc	status,2,c
  1786  003DEA  D74F               	goto	l7077
  1787  003DEC  0A01               	xorlw	1	; case 1
  1788  003DEE  B4D8               	btfsc	status,2,c
  1789  003DF0  D794               	goto	l7081
  1790  003DF2  0A03               	xorlw	3	; case 2
  1791  003DF4  B4D8               	btfsc	status,2,c
  1792  003DF6  D7D9               	goto	l7085
  1793  003DF8  D7E3               	goto	l7087
  1794  003DFA                     l7093:
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;main.c: 218:                 if(COMMAND_WRITE_NUMBER){
  1798  003DFA  51EE               	movf	_COMMAND_WRITE_NUMBER& (0+255),w,b
  1799  003DFC  11EF               	iorwf	(_COMMAND_WRITE_NUMBER+1)& (0+255),w,b
  1800  003DFE  B4D8               	btfsc	status,2,c
  1801  003E00  D00D               	goto	l7099
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;main.c: 219:                     led_enable = 1;
  1805  003E02  0E01               	movlw	1
  1806  003E04  6FF0               	movwf	_led_enable& (0+255),b
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;main.c: 220:                     sprintf(tx_buffer,"Blinking LED is ON!");
  1810  003E06  0E70               	movlw	low _tx_buffer
  1811  003E08  6FB0               	movwf	sprintf@s& (0+255),b
  1812  003E0A  0E01               	movlw	high _tx_buffer
  1813  003E0C  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1814  003E0E  0E61               	movlw	low STR_5
  1815  003E10  6FB2               	movwf	sprintf@fmt& (0+255),b
  1816  003E12  0E20               	movlw	high STR_5
  1817  003E14  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1818  003E16  EC8D  F027         	call	_sprintf	;wreg free
  1819                           
  1820                           ;main.c: 221:                 }else{
  1821  003E1A  D05C               	goto	l7117
  1822  003E1C                     l7099:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 222:                     led_enable = 0;
  1826  003E1C  0E00               	movlw	0
  1827  003E1E  6FF0               	movwf	_led_enable& (0+255),b
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;main.c: 223:                     sprintf(tx_buffer,"Blinking LED is OFF!");
  1831  003E20  0E70               	movlw	low _tx_buffer
  1832  003E22  6FB0               	movwf	sprintf@s& (0+255),b
  1833  003E24  0E01               	movlw	high _tx_buffer
  1834  003E26  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1835  003E28  0E4C               	movlw	low STR_6
  1836  003E2A  6FB2               	movwf	sprintf@fmt& (0+255),b
  1837  003E2C  0E20               	movlw	high STR_6
  1838  003E2E  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1839  003E30  EC8D  F027         	call	_sprintf	;wreg free
  1840  003E34  D04F               	goto	l7117
  1841  003E36                     l7103:
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;main.c: 227:                 I2C_handler(COMMAND_WRITE_NUMBER);
  1845  003E36  0060  F3B8  F012   	movff	_COMMAND_WRITE_NUMBER,I2C_handler@value
  1846  003E3C  0060  F3BC  F013   	movff	_COMMAND_WRITE_NUMBER+1,I2C_handler@value+1
  1847  003E42  EC1F  F029         	call	_I2C_handler	;wreg free
  1848                           
  1849                           ;main.c: 228:                 sprintf(tx_buffer,"Voltage set!");
  1850  003E46  0E70               	movlw	low _tx_buffer
  1851  003E48  0100               	movlb	0	; () banked
  1852  003E4A  6FB0               	movwf	sprintf@s& (0+255),b
  1853  003E4C  0E01               	movlw	high _tx_buffer
  1854  003E4E  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1855  003E50  0E88               	movlw	low STR_7
  1856  003E52  6FB2               	movwf	sprintf@fmt& (0+255),b
  1857  003E54  0E20               	movlw	high STR_7
  1858  003E56  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1859  003E58  EC8D  F027         	call	_sprintf	;wreg free
  1860                           
  1861                           ;main.c: 229:                 break;
  1862  003E5C  D03B               	goto	l7117
  1863  003E5E                     l7107:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 231:                 CURRENT_LIMIT_AMPLIFIED_DVOLTAGE = stof(COMMAND_CURRENT_LI
      +                          MIT);
  1867  003E5E  0EA7               	movlw	low _COMMAND_CURRENT_LIMIT
  1868  003E60  6E3D               	movwf	stof@s,c
  1869  003E62  0E01               	movlw	high _COMMAND_CURRENT_LIMIT
  1870  003E64  6E3E               	movwf	stof@s+1,c
  1871  003E66  EC75  F020         	call	_stof	;wreg free
  1872  003E6A  0060  F0F4  F0FA   	movff	?_stof,_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE
  1873  003E70  0060  F0F8  F0FB   	movff	?_stof+1,_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+1
  1874  003E76  0060  F0FC  F0FC   	movff	?_stof+2,_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+2
  1875  003E7C  0060  F100  F0FD   	movff	?_stof+3,_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+3
  1876                           
  1877                           ;main.c: 232:                 sprintf(tx_buffer,"Current Limit set!");
  1878  003E82  0E70               	movlw	low _tx_buffer
  1879  003E84  0100               	movlb	0	; () banked
  1880  003E86  6FB0               	movwf	sprintf@s& (0+255),b
  1881  003E88  0E01               	movlw	high _tx_buffer
  1882  003E8A  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1883  003E8C  0E75               	movlw	low STR_8
  1884  003E8E  6FB2               	movwf	sprintf@fmt& (0+255),b
  1885  003E90  0E20               	movlw	high STR_8
  1886  003E92  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1887  003E94  EC8D  F027         	call	_sprintf	;wreg free
  1888                           
  1889                           ;main.c: 233:                 break;
  1890  003E98  D01D               	goto	l7117
  1891  003E9A                     l7111:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;main.c: 235:                 sprintf(tx_buffer,"Command not recognized!");
  1895  003E9A  0E70               	movlw	low _tx_buffer
  1896  003E9C  6FB0               	movwf	sprintf@s& (0+255),b
  1897  003E9E  0E01               	movlw	high _tx_buffer
  1898  003EA0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1899  003EA2  0E34               	movlw	low STR_4
  1900  003EA4  6FB2               	movwf	sprintf@fmt& (0+255),b
  1901  003EA6  0E20               	movlw	high STR_4
  1902  003EA8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1903  003EAA  EC8D  F027         	call	_sprintf	;wreg free
  1904                           
  1905                           ;main.c: 236:                 break;
  1906  003EAE  D012               	goto	l7117
  1907  003EB0                     l7115:
  1908                           
  1909                           ; BSR set to: 0
  1910  003EB0  51F5               	movf	_COMMAND& (0+255),w,b
  1911  003EB2  6FC2               	movwf	??_UART_handler& (0+255),b
  1912  003EB4  6BC3               	clrf	(??_UART_handler+1)& (0+255),b
  1913                           
  1914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1915                           ; Switch size 1, requested type "simple"
  1916                           ; Number of cases is 1, Range of values is 0 to 0
  1917                           ; switch strategies available:
  1918                           ; Name         Instructions Cycles
  1919                           ; simple_byte            4     3 (average)
  1920                           ;	Chosen strategy is simple_byte
  1921  003EB6  51C3               	movf	(??_UART_handler+1)& (0+255),w,b
  1922  003EB8  0A00               	xorlw	0	; case 0
  1923  003EBA  A4D8               	btfss	status,2,c
  1924  003EBC  D7EE               	goto	l7111
  1925                           
  1926                           ; BSR set to: 0
  1927                           ; Switch size 1, requested type "simple"
  1928                           ; Number of cases is 3, Range of values is 0 to 2
  1929                           ; switch strategies available:
  1930                           ; Name         Instructions Cycles
  1931                           ; simple_byte           10     6 (average)
  1932                           ;	Chosen strategy is simple_byte
  1933  003EBE  51C2               	movf	??_UART_handler& (0+255),w,b
  1934  003EC0  0A00               	xorlw	0	; case 0
  1935  003EC2  B4D8               	btfsc	status,2,c
  1936  003EC4  D79A               	goto	l7093
  1937  003EC6  0A01               	xorlw	1	; case 1
  1938  003EC8  B4D8               	btfsc	status,2,c
  1939  003ECA  D7B5               	goto	l7103
  1940  003ECC  0A03               	xorlw	3	; case 2
  1941  003ECE  B4D8               	btfsc	status,2,c
  1942  003ED0  D7C6               	goto	l7107
  1943  003ED2  D7E3               	goto	l7111
  1944  003ED4                     l7117:
  1945                           
  1946                           ;main.c: 239:     UART1_SendString(tx_buffer,GetStringSize());
  1947  003ED4  0E70               	movlw	low _tx_buffer
  1948  003ED6  6E0A               	movwf	UART1_SendString@str,c
  1949  003ED8  0E01               	movlw	high _tx_buffer
  1950  003EDA  6E0B               	movwf	UART1_SendString@str+1,c
  1951  003EDC  EC81  F028         	call	_GetStringSize	;wreg free
  1952  003EE0  0060  F018  F00C   	movff	?_GetStringSize,UART1_SendString@size
  1953  003EE6  0060  F01C  F00D   	movff	?_GetStringSize+1,UART1_SendString@size+1
  1954  003EEC  EC6D  F025         	call	_UART1_SendString	;wreg free
  1955  003EF0  0012               	return		;funcret
  1956  003EF2                     __end_of_UART_handler:
  1957                           	opt callstack 0
  1958                           
  1959 ;; *************** function _stof *****************
  1960 ;; Defined at:
  1961 ;;		line 281 in file "main.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  s               2   60[COMRAM] PTR unsigned char 
  1964 ;;		 -> COMMAND_CURRENT_LIMIT(8), 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  d               2   75[COMRAM] int 
  1967 ;;  point_seen      2   65[COMRAM] int 
  1968 ;;  fact            4   71[COMRAM] float 
  1969 ;;  rez             4   67[COMRAM] float 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  4   60[COMRAM] float 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1980 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1982 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1983 ;;Total ram usage:       17 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    3
  1986 ;; This function calls:
  1987 ;;		___fladd
  1988 ;;		___fldiv
  1989 ;;		___flmul
  1990 ;;		___xxtofl
  1991 ;; This function is called by:
  1992 ;;		_UART_handler
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text3
  1997  0040EA                     __ptext3:
  1998                           	opt callstack 0
  1999  0040EA                     _stof:
  2000                           	opt callstack 26
  2001                           
  2002                           ;main.c: 282:     float rez = 0, fact = 1;
  2003                           
  2004                           ;incstack = 0
  2005  0040EA  0E00               	movlw	0
  2006  0040EC  6E44               	movwf	stof@rez,c
  2007  0040EE  0E00               	movlw	0
  2008  0040F0  6E45               	movwf	stof@rez+1,c
  2009  0040F2  0E00               	movlw	0
  2010  0040F4  6E46               	movwf	stof@rez+2,c
  2011  0040F6  0E00               	movlw	0
  2012  0040F8  6E47               	movwf	stof@rez+3,c
  2013  0040FA  0E00               	movlw	0
  2014  0040FC  6E48               	movwf	stof@fact,c
  2015  0040FE  0E00               	movlw	0
  2016  004100  6E49               	movwf	stof@fact+1,c
  2017  004102  0E80               	movlw	128
  2018  004104  6E4A               	movwf	stof@fact+2,c
  2019  004106  0E3F               	movlw	63
  2020  004108  6E4B               	movwf	stof@fact+3,c
  2021                           
  2022                           ;main.c: 283:     if (*s == '-'){
  2023  00410A  0060  F0F7  FFD9   	movff	stof@s,fsr2l
  2024  004110  0060  F0FB  FFDA   	movff	stof@s+1,fsr2h
  2025  004116  0E2D               	movlw	45
  2026  004118  18DE               	xorwf	postinc2,w,c
  2027  00411A  A4D8               	btfss	status,2,c
  2028  00411C  D00A               	goto	l6639
  2029                           
  2030                           ;main.c: 284:         s++;
  2031  00411E  4A3D               	infsnz	stof@s,f,c
  2032  004120  2A3E               	incf	stof@s+1,f,c
  2033                           
  2034                           ;main.c: 285:         fact = -1;
  2035  004122  0E00               	movlw	0
  2036  004124  6E48               	movwf	stof@fact,c
  2037  004126  0E00               	movlw	0
  2038  004128  6E49               	movwf	stof@fact+1,c
  2039  00412A  0E80               	movlw	128
  2040  00412C  6E4A               	movwf	stof@fact+2,c
  2041  00412E  0EBF               	movlw	191
  2042  004130  6E4B               	movwf	stof@fact+3,c
  2043  004132                     l6639:
  2044                           
  2045                           ;main.c: 287:     for (int point_seen = 0; *s; s++){
  2046  004132  0E00               	movlw	0
  2047  004134  6E43               	movwf	stof@point_seen+1,c
  2048  004136  0E00               	movlw	0
  2049  004138  6E42               	movwf	stof@point_seen,c
  2050  00413A  D099               	goto	l6659
  2051  00413C                     l6641:
  2052                           
  2053                           ;main.c: 288:         if (*s == '.'){
  2054  00413C  0060  F0F7  FFD9   	movff	stof@s,fsr2l
  2055  004142  0060  F0FB  FFDA   	movff	stof@s+1,fsr2h
  2056  004148  0E2E               	movlw	46
  2057  00414A  18DE               	xorwf	postinc2,w,c
  2058  00414C  A4D8               	btfss	status,2,c
  2059  00414E  D005               	goto	l6645
  2060                           
  2061                           ;main.c: 289:             point_seen = 1;
  2062  004150  0E00               	movlw	0
  2063  004152  6E43               	movwf	stof@point_seen+1,c
  2064  004154  0E01               	movlw	1
  2065  004156  6E42               	movwf	stof@point_seen,c
  2066                           
  2067                           ;main.c: 290:             continue;
  2068  004158  D088               	goto	l6657
  2069  00415A                     l6645:
  2070                           
  2071                           ;main.c: 292:         int d = *s - '0';
  2072  00415A  0060  F0F7  FFD9   	movff	stof@s,fsr2l
  2073  004160  0060  F0FB  FFDA   	movff	stof@s+1,fsr2h
  2074  004166  50DF               	movf	indf2,w,c
  2075  004168  6E41               	movwf	??_stof& (0+255),c
  2076  00416A  0ED0               	movlw	208
  2077  00416C  2441               	addwf	??_stof,w,c
  2078  00416E  6E4C               	movwf	stof@d,c
  2079  004170  6A4D               	clrf	stof@d+1,c
  2080  004172  0EFF               	movlw	255
  2081  004174  224D               	addwfc	stof@d+1,f,c
  2082                           
  2083                           ;main.c: 293:         if (d >= 0 && d <= 9){
  2084  004176  BE4D               	btfsc	stof@d+1,7,c
  2085  004178  D078               	goto	l6657
  2086  00417A  BE4D               	btfsc	stof@d+1,7,c
  2087  00417C  D006               	goto	u9150
  2088  00417E  504D               	movf	stof@d+1,w,c
  2089  004180  E174               	bnz	l6657
  2090  004182  0E0A               	movlw	10
  2091  004184  5C4C               	subwf	stof@d,w,c
  2092  004186  B0D8               	btfsc	status,0,c
  2093  004188  D070               	goto	l6657
  2094  00418A                     u9150:
  2095                           
  2096                           ;main.c: 294:             if (point_seen) fact /= 10.0f;
  2097  00418A  5042               	movf	stof@point_seen,w,c
  2098  00418C  1043               	iorwf	stof@point_seen+1,w,c
  2099  00418E  B4D8               	btfsc	status,2,c
  2100  004190  D022               	goto	l6655
  2101  004192  0060  F120  F006   	movff	stof@fact,___fldiv@b
  2102  004198  0060  F124  F007   	movff	stof@fact+1,___fldiv@b+1
  2103  00419E  0060  F128  F008   	movff	stof@fact+2,___fldiv@b+2
  2104  0041A4  0060  F12C  F009   	movff	stof@fact+3,___fldiv@b+3
  2105  0041AA  0E00               	movlw	0
  2106  0041AC  6E0A               	movwf	___fldiv@a,c
  2107  0041AE  0E00               	movlw	0
  2108  0041B0  6E0B               	movwf	___fldiv@a+1,c
  2109  0041B2  0E20               	movlw	32
  2110  0041B4  6E0C               	movwf	___fldiv@a+2,c
  2111  0041B6  0E41               	movlw	65
  2112  0041B8  6E0D               	movwf	___fldiv@a+3,c
  2113  0041BA  ECDE  F01C         	call	___fldiv	;wreg free
  2114  0041BE  0060  F018  F048   	movff	?___fldiv,stof@fact
  2115  0041C4  0060  F01C  F049   	movff	?___fldiv+1,stof@fact+1
  2116  0041CA  0060  F020  F04A   	movff	?___fldiv+2,stof@fact+2
  2117  0041D0  0060  F024  F04B   	movff	?___fldiv+3,stof@fact+3
  2118  0041D6                     l6655:
  2119                           
  2120                           ;main.c: 295:                 rez = rez * 10.0f + (float)d;
  2121  0041D6  0E00               	movlw	0
  2122  0041D8  6E18               	movwf	___flmul@a,c
  2123  0041DA  0E00               	movlw	0
  2124  0041DC  6E19               	movwf	___flmul@a+1,c
  2125  0041DE  0E20               	movlw	32
  2126  0041E0  6E1A               	movwf	___flmul@a+2,c
  2127  0041E2  0E41               	movlw	65
  2128  0041E4  6E1B               	movwf	___flmul@a+3,c
  2129  0041E6  0060  F110  F014   	movff	stof@rez,___flmul@b
  2130  0041EC  0060  F114  F015   	movff	stof@rez+1,___flmul@b+1
  2131  0041F2  0060  F118  F016   	movff	stof@rez+2,___flmul@b+2
  2132  0041F8  0060  F11C  F017   	movff	stof@rez+3,___flmul@b+3
  2133  0041FE  EC01  F016         	call	___flmul	;wreg free
  2134  004202  0060  F050  F02D   	movff	?___flmul,___fladd@b
  2135  004208  0060  F054  F02E   	movff	?___flmul+1,___fladd@b+1
  2136  00420E  0060  F058  F02F   	movff	?___flmul+2,___fladd@b+2
  2137  004214  0060  F05C  F030   	movff	?___flmul+3,___fladd@b+3
  2138  00421A  0060  F130  F006   	movff	stof@d,___xxtofl@val
  2139  004220  0060  F134  F007   	movff	stof@d+1,___xxtofl@val+1
  2140  004226  0E00               	movlw	0
  2141  004228  BE07               	btfsc	___xxtofl@val+1,7,c
  2142  00422A  0EFF               	movlw	-1
  2143  00422C  6E08               	movwf	___xxtofl@val+2,c
  2144  00422E  6E09               	movwf	___xxtofl@val+3,c
  2145  004230  0E01               	movlw	1
  2146  004232  EC67  F021         	call	___xxtofl
  2147  004236  0060  F018  F031   	movff	?___xxtofl,___fladd@a
  2148  00423C  0060  F01C  F032   	movff	?___xxtofl+1,___fladd@a+1
  2149  004242  0060  F020  F033   	movff	?___xxtofl+2,___fladd@a+2
  2150  004248  0060  F024  F034   	movff	?___xxtofl+3,___fladd@a+3
  2151  00424E  ECA5  F019         	call	___fladd	;wreg free
  2152  004252  0060  F0B4  F044   	movff	?___fladd,stof@rez
  2153  004258  0060  F0B8  F045   	movff	?___fladd+1,stof@rez+1
  2154  00425E  0060  F0BC  F046   	movff	?___fladd+2,stof@rez+2
  2155  004264  0060  F0C0  F047   	movff	?___fladd+3,stof@rez+3
  2156  00426A                     l6657:
  2157  00426A  4A3D               	infsnz	stof@s,f,c
  2158  00426C  2A3E               	incf	stof@s+1,f,c
  2159  00426E                     l6659:
  2160  00426E  0060  F0F7  FFD9   	movff	stof@s,fsr2l
  2161  004274  0060  F0FB  FFDA   	movff	stof@s+1,fsr2h
  2162  00427A  50DF               	movf	indf2,w,c
  2163  00427C  A4D8               	btfss	status,2,c
  2164  00427E  D75E               	goto	l6641
  2165                           
  2166                           ;main.c: 298:     return rez * fact;
  2167  004280  0060  F110  F014   	movff	stof@rez,___flmul@b
  2168  004286  0060  F114  F015   	movff	stof@rez+1,___flmul@b+1
  2169  00428C  0060  F118  F016   	movff	stof@rez+2,___flmul@b+2
  2170  004292  0060  F11C  F017   	movff	stof@rez+3,___flmul@b+3
  2171  004298  0060  F120  F018   	movff	stof@fact,___flmul@a
  2172  00429E  0060  F124  F019   	movff	stof@fact+1,___flmul@a+1
  2173  0042A4  0060  F128  F01A   	movff	stof@fact+2,___flmul@a+2
  2174  0042AA  0060  F12C  F01B   	movff	stof@fact+3,___flmul@a+3
  2175  0042B0  EC01  F016         	call	___flmul	;wreg free
  2176  0042B4  0060  F050  F03D   	movff	?___flmul,?_stof
  2177  0042BA  0060  F054  F03E   	movff	?___flmul+1,?_stof+1
  2178  0042C0  0060  F058  F03F   	movff	?___flmul+2,?_stof+2
  2179  0042C6  0060  F05C  F040   	movff	?___flmul+3,?_stof+3
  2180  0042CC  0012               	return		;funcret
  2181  0042CE                     __end_of_stof:
  2182                           	opt callstack 0
  2183                           
  2184 ;; *************** function ___xxtofl *****************
  2185 ;; Defined at:
  2186 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  sign            1    wreg     unsigned char 
  2189 ;;  val             4    5[COMRAM] long 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  sign            1   13[COMRAM] unsigned char 
  2192 ;;  arg             4   15[COMRAM] unsigned long 
  2193 ;;  exp             1   14[COMRAM] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  4    5[COMRAM] unsigned char 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2204 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2205 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2206 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2207 ;;Total ram usage:       14 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    2
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;;		_UART_handler
  2215 ;;		_stof
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text4
  2220  0042CE                     __ptext4:
  2221                           	opt callstack 0
  2222  0042CE                     ___xxtofl:
  2223                           	opt callstack 28
  2224                           
  2225                           ;incstack = 0
  2226                           ;___xxtofl@sign stored from wreg
  2227  0042CE  6E0E               	movwf	___xxtofl@sign,c
  2228  0042D0  500E               	movf	___xxtofl@sign,w,c
  2229  0042D2  A4D8               	btfss	status,2,c
  2230  0042D4  AE09               	btfss	___xxtofl@val+3,7,c
  2231  0042D6  D022               	goto	l1339
  2232  0042D8  0060  F018  F00A   	movff	___xxtofl@val,??___xxtofl
  2233  0042DE  0060  F01C  F00B   	movff	___xxtofl@val+1,??___xxtofl+1
  2234  0042E4  0060  F020  F00C   	movff	___xxtofl@val+2,??___xxtofl+2
  2235  0042EA  0060  F024  F00D   	movff	___xxtofl@val+3,??___xxtofl+3
  2236  0042F0  1E0A               	comf	??___xxtofl,f,c
  2237  0042F2  1E0B               	comf	??___xxtofl+1,f,c
  2238  0042F4  1E0C               	comf	??___xxtofl+2,f,c
  2239  0042F6  1E0D               	comf	??___xxtofl+3,f,c
  2240  0042F8  2A0A               	incf	??___xxtofl,f,c
  2241  0042FA  0E00               	movlw	0
  2242  0042FC  220B               	addwfc	??___xxtofl+1,f,c
  2243  0042FE  220C               	addwfc	??___xxtofl+2,f,c
  2244  004300  220D               	addwfc	??___xxtofl+3,f,c
  2245  004302  0060  F028  F010   	movff	??___xxtofl,___xxtofl@arg
  2246  004308  0060  F02C  F011   	movff	??___xxtofl+1,___xxtofl@arg+1
  2247  00430E  0060  F030  F012   	movff	??___xxtofl+2,___xxtofl@arg+2
  2248  004314  0060  F034  F013   	movff	??___xxtofl+3,___xxtofl@arg+3
  2249  00431A  D00C               	goto	l6563
  2250  00431C                     l1339:
  2251  00431C  0060  F018  F010   	movff	___xxtofl@val,___xxtofl@arg
  2252  004322  0060  F01C  F011   	movff	___xxtofl@val+1,___xxtofl@arg+1
  2253  004328  0060  F020  F012   	movff	___xxtofl@val+2,___xxtofl@arg+2
  2254  00432E  0060  F024  F013   	movff	___xxtofl@val+3,___xxtofl@arg+3
  2255  004334                     l6563:
  2256  004334  5006               	movf	___xxtofl@val,w,c
  2257  004336  1007               	iorwf	___xxtofl@val+1,w,c
  2258  004338  1008               	iorwf	___xxtofl@val+2,w,c
  2259  00433A  1009               	iorwf	___xxtofl@val+3,w,c
  2260  00433C  A4D8               	btfss	status,2,c
  2261  00433E  D009               	goto	l6569
  2262  004340  0E00               	movlw	0
  2263  004342  6E06               	movwf	?___xxtofl,c
  2264  004344  0E00               	movlw	0
  2265  004346  6E07               	movwf	?___xxtofl+1,c
  2266  004348  0E00               	movlw	0
  2267  00434A  6E08               	movwf	?___xxtofl+2,c
  2268  00434C  0E00               	movlw	0
  2269  00434E  6E09               	movwf	?___xxtofl+3,c
  2270  004350  0012               	return	
  2271  004352                     l6569:
  2272  004352  0E96               	movlw	150
  2273  004354  6E0F               	movwf	___xxtofl@exp,c
  2274  004356  D006               	goto	l6573
  2275  004358                     l6571:
  2276  004358  2A0F               	incf	___xxtofl@exp,f,c
  2277  00435A  90D8               	bcf	status,0,c
  2278  00435C  3213               	rrcf	___xxtofl@arg+3,f,c
  2279  00435E  3212               	rrcf	___xxtofl@arg+2,f,c
  2280  004360  3211               	rrcf	___xxtofl@arg+1,f,c
  2281  004362  3210               	rrcf	___xxtofl@arg,f,c
  2282  004364                     l6573:
  2283  004364  0E00               	movlw	0
  2284  004366  1410               	andwf	___xxtofl@arg,w,c
  2285  004368  6E0A               	movwf	??___xxtofl& (0+255),c
  2286  00436A  0E00               	movlw	0
  2287  00436C  1411               	andwf	___xxtofl@arg+1,w,c
  2288  00436E  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  2289  004370  0E00               	movlw	0
  2290  004372  1412               	andwf	___xxtofl@arg+2,w,c
  2291  004374  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  2292  004376  0EFE               	movlw	254
  2293  004378  1413               	andwf	___xxtofl@arg+3,w,c
  2294  00437A  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  2295  00437C  500A               	movf	??___xxtofl,w,c
  2296  00437E  100B               	iorwf	??___xxtofl+1,w,c
  2297  004380  100C               	iorwf	??___xxtofl+2,w,c
  2298  004382  100D               	iorwf	??___xxtofl+3,w,c
  2299  004384  B4D8               	btfsc	status,2,c
  2300  004386  D00D               	goto	l1346
  2301  004388  D7E7               	goto	l6571
  2302  00438A                     l6575:
  2303  00438A  2A0F               	incf	___xxtofl@exp,f,c
  2304  00438C  0E01               	movlw	1
  2305  00438E  2610               	addwf	___xxtofl@arg,f,c
  2306  004390  0E00               	movlw	0
  2307  004392  2211               	addwfc	___xxtofl@arg+1,f,c
  2308  004394  2212               	addwfc	___xxtofl@arg+2,f,c
  2309  004396  2213               	addwfc	___xxtofl@arg+3,f,c
  2310  004398  90D8               	bcf	status,0,c
  2311  00439A  3213               	rrcf	___xxtofl@arg+3,f,c
  2312  00439C  3212               	rrcf	___xxtofl@arg+2,f,c
  2313  00439E  3211               	rrcf	___xxtofl@arg+1,f,c
  2314  0043A0  3210               	rrcf	___xxtofl@arg,f,c
  2315  0043A2                     l1346:
  2316  0043A2  0E00               	movlw	0
  2317  0043A4  1410               	andwf	___xxtofl@arg,w,c
  2318  0043A6  6E0A               	movwf	??___xxtofl& (0+255),c
  2319  0043A8  0E00               	movlw	0
  2320  0043AA  1411               	andwf	___xxtofl@arg+1,w,c
  2321  0043AC  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  2322  0043AE  0E00               	movlw	0
  2323  0043B0  1412               	andwf	___xxtofl@arg+2,w,c
  2324  0043B2  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  2325  0043B4  0EFF               	movlw	255
  2326  0043B6  1413               	andwf	___xxtofl@arg+3,w,c
  2327  0043B8  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  2328  0043BA  500A               	movf	??___xxtofl,w,c
  2329  0043BC  100B               	iorwf	??___xxtofl+1,w,c
  2330  0043BE  100C               	iorwf	??___xxtofl+2,w,c
  2331  0043C0  100D               	iorwf	??___xxtofl+3,w,c
  2332  0043C2  B4D8               	btfsc	status,2,c
  2333  0043C4  D007               	goto	l6583
  2334  0043C6  D7E1               	goto	l6575
  2335  0043C8                     l6581:
  2336  0043C8  060F               	decf	___xxtofl@exp,f,c
  2337  0043CA  90D8               	bcf	status,0,c
  2338  0043CC  3610               	rlcf	___xxtofl@arg,f,c
  2339  0043CE  3611               	rlcf	___xxtofl@arg+1,f,c
  2340  0043D0  3612               	rlcf	___xxtofl@arg+2,f,c
  2341  0043D2  3613               	rlcf	___xxtofl@arg+3,f,c
  2342  0043D4                     l6583:
  2343  0043D4  BE12               	btfsc	___xxtofl@arg+2,7,c
  2344  0043D6  D003               	goto	u9060
  2345  0043D8  0E02               	movlw	2
  2346  0043DA  600F               	cpfslt	___xxtofl@exp,c
  2347  0043DC  D7F5               	goto	l6581
  2348  0043DE                     u9060:
  2349  0043DE  A00F               	btfss	___xxtofl@exp,0,c
  2350  0043E0  9E12               	bcf	___xxtofl@arg+2,7,c
  2351  0043E2  90D8               	bcf	status,0,c
  2352  0043E4  320F               	rrcf	___xxtofl@exp,f,c
  2353  0043E6  0060  F03C  F00A   	movff	___xxtofl@exp,??___xxtofl
  2354  0043EC  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  2355  0043EE  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  2356  0043F0  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  2357  0043F2  0060  F028  F00D   	movff	??___xxtofl,??___xxtofl+3
  2358  0043F8  6A0C               	clrf	??___xxtofl+2,c
  2359  0043FA  6A0B               	clrf	??___xxtofl+1,c
  2360  0043FC  6A0A               	clrf	??___xxtofl,c
  2361  0043FE  500A               	movf	??___xxtofl,w,c
  2362  004400  1210               	iorwf	___xxtofl@arg,f,c
  2363  004402  500B               	movf	??___xxtofl+1,w,c
  2364  004404  1211               	iorwf	___xxtofl@arg+1,f,c
  2365  004406  500C               	movf	??___xxtofl+2,w,c
  2366  004408  1212               	iorwf	___xxtofl@arg+2,f,c
  2367  00440A  500D               	movf	??___xxtofl+3,w,c
  2368  00440C  1213               	iorwf	___xxtofl@arg+3,f,c
  2369  00440E  500E               	movf	___xxtofl@sign,w,c
  2370  004410  A4D8               	btfss	status,2,c
  2371  004412  AE09               	btfss	___xxtofl@val+3,7,c
  2372  004414  D001               	goto	l6599
  2373  004416  8E13               	bsf	___xxtofl@arg+3,7,c
  2374  004418                     l6599:
  2375  004418  0060  F040  F006   	movff	___xxtofl@arg,?___xxtofl
  2376  00441E  0060  F044  F007   	movff	___xxtofl@arg+1,?___xxtofl+1
  2377  004424  0060  F048  F008   	movff	___xxtofl@arg+2,?___xxtofl+2
  2378  00442A  0060  F04C  F009   	movff	___xxtofl@arg+3,?___xxtofl+3
  2379  004430  0012               	return		;funcret
  2380  004432                     __end_of___xxtofl:
  2381                           	opt callstack 0
  2382                           
  2383 ;; *************** function _sprintf *****************
  2384 ;; Defined at:
  2385 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2388 ;;		 -> tx_buffer(55), 
  2389 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2390 ;;		 -> STR_9(24), STR_8(19), STR_7(13), STR_6(21), 
  2391 ;;		 -> STR_5(20), STR_4(24), STR_3(51), STR_2(3), 
  2392 ;;		 -> STR_1(3), 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  f               6   92[BANK0 ] struct _IO_FILE
  2395 ;;  ap              2   90[BANK0 ] PTR void [1]
  2396 ;;		 -> ?_sprintf(2), 
  2397 ;;  ret             2    0        int 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  2   80[BANK0 ] int 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2407 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2408 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2410 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2411 ;;Total ram usage:       18 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    9
  2414 ;; This function calls:
  2415 ;;		_vfprintf
  2416 ;; This function is called by:
  2417 ;;		_UART_handler
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text5
  2422  004F1A                     __ptext5:
  2423                           	opt callstack 0
  2424  004F1A                     _sprintf:
  2425                           	opt callstack 20
  2426                           
  2427                           ;incstack = 0
  2428  004F1A  0EB4               	movlw	low (?_sprintf+4)
  2429  004F1C  0100               	movlb	0	; () banked
  2430  004F1E  6FBA               	movwf	sprintf@ap& (0+255),b
  2431  004F20  0E00               	movlw	high (?_sprintf+4)
  2432  004F22  6FBB               	movwf	(sprintf@ap+1)& (0+255),b
  2433  004F24  0060  F2C0  F0BC   	movff	sprintf@s,sprintf@f
  2434  004F2A  0060  F2C4  F0BD   	movff	sprintf@s+1,sprintf@f+1
  2435                           
  2436                           ; BSR set to: 0
  2437  004F30  0E00               	movlw	0
  2438  004F32  6FBF               	movwf	(sprintf@f+3)& (0+255),b
  2439  004F34  0E00               	movlw	0
  2440  004F36  6FBE               	movwf	(sprintf@f+2)& (0+255),b
  2441                           
  2442                           ; BSR set to: 0
  2443  004F38  0E00               	movlw	0
  2444  004F3A  6FC1               	movwf	(sprintf@f+5)& (0+255),b
  2445  004F3C  0E00               	movlw	0
  2446  004F3E  6FC0               	movwf	(sprintf@f+4)& (0+255),b
  2447                           
  2448                           ; BSR set to: 0
  2449  004F40  0EBC               	movlw	low sprintf@f
  2450  004F42  6FA8               	movwf	vfprintf@fp& (0+255),b
  2451  004F44  0E00               	movlw	high sprintf@f
  2452  004F46  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2453  004F48  0060  F2C8  F0AA   	movff	sprintf@fmt,vfprintf@fmt
  2454  004F4E  0060  F2CC  F0AB   	movff	sprintf@fmt+1,vfprintf@fmt+1
  2455  004F54  0EBA               	movlw	low sprintf@ap
  2456  004F56  6FAC               	movwf	vfprintf@ap& (0+255),b
  2457  004F58  0E00               	movlw	high sprintf@ap
  2458  004F5A  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2459  004F5C  ECBD  F026         	call	_vfprintf	;wreg free
  2460  004F60  0100               	movlb	0	; () banked
  2461  004F62  51BE               	movf	(sprintf@f+2)& (0+255),w,b
  2462  004F64  25B0               	addwf	sprintf@s& (0+255),w,b
  2463  004F66  6ED9               	movwf	fsr2l,c
  2464  004F68  51BF               	movf	(sprintf@f+3)& (0+255),w,b
  2465  004F6A  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2466  004F6C  6EDA               	movwf	fsr2h,c
  2467  004F6E  0E00               	movlw	0
  2468  004F70  6EDF               	movwf	indf2,c
  2469                           
  2470                           ; BSR set to: 0
  2471  004F72  0012               	return		;funcret
  2472  004F74                     __end_of_sprintf:
  2473                           	opt callstack 0
  2474                           
  2475 ;; *************** function _vfprintf *****************
  2476 ;; Defined at:
  2477 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2480 ;;		 -> sprintf@f(6), 
  2481 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2482 ;;		 -> STR_9(24), STR_8(19), STR_7(13), STR_6(21), 
  2483 ;;		 -> STR_5(20), STR_4(24), STR_3(51), STR_2(3), 
  2484 ;;		 -> STR_1(3), 
  2485 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2486 ;;		 -> sprintf@ap(2), 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2489 ;;		 -> STR_9(24), STR_8(19), STR_7(13), STR_6(21), 
  2490 ;;		 -> STR_5(20), STR_4(24), STR_3(51), STR_2(3), 
  2491 ;;		 -> STR_1(3), 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  2   72[BANK0 ] int 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2501 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2502 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2504 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2505 ;;Total ram usage:        8 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    8
  2508 ;; This function calls:
  2509 ;;		_vfpfcnvrt
  2510 ;; This function is called by:
  2511 ;;		_sprintf
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text6
  2516  004D7A                     __ptext6:
  2517                           	opt callstack 0
  2518  004D7A                     _vfprintf:
  2519                           	opt callstack 20
  2520                           
  2521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;incstack = 0
  2525  004D7A  0060  F2A8  F0AE   	movff	vfprintf@fmt,vfprintf@cfmt
  2526  004D80  0060  F2AC  F0AF   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2527                           
  2528                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2529  004D86  0E00               	movlw	0
  2530  004D88  0100               	movlb	0	; () banked
  2531  004D8A  6FE7               	movwf	(_nout+1)& (0+255),b
  2532  004D8C  0E00               	movlw	0
  2533  004D8E  6FE6               	movwf	_nout& (0+255),b
  2534                           
  2535                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2536  004D90  D017               	goto	l6555
  2537  004D92                     l6553:
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2541  004D92  0060  F2A0  F098   	movff	vfprintf@fp,vfpfcnvrt@fp
  2542  004D98  0060  F2A4  F099   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2543  004D9E  0EAE               	movlw	low vfprintf@cfmt
  2544  004DA0  6F9A               	movwf	vfpfcnvrt@fmt& (0+255),b
  2545  004DA2  0E00               	movlw	high vfprintf@cfmt
  2546  004DA4  6F9B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2547  004DA6  0060  F2B0  F09C   	movff	vfprintf@ap,vfpfcnvrt@ap
  2548  004DAC  0060  F2B4  F09D   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2549  004DB2  ECDA  F017         	call	_vfpfcnvrt	;wreg free
  2550  004DB6  0100               	movlb	0	; () banked
  2551  004DB8  5198               	movf	?_vfpfcnvrt& (0+255),w,b
  2552  004DBA  27E6               	addwf	_nout& (0+255),f,b
  2553  004DBC  5199               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2554  004DBE  23E7               	addwfc	(_nout+1)& (0+255),f,b
  2555  004DC0                     l6555:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2559  004DC0  0060  F2BB  FFF6   	movff	vfprintf@cfmt,tblptrl
  2560  004DC6  0060  F2BF  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2561  004DCC                     	if	0	;tblptru may be non-zero
  2562  004DCC                     	endif
  2563  004DCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2564  004DCC  0E00               	movlw	low (__mediumconst shr (0+16))
  2565  004DCE  6EF8               	movwf	tblptru,c
  2566  004DD0                     	endif
  2567  004DD0  0008               	tblrd		*
  2568  004DD2  50F5               	movf	tablat,w,c
  2569  004DD4  0900               	iorlw	0
  2570  004DD6  A4D8               	btfss	status,2,c
  2571  004DD8  D7DC               	goto	l6553
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2575  004DDA  0060  F398  F0A8   	movff	_nout,?_vfprintf
  2576  004DE0  0060  F39C  F0A9   	movff	_nout+1,?_vfprintf+1
  2577                           
  2578                           ; BSR set to: 0
  2579  004DE6  0012               	return		;funcret
  2580  004DE8                     __end_of_vfprintf:
  2581                           	opt callstack 0
  2582                           
  2583 ;; *************** function _vfpfcnvrt *****************
  2584 ;; Defined at:
  2585 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  2588 ;;		 -> sprintf@f(6), 
  2589 ;;  fmt             2   58[BANK0 ] PTR PTR unsigned char 
  2590 ;;		 -> vfprintf@cfmt(2), 
  2591 ;;  ap              2   60[BANK0 ] PTR PTR void 
  2592 ;;		 -> sprintf@ap(2), 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  llu             8    0        unsigned long long 
  2595 ;;  ll              8    0        long long 
  2596 ;;  f               4   64[BANK0 ] long long 
  2597 ;;  ct              3   68[BANK0 ] unsigned char [3]
  2598 ;;  vp              3    0        PTR void 
  2599 ;;  cp              3    0        PTR unsigned char 
  2600 ;;  i               2    0        int 
  2601 ;;  done            2    0        int 
  2602 ;;  c               1   71[BANK0 ] unsigned char 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  2   56[BANK0 ] int 
  2605 ;; Registers used:
  2606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2612 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2613 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2614 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2615 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2616 ;;Total ram usage:       20 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    7
  2619 ;; This function calls:
  2620 ;;		_efgtoa
  2621 ;;		_fputc
  2622 ;;		_isupper
  2623 ;;		_strncmp
  2624 ;;		_tolower
  2625 ;; This function is called by:
  2626 ;;		_vfprintf
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text7
  2631  002FB4                     __ptext7:
  2632                           	opt callstack 0
  2633  002FB4                     _vfpfcnvrt:
  2634                           	opt callstack 20
  2635                           
  2636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;incstack = 0
  2640  002FB4  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2641  002FBA  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2642  002FC0  006F FF7B FFF6     	movff	postinc2,tblptrl
  2643  002FC6  006F FF77 FFF7     	movff	postdec2,tblptrh
  2644  002FCC                     	if	0	;tblptru may be non-zero
  2645  002FCC                     	endif
  2646  002FCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2647  002FCC  0E00               	movlw	low (__mediumconst shr (0+16))
  2648  002FCE  6EF8               	movwf	tblptru,c
  2649  002FD0                     	endif
  2650  002FD0  0008               	tblrd		*
  2651  002FD2  50F5               	movf	tablat,w,c
  2652  002FD4  0A25               	xorlw	37
  2653  002FD6  A4D8               	btfss	status,2,c
  2654  002FD8  D194               	goto	l6507
  2655                           
  2656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2657  002FDA  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2658  002FE0  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2659  002FE6  2ADE               	incf	postinc2,f,c
  2660  002FE8  0E00               	movlw	0
  2661  002FEA  22DD               	addwfc	postdec2,f,c
  2662                           
  2663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2664  002FEC  0E00               	movlw	0
  2665  002FEE  0100               	movlb	0	; () banked
  2666  002FF0  6FE9               	movwf	(_width+1)& (0+255),b
  2667  002FF2  0E00               	movlw	0
  2668  002FF4  6FE8               	movwf	_width& (0+255),b
  2669  002FF6  0060  F3A0  F058   	movff	_width,_flags
  2670  002FFC  0060  F3A4  F059   	movff	_width+1,_flags+1
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2674  003002  6856               	setf	_prec,c
  2675  003004  6857               	setf	_prec+1,c
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  2679  003006  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2680  00300C  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2681  003012  006F FF7B FFF6     	movff	postinc2,tblptrl
  2682  003018  006F FF77 FFF7     	movff	postdec2,tblptrh
  2683  00301E                     	if	0	;tblptru may be non-zero
  2684  00301E                     	endif
  2685  00301E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2686  00301E  0E00               	movlw	low (__mediumconst shr (0+16))
  2687  003020  6EF8               	movwf	tblptru,c
  2688  003022                     	endif
  2689  003022  0008               	tblrd		*
  2690  003024  50F5               	movf	tablat,w,c
  2691  003026  6E0C               	movwf	tolower@c,c
  2692  003028  6A0D               	clrf	tolower@c+1,c
  2693  00302A  EC11  F028         	call	_tolower	;wreg free
  2694  00302E  500C               	movf	?_tolower,w,c
  2695  003030  0100               	movlb	0	; () banked
  2696  003032  6FA4               	movwf	vfpfcnvrt@ct& (0+255),b
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  2700  003034  51A4               	movf	vfpfcnvrt@ct& (0+255),w,b
  2701  003036  B4D8               	btfsc	status,2,c
  2702  003038  D045               	goto	l6463
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  2706  00303A  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2707  003040  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2708  003046  006F FF78  F051    	movff	postinc2,??_vfpfcnvrt
  2709  00304C  006F FF74  F052    	movff	postdec2,??_vfpfcnvrt+1
  2710  003052  0E01               	movlw	1
  2711  003054  2651               	addwf	??_vfpfcnvrt,f,c
  2712  003056  0E00               	movlw	0
  2713  003058  2252               	addwfc	??_vfpfcnvrt+1,f,c
  2714  00305A  0060  F147  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2715  003060  0060  F14B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2716  003066                     	if	0	;tblptru may be non-zero
  2717  003066                     	endif
  2718  003066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2719  003066  0E00               	movlw	low (__mediumconst shr (0+16))
  2720  003068  6EF8               	movwf	tblptru,c
  2721  00306A                     	endif
  2722  00306A  0008               	tblrd		*
  2723  00306C  50F5               	movf	tablat,w,c
  2724  00306E  6E0C               	movwf	tolower@c,c
  2725  003070  6A0D               	clrf	tolower@c+1,c
  2726  003072  EC11  F028         	call	_tolower	;wreg free
  2727  003076  500C               	movf	?_tolower,w,c
  2728  003078  0100               	movlb	0	; () banked
  2729  00307A  6FA5               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  2733  00307C  51A5               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2734  00307E  B4D8               	btfsc	status,2,c
  2735  003080  D021               	goto	l6463
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  2739  003082  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2740  003088  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2741  00308E  006F FF78  F051    	movff	postinc2,??_vfpfcnvrt
  2742  003094  006F FF74  F052    	movff	postdec2,??_vfpfcnvrt+1
  2743  00309A  0E02               	movlw	2
  2744  00309C  2651               	addwf	??_vfpfcnvrt,f,c
  2745  00309E  0E00               	movlw	0
  2746  0030A0  2252               	addwfc	??_vfpfcnvrt+1,f,c
  2747  0030A2  0060  F147  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2748  0030A8  0060  F14B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2749  0030AE                     	if	0	;tblptru may be non-zero
  2750  0030AE                     	endif
  2751  0030AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2752  0030AE  0E00               	movlw	low (__mediumconst shr (0+16))
  2753  0030B0  6EF8               	movwf	tblptru,c
  2754  0030B2                     	endif
  2755  0030B2  0008               	tblrd		*
  2756  0030B4  50F5               	movf	tablat,w,c
  2757  0030B6  6E0C               	movwf	tolower@c,c
  2758  0030B8  6A0D               	clrf	tolower@c+1,c
  2759  0030BA  EC11  F028         	call	_tolower	;wreg free
  2760  0030BE  500C               	movf	?_tolower,w,c
  2761  0030C0  0100               	movlb	0	; () banked
  2762  0030C2  6FA6               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2763  0030C4                     l6463:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  2767  0030C4  0E66               	movlw	102
  2768  0030C6  19A4               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2769  0030C8  A4D8               	btfss	status,2,c
  2770  0030CA  D05B               	goto	l6475
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  2774  0030CC  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2775  0030D2  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2776  0030D8  006F FF7B FFF6     	movff	postinc2,tblptrl
  2777  0030DE  006F FF77 FFF7     	movff	postdec2,tblptrh
  2778  0030E4                     	if	0	;tblptru may be non-zero
  2779  0030E4                     	endif
  2780  0030E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2781  0030E4  0E00               	movlw	low (__mediumconst shr (0+16))
  2782  0030E6  6EF8               	movwf	tblptru,c
  2783  0030E8                     	endif
  2784  0030E8  0008               	tblrd		*
  2785  0030EA  006F FFD4  F0A7    	movff	tablat,vfpfcnvrt@c
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  2789  0030F0  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2790  0030F6  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2791  0030FC  2ADE               	incf	postinc2,f,c
  2792  0030FE  0E00               	movlw	0
  2793  003100  22DD               	addwfc	postdec2,f,c
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  2797  003102  0060  F273  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2798  003108  0060  F277  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2799  00310E  006F FF7C  F051    	movff	indf2,??_vfpfcnvrt
  2800  003114  0E04               	movlw	4
  2801  003116  26DE               	addwf	postinc2,f,c
  2802  003118  006F FF7C  F052    	movff	indf2,??_vfpfcnvrt+1
  2803  00311E  0E00               	movlw	0
  2804  003120  22DD               	addwfc	postdec2,f,c
  2805  003122  0060  F147  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2806  003128  0060  F14B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2807  00312E  006F FF78  F0A0    	movff	postinc2,vfpfcnvrt@f
  2808  003134  006F FF78  F0A1    	movff	postinc2,vfpfcnvrt@f+1
  2809  00313A  006F FF78  F0A2    	movff	postinc2,vfpfcnvrt@f+2
  2810  003140  006F FF78  F0A3    	movff	postinc2,vfpfcnvrt@f+3
  2811  003146                     l6471:
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  2815  003146  0060  F260  F045   	movff	vfpfcnvrt@fp,efgtoa@fp
  2816  00314C  0060  F264  F046   	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2817  003152  0060  F280  F047   	movff	vfpfcnvrt@f,efgtoa@f
  2818  003158  0060  F284  F048   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2819  00315E  0060  F288  F049   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2820  003164  0060  F28C  F04A   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2821  00316A  0060  F29C  F04B   	movff	vfpfcnvrt@c,efgtoa@c
  2822  003170  EC56  F010         	call	_efgtoa	;wreg free
  2823  003174  0060  F114  F098   	movff	?_efgtoa,?_vfpfcnvrt
  2824  00317A  0060  F118  F099   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2825  003180  0012               	return	
  2826  003182                     l6475:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2830  003182  0EA4               	movlw	low vfpfcnvrt@ct
  2831  003184  6E06               	movwf	strncmp@_l,c
  2832  003186  0E00               	movlw	high vfpfcnvrt@ct
  2833  003188  6E07               	movwf	strncmp@_l+1,c
  2834  00318A  0EA5               	movlw	low STR_18
  2835  00318C  6E08               	movwf	strncmp@_r,c
  2836  00318E  0E20               	movlw	high STR_18
  2837  003190  6E09               	movwf	strncmp@_r+1,c
  2838  003192  0E00               	movlw	0
  2839  003194  6E0B               	movwf	strncmp@n+1,c
  2840  003196  0E02               	movlw	2
  2841  003198  6E0A               	movwf	strncmp@n,c
  2842  00319A  EC9E  F023         	call	_strncmp	;wreg free
  2843  00319E  5006               	movf	?_strncmp,w,c
  2844  0031A0  1007               	iorwf	?_strncmp+1,w,c
  2845  0031A2  A4D8               	btfss	status,2,c
  2846  0031A4  D071               	goto	l6491
  2847                           
  2848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2849  0031A6  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2850  0031AC  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2851  0031B2  006F FF78  F051    	movff	postinc2,??_vfpfcnvrt
  2852  0031B8  006F FF74  F052    	movff	postdec2,??_vfpfcnvrt+1
  2853  0031BE  0E01               	movlw	1
  2854  0031C0  2651               	addwf	??_vfpfcnvrt,f,c
  2855  0031C2  0E00               	movlw	0
  2856  0031C4  2252               	addwfc	??_vfpfcnvrt+1,f,c
  2857  0031C6  0060  F147  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2858  0031CC  0060  F14B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2859  0031D2                     	if	0	;tblptru may be non-zero
  2860  0031D2                     	endif
  2861  0031D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2862  0031D2  0E00               	movlw	low (__mediumconst shr (0+16))
  2863  0031D4  6EF8               	movwf	tblptru,c
  2864  0031D6                     	endif
  2865  0031D6  0008               	tblrd		*
  2866  0031D8  006F FFD4  F0A7    	movff	tablat,vfpfcnvrt@c
  2867  0031DE  0EBF               	movlw	191
  2868  0031E0  6E51               	movwf	??_vfpfcnvrt& (0+255),c
  2869  0031E2  0EFF               	movlw	255
  2870  0031E4  6E52               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2871  0031E6  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2872  0031EC  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2873  0031F2  006F FF7B FFF6     	movff	postinc2,tblptrl
  2874  0031F8  006F FF77 FFF7     	movff	postdec2,tblptrh
  2875  0031FE                     	if	0	;tblptru may be non-zero
  2876  0031FE                     	endif
  2877  0031FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2878  0031FE  0E00               	movlw	low (__mediumconst shr (0+16))
  2879  003200  6EF8               	movwf	tblptru,c
  2880  003202                     	endif
  2881  003202  0008               	tblrd		*
  2882  003204  50F5               	movf	tablat,w,c
  2883  003206  6E53               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2884  003208  6A54               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2885  00320A  5051               	movf	??_vfpfcnvrt,w,c
  2886  00320C  2653               	addwf	??_vfpfcnvrt+2,f,c
  2887  00320E  5052               	movf	??_vfpfcnvrt+1,w,c
  2888  003210  2254               	addwfc	??_vfpfcnvrt+3,f,c
  2889  003212  5054               	movf	??_vfpfcnvrt+3,w,c
  2890  003214  E106               	bnz	u8900
  2891  003216  0E1A               	movlw	26
  2892  003218  5C53               	subwf	??_vfpfcnvrt+2,w,c
  2893  00321A  B0D8               	btfsc	status,0,c
  2894  00321C  D002               	goto	u8900
  2895  00321E  0E01               	movlw	1
  2896  003220  D001               	goto	u8910
  2897  003222                     u8900:
  2898  003222  0E00               	movlw	0
  2899  003224                     u8910:
  2900  003224  0100               	movlb	0	; () banked
  2901  003226  6F9E               	movwf	_vfpfcnvrt$1700& (0+255),b
  2902  003228  6B9F               	clrf	(_vfpfcnvrt$1700+1)& (0+255),b
  2903                           
  2904                           ; BSR set to: 0
  2905  00322A  519E               	movf	_vfpfcnvrt$1700& (0+255),w,b
  2906  00322C  119F               	iorwf	(_vfpfcnvrt$1700+1)& (0+255),w,b
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2910                           
  2911                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  2915  00322E  0060  F273  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2916  003234  0060  F277  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2917  00323A  006F FF7C  F051    	movff	indf2,??_vfpfcnvrt
  2918  003240  0E04               	movlw	4
  2919  003242  26DE               	addwf	postinc2,f,c
  2920  003244  006F FF7C  F052    	movff	indf2,??_vfpfcnvrt+1
  2921  00324A  0E00               	movlw	0
  2922  00324C  22DD               	addwfc	postdec2,f,c
  2923  00324E  0060  F147  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2924  003254  0060  F14B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2925  00325A  006F FF78  F0A0    	movff	postinc2,vfpfcnvrt@f
  2926  003260  006F FF78  F0A1    	movff	postinc2,vfpfcnvrt@f+1
  2927  003266  006F FF78  F0A2    	movff	postinc2,vfpfcnvrt@f+2
  2928  00326C  006F FF78  F0A3    	movff	postinc2,vfpfcnvrt@f+3
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  2932                           
  2933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  2934  003272  0E02               	movlw	2
  2935  003274  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2936  00327A  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2937  003280  26DE               	addwf	postinc2,f,c
  2938  003282  0E00               	movlw	0
  2939  003284  22DD               	addwfc	postdec2,f,c
  2940  003286  D75F               	goto	l6471
  2941  003288                     l6491:
  2942                           
  2943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2944  003288  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2945  00328E  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2946  003294  006F FF7B FFF6     	movff	postinc2,tblptrl
  2947  00329A  006F FF77 FFF7     	movff	postdec2,tblptrh
  2948  0032A0                     	if	0	;tblptru may be non-zero
  2949  0032A0                     	endif
  2950  0032A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2951  0032A0  0E00               	movlw	low (__mediumconst shr (0+16))
  2952  0032A2  6EF8               	movwf	tblptru,c
  2953  0032A4                     	endif
  2954  0032A4  0008               	tblrd		*
  2955  0032A6  50F5               	movf	tablat,w,c
  2956  0032A8  0A25               	xorlw	37
  2957  0032AA  A4D8               	btfss	status,2,c
  2958  0032AC  D01B               	goto	l6501
  2959                           
  2960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2961  0032AE  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2962  0032B4  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2963  0032BA  2ADE               	incf	postinc2,f,c
  2964  0032BC  0E00               	movlw	0
  2965  0032BE  22DD               	addwfc	postdec2,f,c
  2966                           
  2967                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2968  0032C0  0E00               	movlw	0
  2969  0032C2  6E07               	movwf	fputc@c+1,c
  2970  0032C4  0E25               	movlw	37
  2971  0032C6  6E06               	movwf	fputc@c,c
  2972  0032C8  0060  F260  F008   	movff	vfpfcnvrt@fp,fputc@fp
  2973  0032CE  0060  F264  F009   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2974  0032D4  ECC3  F024         	call	_fputc	;wreg free
  2975  0032D8                     l6497:
  2976                           
  2977                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2978  0032D8  0E00               	movlw	0
  2979  0032DA  0100               	movlb	0	; () banked
  2980  0032DC  6F99               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2981  0032DE  0E01               	movlw	1
  2982  0032E0  6F98               	movwf	?_vfpfcnvrt& (0+255),b
  2983  0032E2  0012               	return	
  2984  0032E4                     l6501:
  2985                           
  2986                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2987  0032E4  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2988  0032EA  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2989  0032F0  2ADE               	incf	postinc2,f,c
  2990  0032F2  0E00               	movlw	0
  2991  0032F4  22DD               	addwfc	postdec2,f,c
  2992                           
  2993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2994  0032F6  0E00               	movlw	0
  2995  0032F8  0100               	movlb	0	; () banked
  2996  0032FA  6F99               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2997  0032FC  0E00               	movlw	0
  2998  0032FE  6F98               	movwf	?_vfpfcnvrt& (0+255),b
  2999  003300  0012               	return	
  3000  003302                     l6507:
  3001                           
  3002                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3003  003302  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3004  003308  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3005  00330E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3006  003314  006F FF77 FFF7     	movff	postdec2,tblptrh
  3007  00331A                     	if	0	;tblptru may be non-zero
  3008  00331A                     	endif
  3009  00331A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3010  00331A  0E00               	movlw	low (__mediumconst shr (0+16))
  3011  00331C  6EF8               	movwf	tblptru,c
  3012  00331E                     	endif
  3013  00331E  0008               	tblrd		*
  3014  003320  50F5               	movf	tablat,w,c
  3015  003322  6E06               	movwf	fputc@c,c
  3016  003324  6A07               	clrf	fputc@c+1,c
  3017  003326  0060  F260  F008   	movff	vfpfcnvrt@fp,fputc@fp
  3018  00332C  0060  F264  F009   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3019  003332  ECC3  F024         	call	_fputc	;wreg free
  3020                           
  3021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3022  003336  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3023  00333C  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3024  003342  2ADE               	incf	postinc2,f,c
  3025  003344  0E00               	movlw	0
  3026  003346  22DD               	addwfc	postdec2,f,c
  3027  003348  D7C7               	goto	l6497
  3028  00334A                     __end_of_vfpfcnvrt:
  3029                           	opt callstack 0
  3030                           
  3031 ;; *************** function _strncmp *****************
  3032 ;; Defined at:
  3033 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  3036 ;;		 -> vfpfcnvrt@ct(3), 
  3037 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  3038 ;;		 -> STR_20(3), 
  3039 ;;  n               2    9[COMRAM] unsigned int 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  r               2   14[COMRAM] PTR const unsigned char 
  3042 ;;		 -> STR_20(3), 
  3043 ;;  l               2   12[COMRAM] PTR const unsigned char 
  3044 ;;		 -> vfpfcnvrt@ct(3), 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  2    5[COMRAM] int 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3054 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3055 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3057 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3058 ;;Total ram usage:       11 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    2
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_vfpfcnvrt
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text8
  3069  00473C                     __ptext8:
  3070                           	opt callstack 0
  3071  00473C                     _strncmp:
  3072                           	opt callstack 24
  3073                           
  3074                           ;incstack = 0
  3075  00473C  0060  F018  F00D   	movff	strncmp@_l,strncmp@l
  3076  004742  0060  F01C  F00E   	movff	strncmp@_l+1,strncmp@l+1
  3077  004748  0060  F020  F00F   	movff	strncmp@_r,strncmp@r
  3078  00474E  0060  F024  F010   	movff	strncmp@_r+1,strncmp@r+1
  3079  004754  060A               	decf	strncmp@n,f,c
  3080  004756  A0D8               	btfss	status,0,c
  3081  004758  060B               	decf	strncmp@n+1,f,c
  3082  00475A  280A               	incf	strncmp@n,w,c
  3083  00475C  E10F               	bnz	l6433
  3084  00475E  280B               	incf	strncmp@n+1,w,c
  3085  004760  A4D8               	btfss	status,2,c
  3086  004762  D00C               	goto	l6433
  3087  004764  0E00               	movlw	0
  3088  004766  6E07               	movwf	?_strncmp+1,c
  3089  004768  0E00               	movlw	0
  3090  00476A  6E06               	movwf	?_strncmp,c
  3091  00476C  0012               	return	
  3092  00476E                     l6431:
  3093  00476E  4A0D               	infsnz	strncmp@l,f,c
  3094  004770  2A0E               	incf	strncmp@l+1,f,c
  3095  004772  4A0F               	infsnz	strncmp@r,f,c
  3096  004774  2A10               	incf	strncmp@r+1,f,c
  3097  004776  060A               	decf	strncmp@n,f,c
  3098  004778  A0D8               	btfss	status,0,c
  3099  00477A  060B               	decf	strncmp@n+1,f,c
  3100  00477C                     l6433:
  3101  00477C  0060  F037  FFD9   	movff	strncmp@l,fsr2l
  3102  004782  0060  F03B  FFDA   	movff	strncmp@l+1,fsr2h
  3103  004788  50DF               	movf	indf2,w,c
  3104  00478A  B4D8               	btfsc	status,2,c
  3105  00478C  D026               	goto	u8840
  3106  00478E  0060  F03F  FFF6   	movff	strncmp@r,tblptrl
  3107  004794  0060  F043  FFF7   	movff	strncmp@r+1,tblptrh
  3108  00479A                     	if	0	;tblptru may be non-zero
  3109  00479A                     	endif
  3110  00479A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3111  00479A  0E00               	movlw	low (__mediumconst shr (0+16))
  3112  00479C  6EF8               	movwf	tblptru,c
  3113  00479E                     	endif
  3114  00479E  0008               	tblrd		*
  3115  0047A0  50F5               	movf	tablat,w,c
  3116  0047A2  0900               	iorlw	0
  3117  0047A4  B4D8               	btfsc	status,2,c
  3118  0047A6  D019               	goto	u8840
  3119  0047A8  500A               	movf	strncmp@n,w,c
  3120  0047AA  100B               	iorwf	strncmp@n+1,w,c
  3121  0047AC  B4D8               	btfsc	status,2,c
  3122  0047AE  D015               	goto	u8840
  3123  0047B0  0060  F037  FFD9   	movff	strncmp@l,fsr2l
  3124  0047B6  0060  F03B  FFDA   	movff	strncmp@l+1,fsr2h
  3125  0047BC  50DF               	movf	indf2,w,c
  3126  0047BE  6E0C               	movwf	??_strncmp& (0+255),c
  3127  0047C0  0060  F03F  FFF6   	movff	strncmp@r,tblptrl
  3128  0047C6  0060  F043  FFF7   	movff	strncmp@r+1,tblptrh
  3129  0047CC                     	if	0	;tblptru may be non-zero
  3130  0047CC                     	endif
  3131  0047CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3132  0047CC  0E00               	movlw	low (__mediumconst shr (0+16))
  3133  0047CE  6EF8               	movwf	tblptru,c
  3134  0047D0                     	endif
  3135  0047D0  0008               	tblrd		*
  3136  0047D2  50F5               	movf	tablat,w,c
  3137  0047D4  180C               	xorwf	??_strncmp,w,c
  3138  0047D6  B4D8               	btfsc	status,2,c
  3139  0047D8  D7CA               	goto	l6431
  3140  0047DA                     u8840:
  3141  0047DA  0060  F037  FFD9   	movff	strncmp@l,fsr2l
  3142  0047E0  0060  F03B  FFDA   	movff	strncmp@l+1,fsr2h
  3143  0047E6  50DF               	movf	indf2,w,c
  3144  0047E8  6E0C               	movwf	??_strncmp& (0+255),c
  3145  0047EA  0060  F03F  FFF6   	movff	strncmp@r,tblptrl
  3146  0047F0  0060  F043  FFF7   	movff	strncmp@r+1,tblptrh
  3147  0047F6                     	if	0	;tblptru may be non-zero
  3148  0047F6                     	endif
  3149  0047F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3150  0047F6  0E00               	movlw	low (__mediumconst shr (0+16))
  3151  0047F8  6EF8               	movwf	tblptru,c
  3152  0047FA                     	endif
  3153  0047FA  0008               	tblrd		*
  3154  0047FC  50F5               	movf	tablat,w,c
  3155  0047FE  5C0C               	subwf	??_strncmp,w,c
  3156  004800  6E06               	movwf	?_strncmp,c
  3157  004802  6A07               	clrf	?_strncmp+1,c
  3158  004804  A0D8               	btfss	status,0,c
  3159  004806  0607               	decf	?_strncmp+1,f,c
  3160  004808  0012               	return		;funcret
  3161  00480A                     __end_of_strncmp:
  3162                           	opt callstack 0
  3163                           
  3164 ;; *************** function _efgtoa *****************
  3165 ;; Defined at:
  3166 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  3169 ;;		 -> sprintf@f(6), 
  3170 ;;  f               4   70[COMRAM] PTR struct _IO_FILE
  3171 ;;  c               1   74[COMRAM] unsigned char 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  u               4   52[BANK0 ] unsigned char 
  3174 ;;  g               4   44[BANK0 ] unsigned char 
  3175 ;;  l               4   38[BANK0 ] unsigned char 
  3176 ;;  h               4   34[BANK0 ] unsigned char 
  3177 ;;  ou              4    0[BANK0 ] unsigned char 
  3178 ;;  n               2   50[BANK0 ] int 
  3179 ;;  e               2   48[BANK0 ] int 
  3180 ;;  i               2   42[BANK0 ] int 
  3181 ;;  w               2   31[BANK0 ] int 
  3182 ;;  p               2   28[BANK0 ] int 
  3183 ;;  sign            2   26[BANK0 ] int 
  3184 ;;  d               2   24[BANK0 ] int 
  3185 ;;  ne              2   22[BANK0 ] int 
  3186 ;;  m               2   20[BANK0 ] int 
  3187 ;;  pp              2   18[BANK0 ] int 
  3188 ;;  t               2   16[BANK0 ] int 
  3189 ;;  mode            1   33[BANK0 ] unsigned char 
  3190 ;;  nmode           1   30[BANK0 ] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  2   68[COMRAM] int 
  3193 ;; Registers used:
  3194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3200 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3201 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3202 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3203 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3204 ;;Total ram usage:       68 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:    6
  3207 ;; This function calls:
  3208 ;;		___awdiv
  3209 ;;		___awmod
  3210 ;;		___fladd
  3211 ;;		___fldiv
  3212 ;;		___fleq
  3213 ;;		___flge
  3214 ;;		___flmul
  3215 ;;		___flneg
  3216 ;;		___flsub
  3217 ;;		___fltol
  3218 ;;		___fpclassifyf
  3219 ;;		_floorf
  3220 ;;		_isupper
  3221 ;;		_pad
  3222 ;;		_strcpy
  3223 ;;		_tolower
  3224 ;; This function is called by:
  3225 ;;		_vfpfcnvrt
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text9
  3230  0020AC                     __ptext9:
  3231                           	opt callstack 0
  3232  0020AC                     _efgtoa:
  3233                           	opt callstack 20
  3234                           
  3235                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  3236                           
  3237                           ;incstack = 0
  3238  0020AC  0E00               	movlw	0
  3239  0020AE  0100               	movlb	0	; () banked
  3240  0020B0  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3241  0020B2  0E00               	movlw	0
  3242  0020B4  6F7A               	movwf	efgtoa@sign& (0+255),b
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  3246  0020B6  0060  F11C  F08C   	movff	efgtoa@f,efgtoa@g
  3247  0020BC  0060  F120  F08D   	movff	efgtoa@f+1,efgtoa@g+1
  3248  0020C2  0060  F124  F08E   	movff	efgtoa@f+2,efgtoa@g+2
  3249  0020C8  0060  F128  F08F   	movff	efgtoa@f+3,efgtoa@g+3
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  3253  0020CE  AF8F               	btfss	(efgtoa@g+3)& (0+255),7,b
  3254  0020D0  D01E               	goto	l6137
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  3258  0020D2  0E00               	movlw	0
  3259  0020D4  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3260  0020D6  0E01               	movlw	1
  3261  0020D8  6F7A               	movwf	efgtoa@sign& (0+255),b
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  3265  0020DA  0060  F230  F006   	movff	efgtoa@g,___flneg@f1
  3266  0020E0  0060  F234  F007   	movff	efgtoa@g+1,___flneg@f1+1
  3267  0020E6  0060  F238  F008   	movff	efgtoa@g+2,___flneg@f1+2
  3268  0020EC  0060  F23C  F009   	movff	efgtoa@g+3,___flneg@f1+3
  3269  0020F2  EC9F  F028         	call	___flneg	;wreg free
  3270  0020F6  0060  F018  F08C   	movff	?___flneg,efgtoa@g
  3271  0020FC  0060  F01C  F08D   	movff	?___flneg+1,efgtoa@g+1
  3272  002102  0060  F020  F08E   	movff	?___flneg+2,efgtoa@g+2
  3273  002108  0060  F024  F08F   	movff	?___flneg+3,efgtoa@g+3
  3274  00210E                     l6137:
  3275                           
  3276                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  3277  00210E  0E00               	movlw	0
  3278  002110  0100               	movlb	0	; () banked
  3279  002112  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  3280  002114  0E00               	movlw	0
  3281  002116  6F92               	movwf	efgtoa@n& (0+255),b
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  3285  002118  0060  F3A0  F07F   	movff	_width,efgtoa@w
  3286  00211E  0060  F3A4  F080   	movff	_width+1,efgtoa@w+1
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  3290  002124  517A               	movf	efgtoa@sign& (0+255),w,b
  3291  002126  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3292  002128  A4D8               	btfss	status,2,c
  3293  00212A  D002               	goto	u8300
  3294                           
  3295                           ; BSR set to: 0
  3296  00212C  A458               	btfss	_flags,2,c
  3297  00212E  D014               	goto	l6157
  3298  002130                     u8300:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  3302  002130  517A               	movf	efgtoa@sign& (0+255),w,b
  3303  002132  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3304  002134  A4D8               	btfss	status,2,c
  3305  002136  D004               	goto	l6149
  3306                           
  3307                           ; BSR set to: 0
  3308  002138  0E00               	movlw	0
  3309  00213A  6F65               	movwf	(_efgtoa$1671+1)& (0+255),b
  3310  00213C  0E2B               	movlw	43
  3311  00213E  D003               	goto	L1
  3312  002140                     l6149:
  3313                           
  3314                           ; BSR set to: 0
  3315  002140  0E00               	movlw	0
  3316  002142  6F65               	movwf	(_efgtoa$1671+1)& (0+255),b
  3317  002144  0E2D               	movlw	45
  3318  002146                     L1:
  3319  002146  6F64               	movwf	_efgtoa$1671& (0+255),b
  3320                           
  3321                           ; BSR set to: 0
  3322  002148  0060  F190  F120   	movff	_efgtoa$1671,_dbuf
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  3326  00214E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3327  002150  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  3331  002152  077F               	decf	efgtoa@w& (0+255),f,b
  3332  002154  A0D8               	btfss	status,0,c
  3333  002156  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3334  002158                     l6157:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3338  002158  0060  F230  F006   	movff	efgtoa@g,___fpclassifyf@x
  3339  00215E  0060  F234  F007   	movff	efgtoa@g+1,___fpclassifyf@x+1
  3340  002164  0060  F238  F008   	movff	efgtoa@g+2,___fpclassifyf@x+2
  3341  00216A  0060  F23C  F009   	movff	efgtoa@g+3,___fpclassifyf@x+3
  3342  002170  ECC0  F022         	call	___fpclassifyf	;wreg free
  3343  002174  0406               	decf	?___fpclassifyf,w,c
  3344  002176  1007               	iorwf	?___fpclassifyf+1,w,c
  3345  002178  A4D8               	btfss	status,2,c
  3346  00217A  D052               	goto	l6175
  3347  00217C  0EBF               	movlw	191
  3348  00217E  6E4C               	movwf	??_efgtoa& (0+255),c
  3349  002180  0EFF               	movlw	255
  3350  002182  6E4D               	movwf	(??_efgtoa+1)& (0+255),c
  3351  002184  504B               	movf	efgtoa@c,w,c
  3352  002186  6E4E               	movwf	(??_efgtoa+2)& (0+255),c
  3353  002188  6A4F               	clrf	(??_efgtoa+3)& (0+255),c
  3354  00218A  504C               	movf	??_efgtoa,w,c
  3355  00218C  264E               	addwf	??_efgtoa+2,f,c
  3356  00218E  504D               	movf	??_efgtoa+1,w,c
  3357  002190  224F               	addwfc	??_efgtoa+3,f,c
  3358  002192  504F               	movf	??_efgtoa+3,w,c
  3359  002194  E106               	bnz	u8330
  3360  002196  0E1A               	movlw	26
  3361  002198  5C4E               	subwf	??_efgtoa+2,w,c
  3362  00219A  B0D8               	btfsc	status,0,c
  3363  00219C  D002               	goto	u8330
  3364  00219E  0E01               	movlw	1
  3365  0021A0  D001               	goto	u8340
  3366  0021A2                     u8330:
  3367  0021A2  0E00               	movlw	0
  3368  0021A4                     u8340:
  3369  0021A4  0100               	movlb	0	; () banked
  3370  0021A6  6F66               	movwf	_efgtoa$1672& (0+255),b
  3371  0021A8  6B67               	clrf	(_efgtoa$1672+1)& (0+255),b
  3372                           
  3373                           ; BSR set to: 0
  3374  0021AA  5166               	movf	_efgtoa$1672& (0+255),w,b
  3375  0021AC  1167               	iorwf	(_efgtoa$1672+1)& (0+255),w,b
  3376  0021AE  B4D8               	btfsc	status,2,c
  3377  0021B0  D00D               	goto	l6167
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  3381  0021B2  0E20               	movlw	low _dbuf
  3382  0021B4  2592               	addwf	efgtoa@n& (0+255),w,b
  3383  0021B6  6E06               	movwf	strcpy@dest,c
  3384  0021B8  0E01               	movlw	high _dbuf
  3385  0021BA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3386  0021BC  6E07               	movwf	strcpy@dest+1,c
  3387  0021BE  0E95               	movlw	low STR_10
  3388  0021C0  6E08               	movwf	strcpy@src,c
  3389  0021C2  0E20               	movlw	high STR_10
  3390  0021C4  6E09               	movwf	strcpy@src+1,c
  3391  0021C6  EC2A  F027         	call	_strcpy	;wreg free
  3392                           
  3393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  3394  0021CA  D00C               	goto	l6169
  3395  0021CC                     l6167:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  3399  0021CC  0E20               	movlw	low _dbuf
  3400  0021CE  2592               	addwf	efgtoa@n& (0+255),w,b
  3401  0021D0  6E06               	movwf	strcpy@dest,c
  3402  0021D2  0E01               	movlw	high _dbuf
  3403  0021D4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3404  0021D6  6E07               	movwf	strcpy@dest+1,c
  3405  0021D8  0E9D               	movlw	low STR_11
  3406  0021DA  6E08               	movwf	strcpy@src,c
  3407  0021DC  0E20               	movlw	high STR_11
  3408  0021DE  6E09               	movwf	strcpy@src+1,c
  3409  0021E0  EC2A  F027         	call	_strcpy	;wreg free
  3410  0021E4                     l6169:
  3411                           
  3412                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  3413  0021E4  0100               	movlb	0	; () banked
  3414  0021E6  0EFD               	movlw	253
  3415  0021E8  277F               	addwf	efgtoa@w& (0+255),f,b
  3416  0021EA  0EFF               	movlw	255
  3417  0021EC  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3418  0021EE                     l6171:
  3419                           
  3420                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  3421  0021EE  0060  F114  F016   	movff	efgtoa@fp,pad@fp
  3422  0021F4  0060  F118  F017   	movff	efgtoa@fp+1,pad@fp+1
  3423  0021FA  0E20               	movlw	low _dbuf
  3424  0021FC  6E18               	movwf	pad@buf,c
  3425  0021FE  0E01               	movlw	high _dbuf
  3426  002200  6E19               	movwf	pad@buf+1,c
  3427  002202  0060  F1FC  F01A   	movff	efgtoa@w,pad@p
  3428  002208  0060  F200  F01B   	movff	efgtoa@w+1,pad@p+1
  3429  00220E  EC6A  F024         	call	_pad	;wreg free
  3430  002212  0060  F058  F045   	movff	?_pad,?_efgtoa
  3431  002218  0060  F05C  F046   	movff	?_pad+1,?_efgtoa+1
  3432  00221E  0012               	return	
  3433  002220                     l6175:
  3434                           
  3435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3436  002220  0060  F230  F006   	movff	efgtoa@g,___fpclassifyf@x
  3437  002226  0060  F234  F007   	movff	efgtoa@g+1,___fpclassifyf@x+1
  3438  00222C  0060  F238  F008   	movff	efgtoa@g+2,___fpclassifyf@x+2
  3439  002232  0060  F23C  F009   	movff	efgtoa@g+3,___fpclassifyf@x+3
  3440  002238  ECC0  F022         	call	___fpclassifyf	;wreg free
  3441  00223C  5006               	movf	?___fpclassifyf,w,c
  3442  00223E  1007               	iorwf	?___fpclassifyf+1,w,c
  3443  002240  A4D8               	btfss	status,2,c
  3444  002242  D035               	goto	l6193
  3445  002244  0EBF               	movlw	191
  3446  002246  6E4C               	movwf	??_efgtoa& (0+255),c
  3447  002248  0EFF               	movlw	255
  3448  00224A  6E4D               	movwf	(??_efgtoa+1)& (0+255),c
  3449  00224C  504B               	movf	efgtoa@c,w,c
  3450  00224E  6E4E               	movwf	(??_efgtoa+2)& (0+255),c
  3451  002250  6A4F               	clrf	(??_efgtoa+3)& (0+255),c
  3452  002252  504C               	movf	??_efgtoa,w,c
  3453  002254  264E               	addwf	??_efgtoa+2,f,c
  3454  002256  504D               	movf	??_efgtoa+1,w,c
  3455  002258  224F               	addwfc	??_efgtoa+3,f,c
  3456  00225A  504F               	movf	??_efgtoa+3,w,c
  3457  00225C  E106               	bnz	u8370
  3458  00225E  0E1A               	movlw	26
  3459  002260  5C4E               	subwf	??_efgtoa+2,w,c
  3460  002262  B0D8               	btfsc	status,0,c
  3461  002264  D002               	goto	u8370
  3462  002266  0E01               	movlw	1
  3463  002268  D001               	goto	u8380
  3464  00226A                     u8370:
  3465  00226A  0E00               	movlw	0
  3466  00226C                     u8380:
  3467  00226C  0100               	movlb	0	; () banked
  3468  00226E  6F68               	movwf	_efgtoa$1677& (0+255),b
  3469  002270  6B69               	clrf	(_efgtoa$1677+1)& (0+255),b
  3470                           
  3471                           ; BSR set to: 0
  3472  002272  5168               	movf	_efgtoa$1677& (0+255),w,b
  3473  002274  1169               	iorwf	(_efgtoa$1677+1)& (0+255),w,b
  3474  002276  B4D8               	btfsc	status,2,c
  3475  002278  D00D               	goto	l6185
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  3479  00227A  0E20               	movlw	low _dbuf
  3480  00227C  2592               	addwf	efgtoa@n& (0+255),w,b
  3481  00227E  6E06               	movwf	strcpy@dest,c
  3482  002280  0E01               	movlw	high _dbuf
  3483  002282  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3484  002284  6E07               	movwf	strcpy@dest+1,c
  3485  002286  0E99               	movlw	low STR_14
  3486  002288  6E08               	movwf	strcpy@src,c
  3487  00228A  0E20               	movlw	high STR_14
  3488  00228C  6E09               	movwf	strcpy@src+1,c
  3489  00228E  EC2A  F027         	call	_strcpy	;wreg free
  3490                           
  3491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  3492  002292  D7A8               	goto	l6169
  3493  002294                     l6185:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  3497  002294  0E20               	movlw	low _dbuf
  3498  002296  2592               	addwf	efgtoa@n& (0+255),w,b
  3499  002298  6E06               	movwf	strcpy@dest,c
  3500  00229A  0E01               	movlw	high _dbuf
  3501  00229C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3502  00229E  6E07               	movwf	strcpy@dest+1,c
  3503  0022A0  0EA1               	movlw	low STR_15
  3504  0022A2  6E08               	movwf	strcpy@src,c
  3505  0022A4  0E20               	movlw	high STR_15
  3506  0022A6  6E09               	movwf	strcpy@src+1,c
  3507  0022A8  EC2A  F027         	call	_strcpy	;wreg free
  3508  0022AC  D79B               	goto	l6169
  3509  0022AE                     l6193:
  3510                           
  3511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  3512  0022AE  0E00               	movlw	0
  3513  0022B0  0100               	movlb	0	; () banked
  3514  0022B2  6F94               	movwf	efgtoa@u& (0+255),b
  3515  0022B4  0E00               	movlw	0
  3516  0022B6  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3517  0022B8  0E80               	movlw	128
  3518  0022BA  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3519  0022BC  0E3F               	movlw	63
  3520  0022BE  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3521                           
  3522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  3523  0022C0  0E00               	movlw	0
  3524  0022C2  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3525  0022C4  0E00               	movlw	0
  3526  0022C6  6F90               	movwf	efgtoa@e& (0+255),b
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  3530  0022C8  0060  F230  F006   	movff	efgtoa@g,___fleq@ff1
  3531  0022CE  0060  F234  F007   	movff	efgtoa@g+1,___fleq@ff1+1
  3532  0022D4  0060  F238  F008   	movff	efgtoa@g+2,___fleq@ff1+2
  3533  0022DA  0060  F23C  F009   	movff	efgtoa@g+3,___fleq@ff1+3
  3534  0022E0  0E00               	movlw	0
  3535  0022E2  6E0A               	movwf	___fleq@ff2,c
  3536  0022E4  0E00               	movlw	0
  3537  0022E6  6E0B               	movwf	___fleq@ff2+1,c
  3538  0022E8  0E00               	movlw	0
  3539  0022EA  6E0C               	movwf	___fleq@ff2+2,c
  3540  0022EC  0E00               	movlw	0
  3541  0022EE  6E0D               	movwf	___fleq@ff2+3,c
  3542  0022F0  ECB9  F025         	call	___fleq	;wreg free
  3543  0022F4  A0D8               	btfss	status,0,c
  3544  0022F6  D026               	goto	l6203
  3545  0022F8  D09A               	goto	u8420
  3546  0022FA                     l6199:
  3547                           
  3548                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  3549  0022FA  0060  F250  F014   	movff	efgtoa@u,___flmul@b
  3550  002300  0060  F254  F015   	movff	efgtoa@u+1,___flmul@b+1
  3551  002306  0060  F258  F016   	movff	efgtoa@u+2,___flmul@b+2
  3552  00230C  0060  F25C  F017   	movff	efgtoa@u+3,___flmul@b+3
  3553  002312  0E00               	movlw	0
  3554  002314  6E18               	movwf	___flmul@a,c
  3555  002316  0E00               	movlw	0
  3556  002318  6E19               	movwf	___flmul@a+1,c
  3557  00231A  0E20               	movlw	32
  3558  00231C  6E1A               	movwf	___flmul@a+2,c
  3559  00231E  0E41               	movlw	65
  3560  002320  6E1B               	movwf	___flmul@a+3,c
  3561  002322  EC01  F016         	call	___flmul	;wreg free
  3562  002326  0060  F050  F094   	movff	?___flmul,efgtoa@u
  3563  00232C  0060  F054  F095   	movff	?___flmul+1,efgtoa@u+1
  3564  002332  0060  F058  F096   	movff	?___flmul+2,efgtoa@u+2
  3565  002338  0060  F05C  F097   	movff	?___flmul+3,efgtoa@u+3
  3566                           
  3567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  3568  00233E  0100               	movlb	0	; () banked
  3569  002340  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3570  002342  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3571  002344                     l6203:
  3572                           
  3573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  3574  002344  0060  F230  F02D   	movff	efgtoa@g,___flge@ff1
  3575  00234A  0060  F234  F02E   	movff	efgtoa@g+1,___flge@ff1+1
  3576  002350  0060  F238  F02F   	movff	efgtoa@g+2,___flge@ff1+2
  3577  002356  0060  F23C  F030   	movff	efgtoa@g+3,___flge@ff1+3
  3578  00235C  0E00               	movlw	0
  3579  00235E  6E18               	movwf	___flmul@a,c
  3580  002360  0E00               	movlw	0
  3581  002362  6E19               	movwf	___flmul@a+1,c
  3582  002364  0E20               	movlw	32
  3583  002366  6E1A               	movwf	___flmul@a+2,c
  3584  002368  0E41               	movlw	65
  3585  00236A  6E1B               	movwf	___flmul@a+3,c
  3586  00236C  0060  F250  F014   	movff	efgtoa@u,___flmul@b
  3587  002372  0060  F254  F015   	movff	efgtoa@u+1,___flmul@b+1
  3588  002378  0060  F258  F016   	movff	efgtoa@u+2,___flmul@b+2
  3589  00237E  0060  F25C  F017   	movff	efgtoa@u+3,___flmul@b+3
  3590  002384  EC01  F016         	call	___flmul	;wreg free
  3591  002388  0060  F050  F031   	movff	?___flmul,___flge@ff2
  3592  00238E  0060  F054  F032   	movff	?___flmul+1,___flge@ff2+1
  3593  002394  0060  F058  F033   	movff	?___flmul+2,___flge@ff2+2
  3594  00239A  0060  F05C  F034   	movff	?___flmul+3,___flge@ff2+3
  3595  0023A0  EC36  F023         	call	___flge	;wreg free
  3596  0023A4  A0D8               	btfss	status,0,c
  3597  0023A6  D027               	goto	l6209
  3598  0023A8  D7A8               	goto	l6199
  3599  0023AA                     l6205:
  3600                           
  3601                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  3602  0023AA  0060  F250  F006   	movff	efgtoa@u,___fldiv@b
  3603  0023B0  0060  F254  F007   	movff	efgtoa@u+1,___fldiv@b+1
  3604  0023B6  0060  F258  F008   	movff	efgtoa@u+2,___fldiv@b+2
  3605  0023BC  0060  F25C  F009   	movff	efgtoa@u+3,___fldiv@b+3
  3606  0023C2  0E00               	movlw	0
  3607  0023C4  6E0A               	movwf	___fldiv@a,c
  3608  0023C6  0E00               	movlw	0
  3609  0023C8  6E0B               	movwf	___fldiv@a+1,c
  3610  0023CA  0E20               	movlw	32
  3611  0023CC  6E0C               	movwf	___fldiv@a+2,c
  3612  0023CE  0E41               	movlw	65
  3613  0023D0  6E0D               	movwf	___fldiv@a+3,c
  3614  0023D2  ECDE  F01C         	call	___fldiv	;wreg free
  3615  0023D6  0060  F018  F094   	movff	?___fldiv,efgtoa@u
  3616  0023DC  0060  F01C  F095   	movff	?___fldiv+1,efgtoa@u+1
  3617  0023E2  0060  F020  F096   	movff	?___fldiv+2,efgtoa@u+2
  3618  0023E8  0060  F024  F097   	movff	?___fldiv+3,efgtoa@u+3
  3619                           
  3620                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  3621  0023EE  0100               	movlb	0	; () banked
  3622  0023F0  0790               	decf	efgtoa@e& (0+255),f,b
  3623  0023F2  A0D8               	btfss	status,0,c
  3624  0023F4  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3625  0023F6                     l6209:
  3626                           
  3627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  3628  0023F6  0060  F230  F02D   	movff	efgtoa@g,___flge@ff1
  3629  0023FC  0060  F234  F02E   	movff	efgtoa@g+1,___flge@ff1+1
  3630  002402  0060  F238  F02F   	movff	efgtoa@g+2,___flge@ff1+2
  3631  002408  0060  F23C  F030   	movff	efgtoa@g+3,___flge@ff1+3
  3632  00240E  0060  F250  F031   	movff	efgtoa@u,___flge@ff2
  3633  002414  0060  F254  F032   	movff	efgtoa@u+1,___flge@ff2+1
  3634  00241A  0060  F258  F033   	movff	efgtoa@u+2,___flge@ff2+2
  3635  002420  0060  F25C  F034   	movff	efgtoa@u+3,___flge@ff2+3
  3636  002426  EC36  F023         	call	___flge	;wreg free
  3637  00242A  A0D8               	btfss	status,0,c
  3638  00242C  D7BE               	goto	l6205
  3639  00242E                     u8420:
  3640                           
  3641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  3642  00242E  0060  F12C  F00C   	movff	efgtoa@c,tolower@c
  3643  002434  6A0D               	clrf	tolower@c+1,c
  3644  002436  EC11  F028         	call	_tolower	;wreg free
  3645  00243A  500C               	movf	?_tolower,w,c
  3646  00243C  0100               	movlb	0	; () banked
  3647  00243E  6F81               	movwf	efgtoa@mode& (0+255),b
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  3651  002440  0060  F204  F07E   	movff	efgtoa@mode,efgtoa@nmode
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  3655  002446  0E67               	movlw	103
  3656  002448  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3657  00244A  A4D8               	btfss	status,2,c
  3658  00244C  D01B               	goto	l6225
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  3662  00244E  5056               	movf	_prec,w,c
  3663  002450  1057               	iorwf	_prec+1,w,c
  3664  002452  A4D8               	btfss	status,2,c
  3665  002454  D004               	goto	l6221
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  3669  002456  0E00               	movlw	0
  3670  002458  6E57               	movwf	_prec+1,c
  3671  00245A  0E01               	movlw	1
  3672  00245C  6E56               	movwf	_prec,c
  3673  00245E                     l6221:
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  3677  00245E  BE57               	btfsc	_prec+1,7,c
  3678  002460  D005               	goto	u8450
  3679  002462  5057               	movf	_prec+1,w,c
  3680  002464  E108               	bnz	l605
  3681  002466  0456               	decf	_prec,w,c
  3682  002468  B0D8               	btfsc	status,0,c
  3683  00246A  D005               	goto	l605
  3684  00246C                     u8450:
  3685                           
  3686                           ; BSR set to: 0
  3687  00246C  0E00               	movlw	0
  3688  00246E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3689  002470  0E06               	movlw	6
  3690  002472  6F7C               	movwf	efgtoa@p& (0+255),b
  3691  002474  D00A               	goto	l6231
  3692  002476                     l605:
  3693                           
  3694                           ; BSR set to: 0
  3695  002476  0060  F158  F07C   	movff	_prec,efgtoa@p
  3696  00247C  0060  F15C  F07D   	movff	_prec+1,efgtoa@p+1
  3697  002482  D003               	goto	l6231
  3698  002484                     l6225:
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  3702  002484  AE57               	btfss	_prec+1,7,c
  3703  002486  D7F7               	goto	l605
  3704  002488  D7F1               	goto	u8450
  3705  00248A                     l6231:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  3709  00248A  0E67               	movlw	103
  3710  00248C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3711  00248E  A4D8               	btfss	status,2,c
  3712  002490  D024               	goto	l6241
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  3716  002492  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3717  002494  D006               	goto	u8480
  3718  002496  0EFC               	movlw	252
  3719  002498  5D90               	subwf	efgtoa@e& (0+255),w,b
  3720  00249A  0EFF               	movlw	255
  3721  00249C  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3722  00249E  A0D8               	btfss	status,0,c
  3723  0024A0  D01A               	goto	l6239
  3724  0024A2                     u8480:
  3725                           
  3726                           ; BSR set to: 0
  3727  0024A2  0EFF               	movlw	255
  3728  0024A4  6E4C               	movwf	??_efgtoa& (0+255),c
  3729  0024A6  0EFF               	movlw	255
  3730  0024A8  6E4D               	movwf	(??_efgtoa+1)& (0+255),c
  3731  0024AA  0060  F1F0  F04E   	movff	efgtoa@p,??_efgtoa+2
  3732  0024B0  0060  F1F4  F04F   	movff	efgtoa@p+1,??_efgtoa+3
  3733  0024B6  504C               	movf	??_efgtoa,w,c
  3734  0024B8  264E               	addwf	??_efgtoa+2,f,c
  3735  0024BA  504D               	movf	??_efgtoa+1,w,c
  3736  0024BC  224F               	addwfc	??_efgtoa+3,f,c
  3737  0024BE  5190               	movf	efgtoa@e& (0+255),w,b
  3738  0024C0  5C4E               	subwf	??_efgtoa+2,w,c
  3739  0024C2  504F               	movf	??_efgtoa+3,w,c
  3740  0024C4  0A80               	xorlw	128
  3741  0024C6  6E50               	movwf	(??_efgtoa+4)& (0+255),c
  3742  0024C8  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3743  0024CA  0A80               	xorlw	128
  3744  0024CC  5850               	subwfb	(??_efgtoa+4)& (0+255),w,c
  3745  0024CE  A0D8               	btfss	status,0,c
  3746  0024D0  D002               	goto	l6239
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  3750  0024D2  0E66               	movlw	102
  3751  0024D4  D001               	goto	L2
  3752  0024D6                     l6239:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  3756  0024D6  0E65               	movlw	101
  3757  0024D8                     L2:
  3758  0024D8  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3759  0024DA                     l6241:
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  3763  0024DA  0060  F1F0  F074   	movff	efgtoa@p,efgtoa@m
  3764  0024E0  0060  F1F4  F075   	movff	efgtoa@p+1,efgtoa@m+1
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  3768  0024E6  0E67               	movlw	103
  3769  0024E8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3770  0024EA  A4D8               	btfss	status,2,c
  3771  0024EC  D005               	goto	u8520
  3772                           
  3773                           ; BSR set to: 0
  3774  0024EE  0E66               	movlw	102
  3775  0024F0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3776  0024F2  B4D8               	btfsc	status,2,c
  3777                           
  3778                           ; BSR set to: 0
  3779  0024F4  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3780  0024F6  D002               	goto	l6251
  3781  0024F8                     u8520:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  3785  0024F8  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3786  0024FA  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3787  0024FC                     l6251:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  3791  0024FC  0E66               	movlw	102
  3792  0024FE  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3793  002500  A4D8               	btfss	status,2,c
  3794  002502  D016               	goto	l6261
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  3798  002504  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3799  002506  D00C               	goto	l6257
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  3803  002508  0E00               	movlw	0
  3804  00250A  6F94               	movwf	efgtoa@u& (0+255),b
  3805  00250C  0E00               	movlw	0
  3806  00250E  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3807  002510  0E80               	movlw	128
  3808  002512  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3809  002514  0E3F               	movlw	63
  3810  002516  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3811                           
  3812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  3813  002518  0E00               	movlw	0
  3814  00251A  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3815  00251C  0E00               	movlw	0
  3816  00251E  6F90               	movwf	efgtoa@e& (0+255),b
  3817  002520                     l6257:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  3821  002520  0E67               	movlw	103
  3822  002522  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3823  002524  B4D8               	btfsc	status,2,c
  3824  002526  D004               	goto	l6261
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  3828  002528  5190               	movf	efgtoa@e& (0+255),w,b
  3829  00252A  2774               	addwf	efgtoa@m& (0+255),f,b
  3830  00252C  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3831  00252E  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3832  002530                     l6261:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  3836  002530  0E00               	movlw	0
  3837  002532  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3838  002534  0E00               	movlw	0
  3839  002536  6F8A               	movwf	efgtoa@i& (0+255),b
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  3843  002538  0060  F230  F082   	movff	efgtoa@g,efgtoa@h
  3844  00253E  0060  F234  F083   	movff	efgtoa@g+1,efgtoa@h+1
  3845  002544  0060  F238  F084   	movff	efgtoa@g+2,efgtoa@h+2
  3846  00254A  0060  F23C  F085   	movff	efgtoa@g+3,efgtoa@h+3
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  3850  002550  0060  F250  F060   	movff	efgtoa@u,efgtoa@ou
  3851  002556  0060  F254  F061   	movff	efgtoa@u+1,efgtoa@ou+1
  3852  00255C  0060  F258  F062   	movff	efgtoa@u+2,efgtoa@ou+2
  3853  002562  0060  F25C  F063   	movff	efgtoa@u+3,efgtoa@ou+3
  3854                           
  3855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3856  002568  D0AD               	goto	l6275
  3857  00256A                     l6267:
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  3861  00256A  0060  F208  F006   	movff	efgtoa@h,___fldiv@b
  3862  002570  0060  F20C  F007   	movff	efgtoa@h+1,___fldiv@b+1
  3863  002576  0060  F210  F008   	movff	efgtoa@h+2,___fldiv@b+2
  3864  00257C  0060  F214  F009   	movff	efgtoa@h+3,___fldiv@b+3
  3865  002582  0060  F250  F00A   	movff	efgtoa@u,___fldiv@a
  3866  002588  0060  F254  F00B   	movff	efgtoa@u+1,___fldiv@a+1
  3867  00258E  0060  F258  F00C   	movff	efgtoa@u+2,___fldiv@a+2
  3868  002594  0060  F25C  F00D   	movff	efgtoa@u+3,___fldiv@a+3
  3869  00259A  ECDE  F01C         	call	___fldiv	;wreg free
  3870  00259E  0060  F018  F01F   	movff	?___fldiv,floorf@x
  3871  0025A4  0060  F01C  F020   	movff	?___fldiv+1,floorf@x+1
  3872  0025AA  0060  F020  F021   	movff	?___fldiv+2,floorf@x+2
  3873  0025B0  0060  F024  F022   	movff	?___fldiv+3,floorf@x+3
  3874  0025B6  EC79  F01F         	call	_floorf	;wreg free
  3875  0025BA  0060  F07C  F086   	movff	?_floorf,efgtoa@l
  3876  0025C0  0060  F080  F087   	movff	?_floorf+1,efgtoa@l+1
  3877  0025C6  0060  F084  F088   	movff	?_floorf+2,efgtoa@l+2
  3878  0025CC  0060  F088  F089   	movff	?_floorf+3,efgtoa@l+3
  3879                           
  3880                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  3881  0025D2  0060  F218  F006   	movff	efgtoa@l,___fltol@f1
  3882  0025D8  0060  F21C  F007   	movff	efgtoa@l+1,___fltol@f1+1
  3883  0025DE  0060  F220  F008   	movff	efgtoa@l+2,___fltol@f1+2
  3884  0025E4  0060  F224  F009   	movff	efgtoa@l+3,___fltol@f1+3
  3885  0025EA  EC05  F024         	call	___fltol	;wreg free
  3886  0025EE  0060  F018  F078   	movff	?___fltol,efgtoa@d
  3887  0025F4  0060  F01C  F079   	movff	?___fltol+1,efgtoa@d+1
  3888                           
  3889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  3890  0025FA  0060  F208  F03D   	movff	efgtoa@h,___flsub@b
  3891  002600  0060  F20C  F03E   	movff	efgtoa@h+1,___flsub@b+1
  3892  002606  0060  F210  F03F   	movff	efgtoa@h+2,___flsub@b+2
  3893  00260C  0060  F214  F040   	movff	efgtoa@h+3,___flsub@b+3
  3894  002612  0060  F250  F018   	movff	efgtoa@u,___flmul@a
  3895  002618  0060  F254  F019   	movff	efgtoa@u+1,___flmul@a+1
  3896  00261E  0060  F258  F01A   	movff	efgtoa@u+2,___flmul@a+2
  3897  002624  0060  F25C  F01B   	movff	efgtoa@u+3,___flmul@a+3
  3898  00262A  0060  F218  F014   	movff	efgtoa@l,___flmul@b
  3899  002630  0060  F21C  F015   	movff	efgtoa@l+1,___flmul@b+1
  3900  002636  0060  F220  F016   	movff	efgtoa@l+2,___flmul@b+2
  3901  00263C  0060  F224  F017   	movff	efgtoa@l+3,___flmul@b+3
  3902  002642  EC01  F016         	call	___flmul	;wreg free
  3903  002646  0060  F050  F041   	movff	?___flmul,___flsub@a
  3904  00264C  0060  F054  F042   	movff	?___flmul+1,___flsub@a+1
  3905  002652  0060  F058  F043   	movff	?___flmul+2,___flsub@a+2
  3906  002658  0060  F05C  F044   	movff	?___flmul+3,___flsub@a+3
  3907  00265E  EC5E  F027         	call	___flsub	;wreg free
  3908  002662  0060  F0F4  F082   	movff	?___flsub,efgtoa@h
  3909  002668  0060  F0F8  F083   	movff	?___flsub+1,efgtoa@h+1
  3910  00266E  0060  F0FC  F084   	movff	?___flsub+2,efgtoa@h+2
  3911  002674  0060  F100  F085   	movff	?___flsub+3,efgtoa@h+3
  3912                           
  3913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  3914  00267A  0060  F250  F006   	movff	efgtoa@u,___fldiv@b
  3915  002680  0060  F254  F007   	movff	efgtoa@u+1,___fldiv@b+1
  3916  002686  0060  F258  F008   	movff	efgtoa@u+2,___fldiv@b+2
  3917  00268C  0060  F25C  F009   	movff	efgtoa@u+3,___fldiv@b+3
  3918  002692  0E00               	movlw	0
  3919  002694  6E0A               	movwf	___fldiv@a,c
  3920  002696  0E00               	movlw	0
  3921  002698  6E0B               	movwf	___fldiv@a+1,c
  3922  00269A  0E20               	movlw	32
  3923  00269C  6E0C               	movwf	___fldiv@a+2,c
  3924  00269E  0E41               	movlw	65
  3925  0026A0  6E0D               	movwf	___fldiv@a+3,c
  3926  0026A2  ECDE  F01C         	call	___fldiv	;wreg free
  3927  0026A6  0060  F018  F094   	movff	?___fldiv,efgtoa@u
  3928  0026AC  0060  F01C  F095   	movff	?___fldiv+1,efgtoa@u+1
  3929  0026B2  0060  F020  F096   	movff	?___fldiv+2,efgtoa@u+2
  3930  0026B8  0060  F024  F097   	movff	?___fldiv+3,efgtoa@u+3
  3931                           
  3932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  3933  0026BE  0100               	movlb	0	; () banked
  3934  0026C0  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3935  0026C2  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3936  0026C4                     l6275:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3940  0026C4  5174               	movf	efgtoa@m& (0+255),w,b
  3941  0026C6  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3942  0026C8  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3943  0026CA  0A80               	xorlw	128
  3944  0026CC  6E4C               	movwf	??_efgtoa& (0+255),c
  3945  0026CE  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3946  0026D0  0A80               	xorlw	128
  3947  0026D2  584C               	subwfb	??_efgtoa& (0+255),w,c
  3948  0026D4  A0D8               	btfss	status,0,c
  3949  0026D6  D749               	goto	l6267
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  3953  0026D8  0060  F250  F014   	movff	efgtoa@u,___flmul@b
  3954  0026DE  0060  F254  F015   	movff	efgtoa@u+1,___flmul@b+1
  3955  0026E4  0060  F258  F016   	movff	efgtoa@u+2,___flmul@b+2
  3956  0026EA  0060  F25C  F017   	movff	efgtoa@u+3,___flmul@b+3
  3957  0026F0  0E00               	movlw	0
  3958  0026F2  6E18               	movwf	___flmul@a,c
  3959  0026F4  0E00               	movlw	0
  3960  0026F6  6E19               	movwf	___flmul@a+1,c
  3961  0026F8  0EA0               	movlw	160
  3962  0026FA  6E1A               	movwf	___flmul@a+2,c
  3963  0026FC  0E40               	movlw	64
  3964  0026FE  6E1B               	movwf	___flmul@a+3,c
  3965  002700  EC01  F016         	call	___flmul	;wreg free
  3966  002704  0060  F050  F086   	movff	?___flmul,efgtoa@l
  3967  00270A  0060  F054  F087   	movff	?___flmul+1,efgtoa@l+1
  3968  002710  0060  F058  F088   	movff	?___flmul+2,efgtoa@l+2
  3969  002716  0060  F05C  F089   	movff	?___flmul+3,efgtoa@l+3
  3970                           
  3971                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  3972  00271C  0060  F208  F02D   	movff	efgtoa@h,___flge@ff1
  3973  002722  0060  F20C  F02E   	movff	efgtoa@h+1,___flge@ff1+1
  3974  002728  0060  F210  F02F   	movff	efgtoa@h+2,___flge@ff1+2
  3975  00272E  0060  F214  F030   	movff	efgtoa@h+3,___flge@ff1+3
  3976  002734  0060  F218  F031   	movff	efgtoa@l,___flge@ff2
  3977  00273A  0060  F21C  F032   	movff	efgtoa@l+1,___flge@ff2+1
  3978  002740  0060  F220  F033   	movff	efgtoa@l+2,___flge@ff2+2
  3979  002746  0060  F224  F034   	movff	efgtoa@l+3,___flge@ff2+3
  3980  00274C  EC36  F023         	call	___flge	;wreg free
  3981  002750  B0D8               	btfsc	status,0,c
  3982  002752  D003               	goto	l6283
  3983                           
  3984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  3985  002754  0E00               	movlw	0
  3986  002756  0100               	movlb	0	; () banked
  3987  002758  D020               	goto	L3
  3988  00275A                     l6283:
  3989                           
  3990                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  3991  00275A  0060  F208  F006   	movff	efgtoa@h,___fleq@ff1
  3992  002760  0060  F20C  F007   	movff	efgtoa@h+1,___fleq@ff1+1
  3993  002766  0060  F210  F008   	movff	efgtoa@h+2,___fleq@ff1+2
  3994  00276C  0060  F214  F009   	movff	efgtoa@h+3,___fleq@ff1+3
  3995  002772  0060  F218  F00A   	movff	efgtoa@l,___fleq@ff2
  3996  002778  0060  F21C  F00B   	movff	efgtoa@l+1,___fleq@ff2+1
  3997  00277E  0060  F220  F00C   	movff	efgtoa@l+2,___fleq@ff2+2
  3998  002784  0060  F224  F00D   	movff	efgtoa@l+3,___fleq@ff2+3
  3999  00278A  ECB9  F025         	call	___fleq	;wreg free
  4000  00278E  A0D8               	btfss	status,0,c
  4001  002790  D00B               	goto	l6289
  4002  002792  0100               	movlb	0	; () banked
  4003  002794  B178               	btfsc	efgtoa@d& (0+255),0,b
  4004  002796  D008               	goto	l6289
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  4008  002798  0E00               	movlw	0
  4009  00279A                     L3:
  4010  00279A  6F86               	movwf	efgtoa@l& (0+255),b
  4011  00279C  0E00               	movlw	0
  4012  00279E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4013  0027A0  0E00               	movlw	0
  4014  0027A2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4015  0027A4  0E00               	movlw	0
  4016  0027A6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4017  0027A8                     l6289:
  4018                           
  4019                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  4020  0027A8  0060  F230  F02D   	movff	efgtoa@g,___fladd@b
  4021  0027AE  0060  F234  F02E   	movff	efgtoa@g+1,___fladd@b+1
  4022  0027B4  0060  F238  F02F   	movff	efgtoa@g+2,___fladd@b+2
  4023  0027BA  0060  F23C  F030   	movff	efgtoa@g+3,___fladd@b+3
  4024  0027C0  0060  F218  F031   	movff	efgtoa@l,___fladd@a
  4025  0027C6  0060  F21C  F032   	movff	efgtoa@l+1,___fladd@a+1
  4026  0027CC  0060  F220  F033   	movff	efgtoa@l+2,___fladd@a+2
  4027  0027D2  0060  F224  F034   	movff	efgtoa@l+3,___fladd@a+3
  4028  0027D8  ECA5  F019         	call	___fladd	;wreg free
  4029  0027DC  0060  F0B4  F082   	movff	?___fladd,efgtoa@h
  4030  0027E2  0060  F0B8  F083   	movff	?___fladd+1,efgtoa@h+1
  4031  0027E8  0060  F0BC  F084   	movff	?___fladd+2,efgtoa@h+2
  4032  0027EE  0060  F0C0  F085   	movff	?___fladd+3,efgtoa@h+3
  4033                           
  4034                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  4035  0027F4  0060  F180  F094   	movff	efgtoa@ou,efgtoa@u
  4036  0027FA  0060  F184  F095   	movff	efgtoa@ou+1,efgtoa@u+1
  4037  002800  0060  F188  F096   	movff	efgtoa@ou+2,efgtoa@u+2
  4038  002806  0060  F18C  F097   	movff	efgtoa@ou+3,efgtoa@u+3
  4039                           
  4040                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  4041  00280C  0E65               	movlw	101
  4042  00280E  0100               	movlb	0	; () banked
  4043  002810  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4044  002812  B4D8               	btfsc	status,2,c
  4045  002814  D007               	goto	l6297
  4046                           
  4047                           ; BSR set to: 0
  4048  002816  0060  F240  F076   	movff	efgtoa@e,efgtoa@ne
  4049  00281C  0060  F244  F077   	movff	efgtoa@e+1,efgtoa@ne+1
  4050  002822  D004               	goto	l631
  4051  002824                     l6297:
  4052                           
  4053                           ; BSR set to: 0
  4054  002824  0E00               	movlw	0
  4055  002826  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  4056  002828  0E00               	movlw	0
  4057  00282A  6F76               	movwf	efgtoa@ne& (0+255),b
  4058  00282C                     l631:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  4062  00282C  0E00               	movlw	0
  4063  00282E  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4064  002830  0E00               	movlw	0
  4065  002832  6F72               	movwf	efgtoa@pp& (0+255),b
  4066                           
  4067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  4068  002834  0E00               	movlw	0
  4069  002836  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  4070  002838  0E00               	movlw	0
  4071  00283A  6F70               	movwf	efgtoa@t& (0+255),b
  4072                           
  4073                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  4074  00283C  0E00               	movlw	0
  4075  00283E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4076  002840  0E00               	movlw	0
  4077  002842  6F8A               	movwf	efgtoa@i& (0+255),b
  4078                           
  4079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  4080  002844  D0F9               	goto	l6347
  4081  002846                     l6299:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  4085  002846  0060  F208  F006   	movff	efgtoa@h,___fldiv@b
  4086  00284C  0060  F20C  F007   	movff	efgtoa@h+1,___fldiv@b+1
  4087  002852  0060  F210  F008   	movff	efgtoa@h+2,___fldiv@b+2
  4088  002858  0060  F214  F009   	movff	efgtoa@h+3,___fldiv@b+3
  4089  00285E  0060  F250  F00A   	movff	efgtoa@u,___fldiv@a
  4090  002864  0060  F254  F00B   	movff	efgtoa@u+1,___fldiv@a+1
  4091  00286A  0060  F258  F00C   	movff	efgtoa@u+2,___fldiv@a+2
  4092  002870  0060  F25C  F00D   	movff	efgtoa@u+3,___fldiv@a+3
  4093  002876  ECDE  F01C         	call	___fldiv	;wreg free
  4094  00287A  0060  F018  F01F   	movff	?___fldiv,floorf@x
  4095  002880  0060  F01C  F020   	movff	?___fldiv+1,floorf@x+1
  4096  002886  0060  F020  F021   	movff	?___fldiv+2,floorf@x+2
  4097  00288C  0060  F024  F022   	movff	?___fldiv+3,floorf@x+3
  4098  002892  EC79  F01F         	call	_floorf	;wreg free
  4099  002896  0060  F07C  F086   	movff	?_floorf,efgtoa@l
  4100  00289C  0060  F080  F087   	movff	?_floorf+1,efgtoa@l+1
  4101  0028A2  0060  F084  F088   	movff	?_floorf+2,efgtoa@l+2
  4102  0028A8  0060  F088  F089   	movff	?_floorf+3,efgtoa@l+3
  4103                           
  4104                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  4105  0028AE  0060  F218  F006   	movff	efgtoa@l,___fltol@f1
  4106  0028B4  0060  F21C  F007   	movff	efgtoa@l+1,___fltol@f1+1
  4107  0028BA  0060  F220  F008   	movff	efgtoa@l+2,___fltol@f1+2
  4108  0028C0  0060  F224  F009   	movff	efgtoa@l+3,___fltol@f1+3
  4109  0028C6  EC05  F024         	call	___fltol	;wreg free
  4110  0028CA  0060  F018  F078   	movff	?___fltol,efgtoa@d
  4111  0028D0  0060  F01C  F079   	movff	?___fltol+1,efgtoa@d+1
  4112                           
  4113                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4114  0028D6  B858               	btfsc	_flags,4,c
  4115  0028D8  D00D               	goto	l6311
  4116  0028DA  0100               	movlb	0	; () banked
  4117  0028DC  5178               	movf	efgtoa@d& (0+255),w,b
  4118  0028DE  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4119  0028E0  A4D8               	btfss	status,2,c
  4120  0028E2  D008               	goto	l6311
  4121                           
  4122                           ; BSR set to: 0
  4123  0028E4  0E67               	movlw	103
  4124  0028E6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4125  0028E8  B4D8               	btfsc	status,2,c
  4126                           
  4127                           ; BSR set to: 0
  4128  0028EA  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4129  0028EC  D003               	goto	l6311
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  4133  0028EE  4B70               	infsnz	efgtoa@t& (0+255),f,b
  4134  0028F0  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  4135                           
  4136                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  4137  0028F2  D03A               	goto	l6339
  4138  0028F4                     l6311:
  4139                           
  4140                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  4141  0028F4  0100               	movlb	0	; () banked
  4142  0028F6  5172               	movf	efgtoa@pp& (0+255),w,b
  4143  0028F8  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4144  0028FA  B4D8               	btfsc	status,2,c
  4145                           
  4146                           ; BSR set to: 0
  4147  0028FC  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4148  0028FE  D022               	goto	l6331
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  4152  002900  0E20               	movlw	low _dbuf
  4153  002902  2592               	addwf	efgtoa@n& (0+255),w,b
  4154  002904  6ED9               	movwf	fsr2l,c
  4155  002906  0E01               	movlw	high _dbuf
  4156  002908  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4157  00290A  6EDA               	movwf	fsr2h,c
  4158  00290C  0E2E               	movlw	46
  4159  00290E  6EDF               	movwf	indf2,c
  4160                           
  4161                           ; BSR set to: 0
  4162  002910  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4163  002912  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  4167  002914  077F               	decf	efgtoa@w& (0+255),f,b
  4168  002916  A0D8               	btfss	status,0,c
  4169  002918  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  4173  00291A  0E00               	movlw	0
  4174  00291C  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4175  00291E  0E01               	movlw	1
  4176  002920  6F72               	movwf	efgtoa@pp& (0+255),b
  4177  002922  D010               	goto	l6331
  4178  002924                     l6323:
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  4182  002924  0E20               	movlw	low _dbuf
  4183  002926  2592               	addwf	efgtoa@n& (0+255),w,b
  4184  002928  6ED9               	movwf	fsr2l,c
  4185  00292A  0E01               	movlw	high _dbuf
  4186  00292C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4187  00292E  6EDA               	movwf	fsr2h,c
  4188  002930  0E30               	movlw	48
  4189  002932  6EDF               	movwf	indf2,c
  4190                           
  4191                           ; BSR set to: 0
  4192  002934  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4193  002936  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  4197  002938  077F               	decf	efgtoa@w& (0+255),f,b
  4198  00293A  A0D8               	btfss	status,0,c
  4199  00293C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  4203  00293E  0770               	decf	efgtoa@t& (0+255),f,b
  4204  002940  A0D8               	btfss	status,0,c
  4205  002942  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  4206  002944                     l6331:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  4210  002944  5170               	movf	efgtoa@t& (0+255),w,b
  4211  002946  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4212  002948  A4D8               	btfss	status,2,c
  4213  00294A  D7EC               	goto	l6323
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  4217  00294C  0E20               	movlw	low _dbuf
  4218  00294E  2592               	addwf	efgtoa@n& (0+255),w,b
  4219  002950  6ED9               	movwf	fsr2l,c
  4220  002952  0E01               	movlw	high _dbuf
  4221  002954  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4222  002956  6EDA               	movwf	fsr2h,c
  4223  002958  5178               	movf	efgtoa@d& (0+255),w,b
  4224  00295A  0F30               	addlw	48
  4225  00295C  6EDF               	movwf	indf2,c
  4226                           
  4227                           ; BSR set to: 0
  4228  00295E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4229  002960  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  4233  002962  077F               	decf	efgtoa@w& (0+255),f,b
  4234  002964  A0D8               	btfss	status,0,c
  4235  002966  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4236  002968                     l6339:
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  4240  002968  0060  F208  F03D   	movff	efgtoa@h,___flsub@b
  4241  00296E  0060  F20C  F03E   	movff	efgtoa@h+1,___flsub@b+1
  4242  002974  0060  F210  F03F   	movff	efgtoa@h+2,___flsub@b+2
  4243  00297A  0060  F214  F040   	movff	efgtoa@h+3,___flsub@b+3
  4244  002980  0060  F250  F018   	movff	efgtoa@u,___flmul@a
  4245  002986  0060  F254  F019   	movff	efgtoa@u+1,___flmul@a+1
  4246  00298C  0060  F258  F01A   	movff	efgtoa@u+2,___flmul@a+2
  4247  002992  0060  F25C  F01B   	movff	efgtoa@u+3,___flmul@a+3
  4248  002998  0060  F218  F014   	movff	efgtoa@l,___flmul@b
  4249  00299E  0060  F21C  F015   	movff	efgtoa@l+1,___flmul@b+1
  4250  0029A4  0060  F220  F016   	movff	efgtoa@l+2,___flmul@b+2
  4251  0029AA  0060  F224  F017   	movff	efgtoa@l+3,___flmul@b+3
  4252  0029B0  EC01  F016         	call	___flmul	;wreg free
  4253  0029B4  0060  F050  F041   	movff	?___flmul,___flsub@a
  4254  0029BA  0060  F054  F042   	movff	?___flmul+1,___flsub@a+1
  4255  0029C0  0060  F058  F043   	movff	?___flmul+2,___flsub@a+2
  4256  0029C6  0060  F05C  F044   	movff	?___flmul+3,___flsub@a+3
  4257  0029CC  EC5E  F027         	call	___flsub	;wreg free
  4258  0029D0  0060  F0F4  F082   	movff	?___flsub,efgtoa@h
  4259  0029D6  0060  F0F8  F083   	movff	?___flsub+1,efgtoa@h+1
  4260  0029DC  0060  F0FC  F084   	movff	?___flsub+2,efgtoa@h+2
  4261  0029E2  0060  F100  F085   	movff	?___flsub+3,efgtoa@h+3
  4262                           
  4263                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  4264  0029E8  0060  F250  F006   	movff	efgtoa@u,___fldiv@b
  4265  0029EE  0060  F254  F007   	movff	efgtoa@u+1,___fldiv@b+1
  4266  0029F4  0060  F258  F008   	movff	efgtoa@u+2,___fldiv@b+2
  4267  0029FA  0060  F25C  F009   	movff	efgtoa@u+3,___fldiv@b+3
  4268  002A00  0E00               	movlw	0
  4269  002A02  6E0A               	movwf	___fldiv@a,c
  4270  002A04  0E00               	movlw	0
  4271  002A06  6E0B               	movwf	___fldiv@a+1,c
  4272  002A08  0E20               	movlw	32
  4273  002A0A  6E0C               	movwf	___fldiv@a+2,c
  4274  002A0C  0E41               	movlw	65
  4275  002A0E  6E0D               	movwf	___fldiv@a+3,c
  4276  002A10  ECDE  F01C         	call	___fldiv	;wreg free
  4277  002A14  0060  F018  F094   	movff	?___fldiv,efgtoa@u
  4278  002A1A  0060  F01C  F095   	movff	?___fldiv+1,efgtoa@u+1
  4279  002A20  0060  F020  F096   	movff	?___fldiv+2,efgtoa@u+2
  4280  002A26  0060  F024  F097   	movff	?___fldiv+3,efgtoa@u+3
  4281                           
  4282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  4283  002A2C  0100               	movlb	0	; () banked
  4284  002A2E  0776               	decf	efgtoa@ne& (0+255),f,b
  4285  002A30  A0D8               	btfss	status,0,c
  4286  002A32  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  4290  002A34  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4291  002A36  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4292  002A38                     l6347:
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  4296  002A38  5174               	movf	efgtoa@m& (0+255),w,b
  4297  002A3A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4298  002A3C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4299  002A3E  0A80               	xorlw	128
  4300  002A40  6E4C               	movwf	??_efgtoa& (0+255),c
  4301  002A42  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4302  002A44  0A80               	xorlw	128
  4303  002A46  584C               	subwfb	??_efgtoa& (0+255),w,c
  4304  002A48  B0D8               	btfsc	status,0,c
  4305  002A4A  D008               	goto	u8690
  4306                           
  4307                           ; BSR set to: 0
  4308  002A4C  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4309  002A4E  D6FB               	goto	l6299
  4310  002A50  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4311  002A52  E104               	bnz	u8690
  4312  002A54  0E4B               	movlw	75
  4313  002A56  5D92               	subwf	efgtoa@n& (0+255),w,b
  4314  002A58  A0D8               	btfss	status,0,c
  4315  002A5A  D6F5               	goto	l6299
  4316  002A5C                     u8690:
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  4320  002A5C  5172               	movf	efgtoa@pp& (0+255),w,b
  4321  002A5E  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4322  002A60  B4D8               	btfsc	status,2,c
  4323                           
  4324                           ; BSR set to: 0
  4325  002A62  A858               	btfss	_flags,4,c
  4326  002A64  D00A               	goto	l6359
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  4330  002A66  0E20               	movlw	low _dbuf
  4331  002A68  2592               	addwf	efgtoa@n& (0+255),w,b
  4332  002A6A  6ED9               	movwf	fsr2l,c
  4333  002A6C  0E01               	movlw	high _dbuf
  4334  002A6E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4335  002A70  6EDA               	movwf	fsr2h,c
  4336  002A72  0E2E               	movlw	46
  4337  002A74  6EDF               	movwf	indf2,c
  4338                           
  4339                           ; BSR set to: 0
  4340  002A76  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4341  002A78  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4342  002A7A                     l6359:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  4346  002A7A  0E20               	movlw	low _dbuf
  4347  002A7C  2592               	addwf	efgtoa@n& (0+255),w,b
  4348  002A7E  6ED9               	movwf	fsr2l,c
  4349  002A80  0E01               	movlw	high _dbuf
  4350  002A82  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4351  002A84  6EDA               	movwf	fsr2h,c
  4352  002A86  0E00               	movlw	0
  4353  002A88  6EDF               	movwf	indf2,c
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  4357  002A8A  0E65               	movlw	101
  4358  002A8C  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4359  002A8E  A4D8               	btfss	status,2,c
  4360  002A90  EFF7  F010         	goto	l6171
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  4364  002A94  0E00               	movlw	0
  4365  002A96  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4366  002A98  0E4F               	movlw	79
  4367  002A9A  6F8A               	movwf	efgtoa@i& (0+255),b
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  4371  002A9C  0E20               	movlw	low _dbuf
  4372  002A9E  258A               	addwf	efgtoa@i& (0+255),w,b
  4373  002AA0  6ED9               	movwf	fsr2l,c
  4374  002AA2  0E01               	movlw	high _dbuf
  4375  002AA4  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4376  002AA6  6EDA               	movwf	fsr2h,c
  4377  002AA8  0E00               	movlw	0
  4378  002AAA  6EDF               	movwf	indf2,c
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  4382  002AAC  0E00               	movlw	0
  4383  002AAE  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4384  002AB0  0E00               	movlw	0
  4385  002AB2  6F7A               	movwf	efgtoa@sign& (0+255),b
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  4389  002AB4  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4390  002AB6  D008               	goto	l6375
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  4394  002AB8  0E00               	movlw	0
  4395  002ABA  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4396  002ABC  0E01               	movlw	1
  4397  002ABE  6F7A               	movwf	efgtoa@sign& (0+255),b
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  4401  002AC0  6D90               	negf	efgtoa@e& (0+255),b
  4402  002AC2  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4403  002AC4  B0D8               	btfsc	status,0,c
  4404  002AC6  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4405  002AC8                     l6375:
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  4409  002AC8  0E00               	movlw	0
  4410  002ACA  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4411  002ACC  0E02               	movlw	2
  4412  002ACE  6F7C               	movwf	efgtoa@p& (0+255),b
  4413                           
  4414                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  4415  002AD0  D031               	goto	l6387
  4416  002AD2                     l6377:
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  4420  002AD2  078A               	decf	efgtoa@i& (0+255),f,b
  4421  002AD4  A0D8               	btfss	status,0,c
  4422  002AD6  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  4426  002AD8  0E20               	movlw	low _dbuf
  4427  002ADA  258A               	addwf	efgtoa@i& (0+255),w,b
  4428  002ADC  6ED9               	movwf	fsr2l,c
  4429  002ADE  0E01               	movlw	high _dbuf
  4430  002AE0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4431  002AE2  6EDA               	movwf	fsr2h,c
  4432  002AE4  0060  F240  F006   	movff	efgtoa@e,___awmod@dividend
  4433  002AEA  0060  F244  F007   	movff	efgtoa@e+1,___awmod@dividend+1
  4434  002AF0  0E00               	movlw	0
  4435  002AF2  6E09               	movwf	___awmod@divisor+1,c
  4436  002AF4  0E0A               	movlw	10
  4437  002AF6  6E08               	movwf	___awmod@divisor,c
  4438  002AF8  EC83  F026         	call	___awmod	;wreg free
  4439  002AFC  5006               	movf	?___awmod,w,c
  4440  002AFE  0F30               	addlw	48
  4441  002B00  6EDF               	movwf	indf2,c
  4442                           
  4443                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  4444  002B02  0060  F240  F006   	movff	efgtoa@e,___awdiv@dividend
  4445  002B08  0060  F244  F007   	movff	efgtoa@e+1,___awdiv@dividend+1
  4446  002B0E  0E00               	movlw	0
  4447  002B10  6E09               	movwf	___awdiv@divisor+1,c
  4448  002B12  0E0A               	movlw	10
  4449  002B14  6E08               	movwf	___awdiv@divisor,c
  4450  002B16  ECFE  F025         	call	___awdiv	;wreg free
  4451  002B1A  0060  F018  F090   	movff	?___awdiv,efgtoa@e
  4452  002B20  0060  F01C  F091   	movff	?___awdiv+1,efgtoa@e+1
  4453                           
  4454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  4455  002B26  0100               	movlb	0	; () banked
  4456  002B28  077C               	decf	efgtoa@p& (0+255),f,b
  4457  002B2A  A0D8               	btfss	status,0,c
  4458  002B2C  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  4462  002B2E  077F               	decf	efgtoa@w& (0+255),f,b
  4463  002B30  A0D8               	btfss	status,0,c
  4464  002B32  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4465  002B34                     l6387:
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  4469  002B34  5190               	movf	efgtoa@e& (0+255),w,b
  4470  002B36  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4471  002B38  A4D8               	btfss	status,2,c
  4472  002B3A  D7CB               	goto	l6377
  4473                           
  4474                           ; BSR set to: 0
  4475  002B3C  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4476  002B3E  D005               	goto	u8750
  4477  002B40  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4478  002B42  E1C7               	bnz	l6377
  4479  002B44  057C               	decf	efgtoa@p& (0+255),w,b
  4480  002B46  B0D8               	btfsc	status,0,c
  4481  002B48  D7C4               	goto	l6377
  4482  002B4A                     u8750:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  4486  002B4A  078A               	decf	efgtoa@i& (0+255),f,b
  4487  002B4C  A0D8               	btfss	status,0,c
  4488  002B4E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  4492  002B50  517A               	movf	efgtoa@sign& (0+255),w,b
  4493  002B52  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4494  002B54  A4D8               	btfss	status,2,c
  4495  002B56  D004               	goto	l6397
  4496                           
  4497                           ; BSR set to: 0
  4498  002B58  0E00               	movlw	0
  4499  002B5A  6F6B               	movwf	(_efgtoa$1681+1)& (0+255),b
  4500  002B5C  0E2B               	movlw	43
  4501  002B5E  D003               	goto	L4
  4502  002B60                     l6397:
  4503                           
  4504                           ; BSR set to: 0
  4505  002B60  0E00               	movlw	0
  4506  002B62  6F6B               	movwf	(_efgtoa$1681+1)& (0+255),b
  4507  002B64  0E2D               	movlw	45
  4508  002B66                     L4:
  4509  002B66  6F6A               	movwf	_efgtoa$1681& (0+255),b
  4510                           
  4511                           ; BSR set to: 0
  4512  002B68  0E20               	movlw	low _dbuf
  4513  002B6A  258A               	addwf	efgtoa@i& (0+255),w,b
  4514  002B6C  6ED9               	movwf	fsr2l,c
  4515  002B6E  0E01               	movlw	high _dbuf
  4516  002B70  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4517  002B72  6EDA               	movwf	fsr2h,c
  4518  002B74  0060  F1AB  FFDF   	movff	_efgtoa$1681,indf2
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  4522  002B7A  077F               	decf	efgtoa@w& (0+255),f,b
  4523  002B7C  A0D8               	btfss	status,0,c
  4524  002B7E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4528  002B80  078A               	decf	efgtoa@i& (0+255),f,b
  4529  002B82  A0D8               	btfss	status,0,c
  4530  002B84  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4531                           
  4532                           ; BSR set to: 0
  4533  002B86  0EBF               	movlw	191
  4534  002B88  6E4C               	movwf	??_efgtoa& (0+255),c
  4535  002B8A  0EFF               	movlw	255
  4536  002B8C  6E4D               	movwf	(??_efgtoa+1)& (0+255),c
  4537  002B8E  504B               	movf	efgtoa@c,w,c
  4538  002B90  6E4E               	movwf	(??_efgtoa+2)& (0+255),c
  4539  002B92  6A4F               	clrf	(??_efgtoa+3)& (0+255),c
  4540  002B94  504C               	movf	??_efgtoa,w,c
  4541  002B96  264E               	addwf	??_efgtoa+2,f,c
  4542  002B98  504D               	movf	??_efgtoa+1,w,c
  4543  002B9A  224F               	addwfc	??_efgtoa+3,f,c
  4544  002B9C  504F               	movf	??_efgtoa+3,w,c
  4545  002B9E  E106               	bnz	u8770
  4546  002BA0  0E1A               	movlw	26
  4547  002BA2  5C4E               	subwf	??_efgtoa+2,w,c
  4548  002BA4  B0D8               	btfsc	status,0,c
  4549  002BA6  D002               	goto	u8770
  4550  002BA8  0E01               	movlw	1
  4551  002BAA  D001               	goto	u8780
  4552  002BAC                     u8770:
  4553  002BAC  0E00               	movlw	0
  4554  002BAE                     u8780:
  4555  002BAE  6F6E               	movwf	_efgtoa$1683& (0+255),b
  4556  002BB0  6B6F               	clrf	(_efgtoa$1683+1)& (0+255),b
  4557                           
  4558                           ; BSR set to: 0
  4559  002BB2  516E               	movf	_efgtoa$1683& (0+255),w,b
  4560  002BB4  116F               	iorwf	(_efgtoa$1683+1)& (0+255),w,b
  4561  002BB6  A4D8               	btfss	status,2,c
  4562  002BB8  D004               	goto	l6413
  4563                           
  4564                           ; BSR set to: 0
  4565  002BBA  0E00               	movlw	0
  4566  002BBC  6F6D               	movwf	(_efgtoa$1682+1)& (0+255),b
  4567  002BBE  0E65               	movlw	101
  4568  002BC0  D003               	goto	L5
  4569  002BC2                     l6413:
  4570                           
  4571                           ; BSR set to: 0
  4572  002BC2  0E00               	movlw	0
  4573  002BC4  6F6D               	movwf	(_efgtoa$1682+1)& (0+255),b
  4574  002BC6  0E45               	movlw	69
  4575  002BC8                     L5:
  4576  002BC8  6F6C               	movwf	_efgtoa$1682& (0+255),b
  4577                           
  4578                           ; BSR set to: 0
  4579  002BCA  0E20               	movlw	low _dbuf
  4580  002BCC  258A               	addwf	efgtoa@i& (0+255),w,b
  4581  002BCE  6ED9               	movwf	fsr2l,c
  4582  002BD0  0E01               	movlw	high _dbuf
  4583  002BD2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4584  002BD4  6EDA               	movwf	fsr2h,c
  4585  002BD6  0060  F1B3  FFDF   	movff	_efgtoa$1682,indf2
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  4589  002BDC  077F               	decf	efgtoa@w& (0+255),f,b
  4590  002BDE  A0D8               	btfss	status,0,c
  4591  002BE0  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  4595  002BE2  0E20               	movlw	low _dbuf
  4596  002BE4  2592               	addwf	efgtoa@n& (0+255),w,b
  4597  002BE6  6E06               	movwf	strcpy@dest,c
  4598  002BE8  0E01               	movlw	high _dbuf
  4599  002BEA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4600  002BEC  6E07               	movwf	strcpy@dest+1,c
  4601  002BEE  0E20               	movlw	low _dbuf
  4602  002BF0  258A               	addwf	efgtoa@i& (0+255),w,b
  4603  002BF2  6E08               	movwf	strcpy@src,c
  4604  002BF4  0E01               	movlw	high _dbuf
  4605  002BF6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4606  002BF8  6E09               	movwf	strcpy@src+1,c
  4607  002BFA  EC2A  F027         	call	_strcpy	;wreg free
  4608  002BFE  EFF7  F010         	goto	l6171
  4609  002C02                     __end_of_efgtoa:
  4610                           	opt callstack 0
  4611                           
  4612 ;; *************** function _tolower *****************
  4613 ;; Defined at:
  4614 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  c               2   11[COMRAM] int 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  2   11[COMRAM] int 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4631 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4632 ;;Total ram usage:        8 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    3
  4635 ;; This function calls:
  4636 ;;		_isupper
  4637 ;; This function is called by:
  4638 ;;		_efgtoa
  4639 ;;		_vfpfcnvrt
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text10
  4644  005022                     __ptext10:
  4645                           	opt callstack 0
  4646  005022                     _tolower:
  4647                           	opt callstack 23
  4648                           
  4649                           ;incstack = 0
  4650  005022  0EBF               	movlw	191
  4651  005024  6E0E               	movwf	??_tolower& (0+255),c
  4652  005026  0EFF               	movlw	255
  4653  005028  6E0F               	movwf	(??_tolower+1)& (0+255),c
  4654  00502A  0060  F030  F010   	movff	tolower@c,??_tolower+2
  4655  005030  0060  F034  F011   	movff	tolower@c+1,??_tolower+3
  4656  005036  500E               	movf	??_tolower,w,c
  4657  005038  2610               	addwf	??_tolower+2,f,c
  4658  00503A  500F               	movf	??_tolower+1,w,c
  4659  00503C  2211               	addwfc	??_tolower+3,f,c
  4660  00503E  5011               	movf	??_tolower+3,w,c
  4661  005040  E106               	bnz	u7450
  4662  005042  0E1A               	movlw	26
  4663  005044  5C10               	subwf	??_tolower+2,w,c
  4664  005046  B0D8               	btfsc	status,0,c
  4665  005048  D002               	goto	u7450
  4666  00504A  0E01               	movlw	1
  4667  00504C  D001               	goto	u7460
  4668  00504E                     u7450:
  4669  00504E  0E00               	movlw	0
  4670  005050                     u7460:
  4671  005050  6E12               	movwf	_tolower$2255,c
  4672  005052  6A13               	clrf	_tolower$2255+1,c
  4673  005054  5012               	movf	_tolower$2255,w,c
  4674  005056  1013               	iorwf	_tolower$2255+1,w,c
  4675  005058  B4D8               	btfsc	status,2,c
  4676  00505A  D006               	goto	l1441
  4677  00505C  0E20               	movlw	32
  4678  00505E  100C               	iorwf	tolower@c,w,c
  4679  005060  6E0C               	movwf	?_tolower,c
  4680  005062  500D               	movf	tolower@c+1,w,c
  4681  005064  6E0D               	movwf	?_tolower+1,c
  4682  005066  0012               	return	
  4683  005068                     l1441:
  4684  005068  0060  F030  F00C   	movff	tolower@c,?_tolower
  4685  00506E  0060  F034  F00D   	movff	tolower@c+1,?_tolower+1
  4686  005074  0012               	return		;funcret
  4687  005076                     __end_of_tolower:
  4688                           	opt callstack 0
  4689                           
  4690 ;; *************** function _isupper *****************
  4691 ;; Defined at:
  4692 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  c               2    5[COMRAM] int 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  2    5[COMRAM] int 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4706 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4708 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4709 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4710 ;;Total ram usage:        6 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    2
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_efgtoa
  4717 ;;		_vfpfcnvrt
  4718 ;;		_tolower
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text11
  4723  0051AA                     __ptext11:
  4724                           	opt callstack 0
  4725  0051AA                     _isupper:
  4726                           	opt callstack 23
  4727                           
  4728                           ;incstack = 0
  4729  0051AA  0EBF               	movlw	191
  4730  0051AC  6E08               	movwf	??_isupper& (0+255),c
  4731  0051AE  0EFF               	movlw	255
  4732  0051B0  6E09               	movwf	(??_isupper+1)& (0+255),c
  4733  0051B2  0060  F018  F00A   	movff	isupper@c,??_isupper+2
  4734  0051B8  0060  F01C  F00B   	movff	isupper@c+1,??_isupper+3
  4735  0051BE  5008               	movf	??_isupper,w,c
  4736  0051C0  260A               	addwf	??_isupper+2,f,c
  4737  0051C2  5009               	movf	??_isupper+1,w,c
  4738  0051C4  220B               	addwfc	??_isupper+3,f,c
  4739  0051C6  500B               	movf	??_isupper+3,w,c
  4740  0051C8  E106               	bnz	u6910
  4741  0051CA  0E1A               	movlw	26
  4742  0051CC  5C0A               	subwf	??_isupper+2,w,c
  4743  0051CE  B0D8               	btfsc	status,0,c
  4744  0051D0  D002               	goto	u6910
  4745  0051D2  0E01               	movlw	1
  4746  0051D4  D001               	goto	u6920
  4747  0051D6                     u6910:
  4748  0051D6  0E00               	movlw	0
  4749  0051D8                     u6920:
  4750  0051D8  6E06               	movwf	?_isupper,c
  4751  0051DA  6A07               	clrf	?_isupper+1,c
  4752  0051DC  0012               	return		;funcret
  4753  0051DE                     __end_of_isupper:
  4754                           	opt callstack 0
  4755                           
  4756 ;; *************** function _strcpy *****************
  4757 ;; Defined at:
  4758 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  dest            2    5[COMRAM] PTR unsigned char 
  4761 ;;		 -> dbuf(80), 
  4762 ;;  src             2    7[COMRAM] PTR const unsigned char 
  4763 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  4764 ;;		 -> dbuf(80), 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  d               2   13[COMRAM] PTR unsigned char 
  4767 ;;		 -> dbuf(80), 
  4768 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4769 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  4770 ;;		 -> dbuf(80), 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  2    5[COMRAM] PTR unsigned char 
  4773 ;; Registers used:
  4774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4781 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4783 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4784 ;;Total ram usage:       10 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; Hardware stack levels required when called:    2
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_efgtoa
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text12
  4795  004E54                     __ptext12:
  4796                           	opt callstack 0
  4797  004E54                     _strcpy:
  4798                           	opt callstack 23
  4799                           
  4800                           ;incstack = 0
  4801  004E54  0060  F020  F00C   	movff	strcpy@src,strcpy@s
  4802  004E5A  0060  F024  F00D   	movff	strcpy@src+1,strcpy@s+1
  4803  004E60  0060  F018  F00E   	movff	strcpy@dest,strcpy@d
  4804  004E66  0060  F01C  F00F   	movff	strcpy@dest+1,strcpy@d+1
  4805  004E6C                     l5643:
  4806  004E6C  500C               	movf	strcpy@s,w,c
  4807  004E6E  6E0A               	movwf	??_strcpy& (0+255),c
  4808  004E70  500D               	movf	strcpy@s+1,w,c
  4809  004E72  6E0B               	movwf	(??_strcpy+1)& (0+255),c
  4810  004E74  4A0C               	infsnz	strcpy@s,f,c
  4811  004E76  2A0D               	incf	strcpy@s+1,f,c
  4812  004E78  0060  F02B  FFF6   	movff	??_strcpy,tblptrl
  4813  004E7E  0060  F02F  FFF7   	movff	??_strcpy+1,tblptrh
  4814  004E84  0E00               	movlw	low (__smallconst shr (0+16))
  4815  004E86  6EF8               	movwf	tblptru,c
  4816  004E88  0060  F03B  FFD9   	movff	strcpy@d,fsr2l
  4817  004E8E  0060  F03F  FFDA   	movff	strcpy@d+1,fsr2h
  4818  004E94  4A0E               	infsnz	strcpy@d,f,c
  4819  004E96  2A0F               	incf	strcpy@d+1,f,c
  4820  004E98  0E1F               	movlw	(high __ramtop+-1)
  4821  004E9A  64F7               	cpfsgt	tblptrh,c
  4822  004E9C  D003               	bra	u7437
  4823  004E9E  0008               	tblrd		*
  4824  004EA0  50F5               	movf	tablat,w,c
  4825  004EA2  D007               	bra	u7430
  4826  004EA4                     u7437:
  4827  004EA4  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4828  004EAA  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4829  004EB0  50E7               	movf	indf1,w,c
  4830  004EB2                     u7430:
  4831  004EB2  6EDF               	movwf	indf2,c
  4832  004EB4  50DF               	movf	indf2,w,c
  4833  004EB6  B4D8               	btfsc	status,2,c
  4834  004EB8  0012               	return	
  4835  004EBA  D7D8               	goto	l5643
  4836  004EBC                     __end_of_strcpy:
  4837                           	opt callstack 0
  4838                           
  4839 ;; *************** function _pad *****************
  4840 ;; Defined at:
  4841 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  4844 ;;		 -> sprintf@f(6), 
  4845 ;;  buf             2   23[COMRAM] PTR unsigned char 
  4846 ;;		 -> dbuf(80), 
  4847 ;;  p               2   25[COMRAM] int 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  w               2   30[COMRAM] int 
  4850 ;;  i               2   28[COMRAM] int 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  2   21[COMRAM] int 
  4853 ;; Registers used:
  4854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4860 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4861 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4862 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4863 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4864 ;;Total ram usage:       11 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    5
  4867 ;; This function calls:
  4868 ;;		_fputc
  4869 ;;		_fputs
  4870 ;;		_strlen
  4871 ;; This function is called by:
  4872 ;;		_efgtoa
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text13
  4877  0048D4                     __ptext13:
  4878                           	opt callstack 0
  4879  0048D4                     _pad:
  4880                           	opt callstack 20
  4881                           
  4882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  4883                           
  4884                           ;incstack = 0
  4885  0048D4  A058               	btfss	_flags,0,c
  4886  0048D6  D00E               	goto	l5601
  4887                           
  4888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  4889  0048D8  0060  F060  F00F   	movff	pad@buf,fputs@s
  4890  0048DE  0060  F064  F010   	movff	pad@buf+1,fputs@s+1
  4891  0048E4  0060  F058  F011   	movff	pad@fp,fputs@fp
  4892  0048EA  0060  F05C  F012   	movff	pad@fp+1,fputs@fp+1
  4893  0048F0  EC62  F028         	call	_fputs	;wreg free
  4894  0048F4                     l5601:
  4895                           
  4896                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4897  0048F4  BE1B               	btfsc	pad@p+1,7,c
  4898  0048F6  D007               	goto	l5605
  4899  0048F8  0060  F068  F01F   	movff	pad@p,pad@w
  4900  0048FE  0060  F06C  F020   	movff	pad@p+1,pad@w+1
  4901  004904  D004               	goto	l564
  4902  004906                     l5605:
  4903  004906  0E00               	movlw	0
  4904  004908  6E20               	movwf	pad@w+1,c
  4905  00490A  0E00               	movlw	0
  4906  00490C  6E1F               	movwf	pad@w,c
  4907  00490E                     l564:
  4908                           
  4909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4910  00490E  0E00               	movlw	0
  4911  004910  6E1E               	movwf	pad@i+1,c
  4912  004912  0E00               	movlw	0
  4913  004914  6E1D               	movwf	pad@i,c
  4914                           
  4915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4916  004916  D00E               	goto	l5611
  4917  004918                     l5607:
  4918                           
  4919                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4920  004918  0E00               	movlw	0
  4921  00491A  6E07               	movwf	fputc@c+1,c
  4922  00491C  0E20               	movlw	32
  4923  00491E  6E06               	movwf	fputc@c,c
  4924  004920  0060  F058  F008   	movff	pad@fp,fputc@fp
  4925  004926  0060  F05C  F009   	movff	pad@fp+1,fputc@fp+1
  4926  00492C  ECC3  F024         	call	_fputc	;wreg free
  4927                           
  4928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4929  004930  4A1D               	infsnz	pad@i,f,c
  4930  004932  2A1E               	incf	pad@i+1,f,c
  4931  004934                     l5611:
  4932                           
  4933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4934  004934  501F               	movf	pad@w,w,c
  4935  004936  5C1D               	subwf	pad@i,w,c
  4936  004938  501E               	movf	pad@i+1,w,c
  4937  00493A  0A80               	xorlw	128
  4938  00493C  6E1C               	movwf	??_pad& (0+255),c
  4939  00493E  5020               	movf	pad@w+1,w,c
  4940  004940  0A80               	xorlw	128
  4941  004942  581C               	subwfb	??_pad& (0+255),w,c
  4942  004944  A0D8               	btfss	status,0,c
  4943  004946  D7E8               	goto	l5607
  4944                           
  4945                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4946  004948  B058               	btfsc	_flags,0,c
  4947  00494A  D00E               	goto	l5615
  4948                           
  4949                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4950  00494C  0060  F060  F00F   	movff	pad@buf,fputs@s
  4951  004952  0060  F064  F010   	movff	pad@buf+1,fputs@s+1
  4952  004958  0060  F058  F011   	movff	pad@fp,fputs@fp
  4953  00495E  0060  F05C  F012   	movff	pad@fp+1,fputs@fp+1
  4954  004964  EC62  F028         	call	_fputs	;wreg free
  4955  004968                     l5615:
  4956                           
  4957                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  4958  004968  0060  F060  F006   	movff	pad@buf,strlen@s
  4959  00496E  0060  F064  F007   	movff	pad@buf+1,strlen@s+1
  4960  004974  ECEF  F028         	call	_strlen	;wreg free
  4961  004978  501F               	movf	pad@w,w,c
  4962  00497A  2406               	addwf	?_strlen,w,c
  4963  00497C  6E16               	movwf	?_pad,c
  4964  00497E  5020               	movf	pad@w+1,w,c
  4965  004980  2007               	addwfc	?_strlen+1,w,c
  4966  004982  6E17               	movwf	?_pad+1,c
  4967  004984  0012               	return		;funcret
  4968  004986                     __end_of_pad:
  4969                           	opt callstack 0
  4970                           
  4971 ;; *************** function _strlen *****************
  4972 ;; Defined at:
  4973 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  s               2    5[COMRAM] PTR const unsigned char 
  4976 ;;		 -> dbuf(80), 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  a               2    7[COMRAM] PTR const unsigned char 
  4979 ;;		 -> dbuf(80), 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  2    5[COMRAM] unsigned int 
  4982 ;; Registers used:
  4983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4990 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4992 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4993 ;;Total ram usage:        4 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; Hardware stack levels required when called:    2
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_pad
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text14
  5004  0051DE                     __ptext14:
  5005                           	opt callstack 0
  5006  0051DE                     _strlen:
  5007                           	opt callstack 22
  5008                           
  5009                           ;incstack = 0
  5010  0051DE  0060  F018  F008   	movff	strlen@s,strlen@a
  5011  0051E4  0060  F01C  F009   	movff	strlen@s+1,strlen@a+1
  5012  0051EA  D002               	goto	l5385
  5013  0051EC                     l5383:
  5014  0051EC  4A06               	infsnz	strlen@s,f,c
  5015  0051EE  2A07               	incf	strlen@s+1,f,c
  5016  0051F0                     l5385:
  5017  0051F0  0060  F01B  FFD9   	movff	strlen@s,fsr2l
  5018  0051F6  0060  F01F  FFDA   	movff	strlen@s+1,fsr2h
  5019  0051FC  50DF               	movf	indf2,w,c
  5020  0051FE  A4D8               	btfss	status,2,c
  5021  005200  D7F5               	goto	l5383
  5022  005202  5008               	movf	strlen@a,w,c
  5023  005204  5C06               	subwf	strlen@s,w,c
  5024  005206  6E06               	movwf	?_strlen,c
  5025  005208  5009               	movf	strlen@a+1,w,c
  5026  00520A  5807               	subwfb	strlen@s+1,w,c
  5027  00520C  6E07               	movwf	?_strlen+1,c
  5028  00520E  0012               	return		;funcret
  5029  005210                     __end_of_strlen:
  5030                           	opt callstack 0
  5031                           
  5032 ;; *************** function _fputs *****************
  5033 ;; Defined at:
  5034 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  s               2   14[COMRAM] PTR const unsigned char 
  5037 ;;		 -> dbuf(80), 
  5038 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5039 ;;		 -> sprintf@f(6), 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;  i               2   19[COMRAM] int 
  5042 ;;  c               1   18[COMRAM] unsigned char 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  2   14[COMRAM] int 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5053 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5055 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5056 ;;Total ram usage:        7 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    4
  5059 ;; This function calls:
  5060 ;;		_fputc
  5061 ;; This function is called by:
  5062 ;;		_pad
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text15
  5067  0050C4                     __ptext15:
  5068                           	opt callstack 0
  5069  0050C4                     _fputs:
  5070                           	opt callstack 20
  5071                           
  5072                           ;incstack = 0
  5073  0050C4  0E00               	movlw	0
  5074  0050C6  6E15               	movwf	fputs@i+1,c
  5075  0050C8  0E00               	movlw	0
  5076  0050CA  6E14               	movwf	fputs@i,c
  5077  0050CC  D00E               	goto	l5379
  5078  0050CE                     l5375:
  5079  0050CE  0060  F04C  F006   	movff	fputs@c,fputc@c
  5080  0050D4  6A07               	clrf	fputc@c+1,c
  5081  0050D6  0060  F044  F008   	movff	fputs@fp,fputc@fp
  5082  0050DC  0060  F048  F009   	movff	fputs@fp+1,fputc@fp+1
  5083  0050E2  ECC3  F024         	call	_fputc	;wreg free
  5084  0050E6  4A14               	infsnz	fputs@i,f,c
  5085  0050E8  2A15               	incf	fputs@i+1,f,c
  5086  0050EA                     l5379:
  5087  0050EA  5014               	movf	fputs@i,w,c
  5088  0050EC  240F               	addwf	fputs@s,w,c
  5089  0050EE  6ED9               	movwf	fsr2l,c
  5090  0050F0  5015               	movf	fputs@i+1,w,c
  5091  0050F2  2010               	addwfc	fputs@s+1,w,c
  5092  0050F4  6EDA               	movwf	fsr2h,c
  5093  0050F6  50DF               	movf	indf2,w,c
  5094  0050F8  6E13               	movwf	fputs@c,c
  5095  0050FA  5013               	movf	fputs@c,w,c
  5096  0050FC  B4D8               	btfsc	status,2,c
  5097  0050FE  0012               	return	
  5098  005100  D7E6               	goto	l5375
  5099  005102                     __end_of_fputs:
  5100                           	opt callstack 0
  5101                           
  5102 ;; *************** function _fputc *****************
  5103 ;; Defined at:
  5104 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  c               2    5[COMRAM] int 
  5107 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  5108 ;;		 -> sprintf@f(6), 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;		None
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  2    5[COMRAM] int 
  5113 ;; Registers used:
  5114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5120 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5122 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5123 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5124 ;;Total ram usage:        9 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    3
  5127 ;; This function calls:
  5128 ;;		_putch
  5129 ;; This function is called by:
  5130 ;;		_pad
  5131 ;;		_vfpfcnvrt
  5132 ;;		_fputs
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text16
  5137  004986                     __ptext16:
  5138                           	opt callstack 0
  5139  004986                     _fputc:
  5140                           	opt callstack 23
  5141                           
  5142                           ;incstack = 0
  5143  004986  5008               	movf	fputc@fp,w,c
  5144  004988  1009               	iorwf	fputc@fp+1,w,c
  5145  00498A  B4D8               	btfsc	status,2,c
  5146  00498C  D004               	goto	u6860
  5147  00498E  5008               	movf	fputc@fp,w,c
  5148  004990  1009               	iorwf	fputc@fp+1,w,c
  5149  004992  A4D8               	btfss	status,2,c
  5150  004994  D004               	goto	l5365
  5151  004996                     u6860:
  5152  004996  5006               	movf	fputc@c,w,c
  5153  004998  ECA7  F029         	call	_putch
  5154  00499C  0012               	return	
  5155  00499E                     l5365:
  5156  00499E  EE20 F004          	lfsr	2,4
  5157  0049A2  5008               	movf	fputc@fp,w,c
  5158  0049A4  26D9               	addwf	fsr2l,f,c
  5159  0049A6  5009               	movf	fputc@fp+1,w,c
  5160  0049A8  22DA               	addwfc	fsr2h,f,c
  5161  0049AA  50DE               	movf	postinc2,w,c
  5162  0049AC  10DE               	iorwf	postinc2,w,c
  5163  0049AE  B4D8               	btfsc	status,2,c
  5164  0049B0  D016               	goto	u6880
  5165  0049B2  EE20 F004          	lfsr	2,4
  5166  0049B6  5008               	movf	fputc@fp,w,c
  5167  0049B8  26D9               	addwf	fsr2l,f,c
  5168  0049BA  5009               	movf	fputc@fp+1,w,c
  5169  0049BC  22DA               	addwfc	fsr2h,f,c
  5170  0049BE  EE10 F002          	lfsr	1,2
  5171  0049C2  5008               	movf	fputc@fp,w,c
  5172  0049C4  26E1               	addwf	fsr1l,f,c
  5173  0049C6  5009               	movf	fputc@fp+1,w,c
  5174  0049C8  22E2               	addwfc	fsr1h,f,c
  5175  0049CA  50DE               	movf	postinc2,w,c
  5176  0049CC  5CE6               	subwf	postinc1,w,c
  5177  0049CE  50E6               	movf	postinc1,w,c
  5178  0049D0  0A80               	xorlw	128
  5179  0049D2  6E0E               	movwf	(??_fputc+4)& (0+255),c
  5180  0049D4  50DE               	movf	postinc2,w,c
  5181  0049D6  0A80               	xorlw	128
  5182  0049D8  580E               	subwfb	(??_fputc+4)& (0+255),w,c
  5183  0049DA  B0D8               	btfsc	status,0,c
  5184  0049DC  0012               	return	
  5185  0049DE                     u6880:
  5186  0049DE  EE20 F002          	lfsr	2,2
  5187  0049E2  5008               	movf	fputc@fp,w,c
  5188  0049E4  26D9               	addwf	fsr2l,f,c
  5189  0049E6  5009               	movf	fputc@fp+1,w,c
  5190  0049E8  22DA               	addwfc	fsr2h,f,c
  5191  0049EA  006F FF78  F00A    	movff	postinc2,??_fputc
  5192  0049F0  006F FF74  F00B    	movff	postdec2,??_fputc+1
  5193  0049F6  0060  F023  FFD9   	movff	fputc@fp,fsr2l
  5194  0049FC  0060  F027  FFDA   	movff	fputc@fp+1,fsr2h
  5195  004A02  006F FF78  F00C    	movff	postinc2,??_fputc+2
  5196  004A08  006F FF74  F00D    	movff	postdec2,??_fputc+3
  5197  004A0E  500A               	movf	??_fputc,w,c
  5198  004A10  240C               	addwf	??_fputc+2,w,c
  5199  004A12  6ED9               	movwf	fsr2l,c
  5200  004A14  500B               	movf	??_fputc+1,w,c
  5201  004A16  200D               	addwfc	??_fputc+3,w,c
  5202  004A18  6EDA               	movwf	fsr2h,c
  5203  004A1A  0060  F01B  FFDF   	movff	fputc@c,indf2
  5204  004A20  EE20 F002          	lfsr	2,2
  5205  004A24  5008               	movf	fputc@fp,w,c
  5206  004A26  26D9               	addwf	fsr2l,f,c
  5207  004A28  5009               	movf	fputc@fp+1,w,c
  5208  004A2A  22DA               	addwfc	fsr2h,f,c
  5209  004A2C  2ADE               	incf	postinc2,f,c
  5210  004A2E  0E00               	movlw	0
  5211  004A30  22DD               	addwfc	postdec2,f,c
  5212  004A32  0012               	return		;funcret
  5213  004A34                     __end_of_fputc:
  5214                           	opt callstack 0
  5215                           
  5216 ;; *************** function _putch *****************
  5217 ;; Defined at:
  5218 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  c               1    wreg     unsigned char 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  c               1    0[COMRAM] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      void 
  5225 ;; Registers used:
  5226 ;;		wreg
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5236 ;;Total ram usage:        0 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    2
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		_fputc
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text17
  5247  00534E                     __ptext17:
  5248                           	opt callstack 0
  5249  00534E                     _putch:
  5250                           	opt callstack 23
  5251                           
  5252                           ;incstack = 0
  5253  00534E  0012               	return		;funcret
  5254  005350                     __end_of_putch:
  5255                           	opt callstack 0
  5256                           
  5257 ;; *************** function _floorf *****************
  5258 ;; Defined at:
  5259 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;  x               4   30[COMRAM] float 
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  u               4   46[COMRAM] struct .
  5264 ;;  m               4   40[COMRAM] unsigned long 
  5265 ;;  e               2   44[COMRAM] int 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  4   30[COMRAM] float 
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5276 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5277 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5278 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5279 ;;Total ram usage:       20 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    2
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_efgtoa
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	text18
  5290  003EF2                     __ptext18:
  5291                           	opt callstack 0
  5292  003EF2                     _floorf:
  5293                           	opt callstack 23
  5294                           
  5295                           ;incstack = 0
  5296  003EF2  0060  F450  F02F   	movff	floorf@F524,floorf@u
  5297  003EF8  0060  F454  F030   	movff	floorf@F524+1,floorf@u+1
  5298  003EFE  0060  F458  F031   	movff	floorf@F524+2,floorf@u+2
  5299  003F04  0060  F45C  F032   	movff	floorf@F524+3,floorf@u+3
  5300  003F0A  0060  F07C  F02F   	movff	floorf@x,floorf@u
  5301  003F10  0060  F080  F030   	movff	floorf@x+1,floorf@u+1
  5302  003F16  0060  F084  F031   	movff	floorf@x+2,floorf@u+2
  5303  003F1C  0060  F088  F032   	movff	floorf@x+3,floorf@u+3
  5304  003F22  0E81               	movlw	129
  5305  003F24  6E23               	movwf	??_floorf& (0+255),c
  5306  003F26  0EFF               	movlw	255
  5307  003F28  6E24               	movwf	(??_floorf+1)& (0+255),c
  5308  003F2A  0060  F0BC  F025   	movff	floorf@u,??_floorf+2
  5309  003F30  0060  F0C0  F026   	movff	floorf@u+1,??_floorf+3
  5310  003F36  0060  F0C4  F027   	movff	floorf@u+2,??_floorf+4
  5311  003F3C  0060  F0C8  F028   	movff	floorf@u+3,??_floorf+5
  5312  003F42  0E18               	movlw	24
  5313  003F44  D005               	goto	u7480
  5314  003F46                     u7485:
  5315  003F46  90D8               	bcf	status,0,c
  5316  003F48  3228               	rrcf	??_floorf+5,f,c
  5317  003F4A  3227               	rrcf	??_floorf+4,f,c
  5318  003F4C  3226               	rrcf	??_floorf+3,f,c
  5319  003F4E  3225               	rrcf	??_floorf+2,f,c
  5320  003F50                     u7480:
  5321  003F50  2EE8               	decfsz	wreg,f,c
  5322  003F52  D7F9               	goto	u7485
  5323  003F54  5025               	movf	??_floorf+2,w,c
  5324  003F56  2423               	addwf	??_floorf,w,c
  5325  003F58  6E2D               	movwf	floorf@e,c
  5326  003F5A  0E00               	movlw	0
  5327  003F5C  2024               	addwfc	??_floorf+1,w,c
  5328  003F5E  6E2E               	movwf	floorf@e+1,c
  5329  003F60  BE2E               	btfsc	floorf@e+1,7,c
  5330  003F62  D013               	goto	l5661
  5331  003F64  502E               	movf	floorf@e+1,w,c
  5332  003F66  E104               	bnz	u7490
  5333  003F68  0E17               	movlw	23
  5334  003F6A  5C2D               	subwf	floorf@e,w,c
  5335  003F6C  A0D8               	btfss	status,0,c
  5336  003F6E  D00D               	goto	l5661
  5337  003F70                     u7490:
  5338  003F70  0060  F07C  F01F   	movff	floorf@x,?_floorf
  5339  003F76  0060  F080  F020   	movff	floorf@x+1,?_floorf+1
  5340  003F7C  0060  F084  F021   	movff	floorf@x+2,?_floorf+2
  5341  003F82  0060  F088  F022   	movff	floorf@x+3,?_floorf+3
  5342  003F88  0012               	return	
  5343  003F8A                     l5661:
  5344  003F8A  BE2E               	btfsc	floorf@e+1,7,c
  5345  003F8C  D067               	goto	l5671
  5346  003F8E  0060  F0B4  F023   	movff	floorf@e,??_floorf
  5347  003F94  0EFF               	movlw	255
  5348  003F96  6E24               	movwf	(??_floorf+1)& (0+255),c
  5349  003F98  0EFF               	movlw	255
  5350  003F9A  6E25               	movwf	(??_floorf+2)& (0+255),c
  5351  003F9C  0E7F               	movlw	127
  5352  003F9E  6E26               	movwf	(??_floorf+3)& (0+255),c
  5353  003FA0  0E00               	movlw	0
  5354  003FA2  6E27               	movwf	(??_floorf+4)& (0+255),c
  5355  003FA4                     u7515:
  5356  003FA4  6623               	tstfsz	??_floorf,c
  5357  003FA6  D001               	goto	u7516
  5358  003FA8  D007               	goto	u7517
  5359  003FAA                     u7516:
  5360  003FAA  3427               	rlcf	??_floorf+4,w,c
  5361  003FAC  3227               	rrcf	??_floorf+4,f,c
  5362  003FAE  3226               	rrcf	??_floorf+3,f,c
  5363  003FB0  3225               	rrcf	??_floorf+2,f,c
  5364  003FB2  3224               	rrcf	??_floorf+1,f,c
  5365  003FB4  2E23               	decfsz	??_floorf,f,c
  5366  003FB6  D7F6               	goto	u7515
  5367  003FB8                     u7517:
  5368  003FB8  0060  F090  F029   	movff	??_floorf+1,floorf@m
  5369  003FBE  0060  F094  F02A   	movff	??_floorf+2,floorf@m+1
  5370  003FC4  0060  F098  F02B   	movff	??_floorf+3,floorf@m+2
  5371  003FCA  0060  F09C  F02C   	movff	??_floorf+4,floorf@m+3
  5372  003FD0  5029               	movf	floorf@m,w,c
  5373  003FD2  142F               	andwf	floorf@u,w,c
  5374  003FD4  6E23               	movwf	??_floorf& (0+255),c
  5375  003FD6  502A               	movf	floorf@m+1,w,c
  5376  003FD8  1430               	andwf	floorf@u+1,w,c
  5377  003FDA  6E24               	movwf	(??_floorf+1)& (0+255),c
  5378  003FDC  502B               	movf	floorf@m+2,w,c
  5379  003FDE  1431               	andwf	floorf@u+2,w,c
  5380  003FE0  6E25               	movwf	(??_floorf+2)& (0+255),c
  5381  003FE2  502C               	movf	floorf@m+3,w,c
  5382  003FE4  1432               	andwf	floorf@u+3,w,c
  5383  003FE6  6E26               	movwf	(??_floorf+3)& (0+255),c
  5384  003FE8  5023               	movf	??_floorf,w,c
  5385  003FEA  1024               	iorwf	??_floorf+1,w,c
  5386  003FEC  1025               	iorwf	??_floorf+2,w,c
  5387  003FEE  1026               	iorwf	??_floorf+3,w,c
  5388  003FF0  B4D8               	btfsc	status,2,c
  5389  003FF2  D7BE               	goto	u7490
  5390  003FF4  0060  F0BC  F023   	movff	floorf@u,??_floorf
  5391  003FFA  0060  F0C0  F024   	movff	floorf@u+1,??_floorf+1
  5392  004000  0060  F0C4  F025   	movff	floorf@u+2,??_floorf+2
  5393  004006  0060  F0C8  F026   	movff	floorf@u+3,??_floorf+3
  5394  00400C  0E20               	movlw	32
  5395  00400E  D005               	goto	u7530
  5396  004010                     u7535:
  5397  004010  90D8               	bcf	status,0,c
  5398  004012  3226               	rrcf	??_floorf+3,f,c
  5399  004014  3225               	rrcf	??_floorf+2,f,c
  5400  004016  3224               	rrcf	??_floorf+1,f,c
  5401  004018  3223               	rrcf	??_floorf,f,c
  5402  00401A                     u7530:
  5403  00401A  2EE8               	decfsz	wreg,f,c
  5404  00401C  D7F9               	goto	u7535
  5405  00401E  5023               	movf	??_floorf,w,c
  5406  004020  1024               	iorwf	??_floorf+1,w,c
  5407  004022  1025               	iorwf	??_floorf+2,w,c
  5408  004024  1026               	iorwf	??_floorf+3,w,c
  5409  004026  B4D8               	btfsc	status,2,c
  5410  004028  D008               	goto	l1375
  5411  00402A  5029               	movf	floorf@m,w,c
  5412  00402C  262F               	addwf	floorf@u,f,c
  5413  00402E  502A               	movf	floorf@m+1,w,c
  5414  004030  2230               	addwfc	floorf@u+1,f,c
  5415  004032  502B               	movf	floorf@m+2,w,c
  5416  004034  2231               	addwfc	floorf@u+2,f,c
  5417  004036  502C               	movf	floorf@m+3,w,c
  5418  004038  2232               	addwfc	floorf@u+3,f,c
  5419  00403A                     l1375:
  5420  00403A  1C29               	comf	floorf@m,w,c
  5421  00403C  6E23               	movwf	??_floorf& (0+255),c
  5422  00403E  1C2A               	comf	floorf@m+1,w,c
  5423  004040  6E24               	movwf	(??_floorf+1)& (0+255),c
  5424  004042  1C2B               	comf	floorf@m+2,w,c
  5425  004044  6E25               	movwf	(??_floorf+2)& (0+255),c
  5426  004046  1C2C               	comf	floorf@m+3,w,c
  5427  004048  6E26               	movwf	(??_floorf+3)& (0+255),c
  5428  00404A  5023               	movf	??_floorf,w,c
  5429  00404C  162F               	andwf	floorf@u,f,c
  5430  00404E  5024               	movf	??_floorf+1,w,c
  5431  004050  1630               	andwf	floorf@u+1,f,c
  5432  004052  5025               	movf	??_floorf+2,w,c
  5433  004054  1631               	andwf	floorf@u+2,f,c
  5434  004056  5026               	movf	??_floorf+3,w,c
  5435  004058  1632               	andwf	floorf@u+3,f,c
  5436  00405A  D03A               	goto	l5679
  5437  00405C                     l5671:
  5438  00405C  0060  F0BC  F023   	movff	floorf@u,??_floorf
  5439  004062  0060  F0C0  F024   	movff	floorf@u+1,??_floorf+1
  5440  004068  0060  F0C4  F025   	movff	floorf@u+2,??_floorf+2
  5441  00406E  0060  F0C8  F026   	movff	floorf@u+3,??_floorf+3
  5442  004074  0E20               	movlw	32
  5443  004076  D005               	goto	u7550
  5444  004078                     u7555:
  5445  004078  90D8               	bcf	status,0,c
  5446  00407A  3226               	rrcf	??_floorf+3,f,c
  5447  00407C  3225               	rrcf	??_floorf+2,f,c
  5448  00407E  3224               	rrcf	??_floorf+1,f,c
  5449  004080  3223               	rrcf	??_floorf,f,c
  5450  004082                     u7550:
  5451  004082  2EE8               	decfsz	wreg,f,c
  5452  004084  D7F9               	goto	u7555
  5453  004086  5023               	movf	??_floorf,w,c
  5454  004088  1024               	iorwf	??_floorf+1,w,c
  5455  00408A  1025               	iorwf	??_floorf+2,w,c
  5456  00408C  1026               	iorwf	??_floorf+3,w,c
  5457  00408E  A4D8               	btfss	status,2,c
  5458  004090  D008               	goto	l5675
  5459  004092  0E00               	movlw	0
  5460  004094  6E2F               	movwf	floorf@u,c
  5461  004096  0E00               	movlw	0
  5462  004098  6E30               	movwf	floorf@u+1,c
  5463  00409A  0E00               	movlw	0
  5464  00409C  6E31               	movwf	floorf@u+2,c
  5465  00409E  0E00               	movlw	0
  5466  0040A0  D016               	goto	L6
  5467  0040A2                     l5675:
  5468  0040A2  90D8               	bcf	status,0,c
  5469  0040A4  342F               	rlcf	floorf@u,w,c
  5470  0040A6  6E23               	movwf	??_floorf& (0+255),c
  5471  0040A8  3430               	rlcf	floorf@u+1,w,c
  5472  0040AA  6E24               	movwf	(??_floorf+1)& (0+255),c
  5473  0040AC  3431               	rlcf	floorf@u+2,w,c
  5474  0040AE  6E25               	movwf	(??_floorf+2)& (0+255),c
  5475  0040B0  3432               	rlcf	floorf@u+3,w,c
  5476  0040B2  6E26               	movwf	(??_floorf+3)& (0+255),c
  5477  0040B4  5023               	movf	??_floorf,w,c
  5478  0040B6  1024               	iorwf	??_floorf+1,w,c
  5479  0040B8  1025               	iorwf	??_floorf+2,w,c
  5480  0040BA  1026               	iorwf	??_floorf+3,w,c
  5481  0040BC  B4D8               	btfsc	status,2,c
  5482  0040BE  D008               	goto	l5679
  5483  0040C0  0E00               	movlw	0
  5484  0040C2  6E2F               	movwf	floorf@u,c
  5485  0040C4  0E00               	movlw	0
  5486  0040C6  6E30               	movwf	floorf@u+1,c
  5487  0040C8  0E80               	movlw	128
  5488  0040CA  6E31               	movwf	floorf@u+2,c
  5489  0040CC  0EBF               	movlw	191
  5490  0040CE                     L6:
  5491  0040CE  6E32               	movwf	floorf@u+3,c
  5492  0040D0                     l5679:
  5493  0040D0  0060  F0BC  F01F   	movff	floorf@u,?_floorf
  5494  0040D6  0060  F0C0  F020   	movff	floorf@u+1,?_floorf+1
  5495  0040DC  0060  F0C4  F021   	movff	floorf@u+2,?_floorf+2
  5496  0040E2  0060  F0C8  F022   	movff	floorf@u+3,?_floorf+3
  5497  0040E8  0012               	return		;funcret
  5498  0040EA                     __end_of_floorf:
  5499                           	opt callstack 0
  5500                           
  5501 ;; *************** function ___fpclassifyf *****************
  5502 ;; Defined at:
  5503 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  x               4    5[COMRAM] float 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  u               4   15[COMRAM] struct .
  5508 ;;  e               2   13[COMRAM] int 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  2    5[COMRAM] int 
  5511 ;; Registers used:
  5512 ;;		wreg, status,2, status,0
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5518 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5519 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5520 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5521 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5522 ;;Total ram usage:       14 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:    2
  5525 ;; This function calls:
  5526 ;;		Nothing
  5527 ;; This function is called by:
  5528 ;;		_efgtoa
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text19
  5533  004580                     __ptext19:
  5534                           	opt callstack 0
  5535  004580                     ___fpclassifyf:
  5536                           	opt callstack 23
  5537                           
  5538                           ;incstack = 0
  5539  004580  0060  F460  F010   	movff	___fpclassifyf@F463,___fpclassifyf@u
  5540  004586  0060  F464  F011   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5541  00458C  0060  F468  F012   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5542  004592  0060  F46C  F013   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5543  004598  0060  F018  F010   	movff	___fpclassifyf@x,___fpclassifyf@u
  5544  00459E  0060  F01C  F011   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5545  0045A4  0060  F020  F012   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5546  0045AA  0060  F024  F013   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5547  0045B0  0060  F040  F00A   	movff	___fpclassifyf@u,??___fpclassifyf
  5548  0045B6  0060  F044  F00B   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5549  0045BC  0060  F048  F00C   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5550  0045C2  0060  F04C  F00D   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5551  0045C8  0E18               	movlw	24
  5552  0045CA  D005               	goto	u7360
  5553  0045CC                     u7365:
  5554  0045CC  90D8               	bcf	status,0,c
  5555  0045CE  320D               	rrcf	??___fpclassifyf+3,f,c
  5556  0045D0  320C               	rrcf	??___fpclassifyf+2,f,c
  5557  0045D2  320B               	rrcf	??___fpclassifyf+1,f,c
  5558  0045D4  320A               	rrcf	??___fpclassifyf,f,c
  5559  0045D6                     u7360:
  5560  0045D6  2EE8               	decfsz	wreg,f,c
  5561  0045D8  D7F9               	goto	u7365
  5562  0045DA  500A               	movf	??___fpclassifyf,w,c
  5563  0045DC  6E0E               	movwf	___fpclassifyf@e,c
  5564  0045DE  6A0F               	clrf	___fpclassifyf@e+1,c
  5565  0045E0  500E               	movf	___fpclassifyf@e,w,c
  5566  0045E2  100F               	iorwf	___fpclassifyf@e+1,w,c
  5567  0045E4  A4D8               	btfss	status,2,c
  5568  0045E6  D019               	goto	l5631
  5569  0045E8  90D8               	bcf	status,0,c
  5570  0045EA  3410               	rlcf	___fpclassifyf@u,w,c
  5571  0045EC  6E0A               	movwf	??___fpclassifyf& (0+255),c
  5572  0045EE  3411               	rlcf	___fpclassifyf@u+1,w,c
  5573  0045F0  6E0B               	movwf	(??___fpclassifyf+1)& (0+255),c
  5574  0045F2  3412               	rlcf	___fpclassifyf@u+2,w,c
  5575  0045F4  6E0C               	movwf	(??___fpclassifyf+2)& (0+255),c
  5576  0045F6  3413               	rlcf	___fpclassifyf@u+3,w,c
  5577  0045F8  6E0D               	movwf	(??___fpclassifyf+3)& (0+255),c
  5578  0045FA  500A               	movf	??___fpclassifyf,w,c
  5579  0045FC  100B               	iorwf	??___fpclassifyf+1,w,c
  5580  0045FE  100C               	iorwf	??___fpclassifyf+2,w,c
  5581  004600  100D               	iorwf	??___fpclassifyf+3,w,c
  5582  004602  A4D8               	btfss	status,2,c
  5583  004604  D005               	goto	l5627
  5584  004606  0E00               	movlw	0
  5585  004608  6E07               	movwf	?___fpclassifyf+1,c
  5586  00460A  0E02               	movlw	2
  5587  00460C  6E06               	movwf	?___fpclassifyf,c
  5588  00460E  0012               	return	
  5589  004610                     l5627:
  5590  004610  0E00               	movlw	0
  5591  004612  6E07               	movwf	?___fpclassifyf+1,c
  5592  004614  0E03               	movlw	3
  5593  004616  6E06               	movwf	?___fpclassifyf,c
  5594  004618  0012               	return	
  5595  00461A                     l5631:
  5596  00461A  280E               	incf	___fpclassifyf@e,w,c
  5597  00461C  100F               	iorwf	___fpclassifyf@e+1,w,c
  5598  00461E  A4D8               	btfss	status,2,c
  5599  004620  D020               	goto	l5637
  5600  004622  0060  F040  F00A   	movff	___fpclassifyf@u,??___fpclassifyf
  5601  004628  0060  F044  F00B   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5602  00462E  0060  F048  F00C   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5603  004634  0060  F04C  F00D   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5604  00463A  0E09               	movlw	9
  5605  00463C                     u7405:
  5606  00463C  90D8               	bcf	status,0,c
  5607  00463E  360A               	rlcf	??___fpclassifyf,f,c
  5608  004640  360B               	rlcf	??___fpclassifyf+1,f,c
  5609  004642  360C               	rlcf	??___fpclassifyf+2,f,c
  5610  004644  360D               	rlcf	??___fpclassifyf+3,f,c
  5611  004646  2EE8               	decfsz	wreg,f,c
  5612  004648  D7F9               	goto	u7405
  5613  00464A  500A               	movf	??___fpclassifyf,w,c
  5614  00464C  100B               	iorwf	??___fpclassifyf+1,w,c
  5615  00464E  100C               	iorwf	??___fpclassifyf+2,w,c
  5616  004650  100D               	iorwf	??___fpclassifyf+3,w,c
  5617  004652  A4D8               	btfss	status,2,c
  5618  004654  D002               	goto	u7410
  5619  004656  0E01               	movlw	1
  5620  004658  D001               	goto	u7420
  5621  00465A                     u7410:
  5622  00465A  0E00               	movlw	0
  5623  00465C                     u7420:
  5624  00465C  6E06               	movwf	?___fpclassifyf,c
  5625  00465E  6A07               	clrf	?___fpclassifyf+1,c
  5626  004660  0012               	return	
  5627  004662                     l5637:
  5628  004662  0E00               	movlw	0
  5629  004664  6E07               	movwf	?___fpclassifyf+1,c
  5630  004666  0E04               	movlw	4
  5631  004668  6E06               	movwf	?___fpclassifyf,c
  5632  00466A  0012               	return		;funcret
  5633  00466C                     __end_of___fpclassifyf:
  5634                           	opt callstack 0
  5635                           
  5636 ;; *************** function ___fltol *****************
  5637 ;; Defined at:
  5638 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  f1              4    5[COMRAM] int 
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  exp1            1   14[COMRAM] unsigned char 
  5643 ;;  sign1           1   13[COMRAM] unsigned char 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  4    5[COMRAM] long 
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5655 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5656 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5657 ;;Total ram usage:       10 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    2
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_efgtoa
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           	psect	text20
  5668  00480A                     __ptext20:
  5669                           	opt callstack 0
  5670  00480A                     ___fltol:
  5671                           	opt callstack 23
  5672                           
  5673                           ;incstack = 0
  5674  00480A  3408               	rlcf	___fltol@f1+2,w,c
  5675  00480C  3409               	rlcf	___fltol@f1+3,w,c
  5676  00480E  6E0F               	movwf	___fltol@exp1,c
  5677  004810  500F               	movf	___fltol@exp1,w,c
  5678  004812  A4D8               	btfss	status,2,c
  5679  004814  D009               	goto	l6089
  5680  004816                     u8210:
  5681  004816  0E00               	movlw	0
  5682  004818  6E06               	movwf	?___fltol,c
  5683  00481A  0E00               	movlw	0
  5684  00481C  6E07               	movwf	?___fltol+1,c
  5685  00481E  0E00               	movlw	0
  5686  004820  6E08               	movwf	?___fltol+2,c
  5687  004822  0E00               	movlw	0
  5688  004824  6E09               	movwf	?___fltol+3,c
  5689  004826  0012               	return	
  5690  004828                     l6089:
  5691  004828  0060  F018  F00A   	movff	___fltol@f1,??___fltol
  5692  00482E  0060  F01C  F00B   	movff	___fltol@f1+1,??___fltol+1
  5693  004834  0060  F020  F00C   	movff	___fltol@f1+2,??___fltol+2
  5694  00483A  0060  F024  F00D   	movff	___fltol@f1+3,??___fltol+3
  5695  004840  0E20               	movlw	32
  5696  004842  D005               	goto	u8220
  5697  004844                     u8225:
  5698  004844  90D8               	bcf	status,0,c
  5699  004846  320D               	rrcf	??___fltol+3,f,c
  5700  004848  320C               	rrcf	??___fltol+2,f,c
  5701  00484A  320B               	rrcf	??___fltol+1,f,c
  5702  00484C  320A               	rrcf	??___fltol,f,c
  5703  00484E                     u8220:
  5704  00484E  2EE8               	decfsz	wreg,f,c
  5705  004850  D7F9               	goto	u8225
  5706  004852  500A               	movf	??___fltol,w,c
  5707  004854  6E0E               	movwf	___fltol@sign1,c
  5708  004856  8E08               	bsf	___fltol@f1+2,7,c
  5709  004858  0EFF               	movlw	255
  5710  00485A  1606               	andwf	___fltol@f1,f,c
  5711  00485C  0EFF               	movlw	255
  5712  00485E  1607               	andwf	___fltol@f1+1,f,c
  5713  004860  0EFF               	movlw	255
  5714  004862  1608               	andwf	___fltol@f1+2,f,c
  5715  004864  0E00               	movlw	0
  5716  004866  1609               	andwf	___fltol@f1+3,f,c
  5717  004868  0E96               	movlw	150
  5718  00486A  5E0F               	subwf	___fltol@exp1,f,c
  5719  00486C  AE0F               	btfss	___fltol@exp1,7,c
  5720  00486E  D00D               	goto	l6109
  5721  004870  500F               	movf	___fltol@exp1,w,c
  5722  004872  0A80               	xorlw	128
  5723  004874  0F97               	addlw	151
  5724  004876  A0D8               	btfss	status,0,c
  5725  004878  D7CE               	goto	u8210
  5726  00487A                     l6105:
  5727  00487A  90D8               	bcf	status,0,c
  5728  00487C  3209               	rrcf	___fltol@f1+3,f,c
  5729  00487E  3208               	rrcf	___fltol@f1+2,f,c
  5730  004880  3207               	rrcf	___fltol@f1+1,f,c
  5731  004882  3206               	rrcf	___fltol@f1,f,c
  5732  004884  3E0F               	incfsz	___fltol@exp1,f,c
  5733  004886  D7F9               	goto	l6105
  5734  004888  D00D               	goto	u8260
  5735  00488A                     l6109:
  5736  00488A  0E1F               	movlw	31
  5737  00488C  640F               	cpfsgt	___fltol@exp1,c
  5738  00488E  D007               	goto	l6117
  5739  004890  D7C2               	goto	u8210
  5740  004892                     l6115:
  5741  004892  90D8               	bcf	status,0,c
  5742  004894  3606               	rlcf	___fltol@f1,f,c
  5743  004896  3607               	rlcf	___fltol@f1+1,f,c
  5744  004898  3608               	rlcf	___fltol@f1+2,f,c
  5745  00489A  3609               	rlcf	___fltol@f1+3,f,c
  5746  00489C  060F               	decf	___fltol@exp1,f,c
  5747  00489E                     l6117:
  5748  00489E  500F               	movf	___fltol@exp1,w,c
  5749  0048A0  A4D8               	btfss	status,2,c
  5750  0048A2  D7F7               	goto	l6115
  5751  0048A4                     u8260:
  5752  0048A4  500E               	movf	___fltol@sign1,w,c
  5753  0048A6  B4D8               	btfsc	status,2,c
  5754  0048A8  D008               	goto	l6123
  5755  0048AA  1E09               	comf	___fltol@f1+3,f,c
  5756  0048AC  1E08               	comf	___fltol@f1+2,f,c
  5757  0048AE  1E07               	comf	___fltol@f1+1,f,c
  5758  0048B0  6C06               	negf	___fltol@f1,c
  5759  0048B2  0E00               	movlw	0
  5760  0048B4  2207               	addwfc	___fltol@f1+1,f,c
  5761  0048B6  2208               	addwfc	___fltol@f1+2,f,c
  5762  0048B8  2209               	addwfc	___fltol@f1+3,f,c
  5763  0048BA                     l6123:
  5764  0048BA  0060  F018  F006   	movff	___fltol@f1,?___fltol
  5765  0048C0  0060  F01C  F007   	movff	___fltol@f1+1,?___fltol+1
  5766  0048C6  0060  F020  F008   	movff	___fltol@f1+2,?___fltol+2
  5767  0048CC  0060  F024  F009   	movff	___fltol@f1+3,?___fltol+3
  5768  0048D2  0012               	return		;funcret
  5769  0048D4                     __end_of___fltol:
  5770                           	opt callstack 0
  5771                           
  5772 ;; *************** function ___flsub *****************
  5773 ;; Defined at:
  5774 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  b               4   60[COMRAM] long 
  5777 ;;  a               4   64[COMRAM] long 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  4   60[COMRAM] long 
  5782 ;; Registers used:
  5783 ;;		wreg, status,2, status,0, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5789 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5792 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5793 ;;Total ram usage:        8 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    3
  5796 ;; This function calls:
  5797 ;;		___fladd
  5798 ;; This function is called by:
  5799 ;;		_efgtoa
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text21
  5804  004EBC                     __ptext21:
  5805                           	opt callstack 0
  5806  004EBC                     ___flsub:
  5807                           	opt callstack 22
  5808                           
  5809                           ;incstack = 0
  5810  004EBC  0E00               	movlw	0
  5811  004EBE  1A41               	xorwf	___flsub@a,f,c
  5812  004EC0  0E00               	movlw	0
  5813  004EC2  1A42               	xorwf	___flsub@a+1,f,c
  5814  004EC4  0E00               	movlw	0
  5815  004EC6  1A43               	xorwf	___flsub@a+2,f,c
  5816  004EC8  0E80               	movlw	128
  5817  004ECA  1A44               	xorwf	___flsub@a+3,f,c
  5818  004ECC  0060  F0F4  F02D   	movff	___flsub@b,___fladd@b
  5819  004ED2  0060  F0F8  F02E   	movff	___flsub@b+1,___fladd@b+1
  5820  004ED8  0060  F0FC  F02F   	movff	___flsub@b+2,___fladd@b+2
  5821  004EDE  0060  F100  F030   	movff	___flsub@b+3,___fladd@b+3
  5822  004EE4  0060  F104  F031   	movff	___flsub@a,___fladd@a
  5823  004EEA  0060  F108  F032   	movff	___flsub@a+1,___fladd@a+1
  5824  004EF0  0060  F10C  F033   	movff	___flsub@a+2,___fladd@a+2
  5825  004EF6  0060  F110  F034   	movff	___flsub@a+3,___fladd@a+3
  5826  004EFC  ECA5  F019         	call	___fladd	;wreg free
  5827  004F00  0060  F0B4  F03D   	movff	?___fladd,?___flsub
  5828  004F06  0060  F0B8  F03E   	movff	?___fladd+1,?___flsub+1
  5829  004F0C  0060  F0BC  F03F   	movff	?___fladd+2,?___flsub+2
  5830  004F12  0060  F0C0  F040   	movff	?___fladd+3,?___flsub+3
  5831  004F18  0012               	return		;funcret
  5832  004F1A                     __end_of___flsub:
  5833                           	opt callstack 0
  5834                           
  5835 ;; *************** function ___fladd *****************
  5836 ;; Defined at:
  5837 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  b               4   44[COMRAM] long 
  5840 ;;  a               4   48[COMRAM] long 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  grs             1   59[COMRAM] unsigned char 
  5843 ;;  bexp            1   58[COMRAM] unsigned char 
  5844 ;;  aexp            1   57[COMRAM] unsigned char 
  5845 ;;  signs           1   56[COMRAM] unsigned char 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  4   44[COMRAM] unsigned char 
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5855 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5856 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5857 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5858 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5859 ;;Total ram usage:       16 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    2
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_stof
  5866 ;;		_efgtoa
  5867 ;;		___flsub
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text22
  5872  00334A                     __ptext22:
  5873                           	opt callstack 0
  5874  00334A                     ___fladd:
  5875                           	opt callstack 26
  5876                           
  5877                           ;incstack = 0
  5878  00334A  5030               	movf	___fladd@b+3,w,c
  5879  00334C  0B80               	andlw	128
  5880  00334E  6E39               	movwf	___fladd@signs,c
  5881  003350  5030               	movf	___fladd@b+3,w,c
  5882  003352  2430               	addwf	___fladd@b+3,w,c
  5883  003354  6E3B               	movwf	___fladd@bexp,c
  5884  003356  BE2F               	btfsc	___fladd@b+2,7,c
  5885  003358  803B               	bsf	___fladd@bexp,0,c
  5886  00335A  503B               	movf	___fladd@bexp,w,c
  5887  00335C  B4D8               	btfsc	status,2,c
  5888  00335E  D00D               	goto	l5411
  5889  003360  283B               	incf	___fladd@bexp,w,c
  5890  003362  A4D8               	btfss	status,2,c
  5891  003364  D008               	goto	l5407
  5892  003366  0E00               	movlw	0
  5893  003368  6E2D               	movwf	___fladd@b,c
  5894  00336A  0E00               	movlw	0
  5895  00336C  6E2E               	movwf	___fladd@b+1,c
  5896  00336E  0E00               	movlw	0
  5897  003370  6E2F               	movwf	___fladd@b+2,c
  5898  003372  0E00               	movlw	0
  5899  003374  6E30               	movwf	___fladd@b+3,c
  5900  003376                     l5407:
  5901  003376  8E2F               	bsf	___fladd@b+2,7,c
  5902  003378  D006               	goto	L7
  5903  00337A                     l5411:
  5904  00337A  0E00               	movlw	0
  5905  00337C  6E2D               	movwf	___fladd@b,c
  5906  00337E  0E00               	movlw	0
  5907  003380  6E2E               	movwf	___fladd@b+1,c
  5908  003382  0E00               	movlw	0
  5909  003384  6E2F               	movwf	___fladd@b+2,c
  5910  003386                     L7:
  5911  003386  0E00               	movlw	0
  5912  003388  6E30               	movwf	___fladd@b+3,c
  5913  00338A  5034               	movf	___fladd@a+3,w,c
  5914  00338C  0B80               	andlw	128
  5915  00338E  6E3A               	movwf	___fladd@aexp,c
  5916  003390  5039               	movf	___fladd@signs,w,c
  5917  003392  183A               	xorwf	___fladd@aexp,w,c
  5918  003394  A4D8               	btfss	status,2,c
  5919  003396  8C39               	bsf	___fladd@signs,6,c
  5920  003398  5034               	movf	___fladd@a+3,w,c
  5921  00339A  2434               	addwf	___fladd@a+3,w,c
  5922  00339C  6E3A               	movwf	___fladd@aexp,c
  5923  00339E  BE33               	btfsc	___fladd@a+2,7,c
  5924  0033A0  803A               	bsf	___fladd@aexp,0,c
  5925  0033A2  503A               	movf	___fladd@aexp,w,c
  5926  0033A4  B4D8               	btfsc	status,2,c
  5927  0033A6  D00D               	goto	l5435
  5928  0033A8  283A               	incf	___fladd@aexp,w,c
  5929  0033AA  A4D8               	btfss	status,2,c
  5930  0033AC  D008               	goto	l5431
  5931  0033AE  0E00               	movlw	0
  5932  0033B0  6E31               	movwf	___fladd@a,c
  5933  0033B2  0E00               	movlw	0
  5934  0033B4  6E32               	movwf	___fladd@a+1,c
  5935  0033B6  0E00               	movlw	0
  5936  0033B8  6E33               	movwf	___fladd@a+2,c
  5937  0033BA  0E00               	movlw	0
  5938  0033BC  6E34               	movwf	___fladd@a+3,c
  5939  0033BE                     l5431:
  5940  0033BE  8E33               	bsf	___fladd@a+2,7,c
  5941  0033C0  D006               	goto	L8
  5942  0033C2                     l5435:
  5943  0033C2  0E00               	movlw	0
  5944  0033C4  6E31               	movwf	___fladd@a,c
  5945  0033C6  0E00               	movlw	0
  5946  0033C8  6E32               	movwf	___fladd@a+1,c
  5947  0033CA  0E00               	movlw	0
  5948  0033CC  6E33               	movwf	___fladd@a+2,c
  5949  0033CE                     L8:
  5950  0033CE  0E00               	movlw	0
  5951  0033D0  6E34               	movwf	___fladd@a+3,c
  5952  0033D2  503B               	movf	___fladd@bexp,w,c
  5953  0033D4  5C3A               	subwf	___fladd@aexp,w,c
  5954  0033D6  B0D8               	btfsc	status,0,c
  5955  0033D8  D031               	goto	l5473
  5956  0033DA  AC39               	btfss	___fladd@signs,6,c
  5957  0033DC  D002               	goto	l5443
  5958  0033DE  0E80               	movlw	128
  5959  0033E0  1A39               	xorwf	___fladd@signs,f,c
  5960  0033E2                     l5443:
  5961  0033E2  0060  F0EC  F03C   	movff	___fladd@bexp,___fladd@grs
  5962  0033E8  0060  F0E8  F03B   	movff	___fladd@aexp,___fladd@bexp
  5963  0033EE  0060  F0F0  F03A   	movff	___fladd@grs,___fladd@aexp
  5964  0033F4  0060  F0B4  F03C   	movff	___fladd@b,___fladd@grs
  5965  0033FA  0060  F0C4  F02D   	movff	___fladd@a,___fladd@b
  5966  003400  0060  F0F0  F031   	movff	___fladd@grs,___fladd@a
  5967  003406  0060  F0B8  F03C   	movff	___fladd@b+1,___fladd@grs
  5968  00340C  0060  F0C8  F02E   	movff	___fladd@a+1,___fladd@b+1
  5969  003412  0060  F0F0  F032   	movff	___fladd@grs,___fladd@a+1
  5970  003418  0060  F0BC  F03C   	movff	___fladd@b+2,___fladd@grs
  5971  00341E  0060  F0CC  F02F   	movff	___fladd@a+2,___fladd@b+2
  5972  003424  0060  F0F0  F033   	movff	___fladd@grs,___fladd@a+2
  5973  00342A  0060  F0C0  F03C   	movff	___fladd@b+3,___fladd@grs
  5974  003430  0060  F0D0  F030   	movff	___fladd@a+3,___fladd@b+3
  5975  003436  0060  F0F0  F034   	movff	___fladd@grs,___fladd@a+3
  5976  00343C                     l5473:
  5977  00343C  0E00               	movlw	0
  5978  00343E  6E3C               	movwf	___fladd@grs,c
  5979  003440  503B               	movf	___fladd@bexp,w,c
  5980  003442  0060  F0E8  F035   	movff	___fladd@aexp,??___fladd
  5981  003448  6A36               	clrf	(??___fladd+1)& (0+255),c
  5982  00344A  5E35               	subwf	??___fladd,f,c
  5983  00344C  0E00               	movlw	0
  5984  00344E  5A36               	subwfb	??___fladd+1,f,c
  5985  003450  BE36               	btfsc	??___fladd+1,7,c
  5986  003452  D02D               	goto	l1213
  5987  003454  5036               	movf	??___fladd+1,w,c
  5988  003456  E104               	bnz	u7020
  5989  003458  0E1A               	movlw	26
  5990  00345A  5C35               	subwf	??___fladd,w,c
  5991  00345C  A0D8               	btfss	status,0,c
  5992  00345E  D027               	goto	l1213
  5993  003460                     u7020:
  5994  003460  502D               	movf	___fladd@b,w,c
  5995  003462  102E               	iorwf	___fladd@b+1,w,c
  5996  003464  102F               	iorwf	___fladd@b+2,w,c
  5997  003466  1030               	iorwf	___fladd@b+3,w,c
  5998  003468  B4D8               	btfsc	status,2,c
  5999  00346A  D002               	goto	u7030
  6000  00346C  0E01               	movlw	1
  6001  00346E  D001               	goto	u7040
  6002  003470                     u7030:
  6003  003470  0E00               	movlw	0
  6004  003472                     u7040:
  6005  003472  6E3C               	movwf	___fladd@grs,c
  6006  003474  0E00               	movlw	0
  6007  003476  6E2D               	movwf	___fladd@b,c
  6008  003478  0E00               	movlw	0
  6009  00347A  6E2E               	movwf	___fladd@b+1,c
  6010  00347C  0E00               	movlw	0
  6011  00347E  6E2F               	movwf	___fladd@b+2,c
  6012  003480  0E00               	movlw	0
  6013  003482  6E30               	movwf	___fladd@b+3,c
  6014  003484  0060  F0E8  F03B   	movff	___fladd@aexp,___fladd@bexp
  6015  00348A  D015               	goto	u7070
  6016  00348C                     l1214:
  6017  00348C  A03C               	btfss	___fladd@grs,0,c
  6018  00348E  D005               	goto	l5485
  6019  003490  90D8               	bcf	status,0,c
  6020  003492  303C               	rrcf	___fladd@grs,w,c
  6021  003494  0901               	iorlw	1
  6022  003496  6E3C               	movwf	___fladd@grs,c
  6023  003498  D002               	goto	l5487
  6024  00349A                     l5485:
  6025  00349A  90D8               	bcf	status,0,c
  6026  00349C  323C               	rrcf	___fladd@grs,f,c
  6027  00349E                     l5487:
  6028  00349E  B02D               	btfsc	___fladd@b,0,c
  6029  0034A0  8E3C               	bsf	___fladd@grs,7,c
  6030  0034A2  3430               	rlcf	___fladd@b+3,w,c
  6031  0034A4  3230               	rrcf	___fladd@b+3,f,c
  6032  0034A6  322F               	rrcf	___fladd@b+2,f,c
  6033  0034A8  322E               	rrcf	___fladd@b+1,f,c
  6034  0034AA  322D               	rrcf	___fladd@b,f,c
  6035  0034AC  2A3B               	incf	___fladd@bexp,f,c
  6036  0034AE                     l1213:
  6037  0034AE  503A               	movf	___fladd@aexp,w,c
  6038  0034B0  5C3B               	subwf	___fladd@bexp,w,c
  6039  0034B2  A0D8               	btfss	status,0,c
  6040  0034B4  D7EB               	goto	l1214
  6041  0034B6                     u7070:
  6042  0034B6  BC39               	btfsc	___fladd@signs,6,c
  6043  0034B8  D028               	goto	l5519
  6044  0034BA  503B               	movf	___fladd@bexp,w,c
  6045  0034BC  A4D8               	btfss	status,2,c
  6046  0034BE  D009               	goto	l5501
  6047  0034C0  0E00               	movlw	0
  6048  0034C2  6E2D               	movwf	?___fladd,c
  6049  0034C4  0E00               	movlw	0
  6050  0034C6  6E2E               	movwf	?___fladd+1,c
  6051  0034C8  0E00               	movlw	0
  6052  0034CA  6E2F               	movwf	?___fladd+2,c
  6053  0034CC  0E00               	movlw	0
  6054  0034CE  6E30               	movwf	?___fladd+3,c
  6055  0034D0  0012               	return	
  6056  0034D2                     l5501:
  6057  0034D2  5031               	movf	___fladd@a,w,c
  6058  0034D4  262D               	addwf	___fladd@b,f,c
  6059  0034D6  5032               	movf	___fladd@a+1,w,c
  6060  0034D8  222E               	addwfc	___fladd@b+1,f,c
  6061  0034DA  5033               	movf	___fladd@a+2,w,c
  6062  0034DC  222F               	addwfc	___fladd@b+2,f,c
  6063  0034DE  5034               	movf	___fladd@a+3,w,c
  6064  0034E0  2230               	addwfc	___fladd@b+3,f,c
  6065  0034E2  A030               	btfss	___fladd@b+3,0,c
  6066  0034E4  D071               	goto	u7200
  6067  0034E6  A03C               	btfss	___fladd@grs,0,c
  6068  0034E8  D005               	goto	l5509
  6069  0034EA  90D8               	bcf	status,0,c
  6070  0034EC  303C               	rrcf	___fladd@grs,w,c
  6071  0034EE  0901               	iorlw	1
  6072  0034F0  6E3C               	movwf	___fladd@grs,c
  6073  0034F2  D002               	goto	l5511
  6074  0034F4                     l5509:
  6075  0034F4  90D8               	bcf	status,0,c
  6076  0034F6  323C               	rrcf	___fladd@grs,f,c
  6077  0034F8                     l5511:
  6078  0034F8  B02D               	btfsc	___fladd@b,0,c
  6079  0034FA  8E3C               	bsf	___fladd@grs,7,c
  6080  0034FC  3430               	rlcf	___fladd@b+3,w,c
  6081  0034FE  3230               	rrcf	___fladd@b+3,f,c
  6082  003500  322F               	rrcf	___fladd@b+2,f,c
  6083  003502  322E               	rrcf	___fladd@b+1,f,c
  6084  003504  322D               	rrcf	___fladd@b,f,c
  6085  003506  2A3B               	incf	___fladd@bexp,f,c
  6086  003508  D05F               	goto	u7200
  6087  00350A                     l5519:
  6088  00350A  5031               	movf	___fladd@a,w,c
  6089  00350C  5C2D               	subwf	___fladd@b,w,c
  6090  00350E  5032               	movf	___fladd@a+1,w,c
  6091  003510  582E               	subwfb	___fladd@b+1,w,c
  6092  003512  5033               	movf	___fladd@a+2,w,c
  6093  003514  582F               	subwfb	___fladd@b+2,w,c
  6094  003516  5030               	movf	___fladd@b+3,w,c
  6095  003518  0A80               	xorlw	128
  6096  00351A  6E35               	movwf	??___fladd& (0+255),c
  6097  00351C  5034               	movf	___fladd@a+3,w,c
  6098  00351E  0A80               	xorlw	128
  6099  003520  5835               	subwfb	??___fladd& (0+255),w,c
  6100  003522  B0D8               	btfsc	status,0,c
  6101  003524  D025               	goto	l5529
  6102  003526  502D               	movf	___fladd@b,w,c
  6103  003528  5C31               	subwf	___fladd@a,w,c
  6104  00352A  6E35               	movwf	??___fladd& (0+255),c
  6105  00352C  502E               	movf	___fladd@b+1,w,c
  6106  00352E  5832               	subwfb	___fladd@a+1,w,c
  6107  003530  6E36               	movwf	(??___fladd+1)& (0+255),c
  6108  003532  502F               	movf	___fladd@b+2,w,c
  6109  003534  5833               	subwfb	___fladd@a+2,w,c
  6110  003536  6E37               	movwf	(??___fladd+2)& (0+255),c
  6111  003538  5030               	movf	___fladd@b+3,w,c
  6112  00353A  5834               	subwfb	___fladd@a+3,w,c
  6113  00353C  6E38               	movwf	(??___fladd+3)& (0+255),c
  6114  00353E  0EFF               	movlw	255
  6115  003540  2435               	addwf	??___fladd,w,c
  6116  003542  6E2D               	movwf	___fladd@b,c
  6117  003544  0EFF               	movlw	255
  6118  003546  2036               	addwfc	??___fladd+1,w,c
  6119  003548  6E2E               	movwf	___fladd@b+1,c
  6120  00354A  0EFF               	movlw	255
  6121  00354C  2037               	addwfc	??___fladd+2,w,c
  6122  00354E  6E2F               	movwf	___fladd@b+2,c
  6123  003550  0EFF               	movlw	255
  6124  003552  2038               	addwfc	??___fladd+3,w,c
  6125  003554  6E30               	movwf	___fladd@b+3,c
  6126  003556  0E80               	movlw	128
  6127  003558  1A39               	xorwf	___fladd@signs,f,c
  6128  00355A  6C3C               	negf	___fladd@grs,c
  6129  00355C  503C               	movf	___fladd@grs,w,c
  6130  00355E  A4D8               	btfss	status,2,c
  6131  003560  D00F               	goto	l1229
  6132  003562  0E01               	movlw	1
  6133  003564  262D               	addwf	___fladd@b,f,c
  6134  003566  0E00               	movlw	0
  6135  003568  222E               	addwfc	___fladd@b+1,f,c
  6136  00356A  222F               	addwfc	___fladd@b+2,f,c
  6137  00356C  2230               	addwfc	___fladd@b+3,f,c
  6138  00356E  D008               	goto	l1229
  6139  003570                     l5529:
  6140  003570  5031               	movf	___fladd@a,w,c
  6141  003572  5E2D               	subwf	___fladd@b,f,c
  6142  003574  5032               	movf	___fladd@a+1,w,c
  6143  003576  5A2E               	subwfb	___fladd@b+1,f,c
  6144  003578  5033               	movf	___fladd@a+2,w,c
  6145  00357A  5A2F               	subwfb	___fladd@b+2,f,c
  6146  00357C  5034               	movf	___fladd@a+3,w,c
  6147  00357E  5A30               	subwfb	___fladd@b+3,f,c
  6148  003580                     l1229:
  6149  003580  502D               	movf	___fladd@b,w,c
  6150  003582  102E               	iorwf	___fladd@b+1,w,c
  6151  003584  102F               	iorwf	___fladd@b+2,w,c
  6152  003586  1030               	iorwf	___fladd@b+3,w,c
  6153  003588  A4D8               	btfss	status,2,c
  6154  00358A  D01C               	goto	l5553
  6155  00358C  503C               	movf	___fladd@grs,w,c
  6156  00358E  A4D8               	btfss	status,2,c
  6157  003590  D019               	goto	l5553
  6158  003592  0E00               	movlw	0
  6159  003594  6E2D               	movwf	?___fladd,c
  6160  003596  0E00               	movlw	0
  6161  003598  6E2E               	movwf	?___fladd+1,c
  6162  00359A  0E00               	movlw	0
  6163  00359C  6E2F               	movwf	?___fladd+2,c
  6164  00359E  0E00               	movlw	0
  6165  0035A0  6E30               	movwf	?___fladd+3,c
  6166  0035A2  0012               	return	
  6167  0035A4                     l5537:
  6168  0035A4  90D8               	bcf	status,0,c
  6169  0035A6  362D               	rlcf	___fladd@b,f,c
  6170  0035A8  362E               	rlcf	___fladd@b+1,f,c
  6171  0035AA  362F               	rlcf	___fladd@b+2,f,c
  6172  0035AC  3630               	rlcf	___fladd@b+3,f,c
  6173  0035AE  BE3C               	btfsc	___fladd@grs,7,c
  6174  0035B0  802D               	bsf	___fladd@b,0,c
  6175  0035B2  A03C               	btfss	___fladd@grs,0,c
  6176  0035B4  D002               	goto	l5547
  6177  0035B6  80D8               	bsf	status,0,c
  6178  0035B8  D001               	goto	L9
  6179  0035BA                     l5547:
  6180  0035BA  90D8               	bcf	status,0,c
  6181  0035BC                     L9:
  6182  0035BC  363C               	rlcf	___fladd@grs,f,c
  6183  0035BE  503B               	movf	___fladd@bexp,w,c
  6184  0035C0  A4D8               	btfss	status,2,c
  6185  0035C2  063B               	decf	___fladd@bexp,f,c
  6186  0035C4                     l5553:
  6187  0035C4  AE2F               	btfss	___fladd@b+2,7,c
  6188  0035C6  D7EE               	goto	l5537
  6189  0035C8                     u7200:
  6190  0035C8  0E00               	movlw	0
  6191  0035CA  6E3A               	movwf	___fladd@aexp,c
  6192  0035CC  AE3C               	btfss	___fladd@grs,7,c
  6193  0035CE  D00C               	goto	l1238
  6194  0035D0  0060  F0F0  F035   	movff	___fladd@grs,??___fladd
  6195  0035D6  0E7F               	movlw	127
  6196  0035D8  1635               	andwf	??___fladd,f,c
  6197  0035DA  B4D8               	btfsc	status,2,c
  6198  0035DC  D003               	goto	l1239
  6199  0035DE                     u7220:
  6200  0035DE  0E01               	movlw	1
  6201  0035E0  6E3A               	movwf	___fladd@aexp,c
  6202  0035E2  D002               	goto	l1238
  6203  0035E4                     l1239:
  6204  0035E4  B02D               	btfsc	___fladd@b,0,c
  6205  0035E6  D7FB               	goto	u7220
  6206  0035E8                     l1238:
  6207  0035E8  503A               	movf	___fladd@aexp,w,c
  6208  0035EA  B4D8               	btfsc	status,2,c
  6209  0035EC  D028               	goto	l5573
  6210  0035EE  0E01               	movlw	1
  6211  0035F0  262D               	addwf	___fladd@b,f,c
  6212  0035F2  0E00               	movlw	0
  6213  0035F4  222E               	addwfc	___fladd@b+1,f,c
  6214  0035F6  222F               	addwfc	___fladd@b+2,f,c
  6215  0035F8  2230               	addwfc	___fladd@b+3,f,c
  6216  0035FA  A030               	btfss	___fladd@b+3,0,c
  6217  0035FC  D020               	goto	l5573
  6218  0035FE  0060  F0B4  F035   	movff	___fladd@b,??___fladd
  6219  003604  0060  F0B8  F036   	movff	___fladd@b+1,??___fladd+1
  6220  00360A  0060  F0BC  F037   	movff	___fladd@b+2,??___fladd+2
  6221  003610  0060  F0C0  F038   	movff	___fladd@b+3,??___fladd+3
  6222  003616  3438               	rlcf	??___fladd+3,w,c
  6223  003618  3238               	rrcf	??___fladd+3,f,c
  6224  00361A  3237               	rrcf	??___fladd+2,f,c
  6225  00361C  3236               	rrcf	??___fladd+1,f,c
  6226  00361E  3235               	rrcf	??___fladd,f,c
  6227  003620  0060  F0D4  F02D   	movff	??___fladd,___fladd@b
  6228  003626  0060  F0D8  F02E   	movff	??___fladd+1,___fladd@b+1
  6229  00362C  0060  F0DC  F02F   	movff	??___fladd+2,___fladd@b+2
  6230  003632  0060  F0E0  F030   	movff	??___fladd+3,___fladd@b+3
  6231  003638  283B               	incf	___fladd@bexp,w,c
  6232  00363A  A4D8               	btfss	status,2,c
  6233  00363C  2A3B               	incf	___fladd@bexp,f,c
  6234  00363E                     l5573:
  6235  00363E  283B               	incf	___fladd@bexp,w,c
  6236  003640  B4D8               	btfsc	status,2,c
  6237  003642  D003               	goto	u7280
  6238  003644  503B               	movf	___fladd@bexp,w,c
  6239  003646  A4D8               	btfss	status,2,c
  6240  003648  D00D               	goto	l5581
  6241  00364A                     u7280:
  6242  00364A  0E00               	movlw	0
  6243  00364C  6E2D               	movwf	___fladd@b,c
  6244  00364E  0E00               	movlw	0
  6245  003650  6E2E               	movwf	___fladd@b+1,c
  6246  003652  0E00               	movlw	0
  6247  003654  6E2F               	movwf	___fladd@b+2,c
  6248  003656  0E00               	movlw	0
  6249  003658  6E30               	movwf	___fladd@b+3,c
  6250  00365A  503B               	movf	___fladd@bexp,w,c
  6251  00365C  A4D8               	btfss	status,2,c
  6252  00365E  D002               	goto	l5581
  6253  003660  0E00               	movlw	0
  6254  003662  6E39               	movwf	___fladd@signs,c
  6255  003664                     l5581:
  6256  003664  A03B               	btfss	___fladd@bexp,0,c
  6257  003666  D002               	goto	l5585
  6258  003668  8E2F               	bsf	___fladd@b+2,7,c
  6259  00366A  D001               	goto	l5587
  6260  00366C                     l5585:
  6261  00366C  9E2F               	bcf	___fladd@b+2,7,c
  6262  00366E                     l5587:
  6263  00366E  90D8               	bcf	status,0,c
  6264  003670  303B               	rrcf	___fladd@bexp,w,c
  6265  003672  6E30               	movwf	___fladd@b+3,c
  6266  003674  BE39               	btfsc	___fladd@signs,7,c
  6267  003676  8E30               	bsf	___fladd@b+3,7,c
  6268  003678  0060  F0B4  F02D   	movff	___fladd@b,?___fladd
  6269  00367E  0060  F0B8  F02E   	movff	___fladd@b+1,?___fladd+1
  6270  003684  0060  F0BC  F02F   	movff	___fladd@b+2,?___fladd+2
  6271  00368A  0060  F0C0  F030   	movff	___fladd@b+3,?___fladd+3
  6272  003690  0012               	return		;funcret
  6273  003692                     __end_of___fladd:
  6274                           	opt callstack 0
  6275                           
  6276 ;; *************** function ___flneg *****************
  6277 ;; Defined at:
  6278 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  f1              4    5[COMRAM] unsigned char 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  4    5[COMRAM] unsigned char 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6295 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6296 ;;Total ram usage:        4 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    2
  6299 ;; This function calls:
  6300 ;;		Nothing
  6301 ;; This function is called by:
  6302 ;;		_efgtoa
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text23
  6307  00513E                     __ptext23:
  6308                           	opt callstack 0
  6309  00513E                     ___flneg:
  6310                           	opt callstack 23
  6311                           
  6312                           ;incstack = 0
  6313  00513E  5006               	movf	___flneg@f1,w,c
  6314  005140  1007               	iorwf	___flneg@f1+1,w,c
  6315  005142  1008               	iorwf	___flneg@f1+2,w,c
  6316  005144  1009               	iorwf	___flneg@f1+3,w,c
  6317  005146  B4D8               	btfsc	status,2,c
  6318  005148  D008               	goto	l6079
  6319  00514A  0E00               	movlw	0
  6320  00514C  1A06               	xorwf	___flneg@f1,f,c
  6321  00514E  0E00               	movlw	0
  6322  005150  1A07               	xorwf	___flneg@f1+1,f,c
  6323  005152  0E00               	movlw	0
  6324  005154  1A08               	xorwf	___flneg@f1+2,f,c
  6325  005156  0E80               	movlw	128
  6326  005158  1A09               	xorwf	___flneg@f1+3,f,c
  6327  00515A                     l6079:
  6328  00515A  0060  F018  F006   	movff	___flneg@f1,?___flneg
  6329  005160  0060  F01C  F007   	movff	___flneg@f1+1,?___flneg+1
  6330  005166  0060  F020  F008   	movff	___flneg@f1+2,?___flneg+2
  6331  00516C  0060  F024  F009   	movff	___flneg@f1+3,?___flneg+3
  6332  005172  0012               	return		;funcret
  6333  005174                     __end_of___flneg:
  6334                           	opt callstack 0
  6335                           
  6336 ;; *************** function ___flmul *****************
  6337 ;; Defined at:
  6338 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;  b               4   19[COMRAM] unsigned char 
  6341 ;;  a               4   23[COMRAM] unsigned char 
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;  prod            4   38[COMRAM] struct .
  6344 ;;  grs             4   33[COMRAM] unsigned long 
  6345 ;;  temp            2   42[COMRAM] struct .
  6346 ;;  bexp            1   37[COMRAM] unsigned char 
  6347 ;;  aexp            1   32[COMRAM] unsigned char 
  6348 ;;  sign            1   31[COMRAM] unsigned char 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  4   19[COMRAM] unsigned char 
  6351 ;; Registers used:
  6352 ;;		wreg, status,2, status,0, prodl, prodh
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6358 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6359 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6361 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6362 ;;Total ram usage:       25 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    2
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;;		_UART_handler
  6370 ;;		_stof
  6371 ;;		_efgtoa
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text24
  6376  002C02                     __ptext24:
  6377                           	opt callstack 0
  6378  002C02                     ___flmul:
  6379                           	opt callstack 28
  6380                           
  6381                           ;incstack = 0
  6382  002C02  5017               	movf	___flmul@b+3,w,c
  6383  002C04  0B80               	andlw	128
  6384  002C06  6E20               	movwf	___flmul@sign,c
  6385  002C08  5017               	movf	___flmul@b+3,w,c
  6386  002C0A  2417               	addwf	___flmul@b+3,w,c
  6387  002C0C  6E26               	movwf	___flmul@bexp,c
  6388  002C0E  BE16               	btfsc	___flmul@b+2,7,c
  6389  002C10  8026               	bsf	___flmul@bexp,0,c
  6390  002C12  5026               	movf	___flmul@bexp,w,c
  6391  002C14  B4D8               	btfsc	status,2,c
  6392  002C16  D00D               	goto	l5835
  6393  002C18  2826               	incf	___flmul@bexp,w,c
  6394  002C1A  A4D8               	btfss	status,2,c
  6395  002C1C  D008               	goto	l5833
  6396  002C1E  0E00               	movlw	0
  6397  002C20  6E14               	movwf	___flmul@b,c
  6398  002C22  0E00               	movlw	0
  6399  002C24  6E15               	movwf	___flmul@b+1,c
  6400  002C26  0E00               	movlw	0
  6401  002C28  6E16               	movwf	___flmul@b+2,c
  6402  002C2A  0E00               	movlw	0
  6403  002C2C  6E17               	movwf	___flmul@b+3,c
  6404  002C2E                     l5833:
  6405  002C2E  8E16               	bsf	___flmul@b+2,7,c
  6406  002C30  D008               	goto	l5837
  6407  002C32                     l5835:
  6408  002C32  0E00               	movlw	0
  6409  002C34  6E14               	movwf	___flmul@b,c
  6410  002C36  0E00               	movlw	0
  6411  002C38  6E15               	movwf	___flmul@b+1,c
  6412  002C3A  0E00               	movlw	0
  6413  002C3C  6E16               	movwf	___flmul@b+2,c
  6414  002C3E  0E00               	movlw	0
  6415  002C40  6E17               	movwf	___flmul@b+3,c
  6416  002C42                     l5837:
  6417  002C42  501B               	movf	___flmul@a+3,w,c
  6418  002C44  0B80               	andlw	128
  6419  002C46  1A20               	xorwf	___flmul@sign,f,c
  6420  002C48  501B               	movf	___flmul@a+3,w,c
  6421  002C4A  241B               	addwf	___flmul@a+3,w,c
  6422  002C4C  6E21               	movwf	___flmul@aexp,c
  6423  002C4E  BE1A               	btfsc	___flmul@a+2,7,c
  6424  002C50  8021               	bsf	___flmul@aexp,0,c
  6425  002C52  5021               	movf	___flmul@aexp,w,c
  6426  002C54  B4D8               	btfsc	status,2,c
  6427  002C56  D00D               	goto	l5853
  6428  002C58  2821               	incf	___flmul@aexp,w,c
  6429  002C5A  A4D8               	btfss	status,2,c
  6430  002C5C  D008               	goto	l5851
  6431  002C5E  0E00               	movlw	0
  6432  002C60  6E18               	movwf	___flmul@a,c
  6433  002C62  0E00               	movlw	0
  6434  002C64  6E19               	movwf	___flmul@a+1,c
  6435  002C66  0E00               	movlw	0
  6436  002C68  6E1A               	movwf	___flmul@a+2,c
  6437  002C6A  0E00               	movlw	0
  6438  002C6C  6E1B               	movwf	___flmul@a+3,c
  6439  002C6E                     l5851:
  6440  002C6E  8E1A               	bsf	___flmul@a+2,7,c
  6441  002C70  D008               	goto	l1298
  6442  002C72                     l5853:
  6443  002C72  0E00               	movlw	0
  6444  002C74  6E18               	movwf	___flmul@a,c
  6445  002C76  0E00               	movlw	0
  6446  002C78  6E19               	movwf	___flmul@a+1,c
  6447  002C7A  0E00               	movlw	0
  6448  002C7C  6E1A               	movwf	___flmul@a+2,c
  6449  002C7E  0E00               	movlw	0
  6450  002C80  6E1B               	movwf	___flmul@a+3,c
  6451  002C82                     l1298:
  6452  002C82  5021               	movf	___flmul@aexp,w,c
  6453  002C84  B4D8               	btfsc	status,2,c
  6454  002C86  D003               	goto	u7880
  6455  002C88  5026               	movf	___flmul@bexp,w,c
  6456  002C8A  A4D8               	btfss	status,2,c
  6457  002C8C  D009               	goto	l5861
  6458  002C8E                     u7880:
  6459  002C8E  0E00               	movlw	0
  6460  002C90  6E14               	movwf	?___flmul,c
  6461  002C92  0E00               	movlw	0
  6462  002C94  6E15               	movwf	?___flmul+1,c
  6463  002C96  0E00               	movlw	0
  6464  002C98  6E16               	movwf	?___flmul+2,c
  6465  002C9A  0E00               	movlw	0
  6466  002C9C  6E17               	movwf	?___flmul+3,c
  6467  002C9E  0012               	return	
  6468  002CA0                     l5861:
  6469  002CA0  501A               	movf	___flmul@a+2,w,c
  6470  002CA2  0214               	mulwf	___flmul@b,c
  6471  002CA4  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6472  002CAA  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6473  002CB0  502B               	movf	___flmul@temp,w,c
  6474  002CB2  6E22               	movwf	___flmul@grs,c
  6475  002CB4  6A23               	clrf	___flmul@grs+1,c
  6476  002CB6  6A24               	clrf	___flmul@grs+2,c
  6477  002CB8  6A25               	clrf	___flmul@grs+3,c
  6478  002CBA  502C               	movf	___flmul@temp+1,w,c
  6479  002CBC  6E27               	movwf	___flmul@prod,c
  6480  002CBE  6A28               	clrf	___flmul@prod+1,c
  6481  002CC0  6A29               	clrf	___flmul@prod+2,c
  6482  002CC2  6A2A               	clrf	___flmul@prod+3,c
  6483  002CC4  5019               	movf	___flmul@a+1,w,c
  6484  002CC6  0215               	mulwf	___flmul@b+1,c
  6485  002CC8  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6486  002CCE  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6487  002CD4  502B               	movf	___flmul@temp,w,c
  6488  002CD6  2622               	addwf	___flmul@grs,f,c
  6489  002CD8  0E00               	movlw	0
  6490  002CDA  2223               	addwfc	___flmul@grs+1,f,c
  6491  002CDC  2224               	addwfc	___flmul@grs+2,f,c
  6492  002CDE  2225               	addwfc	___flmul@grs+3,f,c
  6493  002CE0  502C               	movf	___flmul@temp+1,w,c
  6494  002CE2  2627               	addwf	___flmul@prod,f,c
  6495  002CE4  0E00               	movlw	0
  6496  002CE6  2228               	addwfc	___flmul@prod+1,f,c
  6497  002CE8  2229               	addwfc	___flmul@prod+2,f,c
  6498  002CEA  222A               	addwfc	___flmul@prod+3,f,c
  6499  002CEC  5018               	movf	___flmul@a,w,c
  6500  002CEE  0216               	mulwf	___flmul@b+2,c
  6501  002CF0  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6502  002CF6  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6503  002CFC  502B               	movf	___flmul@temp,w,c
  6504  002CFE  2622               	addwf	___flmul@grs,f,c
  6505  002D00  0E00               	movlw	0
  6506  002D02  2223               	addwfc	___flmul@grs+1,f,c
  6507  002D04  2224               	addwfc	___flmul@grs+2,f,c
  6508  002D06  2225               	addwfc	___flmul@grs+3,f,c
  6509  002D08  502C               	movf	___flmul@temp+1,w,c
  6510  002D0A  2627               	addwf	___flmul@prod,f,c
  6511  002D0C  0E00               	movlw	0
  6512  002D0E  2228               	addwfc	___flmul@prod+1,f,c
  6513  002D10  2229               	addwfc	___flmul@prod+2,f,c
  6514  002D12  222A               	addwfc	___flmul@prod+3,f,c
  6515  002D14  0060  F090  F025   	movff	___flmul@grs+2,___flmul@grs+3
  6516  002D1A  0060  F08C  F024   	movff	___flmul@grs+1,___flmul@grs+2
  6517  002D20  0060  F088  F023   	movff	___flmul@grs,___flmul@grs+1
  6518  002D26  6A22               	clrf	___flmul@grs,c
  6519  002D28  5018               	movf	___flmul@a,w,c
  6520  002D2A  0215               	mulwf	___flmul@b+1,c
  6521  002D2C  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6522  002D32  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6523  002D38  502B               	movf	___flmul@temp,w,c
  6524  002D3A  2622               	addwf	___flmul@grs,f,c
  6525  002D3C  502C               	movf	___flmul@temp+1,w,c
  6526  002D3E  2223               	addwfc	___flmul@grs+1,f,c
  6527  002D40  0E00               	movlw	0
  6528  002D42  2224               	addwfc	___flmul@grs+2,f,c
  6529  002D44  0E00               	movlw	0
  6530  002D46  2225               	addwfc	___flmul@grs+3,f,c
  6531  002D48  5019               	movf	___flmul@a+1,w,c
  6532  002D4A  0214               	mulwf	___flmul@b,c
  6533  002D4C  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6534  002D52  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6535  002D58  502B               	movf	___flmul@temp,w,c
  6536  002D5A  2622               	addwf	___flmul@grs,f,c
  6537  002D5C  502C               	movf	___flmul@temp+1,w,c
  6538  002D5E  2223               	addwfc	___flmul@grs+1,f,c
  6539  002D60  0E00               	movlw	0
  6540  002D62  2224               	addwfc	___flmul@grs+2,f,c
  6541  002D64  0E00               	movlw	0
  6542  002D66  2225               	addwfc	___flmul@grs+3,f,c
  6543  002D68  0060  F090  F025   	movff	___flmul@grs+2,___flmul@grs+3
  6544  002D6E  0060  F08C  F024   	movff	___flmul@grs+1,___flmul@grs+2
  6545  002D74  0060  F088  F023   	movff	___flmul@grs,___flmul@grs+1
  6546  002D7A  6A22               	clrf	___flmul@grs,c
  6547  002D7C  5018               	movf	___flmul@a,w,c
  6548  002D7E  0214               	mulwf	___flmul@b,c
  6549  002D80  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6550  002D86  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6551  002D8C  502B               	movf	___flmul@temp,w,c
  6552  002D8E  2622               	addwf	___flmul@grs,f,c
  6553  002D90  502C               	movf	___flmul@temp+1,w,c
  6554  002D92  2223               	addwfc	___flmul@grs+1,f,c
  6555  002D94  0E00               	movlw	0
  6556  002D96  2224               	addwfc	___flmul@grs+2,f,c
  6557  002D98  0E00               	movlw	0
  6558  002D9A  2225               	addwfc	___flmul@grs+3,f,c
  6559  002D9C  501A               	movf	___flmul@a+2,w,c
  6560  002D9E  0215               	mulwf	___flmul@b+1,c
  6561  002DA0  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6562  002DA6  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6563  002DAC  502B               	movf	___flmul@temp,w,c
  6564  002DAE  2627               	addwf	___flmul@prod,f,c
  6565  002DB0  502C               	movf	___flmul@temp+1,w,c
  6566  002DB2  2228               	addwfc	___flmul@prod+1,f,c
  6567  002DB4  0E00               	movlw	0
  6568  002DB6  2229               	addwfc	___flmul@prod+2,f,c
  6569  002DB8  0E00               	movlw	0
  6570  002DBA  222A               	addwfc	___flmul@prod+3,f,c
  6571  002DBC  5019               	movf	___flmul@a+1,w,c
  6572  002DBE  0216               	mulwf	___flmul@b+2,c
  6573  002DC0  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6574  002DC6  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6575  002DCC  502B               	movf	___flmul@temp,w,c
  6576  002DCE  2627               	addwf	___flmul@prod,f,c
  6577  002DD0  502C               	movf	___flmul@temp+1,w,c
  6578  002DD2  2228               	addwfc	___flmul@prod+1,f,c
  6579  002DD4  0E00               	movlw	0
  6580  002DD6  2229               	addwfc	___flmul@prod+2,f,c
  6581  002DD8  0E00               	movlw	0
  6582  002DDA  222A               	addwfc	___flmul@prod+3,f,c
  6583  002DDC  501A               	movf	___flmul@a+2,w,c
  6584  002DDE  0216               	mulwf	___flmul@b+2,c
  6585  002DE0  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6586  002DE6  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6587  002DEC  502B               	movf	___flmul@temp,w,c
  6588  002DEE  6E1C               	movwf	??___flmul& (0+255),c
  6589  002DF0  502C               	movf	___flmul@temp+1,w,c
  6590  002DF2  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6591  002DF4  6A1E               	clrf	(??___flmul+2)& (0+255),c
  6592  002DF6  6A1F               	clrf	(??___flmul+3)& (0+255),c
  6593  002DF8  0060  F078  F01F   	movff	??___flmul+2,??___flmul+3
  6594  002DFE  0060  F074  F01E   	movff	??___flmul+1,??___flmul+2
  6595  002E04  0060  F070  F01D   	movff	??___flmul,??___flmul+1
  6596  002E0A  6A1C               	clrf	??___flmul,c
  6597  002E0C  501C               	movf	??___flmul,w,c
  6598  002E0E  2627               	addwf	___flmul@prod,f,c
  6599  002E10  501D               	movf	??___flmul+1,w,c
  6600  002E12  2228               	addwfc	___flmul@prod+1,f,c
  6601  002E14  501E               	movf	??___flmul+2,w,c
  6602  002E16  2229               	addwfc	___flmul@prod+2,f,c
  6603  002E18  501F               	movf	??___flmul+3,w,c
  6604  002E1A  222A               	addwfc	___flmul@prod+3,f,c
  6605  002E1C  0060  F088  F01C   	movff	___flmul@grs,??___flmul
  6606  002E22  0060  F08C  F01D   	movff	___flmul@grs+1,??___flmul+1
  6607  002E28  0060  F090  F01E   	movff	___flmul@grs+2,??___flmul+2
  6608  002E2E  0060  F094  F01F   	movff	___flmul@grs+3,??___flmul+3
  6609  002E34  0E19               	movlw	25
  6610  002E36  D005               	goto	u7890
  6611  002E38                     u7895:
  6612  002E38  90D8               	bcf	status,0,c
  6613  002E3A  321F               	rrcf	??___flmul+3,f,c
  6614  002E3C  321E               	rrcf	??___flmul+2,f,c
  6615  002E3E  321D               	rrcf	??___flmul+1,f,c
  6616  002E40  321C               	rrcf	??___flmul,f,c
  6617  002E42                     u7890:
  6618  002E42  2EE8               	decfsz	wreg,f,c
  6619  002E44  D7F9               	goto	u7895
  6620  002E46  501C               	movf	??___flmul,w,c
  6621  002E48  2627               	addwf	___flmul@prod,f,c
  6622  002E4A  501D               	movf	??___flmul+1,w,c
  6623  002E4C  2228               	addwfc	___flmul@prod+1,f,c
  6624  002E4E  501E               	movf	??___flmul+2,w,c
  6625  002E50  2229               	addwfc	___flmul@prod+2,f,c
  6626  002E52  501F               	movf	??___flmul+3,w,c
  6627  002E54  222A               	addwfc	___flmul@prod+3,f,c
  6628  002E56  0060  F090  F025   	movff	___flmul@grs+2,___flmul@grs+3
  6629  002E5C  0060  F08C  F024   	movff	___flmul@grs+1,___flmul@grs+2
  6630  002E62  0060  F088  F023   	movff	___flmul@grs,___flmul@grs+1
  6631  002E68  6A22               	clrf	___flmul@grs,c
  6632  002E6A  5021               	movf	___flmul@aexp,w,c
  6633  002E6C  0060  F098  F01C   	movff	___flmul@bexp,??___flmul
  6634  002E72  6A1D               	clrf	(??___flmul+1)& (0+255),c
  6635  002E74  261C               	addwf	??___flmul,f,c
  6636  002E76  0E00               	movlw	0
  6637  002E78  221D               	addwfc	??___flmul+1,f,c
  6638  002E7A  0E82               	movlw	130
  6639  002E7C  241C               	addwf	??___flmul,w,c
  6640  002E7E  6E2B               	movwf	___flmul@temp,c
  6641  002E80  0EFF               	movlw	255
  6642  002E82  201D               	addwfc	??___flmul+1,w,c
  6643  002E84  6E2C               	movwf	___flmul@temp+1,c
  6644  002E86  D00F               	goto	l5909
  6645  002E88                     l5903:
  6646  002E88  90D8               	bcf	status,0,c
  6647  002E8A  3627               	rlcf	___flmul@prod,f,c
  6648  002E8C  3628               	rlcf	___flmul@prod+1,f,c
  6649  002E8E  3629               	rlcf	___flmul@prod+2,f,c
  6650  002E90  362A               	rlcf	___flmul@prod+3,f,c
  6651  002E92  BE25               	btfsc	___flmul@grs+3,7,c
  6652  002E94  8027               	bsf	___flmul@prod,0,c
  6653  002E96  90D8               	bcf	status,0,c
  6654  002E98  3622               	rlcf	___flmul@grs,f,c
  6655  002E9A  3623               	rlcf	___flmul@grs+1,f,c
  6656  002E9C  3624               	rlcf	___flmul@grs+2,f,c
  6657  002E9E  3625               	rlcf	___flmul@grs+3,f,c
  6658  002EA0  062B               	decf	___flmul@temp,f,c
  6659  002EA2  A0D8               	btfss	status,0,c
  6660  002EA4  062C               	decf	___flmul@temp+1,f,c
  6661  002EA6                     l5909:
  6662  002EA6  AE29               	btfss	___flmul@prod+2,7,c
  6663  002EA8  D7EF               	goto	l5903
  6664  002EAA  0E00               	movlw	0
  6665  002EAC  6E21               	movwf	___flmul@aexp,c
  6666  002EAE  AE25               	btfss	___flmul@grs+3,7,c
  6667  002EB0  D017               	goto	l1307
  6668  002EB2  0EFF               	movlw	255
  6669  002EB4  1422               	andwf	___flmul@grs,w,c
  6670  002EB6  6E1C               	movwf	??___flmul& (0+255),c
  6671  002EB8  0EFF               	movlw	255
  6672  002EBA  1423               	andwf	___flmul@grs+1,w,c
  6673  002EBC  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6674  002EBE  0EFF               	movlw	255
  6675  002EC0  1424               	andwf	___flmul@grs+2,w,c
  6676  002EC2  6E1E               	movwf	(??___flmul+2)& (0+255),c
  6677  002EC4  0E7F               	movlw	127
  6678  002EC6  1425               	andwf	___flmul@grs+3,w,c
  6679  002EC8  6E1F               	movwf	(??___flmul+3)& (0+255),c
  6680  002ECA  501C               	movf	??___flmul,w,c
  6681  002ECC  101D               	iorwf	??___flmul+1,w,c
  6682  002ECE  101E               	iorwf	??___flmul+2,w,c
  6683  002ED0  101F               	iorwf	??___flmul+3,w,c
  6684  002ED2  B4D8               	btfsc	status,2,c
  6685  002ED4  D003               	goto	l1308
  6686  002ED6                     u7930:
  6687  002ED6  0E01               	movlw	1
  6688  002ED8  6E21               	movwf	___flmul@aexp,c
  6689  002EDA  D002               	goto	l1307
  6690  002EDC                     l1308:
  6691  002EDC  B027               	btfsc	___flmul@prod,0,c
  6692  002EDE  D7FB               	goto	u7930
  6693  002EE0                     l1307:
  6694  002EE0  5021               	movf	___flmul@aexp,w,c
  6695  002EE2  B4D8               	btfsc	status,2,c
  6696  002EE4  D027               	goto	l5929
  6697  002EE6  0E01               	movlw	1
  6698  002EE8  2627               	addwf	___flmul@prod,f,c
  6699  002EEA  0E00               	movlw	0
  6700  002EEC  2228               	addwfc	___flmul@prod+1,f,c
  6701  002EEE  2229               	addwfc	___flmul@prod+2,f,c
  6702  002EF0  222A               	addwfc	___flmul@prod+3,f,c
  6703  002EF2  A02A               	btfss	___flmul@prod+3,0,c
  6704  002EF4  D01F               	goto	l5929
  6705  002EF6  0060  F09C  F01C   	movff	___flmul@prod,??___flmul
  6706  002EFC  0060  F0A0  F01D   	movff	___flmul@prod+1,??___flmul+1
  6707  002F02  0060  F0A4  F01E   	movff	___flmul@prod+2,??___flmul+2
  6708  002F08  0060  F0A8  F01F   	movff	___flmul@prod+3,??___flmul+3
  6709  002F0E  341F               	rlcf	??___flmul+3,w,c
  6710  002F10  321F               	rrcf	??___flmul+3,f,c
  6711  002F12  321E               	rrcf	??___flmul+2,f,c
  6712  002F14  321D               	rrcf	??___flmul+1,f,c
  6713  002F16  321C               	rrcf	??___flmul,f,c
  6714  002F18  0060  F070  F027   	movff	??___flmul,___flmul@prod
  6715  002F1E  0060  F074  F028   	movff	??___flmul+1,___flmul@prod+1
  6716  002F24  0060  F078  F029   	movff	??___flmul+2,___flmul@prod+2
  6717  002F2A  0060  F07C  F02A   	movff	??___flmul+3,___flmul@prod+3
  6718  002F30  4A2B               	infsnz	___flmul@temp,f,c
  6719  002F32  2A2C               	incf	___flmul@temp+1,f,c
  6720  002F34                     l5929:
  6721  002F34  BE2C               	btfsc	___flmul@temp+1,7,c
  6722  002F36  D00D               	goto	l5933
  6723  002F38  502C               	movf	___flmul@temp+1,w,c
  6724  002F3A  E103               	bnz	u7970
  6725  002F3C  282B               	incf	___flmul@temp,w,c
  6726  002F3E  A0D8               	btfss	status,0,c
  6727  002F40  D008               	goto	l5933
  6728  002F42                     u7970:
  6729  002F42  0E00               	movlw	0
  6730  002F44  6E27               	movwf	___flmul@prod,c
  6731  002F46  0E00               	movlw	0
  6732  002F48  6E28               	movwf	___flmul@prod+1,c
  6733  002F4A  0E80               	movlw	128
  6734  002F4C  6E29               	movwf	___flmul@prod+2,c
  6735  002F4E  0E7F               	movlw	127
  6736  002F50  D021               	goto	L10
  6737  002F52                     l5933:
  6738  002F52  BE2C               	btfsc	___flmul@temp+1,7,c
  6739  002F54  D005               	goto	u7980
  6740  002F56  502C               	movf	___flmul@temp+1,w,c
  6741  002F58  E10E               	bnz	l1315
  6742  002F5A  042B               	decf	___flmul@temp,w,c
  6743  002F5C  B0D8               	btfsc	status,0,c
  6744  002F5E  D00B               	goto	l1315
  6745  002F60                     u7980:
  6746  002F60  0E00               	movlw	0
  6747  002F62  6E27               	movwf	___flmul@prod,c
  6748  002F64  0E00               	movlw	0
  6749  002F66  6E28               	movwf	___flmul@prod+1,c
  6750  002F68  0E00               	movlw	0
  6751  002F6A  6E29               	movwf	___flmul@prod+2,c
  6752  002F6C  0E00               	movlw	0
  6753  002F6E  6E2A               	movwf	___flmul@prod+3,c
  6754  002F70  0E00               	movlw	0
  6755  002F72  6E20               	movwf	___flmul@sign,c
  6756  002F74  D010               	goto	l5945
  6757  002F76                     l1315:
  6758  002F76  0060  F0AC  F026   	movff	___flmul@temp,___flmul@bexp
  6759  002F7C  0EFF               	movlw	255
  6760  002F7E  1627               	andwf	___flmul@prod,f,c
  6761  002F80  0EFF               	movlw	255
  6762  002F82  1628               	andwf	___flmul@prod+1,f,c
  6763  002F84  0E7F               	movlw	127
  6764  002F86  1629               	andwf	___flmul@prod+2,f,c
  6765  002F88  0E00               	movlw	0
  6766  002F8A  162A               	andwf	___flmul@prod+3,f,c
  6767  002F8C  B026               	btfsc	___flmul@bexp,0,c
  6768  002F8E  8E29               	bsf	___flmul@prod+2,7,c
  6769  002F90  90D8               	bcf	status,0,c
  6770  002F92  3026               	rrcf	___flmul@bexp,w,c
  6771  002F94                     L10:
  6772  002F94  6E2A               	movwf	___flmul@prod+3,c
  6773  002F96                     l5945:
  6774  002F96  5020               	movf	___flmul@sign,w,c
  6775  002F98  122A               	iorwf	___flmul@prod+3,f,c
  6776  002F9A  0060  F09C  F014   	movff	___flmul@prod,?___flmul
  6777  002FA0  0060  F0A0  F015   	movff	___flmul@prod+1,?___flmul+1
  6778  002FA6  0060  F0A4  F016   	movff	___flmul@prod+2,?___flmul+2
  6779  002FAC  0060  F0A8  F017   	movff	___flmul@prod+3,?___flmul+3
  6780  002FB2  0012               	return		;funcret
  6781  002FB4                     __end_of___flmul:
  6782                           	opt callstack 0
  6783                           
  6784 ;; *************** function ___flge *****************
  6785 ;; Defined at:
  6786 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  ff1             4   44[COMRAM] unsigned char 
  6789 ;;  ff2             4   48[COMRAM] unsigned char 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;		None               void
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6801 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6803 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;Total ram usage:       12 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; Hardware stack levels required when called:    2
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_main
  6812 ;;		_efgtoa
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text25
  6817  00466C                     __ptext25:
  6818                           	opt callstack 0
  6819  00466C                     ___flge:
  6820                           	opt callstack 28
  6821                           
  6822                           ;incstack = 0
  6823  00466C  0E00               	movlw	0
  6824  00466E  142D               	andwf	___flge@ff1,w,c
  6825  004670  6E35               	movwf	??___flge& (0+255),c
  6826  004672  0E00               	movlw	0
  6827  004674  142E               	andwf	___flge@ff1+1,w,c
  6828  004676  6E36               	movwf	(??___flge+1)& (0+255),c
  6829  004678  0E80               	movlw	128
  6830  00467A  142F               	andwf	___flge@ff1+2,w,c
  6831  00467C  6E37               	movwf	(??___flge+2)& (0+255),c
  6832  00467E  0E7F               	movlw	127
  6833  004680  1430               	andwf	___flge@ff1+3,w,c
  6834  004682  6E38               	movwf	(??___flge+3)& (0+255),c
  6835  004684  5035               	movf	??___flge,w,c
  6836  004686  1036               	iorwf	??___flge+1,w,c
  6837  004688  1037               	iorwf	??___flge+2,w,c
  6838  00468A  1038               	iorwf	??___flge+3,w,c
  6839  00468C  A4D8               	btfss	status,2,c
  6840  00468E  D008               	goto	l6057
  6841  004690  0E00               	movlw	0
  6842  004692  6E2D               	movwf	___flge@ff1,c
  6843  004694  0E00               	movlw	0
  6844  004696  6E2E               	movwf	___flge@ff1+1,c
  6845  004698  0E00               	movlw	0
  6846  00469A  6E2F               	movwf	___flge@ff1+2,c
  6847  00469C  0E00               	movlw	0
  6848  00469E  6E30               	movwf	___flge@ff1+3,c
  6849  0046A0                     l6057:
  6850  0046A0  0E00               	movlw	0
  6851  0046A2  1431               	andwf	___flge@ff2,w,c
  6852  0046A4  6E35               	movwf	??___flge& (0+255),c
  6853  0046A6  0E00               	movlw	0
  6854  0046A8  1432               	andwf	___flge@ff2+1,w,c
  6855  0046AA  6E36               	movwf	(??___flge+1)& (0+255),c
  6856  0046AC  0E80               	movlw	128
  6857  0046AE  1433               	andwf	___flge@ff2+2,w,c
  6858  0046B0  6E37               	movwf	(??___flge+2)& (0+255),c
  6859  0046B2  0E7F               	movlw	127
  6860  0046B4  1434               	andwf	___flge@ff2+3,w,c
  6861  0046B6  6E38               	movwf	(??___flge+3)& (0+255),c
  6862  0046B8  5035               	movf	??___flge,w,c
  6863  0046BA  1036               	iorwf	??___flge+1,w,c
  6864  0046BC  1037               	iorwf	??___flge+2,w,c
  6865  0046BE  1038               	iorwf	??___flge+3,w,c
  6866  0046C0  A4D8               	btfss	status,2,c
  6867  0046C2  D008               	goto	l6061
  6868  0046C4  0E00               	movlw	0
  6869  0046C6  6E31               	movwf	___flge@ff2,c
  6870  0046C8  0E00               	movlw	0
  6871  0046CA  6E32               	movwf	___flge@ff2+1,c
  6872  0046CC  0E00               	movlw	0
  6873  0046CE  6E33               	movwf	___flge@ff2+2,c
  6874  0046D0  0E00               	movlw	0
  6875  0046D2  6E34               	movwf	___flge@ff2+3,c
  6876  0046D4                     l6061:
  6877  0046D4  AE30               	btfss	___flge@ff1+3,7,c
  6878  0046D6  D009               	goto	l6065
  6879  0046D8  6C2D               	negf	___flge@ff1,c
  6880  0046DA  1E2E               	comf	___flge@ff1+1,f,c
  6881  0046DC  B0D8               	btfsc	status,0,c
  6882  0046DE  2A2E               	incf	___flge@ff1+1,f,c
  6883  0046E0  1E2F               	comf	___flge@ff1+2,f,c
  6884  0046E2  B0D8               	btfsc	status,0,c
  6885  0046E4  2A2F               	incf	___flge@ff1+2,f,c
  6886  0046E6  0E80               	movlw	128
  6887  0046E8  5630               	subfwb	___flge@ff1+3,f,c
  6888  0046EA                     l6065:
  6889  0046EA  AE34               	btfss	___flge@ff2+3,7,c
  6890  0046EC  D009               	goto	l949
  6891  0046EE  6C31               	negf	___flge@ff2,c
  6892  0046F0  1E32               	comf	___flge@ff2+1,f,c
  6893  0046F2  B0D8               	btfsc	status,0,c
  6894  0046F4  2A32               	incf	___flge@ff2+1,f,c
  6895  0046F6  1E33               	comf	___flge@ff2+2,f,c
  6896  0046F8  B0D8               	btfsc	status,0,c
  6897  0046FA  2A33               	incf	___flge@ff2+2,f,c
  6898  0046FC  0E80               	movlw	128
  6899  0046FE  5634               	subfwb	___flge@ff2+3,f,c
  6900  004700                     l949:
  6901  004700  0E00               	movlw	0
  6902  004702  1A2D               	xorwf	___flge@ff1,f,c
  6903  004704  0E00               	movlw	0
  6904  004706  1A2E               	xorwf	___flge@ff1+1,f,c
  6905  004708  0E00               	movlw	0
  6906  00470A  1A2F               	xorwf	___flge@ff1+2,f,c
  6907  00470C  0E80               	movlw	128
  6908  00470E  1A30               	xorwf	___flge@ff1+3,f,c
  6909  004710  0E00               	movlw	0
  6910  004712  1A31               	xorwf	___flge@ff2,f,c
  6911  004714  0E00               	movlw	0
  6912  004716  1A32               	xorwf	___flge@ff2+1,f,c
  6913  004718  0E00               	movlw	0
  6914  00471A  1A33               	xorwf	___flge@ff2+2,f,c
  6915  00471C  0E80               	movlw	128
  6916  00471E  1A34               	xorwf	___flge@ff2+3,f,c
  6917  004720  5031               	movf	___flge@ff2,w,c
  6918  004722  5C2D               	subwf	___flge@ff1,w,c
  6919  004724  5032               	movf	___flge@ff2+1,w,c
  6920  004726  582E               	subwfb	___flge@ff1+1,w,c
  6921  004728  5033               	movf	___flge@ff2+2,w,c
  6922  00472A  582F               	subwfb	___flge@ff1+2,w,c
  6923  00472C  5034               	movf	___flge@ff2+3,w,c
  6924  00472E  5830               	subwfb	___flge@ff1+3,w,c
  6925  004730  B0D8               	btfsc	status,0,c
  6926  004732  D002               	goto	l6071
  6927  004734  90D8               	bcf	status,0,c
  6928  004736  0012               	return	
  6929  004738                     l6071:
  6930  004738  80D8               	bsf	status,0,c
  6931  00473A  0012               	return		;funcret
  6932  00473C                     __end_of___flge:
  6933                           	opt callstack 0
  6934                           
  6935 ;; *************** function ___fleq *****************
  6936 ;; Defined at:
  6937 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  ff1             4    5[COMRAM] unsigned char 
  6940 ;;  ff2             4    9[COMRAM] unsigned char 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;		None
  6943 ;; Return value:  Size  Location     Type
  6944 ;;		None               void
  6945 ;; Registers used:
  6946 ;;		wreg, status,2, status,0
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6952 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6954 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6955 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6956 ;;Total ram usage:       12 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:    2
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_efgtoa
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text26
  6967  004B72                     __ptext26:
  6968                           	opt callstack 0
  6969  004B72                     ___fleq:
  6970                           	opt callstack 23
  6971                           
  6972                           ;incstack = 0
  6973  004B72  0E00               	movlw	0
  6974  004B74  1406               	andwf	___fleq@ff1,w,c
  6975  004B76  6E0E               	movwf	??___fleq& (0+255),c
  6976  004B78  0E00               	movlw	0
  6977  004B7A  1407               	andwf	___fleq@ff1+1,w,c
  6978  004B7C  6E0F               	movwf	(??___fleq+1)& (0+255),c
  6979  004B7E  0E80               	movlw	128
  6980  004B80  1408               	andwf	___fleq@ff1+2,w,c
  6981  004B82  6E10               	movwf	(??___fleq+2)& (0+255),c
  6982  004B84  0E7F               	movlw	127
  6983  004B86  1409               	andwf	___fleq@ff1+3,w,c
  6984  004B88  6E11               	movwf	(??___fleq+3)& (0+255),c
  6985  004B8A  500E               	movf	??___fleq,w,c
  6986  004B8C  100F               	iorwf	??___fleq+1,w,c
  6987  004B8E  1010               	iorwf	??___fleq+2,w,c
  6988  004B90  1011               	iorwf	??___fleq+3,w,c
  6989  004B92  A4D8               	btfss	status,2,c
  6990  004B94  D008               	goto	l6041
  6991  004B96  0E00               	movlw	0
  6992  004B98  6E06               	movwf	___fleq@ff1,c
  6993  004B9A  0E00               	movlw	0
  6994  004B9C  6E07               	movwf	___fleq@ff1+1,c
  6995  004B9E  0E00               	movlw	0
  6996  004BA0  6E08               	movwf	___fleq@ff1+2,c
  6997  004BA2  0E00               	movlw	0
  6998  004BA4  6E09               	movwf	___fleq@ff1+3,c
  6999  004BA6                     l6041:
  7000  004BA6  0E00               	movlw	0
  7001  004BA8  140A               	andwf	___fleq@ff2,w,c
  7002  004BAA  6E0E               	movwf	??___fleq& (0+255),c
  7003  004BAC  0E00               	movlw	0
  7004  004BAE  140B               	andwf	___fleq@ff2+1,w,c
  7005  004BB0  6E0F               	movwf	(??___fleq+1)& (0+255),c
  7006  004BB2  0E80               	movlw	128
  7007  004BB4  140C               	andwf	___fleq@ff2+2,w,c
  7008  004BB6  6E10               	movwf	(??___fleq+2)& (0+255),c
  7009  004BB8  0E7F               	movlw	127
  7010  004BBA  140D               	andwf	___fleq@ff2+3,w,c
  7011  004BBC  6E11               	movwf	(??___fleq+3)& (0+255),c
  7012  004BBE  500E               	movf	??___fleq,w,c
  7013  004BC0  100F               	iorwf	??___fleq+1,w,c
  7014  004BC2  1010               	iorwf	??___fleq+2,w,c
  7015  004BC4  1011               	iorwf	??___fleq+3,w,c
  7016  004BC6  A4D8               	btfss	status,2,c
  7017  004BC8  D008               	goto	l6045
  7018  004BCA  0E00               	movlw	0
  7019  004BCC  6E0A               	movwf	___fleq@ff2,c
  7020  004BCE  0E00               	movlw	0
  7021  004BD0  6E0B               	movwf	___fleq@ff2+1,c
  7022  004BD2  0E00               	movlw	0
  7023  004BD4  6E0C               	movwf	___fleq@ff2+2,c
  7024  004BD6  0E00               	movlw	0
  7025  004BD8  6E0D               	movwf	___fleq@ff2+3,c
  7026  004BDA                     l6045:
  7027  004BDA  500A               	movf	___fleq@ff2,w,c
  7028  004BDC  1806               	xorwf	___fleq@ff1,w,c
  7029  004BDE  E10A               	bnz	u8140
  7030  004BE0  500B               	movf	___fleq@ff2+1,w,c
  7031  004BE2  1807               	xorwf	___fleq@ff1+1,w,c
  7032  004BE4  E107               	bnz	u8140
  7033  004BE6  500C               	movf	___fleq@ff2+2,w,c
  7034  004BE8  1808               	xorwf	___fleq@ff1+2,w,c
  7035  004BEA  E104               	bnz	u8140
  7036  004BEC  500D               	movf	___fleq@ff2+3,w,c
  7037  004BEE  1809               	xorwf	___fleq@ff1+3,w,c
  7038  004BF0  B4D8               	btfsc	status,2,c
  7039  004BF2  D002               	goto	l6049
  7040  004BF4                     u8140:
  7041  004BF4  90D8               	bcf	status,0,c
  7042  004BF6  0012               	return	
  7043  004BF8                     l6049:
  7044  004BF8  80D8               	bsf	status,0,c
  7045  004BFA  0012               	return		;funcret
  7046  004BFC                     __end_of___fleq:
  7047                           	opt callstack 0
  7048                           
  7049 ;; *************** function ___fldiv *****************
  7050 ;; Defined at:
  7051 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;  b               4    5[COMRAM] unsigned char 
  7054 ;;  a               4    9[COMRAM] unsigned char 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;  grs             4   24[COMRAM] unsigned long 
  7057 ;;  rem             4   17[COMRAM] unsigned long 
  7058 ;;  new_exp         2   22[COMRAM] short 
  7059 ;;  aexp            1   29[COMRAM] unsigned char 
  7060 ;;  bexp            1   28[COMRAM] unsigned char 
  7061 ;;  sign            1   21[COMRAM] unsigned char 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  4    5[COMRAM] unsigned char 
  7064 ;; Registers used:
  7065 ;;		wreg, status,2, status,0
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7071 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7072 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7073 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7074 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;Total ram usage:       25 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    2
  7078 ;; This function calls:
  7079 ;;		Nothing
  7080 ;; This function is called by:
  7081 ;;		_stof
  7082 ;;		_efgtoa
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text27
  7087  0039BC                     __ptext27:
  7088                           	opt callstack 0
  7089  0039BC                     ___fldiv:
  7090                           	opt callstack 26
  7091                           
  7092                           ;incstack = 0
  7093  0039BC  5009               	movf	___fldiv@b+3,w,c
  7094  0039BE  0B80               	andlw	128
  7095  0039C0  6E16               	movwf	___fldiv@sign,c
  7096  0039C2  5009               	movf	___fldiv@b+3,w,c
  7097  0039C4  2409               	addwf	___fldiv@b+3,w,c
  7098  0039C6  6E1D               	movwf	___fldiv@bexp,c
  7099  0039C8  BE08               	btfsc	___fldiv@b+2,7,c
  7100  0039CA  801D               	bsf	___fldiv@bexp,0,c
  7101  0039CC  501D               	movf	___fldiv@bexp,w,c
  7102  0039CE  B4D8               	btfsc	status,2,c
  7103  0039D0  D00D               	goto	l5699
  7104  0039D2  281D               	incf	___fldiv@bexp,w,c
  7105  0039D4  A4D8               	btfss	status,2,c
  7106  0039D6  D008               	goto	l5695
  7107  0039D8  0E00               	movlw	0
  7108  0039DA  6E06               	movwf	___fldiv@b,c
  7109  0039DC  0E00               	movlw	0
  7110  0039DE  6E07               	movwf	___fldiv@b+1,c
  7111  0039E0  0E00               	movlw	0
  7112  0039E2  6E08               	movwf	___fldiv@b+2,c
  7113  0039E4  0E00               	movlw	0
  7114  0039E6  6E09               	movwf	___fldiv@b+3,c
  7115  0039E8                     l5695:
  7116  0039E8  8E08               	bsf	___fldiv@b+2,7,c
  7117  0039EA  D006               	goto	L11
  7118  0039EC                     l5699:
  7119  0039EC  0E00               	movlw	0
  7120  0039EE  6E06               	movwf	___fldiv@b,c
  7121  0039F0  0E00               	movlw	0
  7122  0039F2  6E07               	movwf	___fldiv@b+1,c
  7123  0039F4  0E00               	movlw	0
  7124  0039F6  6E08               	movwf	___fldiv@b+2,c
  7125  0039F8                     L11:
  7126  0039F8  0E00               	movlw	0
  7127  0039FA  6E09               	movwf	___fldiv@b+3,c
  7128  0039FC  500D               	movf	___fldiv@a+3,w,c
  7129  0039FE  0B80               	andlw	128
  7130  003A00  1A16               	xorwf	___fldiv@sign,f,c
  7131  003A02  500D               	movf	___fldiv@a+3,w,c
  7132  003A04  240D               	addwf	___fldiv@a+3,w,c
  7133  003A06  6E1E               	movwf	___fldiv@aexp,c
  7134  003A08  BE0C               	btfsc	___fldiv@a+2,7,c
  7135  003A0A  801E               	bsf	___fldiv@aexp,0,c
  7136  003A0C  501E               	movf	___fldiv@aexp,w,c
  7137  003A0E  B4D8               	btfsc	status,2,c
  7138  003A10  D00D               	goto	l5719
  7139  003A12  281E               	incf	___fldiv@aexp,w,c
  7140  003A14  A4D8               	btfss	status,2,c
  7141  003A16  D008               	goto	l5715
  7142  003A18  0E00               	movlw	0
  7143  003A1A  6E0A               	movwf	___fldiv@a,c
  7144  003A1C  0E00               	movlw	0
  7145  003A1E  6E0B               	movwf	___fldiv@a+1,c
  7146  003A20  0E00               	movlw	0
  7147  003A22  6E0C               	movwf	___fldiv@a+2,c
  7148  003A24  0E00               	movlw	0
  7149  003A26  6E0D               	movwf	___fldiv@a+3,c
  7150  003A28                     l5715:
  7151  003A28  8E0C               	bsf	___fldiv@a+2,7,c
  7152  003A2A  D006               	goto	L12
  7153  003A2C                     l5719:
  7154  003A2C  0E00               	movlw	0
  7155  003A2E  6E0A               	movwf	___fldiv@a,c
  7156  003A30  0E00               	movlw	0
  7157  003A32  6E0B               	movwf	___fldiv@a+1,c
  7158  003A34  0E00               	movlw	0
  7159  003A36  6E0C               	movwf	___fldiv@a+2,c
  7160  003A38                     L12:
  7161  003A38  0E00               	movlw	0
  7162  003A3A  6E0D               	movwf	___fldiv@a+3,c
  7163  003A3C  500A               	movf	___fldiv@a,w,c
  7164  003A3E  100B               	iorwf	___fldiv@a+1,w,c
  7165  003A40  100C               	iorwf	___fldiv@a+2,w,c
  7166  003A42  100D               	iorwf	___fldiv@a+3,w,c
  7167  003A44  A4D8               	btfss	status,2,c
  7168  003A46  D01B               	goto	l5733
  7169  003A48  0E00               	movlw	0
  7170  003A4A  6E06               	movwf	___fldiv@b,c
  7171  003A4C  0E00               	movlw	0
  7172  003A4E  6E07               	movwf	___fldiv@b+1,c
  7173  003A50  0E00               	movlw	0
  7174  003A52  6E08               	movwf	___fldiv@b+2,c
  7175  003A54  0E00               	movlw	0
  7176  003A56  6E09               	movwf	___fldiv@b+3,c
  7177  003A58  0E80               	movlw	128
  7178  003A5A  1208               	iorwf	___fldiv@b+2,f,c
  7179  003A5C  0E7F               	movlw	127
  7180  003A5E  1209               	iorwf	___fldiv@b+3,f,c
  7181  003A60                     l5727:
  7182  003A60  5016               	movf	___fldiv@sign,w,c
  7183  003A62  1209               	iorwf	___fldiv@b+3,f,c
  7184  003A64  0060  F018  F006   	movff	___fldiv@b,?___fldiv
  7185  003A6A  0060  F01C  F007   	movff	___fldiv@b+1,?___fldiv+1
  7186  003A70  0060  F020  F008   	movff	___fldiv@b+2,?___fldiv+2
  7187  003A76  0060  F024  F009   	movff	___fldiv@b+3,?___fldiv+3
  7188  003A7C  0012               	return	
  7189  003A7E                     l5733:
  7190  003A7E  501D               	movf	___fldiv@bexp,w,c
  7191  003A80  A4D8               	btfss	status,2,c
  7192  003A82  D009               	goto	l5741
  7193  003A84  0E00               	movlw	0
  7194  003A86  6E06               	movwf	?___fldiv,c
  7195  003A88  0E00               	movlw	0
  7196  003A8A  6E07               	movwf	?___fldiv+1,c
  7197  003A8C  0E00               	movlw	0
  7198  003A8E  6E08               	movwf	?___fldiv+2,c
  7199  003A90  0E00               	movlw	0
  7200  003A92  6E09               	movwf	?___fldiv+3,c
  7201  003A94  0012               	return	
  7202  003A96                     l5741:
  7203  003A96  501E               	movf	___fldiv@aexp,w,c
  7204  003A98  0060  F074  F00E   	movff	___fldiv@bexp,??___fldiv
  7205  003A9E  6A0F               	clrf	(??___fldiv+1)& (0+255),c
  7206  003AA0  5E0E               	subwf	??___fldiv,f,c
  7207  003AA2  0E00               	movlw	0
  7208  003AA4  5A0F               	subwfb	??___fldiv+1,f,c
  7209  003AA6  0E7F               	movlw	127
  7210  003AA8  240E               	addwf	??___fldiv,w,c
  7211  003AAA  6E17               	movwf	___fldiv@new_exp,c
  7212  003AAC  0E00               	movlw	0
  7213  003AAE  200F               	addwfc	??___fldiv+1,w,c
  7214  003AB0  6E18               	movwf	___fldiv@new_exp+1,c
  7215  003AB2  0060  F018  F012   	movff	___fldiv@b,___fldiv@rem
  7216  003AB8  0060  F01C  F013   	movff	___fldiv@b+1,___fldiv@rem+1
  7217  003ABE  0060  F020  F014   	movff	___fldiv@b+2,___fldiv@rem+2
  7218  003AC4  0060  F024  F015   	movff	___fldiv@b+3,___fldiv@rem+3
  7219  003ACA  0E00               	movlw	0
  7220  003ACC  6E06               	movwf	___fldiv@b,c
  7221  003ACE  0E00               	movlw	0
  7222  003AD0  6E07               	movwf	___fldiv@b+1,c
  7223  003AD2  0E00               	movlw	0
  7224  003AD4  6E08               	movwf	___fldiv@b+2,c
  7225  003AD6  0E00               	movlw	0
  7226  003AD8  6E09               	movwf	___fldiv@b+3,c
  7227  003ADA  0E00               	movlw	0
  7228  003ADC  6E19               	movwf	___fldiv@grs,c
  7229  003ADE  0E00               	movlw	0
  7230  003AE0  6E1A               	movwf	___fldiv@grs+1,c
  7231  003AE2  0E00               	movlw	0
  7232  003AE4  6E1B               	movwf	___fldiv@grs+2,c
  7233  003AE6  0E00               	movlw	0
  7234  003AE8  6E1C               	movwf	___fldiv@grs+3,c
  7235  003AEA  0E00               	movlw	0
  7236  003AEC  6E1E               	movwf	___fldiv@aexp,c
  7237  003AEE  D028               	goto	l1268
  7238  003AF0                     l5751:
  7239  003AF0  501E               	movf	___fldiv@aexp,w,c
  7240  003AF2  B4D8               	btfsc	status,2,c
  7241  003AF4  D011               	goto	l5759
  7242  003AF6  90D8               	bcf	status,0,c
  7243  003AF8  3612               	rlcf	___fldiv@rem,f,c
  7244  003AFA  3613               	rlcf	___fldiv@rem+1,f,c
  7245  003AFC  3614               	rlcf	___fldiv@rem+2,f,c
  7246  003AFE  3615               	rlcf	___fldiv@rem+3,f,c
  7247  003B00  90D8               	bcf	status,0,c
  7248  003B02  3606               	rlcf	___fldiv@b,f,c
  7249  003B04  3607               	rlcf	___fldiv@b+1,f,c
  7250  003B06  3608               	rlcf	___fldiv@b+2,f,c
  7251  003B08  3609               	rlcf	___fldiv@b+3,f,c
  7252  003B0A  BE1C               	btfsc	___fldiv@grs+3,7,c
  7253  003B0C  8006               	bsf	___fldiv@b,0,c
  7254  003B0E  90D8               	bcf	status,0,c
  7255  003B10  3619               	rlcf	___fldiv@grs,f,c
  7256  003B12  361A               	rlcf	___fldiv@grs+1,f,c
  7257  003B14  361B               	rlcf	___fldiv@grs+2,f,c
  7258  003B16  361C               	rlcf	___fldiv@grs+3,f,c
  7259  003B18                     l5759:
  7260  003B18  500A               	movf	___fldiv@a,w,c
  7261  003B1A  5C12               	subwf	___fldiv@rem,w,c
  7262  003B1C  500B               	movf	___fldiv@a+1,w,c
  7263  003B1E  5813               	subwfb	___fldiv@rem+1,w,c
  7264  003B20  500C               	movf	___fldiv@a+2,w,c
  7265  003B22  5814               	subwfb	___fldiv@rem+2,w,c
  7266  003B24  500D               	movf	___fldiv@a+3,w,c
  7267  003B26  5815               	subwfb	___fldiv@rem+3,w,c
  7268  003B28  A0D8               	btfss	status,0,c
  7269  003B2A  D009               	goto	l5765
  7270  003B2C  8C1C               	bsf	___fldiv@grs+3,6,c
  7271  003B2E  500A               	movf	___fldiv@a,w,c
  7272  003B30  5E12               	subwf	___fldiv@rem,f,c
  7273  003B32  500B               	movf	___fldiv@a+1,w,c
  7274  003B34  5A13               	subwfb	___fldiv@rem+1,f,c
  7275  003B36  500C               	movf	___fldiv@a+2,w,c
  7276  003B38  5A14               	subwfb	___fldiv@rem+2,f,c
  7277  003B3A  500D               	movf	___fldiv@a+3,w,c
  7278  003B3C  5A15               	subwfb	___fldiv@rem+3,f,c
  7279  003B3E                     l5765:
  7280  003B3E  2A1E               	incf	___fldiv@aexp,f,c
  7281  003B40                     l1268:
  7282  003B40  0E19               	movlw	25
  7283  003B42  641E               	cpfsgt	___fldiv@aexp,c
  7284  003B44  D7D5               	goto	l5751
  7285  003B46  5012               	movf	___fldiv@rem,w,c
  7286  003B48  1013               	iorwf	___fldiv@rem+1,w,c
  7287  003B4A  1014               	iorwf	___fldiv@rem+2,w,c
  7288  003B4C  1015               	iorwf	___fldiv@rem+3,w,c
  7289  003B4E  B4D8               	btfsc	status,2,c
  7290  003B50  D011               	goto	l5777
  7291  003B52  8019               	bsf	___fldiv@grs,0,c
  7292  003B54  D00F               	goto	l5777
  7293  003B56                     l5771:
  7294  003B56  90D8               	bcf	status,0,c
  7295  003B58  3606               	rlcf	___fldiv@b,f,c
  7296  003B5A  3607               	rlcf	___fldiv@b+1,f,c
  7297  003B5C  3608               	rlcf	___fldiv@b+2,f,c
  7298  003B5E  3609               	rlcf	___fldiv@b+3,f,c
  7299  003B60  BE1C               	btfsc	___fldiv@grs+3,7,c
  7300  003B62  8006               	bsf	___fldiv@b,0,c
  7301  003B64  90D8               	bcf	status,0,c
  7302  003B66  3619               	rlcf	___fldiv@grs,f,c
  7303  003B68  361A               	rlcf	___fldiv@grs+1,f,c
  7304  003B6A  361B               	rlcf	___fldiv@grs+2,f,c
  7305  003B6C  361C               	rlcf	___fldiv@grs+3,f,c
  7306  003B6E  0617               	decf	___fldiv@new_exp,f,c
  7307  003B70  A0D8               	btfss	status,0,c
  7308  003B72  0618               	decf	___fldiv@new_exp+1,f,c
  7309  003B74                     l5777:
  7310  003B74  AE08               	btfss	___fldiv@b+2,7,c
  7311  003B76  D7EF               	goto	l5771
  7312  003B78  0E00               	movlw	0
  7313  003B7A  6E1E               	movwf	___fldiv@aexp,c
  7314  003B7C  AE1C               	btfss	___fldiv@grs+3,7,c
  7315  003B7E  D017               	goto	l1279
  7316  003B80  0EFF               	movlw	255
  7317  003B82  1419               	andwf	___fldiv@grs,w,c
  7318  003B84  6E0E               	movwf	??___fldiv& (0+255),c
  7319  003B86  0EFF               	movlw	255
  7320  003B88  141A               	andwf	___fldiv@grs+1,w,c
  7321  003B8A  6E0F               	movwf	(??___fldiv+1)& (0+255),c
  7322  003B8C  0EFF               	movlw	255
  7323  003B8E  141B               	andwf	___fldiv@grs+2,w,c
  7324  003B90  6E10               	movwf	(??___fldiv+2)& (0+255),c
  7325  003B92  0E7F               	movlw	127
  7326  003B94  141C               	andwf	___fldiv@grs+3,w,c
  7327  003B96  6E11               	movwf	(??___fldiv+3)& (0+255),c
  7328  003B98  500E               	movf	??___fldiv,w,c
  7329  003B9A  100F               	iorwf	??___fldiv+1,w,c
  7330  003B9C  1010               	iorwf	??___fldiv+2,w,c
  7331  003B9E  1011               	iorwf	??___fldiv+3,w,c
  7332  003BA0  B4D8               	btfsc	status,2,c
  7333  003BA2  D003               	goto	l1280
  7334  003BA4                     u7740:
  7335  003BA4  0E01               	movlw	1
  7336  003BA6  6E1E               	movwf	___fldiv@aexp,c
  7337  003BA8  D002               	goto	l1279
  7338  003BAA                     l1280:
  7339  003BAA  B006               	btfsc	___fldiv@b,0,c
  7340  003BAC  D7FB               	goto	u7740
  7341  003BAE                     l1279:
  7342  003BAE  501E               	movf	___fldiv@aexp,w,c
  7343  003BB0  B4D8               	btfsc	status,2,c
  7344  003BB2  D027               	goto	l5797
  7345  003BB4  0E01               	movlw	1
  7346  003BB6  2606               	addwf	___fldiv@b,f,c
  7347  003BB8  0E00               	movlw	0
  7348  003BBA  2207               	addwfc	___fldiv@b+1,f,c
  7349  003BBC  2208               	addwfc	___fldiv@b+2,f,c
  7350  003BBE  2209               	addwfc	___fldiv@b+3,f,c
  7351  003BC0  A009               	btfss	___fldiv@b+3,0,c
  7352  003BC2  D01F               	goto	l5797
  7353  003BC4  0060  F018  F00E   	movff	___fldiv@b,??___fldiv
  7354  003BCA  0060  F01C  F00F   	movff	___fldiv@b+1,??___fldiv+1
  7355  003BD0  0060  F020  F010   	movff	___fldiv@b+2,??___fldiv+2
  7356  003BD6  0060  F024  F011   	movff	___fldiv@b+3,??___fldiv+3
  7357  003BDC  3411               	rlcf	??___fldiv+3,w,c
  7358  003BDE  3211               	rrcf	??___fldiv+3,f,c
  7359  003BE0  3210               	rrcf	??___fldiv+2,f,c
  7360  003BE2  320F               	rrcf	??___fldiv+1,f,c
  7361  003BE4  320E               	rrcf	??___fldiv,f,c
  7362  003BE6  0060  F038  F006   	movff	??___fldiv,___fldiv@b
  7363  003BEC  0060  F03C  F007   	movff	??___fldiv+1,___fldiv@b+1
  7364  003BF2  0060  F040  F008   	movff	??___fldiv+2,___fldiv@b+2
  7365  003BF8  0060  F044  F009   	movff	??___fldiv+3,___fldiv@b+3
  7366  003BFE  4A17               	infsnz	___fldiv@new_exp,f,c
  7367  003C00  2A18               	incf	___fldiv@new_exp+1,f,c
  7368  003C02                     l5797:
  7369  003C02  BE18               	btfsc	___fldiv@new_exp+1,7,c
  7370  003C04  D010               	goto	l5801
  7371  003C06  5018               	movf	___fldiv@new_exp+1,w,c
  7372  003C08  E103               	bnz	u7780
  7373  003C0A  2817               	incf	___fldiv@new_exp,w,c
  7374  003C0C  A0D8               	btfss	status,0,c
  7375  003C0E  D00B               	goto	l5801
  7376  003C10                     u7780:
  7377  003C10  0E00               	movlw	0
  7378  003C12  6E18               	movwf	___fldiv@new_exp+1,c
  7379  003C14  6817               	setf	___fldiv@new_exp,c
  7380  003C16  0E00               	movlw	0
  7381  003C18  6E06               	movwf	___fldiv@b,c
  7382  003C1A  0E00               	movlw	0
  7383  003C1C  6E07               	movwf	___fldiv@b+1,c
  7384  003C1E  0E00               	movlw	0
  7385  003C20  6E08               	movwf	___fldiv@b+2,c
  7386  003C22  0E00               	movlw	0
  7387  003C24  6E09               	movwf	___fldiv@b+3,c
  7388  003C26                     l5801:
  7389  003C26  BE18               	btfsc	___fldiv@new_exp+1,7,c
  7390  003C28  D005               	goto	u7790
  7391  003C2A  5018               	movf	___fldiv@new_exp+1,w,c
  7392  003C2C  E111               	bnz	l5805
  7393  003C2E  0417               	decf	___fldiv@new_exp,w,c
  7394  003C30  B0D8               	btfsc	status,0,c
  7395  003C32  D00E               	goto	l5805
  7396  003C34                     u7790:
  7397  003C34  0E00               	movlw	0
  7398  003C36  6E18               	movwf	___fldiv@new_exp+1,c
  7399  003C38  0E00               	movlw	0
  7400  003C3A  6E17               	movwf	___fldiv@new_exp,c
  7401  003C3C  0E00               	movlw	0
  7402  003C3E  6E06               	movwf	___fldiv@b,c
  7403  003C40  0E00               	movlw	0
  7404  003C42  6E07               	movwf	___fldiv@b+1,c
  7405  003C44  0E00               	movlw	0
  7406  003C46  6E08               	movwf	___fldiv@b+2,c
  7407  003C48  0E00               	movlw	0
  7408  003C4A  6E09               	movwf	___fldiv@b+3,c
  7409  003C4C  0E00               	movlw	0
  7410  003C4E  6E16               	movwf	___fldiv@sign,c
  7411  003C50                     l5805:
  7412  003C50  0060  F05C  F01D   	movff	___fldiv@new_exp,___fldiv@bexp
  7413  003C56  A01D               	btfss	___fldiv@bexp,0,c
  7414  003C58  D002               	goto	l5811
  7415  003C5A  8E08               	bsf	___fldiv@b+2,7,c
  7416  003C5C  D001               	goto	l5813
  7417  003C5E                     l5811:
  7418  003C5E  9E08               	bcf	___fldiv@b+2,7,c
  7419  003C60                     l5813:
  7420  003C60  90D8               	bcf	status,0,c
  7421  003C62  301D               	rrcf	___fldiv@bexp,w,c
  7422  003C64  6E09               	movwf	___fldiv@b+3,c
  7423  003C66  D6FC               	goto	l5727
  7424  003C68                     __end_of___fldiv:
  7425                           	opt callstack 0
  7426                           
  7427 ;; *************** function ___awmod *****************
  7428 ;; Defined at:
  7429 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  dividend        2    5[COMRAM] int 
  7432 ;;  divisor         2    7[COMRAM] int 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;  sign            1   10[COMRAM] unsigned char 
  7435 ;;  counter         1    9[COMRAM] unsigned char 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  2    5[COMRAM] int 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7448 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7449 ;;Total ram usage:        6 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    2
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_efgtoa
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text28
  7460  004D06                     __ptext28:
  7461                           	opt callstack 0
  7462  004D06                     ___awmod:
  7463                           	opt callstack 23
  7464                           
  7465                           ;incstack = 0
  7466  004D06  0E00               	movlw	0
  7467  004D08  6E0B               	movwf	___awmod@sign,c
  7468  004D0A  AE07               	btfss	___awmod@dividend+1,7,c
  7469  004D0C  D006               	goto	l6009
  7470  004D0E  6C06               	negf	___awmod@dividend,c
  7471  004D10  1E07               	comf	___awmod@dividend+1,f,c
  7472  004D12  B0D8               	btfsc	status,0,c
  7473  004D14  2A07               	incf	___awmod@dividend+1,f,c
  7474  004D16  0E01               	movlw	1
  7475  004D18  6E0B               	movwf	___awmod@sign,c
  7476  004D1A                     l6009:
  7477  004D1A  AE09               	btfss	___awmod@divisor+1,7,c
  7478  004D1C  D004               	goto	l6013
  7479  004D1E  6C08               	negf	___awmod@divisor,c
  7480  004D20  1E09               	comf	___awmod@divisor+1,f,c
  7481  004D22  B0D8               	btfsc	status,0,c
  7482  004D24  2A09               	incf	___awmod@divisor+1,f,c
  7483  004D26                     l6013:
  7484  004D26  5008               	movf	___awmod@divisor,w,c
  7485  004D28  1009               	iorwf	___awmod@divisor+1,w,c
  7486  004D2A  B4D8               	btfsc	status,2,c
  7487  004D2C  D018               	goto	l6029
  7488  004D2E  0E01               	movlw	1
  7489  004D30  6E0A               	movwf	___awmod@counter,c
  7490  004D32  D004               	goto	l6019
  7491  004D34                     l6017:
  7492  004D34  90D8               	bcf	status,0,c
  7493  004D36  3608               	rlcf	___awmod@divisor,f,c
  7494  004D38  3609               	rlcf	___awmod@divisor+1,f,c
  7495  004D3A  2A0A               	incf	___awmod@counter,f,c
  7496  004D3C                     l6019:
  7497  004D3C  AE09               	btfss	___awmod@divisor+1,7,c
  7498  004D3E  D7FA               	goto	l6017
  7499  004D40                     u8090:
  7500  004D40  5008               	movf	___awmod@divisor,w,c
  7501  004D42  5C06               	subwf	___awmod@dividend,w,c
  7502  004D44  5009               	movf	___awmod@divisor+1,w,c
  7503  004D46  5807               	subwfb	___awmod@dividend+1,w,c
  7504  004D48  A0D8               	btfss	status,0,c
  7505  004D4A  D004               	goto	l6025
  7506  004D4C  5008               	movf	___awmod@divisor,w,c
  7507  004D4E  5E06               	subwf	___awmod@dividend,f,c
  7508  004D50  5009               	movf	___awmod@divisor+1,w,c
  7509  004D52  5A07               	subwfb	___awmod@dividend+1,f,c
  7510  004D54                     l6025:
  7511  004D54  90D8               	bcf	status,0,c
  7512  004D56  3209               	rrcf	___awmod@divisor+1,f,c
  7513  004D58  3208               	rrcf	___awmod@divisor,f,c
  7514  004D5A  2E0A               	decfsz	___awmod@counter,f,c
  7515  004D5C  D7F1               	goto	u8090
  7516  004D5E                     l6029:
  7517  004D5E  500B               	movf	___awmod@sign,w,c
  7518  004D60  B4D8               	btfsc	status,2,c
  7519  004D62  D004               	goto	l6033
  7520  004D64  6C06               	negf	___awmod@dividend,c
  7521  004D66  1E07               	comf	___awmod@dividend+1,f,c
  7522  004D68  B0D8               	btfsc	status,0,c
  7523  004D6A  2A07               	incf	___awmod@dividend+1,f,c
  7524  004D6C                     l6033:
  7525  004D6C  0060  F018  F006   	movff	___awmod@dividend,?___awmod
  7526  004D72  0060  F01C  F007   	movff	___awmod@dividend+1,?___awmod+1
  7527  004D78  0012               	return		;funcret
  7528  004D7A                     __end_of___awmod:
  7529                           	opt callstack 0
  7530                           
  7531 ;; *************** function ___awdiv *****************
  7532 ;; Defined at:
  7533 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  dividend        2    5[COMRAM] int 
  7536 ;;  divisor         2    7[COMRAM] int 
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;  quotient        2   11[COMRAM] int 
  7539 ;;  sign            1   10[COMRAM] unsigned char 
  7540 ;;  counter         1    9[COMRAM] unsigned char 
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  2    5[COMRAM] int 
  7543 ;; Registers used:
  7544 ;;		wreg, status,2, status,0
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7551 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7553 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7554 ;;Total ram usage:        8 bytes
  7555 ;; Hardware stack levels used:    1
  7556 ;; Hardware stack levels required when called:    2
  7557 ;; This function calls:
  7558 ;;		Nothing
  7559 ;; This function is called by:
  7560 ;;		_efgtoa
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           	psect	text29
  7565  004BFC                     __ptext29:
  7566                           	opt callstack 0
  7567  004BFC                     ___awdiv:
  7568                           	opt callstack 23
  7569                           
  7570                           ;incstack = 0
  7571  004BFC  0E00               	movlw	0
  7572  004BFE  6E0B               	movwf	___awdiv@sign,c
  7573  004C00  AE09               	btfss	___awdiv@divisor+1,7,c
  7574  004C02  D006               	goto	l5965
  7575  004C04  6C08               	negf	___awdiv@divisor,c
  7576  004C06  1E09               	comf	___awdiv@divisor+1,f,c
  7577  004C08  B0D8               	btfsc	status,0,c
  7578  004C0A  2A09               	incf	___awdiv@divisor+1,f,c
  7579  004C0C  0E01               	movlw	1
  7580  004C0E  6E0B               	movwf	___awdiv@sign,c
  7581  004C10                     l5965:
  7582  004C10  AE07               	btfss	___awdiv@dividend+1,7,c
  7583  004C12  D006               	goto	l5971
  7584  004C14  6C06               	negf	___awdiv@dividend,c
  7585  004C16  1E07               	comf	___awdiv@dividend+1,f,c
  7586  004C18  B0D8               	btfsc	status,0,c
  7587  004C1A  2A07               	incf	___awdiv@dividend+1,f,c
  7588  004C1C  0E01               	movlw	1
  7589  004C1E  1A0B               	xorwf	___awdiv@sign,f,c
  7590  004C20                     l5971:
  7591  004C20  0E00               	movlw	0
  7592  004C22  6E0D               	movwf	___awdiv@quotient+1,c
  7593  004C24  0E00               	movlw	0
  7594  004C26  6E0C               	movwf	___awdiv@quotient,c
  7595  004C28  5008               	movf	___awdiv@divisor,w,c
  7596  004C2A  1009               	iorwf	___awdiv@divisor+1,w,c
  7597  004C2C  B4D8               	btfsc	status,2,c
  7598  004C2E  D01C               	goto	l5993
  7599  004C30  0E01               	movlw	1
  7600  004C32  6E0A               	movwf	___awdiv@counter,c
  7601  004C34  D004               	goto	l5979
  7602  004C36                     l5977:
  7603  004C36  90D8               	bcf	status,0,c
  7604  004C38  3608               	rlcf	___awdiv@divisor,f,c
  7605  004C3A  3609               	rlcf	___awdiv@divisor+1,f,c
  7606  004C3C  2A0A               	incf	___awdiv@counter,f,c
  7607  004C3E                     l5979:
  7608  004C3E  AE09               	btfss	___awdiv@divisor+1,7,c
  7609  004C40  D7FA               	goto	l5977
  7610  004C42                     u8030:
  7611  004C42  90D8               	bcf	status,0,c
  7612  004C44  360C               	rlcf	___awdiv@quotient,f,c
  7613  004C46  360D               	rlcf	___awdiv@quotient+1,f,c
  7614  004C48  5008               	movf	___awdiv@divisor,w,c
  7615  004C4A  5C06               	subwf	___awdiv@dividend,w,c
  7616  004C4C  5009               	movf	___awdiv@divisor+1,w,c
  7617  004C4E  5807               	subwfb	___awdiv@dividend+1,w,c
  7618  004C50  A0D8               	btfss	status,0,c
  7619  004C52  D005               	goto	l5989
  7620  004C54  5008               	movf	___awdiv@divisor,w,c
  7621  004C56  5E06               	subwf	___awdiv@dividend,f,c
  7622  004C58  5009               	movf	___awdiv@divisor+1,w,c
  7623  004C5A  5A07               	subwfb	___awdiv@dividend+1,f,c
  7624  004C5C  800C               	bsf	___awdiv@quotient,0,c
  7625  004C5E                     l5989:
  7626  004C5E  90D8               	bcf	status,0,c
  7627  004C60  3209               	rrcf	___awdiv@divisor+1,f,c
  7628  004C62  3208               	rrcf	___awdiv@divisor,f,c
  7629  004C64  2E0A               	decfsz	___awdiv@counter,f,c
  7630  004C66  D7ED               	goto	u8030
  7631  004C68                     l5993:
  7632  004C68  500B               	movf	___awdiv@sign,w,c
  7633  004C6A  B4D8               	btfsc	status,2,c
  7634  004C6C  D004               	goto	l5997
  7635  004C6E  6C0C               	negf	___awdiv@quotient,c
  7636  004C70  1E0D               	comf	___awdiv@quotient+1,f,c
  7637  004C72  B0D8               	btfsc	status,0,c
  7638  004C74  2A0D               	incf	___awdiv@quotient+1,f,c
  7639  004C76                     l5997:
  7640  004C76  0060  F030  F006   	movff	___awdiv@quotient,?___awdiv
  7641  004C7C  0060  F034  F007   	movff	___awdiv@quotient+1,?___awdiv+1
  7642  004C82  0012               	return		;funcret
  7643  004C84                     __end_of___awdiv:
  7644                           	opt callstack 0
  7645                           
  7646 ;; *************** function _memset *****************
  7647 ;; Defined at:
  7648 ;;		line 311 in file "main.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  st              2    5[COMRAM] PTR unsigned char 
  7651 ;;		 -> tx_buffer(55), 
  7652 ;;  x               1    7[COMRAM] unsigned char 
  7653 ;;  size            2    8[COMRAM] int 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;  i               2   11[COMRAM] int 
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7665 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7668 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7669 ;;Total ram usage:        8 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; Hardware stack levels required when called:    2
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_UART_handler
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text30
  7680  005174                     __ptext30:
  7681                           	opt callstack 0
  7682  005174                     _memset:
  7683                           	opt callstack 27
  7684                           
  7685                           ;main.c: 312:     for(int i=0;i<size;i++){
  7686                           
  7687                           ;incstack = 0
  7688  005174  0E00               	movlw	0
  7689  005176  6E0D               	movwf	memset@i+1,c
  7690  005178  0E00               	movlw	0
  7691  00517A  6E0C               	movwf	memset@i,c
  7692  00517C  D00B               	goto	l6609
  7693  00517E                     l6605:
  7694                           
  7695                           ;main.c: 313:         st[i] = x;
  7696  00517E  500C               	movf	memset@i,w,c
  7697  005180  2406               	addwf	memset@st,w,c
  7698  005182  6ED9               	movwf	fsr2l,c
  7699  005184  500D               	movf	memset@i+1,w,c
  7700  005186  2007               	addwfc	memset@st+1,w,c
  7701  005188  6EDA               	movwf	fsr2h,c
  7702  00518A  0060  F023  FFDF   	movff	memset@x,indf2
  7703                           
  7704                           ;main.c: 314:     }
  7705  005190  4A0C               	infsnz	memset@i,f,c
  7706  005192  2A0D               	incf	memset@i+1,f,c
  7707  005194                     l6609:
  7708  005194  5009               	movf	memset@size,w,c
  7709  005196  5C0C               	subwf	memset@i,w,c
  7710  005198  500D               	movf	memset@i+1,w,c
  7711  00519A  0A80               	xorlw	128
  7712  00519C  6E0B               	movwf	??_memset& (0+255),c
  7713  00519E  500A               	movf	memset@size+1,w,c
  7714  0051A0  0A80               	xorlw	128
  7715  0051A2  580B               	subwfb	??_memset& (0+255),w,c
  7716  0051A4  B0D8               	btfsc	status,0,c
  7717  0051A6  0012               	return	
  7718  0051A8  D7EA               	goto	l6605
  7719  0051AA                     __end_of_memset:
  7720                           	opt callstack 0
  7721                           
  7722 ;; *************** function _UART1_SendString *****************
  7723 ;; Defined at:
  7724 ;;		line 57 in file "UART1.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  str             2    9[COMRAM] PTR unsigned char 
  7727 ;;		 -> tx_buffer(55), 
  7728 ;;  size            2   11[COMRAM] int 
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;  attempts        2   15[COMRAM] unsigned int 
  7731 ;;  i               2   13[COMRAM] unsigned int 
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      unsigned char 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7742 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;Total ram usage:        8 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    3
  7748 ;; This function calls:
  7749 ;;		_UART1_SendByte
  7750 ;; This function is called by:
  7751 ;;		_UART_handler
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text31
  7756  004ADA                     __ptext31:
  7757                           	opt callstack 0
  7758  004ADA                     _UART1_SendString:
  7759                           	opt callstack 26
  7760                           
  7761                           ;UART1.c: 58:     unsigned int attempts = 65000,i;
  7762                           
  7763                           ;incstack = 0
  7764  004ADA  0EFD               	movlw	253
  7765  004ADC  6E11               	movwf	UART1_SendString@attempts+1,c
  7766  004ADE  0EE8               	movlw	232
  7767  004AE0  6E10               	movwf	UART1_SendString@attempts,c
  7768                           
  7769                           ;UART1.c: 59:     for(i=0;i<size;i++){
  7770  004AE2  0E00               	movlw	0
  7771  004AE4  6E0F               	movwf	UART1_SendString@i+1,c
  7772  004AE6  0E00               	movlw	0
  7773  004AE8  6E0E               	movwf	UART1_SendString@i,c
  7774  004AEA  D01C               	goto	l6693
  7775  004AEC                     l6681:
  7776                           
  7777                           ;UART1.c: 60:         if(!UART1_SendByte(*(str + i))){
  7778  004AEC  500E               	movf	UART1_SendString@i,w,c
  7779  004AEE  240A               	addwf	UART1_SendString@str,w,c
  7780  004AF0  6ED9               	movwf	fsr2l,c
  7781  004AF2  500F               	movf	UART1_SendString@i+1,w,c
  7782  004AF4  200B               	addwfc	UART1_SendString@str+1,w,c
  7783  004AF6  6EDA               	movwf	fsr2h,c
  7784  004AF8  50DF               	movf	indf2,w,c
  7785  004AFA  EC65  F029         	call	_UART1_SendByte
  7786  004AFE  0900               	iorlw	0
  7787  004B00  A4D8               	btfss	status,2,c
  7788  004B02  D006               	goto	l6685
  7789                           
  7790                           ;UART1.c: 61:             attempts --;
  7791  004B04  0610               	decf	UART1_SendString@attempts,f,c
  7792  004B06  A0D8               	btfss	status,0,c
  7793  004B08  0611               	decf	UART1_SendString@attempts+1,f,c
  7794                           
  7795                           ;UART1.c: 62:             i --;
  7796  004B0A  060E               	decf	UART1_SendString@i,f,c
  7797  004B0C  A0D8               	btfss	status,0,c
  7798  004B0E  060F               	decf	UART1_SendString@i+1,f,c
  7799  004B10                     l6685:
  7800                           
  7801                           ;UART1.c: 64:         if(!attempts)
  7802  004B10  5010               	movf	UART1_SendString@attempts,w,c
  7803  004B12  1011               	iorwf	UART1_SendString@attempts+1,w,c
  7804  004B14  B4D8               	btfsc	status,2,c
  7805  004B16  0012               	return	
  7806                           
  7807                           ;UART1.c: 66:         attempts = 65000;
  7808  004B18  0EFD               	movlw	253
  7809  004B1A  6E11               	movwf	UART1_SendString@attempts+1,c
  7810  004B1C  0EE8               	movlw	232
  7811  004B1E  6E10               	movwf	UART1_SendString@attempts,c
  7812                           
  7813                           ;UART1.c: 67:     }
  7814  004B20  4A0E               	infsnz	UART1_SendString@i,f,c
  7815  004B22  2A0F               	incf	UART1_SendString@i+1,f,c
  7816  004B24                     l6693:
  7817  004B24  500C               	movf	UART1_SendString@size,w,c
  7818  004B26  5C0E               	subwf	UART1_SendString@i,w,c
  7819  004B28  500D               	movf	UART1_SendString@size+1,w,c
  7820  004B2A  580F               	subwfb	UART1_SendString@i+1,w,c
  7821  004B2C  A0D8               	btfss	status,0,c
  7822  004B2E  D7DE               	goto	l6681
  7823                           
  7824                           ;UART1.c: 68:     attempts =65000;
  7825  004B30  0EFD               	movlw	253
  7826  004B32  6E11               	movwf	UART1_SendString@attempts+1,c
  7827  004B34  0EE8               	movlw	232
  7828  004B36  6E10               	movwf	UART1_SendString@attempts,c
  7829  004B38                     l6697:
  7830  004B38  0E0D               	movlw	13
  7831  004B3A  EC65  F029         	call	_UART1_SendByte
  7832  004B3E  0900               	iorlw	0
  7833  004B40  A4D8               	btfss	status,2,c
  7834  004B42  D008               	goto	u9240
  7835  004B44  0610               	decf	UART1_SendString@attempts,f,c
  7836  004B46  A0D8               	btfss	status,0,c
  7837  004B48  0611               	decf	UART1_SendString@attempts+1,f,c
  7838  004B4A  2810               	incf	UART1_SendString@attempts,w,c
  7839  004B4C  E1F5               	bnz	l6697
  7840  004B4E  2811               	incf	UART1_SendString@attempts+1,w,c
  7841  004B50  A4D8               	btfss	status,2,c
  7842  004B52  D7F2               	goto	l6697
  7843  004B54                     u9240:
  7844  004B54                     l6701:
  7845  004B54  0E0A               	movlw	10
  7846  004B56  EC65  F029         	call	_UART1_SendByte
  7847  004B5A  0900               	iorlw	0
  7848  004B5C  A4D8               	btfss	status,2,c
  7849  004B5E  0012               	return	
  7850  004B60  0610               	decf	UART1_SendString@attempts,f,c
  7851  004B62  A0D8               	btfss	status,0,c
  7852  004B64  0611               	decf	UART1_SendString@attempts+1,f,c
  7853  004B66  2810               	incf	UART1_SendString@attempts,w,c
  7854  004B68  E1F5               	bnz	l6701
  7855  004B6A  2811               	incf	UART1_SendString@attempts+1,w,c
  7856  004B6C  B4D8               	btfsc	status,2,c
  7857  004B6E  0012               	return	
  7858  004B70  D7F1               	goto	u9240
  7859  004B72                     __end_of_UART1_SendString:
  7860                           	opt callstack 0
  7861                           
  7862 ;; *************** function _UART1_SendByte *****************
  7863 ;; Defined at:
  7864 ;;		line 48 in file "UART1.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  byte            1    wreg     unsigned char 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  byte            1    5[COMRAM] unsigned char 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      unsigned char 
  7871 ;; Registers used:
  7872 ;;		wreg
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7882 ;;Total ram usage:        1 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:    2
  7885 ;; This function calls:
  7886 ;;		Nothing
  7887 ;; This function is called by:
  7888 ;;		_UART1_SendString
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text32
  7893  0052CA                     __ptext32:
  7894                           	opt callstack 0
  7895  0052CA                     _UART1_SendByte:
  7896                           	opt callstack 26
  7897                           
  7898                           ;incstack = 0
  7899                           ;UART1_SendByte@byte stored from wreg
  7900  0052CA  6E06               	movwf	UART1_SendByte@byte,c
  7901                           
  7902                           ;UART1.c: 49:     if(!PIE3bits.U1TXIE){
  7903  0052CC  0139               	movlb	57	; () banked
  7904  0052CE  B993               	btfsc	147,4,b	;volatile
  7905  0052D0  D006               	goto	l6545
  7906                           
  7907                           ; BSR set to: 57
  7908                           ;UART1.c: 50:         tx_byte = byte;
  7909  0052D2  0060  F018  F0F7   	movff	UART1_SendByte@byte,_tx_byte
  7910                           
  7911                           ; BSR set to: 57
  7912                           ;UART1.c: 51:         PIE3bits.U1TXIE = 1;
  7913  0052D8  8993               	bsf	147,4,b	;volatile
  7914                           
  7915                           ;UART1.c: 52:         return 1;
  7916  0052DA  0E01               	movlw	1
  7917  0052DC  0012               	return	
  7918  0052DE                     l6545:
  7919                           
  7920                           ; BSR set to: 57
  7921                           ;UART1.c: 54:     return 0;
  7922  0052DE  0E00               	movlw	0
  7923                           
  7924                           ; BSR set to: 57
  7925  0052E0  0012               	return		;funcret
  7926  0052E2                     __end_of_UART1_SendByte:
  7927                           	opt callstack 0
  7928                           
  7929 ;; *************** function _I2C_handler *****************
  7930 ;; Defined at:
  7931 ;;		line 89 in file "I2C.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  value           2   17[COMRAM] int 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;		None
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  1    wreg      void 
  7938 ;; Registers used:
  7939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7948 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7949 ;;Total ram usage:        2 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:    3
  7952 ;; This function calls:
  7953 ;;		_I2C_Transmit
  7954 ;; This function is called by:
  7955 ;;		_UART_handler
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           	psect	text33
  7960  00523E                     __ptext33:
  7961                           	opt callstack 0
  7962  00523E                     _I2C_handler:
  7963                           	opt callstack 26
  7964                           
  7965                           ;I2C.c: 90:     AD5272_COMMANDS[0] = (unsigned char)(0x04 | (value >> 8));
  7966                           
  7967                           ; BSR set to: 57
  7968                           ;incstack = 0
  7969  00523E  5013               	movf	I2C_handler@value+1,w,c
  7970  005240  0904               	iorlw	4
  7971  005242  0100               	movlb	0	; () banked
  7972  005244  6FF8               	movwf	_AD5272_COMMANDS& (0+255),b
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;I2C.c: 91:     AD5272_COMMANDS[1] = (unsigned char)value;
  7976  005246  0060  F048  F0F9   	movff	I2C_handler@value,_AD5272_COMMANDS+1
  7977                           
  7978                           ; BSR set to: 0
  7979  00524C  0EF8               	movlw	low _AD5272_COMMANDS
  7980  00524E  6E06               	movwf	I2C_Transmit@buffer,c
  7981  005250  0E00               	movlw	high _AD5272_COMMANDS
  7982  005252  6E07               	movwf	I2C_Transmit@buffer+1,c
  7983  005254  0E02               	movlw	2
  7984  005256  6E08               	movwf	I2C_Transmit@buffer_size,c
  7985  005258  0E5E               	movlw	94
  7986  00525A  6E09               	movwf	I2C_Transmit@address,c
  7987  00525C  EC1A  F025         	call	_I2C_Transmit	;wreg free
  7988  005260                     l6629:
  7989  005260  0100               	movlb	0	; () banked
  7990  005262  51F2               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  7991  005264  A4D8               	btfss	status,2,c
  7992  005266  0012               	return	
  7993  005268  D7FB               	goto	l6629
  7994  00526A                     __end_of_I2C_handler:
  7995                           	opt callstack 0
  7996                           
  7997 ;; *************** function _I2C_Transmit *****************
  7998 ;; Defined at:
  7999 ;;		line 49 in file "I2C.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;  buffer          2    5[COMRAM] PTR unsigned char 
  8002 ;;		 -> AD5272_COMMANDS(2), 
  8003 ;;  buffer_size     1    7[COMRAM] unsigned char 
  8004 ;;  address         1    8[COMRAM] unsigned char 
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;  i               1   16[COMRAM] unsigned char 
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      unsigned char 
  8009 ;; Registers used:
  8010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8018 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8019 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8020 ;;Total ram usage:       12 bytes
  8021 ;; Hardware stack levels used:    1
  8022 ;; Hardware stack levels required when called:    2
  8023 ;; This function calls:
  8024 ;;		Nothing
  8025 ;; This function is called by:
  8026 ;;		_main
  8027 ;;		_I2C_handler
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text34
  8032  004A34                     __ptext34:
  8033                           	opt callstack 0
  8034  004A34                     _I2C_Transmit:
  8035                           	opt callstack 26
  8036                           
  8037                           ;I2C.c: 50:     if(I2C_STOP_DETECTED && I2C1STAT0bits.BFRE && I2C1CNT == 0){
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;incstack = 0
  8041  004A34  0100               	movlb	0	; () banked
  8042  004A36  51F2               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  8043  004A38  B4D8               	btfsc	status,2,c
  8044  004A3A  0012               	return	
  8045                           
  8046                           ; BSR set to: 0
  8047  004A3C  013D               	movlb	61	; () banked
  8048  004A3E  AF77               	btfss	119,7,b	;volatile
  8049  004A40  0012               	return	
  8050                           
  8051                           ; BSR set to: 61
  8052  004A42  516C               	movf	108,w,b	;volatile
  8053  004A44  A4D8               	btfss	status,2,c
  8054  004A46  0012               	return	
  8055                           
  8056                           ; BSR set to: 61
  8057                           ;I2C.c: 51:         I2C_STOP_DETECTED = 0;
  8058  004A48  0E00               	movlw	0
  8059  004A4A  0100               	movlb	0	; () banked
  8060  004A4C  6FF2               	movwf	_I2C_STOP_DETECTED& (0+255),b
  8061                           
  8062                           ;I2C.c: 52:         for(unsigned char i=0;i<(buffer_size-1);i++){
  8063  004A4E  0E00               	movlw	0
  8064  004A50  6E11               	movwf	I2C_Transmit@i,c
  8065  004A52  D016               	goto	l6527
  8066  004A54                     l6523:
  8067                           
  8068                           ;I2C.c: 53:             I2C_TX_BUFFER[i] = buffer[i+1];
  8069  004A54  5011               	movf	I2C_Transmit@i,w,c
  8070  004A56  2406               	addwf	I2C_Transmit@buffer,w,c
  8071  004A58  6E0A               	movwf	??_I2C_Transmit& (0+255),c
  8072  004A5A  0E00               	movlw	0
  8073  004A5C  2007               	addwfc	I2C_Transmit@buffer+1,w,c
  8074  004A5E  6E0B               	movwf	(??_I2C_Transmit+1)& (0+255),c
  8075  004A60  0E01               	movlw	1
  8076  004A62  240A               	addwf	??_I2C_Transmit,w,c
  8077  004A64  6ED9               	movwf	fsr2l,c
  8078  004A66  0E00               	movlw	0
  8079  004A68  200B               	addwfc	??_I2C_Transmit+1,w,c
  8080  004A6A  6EDA               	movwf	fsr2h,c
  8081  004A6C  0E0A               	movlw	low _I2C_TX_BUFFER
  8082  004A6E  2411               	addwf	I2C_Transmit@i,w,c
  8083  004A70  6EE1               	movwf	fsr1l,c
  8084  004A72  6AE2               	clrf	fsr1h,c
  8085  004A74  0E01               	movlw	high _I2C_TX_BUFFER
  8086  004A76  22E2               	addwfc	fsr1h,f,c
  8087  004A78  006F FF7F FFE7     	movff	indf2,indf1
  8088                           
  8089                           ;I2C.c: 54:         }
  8090  004A7E  2A11               	incf	I2C_Transmit@i,f,c
  8091  004A80                     l6527:
  8092  004A80  0EFF               	movlw	255
  8093  004A82  6E0A               	movwf	??_I2C_Transmit& (0+255),c
  8094  004A84  0EFF               	movlw	255
  8095  004A86  6E0B               	movwf	(??_I2C_Transmit+1)& (0+255),c
  8096  004A88  5008               	movf	I2C_Transmit@buffer_size,w,c
  8097  004A8A  6E0C               	movwf	(??_I2C_Transmit+2)& (0+255),c
  8098  004A8C  6A0D               	clrf	(??_I2C_Transmit+3)& (0+255),c
  8099  004A8E  500A               	movf	??_I2C_Transmit,w,c
  8100  004A90  260C               	addwf	??_I2C_Transmit+2,f,c
  8101  004A92  500B               	movf	??_I2C_Transmit+1,w,c
  8102  004A94  220D               	addwfc	??_I2C_Transmit+3,f,c
  8103  004A96  5011               	movf	I2C_Transmit@i,w,c
  8104  004A98  6E0E               	movwf	(??_I2C_Transmit+4)& (0+255),c
  8105  004A9A  6A0F               	clrf	(??_I2C_Transmit+5)& (0+255),c
  8106  004A9C  500C               	movf	??_I2C_Transmit+2,w,c
  8107  004A9E  5C0E               	subwf	??_I2C_Transmit+4,w,c
  8108  004AA0  500F               	movf	??_I2C_Transmit+5,w,c
  8109  004AA2  0A80               	xorlw	128
  8110  004AA4  6E10               	movwf	(??_I2C_Transmit+6)& (0+255),c
  8111  004AA6  500D               	movf	??_I2C_Transmit+3,w,c
  8112  004AA8  0A80               	xorlw	128
  8113  004AAA  5810               	subwfb	(??_I2C_Transmit+6)& (0+255),w,c
  8114  004AAC  A0D8               	btfss	status,0,c
  8115  004AAE  D7D2               	goto	l6523
  8116                           
  8117                           ;I2C.c: 55:         I2C1ADB1 = address;
  8118  004AB0  0060  F027  FD6E   	movff	I2C_Transmit@address,15726	;volatile
  8119                           
  8120                           ;I2C.c: 56:         I2C1CNT = buffer_size;
  8121  004AB6  0060  F023  FD6C   	movff	I2C_Transmit@buffer_size,15724	;volatile
  8122                           
  8123                           ;I2C.c: 57:         I2C1TXB = buffer[0];
  8124  004ABC  0060  F01B  FFD9   	movff	I2C_Transmit@buffer,fsr2l
  8125  004AC2  0060  F01F  FFDA   	movff	I2C_Transmit@buffer+1,fsr2h
  8126  004AC8  50DF               	movf	indf2,w,c
  8127  004ACA  013D               	movlb	61	; () banked
  8128  004ACC  6F6B               	movwf	107,b	;volatile
  8129                           
  8130                           ; BSR set to: 61
  8131                           ;I2C.c: 58:         I2C_TX_COUNTER = 0;
  8132  004ACE  0E00               	movlw	0
  8133  004AD0  0100               	movlb	0	; () banked
  8134  004AD2  6FF4               	movwf	_I2C_TX_COUNTER& (0+255),b
  8135                           
  8136                           ; BSR set to: 0
  8137                           ;I2C.c: 59:         I2C1CON0bits.S = 1;
  8138  004AD4  013D               	movlb	61	; () banked
  8139  004AD6  8B73               	bsf	115,5,b	;volatile
  8140  004AD8  0012               	return		;funcret
  8141  004ADA                     __end_of_I2C_Transmit:
  8142                           	opt callstack 0
  8143                           
  8144 ;; *************** function _GetStringSize *****************
  8145 ;; Defined at:
  8146 ;;		line 301 in file "main.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;		None
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;  i               2    7[COMRAM] int 
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  2    5[COMRAM] int 
  8153 ;; Registers used:
  8154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8163 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8164 ;;Total ram usage:        4 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; Hardware stack levels required when called:    2
  8167 ;; This function calls:
  8168 ;;		Nothing
  8169 ;; This function is called by:
  8170 ;;		_UART_handler
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text35
  8175  005102                     __ptext35:
  8176                           	opt callstack 0
  8177  005102                     _GetStringSize:
  8178                           	opt callstack 27
  8179                           
  8180                           ;main.c: 302:     int i;;main.c: 303:     for(i=0;i<55;i++){
  8181                           
  8182                           ;incstack = 0
  8183  005102  0E00               	movlw	0
  8184  005104  6E09               	movwf	GetStringSize@i+1,c
  8185  005106  0E00               	movlw	0
  8186  005108  6E08               	movwf	GetStringSize@i,c
  8187  00510A                     l6671:
  8188                           
  8189                           ;main.c: 304:         if(tx_buffer[i] == 0){
  8190  00510A  0E70               	movlw	low _tx_buffer
  8191  00510C  2408               	addwf	GetStringSize@i,w,c
  8192  00510E  6ED9               	movwf	fsr2l,c
  8193  005110  0E01               	movlw	high _tx_buffer
  8194  005112  2009               	addwfc	GetStringSize@i+1,w,c
  8195  005114  6EDA               	movwf	fsr2h,c
  8196  005116  50DF               	movf	indf2,w,c
  8197  005118  B4D8               	btfsc	status,2,c
  8198  00511A  D00A               	goto	u9190
  8199                           
  8200                           ;main.c: 307:     }
  8201  00511C  4A08               	infsnz	GetStringSize@i,f,c
  8202  00511E  2A09               	incf	GetStringSize@i+1,f,c
  8203  005120  BE09               	btfsc	GetStringSize@i+1,7,c
  8204  005122  D7F3               	goto	l6671
  8205  005124  5009               	movf	GetStringSize@i+1,w,c
  8206  005126  E104               	bnz	u9190
  8207  005128  0E37               	movlw	55
  8208  00512A  5C08               	subwf	GetStringSize@i,w,c
  8209  00512C  A0D8               	btfss	status,0,c
  8210  00512E  D7ED               	goto	l6671
  8211  005130                     u9190:
  8212                           
  8213                           ;main.c: 308:     return i;
  8214  005130  0060  F020  F006   	movff	GetStringSize@i,?_GetStringSize
  8215  005136  0060  F024  F007   	movff	GetStringSize@i+1,?_GetStringSize+1
  8216  00513C  0012               	return		;funcret
  8217  00513E                     __end_of_GetStringSize:
  8218                           	opt callstack 0
  8219                           
  8220 ;; *************** function _UART1_ReceiveCommand *****************
  8221 ;; Defined at:
  8222 ;;		line 83 in file "UART1.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;		None
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  i               1   13[COMRAM] unsigned char 
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  1    wreg      unsigned char 
  8229 ;; Registers used:
  8230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8238 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8239 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8240 ;;Total ram usage:        3 bytes
  8241 ;; Hardware stack levels used:    1
  8242 ;; Hardware stack levels required when called:    3
  8243 ;; This function calls:
  8244 ;;		___wmul
  8245 ;; This function is called by:
  8246 ;;		_main
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text36
  8251  003692                     __ptext36:
  8252                           	opt callstack 0
  8253  003692                     _UART1_ReceiveCommand:
  8254                           	opt callstack 27
  8255                           
  8256                           ;UART1.c: 84:     if(rx_counter == 0)
  8257                           
  8258                           ;incstack = 0
  8259  003692  505A               	movf	_rx_counter,w,c
  8260  003694  A4D8               	btfss	status,2,c
  8261  003696  D002               	goto	l6801
  8262  003698                     u9270:
  8263                           
  8264                           ;UART1.c: 85:         return 0;
  8265  003698  0E00               	movlw	0
  8266  00369A  0012               	return	
  8267  00369C                     l6801:
  8268                           
  8269                           ;UART1.c: 86:     if(rx_counter == 1 && rx_buffer[0] != 'W' && rx_buffer[0] != 'R' && rx
      +                          _buffer[0] != 'C'){
  8270  00369C  045A               	decf	_rx_counter,w,c
  8271  00369E  A4D8               	btfss	status,2,c
  8272  0036A0  D010               	goto	l6815
  8273  0036A2  0E57               	movlw	87
  8274  0036A4  0100               	movlb	0	; () banked
  8275  0036A6  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8276  0036A8  B4D8               	btfsc	status,2,c
  8277  0036AA  D00B               	goto	l6815
  8278                           
  8279                           ; BSR set to: 0
  8280  0036AC  0E52               	movlw	82
  8281  0036AE  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8282  0036B0  B4D8               	btfsc	status,2,c
  8283  0036B2  D007               	goto	l6815
  8284                           
  8285                           ; BSR set to: 0
  8286  0036B4  0E43               	movlw	67
  8287  0036B6  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8288  0036B8  B4D8               	btfsc	status,2,c
  8289  0036BA  D003               	goto	l6815
  8290  0036BC                     u9310:
  8291                           
  8292                           ;UART1.c: 87:         rx_counter = 0;
  8293  0036BC  0E00               	movlw	0
  8294  0036BE  6E5A               	movwf	_rx_counter,c
  8295  0036C0  D7EB               	goto	u9270
  8296  0036C2                     l6815:
  8297                           
  8298                           ;UART1.c: 90:     if(rx_buffer[0] == 'R') {
  8299  0036C2  0E52               	movlw	82
  8300  0036C4  0100               	movlb	0	; () banked
  8301  0036C6  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8302  0036C8  A4D8               	btfss	status,2,c
  8303  0036CA  D032               	goto	l6859
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;UART1.c: 91:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57))
      +                          ){
  8307  0036CC  0E02               	movlw	2
  8308  0036CE  185A               	xorwf	_rx_counter,w,c
  8309  0036D0  A4D8               	btfss	status,2,c
  8310  0036D2  D007               	goto	l6825
  8311                           
  8312                           ; BSR set to: 0
  8313  0036D4  0E2F               	movlw	47
  8314  0036D6  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8315  0036D8  D7F1               	goto	u9310
  8316                           
  8317                           ; BSR set to: 0
  8318  0036DA  0E39               	movlw	57
  8319  0036DC  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8320  0036DE  D001               	goto	l6825
  8321  0036E0  D7ED               	goto	u9310
  8322  0036E2                     l6825:
  8323                           
  8324                           ; BSR set to: 0
  8325  0036E2  0E03               	movlw	3
  8326  0036E4  185A               	xorwf	_rx_counter,w,c
  8327  0036E6  A4D8               	btfss	status,2,c
  8328  0036E8  D004               	goto	l6831
  8329                           
  8330                           ; BSR set to: 0
  8331  0036EA  0E0D               	movlw	13
  8332  0036EC  19C8               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8333  0036EE  A4D8               	btfss	status,2,c
  8334  0036F0  D7E5               	goto	u9310
  8335  0036F2                     l6831:
  8336                           
  8337                           ; BSR set to: 0
  8338  0036F2  0E04               	movlw	4
  8339  0036F4  185A               	xorwf	_rx_counter,w,c
  8340  0036F6  A4D8               	btfss	status,2,c
  8341  0036F8  D7CF               	goto	u9270
  8342                           
  8343                           ; BSR set to: 0
  8344                           ;UART1.c: 96:             if(rx_buffer[0] != 'R' || (rx_buffer[1] < 48) || (rx_buffer[1]
      +                           > 57) || rx_buffer[2] != '\r' || rx_buffer[3] != '\n'){
  8345  0036FA  0E52               	movlw	82
  8346  0036FC  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8347  0036FE  A4D8               	btfss	status,2,c
  8348  003700  D7DD               	goto	u9310
  8349                           
  8350                           ; BSR set to: 0
  8351  003702  0E2F               	movlw	47
  8352  003704  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8353  003706  D7DA               	goto	u9310
  8354                           
  8355                           ; BSR set to: 0
  8356  003708  0E3A               	movlw	58
  8357  00370A  61C7               	cpfslt	(_rx_buffer+1)& (0+255),b
  8358  00370C  D7D7               	goto	u9310
  8359                           
  8360                           ; BSR set to: 0
  8361  00370E  0E0D               	movlw	13
  8362  003710  19C8               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8363  003712  A4D8               	btfss	status,2,c
  8364  003714  D7D3               	goto	u9310
  8365                           
  8366                           ; BSR set to: 0
  8367  003716  0E0A               	movlw	10
  8368  003718  19C9               	xorwf	(_rx_buffer+3)& (0+255),w,b
  8369  00371A  A4D8               	btfss	status,2,c
  8370  00371C  D7CF               	goto	u9310
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;UART1.c: 100:             COMMAND_WR = 1;
  8374  00371E  0E01               	movlw	1
  8375  003720  6FF6               	movwf	_COMMAND_WR& (0+255),b
  8376                           
  8377                           ; BSR set to: 0
  8378                           ;UART1.c: 101:             COMMAND = rx_buffer[1]-48;
  8379  003722  51C7               	movf	(_rx_buffer+1)& (0+255),w,b
  8380  003724  0FD0               	addlw	208
  8381  003726  6FF5               	movwf	_COMMAND& (0+255),b
  8382  003728                     l6853:
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;UART1.c: 102:             rx_counter = 0;
  8386  003728  0E00               	movlw	0
  8387  00372A  6E5A               	movwf	_rx_counter,c
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;UART1.c: 103:             return 1;
  8391  00372C  0E01               	movlw	1
  8392  00372E  0012               	return	
  8393  003730                     l6859:
  8394                           
  8395                           ; BSR set to: 0
  8396  003730  0E57               	movlw	87
  8397  003732  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8398  003734  A4D8               	btfss	status,2,c
  8399  003736  D09A               	goto	l6953
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;UART1.c: 106:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57)
      +                          )){
  8403  003738  0E02               	movlw	2
  8404  00373A  185A               	xorwf	_rx_counter,w,c
  8405  00373C  A4D8               	btfss	status,2,c
  8406  00373E  D007               	goto	l6869
  8407                           
  8408                           ; BSR set to: 0
  8409  003740  0E2F               	movlw	47
  8410  003742  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8411  003744  D7BB               	goto	u9310
  8412                           
  8413                           ; BSR set to: 0
  8414  003746  0E39               	movlw	57
  8415  003748  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8416  00374A  D001               	goto	l6869
  8417  00374C  D7B7               	goto	u9310
  8418  00374E                     l6869:
  8419                           
  8420                           ; BSR set to: 0
  8421  00374E  0E03               	movlw	3
  8422  003750  185A               	xorwf	_rx_counter,w,c
  8423  003752  A4D8               	btfss	status,2,c
  8424  003754  D007               	goto	l6877
  8425                           
  8426                           ; BSR set to: 0
  8427  003756  0E2F               	movlw	47
  8428  003758  65C8               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8429  00375A  D7B0               	goto	u9310
  8430                           
  8431                           ; BSR set to: 0
  8432  00375C  0E39               	movlw	57
  8433  00375E  65C8               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8434  003760  D001               	goto	l6877
  8435  003762  D7AC               	goto	u9310
  8436  003764                     l6877:
  8437                           
  8438                           ; BSR set to: 0
  8439  003764  0E04               	movlw	4
  8440  003766  185A               	xorwf	_rx_counter,w,c
  8441  003768  A4D8               	btfss	status,2,c
  8442  00376A  D007               	goto	l6885
  8443                           
  8444                           ; BSR set to: 0
  8445  00376C  0E2F               	movlw	47
  8446  00376E  65C9               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8447  003770  D7A5               	goto	u9310
  8448                           
  8449                           ; BSR set to: 0
  8450  003772  0E39               	movlw	57
  8451  003774  65C9               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8452  003776  D001               	goto	l6885
  8453  003778  D7A1               	goto	u9310
  8454  00377A                     l6885:
  8455                           
  8456                           ; BSR set to: 0
  8457  00377A  0E05               	movlw	5
  8458  00377C  185A               	xorwf	_rx_counter,w,c
  8459  00377E  A4D8               	btfss	status,2,c
  8460  003780  D007               	goto	l6893
  8461                           
  8462                           ; BSR set to: 0
  8463  003782  0E2F               	movlw	47
  8464  003784  65CA               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8465  003786  D79A               	goto	u9310
  8466                           
  8467                           ; BSR set to: 0
  8468  003788  0E39               	movlw	57
  8469  00378A  65CA               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8470  00378C  D001               	goto	l6893
  8471  00378E  D796               	goto	u9310
  8472  003790                     l6893:
  8473                           
  8474                           ; BSR set to: 0
  8475  003790  0E06               	movlw	6
  8476  003792  185A               	xorwf	_rx_counter,w,c
  8477  003794  A4D8               	btfss	status,2,c
  8478  003796  D007               	goto	l6901
  8479                           
  8480                           ; BSR set to: 0
  8481  003798  0E2F               	movlw	47
  8482  00379A  65CB               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8483  00379C  D78F               	goto	u9310
  8484                           
  8485                           ; BSR set to: 0
  8486  00379E  0E39               	movlw	57
  8487  0037A0  65CB               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8488  0037A2  D001               	goto	l6901
  8489  0037A4  D78B               	goto	u9310
  8490  0037A6                     l6901:
  8491                           
  8492                           ; BSR set to: 0
  8493  0037A6  0E07               	movlw	7
  8494  0037A8  185A               	xorwf	_rx_counter,w,c
  8495  0037AA  A4D8               	btfss	status,2,c
  8496  0037AC  D004               	goto	l6907
  8497                           
  8498                           ; BSR set to: 0
  8499  0037AE  0E0D               	movlw	13
  8500  0037B0  19CC               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8501  0037B2  A4D8               	btfss	status,2,c
  8502  0037B4  D783               	goto	u9310
  8503  0037B6                     l6907:
  8504                           
  8505                           ; BSR set to: 0
  8506  0037B6  0E08               	movlw	8
  8507  0037B8  185A               	xorwf	_rx_counter,w,c
  8508  0037BA  A4D8               	btfss	status,2,c
  8509  0037BC  D76D               	goto	u9270
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;UART1.c: 119:             if(rx_buffer[0] != 'W' || (rx_buffer[1] < 48) || (rx_buffer[1
      +                          ] > 57) || (rx_buffer[2] < 48) || (rx_buffer[2] > 57) || (rx_buffer[3] < 48) || (rx_buff
      +                          er[3] > 57) || (rx_buffer[4] < 48) || (rx_buffer[4] > 57) || (rx_buffer[5] < 48) || (rx_
      +                          buffer[5] > 57) || rx_buffer[6] != '\r' || rx_buffer[7] != '\n'){
  8513  0037BE  0E57               	movlw	87
  8514  0037C0  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8515  0037C2  A4D8               	btfss	status,2,c
  8516  0037C4  D77B               	goto	u9310
  8517                           
  8518                           ; BSR set to: 0
  8519  0037C6  0E2F               	movlw	47
  8520  0037C8  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8521  0037CA  D778               	goto	u9310
  8522                           
  8523                           ; BSR set to: 0
  8524  0037CC  0E3A               	movlw	58
  8525  0037CE  61C7               	cpfslt	(_rx_buffer+1)& (0+255),b
  8526  0037D0  D775               	goto	u9310
  8527                           
  8528                           ; BSR set to: 0
  8529  0037D2  0E2F               	movlw	47
  8530  0037D4  65C8               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8531  0037D6  D772               	goto	u9310
  8532                           
  8533                           ; BSR set to: 0
  8534  0037D8  0E3A               	movlw	58
  8535  0037DA  61C8               	cpfslt	(_rx_buffer+2)& (0+255),b
  8536  0037DC  D76F               	goto	u9310
  8537                           
  8538                           ; BSR set to: 0
  8539  0037DE  0E2F               	movlw	47
  8540  0037E0  65C9               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8541  0037E2  D76C               	goto	u9310
  8542                           
  8543                           ; BSR set to: 0
  8544  0037E4  0E3A               	movlw	58
  8545  0037E6  61C9               	cpfslt	(_rx_buffer+3)& (0+255),b
  8546  0037E8  D769               	goto	u9310
  8547                           
  8548                           ; BSR set to: 0
  8549  0037EA  0E2F               	movlw	47
  8550  0037EC  65CA               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8551  0037EE  D766               	goto	u9310
  8552                           
  8553                           ; BSR set to: 0
  8554  0037F0  0E3A               	movlw	58
  8555  0037F2  61CA               	cpfslt	(_rx_buffer+4)& (0+255),b
  8556  0037F4  D763               	goto	u9310
  8557                           
  8558                           ; BSR set to: 0
  8559  0037F6  0E2F               	movlw	47
  8560  0037F8  65CB               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8561  0037FA  D760               	goto	u9310
  8562                           
  8563                           ; BSR set to: 0
  8564  0037FC  0E3A               	movlw	58
  8565  0037FE  61CB               	cpfslt	(_rx_buffer+5)& (0+255),b
  8566  003800  D75D               	goto	u9310
  8567                           
  8568                           ; BSR set to: 0
  8569  003802  0E0D               	movlw	13
  8570  003804  19CC               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8571  003806  A4D8               	btfss	status,2,c
  8572  003808  D759               	goto	u9310
  8573                           
  8574                           ; BSR set to: 0
  8575  00380A  0E0A               	movlw	10
  8576  00380C  19CD               	xorwf	(_rx_buffer+7)& (0+255),w,b
  8577  00380E  A4D8               	btfss	status,2,c
  8578  003810  D755               	goto	u9310
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;UART1.c: 123:             COMMAND_WR = 0;
  8582  003812  0E00               	movlw	0
  8583  003814  6FF6               	movwf	_COMMAND_WR& (0+255),b
  8584                           
  8585                           ; BSR set to: 0
  8586                           ;UART1.c: 124:             COMMAND = rx_buffer[1]-48;
  8587  003816  51C7               	movf	(_rx_buffer+1)& (0+255),w,b
  8588  003818  0FD0               	addlw	208
  8589  00381A  6FF5               	movwf	_COMMAND& (0+255),b
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;UART1.c: 125:             COMMAND_WRITE_NUMBER = ((rx_buffer[2]-48) * 1000) + ((rx_buff
      +                          er[3]-48) * 100) + ((rx_buffer[4]-48) * 10) + (rx_buffer[5]-48);
  8593  00381C  0060  F320  F006   	movff	_rx_buffer+2,___wmul@multiplier
  8594  003822  6A07               	clrf	___wmul@multiplier+1,c
  8595  003824  0E03               	movlw	3
  8596  003826  6E09               	movwf	___wmul@multiplicand+1,c
  8597  003828  0EE8               	movlw	232
  8598  00382A  6E08               	movwf	___wmul@multiplicand,c
  8599  00382C  EC08  F029         	call	___wmul	;wreg free
  8600  003830  0100               	movlb	0	; () banked
  8601  003832  51C9               	movf	(_rx_buffer+3)& (0+255),w,b
  8602  003834  0D64               	mullw	100
  8603  003836  006F FFCC  F00C    	movff	prodl,??_UART1_ReceiveCommand
  8604  00383C  006F FFD0  F00D    	movff	prodh,??_UART1_ReceiveCommand+1
  8605  003842  51CA               	movf	(_rx_buffer+4)& (0+255),w,b
  8606  003844  0D0A               	mullw	10
  8607  003846  50F3               	movf	prodl,w,c
  8608  003848  260C               	addwf	??_UART1_ReceiveCommand,f,c
  8609  00384A  50F4               	movf	prodh,w,c
  8610  00384C  220D               	addwfc	??_UART1_ReceiveCommand+1,f,c
  8611  00384E  5006               	movf	?___wmul,w,c
  8612  003850  260C               	addwf	??_UART1_ReceiveCommand,f,c
  8613  003852  5007               	movf	?___wmul+1,w,c
  8614  003854  220D               	addwfc	??_UART1_ReceiveCommand+1,f,c
  8615  003856  51CB               	movf	(_rx_buffer+5)& (0+255),w,b
  8616  003858  260C               	addwf	??_UART1_ReceiveCommand,f,c
  8617  00385A  0E00               	movlw	0
  8618  00385C  220D               	addwfc	??_UART1_ReceiveCommand+1,f,c
  8619  00385E  0EB0               	movlw	176
  8620  003860  240C               	addwf	??_UART1_ReceiveCommand,w,c
  8621  003862  6FEE               	movwf	_COMMAND_WRITE_NUMBER& (0+255),b
  8622  003864  0E2F               	movlw	47
  8623  003866  200D               	addwfc	??_UART1_ReceiveCommand+1,w,c
  8624  003868  6FEF               	movwf	(_COMMAND_WRITE_NUMBER+1)& (0+255),b
  8625  00386A  D75E               	goto	l6853
  8626  00386C                     l6953:
  8627                           
  8628                           ; BSR set to: 0
  8629  00386C  0E43               	movlw	67
  8630  00386E  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8631  003870  A4D8               	btfss	status,2,c
  8632  003872  D712               	goto	u9270
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;UART1.c: 130:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57)
      +                          )){
  8636  003874  0E02               	movlw	2
  8637  003876  185A               	xorwf	_rx_counter,w,c
  8638  003878  A4D8               	btfss	status,2,c
  8639  00387A  D007               	goto	l6963
  8640                           
  8641                           ; BSR set to: 0
  8642  00387C  0E2F               	movlw	47
  8643  00387E  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8644  003880  D71D               	goto	u9310
  8645                           
  8646                           ; BSR set to: 0
  8647  003882  0E39               	movlw	57
  8648  003884  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8649  003886  D001               	goto	l6963
  8650  003888  D719               	goto	u9310
  8651  00388A                     l6963:
  8652                           
  8653                           ; BSR set to: 0
  8654  00388A  0E03               	movlw	3
  8655  00388C  185A               	xorwf	_rx_counter,w,c
  8656  00388E  A4D8               	btfss	status,2,c
  8657  003890  D004               	goto	l6969
  8658                           
  8659                           ; BSR set to: 0
  8660  003892  0E2E               	movlw	46
  8661  003894  19C8               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8662  003896  A4D8               	btfss	status,2,c
  8663  003898  D711               	goto	u9310
  8664  00389A                     l6969:
  8665                           
  8666                           ; BSR set to: 0
  8667  00389A  0E04               	movlw	4
  8668  00389C  185A               	xorwf	_rx_counter,w,c
  8669  00389E  A4D8               	btfss	status,2,c
  8670  0038A0  D007               	goto	l6977
  8671                           
  8672                           ; BSR set to: 0
  8673  0038A2  0E2F               	movlw	47
  8674  0038A4  65C9               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8675  0038A6  D70A               	goto	u9310
  8676                           
  8677                           ; BSR set to: 0
  8678  0038A8  0E39               	movlw	57
  8679  0038AA  65C9               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8680  0038AC  D001               	goto	l6977
  8681  0038AE  D706               	goto	u9310
  8682  0038B0                     l6977:
  8683                           
  8684                           ; BSR set to: 0
  8685  0038B0  0E05               	movlw	5
  8686  0038B2  185A               	xorwf	_rx_counter,w,c
  8687  0038B4  A4D8               	btfss	status,2,c
  8688  0038B6  D007               	goto	l6985
  8689                           
  8690                           ; BSR set to: 0
  8691  0038B8  0E2F               	movlw	47
  8692  0038BA  65CA               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8693  0038BC  D6FF               	goto	u9310
  8694                           
  8695                           ; BSR set to: 0
  8696  0038BE  0E39               	movlw	57
  8697  0038C0  65CA               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8698  0038C2  D001               	goto	l6985
  8699  0038C4  D6FB               	goto	u9310
  8700  0038C6                     l6985:
  8701                           
  8702                           ; BSR set to: 0
  8703  0038C6  0E06               	movlw	6
  8704  0038C8  185A               	xorwf	_rx_counter,w,c
  8705  0038CA  A4D8               	btfss	status,2,c
  8706  0038CC  D007               	goto	l6993
  8707                           
  8708                           ; BSR set to: 0
  8709  0038CE  0E2F               	movlw	47
  8710  0038D0  65CB               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8711  0038D2  D6F4               	goto	u9310
  8712                           
  8713                           ; BSR set to: 0
  8714  0038D4  0E39               	movlw	57
  8715  0038D6  65CB               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8716  0038D8  D001               	goto	l6993
  8717  0038DA  D6F0               	goto	u9310
  8718  0038DC                     l6993:
  8719                           
  8720                           ; BSR set to: 0
  8721  0038DC  0E07               	movlw	7
  8722  0038DE  185A               	xorwf	_rx_counter,w,c
  8723  0038E0  A4D8               	btfss	status,2,c
  8724  0038E2  D007               	goto	l7001
  8725                           
  8726                           ; BSR set to: 0
  8727  0038E4  0E2F               	movlw	47
  8728  0038E6  65CC               	cpfsgt	(_rx_buffer+6)& (0+255),b
  8729  0038E8  D6E9               	goto	u9310
  8730                           
  8731                           ; BSR set to: 0
  8732  0038EA  0E39               	movlw	57
  8733  0038EC  65CC               	cpfsgt	(_rx_buffer+6)& (0+255),b
  8734  0038EE  D001               	goto	l7001
  8735  0038F0  D6E5               	goto	u9310
  8736  0038F2                     l7001:
  8737                           
  8738                           ; BSR set to: 0
  8739  0038F2  0E08               	movlw	8
  8740  0038F4  185A               	xorwf	_rx_counter,w,c
  8741  0038F6  A4D8               	btfss	status,2,c
  8742  0038F8  D007               	goto	l7009
  8743                           
  8744                           ; BSR set to: 0
  8745  0038FA  0E2F               	movlw	47
  8746  0038FC  65CD               	cpfsgt	(_rx_buffer+7)& (0+255),b
  8747  0038FE  D6DE               	goto	u9310
  8748                           
  8749                           ; BSR set to: 0
  8750  003900  0E39               	movlw	57
  8751  003902  65CD               	cpfsgt	(_rx_buffer+7)& (0+255),b
  8752  003904  D001               	goto	l7009
  8753  003906  D6DA               	goto	u9310
  8754  003908                     l7009:
  8755                           
  8756                           ; BSR set to: 0
  8757  003908  0E09               	movlw	9
  8758  00390A  185A               	xorwf	_rx_counter,w,c
  8759  00390C  A4D8               	btfss	status,2,c
  8760  00390E  D007               	goto	l7017
  8761                           
  8762                           ; BSR set to: 0
  8763  003910  0E2F               	movlw	47
  8764  003912  65CE               	cpfsgt	(_rx_buffer+8)& (0+255),b
  8765  003914  D6D3               	goto	u9310
  8766                           
  8767                           ; BSR set to: 0
  8768  003916  0E39               	movlw	57
  8769  003918  65CE               	cpfsgt	(_rx_buffer+8)& (0+255),b
  8770  00391A  D001               	goto	l7017
  8771  00391C  D6CF               	goto	u9310
  8772  00391E                     l7017:
  8773                           
  8774                           ; BSR set to: 0
  8775  00391E  0E0A               	movlw	10
  8776  003920  185A               	xorwf	_rx_counter,w,c
  8777  003922  A4D8               	btfss	status,2,c
  8778  003924  D004               	goto	l7023
  8779                           
  8780                           ; BSR set to: 0
  8781  003926  0E0D               	movlw	13
  8782  003928  19CF               	xorwf	(_rx_buffer+9)& (0+255),w,b
  8783  00392A  A4D8               	btfss	status,2,c
  8784  00392C  D6C7               	goto	u9310
  8785  00392E                     l7023:
  8786                           
  8787                           ; BSR set to: 0
  8788  00392E  0E0B               	movlw	11
  8789  003930  185A               	xorwf	_rx_counter,w,c
  8790  003932  A4D8               	btfss	status,2,c
  8791  003934  D6B1               	goto	u9270
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;UART1.c: 149:             for(unsigned char i = 3;i<9;i++){
  8795  003936  0E03               	movlw	3
  8796  003938  6E0E               	movwf	UART1_ReceiveCommand@i,c
  8797  00393A                     l7031:
  8798                           
  8799                           ;UART1.c: 150:                 if(rx_buffer[i] < 48 || rx_buffer[i] > 57){
  8800  00393A  0EC6               	movlw	low _rx_buffer
  8801  00393C  240E               	addwf	UART1_ReceiveCommand@i,w,c
  8802  00393E  6ED9               	movwf	fsr2l,c
  8803  003940  6ADA               	clrf	fsr2h,c
  8804  003942  0E00               	movlw	high _rx_buffer
  8805  003944  22DA               	addwfc	fsr2h,f,c
  8806  003946  0E2F               	movlw	47
  8807  003948  64DF               	cpfsgt	indf2,c
  8808  00394A  D6B8               	goto	u9310
  8809  00394C  0EC6               	movlw	low _rx_buffer
  8810  00394E  240E               	addwf	UART1_ReceiveCommand@i,w,c
  8811  003950  6ED9               	movwf	fsr2l,c
  8812  003952  6ADA               	clrf	fsr2h,c
  8813  003954  0E00               	movlw	high _rx_buffer
  8814  003956  22DA               	addwfc	fsr2h,f,c
  8815  003958  0E39               	movlw	57
  8816  00395A  64DF               	cpfsgt	indf2,c
  8817  00395C  D001               	goto	l7041
  8818  00395E  D6AE               	goto	u9310
  8819  003960                     l7041:
  8820                           
  8821                           ;UART1.c: 154:                 COMMAND_CURRENT_LIMIT[i-1] = rx_buffer[i];
  8822  003960  0EC6               	movlw	low _rx_buffer
  8823  003962  240E               	addwf	UART1_ReceiveCommand@i,w,c
  8824  003964  6ED9               	movwf	fsr2l,c
  8825  003966  6ADA               	clrf	fsr2h,c
  8826  003968  0E00               	movlw	high _rx_buffer
  8827  00396A  22DA               	addwfc	fsr2h,f,c
  8828  00396C  0EA6               	movlw	low (_COMMAND_CURRENT_LIMIT+65535)
  8829  00396E  240E               	addwf	UART1_ReceiveCommand@i,w,c
  8830  003970  6EE1               	movwf	fsr1l,c
  8831  003972  6AE2               	clrf	fsr1h,c
  8832  003974  0E01               	movlw	high (_COMMAND_CURRENT_LIMIT+65535)
  8833  003976  22E2               	addwfc	fsr1h,f,c
  8834  003978  006F FF7F FFE7     	movff	indf2,indf1
  8835                           
  8836                           ;UART1.c: 155:             }
  8837  00397E  2A0E               	incf	UART1_ReceiveCommand@i,f,c
  8838  003980  0E08               	movlw	8
  8839  003982  640E               	cpfsgt	UART1_ReceiveCommand@i,c
  8840  003984  D7DA               	goto	l7031
  8841                           
  8842                           ;UART1.c: 156:             if(rx_buffer[0] != 'C' || rx_buffer[2] != '.' || rx_buffer[9]
      +                           != '\r' || rx_buffer[10] != '\n'){
  8843  003986  0E43               	movlw	67
  8844  003988  0100               	movlb	0	; () banked
  8845  00398A  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8846  00398C  A4D8               	btfss	status,2,c
  8847  00398E  D696               	goto	u9310
  8848                           
  8849                           ; BSR set to: 0
  8850  003990  0E2E               	movlw	46
  8851  003992  19C8               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8852  003994  A4D8               	btfss	status,2,c
  8853  003996  D692               	goto	u9310
  8854                           
  8855                           ; BSR set to: 0
  8856  003998  0E0D               	movlw	13
  8857  00399A  19CF               	xorwf	(_rx_buffer+9)& (0+255),w,b
  8858  00399C  A4D8               	btfss	status,2,c
  8859  00399E  D68E               	goto	u9310
  8860                           
  8861                           ; BSR set to: 0
  8862  0039A0  0E0A               	movlw	10
  8863  0039A2  19D0               	xorwf	(_rx_buffer+10)& (0+255),w,b
  8864  0039A4  A4D8               	btfss	status,2,c
  8865  0039A6  D68A               	goto	u9310
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;UART1.c: 160:             COMMAND_CURRENT_LIMIT[0] = rx_buffer[1];
  8869                           
  8870                           ;UART1.c: 159:             }
  8871  0039A8  C0C7  F1A7         	movff	_rx_buffer+1,_COMMAND_CURRENT_LIMIT
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;UART1.c: 161:             COMMAND_CURRENT_LIMIT[1] = '.';
  8875  0039AC  0E2E               	movlw	46
  8876  0039AE  0101               	movlb	1	; () banked
  8877  0039B0  6FA8               	movwf	(_COMMAND_CURRENT_LIMIT+1)& (0+255),b
  8878                           
  8879                           ;UART1.c: 162:             COMMAND_WR = 0;
  8880  0039B2  0E00               	movlw	0
  8881  0039B4  0100               	movlb	0	; () banked
  8882  0039B6  6FF6               	movwf	_COMMAND_WR& (0+255),b
  8883                           
  8884                           ;UART1.c: 163:             COMMAND = 2;
  8885  0039B8  0E02               	movlw	2
  8886  0039BA  D6B5               	goto	L13
  8887  0039BC                     __end_of_UART1_ReceiveCommand:
  8888                           	opt callstack 0
  8889                           
  8890 ;; *************** function ___wmul *****************
  8891 ;; Defined at:
  8892 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;  multiplier      2    5[COMRAM] unsigned int 
  8895 ;;  multiplicand    2    7[COMRAM] unsigned int 
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;  product         2    9[COMRAM] unsigned int 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  2    5[COMRAM] unsigned int 
  8900 ;; Registers used:
  8901 ;;		wreg, status,2, status,0, prodl, prodh
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8910 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8911 ;;Total ram usage:        6 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:    2
  8914 ;; This function calls:
  8915 ;;		Nothing
  8916 ;; This function is called by:
  8917 ;;		_UART1_ReceiveCommand
  8918 ;; This function uses a non-reentrant model
  8919 ;;
  8920                           
  8921                           	psect	text37
  8922  005210                     __ptext37:
  8923                           	opt callstack 0
  8924  005210                     ___wmul:
  8925                           	opt callstack 27
  8926                           
  8927                           ;incstack = 0
  8928  005210  5006               	movf	___wmul@multiplier,w,c
  8929  005212  0208               	mulwf	___wmul@multiplicand,c
  8930  005214  006F FFCC  F00A    	movff	prodl,___wmul@product
  8931  00521A  006F FFD0  F00B    	movff	prodh,___wmul@product+1
  8932  005220  5006               	movf	___wmul@multiplier,w,c
  8933  005222  0209               	mulwf	___wmul@multiplicand+1,c
  8934  005224  50F3               	movf	prodl,w,c
  8935  005226  260B               	addwf	___wmul@product+1,f,c
  8936  005228  5007               	movf	___wmul@multiplier+1,w,c
  8937  00522A  0208               	mulwf	___wmul@multiplicand,c
  8938  00522C  50F3               	movf	prodl,w,c
  8939  00522E  260B               	addwf	___wmul@product+1,f,c
  8940  005230  0060  F028  F006   	movff	___wmul@product,?___wmul
  8941  005236  0060  F02C  F007   	movff	___wmul@product+1,?___wmul+1
  8942  00523C  0012               	return		;funcret
  8943  00523E                     __end_of___wmul:
  8944                           	opt callstack 0
  8945                           
  8946 ;; *************** function _UART1_Init *****************
  8947 ;; Defined at:
  8948 ;;		line 4 in file "UART1.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;  baud_rate       1    wreg     unsigned char 
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;  baud_rate       1    7[COMRAM] unsigned char 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      void 
  8955 ;; Registers used:
  8956 ;;		wreg, status,2, status,0
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8965 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8966 ;;Total ram usage:        3 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; Hardware stack levels required when called:    2
  8969 ;; This function calls:
  8970 ;;		Nothing
  8971 ;; This function is called by:
  8972 ;;		_main
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text38
  8977  004C84                     __ptext38:
  8978                           	opt callstack 0
  8979  004C84                     _UART1_Init:
  8980                           	opt callstack 28
  8981                           
  8982                           ;incstack = 0
  8983                           ;UART1_Init@baud_rate stored from wreg
  8984  004C84  6E08               	movwf	UART1_Init@baud_rate,c
  8985                           
  8986                           ;UART1.c: 6:     TRISCbits.TRISC6 = 1;
  8987  004C86  8CC4               	bsf	16324,6,c	;volatile
  8988                           
  8989                           ;UART1.c: 7:     TRISCbits.TRISC7 = 0;
  8990  004C88  9EC4               	bcf	16324,7,c	;volatile
  8991                           
  8992                           ;UART1.c: 8:     ANSELCbits.ANSELC6 = 0;
  8993  004C8A  013A               	movlb	58	; () banked
  8994  004C8C  9D60               	bcf	96,6,b	;volatile
  8995                           
  8996                           ;UART1.c: 9:     ANSELCbits.ANSELC7 = 0;
  8997  004C8E  9F60               	bcf	96,7,b	;volatile
  8998                           
  8999                           ; BSR set to: 58
  9000                           ;UART1.c: 10:     U1RXPPS = 0x16;
  9001  004C90  0E16               	movlw	22
  9002  004C92  6FE5               	movwf	229,b	;volatile
  9003                           
  9004                           ;UART1.c: 11:     RC7PPS = 0x13;
  9005  004C94  0E13               	movlw	19
  9006  004C96  6F17               	movwf	23,b	;volatile
  9007                           
  9008                           ;UART1.c: 14:     switch(baud_rate){
  9009  004C98  D010               	goto	l6735
  9010  004C9A                     l6725:
  9011                           
  9012                           ; BSR set to: 58
  9013                           ;UART1.c: 16:             U1BRGH = 0x03;
  9014  004C9A  0E03               	movlw	3
  9015  004C9C  013D               	movlb	61	; () banked
  9016  004C9E  6FF6               	movwf	246,b	;volatile
  9017                           
  9018                           ;UART1.c: 17:             U1BRGL = 0x40;
  9019  004CA0  0E40               	movlw	64
  9020  004CA2  D009               	goto	L15
  9021  004CA4                     l6727:
  9022                           
  9023                           ; BSR set to: 58
  9024                           ;UART1.c: 20:             U1BRGH = 0x01;
  9025  004CA4  0E01               	movlw	1
  9026  004CA6  013D               	movlb	61	; () banked
  9027  004CA8  6FF6               	movwf	246,b	;volatile
  9028                           
  9029                           ;UART1.c: 21:             U1BRGL = 0x14;
  9030  004CAA  0E14               	movlw	20
  9031  004CAC  D004               	goto	L15
  9032  004CAE                     l6729:
  9033                           
  9034                           ; BSR set to: 58
  9035                           ;UART1.c: 24:             U1BRGH = 0x00;
  9036  004CAE  0E00               	movlw	0
  9037  004CB0  013D               	movlb	61	; () banked
  9038  004CB2  6FF6               	movwf	246,b	;volatile
  9039                           
  9040                           ;UART1.c: 25:             U1BRGL = 0x89;
  9041  004CB4  0E89               	movlw	137
  9042  004CB6                     L15:
  9043  004CB6  6FF5               	movwf	245,b	;volatile
  9044                           
  9045                           ;UART1.c: 26:             break;
  9046  004CB8  D010               	goto	l6737
  9047  004CBA                     l6735:
  9048                           
  9049                           ; BSR set to: 58
  9050  004CBA  5008               	movf	UART1_Init@baud_rate,w,c
  9051  004CBC  6E06               	movwf	??_UART1_Init& (0+255),c
  9052  004CBE  6A07               	clrf	(??_UART1_Init+1)& (0+255),c
  9053                           
  9054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9055                           ; Switch size 1, requested type "simple"
  9056                           ; Number of cases is 1, Range of values is 0 to 0
  9057                           ; switch strategies available:
  9058                           ; Name         Instructions Cycles
  9059                           ; simple_byte            4     3 (average)
  9060                           ;	Chosen strategy is simple_byte
  9061  004CC0  5007               	movf	??_UART1_Init+1,w,c
  9062  004CC2  0A00               	xorlw	0	; case 0
  9063  004CC4  A4D8               	btfss	status,2,c
  9064  004CC6  D7F3               	goto	l6729
  9065                           
  9066                           ; BSR set to: 58
  9067                           ; Switch size 1, requested type "simple"
  9068                           ; Number of cases is 3, Range of values is 1 to 3
  9069                           ; switch strategies available:
  9070                           ; Name         Instructions Cycles
  9071                           ; simple_byte           10     6 (average)
  9072                           ;	Chosen strategy is simple_byte
  9073  004CC8  5006               	movf	??_UART1_Init,w,c
  9074  004CCA  0A01               	xorlw	1	; case 1
  9075  004CCC  B4D8               	btfsc	status,2,c
  9076  004CCE  D7E5               	goto	l6725
  9077  004CD0  0A03               	xorlw	3	; case 2
  9078  004CD2  B4D8               	btfsc	status,2,c
  9079  004CD4  D7E7               	goto	l6727
  9080  004CD6  0A01               	xorlw	1	; case 3
  9081  004CD8  D7EA               	goto	l6729
  9082  004CDA                     l6737:
  9083                           
  9084                           ; BSR set to: 61
  9085                           ;UART1.c: 33:     rx_counter = 0;
  9086  004CDA  0E00               	movlw	0
  9087  004CDC  6E5A               	movwf	_rx_counter,c
  9088                           
  9089                           ;UART1.c: 35:     U1CON0 = 0xB0;
  9090  004CDE  0EB0               	movlw	176
  9091  004CE0  6FF2               	movwf	242,b	;volatile
  9092                           
  9093                           ;UART1.c: 36:     U1CON1 = 0x00;
  9094  004CE2  0E00               	movlw	0
  9095  004CE4  6FF3               	movwf	243,b	;volatile
  9096                           
  9097                           ;UART1.c: 37:     U2CON2 = 0x80;
  9098  004CE6  0E80               	movlw	128
  9099  004CE8  6FDC               	movwf	220,b	;volatile
  9100                           
  9101                           ;UART1.c: 38:     U1ERRIE = 0x00;
  9102  004CEA  0E00               	movlw	0
  9103  004CEC  6FFA               	movwf	250,b	;volatile
  9104                           
  9105                           ;UART1.c: 39:     U1UIR = 0x00;
  9106  004CEE  0E00               	movlw	0
  9107  004CF0  6FF8               	movwf	248,b	;volatile
  9108                           
  9109                           ; BSR set to: 61
  9110                           ;UART1.c: 40:     PIE3bits.U1RXIE = 1;
  9111  004CF2  0139               	movlb	57	; () banked
  9112  004CF4  8793               	bsf	147,3,b	;volatile
  9113                           
  9114                           ; BSR set to: 57
  9115                           ;UART1.c: 41:     PIE3bits.U1TXIE =1;
  9116  004CF6  8993               	bsf	147,4,b	;volatile
  9117                           
  9118                           ; BSR set to: 57
  9119                           ;UART1.c: 42:     IPR3bits.U1RXIP = 1;
  9120  004CF8  8783               	bsf	131,3,b	;volatile
  9121                           
  9122                           ; BSR set to: 57
  9123                           ;UART1.c: 43:     IPR3bits.U1TXIP = 1;
  9124  004CFA  8983               	bsf	131,4,b	;volatile
  9125                           
  9126                           ;UART1.c: 44:     PIR3 = 0x00;
  9127  004CFC  0E00               	movlw	0
  9128  004CFE  6FA3               	movwf	163,b	;volatile
  9129                           
  9130                           ; BSR set to: 57
  9131                           ;UART1.c: 45:     U1CON1bits.ON = 1;
  9132  004D00  013D               	movlb	61	; () banked
  9133  004D02  8FF3               	bsf	243,7,b	;volatile
  9134                           
  9135                           ; BSR set to: 61
  9136  004D04  0012               	return		;funcret
  9137  004D06                     __end_of_UART1_Init:
  9138                           	opt callstack 0
  9139                           
  9140 ;; *************** function _I2C_Init *****************
  9141 ;; Defined at:
  9142 ;;		line 4 in file "I2C.c"
  9143 ;; Parameters:    Size  Location     Type
  9144 ;;		None
  9145 ;; Auto vars:     Size  Location     Type
  9146 ;;		None
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  1    wreg      void 
  9149 ;; Registers used:
  9150 ;;		wreg, status,2
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9160 ;;Total ram usage:        0 bytes
  9161 ;; Hardware stack levels used:    1
  9162 ;; Hardware stack levels required when called:    2
  9163 ;; This function calls:
  9164 ;;		Nothing
  9165 ;; This function is called by:
  9166 ;;		_main
  9167 ;; This function uses a non-reentrant model
  9168 ;;
  9169                           
  9170                           	psect	text39
  9171  004DE8                     __ptext39:
  9172                           	opt callstack 0
  9173  004DE8                     _I2C_Init:
  9174                           	opt callstack 28
  9175                           
  9176                           ;I2C.c: 6:     TRISBbits.TRISB1 = 0;
  9177                           
  9178                           ; BSR set to: 61
  9179                           ;incstack = 0
  9180  004DE8  92C3               	bcf	16323,1,c	;volatile
  9181                           
  9182                           ;I2C.c: 7:     TRISBbits.TRISB0 = 0;
  9183  004DEA  90C3               	bcf	16323,0,c	;volatile
  9184                           
  9185                           ;I2C.c: 8:     LATBbits.LATB1 = 0;
  9186  004DEC  92BB               	bcf	16315,1,c	;volatile
  9187                           
  9188                           ;I2C.c: 9:     LATBbits.LATB0 = 0;
  9189  004DEE  90BB               	bcf	16315,0,c	;volatile
  9190                           
  9191                           ;I2C.c: 10:     ANSELBbits.ANSELB1 = 0;
  9192  004DF0  013A               	movlb	58	; () banked
  9193  004DF2  9350               	bcf	80,1,b	;volatile
  9194                           
  9195                           ;I2C.c: 11:     ANSELBbits.ANSELB0 = 0;
  9196  004DF4  9150               	bcf	80,0,b	;volatile
  9197                           
  9198                           ;I2C.c: 12:     ODCONBbits.ODCB1 = 1;
  9199  004DF6  8352               	bsf	82,1,b	;volatile
  9200                           
  9201                           ;I2C.c: 13:     ODCONBbits.ODCB0 = 1;
  9202  004DF8  8152               	bsf	82,0,b	;volatile
  9203                           
  9204                           ; BSR set to: 58
  9205                           ;I2C.c: 14:     RB1I2C = 0x01;
  9206  004DFA  0E01               	movlw	1
  9207  004DFC  6F5A               	movwf	90,b	;volatile
  9208                           
  9209                           ; BSR set to: 58
  9210                           ;I2C.c: 15:     SLRCONBbits.SLRB1 = 0;
  9211  004DFE  9353               	bcf	83,1,b	;volatile
  9212                           
  9213                           ; BSR set to: 58
  9214                           ;I2C.c: 16:     SLRCONBbits.SLRB0 = 0;
  9215  004E00  9153               	bcf	83,0,b	;volatile
  9216                           
  9217                           ;I2C.c: 17:     I2C1SCLPPS = 0x09;
  9218  004E02  0E09               	movlw	9
  9219  004E04  6FE1               	movwf	225,b	;volatile
  9220                           
  9221                           ;I2C.c: 18:     I2C1SDAPPS = 0x08;
  9222  004E06  0E08               	movlw	8
  9223  004E08  6FE2               	movwf	226,b	;volatile
  9224                           
  9225                           ;I2C.c: 19:     RB1PPS = 0x21;
  9226  004E0A  0E21               	movlw	33
  9227  004E0C  6F09               	movwf	9,b	;volatile
  9228                           
  9229                           ;I2C.c: 20:     RB0PPS = 0x22;
  9230  004E0E  0E22               	movlw	34
  9231  004E10  6F08               	movwf	8,b	;volatile
  9232                           
  9233                           ;I2C.c: 22:     I2C1CON0 = 0x04;
  9234  004E12  0E04               	movlw	4
  9235  004E14  013D               	movlb	61	; () banked
  9236  004E16  6F73               	movwf	115,b	;volatile
  9237                           
  9238                           ;I2C.c: 23:     I2C1CON1 = 0x80;
  9239  004E18  0E80               	movlw	128
  9240  004E1A  6F74               	movwf	116,b	;volatile
  9241                           
  9242                           ;I2C.c: 24:     I2C1CON2 = 0x24;
  9243  004E1C  0E24               	movlw	36
  9244  004E1E  6F75               	movwf	117,b	;volatile
  9245                           
  9246                           ;I2C.c: 25:     I2C1CLK = 0x03;
  9247  004E20  0E03               	movlw	3
  9248  004E22  6F7B               	movwf	123,b	;volatile
  9249                           
  9250                           ;I2C.c: 27:     I2C1PIR = 0x00;
  9251  004E24  0E00               	movlw	0
  9252  004E26  6F79               	movwf	121,b	;volatile
  9253                           
  9254                           ;I2C.c: 28:     I2C1ERR = 0x00;
  9255  004E28  0E00               	movlw	0
  9256  004E2A  6F76               	movwf	118,b	;volatile
  9257                           
  9258                           ;I2C.c: 30:     I2C_STOP_DETECTED = 1;
  9259  004E2C  0E01               	movlw	1
  9260  004E2E  0100               	movlb	0	; () banked
  9261  004E30  6FF2               	movwf	_I2C_STOP_DETECTED& (0+255),b
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;I2C.c: 32:     IPR3bits.I2C1TXIP = 0;
  9265  004E32  0139               	movlb	57	; () banked
  9266  004E34  9183               	bcf	131,0,b	;volatile
  9267                           
  9268                           ; BSR set to: 57
  9269                           ;I2C.c: 33:     IPR2bits.I2C1RXIP = 0;
  9270  004E36  9F82               	bcf	130,7,b	;volatile
  9271                           
  9272                           ; BSR set to: 57
  9273                           ;I2C.c: 34:     PIR3bits.I2C1TXIF = 0;
  9274  004E38  91A3               	bcf	163,0,b	;volatile
  9275                           
  9276                           ; BSR set to: 57
  9277                           ;I2C.c: 35:     PIR2bits.I2C1RXIF = 0;
  9278  004E3A  9FA2               	bcf	162,7,b	;volatile
  9279                           
  9280                           ; BSR set to: 57
  9281                           ;I2C.c: 36:     PIE3bits.I2C1TXIE = 1;
  9282  004E3C  8193               	bsf	147,0,b	;volatile
  9283                           
  9284                           ; BSR set to: 57
  9285                           ;I2C.c: 37:     PIE2bits.I2C1RXIE = 1;
  9286  004E3E  8F92               	bsf	146,7,b	;volatile
  9287                           
  9288                           ; BSR set to: 57
  9289                           ;I2C.c: 40:     I2C1PIRbits.PC1IF = 0;
  9290  004E40  013D               	movlb	61	; () banked
  9291  004E42  9579               	bcf	121,2,b	;volatile
  9292                           
  9293                           ; BSR set to: 61
  9294                           ;I2C.c: 41:     I2C1PIEbits.PC1IE = 1;
  9295  004E44  857A               	bsf	122,2,b	;volatile
  9296                           
  9297                           ; BSR set to: 61
  9298                           ;I2C.c: 42:     IPR3bits.I2C1IP = 0;
  9299  004E46  0139               	movlb	57	; () banked
  9300  004E48  9383               	bcf	131,1,b	;volatile
  9301                           
  9302                           ; BSR set to: 57
  9303                           ;I2C.c: 43:     PIR3bits.I2C1IF = 0;
  9304  004E4A  93A3               	bcf	163,1,b	;volatile
  9305                           
  9306                           ; BSR set to: 57
  9307                           ;I2C.c: 44:     PIE3bits.I2C1IE = 1;
  9308  004E4C  8393               	bsf	147,1,b	;volatile
  9309                           
  9310                           ; BSR set to: 57
  9311                           ;I2C.c: 46:     I2C1CON0bits.EN = 1;
  9312  004E4E  013D               	movlb	61	; () banked
  9313  004E50  8F73               	bsf	115,7,b	;volatile
  9314                           
  9315                           ; BSR set to: 61
  9316  004E52  0012               	return		;funcret
  9317  004E54                     __end_of_I2C_Init:
  9318                           	opt callstack 0
  9319                           
  9320 ;; *************** function _ADC_Init *****************
  9321 ;; Defined at:
  9322 ;;		line 257 in file "main.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;		None
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;		None
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  1    wreg      void 
  9329 ;; Registers used:
  9330 ;;		wreg, status,2
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9340 ;;Total ram usage:        0 bytes
  9341 ;; Hardware stack levels used:    1
  9342 ;; Hardware stack levels required when called:    2
  9343 ;; This function calls:
  9344 ;;		Nothing
  9345 ;; This function is called by:
  9346 ;;		_main
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text40
  9351  00528C                     __ptext40:
  9352                           	opt callstack 0
  9353  00528C                     _ADC_Init:
  9354                           	opt callstack 28
  9355                           
  9356                           ;main.c: 259:     TRISBbits.TRISB4 = 1;
  9357                           
  9358                           ; BSR set to: 61
  9359                           ;incstack = 0
  9360  00528C  88C3               	bsf	16323,4,c	;volatile
  9361                           
  9362                           ;main.c: 260:     ANSELBbits.ANSELB4 = 1;
  9363  00528E  013A               	movlb	58	; () banked
  9364  005290  8950               	bsf	80,4,b	;volatile
  9365                           
  9366                           ; BSR set to: 58
  9367                           ;main.c: 261:     ADCON0 = 0x94;
  9368  005292  0E94               	movlw	148
  9369  005294  013E               	movlb	62	; () banked
  9370  005296  6FF8               	movwf	248,b	;volatile
  9371                           
  9372                           ;main.c: 262:     ADCON1 = 0x00;
  9373  005298  0E00               	movlw	0
  9374  00529A  6FF9               	movwf	249,b	;volatile
  9375                           
  9376                           ;main.c: 263:     ADCON2 = 0x00;
  9377  00529C  0E00               	movlw	0
  9378  00529E  6FFA               	movwf	250,b	;volatile
  9379                           
  9380                           ;main.c: 264:     ADREF = 0x00;
  9381  0052A0  0E00               	movlw	0
  9382  0052A2  6FFD               	movwf	253,b	;volatile
  9383                           
  9384                           ; BSR set to: 62
  9385                           ;main.c: 265:     IPR1bits.ADIP = 0;
  9386  0052A4  0139               	movlb	57	; () banked
  9387  0052A6  9581               	bcf	129,2,b	;volatile
  9388                           
  9389                           ; BSR set to: 57
  9390                           ;main.c: 266:     PIE1bits.ADIE = 1;
  9391  0052A8  8591               	bsf	145,2,b	;volatile
  9392                           
  9393                           ; BSR set to: 57
  9394                           ;main.c: 267:     PIR1bits.ADIF = 0;
  9395  0052AA  95A1               	bcf	161,2,b	;volatile
  9396                           
  9397                           ; BSR set to: 57
  9398  0052AC  0012               	return		;funcret
  9399  0052AE                     __end_of_ADC_Init:
  9400                           	opt callstack 0
  9401                           
  9402 ;; *************** function _TIMER0_ISR *****************
  9403 ;; Defined at:
  9404 ;;		line 68 in file "main.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;		None
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;		None
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  1    wreg      void 
  9411 ;; Registers used:
  9412 ;;		wreg, status,2, status,0, cstack
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9422 ;;Total ram usage:        0 bytes
  9423 ;; Hardware stack levels used:    1
  9424 ;; Hardware stack levels required when called:    1
  9425 ;; This function calls:
  9426 ;;		_ADC_Start
  9427 ;; This function is called by:
  9428 ;;		Interrupt level 2
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           	psect	text41
  9433  004F74                     __ptext41:
  9434                           	opt callstack 0
  9435  004F74                     _TIMER0_ISR:
  9436                           	opt callstack 20
  9437                           
  9438                           ;main.c: 69:     T0CON0bits.EN = 0;
  9439                           
  9440                           ; BSR set to: 57
  9441                           ;incstack = 0
  9442  004F74  9EB8               	bcf	16312,7,c	;volatile
  9443                           
  9444                           ;main.c: 70:     counter_timer0 ++;
  9445  004F76  0100               	movlb	0	; () banked
  9446  004F78  2BF1               	incf	_counter_timer0& (0+255),f,b
  9447                           
  9448                           ; BSR set to: 0
  9449                           ;main.c: 71:     if(counter_timer0 == 2){
  9450  004F7A  0E02               	movlw	2
  9451  004F7C  19F1               	xorwf	_counter_timer0& (0+255),w,b
  9452  004F7E  A4D8               	btfss	status,2,c
  9453  004F80  D002               	goto	i2l5187
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;main.c: 72:         LATAbits.LA0 = 0;
  9457  004F82  90BA               	bcf	16314,0,c	;volatile
  9458                           
  9459                           ;main.c: 73:     }else if(counter_timer0 == 40){
  9460  004F84  D009               	goto	i2l160
  9461  004F86                     i2l5187:
  9462                           
  9463                           ; BSR set to: 0
  9464  004F86  0E28               	movlw	40
  9465  004F88  19F1               	xorwf	_counter_timer0& (0+255),w,b
  9466  004F8A  A4D8               	btfss	status,2,c
  9467  004F8C  D005               	goto	i2l160
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;main.c: 74:         if(led_enable)
  9471  004F8E  51F0               	movf	_led_enable& (0+255),w,b
  9472  004F90  A4D8               	btfss	status,2,c
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;main.c: 75:             LATAbits.LA0 = 1;
  9476  004F92  80BA               	bsf	16314,0,c	;volatile
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;main.c: 76:         counter_timer0 = 0;
  9480  004F94  0E00               	movlw	0
  9481  004F96  6FF1               	movwf	_counter_timer0& (0+255),b
  9482  004F98                     i2l160:
  9483                           
  9484                           ; BSR set to: 0
  9485                           ;main.c: 78:     TMR0L = 0xB0;
  9486  004F98  0EB0               	movlw	176
  9487  004F9A  6EB6               	movwf	16310,c	;volatile
  9488                           
  9489                           ;main.c: 79:     TMR0H = 0x3C;
  9490  004F9C  0E3C               	movlw	60
  9491  004F9E  6EB7               	movwf	16311,c	;volatile
  9492                           
  9493                           ;main.c: 80:     if(measur_vol_or_cur)
  9494  004FA0  51FE               	movf	_measur_vol_or_cur& (0+255),w,b
  9495  004FA2  B4D8               	btfsc	status,2,c
  9496  004FA4  D004               	goto	i2l5197
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;main.c: 81:         ADC_Start(12);
  9500  004FA6  0E0C               	movlw	12
  9501  004FA8  EC94  F029         	call	_ADC_Start
  9502  004FAC  D003               	goto	i2l5199
  9503  004FAE                     i2l5197:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;main.c: 83:         ADC_Start(13);
  9507  004FAE  0E0D               	movlw	13
  9508  004FB0  EC94  F029         	call	_ADC_Start
  9509  004FB4                     i2l5199:
  9510                           
  9511                           ;main.c: 84:     measur_vol_or_cur = !measur_vol_or_cur;
  9512  004FB4  0100               	movlb	0	; () banked
  9513  004FB6  51FE               	movf	_measur_vol_or_cur& (0+255),w,b
  9514  004FB8  A4D8               	btfss	status,2,c
  9515  004FBA  D002               	goto	i2u675_40
  9516  004FBC  0E01               	movlw	1
  9517  004FBE  D001               	goto	i2u676_40
  9518  004FC0                     i2u675_40:
  9519  004FC0  0E00               	movlw	0
  9520  004FC2                     i2u676_40:
  9521  004FC2  6FFE               	movwf	_measur_vol_or_cur& (0+255),b
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;main.c: 85:     PIR3bits.TMR0IF = 0;
  9525  004FC4  0139               	movlb	57	; () banked
  9526  004FC6  9FA3               	bcf	163,7,b	;volatile
  9527                           
  9528                           ; BSR set to: 57
  9529                           ;main.c: 86:     T0CON0bits.EN = 1;
  9530  004FC8  8EB8               	bsf	16312,7,c	;volatile
  9531                           
  9532                           ; BSR set to: 57
  9533  004FCA  0011               	retfie		f
  9534  004FCC                     __end_of_TIMER0_ISR:
  9535                           	opt callstack 0
  9536                           
  9537 ;; *************** function _ADC_Start *****************
  9538 ;; Defined at:
  9539 ;;		line 271 in file "main.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  pin             1    wreg     unsigned char 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;  pin             1    0[COMRAM] unsigned char 
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  1    wreg      void 
  9546 ;; Registers used:
  9547 ;;		wreg
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9557 ;;Total ram usage:        1 bytes
  9558 ;; Hardware stack levels used:    1
  9559 ;; This function calls:
  9560 ;;		Nothing
  9561 ;; This function is called by:
  9562 ;;		_TIMER0_ISR
  9563 ;; This function uses a non-reentrant model
  9564 ;;
  9565                           
  9566                           	psect	text42
  9567  005328                     __ptext42:
  9568                           	opt callstack 0
  9569  005328                     _ADC_Start:
  9570                           	opt callstack 20
  9571                           
  9572                           ; BSR set to: 57
  9573                           ;incstack = 0
  9574                           ;ADC_Start@pin stored from wreg
  9575  005328  6E01               	movwf	ADC_Start@pin,c
  9576                           
  9577                           ;main.c: 272:     if(!ADCON0bits.GO){
  9578  00532A  013E               	movlb	62	; () banked
  9579  00532C  B1F8               	btfsc	248,0,b	;volatile
  9580  00532E  0012               	return	
  9581                           
  9582                           ; BSR set to: 62
  9583                           ;main.c: 273:         ADPCH = pin;
  9584  005330  0060  F007  FEF1   	movff	ADC_Start@pin,16113	;volatile
  9585                           
  9586                           ; BSR set to: 62
  9587                           ;main.c: 274:         ADCON0bits.GO = 1;
  9588  005336  81F8               	bsf	248,0,b	;volatile
  9589                           
  9590                           ; BSR set to: 62
  9591  005338  0012               	return		;funcret
  9592  00533A                     __end_of_ADC_Start:
  9593                           	opt callstack 0
  9594                           
  9595 ;; *************** function _UART1_TX_ISR *****************
  9596 ;; Defined at:
  9597 ;;		line 89 in file "main.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;		None
  9600 ;; Auto vars:     Size  Location     Type
  9601 ;;		None
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  1    wreg      void 
  9604 ;; Registers used:
  9605 ;;		None
  9606 ;; Tracked objects:
  9607 ;;		On entry : 0/0
  9608 ;;		On exit  : 0/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9615 ;;Total ram usage:        0 bytes
  9616 ;; Hardware stack levels used:    1
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		Interrupt level 2
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text43
  9625  00533C                     __ptext43:
  9626                           	opt callstack 0
  9627  00533C                     _UART1_TX_ISR:
  9628                           	opt callstack 21
  9629                           
  9630                           ;main.c: 91:     U1TXB = tx_byte;
  9631                           
  9632                           ; BSR set to: 62
  9633                           ;incstack = 0
  9634  00533C  0060  F3DF  FDEA   	movff	_tx_byte,15850	;volatile
  9635                           
  9636                           ;main.c: 92:     PIE3bits.U1TXIE = 0;
  9637  005342  0139               	movlb	57	; () banked
  9638  005344  9993               	bcf	147,4,b	;volatile
  9639                           
  9640                           ; BSR set to: 57
  9641  005346  0011               	retfie		f
  9642  005348                     __end_of_UART1_TX_ISR:
  9643                           	opt callstack 0
  9644                           
  9645 ;; *************** function _UART1_RX_ISR *****************
  9646 ;; Defined at:
  9647 ;;		line 95 in file "main.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;		None
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      void 
  9654 ;; Registers used:
  9655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;Total ram usage:        0 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; This function calls:
  9668 ;;		Nothing
  9669 ;; This function is called by:
  9670 ;;		Interrupt level 2
  9671 ;; This function uses a non-reentrant model
  9672 ;;
  9673                           
  9674                           	psect	text44
  9675  0052FC                     __ptext44:
  9676                           	opt callstack 0
  9677  0052FC                     _UART1_RX_ISR:
  9678                           	opt callstack 21
  9679                           
  9680                           ;main.c: 96:     rx_buffer[rx_counter] = U1RXB;
  9681                           
  9682                           ; BSR set to: 57
  9683                           ;incstack = 0
  9684  0052FC  0EC6               	movlw	low _rx_buffer
  9685  0052FE  245A               	addwf	_rx_counter,w,c
  9686  005300  6ED9               	movwf	fsr2l,c
  9687  005302  6ADA               	clrf	fsr2h,c
  9688  005304  0E00               	movlw	high _rx_buffer
  9689  005306  22DA               	addwfc	fsr2h,f,c
  9690  005308  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9691                           
  9692                           ;main.c: 97:     rx_counter ++;
  9693  00530E  2A5A               	incf	_rx_counter,f,c
  9694  005310  0011               	retfie		f
  9695  005312                     __end_of_UART1_RX_ISR:
  9696                           	opt callstack 0
  9697                           
  9698 ;; *************** function _ADC_ISR *****************
  9699 ;; Defined at:
  9700 ;;		line 100 in file "main.c"
  9701 ;; Parameters:    Size  Location     Type
  9702 ;;		None
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  adc_result      2    3[COMRAM] int 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9717 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9718 ;;Total ram usage:        4 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; This function calls:
  9721 ;;		Nothing
  9722 ;; This function is called by:
  9723 ;;		Interrupt level 2
  9724 ;; This function uses a non-reentrant model
  9725 ;;
  9726                           
  9727                           	psect	text45
  9728  005078                     __ptext45:
  9729                           	opt callstack 0
  9730  005078                     _ADC_ISR:
  9731                           	opt callstack 21
  9732                           
  9733                           ;main.c: 101:     int adc_result = ADRESL;
  9734                           
  9735                           ;incstack = 0
  9736  005078  006F FBBC  F004    	movff	16111,ADC_ISR@adc_result	;volatile
  9737  00507E  6A05               	clrf	ADC_ISR@adc_result+1,c
  9738                           
  9739                           ;main.c: 102:     adc_result = adc_result | (ADRESH <<8);
  9740  005080  013E               	movlb	62	; () banked
  9741  005082  51F0               	movf	240,w,b	;volatile
  9742  005084  6E03               	movwf	(??_ADC_ISR+1)& (0+255),c
  9743  005086  6A02               	clrf	??_ADC_ISR& (0+255),c
  9744  005088  5004               	movf	ADC_ISR@adc_result,w,c
  9745  00508A  1002               	iorwf	??_ADC_ISR,w,c
  9746  00508C  6E04               	movwf	ADC_ISR@adc_result,c
  9747  00508E  5005               	movf	ADC_ISR@adc_result+1,w,c
  9748  005090  1003               	iorwf	??_ADC_ISR+1,w,c
  9749  005092  6E05               	movwf	ADC_ISR@adc_result+1,c
  9750                           
  9751                           ;main.c: 103:     if(ADPCH == 12)
  9752  005094  0E0C               	movlw	12
  9753  005096  19F1               	xorwf	241,w,b	;volatile
  9754  005098  A4D8               	btfss	status,2,c
  9755  00509A  D007               	goto	i2l5217
  9756                           
  9757                           ; BSR set to: 62
  9758                           ;main.c: 104:         ADC_VOLTAGE_RESULT = adc_result;
  9759  00509C  0060  F010  F0EC   	movff	ADC_ISR@adc_result,_ADC_VOLTAGE_RESULT
  9760  0050A2  0060  F014  F0ED   	movff	ADC_ISR@adc_result+1,_ADC_VOLTAGE_RESULT+1
  9761  0050A8  D00A               	goto	i2l181
  9762  0050AA                     i2l5217:
  9763                           
  9764                           ; BSR set to: 62
  9765  0050AA  0E0D               	movlw	13
  9766  0050AC  19F1               	xorwf	241,w,b	;volatile
  9767  0050AE  A4D8               	btfss	status,2,c
  9768  0050B0  D006               	goto	i2l181
  9769                           
  9770                           ; BSR set to: 62
  9771                           ;main.c: 106:         ADC_CURRENT_RESULT = adc_result;
  9772  0050B2  0060  F010  F0EA   	movff	ADC_ISR@adc_result,_ADC_CURRENT_RESULT
  9773  0050B8  0060  F014  F0EB   	movff	ADC_ISR@adc_result+1,_ADC_CURRENT_RESULT+1
  9774  0050BE                     i2l181:
  9775                           
  9776                           ; BSR set to: 62
  9777                           ;main.c: 107:     PIR1bits.ADIF = 0;
  9778  0050BE  0139               	movlb	57	; () banked
  9779  0050C0  95A1               	bcf	161,2,b	;volatile
  9780                           
  9781                           ; BSR set to: 57
  9782  0050C2  0011               	retfie		f
  9783  0050C4                     __end_of_ADC_ISR:
  9784                           	opt callstack 0
  9785                           
  9786 ;; *************** function _I2C_TX_ISR *****************
  9787 ;; Defined at:
  9788 ;;		line 110 in file "main.c"
  9789 ;; Parameters:    Size  Location     Type
  9790 ;;		None
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;		None
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      void 
  9795 ;; Registers used:
  9796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9806 ;;Total ram usage:        0 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		Interrupt level 2
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           	psect	text46
  9816  0052B0                     __ptext46:
  9817                           	opt callstack 0
  9818  0052B0                     _I2C_TX_ISR:
  9819                           	opt callstack 21
  9820                           
  9821                           ;main.c: 111:     I2C1TXB = I2C_TX_BUFFER[I2C_TX_COUNTER];
  9822                           
  9823                           ; BSR set to: 57
  9824                           ;incstack = 0
  9825  0052B0  0E0A               	movlw	low _I2C_TX_BUFFER
  9826  0052B2  0100               	movlb	0	; () banked
  9827  0052B4  25F4               	addwf	_I2C_TX_COUNTER& (0+255),w,b
  9828  0052B6  6ED9               	movwf	fsr2l,c
  9829  0052B8  6ADA               	clrf	fsr2h,c
  9830  0052BA  0E01               	movlw	high _I2C_TX_BUFFER
  9831  0052BC  22DA               	addwfc	fsr2h,f,c
  9832  0052BE  50DF               	movf	indf2,w,c
  9833  0052C0  013D               	movlb	61	; () banked
  9834  0052C2  6F6B               	movwf	107,b	;volatile
  9835                           
  9836                           ; BSR set to: 61
  9837                           ;main.c: 112:     I2C_TX_COUNTER ++;
  9838  0052C4  0100               	movlb	0	; () banked
  9839  0052C6  2BF4               	incf	_I2C_TX_COUNTER& (0+255),f,b
  9840                           
  9841                           ; BSR set to: 0
  9842  0052C8  0011               	retfie		f
  9843  0052CA                     __end_of_I2C_TX_ISR:
  9844                           	opt callstack 0
  9845                           
  9846 ;; *************** function _I2C_RX_ISR *****************
  9847 ;; Defined at:
  9848 ;;		line 114 in file "main.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;		None
  9851 ;; Auto vars:     Size  Location     Type
  9852 ;;		None
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  1    wreg      void 
  9855 ;; Registers used:
  9856 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9857 ;; Tracked objects:
  9858 ;;		On entry : 0/0
  9859 ;;		On exit  : 0/0
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9866 ;;Total ram usage:        0 bytes
  9867 ;; Hardware stack levels used:    1
  9868 ;; This function calls:
  9869 ;;		Nothing
  9870 ;; This function is called by:
  9871 ;;		Interrupt level 2
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           	psect	text47
  9876  0052E4                     __ptext47:
  9877                           	opt callstack 0
  9878  0052E4                     _I2C_RX_ISR:
  9879                           	opt callstack 21
  9880                           
  9881                           ;main.c: 115:     I2C_RX_BUFFER[I2C_RX_COUNTER] = I2C1RXB;
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;incstack = 0
  9885  0052E4  0E00               	movlw	low _I2C_RX_BUFFER
  9886  0052E6  0100               	movlb	0	; () banked
  9887  0052E8  25F3               	addwf	_I2C_RX_COUNTER& (0+255),w,b
  9888  0052EA  6ED9               	movwf	fsr2l,c
  9889  0052EC  6ADA               	clrf	fsr2h,c
  9890  0052EE  0E01               	movlw	high _I2C_RX_BUFFER
  9891  0052F0  22DA               	addwfc	fsr2h,f,c
  9892  0052F2  006F F5AB FFDF     	movff	15722,indf2	;volatile
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;main.c: 116:     I2C_RX_COUNTER ++;
  9896  0052F8  2BF3               	incf	_I2C_RX_COUNTER& (0+255),f,b
  9897                           
  9898                           ; BSR set to: 0
  9899  0052FA  0011               	retfie		f
  9900  0052FC                     __end_of_I2C_RX_ISR:
  9901                           	opt callstack 0
  9902                           
  9903 ;; *************** function _I2C_GENERAL_ISR *****************
  9904 ;; Defined at:
  9905 ;;		line 119 in file "main.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;		None
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;		None
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  1    wreg      void 
  9912 ;; Registers used:
  9913 ;;		wreg, status,2
  9914 ;; Tracked objects:
  9915 ;;		On entry : 0/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9923 ;;Total ram usage:        0 bytes
  9924 ;; Hardware stack levels used:    1
  9925 ;; This function calls:
  9926 ;;		Nothing
  9927 ;; This function is called by:
  9928 ;;		Interrupt level 2
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932                           	psect	text48
  9933  005314                     __ptext48:
  9934                           	opt callstack 0
  9935  005314                     _I2C_GENERAL_ISR:
  9936                           	opt callstack 21
  9937                           
  9938                           ;main.c: 120:     if(I2C1PIRbits.PC1IF)
  9939                           
  9940                           ; BSR set to: 0
  9941                           ;incstack = 0
  9942  005314  013D               	movlb	61	; () banked
  9943  005316  A579               	btfss	121,2,b	;volatile
  9944  005318  D003               	goto	i2l198
  9945                           
  9946                           ; BSR set to: 61
  9947                           ;main.c: 121:         I2C_STOP_DETECTED = 1;
  9948  00531A  0E01               	movlw	1
  9949  00531C  0100               	movlb	0	; () banked
  9950  00531E  6FF2               	movwf	_I2C_STOP_DETECTED& (0+255),b
  9951  005320                     i2l198:
  9952                           
  9953                           ;main.c: 122:     I2C1PIR = 0x00;
  9954  005320  0E00               	movlw	0
  9955  005322  013D               	movlb	61	; () banked
  9956  005324  6F79               	movwf	121,b	;volatile
  9957                           
  9958                           ; BSR set to: 61
  9959  005326  0011               	retfie		f
  9960  005328                     __end_of_I2C_GENERAL_ISR:
  9961                           	opt callstack 0
  9962                           
  9963 ;; *************** function _DEFAULT_ISR *****************
  9964 ;; Defined at:
  9965 ;;		line 125 in file "main.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;		None
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;		None
  9970 ;; Return value:  Size  Location     Type
  9971 ;;                  1    wreg      void 
  9972 ;; Registers used:
  9973 ;;		None
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9983 ;;Total ram usage:        0 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; This function calls:
  9986 ;;		Nothing
  9987 ;; This function is called by:
  9988 ;;		Interrupt level 2
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text49
  9993  005350                     __ptext49:
  9994                           	opt callstack 0
  9995  005350                     _DEFAULT_ISR:
  9996                           	opt callstack 21
  9997                           
  9998                           ; BSR set to: 61
  9999                           ;incstack = 0
 10000  005350  0011               	retfie		f
 10001  005352                     __end_of_DEFAULT_ISR:
 10002                           	opt callstack 0
 10003                           
 10004                           ;
 10005                           ; Interrupt Vector Table @ 0x8
 10006                           ;
 10007                           
 10008                           	psect	ivt0x8
 10009  000008                     __pivt0x8:
 10010                           	opt callstack 0
 10011  000008                     ivt0x8_base:
 10012                           	opt callstack 0
 10013                           
 10014                           ; Vector 0 : SWINT
 10015  000008  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10016                           
 10017                           ; Vector 1 : HLVD
 10018  00000A  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10019                           
 10020                           ; Vector 2 : OSF
 10021  00000C  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10022                           
 10023                           ; Vector 3 : CSW
 10024  00000E  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10025                           
 10026                           ; Vector 4 : NVM
 10027  000010  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10028                           
 10029                           ; Vector 5 : SCAN
 10030  000012  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10031                           
 10032                           ; Vector 6 : CRC
 10033  000014  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10034                           
 10035                           ; Vector 7 : IOC
 10036  000016  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10037                           
 10038                           ; Vector 8 : INT0
 10039  000018  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10040                           
 10041                           ; Vector 9 : ZCD
 10042  00001A  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10043                           
 10044                           ; Vector 10 : AD
 10045  00001C  141E               	dw	_ADC_ISR shr (0+2)
 10046                           
 10047                           ; Vector 11 : ADT
 10048  00001E  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10049                           
 10050                           ; Vector 12 : CMP1
 10051  000020  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10052                           
 10053                           ; Vector 13 : SMT1
 10054  000022  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10055                           
 10056                           ; Vector 14 : SMT1PRA
 10057  000024  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10058                           
 10059                           ; Vector 15 : SMT1PRW
 10060  000026  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10061                           
 10062                           ; Vector 16 : DMA1SCNT
 10063  000028  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10064                           
 10065                           ; Vector 17 : DMA1DCNT
 10066  00002A  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10067                           
 10068                           ; Vector 18 : DMA1OR
 10069  00002C  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10070                           
 10071                           ; Vector 19 : DMA1A
 10072  00002E  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10073                           
 10074                           ; Vector 20 : SPI1RX
 10075  000030  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10076                           
 10077                           ; Vector 21 : SPI1TX
 10078  000032  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10079                           
 10080                           ; Vector 22 : SPI1
 10081  000034  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10082                           
 10083                           ; Vector 23 : I2C1RX
 10084  000036  14B9               	dw	_I2C_RX_ISR shr (0+2)
 10085                           
 10086                           ; Vector 24 : I2C1TX
 10087  000038  14AC               	dw	_I2C_TX_ISR shr (0+2)
 10088                           
 10089                           ; Vector 25 : I2C1
 10090  00003A  14C5               	dw	_I2C_GENERAL_ISR shr (0+2)
 10091                           
 10092                           ; Vector 26 : I2C1E
 10093  00003C  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10094                           
 10095                           ; Vector 27 : U1RX
 10096  00003E  14BF               	dw	_UART1_RX_ISR shr (0+2)
 10097                           
 10098                           ; Vector 28 : U1TX
 10099  000040  14CF               	dw	_UART1_TX_ISR shr (0+2)
 10100                           
 10101                           ; Vector 29 : U1E
 10102  000042  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10103                           
 10104                           ; Vector 30 : U1
 10105  000044  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10106                           
 10107                           ; Vector 31 : TMR0
 10108  000046  13DD               	dw	_TIMER0_ISR shr (0+2)
 10109                           
 10110                           ; Vector 32 : TMR1
 10111  000048  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10112                           
 10113                           ; Vector 33 : TMR1G
 10114  00004A  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10115                           
 10116                           ; Vector 34 : TMR2
 10117  00004C  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10118                           
 10119                           ; Vector 35 : CCP1
 10120  00004E  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10121                           
 10122                           ; Vector 36 : Undefined
 10123  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10124                           
 10125                           ; Vector 37 : NCO1
 10126  000052  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10127                           
 10128                           ; Vector 38 : CWG1
 10129  000054  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10130                           
 10131                           ; Vector 39 : CLC1
 10132  000056  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10133                           
 10134                           ; Vector 40 : INT1
 10135  000058  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10136                           
 10137                           ; Vector 41 : CMP2
 10138  00005A  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10139                           
 10140                           ; Vector 42 : DMA2SCNT
 10141  00005C  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10142                           
 10143                           ; Vector 43 : DMA2DCNT
 10144  00005E  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10145                           
 10146                           ; Vector 44 : DMA2OR
 10147  000060  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10148                           
 10149                           ; Vector 45 : DMA2A
 10150  000062  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10151                           
 10152                           ; Vector 46 : I2C2RX
 10153  000064  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10154                           
 10155                           ; Vector 47 : I2C2TX
 10156  000066  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10157                           
 10158                           ; Vector 48 : I2C2
 10159  000068  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10160                           
 10161                           ; Vector 49 : I2C2E
 10162  00006A  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10163                           
 10164                           ; Vector 50 : U2RX
 10165  00006C  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10166                           
 10167                           ; Vector 51 : U2TX
 10168  00006E  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10169                           
 10170                           ; Vector 52 : U2E
 10171  000070  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10172                           
 10173                           ; Vector 53 : U2
 10174  000072  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10175                           
 10176                           ; Vector 54 : TMR3
 10177  000074  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10178                           
 10179                           ; Vector 55 : TMR3G
 10180  000076  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10181                           
 10182                           ; Vector 56 : TMR4
 10183  000078  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10184                           
 10185                           ; Vector 57 : CCP2
 10186  00007A  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10187                           
 10188                           ; Vector 58 : Undefined
 10189  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10190                           
 10191                           ; Vector 59 : CWG2
 10192  00007E  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10193                           
 10194                           ; Vector 60 : CLC2
 10195  000080  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10196                           
 10197                           ; Vector 61 : INT2
 10198  000082  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10199                           
 10200                           ; Vector 62 : Undefined
 10201  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10202                           
 10203                           ; Vector 63 : Undefined
 10204  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10205                           
 10206                           ; Vector 64 : Undefined
 10207  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10208                           
 10209                           ; Vector 65 : Undefined
 10210  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10211                           
 10212                           ; Vector 66 : Undefined
 10213  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10214                           
 10215                           ; Vector 67 : Undefined
 10216  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10217                           
 10218                           ; Vector 68 : Undefined
 10219  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10220                           
 10221                           ; Vector 69 : Undefined
 10222  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10223                           
 10224                           ; Vector 70 : TMR5
 10225  000094  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10226                           
 10227                           ; Vector 71 : TMR5G
 10228  000096  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10229                           
 10230                           ; Vector 72 : TMR6
 10231  000098  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10232                           
 10233                           ; Vector 73 : CCP3
 10234  00009A  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10235                           
 10236                           ; Vector 74 : CWG3
 10237  00009C  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10238                           
 10239                           ; Vector 75 : CLC3
 10240  00009E  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10241                           
 10242                           ; Vector 76 : Undefined
 10243  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10244                           
 10245                           ; Vector 77 : Undefined
 10246  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10247                           
 10248                           ; Vector 78 : Undefined
 10249  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10250                           
 10251                           ; Vector 79 : Undefined
 10252  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10253                           
 10254                           ; Vector 80 : CCP4
 10255  0000A8  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10256                           
 10257                           ; Vector 81 : CLC4
 10258  0000AA  14D4               	dw	_DEFAULT_ISR shr (0+2)
 10259  0000AC                     ivt0x8_undefint:
 10260                           	opt callstack 0
 10261  0000AC  00FF               	reset	
 10262                           
 10263                           	psect	rparam
 10264  0000                     tosu	equ	0x3FFF
 10265                           tosh	equ	0x3FFE
 10266                           tosl	equ	0x3FFD
 10267                           stkptr	equ	0x3FFC
 10268                           pclatu	equ	0x3FFB
 10269                           pclath	equ	0x3FFA
 10270                           pcl	equ	0x3FF9
 10271                           tblptru	equ	0x3FF8
 10272                           tblptrh	equ	0x3FF7
 10273                           tblptrl	equ	0x3FF6
 10274                           tablat	equ	0x3FF5
 10275                           prodh	equ	0x3FF4
 10276                           prodl	equ	0x3FF3
 10277                           indf0	equ	0x3FEF
 10278                           postinc0	equ	0x3FEE
 10279                           postdec0	equ	0x3FED
 10280                           preinc0	equ	0x3FEC
 10281                           plusw0	equ	0x3FEB
 10282                           fsr0h	equ	0x3FEA
 10283                           fsr0l	equ	0x3FE9
 10284                           wreg	equ	0x3FE8
 10285                           indf1	equ	0x3FE7
 10286                           postinc1	equ	0x3FE6
 10287                           postdec1	equ	0x3FE5
 10288                           preinc1	equ	0x3FE4
 10289                           plusw1	equ	0x3FE3
 10290                           fsr1h	equ	0x3FE2
 10291                           fsr1l	equ	0x3FE1
 10292                           bsr	equ	0x3FE0
 10293                           indf2	equ	0x3FDF
 10294                           postinc2	equ	0x3FDE
 10295                           postdec2	equ	0x3FDD
 10296                           preinc2	equ	0x3FDC
 10297                           plusw2	equ	0x3FDB
 10298                           fsr2h	equ	0x3FDA
 10299                           fsr2l	equ	0x3FD9
 10300                           status	equ	0x3FD8


Data Sizes:
    Strings     170
    Constant    0
    Data        6
    BSS         232
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      90
    BANK0           160    102     160
    BANK1           256      4     179
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_9(CODE[24]), STR_8(CODE[19]), STR_7(CODE[13]), STR_6(CODE[21]), 
		 -> STR_5(CODE[20]), STR_4(CODE[24]), STR_3(CODE[51]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S2183_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_9(CODE[24]), STR_8(CODE[19]), STR_7(CODE[13]), STR_6(CODE[21]), 
		 -> STR_5(CODE[20]), STR_4(CODE[24]), STR_3(CODE[51]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_9(CODE[24]), STR_8(CODE[19]), STR_7(CODE[13]), STR_6(CODE[21]), 
		 -> STR_5(CODE[20]), STR_4(CODE[24]), STR_3(CODE[51]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    UART1_SendString@str	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    I2C_Transmit@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> AD5272_COMMANDS(BANK0[2]), 

    memset@st	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    stof@s	PTR unsigned char  size(2) Largest target is 8
		 -> COMMAND_CURRENT_LIMIT(BANK1[8]), 


Critical Paths under _main in COMRAM

    _stof->___fladd
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _UART1_SendString->_GetStringSize
    _I2C_handler->_I2C_Transmit
    _UART1_ReceiveCommand->___wmul

Critical Paths under _TIMER0_ISR in COMRAM

    _TIMER0_ISR->_ADC_Start

Critical Paths under _UART1_TX_ISR in COMRAM

    None.

Critical Paths under _UART1_RX_ISR in COMRAM

    None.

Critical Paths under _ADC_ISR in COMRAM

    None.

Critical Paths under _I2C_TX_ISR in COMRAM

    None.

Critical Paths under _I2C_RX_ISR in COMRAM

    None.

Critical Paths under _I2C_GENERAL_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UART_handler
    _UART_handler->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _TIMER0_ISR in BANK0

    None.

Critical Paths under _UART1_TX_ISR in BANK0

    None.

Critical Paths under _UART1_RX_ISR in BANK0

    None.

Critical Paths under _ADC_ISR in BANK0

    None.

Critical Paths under _I2C_TX_ISR in BANK0

    None.

Critical Paths under _I2C_RX_ISR in BANK0

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK0

    None.

Critical Paths under _DEFAULT_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UART_handler

Critical Paths under _TIMER0_ISR in BANK1

    None.

Critical Paths under _UART1_TX_ISR in BANK1

    None.

Critical Paths under _UART1_RX_ISR in BANK1

    None.

Critical Paths under _ADC_ISR in BANK1

    None.

Critical Paths under _I2C_TX_ISR in BANK1

    None.

Critical Paths under _I2C_RX_ISR in BANK1

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK1

    None.

Critical Paths under _DEFAULT_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0_ISR in BANK2

    None.

Critical Paths under _UART1_TX_ISR in BANK2

    None.

Critical Paths under _UART1_RX_ISR in BANK2

    None.

Critical Paths under _ADC_ISR in BANK2

    None.

Critical Paths under _I2C_TX_ISR in BANK2

    None.

Critical Paths under _I2C_RX_ISR in BANK2

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK2

    None.

Critical Paths under _DEFAULT_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0_ISR in BANK3

    None.

Critical Paths under _UART1_TX_ISR in BANK3

    None.

Critical Paths under _UART1_RX_ISR in BANK3

    None.

Critical Paths under _ADC_ISR in BANK3

    None.

Critical Paths under _I2C_TX_ISR in BANK3

    None.

Critical Paths under _I2C_RX_ISR in BANK3

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK3

    None.

Critical Paths under _DEFAULT_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0_ISR in BANK4

    None.

Critical Paths under _UART1_TX_ISR in BANK4

    None.

Critical Paths under _UART1_RX_ISR in BANK4

    None.

Critical Paths under _ADC_ISR in BANK4

    None.

Critical Paths under _I2C_TX_ISR in BANK4

    None.

Critical Paths under _I2C_RX_ISR in BANK4

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK4

    None.

Critical Paths under _DEFAULT_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0_ISR in BANK5

    None.

Critical Paths under _UART1_TX_ISR in BANK5

    None.

Critical Paths under _UART1_RX_ISR in BANK5

    None.

Critical Paths under _ADC_ISR in BANK5

    None.

Critical Paths under _I2C_TX_ISR in BANK5

    None.

Critical Paths under _I2C_RX_ISR in BANK5

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0_ISR in BANK6

    None.

Critical Paths under _UART1_TX_ISR in BANK6

    None.

Critical Paths under _UART1_RX_ISR in BANK6

    None.

Critical Paths under _ADC_ISR in BANK6

    None.

Critical Paths under _I2C_TX_ISR in BANK6

    None.

Critical Paths under _I2C_RX_ISR in BANK6

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0_ISR in BANK7

    None.

Critical Paths under _UART1_TX_ISR in BANK7

    None.

Critical Paths under _UART1_RX_ISR in BANK7

    None.

Critical Paths under _ADC_ISR in BANK7

    None.

Critical Paths under _I2C_TX_ISR in BANK7

    None.

Critical Paths under _I2C_RX_ISR in BANK7

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TIMER0_ISR in BANK8

    None.

Critical Paths under _UART1_TX_ISR in BANK8

    None.

Critical Paths under _UART1_RX_ISR in BANK8

    None.

Critical Paths under _ADC_ISR in BANK8

    None.

Critical Paths under _I2C_TX_ISR in BANK8

    None.

Critical Paths under _I2C_RX_ISR in BANK8

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TIMER0_ISR in BANK9

    None.

Critical Paths under _UART1_TX_ISR in BANK9

    None.

Critical Paths under _UART1_RX_ISR in BANK9

    None.

Critical Paths under _ADC_ISR in BANK9

    None.

Critical Paths under _I2C_TX_ISR in BANK9

    None.

Critical Paths under _I2C_RX_ISR in BANK9

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TIMER0_ISR in BANK10

    None.

Critical Paths under _UART1_TX_ISR in BANK10

    None.

Critical Paths under _UART1_RX_ISR in BANK10

    None.

Critical Paths under _ADC_ISR in BANK10

    None.

Critical Paths under _I2C_TX_ISR in BANK10

    None.

Critical Paths under _I2C_RX_ISR in BANK10

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TIMER0_ISR in BANK11

    None.

Critical Paths under _UART1_TX_ISR in BANK11

    None.

Critical Paths under _UART1_RX_ISR in BANK11

    None.

Critical Paths under _ADC_ISR in BANK11

    None.

Critical Paths under _I2C_TX_ISR in BANK11

    None.

Critical Paths under _I2C_RX_ISR in BANK11

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TIMER0_ISR in BANK12

    None.

Critical Paths under _UART1_TX_ISR in BANK12

    None.

Critical Paths under _UART1_RX_ISR in BANK12

    None.

Critical Paths under _ADC_ISR in BANK12

    None.

Critical Paths under _I2C_TX_ISR in BANK12

    None.

Critical Paths under _I2C_RX_ISR in BANK12

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TIMER0_ISR in BANK13

    None.

Critical Paths under _UART1_TX_ISR in BANK13

    None.

Critical Paths under _UART1_RX_ISR in BANK13

    None.

Critical Paths under _ADC_ISR in BANK13

    None.

Critical Paths under _I2C_TX_ISR in BANK13

    None.

Critical Paths under _I2C_RX_ISR in BANK13

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TIMER0_ISR in BANK14

    None.

Critical Paths under _UART1_TX_ISR in BANK14

    None.

Critical Paths under _UART1_RX_ISR in BANK14

    None.

Critical Paths under _ADC_ISR in BANK14

    None.

Critical Paths under _I2C_TX_ISR in BANK14

    None.

Critical Paths under _I2C_RX_ISR in BANK14

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TIMER0_ISR in BANK15

    None.

Critical Paths under _UART1_TX_ISR in BANK15

    None.

Critical Paths under _UART1_RX_ISR in BANK15

    None.

Critical Paths under _ADC_ISR in BANK15

    None.

Critical Paths under _I2C_TX_ISR in BANK15

    None.

Critical Paths under _I2C_RX_ISR in BANK15

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TIMER0_ISR in BANK16

    None.

Critical Paths under _UART1_TX_ISR in BANK16

    None.

Critical Paths under _UART1_RX_ISR in BANK16

    None.

Critical Paths under _ADC_ISR in BANK16

    None.

Critical Paths under _I2C_TX_ISR in BANK16

    None.

Critical Paths under _I2C_RX_ISR in BANK16

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TIMER0_ISR in BANK17

    None.

Critical Paths under _UART1_TX_ISR in BANK17

    None.

Critical Paths under _UART1_RX_ISR in BANK17

    None.

Critical Paths under _ADC_ISR in BANK17

    None.

Critical Paths under _I2C_TX_ISR in BANK17

    None.

Critical Paths under _I2C_RX_ISR in BANK17

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TIMER0_ISR in BANK18

    None.

Critical Paths under _UART1_TX_ISR in BANK18

    None.

Critical Paths under _UART1_RX_ISR in BANK18

    None.

Critical Paths under _ADC_ISR in BANK18

    None.

Critical Paths under _I2C_TX_ISR in BANK18

    None.

Critical Paths under _I2C_RX_ISR in BANK18

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TIMER0_ISR in BANK19

    None.

Critical Paths under _UART1_TX_ISR in BANK19

    None.

Critical Paths under _UART1_RX_ISR in BANK19

    None.

Critical Paths under _ADC_ISR in BANK19

    None.

Critical Paths under _I2C_TX_ISR in BANK19

    None.

Critical Paths under _I2C_RX_ISR in BANK19

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TIMER0_ISR in BANK20

    None.

Critical Paths under _UART1_TX_ISR in BANK20

    None.

Critical Paths under _UART1_RX_ISR in BANK20

    None.

Critical Paths under _ADC_ISR in BANK20

    None.

Critical Paths under _I2C_TX_ISR in BANK20

    None.

Critical Paths under _I2C_RX_ISR in BANK20

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TIMER0_ISR in BANK21

    None.

Critical Paths under _UART1_TX_ISR in BANK21

    None.

Critical Paths under _UART1_RX_ISR in BANK21

    None.

Critical Paths under _ADC_ISR in BANK21

    None.

Critical Paths under _I2C_TX_ISR in BANK21

    None.

Critical Paths under _I2C_RX_ISR in BANK21

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TIMER0_ISR in BANK22

    None.

Critical Paths under _UART1_TX_ISR in BANK22

    None.

Critical Paths under _UART1_RX_ISR in BANK22

    None.

Critical Paths under _ADC_ISR in BANK22

    None.

Critical Paths under _I2C_TX_ISR in BANK22

    None.

Critical Paths under _I2C_RX_ISR in BANK22

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TIMER0_ISR in BANK23

    None.

Critical Paths under _UART1_TX_ISR in BANK23

    None.

Critical Paths under _UART1_RX_ISR in BANK23

    None.

Critical Paths under _ADC_ISR in BANK23

    None.

Critical Paths under _I2C_TX_ISR in BANK23

    None.

Critical Paths under _I2C_RX_ISR in BANK23

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TIMER0_ISR in BANK24

    None.

Critical Paths under _UART1_TX_ISR in BANK24

    None.

Critical Paths under _UART1_RX_ISR in BANK24

    None.

Critical Paths under _ADC_ISR in BANK24

    None.

Critical Paths under _I2C_TX_ISR in BANK24

    None.

Critical Paths under _I2C_RX_ISR in BANK24

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TIMER0_ISR in BANK25

    None.

Critical Paths under _UART1_TX_ISR in BANK25

    None.

Critical Paths under _UART1_RX_ISR in BANK25

    None.

Critical Paths under _ADC_ISR in BANK25

    None.

Critical Paths under _I2C_TX_ISR in BANK25

    None.

Critical Paths under _I2C_RX_ISR in BANK25

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TIMER0_ISR in BANK26

    None.

Critical Paths under _UART1_TX_ISR in BANK26

    None.

Critical Paths under _UART1_RX_ISR in BANK26

    None.

Critical Paths under _ADC_ISR in BANK26

    None.

Critical Paths under _I2C_TX_ISR in BANK26

    None.

Critical Paths under _I2C_RX_ISR in BANK26

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TIMER0_ISR in BANK27

    None.

Critical Paths under _UART1_TX_ISR in BANK27

    None.

Critical Paths under _UART1_RX_ISR in BANK27

    None.

Critical Paths under _ADC_ISR in BANK27

    None.

Critical Paths under _I2C_TX_ISR in BANK27

    None.

Critical Paths under _I2C_RX_ISR in BANK27

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TIMER0_ISR in BANK28

    None.

Critical Paths under _UART1_TX_ISR in BANK28

    None.

Critical Paths under _UART1_RX_ISR in BANK28

    None.

Critical Paths under _ADC_ISR in BANK28

    None.

Critical Paths under _I2C_TX_ISR in BANK28

    None.

Critical Paths under _I2C_RX_ISR in BANK28

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TIMER0_ISR in BANK29

    None.

Critical Paths under _UART1_TX_ISR in BANK29

    None.

Critical Paths under _UART1_RX_ISR in BANK29

    None.

Critical Paths under _ADC_ISR in BANK29

    None.

Critical Paths under _I2C_TX_ISR in BANK29

    None.

Critical Paths under _I2C_RX_ISR in BANK29

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TIMER0_ISR in BANK30

    None.

Critical Paths under _UART1_TX_ISR in BANK30

    None.

Critical Paths under _UART1_RX_ISR in BANK30

    None.

Critical Paths under _ADC_ISR in BANK30

    None.

Critical Paths under _I2C_TX_ISR in BANK30

    None.

Critical Paths under _I2C_RX_ISR in BANK30

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TIMER0_ISR in BANK31

    None.

Critical Paths under _UART1_TX_ISR in BANK31

    None.

Critical Paths under _UART1_RX_ISR in BANK31

    None.

Critical Paths under _ADC_ISR in BANK31

    None.

Critical Paths under _I2C_TX_ISR in BANK31

    None.

Critical Paths under _I2C_RX_ISR in BANK31

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   64013
                                             84 COMRAM     1     1      0
                                            100 BANK0      2     2      0
                           _ADC_Init
                           _I2C_Init
                       _I2C_Transmit
                         _UART1_Init
               _UART1_ReceiveCommand
                       _UART_handler
                             ___flge
                            ___flmul
                           ___xxtofl
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_handler                                         6     6      0   56595
                                             98 BANK0      2     2      0
                                              0 BANK1      4     4      0
                      _GetStringSize
                        _I2C_handler
                   _UART1_SendString
                            ___flmul
                           ___xxtofl
                             _memset
                            _sprintf
                               _stof
 ---------------------------------------------------------------------------------
 (2) _stof                                                17    13      4   11986
                                             60 COMRAM    17    13      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     836
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   37616
                                             80 BANK0     18    10      8
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   35678
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   35184
                                             80 COMRAM     4     4      0
                                             56 BANK0     16    10      6
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   30487
                                             68 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3957
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             30 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4187
                                             60 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3622
                                             44 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4133
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2903
                                              5 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     3      5     431
                                              5 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _UART1_SendString                                     8     4      4     449
                                              9 COMRAM     8     4      4
                      _GetStringSize (ARG)
                     _UART1_SendByte
 ---------------------------------------------------------------------------------
 (3) _UART1_SendByte                                       1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_handler                                          2     0      2     946
                                             17 COMRAM     2     0      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C_Transmit                                        12     8      4     794
                                              5 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (2) _GetStringSize                                        4     2      2     130
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART1_ReceiveCommand                                 3     3      0     604
                                             11 COMRAM     3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _TIMER0_ISR                                          0     0      0      22
                          _ADC_Start
 ---------------------------------------------------------------------------------
 (11) _ADC_Start                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ADC_ISR                                             4     4      0      68
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_TX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_RX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_GENERAL_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Init
   _I2C_Transmit
   _UART1_Init
   _UART1_ReceiveCommand
     ___wmul
   _UART_handler
     _GetStringSize
     _I2C_handler
       _I2C_Transmit
     _UART1_SendString
       _GetStringSize (ARG)
       _UART1_SendByte (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
     _memset
     _sprintf
       ___xxtofl (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isupper
           _strncmp
           _tolower
             _isupper
     _stof
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
       ___flmul
         ___xxtofl (ARG)
       ___xxtofl
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _timer0_init

 _TIMER0_ISR (ROOT)
   _ADC_Start

 _UART1_TX_ISR (ROOT)

 _UART1_RX_ISR (ROOT)

 _ADC_ISR (ROOT)

 _I2C_TX_ISR (ROOT)

 _I2C_RX_ISR (ROOT)

 _I2C_GENERAL_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      B3       7       69.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AD      58        0.0%
DATA                 0      0     1AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri May 17 19:13:00 2019

                    ___fldiv@aexp 001E                      ___fldiv@bexp 001D  
             __size_of_I2C_RX_ISR 0018                      ___fldiv@sign 0016  
             __size_of_I2C_TX_ISR 001A            ??_UART1_ReceiveCommand 000C  
                     __CFG_CP$OFF 000000                      ___awdiv@sign 000B  
              __size_of_ADC_Start 0012               ___wmul@multiplicand 0008  
                             l209 4440                               l218 4572  
                             l605 2476                               l631 282C  
                             l564 490E                               l949 4700  
                             _pad 48D4                   __end_of_ADC_ISR 50C4  
                    ___awmod@sign 000B                               wreg 003FE8  
                    ___flmul@aexp 0021                      ___flmul@bexp 0026  
                    ___flmul@sign 0020                      ___flmul@temp 002B  
                    ___flmul@prod 0027                     __CFG_BBEN$OFF 000000  
            __size_of_DEFAULT_ISR 0002                      __CFG_LVP$OFF 000000  
                    __CFG_ZCD$OFF 000000                      ___fltol@exp1 000F  
                            l1213 34AE                              l1214 348C  
                            l1315 2F76                              l1307 2EE0  
                            l1308 2EDC                              l1229 3580  
                            l1238 35E8                              l1239 35E4  
                            l1280 3BAA                              l1441 5068  
                            l1346 43A2                              l1339 431C  
                            l1268 3B40                              l1279 3BAE  
                            l1375 403A                              l1298 2C82  
                            l6013 4D26                              l7001 38F2  
                            l6033 4D6C                              l6025 4D54  
                            l6017 4D34                              l6009 4D1A  
                            l6041 4BA6                              l6105 487A  
                            l6019 4D3C                              l5411 337A  
                            l6123 48BA                              l6115 4892  
                            l6203 2344                              l6029 4D5E  
                            l6045 4BDA                              l6061 46D4  
                            l5501 34D2                              l6117 489E  
                            l6109 488A                              l6221 245E  
                            l6205 23AA                              ?_pad 0016  
                            l7031 393A                              l7023 392E  
                            l6071 4738                              l5511 34F8  
                            l5431 33BE                              l5407 3376  
                            l6311 28F4                              l6231 248A  
                            l7111 3E9A                              l7103 3E36  
                            l7041 3960                              l7017 391E  
                            l7009 3908                              l6049 4BF8  
                            l6065 46EA                              l6057 46A0  
                            l5601 48F4                              l6241 24DA  
                            l6225 2484                              l6209 23F6  
                            l6137 210E                              l5443 33E2  
                            l5435 33C2                              l5611 4934  
                            l6323 2924                              l6331 2944  
                            l6251 24FC                              l6171 21EE  
                            l7107 3E5E                              l7115 3EB0  
                            l5509 34F4                              l5365 499E  
                            l5605 4906                              l6413 2BC2  
                            l6261 2530                              l6149 2140  
                            l6157 2158                              l6501 32E4  
                            l7117 3ED4                              l6079 515A  
                            l5519 350A                              l5631 461A  
                            l5375 50CE                              l5383 51EC  
                            l5615 4968                              l5607 4918  
                            l6239 24D6                              l6167 21CC  
                            l6175 2220                              l6431 476E  
                            l5801 3C26                              l5537 35A4  
                            l5553 35C4                              l5529 3570  
                            l5473 343C                              l6089 4828  
                            l5385 51F0                              l6257 2520  
                            l6185 2294                              l6193 22AE  
                            l6169 21E4                              l6433 477C  
                            l7081 3D1A                              l6523 4A54  
                            l5811 3C5E                              l5715 3A28  
                            l5547 35BA                              l5627 4610  
                            l5379 50EA                              l5643 4E6C  
                            l6339 2968                              l6347 2A38  
                            l6283 275A                              l6267 256A  
                            l6275 26C4                              l6507 3302  
                            l7091 3DD6                              l6701 4B54  
                            l6605 517E                              l5813 3C60  
                            l5805 3C50                              l5741 3A96  
                            l5733 3A7E                              l5581 3664  
                            l5573 363E                              l5485 349A  
                            l5637 4662                              l5661 3F8A  
                            l7093 3DFA                              l7085 3DAA  
                            l7077 3C8A                              l7181 44D0  
                            l6527 4A80                              l5751 3AF0  
                            l5727 3A60                              l5719 3A2C  
                            l5903 2E88                              l5487 349E  
                            l5671 405C                              l6375 2AC8  
                            l6359 2A7A                              l6199 22FA  
                            l6471 3146                              l6463 30C4  
                            l7087 3DC0                              l6801 369C  
                            l6545 52DE                              l6609 5194  
                            l5833 2C2E                              l5585 366C  
                            l6377 2AD2                              l6297 2824  
                            l6289 27A8                              l6553 4D92  
                            l6641 413C                              l7177 44C4  
                            l5771 3B56                              l5851 2C6E  
                            l5835 2C32                              l5587 366E  
                            l5675 40A2                              l6387 2B34  
                            l6299 2846                              l6491 3288  
                            l6475 3182                              l6555 4DC0  
                            l6571 4358                              l6563 4334  
                            l7099 3E1C                              l6725 4C9A  
                            l6901 37A6                              l6629 5260  
                            l5765 3B3E                              l5933 2F52  
                            l5909 2EA6                              l5861 2CA0  
                            l5853 2C72                              l5837 2C42  
                            l6397 2B60                              l6581 43C8  
                            l6573 4364                              l6645 415A  
                            l7189 4574                              l6727 4CA4  
                            l6735 4CBA                              l6831 36F2  
                            l6815 36C2                              l6671 510A  
                            l5759 3B18                              l5695 39E8  
                            l5679 40D0                              l6583 43D4  
                            l6575 438A                              l6655 41D6  
                            l6639 4132                              l6729 4CAE  
                            l6737 4CDA                              l6825 36E2  
                            l6681 4AEC                              l5777 3B74  
                            l5945 2F96                              l5929 2F34  
                            l6497 32D8                              l6569 4352  
                            l6657 426A                              l6907 37B6  
                            l5971 4C20                              l5699 39EC  
                            l6659 426E                              l6853 3728  
                            l6685 4B10                              l6693 4B24  
                            l5965 4C10                              l5797 3C02  
                            l6599 4418                              l6953 386C  
                            l6697 4B38                              l5977 4C36  
                            l5993 4C68                              l6963 388A  
                            l6859 3730                              l5979 4C3E  
                            l6893 3790                              l6885 377A  
                            l6877 3764                              l6869 374E  
                            l5997 4C76                              l5989 4C5E  
                            l6993 38DC                              l6985 38C6  
                            l6977 38B0                              l6969 389A  
                            STR_1 20A8                              STR_2 20A8  
                            STR_3 2001                              STR_4 2034  
                            STR_5 2061                              STR_6 204C  
                            STR_7 2088                              STR_8 2075  
                            STR_9 2034                              u7020 3460  
                            u7030 3470                              u7200 35C8  
                            u7040 3472                              u7220 35DE  
                            u8030 4C42                              u7070 34B6  
                            u8210 4816                              u7410 465A  
                            _PIR3 0039A3                              u8140 4BF4  
                            u8220 484E                              u7420 465C  
                            u8300 2130                              u7405 463C  
                            u7430 4EB2                              u7280 364A  
                            u7360 45D6                              u8225 4844  
                            u8090 4D40                              u7530 401A  
                            u7450 504E                              u8330 21A2  
                            u7515 3FA4                              u8260 48A4  
                            u7516 3FAA                              u7460 5050  
                            u8420 242E                              u8340 21A4  
                            u9060 43DE                              u7365 45CC  
                            u7517 3FB8                              u7437 4EA4  
                            u9310 36BC                              u7550 4082  
                            u6910 51D6                              u9150 418A  
                            u7535 4010                              u9240 4B54  
                            u7480 3F50                              u6920 51D8  
                            u8520 24F8                              u7490 3F70  
                            u8450 246C                              u8370 226A  
                            u7555 4078                              u7740 3BA4  
                            u6860 4996                              u8380 226C  
                            u7485 3F46                              u9270 3698  
                            u9190 5130                              u6880 49DE  
                            u8480 24A2                              u7930 2ED6  
                            u7780 3C10                              u8900 3222  
                            u7790 3C34                              u8750 2B4A  
                            u8910 3224                              u7880 2C8E  
                            u8840 47DA                              u7970 2F42  
                            u7890 2E42                              u8770 2BAC  
                            u8690 2A5C                              u7980 2F60  
                            u8780 2BAE                              u7895 2E38  
                  _UART1_SendByte 52CA                              _dbuf 0120  
            __size_of_I2C_handler 002C                              _main 4432  
                            _prec 0056                  __end_of_I2C_Init 4E54  
                            _nout 00E6                              pad@i 001D  
                            pad@p 001A                              fsr1h 003FE2  
                            fsr2h 003FDA                              indf1 003FE7  
                            indf2 003FDF                              fsr1l 003FE1  
                            pad@w 001F                              fsr2l 003FD9  
                            _stof 40EA                  __end_of_ADC_Init 52AE  
                   ___fpclassifyf 4580                              prodh 003FF4  
                            prodl 003FF3                              start 00AE  
                 ___fldiv@new_exp 0017                      _tolower$2255 0012  
                    ___param_bank 000000                       ?_UART1_Init 0001  
                     ?_TIMER0_ISR 0001                             ??_pad 001C  
           __size_of_I2C_Transmit 00A6             _COMMAND_CURRENT_LIMIT 01A7  
                   ___fltol@sign1 000E                   __end_of___fladd 3692  
                           ?_main 0001                             _ADPCH 003EF1  
                 __end_of___fldiv 3C68                             _ADREF 003EFD  
                 __end_of___awdiv 4C84                   __end_of___flneg 5174  
                           STR_10 2095                             STR_11 209D  
                           STR_20 20A5                             STR_14 2099  
                           STR_15 20A1                     __CFG_WDTE$OFF 000000  
                           STR_18 20A5                   __end_of___awmod 4D7A  
                 __end_of___flmul 2FB4                   __end_of___flsub 4F1A  
                 __end_of___fltol 48D4                 _UART_handler$2468 01AF  
                           ?_stof 003D                             u10130 4448  
                           u10177 4498                   ___awdiv@divisor 0008  
                  __CFG_DEBUG$OFF 000000                             _U1UIR 003DF8  
                           _U1RXB 003DE8                             _U1TXB 003DEA  
                           i2l160 4F98                             i2l181 50BE  
                           i2l198 5320                   ___awdiv@counter 000A  
                           _OSCEN 0039DD                      vfpfcnvrt@fmt 009A  
                           _TMR0H 003FB7                             _TMR0L 003FB6  
          _AD5272_VOLTAGE_ADDRESS 00FF                  I2C_handler@value 0012  
                  __CFG_FCMEN$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                           _flags 0058            __end_of_UART1_SendByte 52E2  
                           _fputc 4986                             _fputs 50C4  
              __CFG_MCLRE$EXTMCLR 000000                             pad@fp 0016  
                           _width 00E8                             _putch 534E  
                 __end_of_isupper 51DE                             tablat 003FF5  
               UART1_SendString@i 000E                 __end_of_ADC_Start 533A  
                           stof@d 004C                             stof@s 003D  
                           status 003FD8                   __end_of_sprintf 4F74  
                  ?___fpclassifyf 0006                   __end_of_tolower 5076  
                 __end_of_strncmp 480A                      _I2C_Transmit 4A34  
                  __CFG_CSWEN$OFF 000000           I2C_Transmit@buffer_size 0008  
                 __initialization 4FCC                      __end_of_main 4580  
                    __end_of_stof 42CE                    __CFG_SAFEN$OFF 000000  
                       ??_ADC_ISR 0002                     _I2C_RX_BUFFER 0100  
                          ??_main 00C4                    __CFG_PR1WAY$ON 000000  
                          ??_stof 0041                     __activetblptr 000003  
                   _I2C_TX_BUFFER 010A                UART1_SendByte@byte 0006  
                  __CFG_MVECEN$ON 000000                      ??_I2C_RX_ISR 0006  
                    ??_I2C_TX_ISR 0006                            _ADCON0 003EF8  
                          _ADCON1 003EF9                            _ADCON2 003EFA  
                          ?_fputc 0006                   ?_UART1_SendByte 0001  
                          ?_fputs 000F                            _ADRESH 003EF0  
                          _ADRESL 003EEF                  ___awdiv@dividend 0006  
                          ?_putch 0001                            _T0CON0 003FB8  
                          _T0CON1 003FB9                            _RB1I2C 003A5A  
                          _U1CON0 003DF2                            _U1CON1 003DF3  
             __size_of_UART1_Init 0082                            _U1BRGH 003DF6  
                          _U1BRGL 003DF5                            _U2CON2 003DDC  
                          _RB0PPS 003A08                __CFG_PWRTS$PWRT_64 000000  
                          _RB1PPS 003A09                            _RC7PPS 003A17  
                  __CFG_WDTCCS$SC 000000                            i2l5217 50AA  
                          i2l5187 4F86                            i2l5197 4FAE  
             __size_of_TIMER0_ISR 0058                            i2l5199 4FB4  
                 _I2C_GENERAL_ISR 5314                            _OSCFRQ 0039DF  
                __end_of___xxtofl 4432                    __CFG_XINST$OFF 000000  
                _UART1_SendString 4ADA                 _I2C_STOP_DETECTED 00F2  
                    vfprintf@cfmt 00AE                            ___flge 466C  
                          ___fleq 4B72                         ??___fladd 0035  
                          ___wmul 5210                         ??___fldiv 000E  
                       ??___awdiv 000A                         ??___flneg 000A  
                  __CFG_STVREN$ON 000000                         ??___awmod 000A  
                       ??___flmul 001C                         ??___flsub 0045  
                       ??___fltol 000A                      ?_timer0_init 0001  
                          _efgtoa 20AC                __end_of_I2C_RX_ISR 52FC  
              __end_of_I2C_TX_ISR 52CA                            _floorf 3EF2  
                          _memset 5174                            clear_0 4FF4  
                          clear_1 5000                  ___awdiv@quotient 000C  
                 ___awmod@divisor 0008                   ___awmod@counter 000A  
                          pad@buf 0018                            _strcpy 4E54  
                          _strlen 51DE                            fputc@c 0006  
                          fputs@c 0013                            fputs@i 0014  
                          fputs@s 000F                         ?_I2C_Init 0001  
                 ___fpclassifyf@e 000E                         ?_ADC_Init 0001  
                 ___fpclassifyf@u 0010                   ___fpclassifyf@x 0006  
                    __mediumconst 0000                            tblptrh 003FF7  
                       ??_isupper 0008                            tblptrl 003FF6  
                          tblptru 003FF8                            putch@c 0001  
                __end_of_vfprintf 4DE8                         ??_sprintf 0055  
                       ??_tolower 000E             __end_of_GetStringSize 513E  
                       ??_strncmp 000C                        ___flge@ff1 002D  
                      ___flge@ff2 0031                   ??___fpclassifyf 000A  
                    ___xxtofl@arg 0010                      ___xxtofl@exp 000F  
                    ___xxtofl@val 0006                        ___fleq@ff1 0006  
                      ___fleq@ff2 000A                        __accesstop 0060  
         __end_of__initialization 501C                        ___flneg@f1 0006  
                   ___rparam_used 000001                        ___fltol@f1 0006  
                  __pcstackCOMRAM 0001                      __pidataBANK0 5348  
                  ivt0x8_undefint 00AC                     __end_of_fputc 4A34  
                   __end_of_fputs 5102                     __end_of_putch 5350  
                   ?_UART1_RX_ISR 0001                     ?_UART1_TX_ISR 0001  
                      ??_I2C_Init 0006                        ??_ADC_Init 0006  
         __end_of_I2C_GENERAL_ISR 5328                    _I2C_RX_COUNTER 00F3  
                         ??_fputc 000A                           ??_fputs 0013  
                 __CFG_IVT1WAY$ON 000000                           ??_putch 0006  
                      __pbssBANK0 00C6                        __pbssBANK1 0100  
                  _I2C_TX_COUNTER 00F4                           IVTBASEH 003FD6  
                         IVTBASEL 003FD5                           IVTBASEU 003FD7  
                         ?___flge 002D                           ?___fleq 0006  
                    ??_UART1_Init 0006                           _I2C1CLK 003D7B  
                         _I2C1CNT 003D6C                           _I2C1ERR 003D76  
                         ?___wmul 0006                           _I2C1PIR 003D79  
                         _I2C1RXB 003D6A                           _I2C1TXB 003D6B  
                 __CFG_PPS1WAY$ON 000000                      ??_TIMER0_ISR 0002  
                         ?_efgtoa 0045                    _counter_timer0 00F1  
                         ?_floorf 001F                           _ADC_ISR 5078  
                         ?_memset 0006                    ??_UART1_RX_ISR 0002  
                  ??_UART1_TX_ISR 0002     __size_of_UART1_ReceiveCommand 032A  
                         _COMMAND 00F5                           ?_strcpy 0006  
                         ?_strlen 0006                           _U1ERRIE 003DFA  
                   ??_DEFAULT_ISR 0006                           _U1RXPPS 003AE5  
                       ?___xxtofl 0006                           _IVTLOCK 003FD4  
              __size_of_vfpfcnvrt 0396                           _OSCTUNE 0039DE  
                         _WDTCON0 00395B                           _WDTCON1 00395C  
                      _led_enable 00F0                     ??_I2C_handler 0014  
              _ADC_VOLTAGE_RESULT 00EC                __end_of_UART1_Init 4D06  
              __end_of_TIMER0_ISR 4FCC                    GetStringSize@i 0008  
                       _ADC_Start 5328                           __Hparam 0000  
                         __Lparam 0000        __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                 __size_of___flge 00D0                   __size_of___fleq 008A  
                         ___fladd 334A                           ___fldiv 39BC  
                         ___awdiv 4BFC                           ___flneg 513E  
                         ___awmod 4D06                           ___flmul 2C02  
                         ___flsub 4EBC                           ___fltol 480A  
                 __size_of___wmul 002E             UART1_ReceiveCommand@i 000E  
                   ?_UART_handler 0001                         ?_vfprintf 00A8  
                    __psmallconst 2000                   __size_of_efgtoa 0B56  
                 __size_of_floorf 01F8                           __pcinit 4FCC  
                 __size_of_memset 0036                           __ramtop 2000  
            __size_of_timer0_init 0022                           __ptext0 4432  
                         __ptext1 526A                           __ptext2 3C68  
                         __ptext3 40EA                           __ptext4 42CE  
                         __ptext5 4F1A                           __ptext6 4D7A  
                         __ptext7 2FB4                           __ptext8 473C  
                         __ptext9 20AC                   __CFG_WRTAPP$OFF 000000  
                 __size_of_strcpy 0068                   __size_of_strlen 0032  
                ??_UART1_SendByte 0006                      __size_of_pad 00B2  
                      ??___xxtofl 000A                  ___awmod@dividend 0006  
                     _I2C1PIEbits 003D7A                   __CFG_WRTSAF$OFF 000000  
        __end_of_UART1_SendString 4B72                           _isupper 51AA  
                         efgtoa@c 004B                           efgtoa@d 0078  
                         efgtoa@e 0090                           efgtoa@f 0047  
                         efgtoa@g 008C                           efgtoa@h 0082  
                         efgtoa@i 008A                  ?_I2C_GENERAL_ISR 0001  
                         efgtoa@l 0086                           efgtoa@m 0074  
                         efgtoa@n 0092                           efgtoa@p 007C  
                         efgtoa@t 0070                           efgtoa@u 0094  
                         efgtoa@w 007F                       _I2C1PIRbits 003D79  
                         _sprintf 4F1A                           _tolower 5022  
                         _tx_byte 00F7                           _strncmp 473C  
             __end_of_DEFAULT_ISR 5352              end_of_initialization 501C  
                         floorf@e 002D                           floorf@m 0029  
                         floorf@u 002F                           floorf@x 001F  
                         fputc@fp 0008                  __CFG_BOREN$NOSLP 000000  
                         memset@i 000C                           memset@x 0008  
                         fputs@fp 0011                      ADC_Start@pin 0001  
             __end_of_I2C_handler 526A               UART1_SendString@str 000A  
                      ?_ADC_Start 0001                 __end_of_vfpfcnvrt 334A  
                      efgtoa@mode 0081                        efgtoa@sign 007A  
                         postdec1 003FE5                           postdec2 003FDD  
                         postinc0 003FEE                           postinc1 003FE6  
                         postinc2 003FDE                    ??_UART_handler 00C2  
                         stof@rez 0044                _ADC_CURRENT_RESULT 00EA  
                      ??_vfprintf 0055             __CFG_WDTCPS$WDTCPS_31 000000  
                         strcpy@d 000E                           strlen@a 0008  
                         strcpy@s 000C                           strlen@s 0006  
                     ___fladd@grs 003C                     ___xxtofl@sign 000E  
                       _TRISAbits 003FC2                         _TRISBbits 003FC3  
                       _TRISCbits 003FC4                 __size_of_I2C_Init 006C  
                     ___fldiv@grs 0019                       ___fldiv@rem 0012  
                      _rx_counter 005A                 __size_of_ADC_Init 0022  
                __CFG_FEXTOSC$OFF 000000                       ___flmul@grs 0022  
            __end_of_UART1_RX_ISR 5312              __end_of_UART1_TX_ISR 5348  
                  __end_of___flge 473C                    __end_of___fleq 4BFC  
                     vfpfcnvrt@ap 009C                       vfpfcnvrt@ct 00A4  
                     vfpfcnvrt@fp 0098                    __end_of___wmul 523E  
                  __end_of_efgtoa 2C02                    __end_of_floorf 40EA  
                      floorf@F524 0114                    __end_of_memset 51AA  
             UART1_Init@baud_rate 0008                       _DEFAULT_ISR 5350  
                  __end_of_strcpy 4EBC                    __end_of_strlen 5210  
             start_initialization 4FCC                 ADC_ISR@adc_result 0004  
                     __end_of_pad 4986                        ivt0x8_base 0008  
                     _I2C_handler 523E             __end_of___fpclassifyf 466C  
                     ??_ADC_Start 0001                  __CFG_LPBOREN$OFF 000000  
                     vfprintf@fmt 00AA                          ??___flge 0035  
                        ??___fleq 000E                          ??___wmul 000A  
                        ??_efgtoa 004C                       __pdataBANK0 00FA  
                        ??_floorf 0023              _COMMAND_WRITE_NUMBER 00EE  
          __size_of_GetStringSize 003C                          ?_ADC_ISR 0001  
                        ??_memset 000B                   _AD5272_COMMANDS 00F8  
                      memset@size 0009                          ??_strcpy 000A  
                        ??_strlen 0008   _CURRENT_REAL_AMPLIFIED_DVOLTAGE 011C  
                       ___fladd@a 0031                         ___fladd@b 002D  
                       ___fldiv@a 000A                         ___fldiv@b 0006  
                       ___flmul@a 0018                         ___flmul@b 0014  
                     __pbssCOMRAM 0056                         ___flsub@a 0041  
                       ___flsub@b 003D                     __pcstackBANK0 0060  
                   __pcstackBANK1 01AF                 __size_of___xxtofl 0164  
            __end_of_UART_handler 3EF2      __end_of_UART1_ReceiveCommand 39BC  
                   ?_I2C_Transmit 0006                       _efgtoa$1671 0064  
                     _efgtoa$1672 0066                       _efgtoa$1681 006A  
                     _efgtoa$1682 006C                       _efgtoa$1683 006E  
                     _efgtoa$1677 0068                          ?___fladd 002D  
                        ?___fldiv 0006                          ?___awdiv 0006  
                        ?___flneg 0006                          ?___awmod 0006  
                        ?___flmul 0014                          ?___flsub 003D  
                        ?___fltol 0006                          _I2C1ADB1 003D6E  
                        _I2C1CON0 003D73                          _I2C1CON1 003D74  
                        _I2C1CON2 003D75               main@receive_command 0055  
               __size_of_vfprintf 006E          UART1_SendString@attempts 0010  
          __CFG_BBSIZE$BBSIZE_512 000000                       __smallconst 2000  
                        _I2C_Init 4DE8                          _ADC_Init 528C  
                        ?_isupper 0006                 ?_UART1_SendString 000A  
           __size_of_UART1_RX_ISR 0016             __size_of_UART1_TX_ISR 000C  
                        ?_sprintf 00B0                          ?_tolower 000C  
                  __size_of_fputc 00AE                    __size_of_fputs 003E  
                        ?_strncmp 0006                ??_UART1_SendString 000E  
                  __size_of_putch 0002                     _GetStringSize 5102  
                      _I2C1SDAPPS 003AE2                        _I2C1SCLPPS 003AE1  
                  ___wmul@product 000A                          _LATAbits 003FBA  
                        _LATBbits 003FBB                    ??_I2C_Transmit 000A  
                        _IPR1bits 003981                          _IPR2bits 003982  
                        _IPR3bits 003983                          _PIE1bits 003991  
                        _PIE2bits 003992                          _PIE3bits 003993  
             __CFG_BORV$VBOR_2P85 000000                     _I2C1STAT0bits 003D77  
                        _PIR1bits 0039A1                          _PIR2bits 0039A2  
                        _PIR3bits 0039A3                          i2u675_40 4FC0  
                        i2u676_40 4FC2                     ??_timer0_init 0006  
                       _vfpfcnvrt 2FB4                         _rx_buffer 00C6  
                __size_of_ADC_ISR 004C                        _ADCON0bits 003EF8  
               ___wmul@multiplier 0006                      _UART1_RX_ISR 52FC  
                    _UART1_TX_ISR 533C                         _tx_buffer 0170  
_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE 00FA                        _I2C_RX_ISR 52E4  
                      _I2C_TX_ISR 52B0                        vfpfcnvrt@c 00A7  
                      vfpfcnvrt@f 00A0                       _INTCON0bits 003FD2  
                  ?_GetStringSize 0006                         copy_data0 4FE0  
                   I2C_Transmit@i 0011                    stof@point_seen 0042  
               _measur_vol_or_cur 00FE          __size_of_I2C_GENERAL_ISR 0014  
                        __Hrparam 0000                        vfprintf@ap 00AC  
                        __Lrparam 0000                        vfprintf@fp 00A8  
                __size_of___fladd 0348                  __size_of___fldiv 02AC  
                __size_of___awdiv 0088                  __size_of___flneg 0036  
                __size_of___awmod 0074                  __size_of___flmul 03B2  
                __size_of___flsub 005E                  __size_of___fltol 00CA  
                      ?_vfpfcnvrt 0098              _UART1_ReceiveCommand 3692  
                      _ANSELAbits 003A40                        _ANSELBbits 003A50  
                      _ANSELCbits 003A60                ___fpclassifyf@F463 0118  
             __end_of_timer0_init 528C                      ?_DEFAULT_ISR 0001  
                      sprintf@fmt 00B2                          ___xxtofl 42CE  
                      _T0CON0bits 003FB8             __size_of_UART_handler 028A  
                      _COMMAND_WR 00F6                      _I2C1CON0bits 003D73  
                        __pivt0x8 0008                          __ptext10 5022  
                        __ptext11 51AA                          __ptext20 480A  
                        __ptext12 4E54                          __ptext21 4EBC  
                        __ptext13 48D4                          __ptext30 5174  
                        __ptext22 334A                          __ptext14 51DE  
                        __ptext31 4ADA                          __ptext23 513E  
                        __ptext15 50C4                          __ptext40 528C  
                        __ptext32 52CA                          __ptext24 2C02  
                        __ptext16 4986                          __ptext41 4F74  
                        __ptext33 523E                          __ptext25 466C  
                        __ptext17 534E                          __ptext42 5328  
                        __ptext34 4A34                          __ptext26 4B72  
                        __ptext18 3EF2                          __ptext43 533C  
                        __ptext35 5102                          __ptext27 39BC  
                        __ptext19 4580                          __ptext44 52FC  
                        __ptext36 3692                          __ptext28 4D06  
                        __ptext45 5078                          __ptext37 5210  
                        __ptext29 4BFC                          __ptext46 52B0  
                        __ptext38 4C84                          __ptext47 52E4  
                        __ptext39 4DE8                          __ptext48 5314  
                        __ptext49 5350                  __size_of_isupper 0034  
                      _U1CON1bits 003DF3                      ?_I2C_handler 0012  
                __size_of_sprintf 005A                  __size_of_tolower 0054  
                      strcpy@dest 0006                  __size_of_strncmp 00CE  
         __size_of_UART1_SendByte 0018                     __size_of_main 014E  
                   __size_of_stof 01E4              __CFG_WDTCWS$WDTCWS_7 000000  
                        efgtoa@fp 0045                          efgtoa@ne 0076  
                        efgtoa@pp 0072                          efgtoa@ou 0060  
             I2C_Transmit@address 0009                        _ODCONBbits 003A52  
                        _vfprintf 4D7A                      _UART_handler 3C68  
           ?_UART1_ReceiveCommand 0001                       _OSCSTATbits 0039DC  
            __end_of_I2C_Transmit 4ADA                    _vfpfcnvrt$1700 009E  
                 ??_GetStringSize 0008                       ?_I2C_RX_ISR 0001  
                     ?_I2C_TX_ISR 0001                          memset@st 0006  
                        intlevel2 0000                         sprintf@ap 00BA  
            UART1_SendString@size 000C                 __CFG_CLKOUTEN$OFF 000000  
                     _SLRCONBbits 003A53                         strcpy@src 0008  
                     _PPSLOCKbits 003ABF                          isupper@c 0006  
                       strncmp@_l 0006                         strncmp@_r 0008  
               ??_I2C_GENERAL_ISR 0006                       efgtoa@nmode 007E  
                      _UART1_Init 4C84                I2C_Transmit@buffer 0006  
                     _timer0_init 526A                        _TIMER0_ISR 4F74  
                     ??_vfpfcnvrt 0051                          stof@fact 0048  
                        sprintf@f 00BC                          tolower@c 000C  
                        sprintf@s 00B0            __size_of___fpclassifyf 00EC  
                        strncmp@l 000D                          strncmp@n 000A  
                        strncmp@r 000F                     ___fladd@signs 0039  
                    ___fladd@aexp 003A                      ___fladd@bexp 003B  
       __size_of_UART1_SendString 0098  
