

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri May 17 21:06:27 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=4,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=4,class=CODE,delta=1
    59                           	psect	text44,global,reloc=4,class=CODE,delta=1
    60                           	psect	text45,global,reloc=4,class=CODE,delta=1
    61                           	psect	text46,global,reloc=4,class=CODE,delta=1
    62                           	psect	text47,global,reloc=4,class=CODE,delta=1
    63                           	psect	text48,global,reloc=4,class=CODE,delta=1
    64                           	psect	text49,global,reloc=4,class=CODE,delta=1
    65                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68  0000                     
    69                           ; Version 2.05
    70                           ; Generated 20/12/2018 GMT
    71                           ; 
    72                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F27K42 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  00534C                     __pidataBANK0:
   106                           	opt callstack 0
   107                           
   108                           ;initializer for _CURRENT_LIMIT_AMPLIFIED_DVOLTAGE
   109  00534C  0000               	dw	0
   110  00534E  3FC0               	dw	16320
   111                           
   112                           ;initializer for _measur_vol_or_cur
   113  005350  01                 	db	1
   114                           
   115                           ;initializer for _AD5272_VOLTAGE_ADDRESS
   116  005351  5E                 	db	94
   117  0000                     _PIR3	set	14755
   118  0000                     _PIE2bits	set	14738
   119  0000                     _PIR2bits	set	14754
   120  0000                     _IPR2bits	set	14722
   121  0000                     _PIE1bits	set	14737
   122  0000                     _IPR1bits	set	14721
   123  0000                     _IPR3bits	set	14723
   124  0000                     _WDTCON0	set	14683
   125  0000                     _WDTCON1	set	14684
   126  0000                     _OSCSTATbits	set	14812
   127  0000                     _OSCEN	set	14813
   128  0000                     _OSCTUNE	set	14814
   129  0000                     _OSCFRQ	set	14815
   130  0000                     _PIR1bits	set	14753
   131  0000                     _PIE3bits	set	14739
   132  0000                     _PIR3bits	set	14755
   133  0000                     _RC7PPS	set	14871
   134  0000                     _U1RXPPS	set	15077
   135  0000                     _ANSELCbits	set	14944
   136  0000                     _RB0PPS	set	14856
   137  0000                     _RB1PPS	set	14857
   138  0000                     _I2C1SDAPPS	set	15074
   139  0000                     _I2C1SCLPPS	set	15073
   140  0000                     _SLRCONBbits	set	14931
   141  0000                     _RB1I2C	set	14938
   142  0000                     _ODCONBbits	set	14930
   143  0000                     _ANSELBbits	set	14928
   144  0000                     _ANSELAbits	set	14912
   145  0000                     _PPSLOCKbits	set	15039
   146  0000                     _U1CON1bits	set	15859
   147  0000                     _U1UIR	set	15864
   148  0000                     _U1ERRIE	set	15866
   149  0000                     _U2CON2	set	15836
   150  0000                     _U1CON1	set	15859
   151  0000                     _U1CON0	set	15858
   152  0000                     _U1BRGL	set	15861
   153  0000                     _U1BRGH	set	15862
   154  0000                     _I2C1ADB1	set	15726
   155  0000                     _I2C1CNT	set	15724
   156  0000                     _I2C1STAT0bits	set	15735
   157  0000                     _I2C1CON0bits	set	15731
   158  0000                     _I2C1PIEbits	set	15738
   159  0000                     _I2C1ERR	set	15734
   160  0000                     _I2C1CLK	set	15739
   161  0000                     _I2C1CON2	set	15733
   162  0000                     _I2C1CON1	set	15732
   163  0000                     _I2C1CON0	set	15731
   164  0000                     _I2C1PIR	set	15737
   165  0000                     _I2C1PIRbits	set	15737
   166  0000                     _I2C1RXB	set	15722
   167  0000                     _I2C1TXB	set	15723
   168  0000                     _U1RXB	set	15848
   169  0000                     _U1TXB	set	15850
   170  0000                     _ADCON0bits	set	16120
   171  0000                     _ADREF	set	16125
   172  0000                     _ADCON2	set	16122
   173  0000                     _ADCON1	set	16121
   174  0000                     _ADCON0	set	16120
   175  0000                     _ADPCH	set	16113
   176  0000                     _ADRESH	set	16112
   177  0000                     _ADRESL	set	16111
   178  0000                     _TRISCbits	set	16324
   179  0000                     _T0CON1	set	16313
   180  0000                     _T0CON0	set	16312
   181  0000                     _LATBbits	set	16315
   182  0000                     _TRISBbits	set	16323
   183  0000                     _TRISAbits	set	16322
   184  0000                     _INTCON0bits	set	16338
   185  0000                     _IVTLOCK	set	16340
   186  0000                     _TMR0H	set	16311
   187  0000                     _TMR0L	set	16310
   188  0000                     _LATAbits	set	16314
   189  0000                     _T0CON0bits	set	16312
   190                           
   191                           	psect	smallconst
   192  002000                     __psmallconst:
   193                           	opt callstack 0
   194  002000  00                 	db	0
   195  002001                     STR_3:
   196  002001  56                 	db	86	;'V'
   197  002002  65                 	db	101	;'e'
   198  002003  72                 	db	114	;'r'
   199  002004  73                 	db	115	;'s'
   200  002005  69                 	db	105	;'i'
   201  002006  6F                 	db	111	;'o'
   202  002007  6E                 	db	110	;'n'
   203  002008  20                 	db	32
   204  002009  31                 	db	49	;'1'
   205  00200A  2E                 	db	46
   206  00200B  30                 	db	48	;'0'
   207  00200C  0A                 	db	10
   208  00200D  54                 	db	84	;'T'
   209  00200E  65                 	db	101	;'e'
   210  00200F  61                 	db	97	;'a'
   211  002010  6D                 	db	109	;'m'
   212  002011  20                 	db	32
   213  002012  35                 	db	53	;'5'
   214  002013  56                 	db	86	;'V'
   215  002014  0A                 	db	10
   216  002015  58                 	db	88	;'X'
   217  002016  61                 	db	97	;'a'
   218  002017  72                 	db	114	;'r'
   219  002018  69                 	db	105	;'i'
   220  002019  73                 	db	115	;'s'
   221  00201A  20                 	db	32
   222  00201B  4B                 	db	75	;'K'
   223  00201C  65                 	db	101	;'e'
   224  00201D  74                 	db	116	;'t'
   225  00201E  6F                 	db	111	;'o'
   226  00201F  67                 	db	103	;'g'
   227  002020  6C                 	db	108	;'l'
   228  002021  6F                 	db	111	;'o'
   229  002022  75                 	db	117	;'u'
   230  002023  2C                 	db	44
   231  002024  56                 	db	86	;'V'
   232  002025  6F                 	db	111	;'o'
   233  002026  75                 	db	117	;'u'
   234  002027  6C                 	db	108	;'l'
   235  002028  61                 	db	97	;'a'
   236  002029  20                 	db	32
   237  00202A  4B                 	db	75	;'K'
   238  00202B  6F                 	db	111	;'o'
   239  00202C  6E                 	db	110	;'n'
   240  00202D  74                 	db	116	;'t'
   241  00202E  6F                 	db	111	;'o'
   242  00202F  74                 	db	116	;'t'
   243  002030  6F                 	db	111	;'o'
   244  002031  6C                 	db	108	;'l'
   245  002032  69                 	db	105	;'i'
   246  002033  00                 	db	0
   247  002034                     STR_4:
   248  002034  43                 	db	67	;'C'
   249  002035  6F                 	db	111	;'o'
   250  002036  6D                 	db	109	;'m'
   251  002037  6D                 	db	109	;'m'
   252  002038  61                 	db	97	;'a'
   253  002039  6E                 	db	110	;'n'
   254  00203A  64                 	db	100	;'d'
   255  00203B  20                 	db	32
   256  00203C  6E                 	db	110	;'n'
   257  00203D  6F                 	db	111	;'o'
   258  00203E  74                 	db	116	;'t'
   259  00203F  20                 	db	32
   260  002040  72                 	db	114	;'r'
   261  002041  65                 	db	101	;'e'
   262  002042  63                 	db	99	;'c'
   263  002043  6F                 	db	111	;'o'
   264  002044  67                 	db	103	;'g'
   265  002045  6E                 	db	110	;'n'
   266  002046  69                 	db	105	;'i'
   267  002047  7A                 	db	122	;'z'
   268  002048  65                 	db	101	;'e'
   269  002049  64                 	db	100	;'d'
   270  00204A  21                 	db	33
   271  00204B  00                 	db	0
   272  00204C                     STR_6:
   273  00204C  42                 	db	66	;'B'
   274  00204D  6C                 	db	108	;'l'
   275  00204E  69                 	db	105	;'i'
   276  00204F  6E                 	db	110	;'n'
   277  002050  6B                 	db	107	;'k'
   278  002051  69                 	db	105	;'i'
   279  002052  6E                 	db	110	;'n'
   280  002053  67                 	db	103	;'g'
   281  002054  20                 	db	32
   282  002055  4C                 	db	76	;'L'
   283  002056  45                 	db	69	;'E'
   284  002057  44                 	db	68	;'D'
   285  002058  20                 	db	32
   286  002059  69                 	db	105	;'i'
   287  00205A  73                 	db	115	;'s'
   288  00205B  20                 	db	32
   289  00205C  4F                 	db	79	;'O'
   290  00205D  46                 	db	70	;'F'
   291  00205E  46                 	db	70	;'F'
   292  00205F  21                 	db	33
   293  002060  00                 	db	0
   294  002061                     STR_5:
   295  002061  42                 	db	66	;'B'
   296  002062  6C                 	db	108	;'l'
   297  002063  69                 	db	105	;'i'
   298  002064  6E                 	db	110	;'n'
   299  002065  6B                 	db	107	;'k'
   300  002066  69                 	db	105	;'i'
   301  002067  6E                 	db	110	;'n'
   302  002068  67                 	db	103	;'g'
   303  002069  20                 	db	32
   304  00206A  4C                 	db	76	;'L'
   305  00206B  45                 	db	69	;'E'
   306  00206C  44                 	db	68	;'D'
   307  00206D  20                 	db	32
   308  00206E  69                 	db	105	;'i'
   309  00206F  73                 	db	115	;'s'
   310  002070  20                 	db	32
   311  002071  4F                 	db	79	;'O'
   312  002072  4E                 	db	78	;'N'
   313  002073  21                 	db	33
   314  002074  00                 	db	0
   315  002075                     STR_8:
   316  002075  43                 	db	67	;'C'
   317  002076  75                 	db	117	;'u'
   318  002077  72                 	db	114	;'r'
   319  002078  72                 	db	114	;'r'
   320  002079  65                 	db	101	;'e'
   321  00207A  6E                 	db	110	;'n'
   322  00207B  74                 	db	116	;'t'
   323  00207C  20                 	db	32
   324  00207D  4C                 	db	76	;'L'
   325  00207E  69                 	db	105	;'i'
   326  00207F  6D                 	db	109	;'m'
   327  002080  69                 	db	105	;'i'
   328  002081  74                 	db	116	;'t'
   329  002082  20                 	db	32
   330  002083  73                 	db	115	;'s'
   331  002084  65                 	db	101	;'e'
   332  002085  74                 	db	116	;'t'
   333  002086  21                 	db	33
   334  002087  00                 	db	0
   335  002088                     STR_7:
   336  002088  56                 	db	86	;'V'
   337  002089  6F                 	db	111	;'o'
   338  00208A  6C                 	db	108	;'l'
   339  00208B  74                 	db	116	;'t'
   340  00208C  61                 	db	97	;'a'
   341  00208D  67                 	db	103	;'g'
   342  00208E  65                 	db	101	;'e'
   343  00208F  20                 	db	32
   344  002090  73                 	db	115	;'s'
   345  002091  65                 	db	101	;'e'
   346  002092  74                 	db	116	;'t'
   347  002093  21                 	db	33
   348  002094  00                 	db	0
   349  002095                     STR_10:
   350  002095  49                 	db	73	;'I'
   351  002096  4E                 	db	78	;'N'
   352  002097  46                 	db	70	;'F'
   353  002098  00                 	db	0
   354  002099                     STR_14:
   355  002099  4E                 	db	78	;'N'
   356  00209A  41                 	db	65	;'A'
   357  00209B  4E                 	db	78	;'N'
   358  00209C  00                 	db	0
   359  00209D                     STR_11:
   360  00209D  69                 	db	105	;'i'
   361  00209E  6E                 	db	110	;'n'
   362  00209F  66                 	db	102	;'f'
   363  0020A0  00                 	db	0
   364  0020A1                     STR_15:
   365  0020A1  6E                 	db	110	;'n'
   366  0020A2  61                 	db	97	;'a'
   367  0020A3  6E                 	db	110	;'n'
   368  0020A4  00                 	db	0
   369  0020A5                     STR_18:
   370  0020A5  6C                 	db	108	;'l'
   371  0020A6  66                 	db	102	;'f'
   372  0020A7  00                 	db	0
   373  0020A8                     STR_1:
   374  0020A8  25                 	db	37
   375  0020A9  66                 	db	102	;'f'
   376  0020AA  00                 	db	0
   377  0000                     
   378                           ; #config settings
   379  0020AB  00                 	db	0	; dummy byte at the end
   380  0000                     
   381                           	psect	cinit
   382  004FD0                     __pcinit:
   383                           	opt callstack 0
   384  004FD0                     start_initialization:
   385                           	opt callstack 0
   386  004FD0                     __initialization:
   387                           	opt callstack 0
   388                           
   389                           ; Initialize objects allocated to BANK0 (6 bytes)
   390                           ; load TBLPTR registers with __pidataBANK0
   391  004FD0  0E4C               	movlw	low __pidataBANK0
   392  004FD2  6EF6               	movwf	tblptrl,c
   393  004FD4  0E53               	movlw	high __pidataBANK0
   394  004FD6  6EF7               	movwf	tblptrh,c
   395  004FD8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   396  004FDA  6EF8               	movwf	tblptru,c
   397  004FDC  EE00  F0FA         	lfsr	0,__pdataBANK0
   398  004FE0  EE10 F006          	lfsr	1,6
   399  004FE4                     copy_data0:
   400  004FE4  0009               	tblrd		*+
   401  004FE6  006F FFD7 FFEE     	movff	tablat,postinc0
   402  004FEC  50E5               	movf	postdec1,w,c
   403  004FEE  50E1               	movf	fsr1l,w,c
   404  004FF0  E1F9               	bnz	copy_data0
   405                           
   406                           ; Clear objects allocated to BANK1 (175 bytes)
   407  004FF2  EE00  F100         	lfsr	0,__pbssBANK1
   408  004FF6  0EAF               	movlw	175
   409  004FF8                     clear_0:
   410  004FF8  6AEE               	clrf	postinc0,c
   411  004FFA  06E8               	decf	wreg,f,c
   412  004FFC  E1FD               	bnz	clear_0
   413                           
   414                           ; Clear objects allocated to BANK0 (52 bytes)
   415  004FFE  EE00  F0C6         	lfsr	0,__pbssBANK0
   416  005002  0E34               	movlw	52
   417  005004                     clear_1:
   418  005004  6AEE               	clrf	postinc0,c
   419  005006  06E8               	decf	wreg,f,c
   420  005008  E1FD               	bnz	clear_1
   421                           
   422                           ; Clear objects allocated to COMRAM (5 bytes)
   423  00500A  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   424  00500C  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   425  00500E  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   426  005010  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   427  005012  6A56               	clrf	__pbssCOMRAM& (0+255),c
   428                           
   429                           ;
   430                           ; Setup IVTBASE
   431                           ;
   432  005014  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   433  005016  6ED5               	movwf	213,c
   434  005018  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   435  00501A  6ED6               	movwf	214,c
   436  00501C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   437  00501E  6ED7               	movwf	215,c
   438  005020                     end_of_initialization:
   439                           	opt callstack 0
   440  005020                     __end_of__initialization:
   441                           	opt callstack 0
   442  005020  0100               	movlb	0
   443  005022  EF19  F022         	goto	_main	;jump to C main() function
   444                           
   445                           	psect	bssCOMRAM
   446  000056                     __pbssCOMRAM:
   447                           	opt callstack 0
   448  000056                     _prec:
   449                           	opt callstack 0
   450  000056                     	ds	2
   451  000058                     _flags:
   452                           	opt callstack 0
   453  000058                     	ds	2
   454  00005A                     _rx_counter:
   455                           	opt callstack 0
   456  00005A                     	ds	1
   457                           
   458                           	psect	bssBANK0
   459  0000C6                     __pbssBANK0:
   460                           	opt callstack 0
   461  0000C6                     _rx_buffer:
   462                           	opt callstack 0
   463  0000C6                     	ds	32
   464  0000E6                     _nout:
   465                           	opt callstack 0
   466  0000E6                     	ds	2
   467  0000E8                     _width:
   468                           	opt callstack 0
   469  0000E8                     	ds	2
   470  0000EA                     _ADC_CURRENT_RESULT:
   471                           	opt callstack 0
   472  0000EA                     	ds	2
   473  0000EC                     _ADC_VOLTAGE_RESULT:
   474                           	opt callstack 0
   475  0000EC                     	ds	2
   476  0000EE                     _COMMAND_WRITE_NUMBER:
   477                           	opt callstack 0
   478  0000EE                     	ds	2
   479  0000F0                     _led_enable:
   480                           	opt callstack 0
   481  0000F0                     	ds	1
   482  0000F1                     _counter_timer0:
   483                           	opt callstack 0
   484  0000F1                     	ds	1
   485  0000F2                     _I2C_STOP_DETECTED:
   486                           	opt callstack 0
   487  0000F2                     	ds	1
   488  0000F3                     _I2C_RX_COUNTER:
   489                           	opt callstack 0
   490  0000F3                     	ds	1
   491  0000F4                     _I2C_TX_COUNTER:
   492                           	opt callstack 0
   493  0000F4                     	ds	1
   494  0000F5                     _COMMAND:
   495                           	opt callstack 0
   496  0000F5                     	ds	1
   497  0000F6                     _COMMAND_WR:
   498                           	opt callstack 0
   499  0000F6                     	ds	1
   500  0000F7                     _tx_byte:
   501                           	opt callstack 0
   502  0000F7                     	ds	1
   503  0000F8                     _AD5272_COMMANDS:
   504                           	opt callstack 0
   505  0000F8                     	ds	2
   506                           
   507                           	psect	dataBANK0
   508  0000FA                     __pdataBANK0:
   509                           	opt callstack 0
   510  0000FA                     _CURRENT_LIMIT_AMPLIFIED_DVOLTAGE:
   511                           	opt callstack 0
   512  0000FA                     	ds	4
   513  0000FE                     _measur_vol_or_cur:
   514                           	opt callstack 0
   515  0000FE                     	ds	1
   516  0000FF                     _AD5272_VOLTAGE_ADDRESS:
   517                           	opt callstack 0
   518  0000FF                     	ds	1
   519                           
   520                           	psect	bssBANK1
   521  000100                     __pbssBANK1:
   522                           	opt callstack 0
   523  000100                     _I2C_RX_BUFFER:
   524                           	opt callstack 0
   525  000100                     	ds	10
   526  00010A                     _I2C_TX_BUFFER:
   527                           	opt callstack 0
   528  00010A                     	ds	10
   529  000114                     floorf@F524:
   530                           	opt callstack 0
   531  000114                     	ds	4
   532  000118                     ___fpclassifyf@F463:
   533                           	opt callstack 0
   534  000118                     	ds	4
   535  00011C                     _CURRENT_REAL_AMPLIFIED_DVOLTAGE:
   536                           	opt callstack 0
   537  00011C                     	ds	4
   538  000120                     _dbuf:
   539                           	opt callstack 0
   540  000120                     	ds	80
   541  000170                     _tx_buffer:
   542                           	opt callstack 0
   543  000170                     	ds	55
   544  0001A7                     _COMMAND_CURRENT_LIMIT:
   545                           	opt callstack 0
   546  0001A7                     	ds	8
   547                           
   548                           	psect	cstackBANK1
   549  0001AF                     __pcstackBANK1:
   550                           	opt callstack 0
   551  0001AF                     _UART_handler$2468:
   552                           	opt callstack 0
   553                           
   554                           ; 4 bytes @ 0x0
   555  0001AF                     	ds	4
   556                           
   557                           	psect	cstackBANK0
   558  000060                     __pcstackBANK0:
   559                           	opt callstack 0
   560  000060                     efgtoa@ou:
   561                           	opt callstack 0
   562                           
   563                           ; 4 bytes @ 0x0
   564  000060                     	ds	4
   565  000064                     _efgtoa$1671:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0x4
   569  000064                     	ds	2
   570  000066                     _efgtoa$1672:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x6
   574  000066                     	ds	2
   575  000068                     _efgtoa$1677:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x8
   579  000068                     	ds	2
   580  00006A                     _efgtoa$1681:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0xA
   584  00006A                     	ds	2
   585  00006C                     _efgtoa$1682:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0xC
   589  00006C                     	ds	2
   590  00006E                     _efgtoa$1683:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0xE
   594  00006E                     	ds	2
   595  000070                     efgtoa@t:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0x10
   599  000070                     	ds	2
   600  000072                     efgtoa@pp:
   601                           	opt callstack 0
   602                           
   603                           ; 2 bytes @ 0x12
   604  000072                     	ds	2
   605  000074                     efgtoa@m:
   606                           	opt callstack 0
   607                           
   608                           ; 2 bytes @ 0x14
   609  000074                     	ds	2
   610  000076                     efgtoa@ne:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x16
   614  000076                     	ds	2
   615  000078                     efgtoa@d:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0x18
   619  000078                     	ds	2
   620  00007A                     efgtoa@sign:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0x1A
   624  00007A                     	ds	2
   625  00007C                     efgtoa@p:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x1C
   629  00007C                     	ds	2
   630  00007E                     efgtoa@nmode:
   631                           	opt callstack 0
   632                           
   633                           ; 1 bytes @ 0x1E
   634  00007E                     	ds	1
   635  00007F                     efgtoa@w:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x1F
   639  00007F                     	ds	2
   640  000081                     efgtoa@mode:
   641                           	opt callstack 0
   642                           
   643                           ; 1 bytes @ 0x21
   644  000081                     	ds	1
   645  000082                     efgtoa@h:
   646                           	opt callstack 0
   647                           
   648                           ; 4 bytes @ 0x22
   649  000082                     	ds	4
   650  000086                     efgtoa@l:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0x26
   654  000086                     	ds	4
   655  00008A                     efgtoa@i:
   656                           	opt callstack 0
   657                           
   658                           ; 2 bytes @ 0x2A
   659  00008A                     	ds	2
   660  00008C                     efgtoa@g:
   661                           	opt callstack 0
   662                           
   663                           ; 4 bytes @ 0x2C
   664  00008C                     	ds	4
   665  000090                     efgtoa@e:
   666                           	opt callstack 0
   667                           
   668                           ; 2 bytes @ 0x30
   669  000090                     	ds	2
   670  000092                     efgtoa@n:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x32
   674  000092                     	ds	2
   675  000094                     efgtoa@u:
   676                           	opt callstack 0
   677                           
   678                           ; 4 bytes @ 0x34
   679  000094                     	ds	4
   680  000098                     ?_vfpfcnvrt:
   681                           	opt callstack 0
   682  000098                     vfpfcnvrt@fp:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x38
   686  000098                     	ds	2
   687  00009A                     vfpfcnvrt@fmt:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x3A
   691  00009A                     	ds	2
   692  00009C                     vfpfcnvrt@ap:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x3C
   696  00009C                     	ds	2
   697  00009E                     _vfpfcnvrt$1700:
   698                           	opt callstack 0
   699                           
   700                           ; 2 bytes @ 0x3E
   701  00009E                     	ds	2
   702  0000A0                     vfpfcnvrt@f:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0x40
   706  0000A0                     	ds	4
   707  0000A4                     vfpfcnvrt@ct:
   708                           	opt callstack 0
   709                           
   710                           ; 3 bytes @ 0x44
   711  0000A4                     	ds	3
   712  0000A7                     vfpfcnvrt@c:
   713                           	opt callstack 0
   714                           
   715                           ; 1 bytes @ 0x47
   716  0000A7                     	ds	1
   717  0000A8                     ?_vfprintf:
   718                           	opt callstack 0
   719  0000A8                     vfprintf@fp:
   720                           	opt callstack 0
   721                           
   722                           ; 2 bytes @ 0x48
   723  0000A8                     	ds	2
   724  0000AA                     vfprintf@fmt:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x4A
   728  0000AA                     	ds	2
   729  0000AC                     vfprintf@ap:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x4C
   733  0000AC                     	ds	2
   734  0000AE                     vfprintf@cfmt:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x4E
   738  0000AE                     	ds	2
   739  0000B0                     ?_sprintf:
   740                           	opt callstack 0
   741  0000B0                     sprintf@s:
   742                           	opt callstack 0
   743                           
   744                           ; 2 bytes @ 0x50
   745  0000B0                     	ds	2
   746  0000B2                     sprintf@fmt:
   747                           	opt callstack 0
   748                           
   749                           ; 2 bytes @ 0x52
   750  0000B2                     	ds	8
   751  0000BA                     sprintf@ap:
   752                           	opt callstack 0
   753                           
   754                           ; 2 bytes @ 0x5A
   755  0000BA                     	ds	2
   756  0000BC                     sprintf@f:
   757                           	opt callstack 0
   758                           
   759                           ; 6 bytes @ 0x5C
   760  0000BC                     	ds	6
   761  0000C2                     ??_UART_handler:
   762                           
   763                           ; 1 bytes @ 0x62
   764  0000C2                     	ds	2
   765  0000C4                     ??_main:
   766                           
   767                           ; 1 bytes @ 0x64
   768  0000C4                     	ds	2
   769                           
   770                           	psect	cstackCOMRAM
   771  000001                     __pcstackCOMRAM:
   772                           	opt callstack 0
   773  000001                     ADC_Start@pin:
   774                           	opt callstack 0
   775  000001                     
   776                           ; 1 bytes @ 0x0
   777  000001                     	ds	1
   778  000002                     ??_ADC_ISR:
   779                           
   780                           ; 1 bytes @ 0x1
   781  000002                     	ds	2
   782  000004                     ADC_ISR@adc_result:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x3
   786  000004                     	ds	2
   787  000006                     ??_UART1_Init:
   788  000006                     ?_GetStringSize:
   789                           	opt callstack 0
   790  000006                     ?_strlen:
   791                           	opt callstack 0
   792  000006                     ?___fpclassifyf:
   793                           	opt callstack 0
   794  000006                     ?_isupper:
   795                           	opt callstack 0
   796  000006                     ?_strncmp:
   797                           	opt callstack 0
   798  000006                     ?___wmul:
   799                           	opt callstack 0
   800  000006                     ?___awdiv:
   801                           	opt callstack 0
   802  000006                     ?___awmod:
   803                           	opt callstack 0
   804  000006                     ?___fldiv:
   805                           	opt callstack 0
   806  000006                     ?___flneg:
   807                           	opt callstack 0
   808  000006                     ?___fltol:
   809                           	opt callstack 0
   810  000006                     ?___xxtofl:
   811                           	opt callstack 0
   812  000006                     UART1_SendByte@byte:
   813                           	opt callstack 0
   814  000006                     memset@st:
   815                           	opt callstack 0
   816  000006                     I2C_Transmit@buffer:
   817                           	opt callstack 0
   818  000006                     ___wmul@multiplier:
   819                           	opt callstack 0
   820  000006                     ___awdiv@dividend:
   821                           	opt callstack 0
   822  000006                     ___awmod@dividend:
   823                           	opt callstack 0
   824  000006                     isupper@c:
   825                           	opt callstack 0
   826  000006                     fputc@c:
   827                           	opt callstack 0
   828  000006                     strcpy@dest:
   829                           	opt callstack 0
   830  000006                     strlen@s:
   831                           	opt callstack 0
   832  000006                     strncmp@_l:
   833                           	opt callstack 0
   834  000006                     ___fleq@ff1:
   835                           	opt callstack 0
   836  000006                     ___flneg@f1:
   837                           	opt callstack 0
   838  000006                     ___fltol@f1:
   839                           	opt callstack 0
   840  000006                     ___fldiv@b:
   841                           	opt callstack 0
   842  000006                     ___xxtofl@val:
   843                           	opt callstack 0
   844  000006                     ___fpclassifyf@x:
   845                           	opt callstack 0
   846                           
   847                           ; 4 bytes @ 0x5
   848  000006                     	ds	2
   849  000008                     ??_isupper:
   850  000008                     memset@x:
   851                           	opt callstack 0
   852  000008                     I2C_Transmit@buffer_size:
   853                           	opt callstack 0
   854  000008                     UART1_Init@baud_rate:
   855                           	opt callstack 0
   856  000008                     GetStringSize@i:
   857                           	opt callstack 0
   858  000008                     ___wmul@multiplicand:
   859                           	opt callstack 0
   860  000008                     ___awdiv@divisor:
   861                           	opt callstack 0
   862  000008                     ___awmod@divisor:
   863                           	opt callstack 0
   864  000008                     fputc@fp:
   865                           	opt callstack 0
   866  000008                     strcpy@src:
   867                           	opt callstack 0
   868  000008                     strlen@a:
   869                           	opt callstack 0
   870  000008                     strncmp@_r:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x7
   874  000008                     	ds	1
   875  000009                     I2C_Transmit@address:
   876                           	opt callstack 0
   877  000009                     memset@size:
   878                           	opt callstack 0
   879                           
   880                           ; 2 bytes @ 0x8
   881  000009                     	ds	1
   882  00000A                     ??_I2C_Transmit:
   883  00000A                     ??_fputc:
   884  00000A                     ??___fpclassifyf:
   885  00000A                     ??_strcpy:
   886  00000A                     ??___fltol:
   887  00000A                     ??___xxtofl:
   888  00000A                     ___awdiv@counter:
   889                           	opt callstack 0
   890  00000A                     ___awmod@counter:
   891                           	opt callstack 0
   892  00000A                     UART1_SendString@str:
   893                           	opt callstack 0
   894  00000A                     ___wmul@product:
   895                           	opt callstack 0
   896  00000A                     strncmp@n:
   897                           	opt callstack 0
   898  00000A                     ___fleq@ff2:
   899                           	opt callstack 0
   900  00000A                     ___fldiv@a:
   901                           	opt callstack 0
   902                           
   903                           ; 4 bytes @ 0x9
   904  00000A                     	ds	1
   905  00000B                     ??_memset:
   906  00000B                     ___awdiv@sign:
   907                           	opt callstack 0
   908  00000B                     ___awmod@sign:
   909                           	opt callstack 0
   910                           
   911                           ; 1 bytes @ 0xA
   912  00000B                     	ds	1
   913  00000C                     ??_UART1_ReceiveCommand:
   914  00000C                     ??_strncmp:
   915  00000C                     ?_tolower:
   916                           	opt callstack 0
   917  00000C                     memset@i:
   918                           	opt callstack 0
   919  00000C                     UART1_SendString@size:
   920                           	opt callstack 0
   921  00000C                     ___awdiv@quotient:
   922                           	opt callstack 0
   923  00000C                     strcpy@s:
   924                           	opt callstack 0
   925  00000C                     tolower@c:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0xB
   929  00000C                     	ds	1
   930  00000D                     strncmp@l:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0xC
   934  00000D                     	ds	1
   935  00000E                     ??_tolower:
   936  00000E                     ??___fldiv:
   937  00000E                     ??___fleq:
   938  00000E                     UART1_ReceiveCommand@i:
   939                           	opt callstack 0
   940  00000E                     ___fltol@sign1:
   941                           	opt callstack 0
   942  00000E                     ___xxtofl@sign:
   943                           	opt callstack 0
   944  00000E                     UART1_SendString@i:
   945                           	opt callstack 0
   946  00000E                     ___fpclassifyf@e:
   947                           	opt callstack 0
   948  00000E                     strcpy@d:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0xD
   952  00000E                     	ds	1
   953  00000F                     ___fltol@exp1:
   954                           	opt callstack 0
   955  00000F                     ___xxtofl@exp:
   956                           	opt callstack 0
   957  00000F                     fputs@s:
   958                           	opt callstack 0
   959  00000F                     strncmp@r:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0xE
   963  00000F                     	ds	1
   964  000010                     UART1_SendString@attempts:
   965                           	opt callstack 0
   966  000010                     ___xxtofl@arg:
   967                           	opt callstack 0
   968  000010                     ___fpclassifyf@u:
   969                           	opt callstack 0
   970                           
   971                           ; 4 bytes @ 0xF
   972  000010                     	ds	1
   973  000011                     I2C_Transmit@i:
   974                           	opt callstack 0
   975  000011                     fputs@fp:
   976                           	opt callstack 0
   977                           
   978                           ; 2 bytes @ 0x10
   979  000011                     	ds	1
   980  000012                     I2C_handler@value:
   981                           	opt callstack 0
   982  000012                     _tolower$2255:
   983                           	opt callstack 0
   984  000012                     ___fldiv@rem:
   985                           	opt callstack 0
   986                           
   987                           ; 4 bytes @ 0x11
   988  000012                     	ds	1
   989  000013                     fputs@c:
   990                           	opt callstack 0
   991                           
   992                           ; 1 bytes @ 0x12
   993  000013                     	ds	1
   994  000014                     ?___flmul:
   995                           	opt callstack 0
   996  000014                     fputs@i:
   997                           	opt callstack 0
   998  000014                     ___flmul@b:
   999                           	opt callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x13
  1002  000014                     	ds	2
  1003  000016                     ?_pad:
  1004                           	opt callstack 0
  1005  000016                     ___fldiv@sign:
  1006                           	opt callstack 0
  1007  000016                     pad@fp:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x15
  1011  000016                     	ds	1
  1012  000017                     ___fldiv@new_exp:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x16
  1016  000017                     	ds	1
  1017  000018                     pad@buf:
  1018                           	opt callstack 0
  1019  000018                     ___flmul@a:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x17
  1023  000018                     	ds	1
  1024  000019                     ___fldiv@grs:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x18
  1028  000019                     	ds	1
  1029  00001A                     pad@p:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x19
  1033  00001A                     	ds	2
  1034  00001C                     ??___flmul:
  1035  00001C                     ??_pad:
  1036                           
  1037                           ; 1 bytes @ 0x1B
  1038  00001C                     	ds	1
  1039  00001D                     ___fldiv@bexp:
  1040                           	opt callstack 0
  1041  00001D                     pad@i:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x1C
  1045  00001D                     	ds	1
  1046  00001E                     ___fldiv@aexp:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x1D
  1050  00001E                     	ds	1
  1051  00001F                     ?_floorf:
  1052                           	opt callstack 0
  1053  00001F                     pad@w:
  1054                           	opt callstack 0
  1055  00001F                     floorf@x:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x1E
  1059  00001F                     	ds	1
  1060  000020                     ___flmul@sign:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x1F
  1064  000020                     	ds	1
  1065  000021                     ___flmul@aexp:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x20
  1069  000021                     	ds	1
  1070  000022                     ___flmul@grs:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x21
  1074  000022                     	ds	1
  1075  000023                     ??_floorf:
  1076                           
  1077                           ; 1 bytes @ 0x22
  1078  000023                     	ds	3
  1079  000026                     ___flmul@bexp:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x25
  1083  000026                     	ds	1
  1084  000027                     ___flmul@prod:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x26
  1088  000027                     	ds	2
  1089  000029                     floorf@m:
  1090                           	opt callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x28
  1093  000029                     	ds	2
  1094  00002B                     ___flmul@temp:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x2A
  1098  00002B                     	ds	2
  1099  00002D                     ?___fladd:
  1100                           	opt callstack 0
  1101  00002D                     floorf@e:
  1102                           	opt callstack 0
  1103  00002D                     ___flge@ff1:
  1104                           	opt callstack 0
  1105  00002D                     ___fladd@b:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x2C
  1109  00002D                     	ds	2
  1110  00002F                     floorf@u:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x2E
  1114  00002F                     	ds	2
  1115  000031                     ___flge@ff2:
  1116                           	opt callstack 0
  1117  000031                     ___fladd@a:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x30
  1121  000031                     	ds	4
  1122  000035                     ??___fladd:
  1123  000035                     ??___flge:
  1124                           
  1125                           ; 1 bytes @ 0x34
  1126  000035                     	ds	4
  1127  000039                     ___fladd@signs:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x38
  1131  000039                     	ds	1
  1132  00003A                     ___fladd@aexp:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x39
  1136  00003A                     	ds	1
  1137  00003B                     ___fladd@bexp:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x3A
  1141  00003B                     	ds	1
  1142  00003C                     ___fladd@grs:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x3B
  1146  00003C                     	ds	1
  1147  00003D                     ?_stof:
  1148                           	opt callstack 0
  1149  00003D                     ?___flsub:
  1150                           	opt callstack 0
  1151  00003D                     stof@s:
  1152                           	opt callstack 0
  1153  00003D                     ___flsub@b:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x3C
  1157  00003D                     	ds	4
  1158  000041                     ??_stof:
  1159  000041                     ___flsub@a:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x40
  1163  000041                     	ds	1
  1164  000042                     stof@point_seen:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x41
  1168  000042                     	ds	2
  1169  000044                     stof@rez:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x43
  1173  000044                     	ds	1
  1174  000045                     ?_efgtoa:
  1175                           	opt callstack 0
  1176  000045                     efgtoa@fp:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x44
  1180  000045                     	ds	2
  1181  000047                     efgtoa@f:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x46
  1185  000047                     	ds	1
  1186  000048                     stof@fact:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x47
  1190  000048                     	ds	3
  1191  00004B                     efgtoa@c:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x4A
  1195  00004B                     	ds	1
  1196  00004C                     ??_efgtoa:
  1197  00004C                     stof@d:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x4B
  1201  00004C                     	ds	5
  1202  000051                     ??_vfpfcnvrt:
  1203                           
  1204                           ; 1 bytes @ 0x50
  1205  000051                     	ds	4
  1206  000055                     main@receive_command:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x54
  1210  000055                     	ds	1
  1211                           
  1212 ;;
  1213 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1214 ;;
  1215 ;; *************** function _main *****************
  1216 ;; Defined at:
  1217 ;;		line 131 in file "main.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  receive_comm    1   84[COMRAM] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1233 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1234 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1235 ;;Total ram usage:        3 bytes
  1236 ;; Hardware stack levels required when called:   11
  1237 ;; This function calls:
  1238 ;;		_ADC_Init
  1239 ;;		_I2C_Init
  1240 ;;		_I2C_Transmit
  1241 ;;		_UART1_Init
  1242 ;;		_UART1_ReceiveCommand
  1243 ;;		_UART_handler
  1244 ;;		___flge
  1245 ;;		___flmul
  1246 ;;		___xxtofl
  1247 ;;		_timer0_init
  1248 ;; This function is called by:
  1249 ;;		Startup code after reset
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text0
  1254  004432                     __ptext0:
  1255                           	opt callstack 0
  1256  004432                     _main:
  1257                           	opt callstack 20
  1258                           
  1259                           ;main.c: 132:     OSCFRQ = 0x08;
  1260                           
  1261                           ;incstack = 0
  1262  004432  0E08               	movlw	8
  1263  004434  0139               	movlb	57	; () banked
  1264  004436  6FDF               	movwf	223,b	;volatile
  1265                           
  1266                           ;main.c: 133:     OSCTUNE = 0x00;
  1267  004438  0E00               	movlw	0
  1268  00443A  6FDE               	movwf	222,b	;volatile
  1269                           
  1270                           ;main.c: 134:     OSCEN = 0x40;
  1271  00443C  0E40               	movlw	64
  1272  00443E  6FDD               	movwf	221,b	;volatile
  1273  004440                     l209:
  1274                           
  1275                           ; BSR set to: 57
  1276  004440  BDDC               	btfsc	220,6,b	;volatile
  1277  004442  D002               	goto	u10130
  1278                           
  1279                           ; BSR set to: 57
  1280  004444  A5DC               	btfss	220,2,b	;volatile
  1281  004446  D7FC               	goto	l209
  1282  004448                     u10130:
  1283                           
  1284                           ; BSR set to: 57
  1285                           ;main.c: 141:     IVTLOCK = 0x01;
  1286  004448  0E01               	movlw	1
  1287  00444A  6ED4               	movwf	16340,c	;volatile
  1288                           
  1289                           ; BSR set to: 57
  1290                           ;main.c: 144:     PPSLOCKbits.PPSLOCKED = 0;
  1291  00444C  013A               	movlb	58	; () banked
  1292  00444E  91BF               	bcf	191,0,b	;volsfr
  1293                           
  1294                           ; BSR set to: 58
  1295                           ;main.c: 147:     timer0_init();
  1296  004450  EC37  F029         	call	_timer0_init	;wreg free
  1297                           
  1298                           ;main.c: 148:     UART1_Init(1);
  1299  004454  0E01               	movlw	1
  1300  004456  EC43  F026         	call	_UART1_Init
  1301                           
  1302                           ;main.c: 149:     ADC_Init();
  1303  00445A  EC48  F029         	call	_ADC_Init	;wreg free
  1304                           
  1305                           ;main.c: 150:     I2C_Init();
  1306  00445E  ECF5  F026         	call	_I2C_Init	;wreg free
  1307                           
  1308                           ;main.c: 152:     INTCON0bits.GIEH = 1;
  1309  004462  8ED2               	bsf	16338,7,c	;volatile
  1310                           
  1311                           ;main.c: 153:     INTCON0bits.GIEL = 1;
  1312  004464  8CD2               	bsf	16338,6,c	;volatile
  1313                           
  1314                           ;main.c: 154:     INTCON0bits.IPEN = 1;
  1315  004466  8AD2               	bsf	16338,5,c	;volatile
  1316                           
  1317                           ;main.c: 157:     TRISAbits.TRISA0 = 0;
  1318  004468  90C2               	bcf	16322,0,c	;volatile
  1319                           
  1320                           ;main.c: 158:     ANSELAbits.ANSELA0 = 1;
  1321  00446A  013A               	movlb	58	; () banked
  1322  00446C  8140               	bsf	64,0,b	;volatile
  1323                           
  1324                           ; BSR set to: 58
  1325                           ;main.c: 159:     led_enable = 1;
  1326  00446E  0E01               	movlw	1
  1327  004470  0100               	movlb	0	; () banked
  1328  004472  6FF0               	movwf	_led_enable& (0+255),b
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;main.c: 161:     TRISAbits.TRISA1 = 0;
  1332  004474  92C2               	bcf	16322,1,c	;volatile
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;main.c: 162:     ANSELAbits.ANSELA1 = 1;
  1336  004476  013A               	movlb	58	; () banked
  1337  004478  8340               	bsf	64,1,b	;volatile
  1338                           
  1339                           ; BSR set to: 58
  1340                           ;main.c: 163:     LATAbits.LA1 = 0;
  1341  00447A  92BA               	bcf	16314,1,c	;volatile
  1342                           
  1343                           ; BSR set to: 58
  1344                           ;main.c: 165:     TRISBbits.TRISB2 = 0;
  1345  00447C  94C3               	bcf	16323,2,c	;volatile
  1346                           
  1347                           ; BSR set to: 58
  1348                           ;main.c: 166:     TRISBbits.TRISB3 = 0;
  1349  00447E  96C3               	bcf	16323,3,c	;volatile
  1350                           
  1351                           ; BSR set to: 58
  1352                           ;main.c: 167:     LATBbits.LB2 = 1;
  1353  004480  84BB               	bsf	16315,2,c	;volatile
  1354                           
  1355                           ; BSR set to: 58
  1356                           ;main.c: 168:     LATBbits.LB3 = 1;
  1357  004482  86BB               	bsf	16315,3,c	;volatile
  1358                           
  1359                           ; BSR set to: 58
  1360                           ;main.c: 170:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1361  004484  0EA3               	movlw	163
  1362  004486  0100               	movlb	0	; () banked
  1363  004488  6FC5               	movwf	(??_main+1)& (0+255),b
  1364  00448A  0E57               	movlw	87
  1365  00448C  6FC4               	movwf	??_main& (0+255),b
  1366  00448E  0E02               	movlw	2
  1367  004490                     u10177:
  1368  004490  2EE8               	decfsz	wreg,f,c
  1369  004492  D7FE               	bra	u10177
  1370  004494  2FC4               	decfsz	??_main& (0+255),f,b
  1371  004496  D7FC               	bra	u10177
  1372  004498  2FC5               	decfsz	(??_main+1)& (0+255),f,b
  1373  00449A  D7FA               	bra	u10177
  1374  00449C  F000               	nop	
  1375                           
  1376                           ;main.c: 172:     AD5272_COMMANDS[0] = 0x1C;
  1377  00449E  0E1C               	movlw	28
  1378  0044A0  0100               	movlb	0	; () banked
  1379  0044A2  6FF8               	movwf	_AD5272_COMMANDS& (0+255),b
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;main.c: 173:     AD5272_COMMANDS[1] = 0x02;
  1383  0044A4  0E02               	movlw	2
  1384  0044A6  6FF9               	movwf	(_AD5272_COMMANDS+1)& (0+255),b
  1385                           
  1386                           ; BSR set to: 0
  1387  0044A8  0EF8               	movlw	low _AD5272_COMMANDS
  1388  0044AA  6E06               	movwf	I2C_Transmit@buffer,c
  1389  0044AC  0E00               	movlw	high _AD5272_COMMANDS
  1390  0044AE  6E07               	movwf	I2C_Transmit@buffer+1,c
  1391  0044B0  0E02               	movlw	2
  1392  0044B2  6E08               	movwf	I2C_Transmit@buffer_size,c
  1393  0044B4  0E5E               	movlw	94
  1394  0044B6  6E09               	movwf	I2C_Transmit@address,c
  1395  0044B8  EC1B  F025         	call	_I2C_Transmit	;wreg free
  1396  0044BC                     l7177:
  1397  0044BC  0100               	movlb	0	; () banked
  1398  0044BE  51F2               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  1399  0044C0  B4D8               	btfsc	status,2,c
  1400  0044C2  D7FC               	goto	l7177
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;main.c: 176:     AD5272_COMMANDS[0] = 0x04;
  1404  0044C4  0E04               	movlw	4
  1405  0044C6  6FF8               	movwf	_AD5272_COMMANDS& (0+255),b
  1406                           
  1407                           ;main.c: 179:     WDTCON1 = 0x07;
  1408  0044C8  0E07               	movlw	7
  1409  0044CA  0139               	movlb	57	; () banked
  1410  0044CC  6F5C               	movwf	92,b	;volatile
  1411                           
  1412                           ;main.c: 180:     WDTCON0 = 0x1B;
  1413  0044CE  0E1B               	movlw	27
  1414  0044D0  6F5B               	movwf	91,b	;volatile
  1415  0044D2                     l7181:
  1416                           
  1417                           ;main.c: 185:         receive_command = UART1_ReceiveCommand();
  1418  0044D2  EC49  F01B         	call	_UART1_ReceiveCommand	;wreg free
  1419  0044D6  6E55               	movwf	main@receive_command,c
  1420                           
  1421                           ;main.c: 186:         CURRENT_REAL_AMPLIFIED_DVOLTAGE = ADC_CURRENT_RESULT * 0.00122;
  1422  0044D8  0060  F3A8  F006   	movff	_ADC_CURRENT_RESULT,___xxtofl@val
  1423  0044DE  0060  F3AC  F007   	movff	_ADC_CURRENT_RESULT+1,___xxtofl@val+1
  1424  0044E4  0E00               	movlw	0
  1425  0044E6  BE07               	btfsc	___xxtofl@val+1,7,c
  1426  0044E8  0EFF               	movlw	-1
  1427  0044EA  6E08               	movwf	___xxtofl@val+2,c
  1428  0044EC  6E09               	movwf	___xxtofl@val+3,c
  1429  0044EE  0E01               	movlw	1
  1430  0044F0  EC67  F021         	call	___xxtofl
  1431  0044F4  0060  F018  F014   	movff	?___xxtofl,___flmul@b
  1432  0044FA  0060  F01C  F015   	movff	?___xxtofl+1,___flmul@b+1
  1433  004500  0060  F020  F016   	movff	?___xxtofl+2,___flmul@b+2
  1434  004506  0060  F024  F017   	movff	?___xxtofl+3,___flmul@b+3
  1435  00450C  0E68               	movlw	104
  1436  00450E  6E18               	movwf	___flmul@a,c
  1437  004510  0EE8               	movlw	232
  1438  004512  6E19               	movwf	___flmul@a+1,c
  1439  004514  0E9F               	movlw	159
  1440  004516  6E1A               	movwf	___flmul@a+2,c
  1441  004518  0E3A               	movlw	58
  1442  00451A  6E1B               	movwf	___flmul@a+3,c
  1443  00451C  EC01  F016         	call	___flmul	;wreg free
  1444  004520  0060  F050  F11C   	movff	?___flmul,_CURRENT_REAL_AMPLIFIED_DVOLTAGE
  1445  004526  0060  F054  F11D   	movff	?___flmul+1,_CURRENT_REAL_AMPLIFIED_DVOLTAGE+1
  1446  00452C  0060  F058  F11E   	movff	?___flmul+2,_CURRENT_REAL_AMPLIFIED_DVOLTAGE+2
  1447  004532  0060  F05C  F11F   	movff	?___flmul+3,_CURRENT_REAL_AMPLIFIED_DVOLTAGE+3
  1448                           
  1449                           ;main.c: 187:         if(CURRENT_LIMIT_AMPLIFIED_DVOLTAGE <= CURRENT_REAL_AMPLIFIED_DVOL
      +                          TAGE)
  1450  004538  0060  F470  F02D   	movff	_CURRENT_REAL_AMPLIFIED_DVOLTAGE,___flge@ff1
  1451  00453E  0060  F474  F02E   	movff	_CURRENT_REAL_AMPLIFIED_DVOLTAGE+1,___flge@ff1+1
  1452  004544  0060  F478  F02F   	movff	_CURRENT_REAL_AMPLIFIED_DVOLTAGE+2,___flge@ff1+2
  1453  00454A  0060  F47C  F030   	movff	_CURRENT_REAL_AMPLIFIED_DVOLTAGE+3,___flge@ff1+3
  1454  004550  0060  F3E8  F031   	movff	_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE,___flge@ff2
  1455  004556  0060  F3EC  F032   	movff	_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+1,___flge@ff2+1
  1456  00455C  0060  F3F0  F033   	movff	_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+2,___flge@ff2+2
  1457  004562  0060  F3F4  F034   	movff	_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+3,___flge@ff2+3
  1458  004568  EC37  F023         	call	___flge	;wreg free
  1459  00456C  A0D8               	btfss	status,0,c
  1460  00456E  D002               	goto	l218
  1461                           
  1462                           ;main.c: 188:             LATAbits.LA1 = 1;
  1463  004570  82BA               	bsf	16314,1,c	;volatile
  1464  004572  D001               	goto	l7189
  1465  004574                     l218:
  1466                           
  1467                           ;main.c: 190:             LATAbits.LA1 = 0;
  1468  004574  92BA               	bcf	16314,1,c	;volatile
  1469  004576                     l7189:
  1470                           
  1471                           ;main.c: 191:         if(receive_command)
  1472  004576  5055               	movf	main@receive_command,w,c
  1473  004578  A4D8               	btfss	status,2,c
  1474                           
  1475                           ;main.c: 192:             UART_handler();
  1476  00457A  EC34  F01E         	call	_UART_handler	;wreg free
  1477  00457E  0004               	clrwdt		;# 
  1478  004580  D7A8               	goto	l7181
  1479  004582                     __end_of_main:
  1480                           	opt callstack 0
  1481                           
  1482 ;; *************** function _timer0_init *****************
  1483 ;; Defined at:
  1484 ;;		line 245 in file "main.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    2
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text1
  1513  00526E                     __ptext1:
  1514                           	opt callstack 0
  1515  00526E                     _timer0_init:
  1516                           	opt callstack 28
  1517                           
  1518                           ;main.c: 246:     T0CON0 = 0x10;
  1519                           
  1520                           ;incstack = 0
  1521  00526E  0E10               	movlw	16
  1522  005270  6EB8               	movwf	16312,c	;volatile
  1523                           
  1524                           ;main.c: 247:     T0CON1 = 0x75;
  1525  005272  0E75               	movlw	117
  1526  005274  6EB9               	movwf	16313,c	;volatile
  1527                           
  1528                           ;main.c: 248:     TMR0L = 0xB0;
  1529  005276  0EB0               	movlw	176
  1530  005278  6EB6               	movwf	16310,c	;volatile
  1531                           
  1532                           ;main.c: 249:     TMR0H = 0x3C;
  1533  00527A  0E3C               	movlw	60
  1534  00527C  6EB7               	movwf	16311,c	;volatile
  1535                           
  1536                           ;main.c: 250:     counter_timer0 = 0;
  1537  00527E  0E00               	movlw	0
  1538  005280  0100               	movlb	0	; () banked
  1539  005282  6FF1               	movwf	_counter_timer0& (0+255),b
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;main.c: 251:     IPR3bits.TMR0IP = 0;
  1543  005284  0139               	movlb	57	; () banked
  1544  005286  9F83               	bcf	131,7,b	;volatile
  1545                           
  1546                           ; BSR set to: 57
  1547                           ;main.c: 252:     PIR3bits.TMR0IF = 0;
  1548  005288  9FA3               	bcf	163,7,b	;volatile
  1549                           
  1550                           ; BSR set to: 57
  1551                           ;main.c: 253:     PIE3bits.TMR0IE = 1;
  1552  00528A  8F93               	bsf	147,7,b	;volatile
  1553                           
  1554                           ; BSR set to: 57
  1555                           ;main.c: 254:     T0CON0bits.EN = 1;
  1556  00528C  8EB8               	bsf	16312,7,c	;volatile
  1557                           
  1558                           ; BSR set to: 57
  1559  00528E  0012               	return		;funcret
  1560  005290                     __end_of_timer0_init:
  1561                           	opt callstack 0
  1562                           
  1563 ;; *************** function _UART_handler *****************
  1564 ;; Defined at:
  1565 ;;		line 199 in file "main.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1580 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1581 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1582 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1583 ;;Total ram usage:        6 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:   10
  1586 ;; This function calls:
  1587 ;;		_GetStringSize
  1588 ;;		_I2C_handler
  1589 ;;		_UART1_SendString
  1590 ;;		___flmul
  1591 ;;		___xxtofl
  1592 ;;		_memset
  1593 ;;		_sprintf
  1594 ;;		_stof
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text2
  1601  003C68                     __ptext2:
  1602                           	opt callstack 0
  1603  003C68                     _UART_handler:
  1604                           	opt callstack 20
  1605                           
  1606                           ;main.c: 200:     memset(tx_buffer,0,55);
  1607                           
  1608                           ; BSR set to: 57
  1609                           ;incstack = 0
  1610  003C68  0E70               	movlw	low _tx_buffer
  1611  003C6A  6E06               	movwf	memset@st,c
  1612  003C6C  0E01               	movlw	high _tx_buffer
  1613  003C6E  6E07               	movwf	memset@st+1,c
  1614  003C70  0E00               	movlw	0
  1615  003C72  6E08               	movwf	memset@x,c
  1616  003C74  0E00               	movlw	0
  1617  003C76  6E0A               	movwf	memset@size+1,c
  1618  003C78  0E37               	movlw	55
  1619  003C7A  6E09               	movwf	memset@size,c
  1620  003C7C  ECBC  F028         	call	_memset	;wreg free
  1621                           
  1622                           ;main.c: 201:     if(COMMAND_WR){
  1623  003C80  0100               	movlb	0	; () banked
  1624  003C82  51F6               	movf	_COMMAND_WR& (0+255),w,b
  1625  003C84  A4D8               	btfss	status,2,c
  1626  003C86  D0A7               	goto	l7091
  1627  003C88  D113               	goto	l7115
  1628  003C8A                     l7077:
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;main.c: 204:                 sprintf(tx_buffer,"%f",((float)ADC_VOLTAGE_RESULT * 0.0012
      +                          2));
  1632  003C8A  0060  F3B0  F006   	movff	_ADC_VOLTAGE_RESULT,___xxtofl@val
  1633  003C90  0060  F3B4  F007   	movff	_ADC_VOLTAGE_RESULT+1,___xxtofl@val+1
  1634  003C96  0E00               	movlw	0
  1635  003C98  BE07               	btfsc	___xxtofl@val+1,7,c
  1636  003C9A  0EFF               	movlw	-1
  1637  003C9C  6E08               	movwf	___xxtofl@val+2,c
  1638  003C9E  6E09               	movwf	___xxtofl@val+3,c
  1639  003CA0  0E01               	movlw	1
  1640  003CA2  EC67  F021         	call	___xxtofl
  1641  003CA6  0060  F018  F014   	movff	?___xxtofl,___flmul@b
  1642  003CAC  0060  F01C  F015   	movff	?___xxtofl+1,___flmul@b+1
  1643  003CB2  0060  F020  F016   	movff	?___xxtofl+2,___flmul@b+2
  1644  003CB8  0060  F024  F017   	movff	?___xxtofl+3,___flmul@b+3
  1645  003CBE  0E68               	movlw	104
  1646  003CC0  6E18               	movwf	___flmul@a,c
  1647  003CC2  0EE8               	movlw	232
  1648  003CC4  6E19               	movwf	___flmul@a+1,c
  1649  003CC6  0E9F               	movlw	159
  1650  003CC8  6E1A               	movwf	___flmul@a+2,c
  1651  003CCA  0E3A               	movlw	58
  1652  003CCC  6E1B               	movwf	___flmul@a+3,c
  1653  003CCE  EC01  F016         	call	___flmul	;wreg free
  1654  003CD2  0060  F050  F1AF   	movff	?___flmul,_UART_handler$2468
  1655  003CD8  0060  F054  F1B0   	movff	?___flmul+1,_UART_handler$2468+1
  1656  003CDE  0060  F058  F1B1   	movff	?___flmul+2,_UART_handler$2468+2
  1657  003CE4  0060  F05C  F1B2   	movff	?___flmul+3,_UART_handler$2468+3
  1658                           
  1659                           ;main.c: 204:                 sprintf(tx_buffer,"%f",((float)ADC_VOLTAGE_RESULT * 0.0012
      +                          2));
  1660  003CEA  0E70               	movlw	low _tx_buffer
  1661  003CEC  0100               	movlb	0	; () banked
  1662  003CEE  6FB0               	movwf	sprintf@s& (0+255),b
  1663  003CF0  0E01               	movlw	high _tx_buffer
  1664  003CF2  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1665  003CF4  0EA8               	movlw	low STR_1
  1666  003CF6  6FB2               	movwf	sprintf@fmt& (0+255),b
  1667  003CF8  0E20               	movlw	high STR_1
  1668  003CFA  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1669  003CFC  0060  F6BC  F0B4   	movff	_UART_handler$2468,?_sprintf+4
  1670  003D02  0060  F6C0  F0B5   	movff	_UART_handler$2468+1,?_sprintf+5
  1671  003D08  0060  F6C4  F0B6   	movff	_UART_handler$2468+2,?_sprintf+6
  1672  003D0E  0060  F6C8  F0B7   	movff	_UART_handler$2468+3,?_sprintf+7
  1673  003D14  EC8E  F027         	call	_sprintf	;wreg free
  1674                           
  1675                           ;main.c: 205:                 break;
  1676  003D18  D0DD               	goto	l7117
  1677  003D1A                     l7081:
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;main.c: 207:                 sprintf(tx_buffer,"%f",((float)ADC_CURRENT_RESULT * 0.0012
      +                          2));
  1681  003D1A  0060  F3A8  F006   	movff	_ADC_CURRENT_RESULT,___xxtofl@val
  1682  003D20  0060  F3AC  F007   	movff	_ADC_CURRENT_RESULT+1,___xxtofl@val+1
  1683  003D26  0E00               	movlw	0
  1684  003D28  BE07               	btfsc	___xxtofl@val+1,7,c
  1685  003D2A  0EFF               	movlw	-1
  1686  003D2C  6E08               	movwf	___xxtofl@val+2,c
  1687  003D2E  6E09               	movwf	___xxtofl@val+3,c
  1688  003D30  0E01               	movlw	1
  1689  003D32  EC67  F021         	call	___xxtofl
  1690  003D36  0060  F018  F014   	movff	?___xxtofl,___flmul@b
  1691  003D3C  0060  F01C  F015   	movff	?___xxtofl+1,___flmul@b+1
  1692  003D42  0060  F020  F016   	movff	?___xxtofl+2,___flmul@b+2
  1693  003D48  0060  F024  F017   	movff	?___xxtofl+3,___flmul@b+3
  1694  003D4E  0E68               	movlw	104
  1695  003D50  6E18               	movwf	___flmul@a,c
  1696  003D52  0EE8               	movlw	232
  1697  003D54  6E19               	movwf	___flmul@a+1,c
  1698  003D56  0E9F               	movlw	159
  1699  003D58  6E1A               	movwf	___flmul@a+2,c
  1700  003D5A  0E3A               	movlw	58
  1701  003D5C  6E1B               	movwf	___flmul@a+3,c
  1702  003D5E  EC01  F016         	call	___flmul	;wreg free
  1703  003D62  0060  F050  F1AF   	movff	?___flmul,_UART_handler$2468
  1704  003D68  0060  F054  F1B0   	movff	?___flmul+1,_UART_handler$2468+1
  1705  003D6E  0060  F058  F1B1   	movff	?___flmul+2,_UART_handler$2468+2
  1706  003D74  0060  F05C  F1B2   	movff	?___flmul+3,_UART_handler$2468+3
  1707                           
  1708                           ;main.c: 207:                 sprintf(tx_buffer,"%f",((float)ADC_CURRENT_RESULT * 0.0012
      +                          2));
  1709  003D7A  0E70               	movlw	low _tx_buffer
  1710  003D7C  0100               	movlb	0	; () banked
  1711  003D7E  6FB0               	movwf	sprintf@s& (0+255),b
  1712  003D80  0E01               	movlw	high _tx_buffer
  1713  003D82  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1714  003D84  0EA8               	movlw	low STR_1
  1715  003D86  6FB2               	movwf	sprintf@fmt& (0+255),b
  1716  003D88  0E20               	movlw	high STR_1
  1717  003D8A  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1718  003D8C  0060  F6BC  F0B4   	movff	_UART_handler$2468,?_sprintf+4
  1719  003D92  0060  F6C0  F0B5   	movff	_UART_handler$2468+1,?_sprintf+5
  1720  003D98  0060  F6C4  F0B6   	movff	_UART_handler$2468+2,?_sprintf+6
  1721  003D9E  0060  F6C8  F0B7   	movff	_UART_handler$2468+3,?_sprintf+7
  1722  003DA4  EC8E  F027         	call	_sprintf	;wreg free
  1723                           
  1724                           ;main.c: 208:                 break;
  1725  003DA8  D095               	goto	l7117
  1726  003DAA                     l7085:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;main.c: 210:                 sprintf(tx_buffer,"Version 1.0\nTeam 5V\nXaris Ketoglou,Vo
      +                          ula Kontotoli");
  1730  003DAA  0E70               	movlw	low _tx_buffer
  1731  003DAC  6FB0               	movwf	sprintf@s& (0+255),b
  1732  003DAE  0E01               	movlw	high _tx_buffer
  1733  003DB0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1734  003DB2  0E01               	movlw	low STR_3
  1735  003DB4  6FB2               	movwf	sprintf@fmt& (0+255),b
  1736  003DB6  0E20               	movlw	high STR_3
  1737  003DB8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1738  003DBA  EC8E  F027         	call	_sprintf	;wreg free
  1739                           
  1740                           ;main.c: 211:                 break;
  1741  003DBE  D08A               	goto	l7117
  1742  003DC0                     l7087:
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;main.c: 213:                 sprintf(tx_buffer,"Command not recognized!");
  1746  003DC0  0E70               	movlw	low _tx_buffer
  1747  003DC2  6FB0               	movwf	sprintf@s& (0+255),b
  1748  003DC4  0E01               	movlw	high _tx_buffer
  1749  003DC6  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1750  003DC8  0E34               	movlw	low STR_4
  1751  003DCA  6FB2               	movwf	sprintf@fmt& (0+255),b
  1752  003DCC  0E20               	movlw	high STR_4
  1753  003DCE  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1754  003DD0  EC8E  F027         	call	_sprintf	;wreg free
  1755                           
  1756                           ;main.c: 214:                 break;
  1757  003DD4  D07F               	goto	l7117
  1758  003DD6                     l7091:
  1759                           
  1760                           ; BSR set to: 0
  1761  003DD6  51F5               	movf	_COMMAND& (0+255),w,b
  1762  003DD8  6FC2               	movwf	??_UART_handler& (0+255),b
  1763  003DDA  6BC3               	clrf	(??_UART_handler+1)& (0+255),b
  1764                           
  1765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1766                           ; Switch size 1, requested type "simple"
  1767                           ; Number of cases is 1, Range of values is 0 to 0
  1768                           ; switch strategies available:
  1769                           ; Name         Instructions Cycles
  1770                           ; simple_byte            4     3 (average)
  1771                           ;	Chosen strategy is simple_byte
  1772  003DDC  51C3               	movf	(??_UART_handler+1)& (0+255),w,b
  1773  003DDE  0A00               	xorlw	0	; case 0
  1774  003DE0  A4D8               	btfss	status,2,c
  1775  003DE2  D7EE               	goto	l7087
  1776                           
  1777                           ; BSR set to: 0
  1778                           ; Switch size 1, requested type "simple"
  1779                           ; Number of cases is 3, Range of values is 0 to 2
  1780                           ; switch strategies available:
  1781                           ; Name         Instructions Cycles
  1782                           ; simple_byte           10     6 (average)
  1783                           ;	Chosen strategy is simple_byte
  1784  003DE4  51C2               	movf	??_UART_handler& (0+255),w,b
  1785  003DE6  0A00               	xorlw	0	; case 0
  1786  003DE8  B4D8               	btfsc	status,2,c
  1787  003DEA  D74F               	goto	l7077
  1788  003DEC  0A01               	xorlw	1	; case 1
  1789  003DEE  B4D8               	btfsc	status,2,c
  1790  003DF0  D794               	goto	l7081
  1791  003DF2  0A03               	xorlw	3	; case 2
  1792  003DF4  B4D8               	btfsc	status,2,c
  1793  003DF6  D7D9               	goto	l7085
  1794  003DF8  D7E3               	goto	l7087
  1795  003DFA                     l7093:
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;main.c: 219:                 if(COMMAND_WRITE_NUMBER){
  1799  003DFA  51EE               	movf	_COMMAND_WRITE_NUMBER& (0+255),w,b
  1800  003DFC  11EF               	iorwf	(_COMMAND_WRITE_NUMBER+1)& (0+255),w,b
  1801  003DFE  B4D8               	btfsc	status,2,c
  1802  003E00  D00D               	goto	l7099
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;main.c: 220:                     led_enable = 1;
  1806  003E02  0E01               	movlw	1
  1807  003E04  6FF0               	movwf	_led_enable& (0+255),b
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;main.c: 221:                     sprintf(tx_buffer,"Blinking LED is ON!");
  1811  003E06  0E70               	movlw	low _tx_buffer
  1812  003E08  6FB0               	movwf	sprintf@s& (0+255),b
  1813  003E0A  0E01               	movlw	high _tx_buffer
  1814  003E0C  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1815  003E0E  0E61               	movlw	low STR_5
  1816  003E10  6FB2               	movwf	sprintf@fmt& (0+255),b
  1817  003E12  0E20               	movlw	high STR_5
  1818  003E14  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1819  003E16  EC8E  F027         	call	_sprintf	;wreg free
  1820                           
  1821                           ;main.c: 222:                 }else{
  1822  003E1A  D05C               	goto	l7117
  1823  003E1C                     l7099:
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;main.c: 223:                     led_enable = 0;
  1827  003E1C  0E00               	movlw	0
  1828  003E1E  6FF0               	movwf	_led_enable& (0+255),b
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 224:                     sprintf(tx_buffer,"Blinking LED is OFF!");
  1832  003E20  0E70               	movlw	low _tx_buffer
  1833  003E22  6FB0               	movwf	sprintf@s& (0+255),b
  1834  003E24  0E01               	movlw	high _tx_buffer
  1835  003E26  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1836  003E28  0E4C               	movlw	low STR_6
  1837  003E2A  6FB2               	movwf	sprintf@fmt& (0+255),b
  1838  003E2C  0E20               	movlw	high STR_6
  1839  003E2E  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1840  003E30  EC8E  F027         	call	_sprintf	;wreg free
  1841  003E34  D04F               	goto	l7117
  1842  003E36                     l7103:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;main.c: 228:                 I2C_handler(COMMAND_WRITE_NUMBER);
  1846  003E36  0060  F3B8  F012   	movff	_COMMAND_WRITE_NUMBER,I2C_handler@value
  1847  003E3C  0060  F3BC  F013   	movff	_COMMAND_WRITE_NUMBER+1,I2C_handler@value+1
  1848  003E42  EC21  F029         	call	_I2C_handler	;wreg free
  1849                           
  1850                           ;main.c: 229:                 sprintf(tx_buffer,"Voltage set!");
  1851  003E46  0E70               	movlw	low _tx_buffer
  1852  003E48  0100               	movlb	0	; () banked
  1853  003E4A  6FB0               	movwf	sprintf@s& (0+255),b
  1854  003E4C  0E01               	movlw	high _tx_buffer
  1855  003E4E  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1856  003E50  0E88               	movlw	low STR_7
  1857  003E52  6FB2               	movwf	sprintf@fmt& (0+255),b
  1858  003E54  0E20               	movlw	high STR_7
  1859  003E56  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1860  003E58  EC8E  F027         	call	_sprintf	;wreg free
  1861                           
  1862                           ;main.c: 230:                 break;
  1863  003E5C  D03B               	goto	l7117
  1864  003E5E                     l7107:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;main.c: 232:                 CURRENT_LIMIT_AMPLIFIED_DVOLTAGE = stof(COMMAND_CURRENT_LI
      +                          MIT);
  1868  003E5E  0EA7               	movlw	low _COMMAND_CURRENT_LIMIT
  1869  003E60  6E3D               	movwf	stof@s,c
  1870  003E62  0E01               	movlw	high _COMMAND_CURRENT_LIMIT
  1871  003E64  6E3E               	movwf	stof@s+1,c
  1872  003E66  EC75  F020         	call	_stof	;wreg free
  1873  003E6A  0060  F0F4  F0FA   	movff	?_stof,_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE
  1874  003E70  0060  F0F8  F0FB   	movff	?_stof+1,_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+1
  1875  003E76  0060  F0FC  F0FC   	movff	?_stof+2,_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+2
  1876  003E7C  0060  F100  F0FD   	movff	?_stof+3,_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE+3
  1877                           
  1878                           ;main.c: 233:                 sprintf(tx_buffer,"Current Limit set!");
  1879  003E82  0E70               	movlw	low _tx_buffer
  1880  003E84  0100               	movlb	0	; () banked
  1881  003E86  6FB0               	movwf	sprintf@s& (0+255),b
  1882  003E88  0E01               	movlw	high _tx_buffer
  1883  003E8A  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1884  003E8C  0E75               	movlw	low STR_8
  1885  003E8E  6FB2               	movwf	sprintf@fmt& (0+255),b
  1886  003E90  0E20               	movlw	high STR_8
  1887  003E92  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1888  003E94  EC8E  F027         	call	_sprintf	;wreg free
  1889                           
  1890                           ;main.c: 234:                 break;
  1891  003E98  D01D               	goto	l7117
  1892  003E9A                     l7111:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;main.c: 236:                 sprintf(tx_buffer,"Command not recognized!");
  1896  003E9A  0E70               	movlw	low _tx_buffer
  1897  003E9C  6FB0               	movwf	sprintf@s& (0+255),b
  1898  003E9E  0E01               	movlw	high _tx_buffer
  1899  003EA0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1900  003EA2  0E34               	movlw	low STR_4
  1901  003EA4  6FB2               	movwf	sprintf@fmt& (0+255),b
  1902  003EA6  0E20               	movlw	high STR_4
  1903  003EA8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1904  003EAA  EC8E  F027         	call	_sprintf	;wreg free
  1905                           
  1906                           ;main.c: 237:                 break;
  1907  003EAE  D012               	goto	l7117
  1908  003EB0                     l7115:
  1909                           
  1910                           ; BSR set to: 0
  1911  003EB0  51F5               	movf	_COMMAND& (0+255),w,b
  1912  003EB2  6FC2               	movwf	??_UART_handler& (0+255),b
  1913  003EB4  6BC3               	clrf	(??_UART_handler+1)& (0+255),b
  1914                           
  1915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1916                           ; Switch size 1, requested type "simple"
  1917                           ; Number of cases is 1, Range of values is 0 to 0
  1918                           ; switch strategies available:
  1919                           ; Name         Instructions Cycles
  1920                           ; simple_byte            4     3 (average)
  1921                           ;	Chosen strategy is simple_byte
  1922  003EB6  51C3               	movf	(??_UART_handler+1)& (0+255),w,b
  1923  003EB8  0A00               	xorlw	0	; case 0
  1924  003EBA  A4D8               	btfss	status,2,c
  1925  003EBC  D7EE               	goto	l7111
  1926                           
  1927                           ; BSR set to: 0
  1928                           ; Switch size 1, requested type "simple"
  1929                           ; Number of cases is 3, Range of values is 0 to 2
  1930                           ; switch strategies available:
  1931                           ; Name         Instructions Cycles
  1932                           ; simple_byte           10     6 (average)
  1933                           ;	Chosen strategy is simple_byte
  1934  003EBE  51C2               	movf	??_UART_handler& (0+255),w,b
  1935  003EC0  0A00               	xorlw	0	; case 0
  1936  003EC2  B4D8               	btfsc	status,2,c
  1937  003EC4  D79A               	goto	l7093
  1938  003EC6  0A01               	xorlw	1	; case 1
  1939  003EC8  B4D8               	btfsc	status,2,c
  1940  003ECA  D7B5               	goto	l7103
  1941  003ECC  0A03               	xorlw	3	; case 2
  1942  003ECE  B4D8               	btfsc	status,2,c
  1943  003ED0  D7C6               	goto	l7107
  1944  003ED2  D7E3               	goto	l7111
  1945  003ED4                     l7117:
  1946                           
  1947                           ;main.c: 240:     UART1_SendString(tx_buffer,GetStringSize());
  1948  003ED4  0E70               	movlw	low _tx_buffer
  1949  003ED6  6E0A               	movwf	UART1_SendString@str,c
  1950  003ED8  0E01               	movlw	high _tx_buffer
  1951  003EDA  6E0B               	movwf	UART1_SendString@str+1,c
  1952  003EDC  EC83  F028         	call	_GetStringSize	;wreg free
  1953  003EE0  0060  F018  F00C   	movff	?_GetStringSize,UART1_SendString@size
  1954  003EE6  0060  F01C  F00D   	movff	?_GetStringSize+1,UART1_SendString@size+1
  1955  003EEC  EC6E  F025         	call	_UART1_SendString	;wreg free
  1956  003EF0  0012               	return		;funcret
  1957  003EF2                     __end_of_UART_handler:
  1958                           	opt callstack 0
  1959                           
  1960 ;; *************** function _stof *****************
  1961 ;; Defined at:
  1962 ;;		line 282 in file "main.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  s               2   60[COMRAM] PTR unsigned char 
  1965 ;;		 -> COMMAND_CURRENT_LIMIT(8), 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  d               2   75[COMRAM] int 
  1968 ;;  point_seen      2   65[COMRAM] int 
  1969 ;;  fact            4   71[COMRAM] float 
  1970 ;;  rez             4   67[COMRAM] float 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  4   60[COMRAM] float 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1981 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1983 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1984 ;;Total ram usage:       17 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    3
  1987 ;; This function calls:
  1988 ;;		___fladd
  1989 ;;		___fldiv
  1990 ;;		___flmul
  1991 ;;		___xxtofl
  1992 ;; This function is called by:
  1993 ;;		_UART_handler
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text3
  1998  0040EA                     __ptext3:
  1999                           	opt callstack 0
  2000  0040EA                     _stof:
  2001                           	opt callstack 26
  2002                           
  2003                           ;main.c: 283:     float rez = 0, fact = 1;
  2004                           
  2005                           ;incstack = 0
  2006  0040EA  0E00               	movlw	0
  2007  0040EC  6E44               	movwf	stof@rez,c
  2008  0040EE  0E00               	movlw	0
  2009  0040F0  6E45               	movwf	stof@rez+1,c
  2010  0040F2  0E00               	movlw	0
  2011  0040F4  6E46               	movwf	stof@rez+2,c
  2012  0040F6  0E00               	movlw	0
  2013  0040F8  6E47               	movwf	stof@rez+3,c
  2014  0040FA  0E00               	movlw	0
  2015  0040FC  6E48               	movwf	stof@fact,c
  2016  0040FE  0E00               	movlw	0
  2017  004100  6E49               	movwf	stof@fact+1,c
  2018  004102  0E80               	movlw	128
  2019  004104  6E4A               	movwf	stof@fact+2,c
  2020  004106  0E3F               	movlw	63
  2021  004108  6E4B               	movwf	stof@fact+3,c
  2022                           
  2023                           ;main.c: 284:     if (*s == '-'){
  2024  00410A  0060  F0F7  FFD9   	movff	stof@s,fsr2l
  2025  004110  0060  F0FB  FFDA   	movff	stof@s+1,fsr2h
  2026  004116  0E2D               	movlw	45
  2027  004118  18DE               	xorwf	postinc2,w,c
  2028  00411A  A4D8               	btfss	status,2,c
  2029  00411C  D00A               	goto	l6639
  2030                           
  2031                           ;main.c: 285:         s++;
  2032  00411E  4A3D               	infsnz	stof@s,f,c
  2033  004120  2A3E               	incf	stof@s+1,f,c
  2034                           
  2035                           ;main.c: 286:         fact = -1;
  2036  004122  0E00               	movlw	0
  2037  004124  6E48               	movwf	stof@fact,c
  2038  004126  0E00               	movlw	0
  2039  004128  6E49               	movwf	stof@fact+1,c
  2040  00412A  0E80               	movlw	128
  2041  00412C  6E4A               	movwf	stof@fact+2,c
  2042  00412E  0EBF               	movlw	191
  2043  004130  6E4B               	movwf	stof@fact+3,c
  2044  004132                     l6639:
  2045                           
  2046                           ;main.c: 288:     for (int point_seen = 0; *s; s++){
  2047  004132  0E00               	movlw	0
  2048  004134  6E43               	movwf	stof@point_seen+1,c
  2049  004136  0E00               	movlw	0
  2050  004138  6E42               	movwf	stof@point_seen,c
  2051  00413A  D099               	goto	l6659
  2052  00413C                     l6641:
  2053                           
  2054                           ;main.c: 289:         if (*s == '.'){
  2055  00413C  0060  F0F7  FFD9   	movff	stof@s,fsr2l
  2056  004142  0060  F0FB  FFDA   	movff	stof@s+1,fsr2h
  2057  004148  0E2E               	movlw	46
  2058  00414A  18DE               	xorwf	postinc2,w,c
  2059  00414C  A4D8               	btfss	status,2,c
  2060  00414E  D005               	goto	l6645
  2061                           
  2062                           ;main.c: 290:             point_seen = 1;
  2063  004150  0E00               	movlw	0
  2064  004152  6E43               	movwf	stof@point_seen+1,c
  2065  004154  0E01               	movlw	1
  2066  004156  6E42               	movwf	stof@point_seen,c
  2067                           
  2068                           ;main.c: 291:             continue;
  2069  004158  D088               	goto	l6657
  2070  00415A                     l6645:
  2071                           
  2072                           ;main.c: 293:         int d = *s - '0';
  2073  00415A  0060  F0F7  FFD9   	movff	stof@s,fsr2l
  2074  004160  0060  F0FB  FFDA   	movff	stof@s+1,fsr2h
  2075  004166  50DF               	movf	indf2,w,c
  2076  004168  6E41               	movwf	??_stof& (0+255),c
  2077  00416A  0ED0               	movlw	208
  2078  00416C  2441               	addwf	??_stof,w,c
  2079  00416E  6E4C               	movwf	stof@d,c
  2080  004170  6A4D               	clrf	stof@d+1,c
  2081  004172  0EFF               	movlw	255
  2082  004174  224D               	addwfc	stof@d+1,f,c
  2083                           
  2084                           ;main.c: 294:         if (d >= 0 && d <= 9){
  2085  004176  BE4D               	btfsc	stof@d+1,7,c
  2086  004178  D078               	goto	l6657
  2087  00417A  BE4D               	btfsc	stof@d+1,7,c
  2088  00417C  D006               	goto	u9150
  2089  00417E  504D               	movf	stof@d+1,w,c
  2090  004180  E174               	bnz	l6657
  2091  004182  0E0A               	movlw	10
  2092  004184  5C4C               	subwf	stof@d,w,c
  2093  004186  B0D8               	btfsc	status,0,c
  2094  004188  D070               	goto	l6657
  2095  00418A                     u9150:
  2096                           
  2097                           ;main.c: 295:             if (point_seen) fact /= 10.0f;
  2098  00418A  5042               	movf	stof@point_seen,w,c
  2099  00418C  1043               	iorwf	stof@point_seen+1,w,c
  2100  00418E  B4D8               	btfsc	status,2,c
  2101  004190  D022               	goto	l6655
  2102  004192  0060  F120  F006   	movff	stof@fact,___fldiv@b
  2103  004198  0060  F124  F007   	movff	stof@fact+1,___fldiv@b+1
  2104  00419E  0060  F128  F008   	movff	stof@fact+2,___fldiv@b+2
  2105  0041A4  0060  F12C  F009   	movff	stof@fact+3,___fldiv@b+3
  2106  0041AA  0E00               	movlw	0
  2107  0041AC  6E0A               	movwf	___fldiv@a,c
  2108  0041AE  0E00               	movlw	0
  2109  0041B0  6E0B               	movwf	___fldiv@a+1,c
  2110  0041B2  0E20               	movlw	32
  2111  0041B4  6E0C               	movwf	___fldiv@a+2,c
  2112  0041B6  0E41               	movlw	65
  2113  0041B8  6E0D               	movwf	___fldiv@a+3,c
  2114  0041BA  ECDE  F01C         	call	___fldiv	;wreg free
  2115  0041BE  0060  F018  F048   	movff	?___fldiv,stof@fact
  2116  0041C4  0060  F01C  F049   	movff	?___fldiv+1,stof@fact+1
  2117  0041CA  0060  F020  F04A   	movff	?___fldiv+2,stof@fact+2
  2118  0041D0  0060  F024  F04B   	movff	?___fldiv+3,stof@fact+3
  2119  0041D6                     l6655:
  2120                           
  2121                           ;main.c: 296:                 rez = rez * 10.0f + (float)d;
  2122  0041D6  0E00               	movlw	0
  2123  0041D8  6E18               	movwf	___flmul@a,c
  2124  0041DA  0E00               	movlw	0
  2125  0041DC  6E19               	movwf	___flmul@a+1,c
  2126  0041DE  0E20               	movlw	32
  2127  0041E0  6E1A               	movwf	___flmul@a+2,c
  2128  0041E2  0E41               	movlw	65
  2129  0041E4  6E1B               	movwf	___flmul@a+3,c
  2130  0041E6  0060  F110  F014   	movff	stof@rez,___flmul@b
  2131  0041EC  0060  F114  F015   	movff	stof@rez+1,___flmul@b+1
  2132  0041F2  0060  F118  F016   	movff	stof@rez+2,___flmul@b+2
  2133  0041F8  0060  F11C  F017   	movff	stof@rez+3,___flmul@b+3
  2134  0041FE  EC01  F016         	call	___flmul	;wreg free
  2135  004202  0060  F050  F02D   	movff	?___flmul,___fladd@b
  2136  004208  0060  F054  F02E   	movff	?___flmul+1,___fladd@b+1
  2137  00420E  0060  F058  F02F   	movff	?___flmul+2,___fladd@b+2
  2138  004214  0060  F05C  F030   	movff	?___flmul+3,___fladd@b+3
  2139  00421A  0060  F130  F006   	movff	stof@d,___xxtofl@val
  2140  004220  0060  F134  F007   	movff	stof@d+1,___xxtofl@val+1
  2141  004226  0E00               	movlw	0
  2142  004228  BE07               	btfsc	___xxtofl@val+1,7,c
  2143  00422A  0EFF               	movlw	-1
  2144  00422C  6E08               	movwf	___xxtofl@val+2,c
  2145  00422E  6E09               	movwf	___xxtofl@val+3,c
  2146  004230  0E01               	movlw	1
  2147  004232  EC67  F021         	call	___xxtofl
  2148  004236  0060  F018  F031   	movff	?___xxtofl,___fladd@a
  2149  00423C  0060  F01C  F032   	movff	?___xxtofl+1,___fladd@a+1
  2150  004242  0060  F020  F033   	movff	?___xxtofl+2,___fladd@a+2
  2151  004248  0060  F024  F034   	movff	?___xxtofl+3,___fladd@a+3
  2152  00424E  ECA5  F019         	call	___fladd	;wreg free
  2153  004252  0060  F0B4  F044   	movff	?___fladd,stof@rez
  2154  004258  0060  F0B8  F045   	movff	?___fladd+1,stof@rez+1
  2155  00425E  0060  F0BC  F046   	movff	?___fladd+2,stof@rez+2
  2156  004264  0060  F0C0  F047   	movff	?___fladd+3,stof@rez+3
  2157  00426A                     l6657:
  2158  00426A  4A3D               	infsnz	stof@s,f,c
  2159  00426C  2A3E               	incf	stof@s+1,f,c
  2160  00426E                     l6659:
  2161  00426E  0060  F0F7  FFD9   	movff	stof@s,fsr2l
  2162  004274  0060  F0FB  FFDA   	movff	stof@s+1,fsr2h
  2163  00427A  50DF               	movf	indf2,w,c
  2164  00427C  A4D8               	btfss	status,2,c
  2165  00427E  D75E               	goto	l6641
  2166                           
  2167                           ;main.c: 299:     return rez * fact;
  2168  004280  0060  F110  F014   	movff	stof@rez,___flmul@b
  2169  004286  0060  F114  F015   	movff	stof@rez+1,___flmul@b+1
  2170  00428C  0060  F118  F016   	movff	stof@rez+2,___flmul@b+2
  2171  004292  0060  F11C  F017   	movff	stof@rez+3,___flmul@b+3
  2172  004298  0060  F120  F018   	movff	stof@fact,___flmul@a
  2173  00429E  0060  F124  F019   	movff	stof@fact+1,___flmul@a+1
  2174  0042A4  0060  F128  F01A   	movff	stof@fact+2,___flmul@a+2
  2175  0042AA  0060  F12C  F01B   	movff	stof@fact+3,___flmul@a+3
  2176  0042B0  EC01  F016         	call	___flmul	;wreg free
  2177  0042B4  0060  F050  F03D   	movff	?___flmul,?_stof
  2178  0042BA  0060  F054  F03E   	movff	?___flmul+1,?_stof+1
  2179  0042C0  0060  F058  F03F   	movff	?___flmul+2,?_stof+2
  2180  0042C6  0060  F05C  F040   	movff	?___flmul+3,?_stof+3
  2181  0042CC  0012               	return		;funcret
  2182  0042CE                     __end_of_stof:
  2183                           	opt callstack 0
  2184                           
  2185 ;; *************** function ___xxtofl *****************
  2186 ;; Defined at:
  2187 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  sign            1    wreg     unsigned char 
  2190 ;;  val             4    5[COMRAM] long 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  sign            1   13[COMRAM] unsigned char 
  2193 ;;  arg             4   15[COMRAM] unsigned long 
  2194 ;;  exp             1   14[COMRAM] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  4    5[COMRAM] unsigned char 
  2197 ;; Registers used:
  2198 ;;		wreg, status,2, status,0
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2205 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2206 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2207 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2208 ;;Total ram usage:       14 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    2
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;;		_UART_handler
  2216 ;;		_stof
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text4
  2221  0042CE                     __ptext4:
  2222                           	opt callstack 0
  2223  0042CE                     ___xxtofl:
  2224                           	opt callstack 28
  2225                           
  2226                           ;incstack = 0
  2227                           ;___xxtofl@sign stored from wreg
  2228  0042CE  6E0E               	movwf	___xxtofl@sign,c
  2229  0042D0  500E               	movf	___xxtofl@sign,w,c
  2230  0042D2  A4D8               	btfss	status,2,c
  2231  0042D4  AE09               	btfss	___xxtofl@val+3,7,c
  2232  0042D6  D022               	goto	l1339
  2233  0042D8  0060  F018  F00A   	movff	___xxtofl@val,??___xxtofl
  2234  0042DE  0060  F01C  F00B   	movff	___xxtofl@val+1,??___xxtofl+1
  2235  0042E4  0060  F020  F00C   	movff	___xxtofl@val+2,??___xxtofl+2
  2236  0042EA  0060  F024  F00D   	movff	___xxtofl@val+3,??___xxtofl+3
  2237  0042F0  1E0A               	comf	??___xxtofl,f,c
  2238  0042F2  1E0B               	comf	??___xxtofl+1,f,c
  2239  0042F4  1E0C               	comf	??___xxtofl+2,f,c
  2240  0042F6  1E0D               	comf	??___xxtofl+3,f,c
  2241  0042F8  2A0A               	incf	??___xxtofl,f,c
  2242  0042FA  0E00               	movlw	0
  2243  0042FC  220B               	addwfc	??___xxtofl+1,f,c
  2244  0042FE  220C               	addwfc	??___xxtofl+2,f,c
  2245  004300  220D               	addwfc	??___xxtofl+3,f,c
  2246  004302  0060  F028  F010   	movff	??___xxtofl,___xxtofl@arg
  2247  004308  0060  F02C  F011   	movff	??___xxtofl+1,___xxtofl@arg+1
  2248  00430E  0060  F030  F012   	movff	??___xxtofl+2,___xxtofl@arg+2
  2249  004314  0060  F034  F013   	movff	??___xxtofl+3,___xxtofl@arg+3
  2250  00431A  D00C               	goto	l6563
  2251  00431C                     l1339:
  2252  00431C  0060  F018  F010   	movff	___xxtofl@val,___xxtofl@arg
  2253  004322  0060  F01C  F011   	movff	___xxtofl@val+1,___xxtofl@arg+1
  2254  004328  0060  F020  F012   	movff	___xxtofl@val+2,___xxtofl@arg+2
  2255  00432E  0060  F024  F013   	movff	___xxtofl@val+3,___xxtofl@arg+3
  2256  004334                     l6563:
  2257  004334  5006               	movf	___xxtofl@val,w,c
  2258  004336  1007               	iorwf	___xxtofl@val+1,w,c
  2259  004338  1008               	iorwf	___xxtofl@val+2,w,c
  2260  00433A  1009               	iorwf	___xxtofl@val+3,w,c
  2261  00433C  A4D8               	btfss	status,2,c
  2262  00433E  D009               	goto	l6569
  2263  004340  0E00               	movlw	0
  2264  004342  6E06               	movwf	?___xxtofl,c
  2265  004344  0E00               	movlw	0
  2266  004346  6E07               	movwf	?___xxtofl+1,c
  2267  004348  0E00               	movlw	0
  2268  00434A  6E08               	movwf	?___xxtofl+2,c
  2269  00434C  0E00               	movlw	0
  2270  00434E  6E09               	movwf	?___xxtofl+3,c
  2271  004350  0012               	return	
  2272  004352                     l6569:
  2273  004352  0E96               	movlw	150
  2274  004354  6E0F               	movwf	___xxtofl@exp,c
  2275  004356  D006               	goto	l6573
  2276  004358                     l6571:
  2277  004358  2A0F               	incf	___xxtofl@exp,f,c
  2278  00435A  90D8               	bcf	status,0,c
  2279  00435C  3213               	rrcf	___xxtofl@arg+3,f,c
  2280  00435E  3212               	rrcf	___xxtofl@arg+2,f,c
  2281  004360  3211               	rrcf	___xxtofl@arg+1,f,c
  2282  004362  3210               	rrcf	___xxtofl@arg,f,c
  2283  004364                     l6573:
  2284  004364  0E00               	movlw	0
  2285  004366  1410               	andwf	___xxtofl@arg,w,c
  2286  004368  6E0A               	movwf	??___xxtofl& (0+255),c
  2287  00436A  0E00               	movlw	0
  2288  00436C  1411               	andwf	___xxtofl@arg+1,w,c
  2289  00436E  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  2290  004370  0E00               	movlw	0
  2291  004372  1412               	andwf	___xxtofl@arg+2,w,c
  2292  004374  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  2293  004376  0EFE               	movlw	254
  2294  004378  1413               	andwf	___xxtofl@arg+3,w,c
  2295  00437A  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  2296  00437C  500A               	movf	??___xxtofl,w,c
  2297  00437E  100B               	iorwf	??___xxtofl+1,w,c
  2298  004380  100C               	iorwf	??___xxtofl+2,w,c
  2299  004382  100D               	iorwf	??___xxtofl+3,w,c
  2300  004384  B4D8               	btfsc	status,2,c
  2301  004386  D00D               	goto	l1346
  2302  004388  D7E7               	goto	l6571
  2303  00438A                     l6575:
  2304  00438A  2A0F               	incf	___xxtofl@exp,f,c
  2305  00438C  0E01               	movlw	1
  2306  00438E  2610               	addwf	___xxtofl@arg,f,c
  2307  004390  0E00               	movlw	0
  2308  004392  2211               	addwfc	___xxtofl@arg+1,f,c
  2309  004394  2212               	addwfc	___xxtofl@arg+2,f,c
  2310  004396  2213               	addwfc	___xxtofl@arg+3,f,c
  2311  004398  90D8               	bcf	status,0,c
  2312  00439A  3213               	rrcf	___xxtofl@arg+3,f,c
  2313  00439C  3212               	rrcf	___xxtofl@arg+2,f,c
  2314  00439E  3211               	rrcf	___xxtofl@arg+1,f,c
  2315  0043A0  3210               	rrcf	___xxtofl@arg,f,c
  2316  0043A2                     l1346:
  2317  0043A2  0E00               	movlw	0
  2318  0043A4  1410               	andwf	___xxtofl@arg,w,c
  2319  0043A6  6E0A               	movwf	??___xxtofl& (0+255),c
  2320  0043A8  0E00               	movlw	0
  2321  0043AA  1411               	andwf	___xxtofl@arg+1,w,c
  2322  0043AC  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  2323  0043AE  0E00               	movlw	0
  2324  0043B0  1412               	andwf	___xxtofl@arg+2,w,c
  2325  0043B2  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  2326  0043B4  0EFF               	movlw	255
  2327  0043B6  1413               	andwf	___xxtofl@arg+3,w,c
  2328  0043B8  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  2329  0043BA  500A               	movf	??___xxtofl,w,c
  2330  0043BC  100B               	iorwf	??___xxtofl+1,w,c
  2331  0043BE  100C               	iorwf	??___xxtofl+2,w,c
  2332  0043C0  100D               	iorwf	??___xxtofl+3,w,c
  2333  0043C2  B4D8               	btfsc	status,2,c
  2334  0043C4  D007               	goto	l6583
  2335  0043C6  D7E1               	goto	l6575
  2336  0043C8                     l6581:
  2337  0043C8  060F               	decf	___xxtofl@exp,f,c
  2338  0043CA  90D8               	bcf	status,0,c
  2339  0043CC  3610               	rlcf	___xxtofl@arg,f,c
  2340  0043CE  3611               	rlcf	___xxtofl@arg+1,f,c
  2341  0043D0  3612               	rlcf	___xxtofl@arg+2,f,c
  2342  0043D2  3613               	rlcf	___xxtofl@arg+3,f,c
  2343  0043D4                     l6583:
  2344  0043D4  BE12               	btfsc	___xxtofl@arg+2,7,c
  2345  0043D6  D003               	goto	u9060
  2346  0043D8  0E02               	movlw	2
  2347  0043DA  600F               	cpfslt	___xxtofl@exp,c
  2348  0043DC  D7F5               	goto	l6581
  2349  0043DE                     u9060:
  2350  0043DE  A00F               	btfss	___xxtofl@exp,0,c
  2351  0043E0  9E12               	bcf	___xxtofl@arg+2,7,c
  2352  0043E2  90D8               	bcf	status,0,c
  2353  0043E4  320F               	rrcf	___xxtofl@exp,f,c
  2354  0043E6  0060  F03C  F00A   	movff	___xxtofl@exp,??___xxtofl
  2355  0043EC  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  2356  0043EE  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  2357  0043F0  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  2358  0043F2  0060  F028  F00D   	movff	??___xxtofl,??___xxtofl+3
  2359  0043F8  6A0C               	clrf	??___xxtofl+2,c
  2360  0043FA  6A0B               	clrf	??___xxtofl+1,c
  2361  0043FC  6A0A               	clrf	??___xxtofl,c
  2362  0043FE  500A               	movf	??___xxtofl,w,c
  2363  004400  1210               	iorwf	___xxtofl@arg,f,c
  2364  004402  500B               	movf	??___xxtofl+1,w,c
  2365  004404  1211               	iorwf	___xxtofl@arg+1,f,c
  2366  004406  500C               	movf	??___xxtofl+2,w,c
  2367  004408  1212               	iorwf	___xxtofl@arg+2,f,c
  2368  00440A  500D               	movf	??___xxtofl+3,w,c
  2369  00440C  1213               	iorwf	___xxtofl@arg+3,f,c
  2370  00440E  500E               	movf	___xxtofl@sign,w,c
  2371  004410  A4D8               	btfss	status,2,c
  2372  004412  AE09               	btfss	___xxtofl@val+3,7,c
  2373  004414  D001               	goto	l6599
  2374  004416  8E13               	bsf	___xxtofl@arg+3,7,c
  2375  004418                     l6599:
  2376  004418  0060  F040  F006   	movff	___xxtofl@arg,?___xxtofl
  2377  00441E  0060  F044  F007   	movff	___xxtofl@arg+1,?___xxtofl+1
  2378  004424  0060  F048  F008   	movff	___xxtofl@arg+2,?___xxtofl+2
  2379  00442A  0060  F04C  F009   	movff	___xxtofl@arg+3,?___xxtofl+3
  2380  004430  0012               	return		;funcret
  2381  004432                     __end_of___xxtofl:
  2382                           	opt callstack 0
  2383                           
  2384 ;; *************** function _sprintf *****************
  2385 ;; Defined at:
  2386 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2389 ;;		 -> tx_buffer(55), 
  2390 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2391 ;;		 -> STR_9(24), STR_8(19), STR_7(13), STR_6(21), 
  2392 ;;		 -> STR_5(20), STR_4(24), STR_3(51), STR_2(3), 
  2393 ;;		 -> STR_1(3), 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  f               6   92[BANK0 ] struct _IO_FILE
  2396 ;;  ap              2   90[BANK0 ] PTR void [1]
  2397 ;;		 -> ?_sprintf(2), 
  2398 ;;  ret             2    0        int 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  2   80[BANK0 ] int 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2408 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2409 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2411 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2412 ;;Total ram usage:       18 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    9
  2415 ;; This function calls:
  2416 ;;		_vfprintf
  2417 ;; This function is called by:
  2418 ;;		_UART_handler
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text5
  2423  004F1C                     __ptext5:
  2424                           	opt callstack 0
  2425  004F1C                     _sprintf:
  2426                           	opt callstack 20
  2427                           
  2428                           ;incstack = 0
  2429  004F1C  0EB4               	movlw	low (?_sprintf+4)
  2430  004F1E  0100               	movlb	0	; () banked
  2431  004F20  6FBA               	movwf	sprintf@ap& (0+255),b
  2432  004F22  0E00               	movlw	high (?_sprintf+4)
  2433  004F24  6FBB               	movwf	(sprintf@ap+1)& (0+255),b
  2434  004F26  0060  F2C0  F0BC   	movff	sprintf@s,sprintf@f
  2435  004F2C  0060  F2C4  F0BD   	movff	sprintf@s+1,sprintf@f+1
  2436                           
  2437                           ; BSR set to: 0
  2438  004F32  0E00               	movlw	0
  2439  004F34  6FBF               	movwf	(sprintf@f+3)& (0+255),b
  2440  004F36  0E00               	movlw	0
  2441  004F38  6FBE               	movwf	(sprintf@f+2)& (0+255),b
  2442                           
  2443                           ; BSR set to: 0
  2444  004F3A  0E00               	movlw	0
  2445  004F3C  6FC1               	movwf	(sprintf@f+5)& (0+255),b
  2446  004F3E  0E00               	movlw	0
  2447  004F40  6FC0               	movwf	(sprintf@f+4)& (0+255),b
  2448                           
  2449                           ; BSR set to: 0
  2450  004F42  0EBC               	movlw	low sprintf@f
  2451  004F44  6FA8               	movwf	vfprintf@fp& (0+255),b
  2452  004F46  0E00               	movlw	high sprintf@f
  2453  004F48  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2454  004F4A  0060  F2C8  F0AA   	movff	sprintf@fmt,vfprintf@fmt
  2455  004F50  0060  F2CC  F0AB   	movff	sprintf@fmt+1,vfprintf@fmt+1
  2456  004F56  0EBA               	movlw	low sprintf@ap
  2457  004F58  6FAC               	movwf	vfprintf@ap& (0+255),b
  2458  004F5A  0E00               	movlw	high sprintf@ap
  2459  004F5C  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2460  004F5E  ECBE  F026         	call	_vfprintf	;wreg free
  2461  004F62  0100               	movlb	0	; () banked
  2462  004F64  51BE               	movf	(sprintf@f+2)& (0+255),w,b
  2463  004F66  25B0               	addwf	sprintf@s& (0+255),w,b
  2464  004F68  6ED9               	movwf	fsr2l,c
  2465  004F6A  51BF               	movf	(sprintf@f+3)& (0+255),w,b
  2466  004F6C  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2467  004F6E  6EDA               	movwf	fsr2h,c
  2468  004F70  0E00               	movlw	0
  2469  004F72  6EDF               	movwf	indf2,c
  2470                           
  2471                           ; BSR set to: 0
  2472  004F74  0012               	return		;funcret
  2473  004F76                     __end_of_sprintf:
  2474                           	opt callstack 0
  2475                           
  2476 ;; *************** function _vfprintf *****************
  2477 ;; Defined at:
  2478 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2481 ;;		 -> sprintf@f(6), 
  2482 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2483 ;;		 -> STR_9(24), STR_8(19), STR_7(13), STR_6(21), 
  2484 ;;		 -> STR_5(20), STR_4(24), STR_3(51), STR_2(3), 
  2485 ;;		 -> STR_1(3), 
  2486 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2487 ;;		 -> sprintf@ap(2), 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2490 ;;		 -> STR_9(24), STR_8(19), STR_7(13), STR_6(21), 
  2491 ;;		 -> STR_5(20), STR_4(24), STR_3(51), STR_2(3), 
  2492 ;;		 -> STR_1(3), 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  2   72[BANK0 ] int 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2502 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2505 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2506 ;;Total ram usage:        8 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    8
  2509 ;; This function calls:
  2510 ;;		_vfpfcnvrt
  2511 ;; This function is called by:
  2512 ;;		_sprintf
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text6
  2517  004D7C                     __ptext6:
  2518                           	opt callstack 0
  2519  004D7C                     _vfprintf:
  2520                           	opt callstack 20
  2521                           
  2522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;incstack = 0
  2526  004D7C  0060  F2A8  F0AE   	movff	vfprintf@fmt,vfprintf@cfmt
  2527  004D82  0060  F2AC  F0AF   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2528                           
  2529                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2530  004D88  0E00               	movlw	0
  2531  004D8A  0100               	movlb	0	; () banked
  2532  004D8C  6FE7               	movwf	(_nout+1)& (0+255),b
  2533  004D8E  0E00               	movlw	0
  2534  004D90  6FE6               	movwf	_nout& (0+255),b
  2535                           
  2536                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2537  004D92  D017               	goto	l6555
  2538  004D94                     l6553:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2542  004D94  0060  F2A0  F098   	movff	vfprintf@fp,vfpfcnvrt@fp
  2543  004D9A  0060  F2A4  F099   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2544  004DA0  0EAE               	movlw	low vfprintf@cfmt
  2545  004DA2  6F9A               	movwf	vfpfcnvrt@fmt& (0+255),b
  2546  004DA4  0E00               	movlw	high vfprintf@cfmt
  2547  004DA6  6F9B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2548  004DA8  0060  F2B0  F09C   	movff	vfprintf@ap,vfpfcnvrt@ap
  2549  004DAE  0060  F2B4  F09D   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2550  004DB4  ECDA  F017         	call	_vfpfcnvrt	;wreg free
  2551  004DB8  0100               	movlb	0	; () banked
  2552  004DBA  5198               	movf	?_vfpfcnvrt& (0+255),w,b
  2553  004DBC  27E6               	addwf	_nout& (0+255),f,b
  2554  004DBE  5199               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2555  004DC0  23E7               	addwfc	(_nout+1)& (0+255),f,b
  2556  004DC2                     l6555:
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2560  004DC2  0060  F2BB  FFF6   	movff	vfprintf@cfmt,tblptrl
  2561  004DC8  0060  F2BF  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2562  004DCE                     	if	0	;tblptru may be non-zero
  2563  004DCE                     	endif
  2564  004DCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2565  004DCE  0E00               	movlw	low (__mediumconst shr (0+16))
  2566  004DD0  6EF8               	movwf	tblptru,c
  2567  004DD2                     	endif
  2568  004DD2  0008               	tblrd		*
  2569  004DD4  50F5               	movf	tablat,w,c
  2570  004DD6  0900               	iorlw	0
  2571  004DD8  A4D8               	btfss	status,2,c
  2572  004DDA  D7DC               	goto	l6553
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2576  004DDC  0060  F398  F0A8   	movff	_nout,?_vfprintf
  2577  004DE2  0060  F39C  F0A9   	movff	_nout+1,?_vfprintf+1
  2578                           
  2579                           ; BSR set to: 0
  2580  004DE8  0012               	return		;funcret
  2581  004DEA                     __end_of_vfprintf:
  2582                           	opt callstack 0
  2583                           
  2584 ;; *************** function _vfpfcnvrt *****************
  2585 ;; Defined at:
  2586 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  2589 ;;		 -> sprintf@f(6), 
  2590 ;;  fmt             2   58[BANK0 ] PTR PTR unsigned char 
  2591 ;;		 -> vfprintf@cfmt(2), 
  2592 ;;  ap              2   60[BANK0 ] PTR PTR void 
  2593 ;;		 -> sprintf@ap(2), 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  llu             8    0        unsigned long long 
  2596 ;;  ll              8    0        long long 
  2597 ;;  f               4   64[BANK0 ] long long 
  2598 ;;  ct              3   68[BANK0 ] unsigned char [3]
  2599 ;;  vp              3    0        PTR void 
  2600 ;;  cp              3    0        PTR unsigned char 
  2601 ;;  i               2    0        int 
  2602 ;;  done            2    0        int 
  2603 ;;  c               1   71[BANK0 ] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  2   56[BANK0 ] int 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2613 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2614 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2615 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2616 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2617 ;;Total ram usage:       20 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    7
  2620 ;; This function calls:
  2621 ;;		_efgtoa
  2622 ;;		_fputc
  2623 ;;		_isupper
  2624 ;;		_strncmp
  2625 ;;		_tolower
  2626 ;; This function is called by:
  2627 ;;		_vfprintf
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text7
  2632  002FB4                     __ptext7:
  2633                           	opt callstack 0
  2634  002FB4                     _vfpfcnvrt:
  2635                           	opt callstack 20
  2636                           
  2637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;incstack = 0
  2641  002FB4  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2642  002FBA  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2643  002FC0  006F FF7B FFF6     	movff	postinc2,tblptrl
  2644  002FC6  006F FF77 FFF7     	movff	postdec2,tblptrh
  2645  002FCC                     	if	0	;tblptru may be non-zero
  2646  002FCC                     	endif
  2647  002FCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2648  002FCC  0E00               	movlw	low (__mediumconst shr (0+16))
  2649  002FCE  6EF8               	movwf	tblptru,c
  2650  002FD0                     	endif
  2651  002FD0  0008               	tblrd		*
  2652  002FD2  50F5               	movf	tablat,w,c
  2653  002FD4  0A25               	xorlw	37
  2654  002FD6  A4D8               	btfss	status,2,c
  2655  002FD8  D194               	goto	l6507
  2656                           
  2657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2658  002FDA  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2659  002FE0  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2660  002FE6  2ADE               	incf	postinc2,f,c
  2661  002FE8  0E00               	movlw	0
  2662  002FEA  22DD               	addwfc	postdec2,f,c
  2663                           
  2664                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2665  002FEC  0E00               	movlw	0
  2666  002FEE  0100               	movlb	0	; () banked
  2667  002FF0  6FE9               	movwf	(_width+1)& (0+255),b
  2668  002FF2  0E00               	movlw	0
  2669  002FF4  6FE8               	movwf	_width& (0+255),b
  2670  002FF6  0060  F3A0  F058   	movff	_width,_flags
  2671  002FFC  0060  F3A4  F059   	movff	_width+1,_flags+1
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2675  003002  6856               	setf	_prec,c
  2676  003004  6857               	setf	_prec+1,c
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  2680  003006  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2681  00300C  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2682  003012  006F FF7B FFF6     	movff	postinc2,tblptrl
  2683  003018  006F FF77 FFF7     	movff	postdec2,tblptrh
  2684  00301E                     	if	0	;tblptru may be non-zero
  2685  00301E                     	endif
  2686  00301E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2687  00301E  0E00               	movlw	low (__mediumconst shr (0+16))
  2688  003020  6EF8               	movwf	tblptru,c
  2689  003022                     	endif
  2690  003022  0008               	tblrd		*
  2691  003024  50F5               	movf	tablat,w,c
  2692  003026  6E0C               	movwf	tolower@c,c
  2693  003028  6A0D               	clrf	tolower@c+1,c
  2694  00302A  EC13  F028         	call	_tolower	;wreg free
  2695  00302E  500C               	movf	?_tolower,w,c
  2696  003030  0100               	movlb	0	; () banked
  2697  003032  6FA4               	movwf	vfpfcnvrt@ct& (0+255),b
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  2701  003034  51A4               	movf	vfpfcnvrt@ct& (0+255),w,b
  2702  003036  B4D8               	btfsc	status,2,c
  2703  003038  D045               	goto	l6463
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  2707  00303A  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2708  003040  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2709  003046  006F FF78  F051    	movff	postinc2,??_vfpfcnvrt
  2710  00304C  006F FF74  F052    	movff	postdec2,??_vfpfcnvrt+1
  2711  003052  0E01               	movlw	1
  2712  003054  2651               	addwf	??_vfpfcnvrt,f,c
  2713  003056  0E00               	movlw	0
  2714  003058  2252               	addwfc	??_vfpfcnvrt+1,f,c
  2715  00305A  0060  F147  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2716  003060  0060  F14B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2717  003066                     	if	0	;tblptru may be non-zero
  2718  003066                     	endif
  2719  003066                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2720  003066  0E00               	movlw	low (__mediumconst shr (0+16))
  2721  003068  6EF8               	movwf	tblptru,c
  2722  00306A                     	endif
  2723  00306A  0008               	tblrd		*
  2724  00306C  50F5               	movf	tablat,w,c
  2725  00306E  6E0C               	movwf	tolower@c,c
  2726  003070  6A0D               	clrf	tolower@c+1,c
  2727  003072  EC13  F028         	call	_tolower	;wreg free
  2728  003076  500C               	movf	?_tolower,w,c
  2729  003078  0100               	movlb	0	; () banked
  2730  00307A  6FA5               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  2734  00307C  51A5               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2735  00307E  B4D8               	btfsc	status,2,c
  2736  003080  D021               	goto	l6463
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  2740  003082  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2741  003088  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2742  00308E  006F FF78  F051    	movff	postinc2,??_vfpfcnvrt
  2743  003094  006F FF74  F052    	movff	postdec2,??_vfpfcnvrt+1
  2744  00309A  0E02               	movlw	2
  2745  00309C  2651               	addwf	??_vfpfcnvrt,f,c
  2746  00309E  0E00               	movlw	0
  2747  0030A0  2252               	addwfc	??_vfpfcnvrt+1,f,c
  2748  0030A2  0060  F147  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2749  0030A8  0060  F14B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2750  0030AE                     	if	0	;tblptru may be non-zero
  2751  0030AE                     	endif
  2752  0030AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2753  0030AE  0E00               	movlw	low (__mediumconst shr (0+16))
  2754  0030B0  6EF8               	movwf	tblptru,c
  2755  0030B2                     	endif
  2756  0030B2  0008               	tblrd		*
  2757  0030B4  50F5               	movf	tablat,w,c
  2758  0030B6  6E0C               	movwf	tolower@c,c
  2759  0030B8  6A0D               	clrf	tolower@c+1,c
  2760  0030BA  EC13  F028         	call	_tolower	;wreg free
  2761  0030BE  500C               	movf	?_tolower,w,c
  2762  0030C0  0100               	movlb	0	; () banked
  2763  0030C2  6FA6               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2764  0030C4                     l6463:
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  2768  0030C4  0E66               	movlw	102
  2769  0030C6  19A4               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2770  0030C8  A4D8               	btfss	status,2,c
  2771  0030CA  D05B               	goto	l6475
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  2775  0030CC  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2776  0030D2  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2777  0030D8  006F FF7B FFF6     	movff	postinc2,tblptrl
  2778  0030DE  006F FF77 FFF7     	movff	postdec2,tblptrh
  2779  0030E4                     	if	0	;tblptru may be non-zero
  2780  0030E4                     	endif
  2781  0030E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2782  0030E4  0E00               	movlw	low (__mediumconst shr (0+16))
  2783  0030E6  6EF8               	movwf	tblptru,c
  2784  0030E8                     	endif
  2785  0030E8  0008               	tblrd		*
  2786  0030EA  006F FFD4  F0A7    	movff	tablat,vfpfcnvrt@c
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  2790  0030F0  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2791  0030F6  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2792  0030FC  2ADE               	incf	postinc2,f,c
  2793  0030FE  0E00               	movlw	0
  2794  003100  22DD               	addwfc	postdec2,f,c
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  2798  003102  0060  F273  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2799  003108  0060  F277  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2800  00310E  006F FF7C  F051    	movff	indf2,??_vfpfcnvrt
  2801  003114  0E04               	movlw	4
  2802  003116  26DE               	addwf	postinc2,f,c
  2803  003118  006F FF7C  F052    	movff	indf2,??_vfpfcnvrt+1
  2804  00311E  0E00               	movlw	0
  2805  003120  22DD               	addwfc	postdec2,f,c
  2806  003122  0060  F147  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2807  003128  0060  F14B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2808  00312E  006F FF78  F0A0    	movff	postinc2,vfpfcnvrt@f
  2809  003134  006F FF78  F0A1    	movff	postinc2,vfpfcnvrt@f+1
  2810  00313A  006F FF78  F0A2    	movff	postinc2,vfpfcnvrt@f+2
  2811  003140  006F FF78  F0A3    	movff	postinc2,vfpfcnvrt@f+3
  2812  003146                     l6471:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  2816  003146  0060  F260  F045   	movff	vfpfcnvrt@fp,efgtoa@fp
  2817  00314C  0060  F264  F046   	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2818  003152  0060  F280  F047   	movff	vfpfcnvrt@f,efgtoa@f
  2819  003158  0060  F284  F048   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2820  00315E  0060  F288  F049   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2821  003164  0060  F28C  F04A   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2822  00316A  0060  F29C  F04B   	movff	vfpfcnvrt@c,efgtoa@c
  2823  003170  EC56  F010         	call	_efgtoa	;wreg free
  2824  003174  0060  F114  F098   	movff	?_efgtoa,?_vfpfcnvrt
  2825  00317A  0060  F118  F099   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2826  003180  0012               	return	
  2827  003182                     l6475:
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2831  003182  0EA4               	movlw	low vfpfcnvrt@ct
  2832  003184  6E06               	movwf	strncmp@_l,c
  2833  003186  0E00               	movlw	high vfpfcnvrt@ct
  2834  003188  6E07               	movwf	strncmp@_l+1,c
  2835  00318A  0EA5               	movlw	low STR_18
  2836  00318C  6E08               	movwf	strncmp@_r,c
  2837  00318E  0E20               	movlw	high STR_18
  2838  003190  6E09               	movwf	strncmp@_r+1,c
  2839  003192  0E00               	movlw	0
  2840  003194  6E0B               	movwf	strncmp@n+1,c
  2841  003196  0E02               	movlw	2
  2842  003198  6E0A               	movwf	strncmp@n,c
  2843  00319A  EC9F  F023         	call	_strncmp	;wreg free
  2844  00319E  5006               	movf	?_strncmp,w,c
  2845  0031A0  1007               	iorwf	?_strncmp+1,w,c
  2846  0031A2  A4D8               	btfss	status,2,c
  2847  0031A4  D071               	goto	l6491
  2848                           
  2849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2850  0031A6  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2851  0031AC  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2852  0031B2  006F FF78  F051    	movff	postinc2,??_vfpfcnvrt
  2853  0031B8  006F FF74  F052    	movff	postdec2,??_vfpfcnvrt+1
  2854  0031BE  0E01               	movlw	1
  2855  0031C0  2651               	addwf	??_vfpfcnvrt,f,c
  2856  0031C2  0E00               	movlw	0
  2857  0031C4  2252               	addwfc	??_vfpfcnvrt+1,f,c
  2858  0031C6  0060  F147  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2859  0031CC  0060  F14B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2860  0031D2                     	if	0	;tblptru may be non-zero
  2861  0031D2                     	endif
  2862  0031D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2863  0031D2  0E00               	movlw	low (__mediumconst shr (0+16))
  2864  0031D4  6EF8               	movwf	tblptru,c
  2865  0031D6                     	endif
  2866  0031D6  0008               	tblrd		*
  2867  0031D8  006F FFD4  F0A7    	movff	tablat,vfpfcnvrt@c
  2868  0031DE  0EBF               	movlw	191
  2869  0031E0  6E51               	movwf	??_vfpfcnvrt& (0+255),c
  2870  0031E2  0EFF               	movlw	255
  2871  0031E4  6E52               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2872  0031E6  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2873  0031EC  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2874  0031F2  006F FF7B FFF6     	movff	postinc2,tblptrl
  2875  0031F8  006F FF77 FFF7     	movff	postdec2,tblptrh
  2876  0031FE                     	if	0	;tblptru may be non-zero
  2877  0031FE                     	endif
  2878  0031FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2879  0031FE  0E00               	movlw	low (__mediumconst shr (0+16))
  2880  003200  6EF8               	movwf	tblptru,c
  2881  003202                     	endif
  2882  003202  0008               	tblrd		*
  2883  003204  50F5               	movf	tablat,w,c
  2884  003206  6E53               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2885  003208  6A54               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2886  00320A  5051               	movf	??_vfpfcnvrt,w,c
  2887  00320C  2653               	addwf	??_vfpfcnvrt+2,f,c
  2888  00320E  5052               	movf	??_vfpfcnvrt+1,w,c
  2889  003210  2254               	addwfc	??_vfpfcnvrt+3,f,c
  2890  003212  5054               	movf	??_vfpfcnvrt+3,w,c
  2891  003214  E106               	bnz	u8900
  2892  003216  0E1A               	movlw	26
  2893  003218  5C53               	subwf	??_vfpfcnvrt+2,w,c
  2894  00321A  B0D8               	btfsc	status,0,c
  2895  00321C  D002               	goto	u8900
  2896  00321E  0E01               	movlw	1
  2897  003220  D001               	goto	u8910
  2898  003222                     u8900:
  2899  003222  0E00               	movlw	0
  2900  003224                     u8910:
  2901  003224  0100               	movlb	0	; () banked
  2902  003226  6F9E               	movwf	_vfpfcnvrt$1700& (0+255),b
  2903  003228  6B9F               	clrf	(_vfpfcnvrt$1700+1)& (0+255),b
  2904                           
  2905                           ; BSR set to: 0
  2906  00322A  519E               	movf	_vfpfcnvrt$1700& (0+255),w,b
  2907  00322C  119F               	iorwf	(_vfpfcnvrt$1700+1)& (0+255),w,b
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2911                           
  2912                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  2916  00322E  0060  F273  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2917  003234  0060  F277  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2918  00323A  006F FF7C  F051    	movff	indf2,??_vfpfcnvrt
  2919  003240  0E04               	movlw	4
  2920  003242  26DE               	addwf	postinc2,f,c
  2921  003244  006F FF7C  F052    	movff	indf2,??_vfpfcnvrt+1
  2922  00324A  0E00               	movlw	0
  2923  00324C  22DD               	addwfc	postdec2,f,c
  2924  00324E  0060  F147  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2925  003254  0060  F14B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2926  00325A  006F FF78  F0A0    	movff	postinc2,vfpfcnvrt@f
  2927  003260  006F FF78  F0A1    	movff	postinc2,vfpfcnvrt@f+1
  2928  003266  006F FF78  F0A2    	movff	postinc2,vfpfcnvrt@f+2
  2929  00326C  006F FF78  F0A3    	movff	postinc2,vfpfcnvrt@f+3
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  2933                           
  2934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  2935  003272  0E02               	movlw	2
  2936  003274  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2937  00327A  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2938  003280  26DE               	addwf	postinc2,f,c
  2939  003282  0E00               	movlw	0
  2940  003284  22DD               	addwfc	postdec2,f,c
  2941  003286  D75F               	goto	l6471
  2942  003288                     l6491:
  2943                           
  2944                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2945  003288  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2946  00328E  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2947  003294  006F FF7B FFF6     	movff	postinc2,tblptrl
  2948  00329A  006F FF77 FFF7     	movff	postdec2,tblptrh
  2949  0032A0                     	if	0	;tblptru may be non-zero
  2950  0032A0                     	endif
  2951  0032A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2952  0032A0  0E00               	movlw	low (__mediumconst shr (0+16))
  2953  0032A2  6EF8               	movwf	tblptru,c
  2954  0032A4                     	endif
  2955  0032A4  0008               	tblrd		*
  2956  0032A6  50F5               	movf	tablat,w,c
  2957  0032A8  0A25               	xorlw	37
  2958  0032AA  A4D8               	btfss	status,2,c
  2959  0032AC  D01B               	goto	l6501
  2960                           
  2961                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2962  0032AE  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2963  0032B4  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2964  0032BA  2ADE               	incf	postinc2,f,c
  2965  0032BC  0E00               	movlw	0
  2966  0032BE  22DD               	addwfc	postdec2,f,c
  2967                           
  2968                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2969  0032C0  0E00               	movlw	0
  2970  0032C2  6E07               	movwf	fputc@c+1,c
  2971  0032C4  0E25               	movlw	37
  2972  0032C6  6E06               	movwf	fputc@c,c
  2973  0032C8  0060  F260  F008   	movff	vfpfcnvrt@fp,fputc@fp
  2974  0032CE  0060  F264  F009   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2975  0032D4  ECC4  F024         	call	_fputc	;wreg free
  2976  0032D8                     l6497:
  2977                           
  2978                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2979  0032D8  0E00               	movlw	0
  2980  0032DA  0100               	movlb	0	; () banked
  2981  0032DC  6F99               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2982  0032DE  0E01               	movlw	1
  2983  0032E0  6F98               	movwf	?_vfpfcnvrt& (0+255),b
  2984  0032E2  0012               	return	
  2985  0032E4                     l6501:
  2986                           
  2987                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2988  0032E4  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2989  0032EA  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2990  0032F0  2ADE               	incf	postinc2,f,c
  2991  0032F2  0E00               	movlw	0
  2992  0032F4  22DD               	addwfc	postdec2,f,c
  2993                           
  2994                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2995  0032F6  0E00               	movlw	0
  2996  0032F8  0100               	movlb	0	; () banked
  2997  0032FA  6F99               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2998  0032FC  0E00               	movlw	0
  2999  0032FE  6F98               	movwf	?_vfpfcnvrt& (0+255),b
  3000  003300  0012               	return	
  3001  003302                     l6507:
  3002                           
  3003                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  3004  003302  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3005  003308  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3006  00330E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3007  003314  006F FF77 FFF7     	movff	postdec2,tblptrh
  3008  00331A                     	if	0	;tblptru may be non-zero
  3009  00331A                     	endif
  3010  00331A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3011  00331A  0E00               	movlw	low (__mediumconst shr (0+16))
  3012  00331C  6EF8               	movwf	tblptru,c
  3013  00331E                     	endif
  3014  00331E  0008               	tblrd		*
  3015  003320  50F5               	movf	tablat,w,c
  3016  003322  6E06               	movwf	fputc@c,c
  3017  003324  6A07               	clrf	fputc@c+1,c
  3018  003326  0060  F260  F008   	movff	vfpfcnvrt@fp,fputc@fp
  3019  00332C  0060  F264  F009   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3020  003332  ECC4  F024         	call	_fputc	;wreg free
  3021                           
  3022                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3023  003336  0060  F26B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3024  00333C  0060  F26F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3025  003342  2ADE               	incf	postinc2,f,c
  3026  003344  0E00               	movlw	0
  3027  003346  22DD               	addwfc	postdec2,f,c
  3028  003348  D7C7               	goto	l6497
  3029  00334A                     __end_of_vfpfcnvrt:
  3030                           	opt callstack 0
  3031                           
  3032 ;; *************** function _strncmp *****************
  3033 ;; Defined at:
  3034 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  3037 ;;		 -> vfpfcnvrt@ct(3), 
  3038 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  3039 ;;		 -> STR_20(3), 
  3040 ;;  n               2    9[COMRAM] unsigned int 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  r               2   14[COMRAM] PTR const unsigned char 
  3043 ;;		 -> STR_20(3), 
  3044 ;;  l               2   12[COMRAM] PTR const unsigned char 
  3045 ;;		 -> vfpfcnvrt@ct(3), 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  2    5[COMRAM] int 
  3048 ;; Registers used:
  3049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3055 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3056 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3058 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3059 ;;Total ram usage:       11 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    2
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_vfpfcnvrt
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text8
  3070  00473E                     __ptext8:
  3071                           	opt callstack 0
  3072  00473E                     _strncmp:
  3073                           	opt callstack 24
  3074                           
  3075                           ;incstack = 0
  3076  00473E  0060  F018  F00D   	movff	strncmp@_l,strncmp@l
  3077  004744  0060  F01C  F00E   	movff	strncmp@_l+1,strncmp@l+1
  3078  00474A  0060  F020  F00F   	movff	strncmp@_r,strncmp@r
  3079  004750  0060  F024  F010   	movff	strncmp@_r+1,strncmp@r+1
  3080  004756  060A               	decf	strncmp@n,f,c
  3081  004758  A0D8               	btfss	status,0,c
  3082  00475A  060B               	decf	strncmp@n+1,f,c
  3083  00475C  280A               	incf	strncmp@n,w,c
  3084  00475E  E10F               	bnz	l6433
  3085  004760  280B               	incf	strncmp@n+1,w,c
  3086  004762  A4D8               	btfss	status,2,c
  3087  004764  D00C               	goto	l6433
  3088  004766  0E00               	movlw	0
  3089  004768  6E07               	movwf	?_strncmp+1,c
  3090  00476A  0E00               	movlw	0
  3091  00476C  6E06               	movwf	?_strncmp,c
  3092  00476E  0012               	return	
  3093  004770                     l6431:
  3094  004770  4A0D               	infsnz	strncmp@l,f,c
  3095  004772  2A0E               	incf	strncmp@l+1,f,c
  3096  004774  4A0F               	infsnz	strncmp@r,f,c
  3097  004776  2A10               	incf	strncmp@r+1,f,c
  3098  004778  060A               	decf	strncmp@n,f,c
  3099  00477A  A0D8               	btfss	status,0,c
  3100  00477C  060B               	decf	strncmp@n+1,f,c
  3101  00477E                     l6433:
  3102  00477E  0060  F037  FFD9   	movff	strncmp@l,fsr2l
  3103  004784  0060  F03B  FFDA   	movff	strncmp@l+1,fsr2h
  3104  00478A  50DF               	movf	indf2,w,c
  3105  00478C  B4D8               	btfsc	status,2,c
  3106  00478E  D026               	goto	u8840
  3107  004790  0060  F03F  FFF6   	movff	strncmp@r,tblptrl
  3108  004796  0060  F043  FFF7   	movff	strncmp@r+1,tblptrh
  3109  00479C                     	if	0	;tblptru may be non-zero
  3110  00479C                     	endif
  3111  00479C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3112  00479C  0E00               	movlw	low (__mediumconst shr (0+16))
  3113  00479E  6EF8               	movwf	tblptru,c
  3114  0047A0                     	endif
  3115  0047A0  0008               	tblrd		*
  3116  0047A2  50F5               	movf	tablat,w,c
  3117  0047A4  0900               	iorlw	0
  3118  0047A6  B4D8               	btfsc	status,2,c
  3119  0047A8  D019               	goto	u8840
  3120  0047AA  500A               	movf	strncmp@n,w,c
  3121  0047AC  100B               	iorwf	strncmp@n+1,w,c
  3122  0047AE  B4D8               	btfsc	status,2,c
  3123  0047B0  D015               	goto	u8840
  3124  0047B2  0060  F037  FFD9   	movff	strncmp@l,fsr2l
  3125  0047B8  0060  F03B  FFDA   	movff	strncmp@l+1,fsr2h
  3126  0047BE  50DF               	movf	indf2,w,c
  3127  0047C0  6E0C               	movwf	??_strncmp& (0+255),c
  3128  0047C2  0060  F03F  FFF6   	movff	strncmp@r,tblptrl
  3129  0047C8  0060  F043  FFF7   	movff	strncmp@r+1,tblptrh
  3130  0047CE                     	if	0	;tblptru may be non-zero
  3131  0047CE                     	endif
  3132  0047CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3133  0047CE  0E00               	movlw	low (__mediumconst shr (0+16))
  3134  0047D0  6EF8               	movwf	tblptru,c
  3135  0047D2                     	endif
  3136  0047D2  0008               	tblrd		*
  3137  0047D4  50F5               	movf	tablat,w,c
  3138  0047D6  180C               	xorwf	??_strncmp,w,c
  3139  0047D8  B4D8               	btfsc	status,2,c
  3140  0047DA  D7CA               	goto	l6431
  3141  0047DC                     u8840:
  3142  0047DC  0060  F037  FFD9   	movff	strncmp@l,fsr2l
  3143  0047E2  0060  F03B  FFDA   	movff	strncmp@l+1,fsr2h
  3144  0047E8  50DF               	movf	indf2,w,c
  3145  0047EA  6E0C               	movwf	??_strncmp& (0+255),c
  3146  0047EC  0060  F03F  FFF6   	movff	strncmp@r,tblptrl
  3147  0047F2  0060  F043  FFF7   	movff	strncmp@r+1,tblptrh
  3148  0047F8                     	if	0	;tblptru may be non-zero
  3149  0047F8                     	endif
  3150  0047F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3151  0047F8  0E00               	movlw	low (__mediumconst shr (0+16))
  3152  0047FA  6EF8               	movwf	tblptru,c
  3153  0047FC                     	endif
  3154  0047FC  0008               	tblrd		*
  3155  0047FE  50F5               	movf	tablat,w,c
  3156  004800  5C0C               	subwf	??_strncmp,w,c
  3157  004802  6E06               	movwf	?_strncmp,c
  3158  004804  6A07               	clrf	?_strncmp+1,c
  3159  004806  A0D8               	btfss	status,0,c
  3160  004808  0607               	decf	?_strncmp+1,f,c
  3161  00480A  0012               	return		;funcret
  3162  00480C                     __end_of_strncmp:
  3163                           	opt callstack 0
  3164                           
  3165 ;; *************** function _efgtoa *****************
  3166 ;; Defined at:
  3167 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  3170 ;;		 -> sprintf@f(6), 
  3171 ;;  f               4   70[COMRAM] PTR struct _IO_FILE
  3172 ;;  c               1   74[COMRAM] unsigned char 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  u               4   52[BANK0 ] unsigned char 
  3175 ;;  g               4   44[BANK0 ] unsigned char 
  3176 ;;  l               4   38[BANK0 ] unsigned char 
  3177 ;;  h               4   34[BANK0 ] unsigned char 
  3178 ;;  ou              4    0[BANK0 ] unsigned char 
  3179 ;;  n               2   50[BANK0 ] int 
  3180 ;;  e               2   48[BANK0 ] int 
  3181 ;;  i               2   42[BANK0 ] int 
  3182 ;;  w               2   31[BANK0 ] int 
  3183 ;;  p               2   28[BANK0 ] int 
  3184 ;;  sign            2   26[BANK0 ] int 
  3185 ;;  d               2   24[BANK0 ] int 
  3186 ;;  ne              2   22[BANK0 ] int 
  3187 ;;  m               2   20[BANK0 ] int 
  3188 ;;  pp              2   18[BANK0 ] int 
  3189 ;;  t               2   16[BANK0 ] int 
  3190 ;;  mode            1   33[BANK0 ] unsigned char 
  3191 ;;  nmode           1   30[BANK0 ] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  2   68[COMRAM] int 
  3194 ;; Registers used:
  3195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3201 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3202 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3203 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3204 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3205 ;;Total ram usage:       68 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    6
  3208 ;; This function calls:
  3209 ;;		___awdiv
  3210 ;;		___awmod
  3211 ;;		___fladd
  3212 ;;		___fldiv
  3213 ;;		___fleq
  3214 ;;		___flge
  3215 ;;		___flmul
  3216 ;;		___flneg
  3217 ;;		___flsub
  3218 ;;		___fltol
  3219 ;;		___fpclassifyf
  3220 ;;		_floorf
  3221 ;;		_isupper
  3222 ;;		_pad
  3223 ;;		_strcpy
  3224 ;;		_tolower
  3225 ;; This function is called by:
  3226 ;;		_vfpfcnvrt
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text9
  3231  0020AC                     __ptext9:
  3232                           	opt callstack 0
  3233  0020AC                     _efgtoa:
  3234                           	opt callstack 20
  3235                           
  3236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  3237                           
  3238                           ;incstack = 0
  3239  0020AC  0E00               	movlw	0
  3240  0020AE  0100               	movlb	0	; () banked
  3241  0020B0  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3242  0020B2  0E00               	movlw	0
  3243  0020B4  6F7A               	movwf	efgtoa@sign& (0+255),b
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  3247  0020B6  0060  F11C  F08C   	movff	efgtoa@f,efgtoa@g
  3248  0020BC  0060  F120  F08D   	movff	efgtoa@f+1,efgtoa@g+1
  3249  0020C2  0060  F124  F08E   	movff	efgtoa@f+2,efgtoa@g+2
  3250  0020C8  0060  F128  F08F   	movff	efgtoa@f+3,efgtoa@g+3
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  3254  0020CE  AF8F               	btfss	(efgtoa@g+3)& (0+255),7,b
  3255  0020D0  D01E               	goto	l6137
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  3259  0020D2  0E00               	movlw	0
  3260  0020D4  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3261  0020D6  0E01               	movlw	1
  3262  0020D8  6F7A               	movwf	efgtoa@sign& (0+255),b
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  3266  0020DA  0060  F230  F006   	movff	efgtoa@g,___flneg@f1
  3267  0020E0  0060  F234  F007   	movff	efgtoa@g+1,___flneg@f1+1
  3268  0020E6  0060  F238  F008   	movff	efgtoa@g+2,___flneg@f1+2
  3269  0020EC  0060  F23C  F009   	movff	efgtoa@g+3,___flneg@f1+3
  3270  0020F2  ECA1  F028         	call	___flneg	;wreg free
  3271  0020F6  0060  F018  F08C   	movff	?___flneg,efgtoa@g
  3272  0020FC  0060  F01C  F08D   	movff	?___flneg+1,efgtoa@g+1
  3273  002102  0060  F020  F08E   	movff	?___flneg+2,efgtoa@g+2
  3274  002108  0060  F024  F08F   	movff	?___flneg+3,efgtoa@g+3
  3275  00210E                     l6137:
  3276                           
  3277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  3278  00210E  0E00               	movlw	0
  3279  002110  0100               	movlb	0	; () banked
  3280  002112  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  3281  002114  0E00               	movlw	0
  3282  002116  6F92               	movwf	efgtoa@n& (0+255),b
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  3286  002118  0060  F3A0  F07F   	movff	_width,efgtoa@w
  3287  00211E  0060  F3A4  F080   	movff	_width+1,efgtoa@w+1
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  3291  002124  517A               	movf	efgtoa@sign& (0+255),w,b
  3292  002126  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3293  002128  A4D8               	btfss	status,2,c
  3294  00212A  D002               	goto	u8300
  3295                           
  3296                           ; BSR set to: 0
  3297  00212C  A458               	btfss	_flags,2,c
  3298  00212E  D014               	goto	l6157
  3299  002130                     u8300:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  3303  002130  517A               	movf	efgtoa@sign& (0+255),w,b
  3304  002132  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3305  002134  A4D8               	btfss	status,2,c
  3306  002136  D004               	goto	l6149
  3307                           
  3308                           ; BSR set to: 0
  3309  002138  0E00               	movlw	0
  3310  00213A  6F65               	movwf	(_efgtoa$1671+1)& (0+255),b
  3311  00213C  0E2B               	movlw	43
  3312  00213E  D003               	goto	L1
  3313  002140                     l6149:
  3314                           
  3315                           ; BSR set to: 0
  3316  002140  0E00               	movlw	0
  3317  002142  6F65               	movwf	(_efgtoa$1671+1)& (0+255),b
  3318  002144  0E2D               	movlw	45
  3319  002146                     L1:
  3320  002146  6F64               	movwf	_efgtoa$1671& (0+255),b
  3321                           
  3322                           ; BSR set to: 0
  3323  002148  0060  F190  F120   	movff	_efgtoa$1671,_dbuf
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  3327  00214E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3328  002150  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  3332  002152  077F               	decf	efgtoa@w& (0+255),f,b
  3333  002154  A0D8               	btfss	status,0,c
  3334  002156  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3335  002158                     l6157:
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3339  002158  0060  F230  F006   	movff	efgtoa@g,___fpclassifyf@x
  3340  00215E  0060  F234  F007   	movff	efgtoa@g+1,___fpclassifyf@x+1
  3341  002164  0060  F238  F008   	movff	efgtoa@g+2,___fpclassifyf@x+2
  3342  00216A  0060  F23C  F009   	movff	efgtoa@g+3,___fpclassifyf@x+3
  3343  002170  ECC1  F022         	call	___fpclassifyf	;wreg free
  3344  002174  0406               	decf	?___fpclassifyf,w,c
  3345  002176  1007               	iorwf	?___fpclassifyf+1,w,c
  3346  002178  A4D8               	btfss	status,2,c
  3347  00217A  D052               	goto	l6175
  3348  00217C  0EBF               	movlw	191
  3349  00217E  6E4C               	movwf	??_efgtoa& (0+255),c
  3350  002180  0EFF               	movlw	255
  3351  002182  6E4D               	movwf	(??_efgtoa+1)& (0+255),c
  3352  002184  504B               	movf	efgtoa@c,w,c
  3353  002186  6E4E               	movwf	(??_efgtoa+2)& (0+255),c
  3354  002188  6A4F               	clrf	(??_efgtoa+3)& (0+255),c
  3355  00218A  504C               	movf	??_efgtoa,w,c
  3356  00218C  264E               	addwf	??_efgtoa+2,f,c
  3357  00218E  504D               	movf	??_efgtoa+1,w,c
  3358  002190  224F               	addwfc	??_efgtoa+3,f,c
  3359  002192  504F               	movf	??_efgtoa+3,w,c
  3360  002194  E106               	bnz	u8330
  3361  002196  0E1A               	movlw	26
  3362  002198  5C4E               	subwf	??_efgtoa+2,w,c
  3363  00219A  B0D8               	btfsc	status,0,c
  3364  00219C  D002               	goto	u8330
  3365  00219E  0E01               	movlw	1
  3366  0021A0  D001               	goto	u8340
  3367  0021A2                     u8330:
  3368  0021A2  0E00               	movlw	0
  3369  0021A4                     u8340:
  3370  0021A4  0100               	movlb	0	; () banked
  3371  0021A6  6F66               	movwf	_efgtoa$1672& (0+255),b
  3372  0021A8  6B67               	clrf	(_efgtoa$1672+1)& (0+255),b
  3373                           
  3374                           ; BSR set to: 0
  3375  0021AA  5166               	movf	_efgtoa$1672& (0+255),w,b
  3376  0021AC  1167               	iorwf	(_efgtoa$1672+1)& (0+255),w,b
  3377  0021AE  B4D8               	btfsc	status,2,c
  3378  0021B0  D00D               	goto	l6167
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  3382  0021B2  0E20               	movlw	low _dbuf
  3383  0021B4  2592               	addwf	efgtoa@n& (0+255),w,b
  3384  0021B6  6E06               	movwf	strcpy@dest,c
  3385  0021B8  0E01               	movlw	high _dbuf
  3386  0021BA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3387  0021BC  6E07               	movwf	strcpy@dest+1,c
  3388  0021BE  0E95               	movlw	low STR_10
  3389  0021C0  6E08               	movwf	strcpy@src,c
  3390  0021C2  0E20               	movlw	high STR_10
  3391  0021C4  6E09               	movwf	strcpy@src+1,c
  3392  0021C6  EC2B  F027         	call	_strcpy	;wreg free
  3393                           
  3394                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  3395  0021CA  D00C               	goto	l6169
  3396  0021CC                     l6167:
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  3400  0021CC  0E20               	movlw	low _dbuf
  3401  0021CE  2592               	addwf	efgtoa@n& (0+255),w,b
  3402  0021D0  6E06               	movwf	strcpy@dest,c
  3403  0021D2  0E01               	movlw	high _dbuf
  3404  0021D4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3405  0021D6  6E07               	movwf	strcpy@dest+1,c
  3406  0021D8  0E9D               	movlw	low STR_11
  3407  0021DA  6E08               	movwf	strcpy@src,c
  3408  0021DC  0E20               	movlw	high STR_11
  3409  0021DE  6E09               	movwf	strcpy@src+1,c
  3410  0021E0  EC2B  F027         	call	_strcpy	;wreg free
  3411  0021E4                     l6169:
  3412                           
  3413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  3414  0021E4  0100               	movlb	0	; () banked
  3415  0021E6  0EFD               	movlw	253
  3416  0021E8  277F               	addwf	efgtoa@w& (0+255),f,b
  3417  0021EA  0EFF               	movlw	255
  3418  0021EC  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3419  0021EE                     l6171:
  3420                           
  3421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  3422  0021EE  0060  F114  F016   	movff	efgtoa@fp,pad@fp
  3423  0021F4  0060  F118  F017   	movff	efgtoa@fp+1,pad@fp+1
  3424  0021FA  0E20               	movlw	low _dbuf
  3425  0021FC  6E18               	movwf	pad@buf,c
  3426  0021FE  0E01               	movlw	high _dbuf
  3427  002200  6E19               	movwf	pad@buf+1,c
  3428  002202  0060  F1FC  F01A   	movff	efgtoa@w,pad@p
  3429  002208  0060  F200  F01B   	movff	efgtoa@w+1,pad@p+1
  3430  00220E  EC6B  F024         	call	_pad	;wreg free
  3431  002212  0060  F058  F045   	movff	?_pad,?_efgtoa
  3432  002218  0060  F05C  F046   	movff	?_pad+1,?_efgtoa+1
  3433  00221E  0012               	return	
  3434  002220                     l6175:
  3435                           
  3436                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3437  002220  0060  F230  F006   	movff	efgtoa@g,___fpclassifyf@x
  3438  002226  0060  F234  F007   	movff	efgtoa@g+1,___fpclassifyf@x+1
  3439  00222C  0060  F238  F008   	movff	efgtoa@g+2,___fpclassifyf@x+2
  3440  002232  0060  F23C  F009   	movff	efgtoa@g+3,___fpclassifyf@x+3
  3441  002238  ECC1  F022         	call	___fpclassifyf	;wreg free
  3442  00223C  5006               	movf	?___fpclassifyf,w,c
  3443  00223E  1007               	iorwf	?___fpclassifyf+1,w,c
  3444  002240  A4D8               	btfss	status,2,c
  3445  002242  D035               	goto	l6193
  3446  002244  0EBF               	movlw	191
  3447  002246  6E4C               	movwf	??_efgtoa& (0+255),c
  3448  002248  0EFF               	movlw	255
  3449  00224A  6E4D               	movwf	(??_efgtoa+1)& (0+255),c
  3450  00224C  504B               	movf	efgtoa@c,w,c
  3451  00224E  6E4E               	movwf	(??_efgtoa+2)& (0+255),c
  3452  002250  6A4F               	clrf	(??_efgtoa+3)& (0+255),c
  3453  002252  504C               	movf	??_efgtoa,w,c
  3454  002254  264E               	addwf	??_efgtoa+2,f,c
  3455  002256  504D               	movf	??_efgtoa+1,w,c
  3456  002258  224F               	addwfc	??_efgtoa+3,f,c
  3457  00225A  504F               	movf	??_efgtoa+3,w,c
  3458  00225C  E106               	bnz	u8370
  3459  00225E  0E1A               	movlw	26
  3460  002260  5C4E               	subwf	??_efgtoa+2,w,c
  3461  002262  B0D8               	btfsc	status,0,c
  3462  002264  D002               	goto	u8370
  3463  002266  0E01               	movlw	1
  3464  002268  D001               	goto	u8380
  3465  00226A                     u8370:
  3466  00226A  0E00               	movlw	0
  3467  00226C                     u8380:
  3468  00226C  0100               	movlb	0	; () banked
  3469  00226E  6F68               	movwf	_efgtoa$1677& (0+255),b
  3470  002270  6B69               	clrf	(_efgtoa$1677+1)& (0+255),b
  3471                           
  3472                           ; BSR set to: 0
  3473  002272  5168               	movf	_efgtoa$1677& (0+255),w,b
  3474  002274  1169               	iorwf	(_efgtoa$1677+1)& (0+255),w,b
  3475  002276  B4D8               	btfsc	status,2,c
  3476  002278  D00D               	goto	l6185
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  3480  00227A  0E20               	movlw	low _dbuf
  3481  00227C  2592               	addwf	efgtoa@n& (0+255),w,b
  3482  00227E  6E06               	movwf	strcpy@dest,c
  3483  002280  0E01               	movlw	high _dbuf
  3484  002282  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3485  002284  6E07               	movwf	strcpy@dest+1,c
  3486  002286  0E99               	movlw	low STR_14
  3487  002288  6E08               	movwf	strcpy@src,c
  3488  00228A  0E20               	movlw	high STR_14
  3489  00228C  6E09               	movwf	strcpy@src+1,c
  3490  00228E  EC2B  F027         	call	_strcpy	;wreg free
  3491                           
  3492                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  3493  002292  D7A8               	goto	l6169
  3494  002294                     l6185:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  3498  002294  0E20               	movlw	low _dbuf
  3499  002296  2592               	addwf	efgtoa@n& (0+255),w,b
  3500  002298  6E06               	movwf	strcpy@dest,c
  3501  00229A  0E01               	movlw	high _dbuf
  3502  00229C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3503  00229E  6E07               	movwf	strcpy@dest+1,c
  3504  0022A0  0EA1               	movlw	low STR_15
  3505  0022A2  6E08               	movwf	strcpy@src,c
  3506  0022A4  0E20               	movlw	high STR_15
  3507  0022A6  6E09               	movwf	strcpy@src+1,c
  3508  0022A8  EC2B  F027         	call	_strcpy	;wreg free
  3509  0022AC  D79B               	goto	l6169
  3510  0022AE                     l6193:
  3511                           
  3512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  3513  0022AE  0E00               	movlw	0
  3514  0022B0  0100               	movlb	0	; () banked
  3515  0022B2  6F94               	movwf	efgtoa@u& (0+255),b
  3516  0022B4  0E00               	movlw	0
  3517  0022B6  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3518  0022B8  0E80               	movlw	128
  3519  0022BA  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3520  0022BC  0E3F               	movlw	63
  3521  0022BE  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3522                           
  3523                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  3524  0022C0  0E00               	movlw	0
  3525  0022C2  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3526  0022C4  0E00               	movlw	0
  3527  0022C6  6F90               	movwf	efgtoa@e& (0+255),b
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  3531  0022C8  0060  F230  F006   	movff	efgtoa@g,___fleq@ff1
  3532  0022CE  0060  F234  F007   	movff	efgtoa@g+1,___fleq@ff1+1
  3533  0022D4  0060  F238  F008   	movff	efgtoa@g+2,___fleq@ff1+2
  3534  0022DA  0060  F23C  F009   	movff	efgtoa@g+3,___fleq@ff1+3
  3535  0022E0  0E00               	movlw	0
  3536  0022E2  6E0A               	movwf	___fleq@ff2,c
  3537  0022E4  0E00               	movlw	0
  3538  0022E6  6E0B               	movwf	___fleq@ff2+1,c
  3539  0022E8  0E00               	movlw	0
  3540  0022EA  6E0C               	movwf	___fleq@ff2+2,c
  3541  0022EC  0E00               	movlw	0
  3542  0022EE  6E0D               	movwf	___fleq@ff2+3,c
  3543  0022F0  ECBA  F025         	call	___fleq	;wreg free
  3544  0022F4  A0D8               	btfss	status,0,c
  3545  0022F6  D026               	goto	l6203
  3546  0022F8  D09A               	goto	u8420
  3547  0022FA                     l6199:
  3548                           
  3549                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  3550  0022FA  0060  F250  F014   	movff	efgtoa@u,___flmul@b
  3551  002300  0060  F254  F015   	movff	efgtoa@u+1,___flmul@b+1
  3552  002306  0060  F258  F016   	movff	efgtoa@u+2,___flmul@b+2
  3553  00230C  0060  F25C  F017   	movff	efgtoa@u+3,___flmul@b+3
  3554  002312  0E00               	movlw	0
  3555  002314  6E18               	movwf	___flmul@a,c
  3556  002316  0E00               	movlw	0
  3557  002318  6E19               	movwf	___flmul@a+1,c
  3558  00231A  0E20               	movlw	32
  3559  00231C  6E1A               	movwf	___flmul@a+2,c
  3560  00231E  0E41               	movlw	65
  3561  002320  6E1B               	movwf	___flmul@a+3,c
  3562  002322  EC01  F016         	call	___flmul	;wreg free
  3563  002326  0060  F050  F094   	movff	?___flmul,efgtoa@u
  3564  00232C  0060  F054  F095   	movff	?___flmul+1,efgtoa@u+1
  3565  002332  0060  F058  F096   	movff	?___flmul+2,efgtoa@u+2
  3566  002338  0060  F05C  F097   	movff	?___flmul+3,efgtoa@u+3
  3567                           
  3568                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  3569  00233E  0100               	movlb	0	; () banked
  3570  002340  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3571  002342  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3572  002344                     l6203:
  3573                           
  3574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  3575  002344  0060  F230  F02D   	movff	efgtoa@g,___flge@ff1
  3576  00234A  0060  F234  F02E   	movff	efgtoa@g+1,___flge@ff1+1
  3577  002350  0060  F238  F02F   	movff	efgtoa@g+2,___flge@ff1+2
  3578  002356  0060  F23C  F030   	movff	efgtoa@g+3,___flge@ff1+3
  3579  00235C  0E00               	movlw	0
  3580  00235E  6E18               	movwf	___flmul@a,c
  3581  002360  0E00               	movlw	0
  3582  002362  6E19               	movwf	___flmul@a+1,c
  3583  002364  0E20               	movlw	32
  3584  002366  6E1A               	movwf	___flmul@a+2,c
  3585  002368  0E41               	movlw	65
  3586  00236A  6E1B               	movwf	___flmul@a+3,c
  3587  00236C  0060  F250  F014   	movff	efgtoa@u,___flmul@b
  3588  002372  0060  F254  F015   	movff	efgtoa@u+1,___flmul@b+1
  3589  002378  0060  F258  F016   	movff	efgtoa@u+2,___flmul@b+2
  3590  00237E  0060  F25C  F017   	movff	efgtoa@u+3,___flmul@b+3
  3591  002384  EC01  F016         	call	___flmul	;wreg free
  3592  002388  0060  F050  F031   	movff	?___flmul,___flge@ff2
  3593  00238E  0060  F054  F032   	movff	?___flmul+1,___flge@ff2+1
  3594  002394  0060  F058  F033   	movff	?___flmul+2,___flge@ff2+2
  3595  00239A  0060  F05C  F034   	movff	?___flmul+3,___flge@ff2+3
  3596  0023A0  EC37  F023         	call	___flge	;wreg free
  3597  0023A4  A0D8               	btfss	status,0,c
  3598  0023A6  D027               	goto	l6209
  3599  0023A8  D7A8               	goto	l6199
  3600  0023AA                     l6205:
  3601                           
  3602                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  3603  0023AA  0060  F250  F006   	movff	efgtoa@u,___fldiv@b
  3604  0023B0  0060  F254  F007   	movff	efgtoa@u+1,___fldiv@b+1
  3605  0023B6  0060  F258  F008   	movff	efgtoa@u+2,___fldiv@b+2
  3606  0023BC  0060  F25C  F009   	movff	efgtoa@u+3,___fldiv@b+3
  3607  0023C2  0E00               	movlw	0
  3608  0023C4  6E0A               	movwf	___fldiv@a,c
  3609  0023C6  0E00               	movlw	0
  3610  0023C8  6E0B               	movwf	___fldiv@a+1,c
  3611  0023CA  0E20               	movlw	32
  3612  0023CC  6E0C               	movwf	___fldiv@a+2,c
  3613  0023CE  0E41               	movlw	65
  3614  0023D0  6E0D               	movwf	___fldiv@a+3,c
  3615  0023D2  ECDE  F01C         	call	___fldiv	;wreg free
  3616  0023D6  0060  F018  F094   	movff	?___fldiv,efgtoa@u
  3617  0023DC  0060  F01C  F095   	movff	?___fldiv+1,efgtoa@u+1
  3618  0023E2  0060  F020  F096   	movff	?___fldiv+2,efgtoa@u+2
  3619  0023E8  0060  F024  F097   	movff	?___fldiv+3,efgtoa@u+3
  3620                           
  3621                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  3622  0023EE  0100               	movlb	0	; () banked
  3623  0023F0  0790               	decf	efgtoa@e& (0+255),f,b
  3624  0023F2  A0D8               	btfss	status,0,c
  3625  0023F4  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3626  0023F6                     l6209:
  3627                           
  3628                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  3629  0023F6  0060  F230  F02D   	movff	efgtoa@g,___flge@ff1
  3630  0023FC  0060  F234  F02E   	movff	efgtoa@g+1,___flge@ff1+1
  3631  002402  0060  F238  F02F   	movff	efgtoa@g+2,___flge@ff1+2
  3632  002408  0060  F23C  F030   	movff	efgtoa@g+3,___flge@ff1+3
  3633  00240E  0060  F250  F031   	movff	efgtoa@u,___flge@ff2
  3634  002414  0060  F254  F032   	movff	efgtoa@u+1,___flge@ff2+1
  3635  00241A  0060  F258  F033   	movff	efgtoa@u+2,___flge@ff2+2
  3636  002420  0060  F25C  F034   	movff	efgtoa@u+3,___flge@ff2+3
  3637  002426  EC37  F023         	call	___flge	;wreg free
  3638  00242A  A0D8               	btfss	status,0,c
  3639  00242C  D7BE               	goto	l6205
  3640  00242E                     u8420:
  3641                           
  3642                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  3643  00242E  0060  F12C  F00C   	movff	efgtoa@c,tolower@c
  3644  002434  6A0D               	clrf	tolower@c+1,c
  3645  002436  EC13  F028         	call	_tolower	;wreg free
  3646  00243A  500C               	movf	?_tolower,w,c
  3647  00243C  0100               	movlb	0	; () banked
  3648  00243E  6F81               	movwf	efgtoa@mode& (0+255),b
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  3652  002440  0060  F204  F07E   	movff	efgtoa@mode,efgtoa@nmode
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  3656  002446  0E67               	movlw	103
  3657  002448  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3658  00244A  A4D8               	btfss	status,2,c
  3659  00244C  D01B               	goto	l6225
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  3663  00244E  5056               	movf	_prec,w,c
  3664  002450  1057               	iorwf	_prec+1,w,c
  3665  002452  A4D8               	btfss	status,2,c
  3666  002454  D004               	goto	l6221
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  3670  002456  0E00               	movlw	0
  3671  002458  6E57               	movwf	_prec+1,c
  3672  00245A  0E01               	movlw	1
  3673  00245C  6E56               	movwf	_prec,c
  3674  00245E                     l6221:
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  3678  00245E  BE57               	btfsc	_prec+1,7,c
  3679  002460  D005               	goto	u8450
  3680  002462  5057               	movf	_prec+1,w,c
  3681  002464  E108               	bnz	l605
  3682  002466  0456               	decf	_prec,w,c
  3683  002468  B0D8               	btfsc	status,0,c
  3684  00246A  D005               	goto	l605
  3685  00246C                     u8450:
  3686                           
  3687                           ; BSR set to: 0
  3688  00246C  0E00               	movlw	0
  3689  00246E  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3690  002470  0E06               	movlw	6
  3691  002472  6F7C               	movwf	efgtoa@p& (0+255),b
  3692  002474  D00A               	goto	l6231
  3693  002476                     l605:
  3694                           
  3695                           ; BSR set to: 0
  3696  002476  0060  F158  F07C   	movff	_prec,efgtoa@p
  3697  00247C  0060  F15C  F07D   	movff	_prec+1,efgtoa@p+1
  3698  002482  D003               	goto	l6231
  3699  002484                     l6225:
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  3703  002484  AE57               	btfss	_prec+1,7,c
  3704  002486  D7F7               	goto	l605
  3705  002488  D7F1               	goto	u8450
  3706  00248A                     l6231:
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  3710  00248A  0E67               	movlw	103
  3711  00248C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3712  00248E  A4D8               	btfss	status,2,c
  3713  002490  D024               	goto	l6241
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  3717  002492  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3718  002494  D006               	goto	u8480
  3719  002496  0EFC               	movlw	252
  3720  002498  5D90               	subwf	efgtoa@e& (0+255),w,b
  3721  00249A  0EFF               	movlw	255
  3722  00249C  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3723  00249E  A0D8               	btfss	status,0,c
  3724  0024A0  D01A               	goto	l6239
  3725  0024A2                     u8480:
  3726                           
  3727                           ; BSR set to: 0
  3728  0024A2  0EFF               	movlw	255
  3729  0024A4  6E4C               	movwf	??_efgtoa& (0+255),c
  3730  0024A6  0EFF               	movlw	255
  3731  0024A8  6E4D               	movwf	(??_efgtoa+1)& (0+255),c
  3732  0024AA  0060  F1F0  F04E   	movff	efgtoa@p,??_efgtoa+2
  3733  0024B0  0060  F1F4  F04F   	movff	efgtoa@p+1,??_efgtoa+3
  3734  0024B6  504C               	movf	??_efgtoa,w,c
  3735  0024B8  264E               	addwf	??_efgtoa+2,f,c
  3736  0024BA  504D               	movf	??_efgtoa+1,w,c
  3737  0024BC  224F               	addwfc	??_efgtoa+3,f,c
  3738  0024BE  5190               	movf	efgtoa@e& (0+255),w,b
  3739  0024C0  5C4E               	subwf	??_efgtoa+2,w,c
  3740  0024C2  504F               	movf	??_efgtoa+3,w,c
  3741  0024C4  0A80               	xorlw	128
  3742  0024C6  6E50               	movwf	(??_efgtoa+4)& (0+255),c
  3743  0024C8  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3744  0024CA  0A80               	xorlw	128
  3745  0024CC  5850               	subwfb	(??_efgtoa+4)& (0+255),w,c
  3746  0024CE  A0D8               	btfss	status,0,c
  3747  0024D0  D002               	goto	l6239
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  3751  0024D2  0E66               	movlw	102
  3752  0024D4  D001               	goto	L2
  3753  0024D6                     l6239:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  3757  0024D6  0E65               	movlw	101
  3758  0024D8                     L2:
  3759  0024D8  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3760  0024DA                     l6241:
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  3764  0024DA  0060  F1F0  F074   	movff	efgtoa@p,efgtoa@m
  3765  0024E0  0060  F1F4  F075   	movff	efgtoa@p+1,efgtoa@m+1
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  3769  0024E6  0E67               	movlw	103
  3770  0024E8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3771  0024EA  A4D8               	btfss	status,2,c
  3772  0024EC  D005               	goto	u8520
  3773                           
  3774                           ; BSR set to: 0
  3775  0024EE  0E66               	movlw	102
  3776  0024F0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3777  0024F2  B4D8               	btfsc	status,2,c
  3778                           
  3779                           ; BSR set to: 0
  3780  0024F4  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3781  0024F6  D002               	goto	l6251
  3782  0024F8                     u8520:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  3786  0024F8  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3787  0024FA  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3788  0024FC                     l6251:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  3792  0024FC  0E66               	movlw	102
  3793  0024FE  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3794  002500  A4D8               	btfss	status,2,c
  3795  002502  D016               	goto	l6261
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  3799  002504  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3800  002506  D00C               	goto	l6257
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  3804  002508  0E00               	movlw	0
  3805  00250A  6F94               	movwf	efgtoa@u& (0+255),b
  3806  00250C  0E00               	movlw	0
  3807  00250E  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3808  002510  0E80               	movlw	128
  3809  002512  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3810  002514  0E3F               	movlw	63
  3811  002516  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3812                           
  3813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  3814  002518  0E00               	movlw	0
  3815  00251A  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3816  00251C  0E00               	movlw	0
  3817  00251E  6F90               	movwf	efgtoa@e& (0+255),b
  3818  002520                     l6257:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  3822  002520  0E67               	movlw	103
  3823  002522  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3824  002524  B4D8               	btfsc	status,2,c
  3825  002526  D004               	goto	l6261
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  3829  002528  5190               	movf	efgtoa@e& (0+255),w,b
  3830  00252A  2774               	addwf	efgtoa@m& (0+255),f,b
  3831  00252C  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3832  00252E  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3833  002530                     l6261:
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  3837  002530  0E00               	movlw	0
  3838  002532  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3839  002534  0E00               	movlw	0
  3840  002536  6F8A               	movwf	efgtoa@i& (0+255),b
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  3844  002538  0060  F230  F082   	movff	efgtoa@g,efgtoa@h
  3845  00253E  0060  F234  F083   	movff	efgtoa@g+1,efgtoa@h+1
  3846  002544  0060  F238  F084   	movff	efgtoa@g+2,efgtoa@h+2
  3847  00254A  0060  F23C  F085   	movff	efgtoa@g+3,efgtoa@h+3
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  3851  002550  0060  F250  F060   	movff	efgtoa@u,efgtoa@ou
  3852  002556  0060  F254  F061   	movff	efgtoa@u+1,efgtoa@ou+1
  3853  00255C  0060  F258  F062   	movff	efgtoa@u+2,efgtoa@ou+2
  3854  002562  0060  F25C  F063   	movff	efgtoa@u+3,efgtoa@ou+3
  3855                           
  3856                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3857  002568  D0AD               	goto	l6275
  3858  00256A                     l6267:
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  3862  00256A  0060  F208  F006   	movff	efgtoa@h,___fldiv@b
  3863  002570  0060  F20C  F007   	movff	efgtoa@h+1,___fldiv@b+1
  3864  002576  0060  F210  F008   	movff	efgtoa@h+2,___fldiv@b+2
  3865  00257C  0060  F214  F009   	movff	efgtoa@h+3,___fldiv@b+3
  3866  002582  0060  F250  F00A   	movff	efgtoa@u,___fldiv@a
  3867  002588  0060  F254  F00B   	movff	efgtoa@u+1,___fldiv@a+1
  3868  00258E  0060  F258  F00C   	movff	efgtoa@u+2,___fldiv@a+2
  3869  002594  0060  F25C  F00D   	movff	efgtoa@u+3,___fldiv@a+3
  3870  00259A  ECDE  F01C         	call	___fldiv	;wreg free
  3871  00259E  0060  F018  F01F   	movff	?___fldiv,floorf@x
  3872  0025A4  0060  F01C  F020   	movff	?___fldiv+1,floorf@x+1
  3873  0025AA  0060  F020  F021   	movff	?___fldiv+2,floorf@x+2
  3874  0025B0  0060  F024  F022   	movff	?___fldiv+3,floorf@x+3
  3875  0025B6  EC79  F01F         	call	_floorf	;wreg free
  3876  0025BA  0060  F07C  F086   	movff	?_floorf,efgtoa@l
  3877  0025C0  0060  F080  F087   	movff	?_floorf+1,efgtoa@l+1
  3878  0025C6  0060  F084  F088   	movff	?_floorf+2,efgtoa@l+2
  3879  0025CC  0060  F088  F089   	movff	?_floorf+3,efgtoa@l+3
  3880                           
  3881                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  3882  0025D2  0060  F218  F006   	movff	efgtoa@l,___fltol@f1
  3883  0025D8  0060  F21C  F007   	movff	efgtoa@l+1,___fltol@f1+1
  3884  0025DE  0060  F220  F008   	movff	efgtoa@l+2,___fltol@f1+2
  3885  0025E4  0060  F224  F009   	movff	efgtoa@l+3,___fltol@f1+3
  3886  0025EA  EC06  F024         	call	___fltol	;wreg free
  3887  0025EE  0060  F018  F078   	movff	?___fltol,efgtoa@d
  3888  0025F4  0060  F01C  F079   	movff	?___fltol+1,efgtoa@d+1
  3889                           
  3890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  3891  0025FA  0060  F208  F03D   	movff	efgtoa@h,___flsub@b
  3892  002600  0060  F20C  F03E   	movff	efgtoa@h+1,___flsub@b+1
  3893  002606  0060  F210  F03F   	movff	efgtoa@h+2,___flsub@b+2
  3894  00260C  0060  F214  F040   	movff	efgtoa@h+3,___flsub@b+3
  3895  002612  0060  F250  F018   	movff	efgtoa@u,___flmul@a
  3896  002618  0060  F254  F019   	movff	efgtoa@u+1,___flmul@a+1
  3897  00261E  0060  F258  F01A   	movff	efgtoa@u+2,___flmul@a+2
  3898  002624  0060  F25C  F01B   	movff	efgtoa@u+3,___flmul@a+3
  3899  00262A  0060  F218  F014   	movff	efgtoa@l,___flmul@b
  3900  002630  0060  F21C  F015   	movff	efgtoa@l+1,___flmul@b+1
  3901  002636  0060  F220  F016   	movff	efgtoa@l+2,___flmul@b+2
  3902  00263C  0060  F224  F017   	movff	efgtoa@l+3,___flmul@b+3
  3903  002642  EC01  F016         	call	___flmul	;wreg free
  3904  002646  0060  F050  F041   	movff	?___flmul,___flsub@a
  3905  00264C  0060  F054  F042   	movff	?___flmul+1,___flsub@a+1
  3906  002652  0060  F058  F043   	movff	?___flmul+2,___flsub@a+2
  3907  002658  0060  F05C  F044   	movff	?___flmul+3,___flsub@a+3
  3908  00265E  EC5F  F027         	call	___flsub	;wreg free
  3909  002662  0060  F0F4  F082   	movff	?___flsub,efgtoa@h
  3910  002668  0060  F0F8  F083   	movff	?___flsub+1,efgtoa@h+1
  3911  00266E  0060  F0FC  F084   	movff	?___flsub+2,efgtoa@h+2
  3912  002674  0060  F100  F085   	movff	?___flsub+3,efgtoa@h+3
  3913                           
  3914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  3915  00267A  0060  F250  F006   	movff	efgtoa@u,___fldiv@b
  3916  002680  0060  F254  F007   	movff	efgtoa@u+1,___fldiv@b+1
  3917  002686  0060  F258  F008   	movff	efgtoa@u+2,___fldiv@b+2
  3918  00268C  0060  F25C  F009   	movff	efgtoa@u+3,___fldiv@b+3
  3919  002692  0E00               	movlw	0
  3920  002694  6E0A               	movwf	___fldiv@a,c
  3921  002696  0E00               	movlw	0
  3922  002698  6E0B               	movwf	___fldiv@a+1,c
  3923  00269A  0E20               	movlw	32
  3924  00269C  6E0C               	movwf	___fldiv@a+2,c
  3925  00269E  0E41               	movlw	65
  3926  0026A0  6E0D               	movwf	___fldiv@a+3,c
  3927  0026A2  ECDE  F01C         	call	___fldiv	;wreg free
  3928  0026A6  0060  F018  F094   	movff	?___fldiv,efgtoa@u
  3929  0026AC  0060  F01C  F095   	movff	?___fldiv+1,efgtoa@u+1
  3930  0026B2  0060  F020  F096   	movff	?___fldiv+2,efgtoa@u+2
  3931  0026B8  0060  F024  F097   	movff	?___fldiv+3,efgtoa@u+3
  3932                           
  3933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  3934  0026BE  0100               	movlb	0	; () banked
  3935  0026C0  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3936  0026C2  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3937  0026C4                     l6275:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3941  0026C4  5174               	movf	efgtoa@m& (0+255),w,b
  3942  0026C6  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3943  0026C8  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3944  0026CA  0A80               	xorlw	128
  3945  0026CC  6E4C               	movwf	??_efgtoa& (0+255),c
  3946  0026CE  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3947  0026D0  0A80               	xorlw	128
  3948  0026D2  584C               	subwfb	??_efgtoa& (0+255),w,c
  3949  0026D4  A0D8               	btfss	status,0,c
  3950  0026D6  D749               	goto	l6267
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  3954  0026D8  0060  F250  F014   	movff	efgtoa@u,___flmul@b
  3955  0026DE  0060  F254  F015   	movff	efgtoa@u+1,___flmul@b+1
  3956  0026E4  0060  F258  F016   	movff	efgtoa@u+2,___flmul@b+2
  3957  0026EA  0060  F25C  F017   	movff	efgtoa@u+3,___flmul@b+3
  3958  0026F0  0E00               	movlw	0
  3959  0026F2  6E18               	movwf	___flmul@a,c
  3960  0026F4  0E00               	movlw	0
  3961  0026F6  6E19               	movwf	___flmul@a+1,c
  3962  0026F8  0EA0               	movlw	160
  3963  0026FA  6E1A               	movwf	___flmul@a+2,c
  3964  0026FC  0E40               	movlw	64
  3965  0026FE  6E1B               	movwf	___flmul@a+3,c
  3966  002700  EC01  F016         	call	___flmul	;wreg free
  3967  002704  0060  F050  F086   	movff	?___flmul,efgtoa@l
  3968  00270A  0060  F054  F087   	movff	?___flmul+1,efgtoa@l+1
  3969  002710  0060  F058  F088   	movff	?___flmul+2,efgtoa@l+2
  3970  002716  0060  F05C  F089   	movff	?___flmul+3,efgtoa@l+3
  3971                           
  3972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  3973  00271C  0060  F208  F02D   	movff	efgtoa@h,___flge@ff1
  3974  002722  0060  F20C  F02E   	movff	efgtoa@h+1,___flge@ff1+1
  3975  002728  0060  F210  F02F   	movff	efgtoa@h+2,___flge@ff1+2
  3976  00272E  0060  F214  F030   	movff	efgtoa@h+3,___flge@ff1+3
  3977  002734  0060  F218  F031   	movff	efgtoa@l,___flge@ff2
  3978  00273A  0060  F21C  F032   	movff	efgtoa@l+1,___flge@ff2+1
  3979  002740  0060  F220  F033   	movff	efgtoa@l+2,___flge@ff2+2
  3980  002746  0060  F224  F034   	movff	efgtoa@l+3,___flge@ff2+3
  3981  00274C  EC37  F023         	call	___flge	;wreg free
  3982  002750  B0D8               	btfsc	status,0,c
  3983  002752  D003               	goto	l6283
  3984                           
  3985                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  3986  002754  0E00               	movlw	0
  3987  002756  0100               	movlb	0	; () banked
  3988  002758  D020               	goto	L3
  3989  00275A                     l6283:
  3990                           
  3991                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  3992  00275A  0060  F208  F006   	movff	efgtoa@h,___fleq@ff1
  3993  002760  0060  F20C  F007   	movff	efgtoa@h+1,___fleq@ff1+1
  3994  002766  0060  F210  F008   	movff	efgtoa@h+2,___fleq@ff1+2
  3995  00276C  0060  F214  F009   	movff	efgtoa@h+3,___fleq@ff1+3
  3996  002772  0060  F218  F00A   	movff	efgtoa@l,___fleq@ff2
  3997  002778  0060  F21C  F00B   	movff	efgtoa@l+1,___fleq@ff2+1
  3998  00277E  0060  F220  F00C   	movff	efgtoa@l+2,___fleq@ff2+2
  3999  002784  0060  F224  F00D   	movff	efgtoa@l+3,___fleq@ff2+3
  4000  00278A  ECBA  F025         	call	___fleq	;wreg free
  4001  00278E  A0D8               	btfss	status,0,c
  4002  002790  D00B               	goto	l6289
  4003  002792  0100               	movlb	0	; () banked
  4004  002794  B178               	btfsc	efgtoa@d& (0+255),0,b
  4005  002796  D008               	goto	l6289
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  4009  002798  0E00               	movlw	0
  4010  00279A                     L3:
  4011  00279A  6F86               	movwf	efgtoa@l& (0+255),b
  4012  00279C  0E00               	movlw	0
  4013  00279E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4014  0027A0  0E00               	movlw	0
  4015  0027A2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4016  0027A4  0E00               	movlw	0
  4017  0027A6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4018  0027A8                     l6289:
  4019                           
  4020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  4021  0027A8  0060  F230  F02D   	movff	efgtoa@g,___fladd@b
  4022  0027AE  0060  F234  F02E   	movff	efgtoa@g+1,___fladd@b+1
  4023  0027B4  0060  F238  F02F   	movff	efgtoa@g+2,___fladd@b+2
  4024  0027BA  0060  F23C  F030   	movff	efgtoa@g+3,___fladd@b+3
  4025  0027C0  0060  F218  F031   	movff	efgtoa@l,___fladd@a
  4026  0027C6  0060  F21C  F032   	movff	efgtoa@l+1,___fladd@a+1
  4027  0027CC  0060  F220  F033   	movff	efgtoa@l+2,___fladd@a+2
  4028  0027D2  0060  F224  F034   	movff	efgtoa@l+3,___fladd@a+3
  4029  0027D8  ECA5  F019         	call	___fladd	;wreg free
  4030  0027DC  0060  F0B4  F082   	movff	?___fladd,efgtoa@h
  4031  0027E2  0060  F0B8  F083   	movff	?___fladd+1,efgtoa@h+1
  4032  0027E8  0060  F0BC  F084   	movff	?___fladd+2,efgtoa@h+2
  4033  0027EE  0060  F0C0  F085   	movff	?___fladd+3,efgtoa@h+3
  4034                           
  4035                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  4036  0027F4  0060  F180  F094   	movff	efgtoa@ou,efgtoa@u
  4037  0027FA  0060  F184  F095   	movff	efgtoa@ou+1,efgtoa@u+1
  4038  002800  0060  F188  F096   	movff	efgtoa@ou+2,efgtoa@u+2
  4039  002806  0060  F18C  F097   	movff	efgtoa@ou+3,efgtoa@u+3
  4040                           
  4041                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  4042  00280C  0E65               	movlw	101
  4043  00280E  0100               	movlb	0	; () banked
  4044  002810  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4045  002812  B4D8               	btfsc	status,2,c
  4046  002814  D007               	goto	l6297
  4047                           
  4048                           ; BSR set to: 0
  4049  002816  0060  F240  F076   	movff	efgtoa@e,efgtoa@ne
  4050  00281C  0060  F244  F077   	movff	efgtoa@e+1,efgtoa@ne+1
  4051  002822  D004               	goto	l631
  4052  002824                     l6297:
  4053                           
  4054                           ; BSR set to: 0
  4055  002824  0E00               	movlw	0
  4056  002826  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  4057  002828  0E00               	movlw	0
  4058  00282A  6F76               	movwf	efgtoa@ne& (0+255),b
  4059  00282C                     l631:
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  4063  00282C  0E00               	movlw	0
  4064  00282E  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4065  002830  0E00               	movlw	0
  4066  002832  6F72               	movwf	efgtoa@pp& (0+255),b
  4067                           
  4068                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  4069  002834  0E00               	movlw	0
  4070  002836  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  4071  002838  0E00               	movlw	0
  4072  00283A  6F70               	movwf	efgtoa@t& (0+255),b
  4073                           
  4074                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  4075  00283C  0E00               	movlw	0
  4076  00283E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4077  002840  0E00               	movlw	0
  4078  002842  6F8A               	movwf	efgtoa@i& (0+255),b
  4079                           
  4080                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  4081  002844  D0F9               	goto	l6347
  4082  002846                     l6299:
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  4086  002846  0060  F208  F006   	movff	efgtoa@h,___fldiv@b
  4087  00284C  0060  F20C  F007   	movff	efgtoa@h+1,___fldiv@b+1
  4088  002852  0060  F210  F008   	movff	efgtoa@h+2,___fldiv@b+2
  4089  002858  0060  F214  F009   	movff	efgtoa@h+3,___fldiv@b+3
  4090  00285E  0060  F250  F00A   	movff	efgtoa@u,___fldiv@a
  4091  002864  0060  F254  F00B   	movff	efgtoa@u+1,___fldiv@a+1
  4092  00286A  0060  F258  F00C   	movff	efgtoa@u+2,___fldiv@a+2
  4093  002870  0060  F25C  F00D   	movff	efgtoa@u+3,___fldiv@a+3
  4094  002876  ECDE  F01C         	call	___fldiv	;wreg free
  4095  00287A  0060  F018  F01F   	movff	?___fldiv,floorf@x
  4096  002880  0060  F01C  F020   	movff	?___fldiv+1,floorf@x+1
  4097  002886  0060  F020  F021   	movff	?___fldiv+2,floorf@x+2
  4098  00288C  0060  F024  F022   	movff	?___fldiv+3,floorf@x+3
  4099  002892  EC79  F01F         	call	_floorf	;wreg free
  4100  002896  0060  F07C  F086   	movff	?_floorf,efgtoa@l
  4101  00289C  0060  F080  F087   	movff	?_floorf+1,efgtoa@l+1
  4102  0028A2  0060  F084  F088   	movff	?_floorf+2,efgtoa@l+2
  4103  0028A8  0060  F088  F089   	movff	?_floorf+3,efgtoa@l+3
  4104                           
  4105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  4106  0028AE  0060  F218  F006   	movff	efgtoa@l,___fltol@f1
  4107  0028B4  0060  F21C  F007   	movff	efgtoa@l+1,___fltol@f1+1
  4108  0028BA  0060  F220  F008   	movff	efgtoa@l+2,___fltol@f1+2
  4109  0028C0  0060  F224  F009   	movff	efgtoa@l+3,___fltol@f1+3
  4110  0028C6  EC06  F024         	call	___fltol	;wreg free
  4111  0028CA  0060  F018  F078   	movff	?___fltol,efgtoa@d
  4112  0028D0  0060  F01C  F079   	movff	?___fltol+1,efgtoa@d+1
  4113                           
  4114                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4115  0028D6  B858               	btfsc	_flags,4,c
  4116  0028D8  D00D               	goto	l6311
  4117  0028DA  0100               	movlb	0	; () banked
  4118  0028DC  5178               	movf	efgtoa@d& (0+255),w,b
  4119  0028DE  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4120  0028E0  A4D8               	btfss	status,2,c
  4121  0028E2  D008               	goto	l6311
  4122                           
  4123                           ; BSR set to: 0
  4124  0028E4  0E67               	movlw	103
  4125  0028E6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4126  0028E8  B4D8               	btfsc	status,2,c
  4127                           
  4128                           ; BSR set to: 0
  4129  0028EA  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4130  0028EC  D003               	goto	l6311
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  4134  0028EE  4B70               	infsnz	efgtoa@t& (0+255),f,b
  4135  0028F0  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  4136                           
  4137                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  4138  0028F2  D03A               	goto	l6339
  4139  0028F4                     l6311:
  4140                           
  4141                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  4142  0028F4  0100               	movlb	0	; () banked
  4143  0028F6  5172               	movf	efgtoa@pp& (0+255),w,b
  4144  0028F8  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4145  0028FA  B4D8               	btfsc	status,2,c
  4146                           
  4147                           ; BSR set to: 0
  4148  0028FC  AF77               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4149  0028FE  D022               	goto	l6331
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  4153  002900  0E20               	movlw	low _dbuf
  4154  002902  2592               	addwf	efgtoa@n& (0+255),w,b
  4155  002904  6ED9               	movwf	fsr2l,c
  4156  002906  0E01               	movlw	high _dbuf
  4157  002908  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4158  00290A  6EDA               	movwf	fsr2h,c
  4159  00290C  0E2E               	movlw	46
  4160  00290E  6EDF               	movwf	indf2,c
  4161                           
  4162                           ; BSR set to: 0
  4163  002910  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4164  002912  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  4168  002914  077F               	decf	efgtoa@w& (0+255),f,b
  4169  002916  A0D8               	btfss	status,0,c
  4170  002918  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  4174  00291A  0E00               	movlw	0
  4175  00291C  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4176  00291E  0E01               	movlw	1
  4177  002920  6F72               	movwf	efgtoa@pp& (0+255),b
  4178  002922  D010               	goto	l6331
  4179  002924                     l6323:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  4183  002924  0E20               	movlw	low _dbuf
  4184  002926  2592               	addwf	efgtoa@n& (0+255),w,b
  4185  002928  6ED9               	movwf	fsr2l,c
  4186  00292A  0E01               	movlw	high _dbuf
  4187  00292C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4188  00292E  6EDA               	movwf	fsr2h,c
  4189  002930  0E30               	movlw	48
  4190  002932  6EDF               	movwf	indf2,c
  4191                           
  4192                           ; BSR set to: 0
  4193  002934  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4194  002936  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  4198  002938  077F               	decf	efgtoa@w& (0+255),f,b
  4199  00293A  A0D8               	btfss	status,0,c
  4200  00293C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  4204  00293E  0770               	decf	efgtoa@t& (0+255),f,b
  4205  002940  A0D8               	btfss	status,0,c
  4206  002942  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  4207  002944                     l6331:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  4211  002944  5170               	movf	efgtoa@t& (0+255),w,b
  4212  002946  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4213  002948  A4D8               	btfss	status,2,c
  4214  00294A  D7EC               	goto	l6323
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  4218  00294C  0E20               	movlw	low _dbuf
  4219  00294E  2592               	addwf	efgtoa@n& (0+255),w,b
  4220  002950  6ED9               	movwf	fsr2l,c
  4221  002952  0E01               	movlw	high _dbuf
  4222  002954  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4223  002956  6EDA               	movwf	fsr2h,c
  4224  002958  5178               	movf	efgtoa@d& (0+255),w,b
  4225  00295A  0F30               	addlw	48
  4226  00295C  6EDF               	movwf	indf2,c
  4227                           
  4228                           ; BSR set to: 0
  4229  00295E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4230  002960  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  4234  002962  077F               	decf	efgtoa@w& (0+255),f,b
  4235  002964  A0D8               	btfss	status,0,c
  4236  002966  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4237  002968                     l6339:
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  4241  002968  0060  F208  F03D   	movff	efgtoa@h,___flsub@b
  4242  00296E  0060  F20C  F03E   	movff	efgtoa@h+1,___flsub@b+1
  4243  002974  0060  F210  F03F   	movff	efgtoa@h+2,___flsub@b+2
  4244  00297A  0060  F214  F040   	movff	efgtoa@h+3,___flsub@b+3
  4245  002980  0060  F250  F018   	movff	efgtoa@u,___flmul@a
  4246  002986  0060  F254  F019   	movff	efgtoa@u+1,___flmul@a+1
  4247  00298C  0060  F258  F01A   	movff	efgtoa@u+2,___flmul@a+2
  4248  002992  0060  F25C  F01B   	movff	efgtoa@u+3,___flmul@a+3
  4249  002998  0060  F218  F014   	movff	efgtoa@l,___flmul@b
  4250  00299E  0060  F21C  F015   	movff	efgtoa@l+1,___flmul@b+1
  4251  0029A4  0060  F220  F016   	movff	efgtoa@l+2,___flmul@b+2
  4252  0029AA  0060  F224  F017   	movff	efgtoa@l+3,___flmul@b+3
  4253  0029B0  EC01  F016         	call	___flmul	;wreg free
  4254  0029B4  0060  F050  F041   	movff	?___flmul,___flsub@a
  4255  0029BA  0060  F054  F042   	movff	?___flmul+1,___flsub@a+1
  4256  0029C0  0060  F058  F043   	movff	?___flmul+2,___flsub@a+2
  4257  0029C6  0060  F05C  F044   	movff	?___flmul+3,___flsub@a+3
  4258  0029CC  EC5F  F027         	call	___flsub	;wreg free
  4259  0029D0  0060  F0F4  F082   	movff	?___flsub,efgtoa@h
  4260  0029D6  0060  F0F8  F083   	movff	?___flsub+1,efgtoa@h+1
  4261  0029DC  0060  F0FC  F084   	movff	?___flsub+2,efgtoa@h+2
  4262  0029E2  0060  F100  F085   	movff	?___flsub+3,efgtoa@h+3
  4263                           
  4264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  4265  0029E8  0060  F250  F006   	movff	efgtoa@u,___fldiv@b
  4266  0029EE  0060  F254  F007   	movff	efgtoa@u+1,___fldiv@b+1
  4267  0029F4  0060  F258  F008   	movff	efgtoa@u+2,___fldiv@b+2
  4268  0029FA  0060  F25C  F009   	movff	efgtoa@u+3,___fldiv@b+3
  4269  002A00  0E00               	movlw	0
  4270  002A02  6E0A               	movwf	___fldiv@a,c
  4271  002A04  0E00               	movlw	0
  4272  002A06  6E0B               	movwf	___fldiv@a+1,c
  4273  002A08  0E20               	movlw	32
  4274  002A0A  6E0C               	movwf	___fldiv@a+2,c
  4275  002A0C  0E41               	movlw	65
  4276  002A0E  6E0D               	movwf	___fldiv@a+3,c
  4277  002A10  ECDE  F01C         	call	___fldiv	;wreg free
  4278  002A14  0060  F018  F094   	movff	?___fldiv,efgtoa@u
  4279  002A1A  0060  F01C  F095   	movff	?___fldiv+1,efgtoa@u+1
  4280  002A20  0060  F020  F096   	movff	?___fldiv+2,efgtoa@u+2
  4281  002A26  0060  F024  F097   	movff	?___fldiv+3,efgtoa@u+3
  4282                           
  4283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  4284  002A2C  0100               	movlb	0	; () banked
  4285  002A2E  0776               	decf	efgtoa@ne& (0+255),f,b
  4286  002A30  A0D8               	btfss	status,0,c
  4287  002A32  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  4291  002A34  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4292  002A36  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4293  002A38                     l6347:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  4297  002A38  5174               	movf	efgtoa@m& (0+255),w,b
  4298  002A3A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4299  002A3C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4300  002A3E  0A80               	xorlw	128
  4301  002A40  6E4C               	movwf	??_efgtoa& (0+255),c
  4302  002A42  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4303  002A44  0A80               	xorlw	128
  4304  002A46  584C               	subwfb	??_efgtoa& (0+255),w,c
  4305  002A48  B0D8               	btfsc	status,0,c
  4306  002A4A  D008               	goto	u8690
  4307                           
  4308                           ; BSR set to: 0
  4309  002A4C  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4310  002A4E  D6FB               	goto	l6299
  4311  002A50  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4312  002A52  E104               	bnz	u8690
  4313  002A54  0E4B               	movlw	75
  4314  002A56  5D92               	subwf	efgtoa@n& (0+255),w,b
  4315  002A58  A0D8               	btfss	status,0,c
  4316  002A5A  D6F5               	goto	l6299
  4317  002A5C                     u8690:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  4321  002A5C  5172               	movf	efgtoa@pp& (0+255),w,b
  4322  002A5E  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4323  002A60  B4D8               	btfsc	status,2,c
  4324                           
  4325                           ; BSR set to: 0
  4326  002A62  A858               	btfss	_flags,4,c
  4327  002A64  D00A               	goto	l6359
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  4331  002A66  0E20               	movlw	low _dbuf
  4332  002A68  2592               	addwf	efgtoa@n& (0+255),w,b
  4333  002A6A  6ED9               	movwf	fsr2l,c
  4334  002A6C  0E01               	movlw	high _dbuf
  4335  002A6E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4336  002A70  6EDA               	movwf	fsr2h,c
  4337  002A72  0E2E               	movlw	46
  4338  002A74  6EDF               	movwf	indf2,c
  4339                           
  4340                           ; BSR set to: 0
  4341  002A76  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4342  002A78  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4343  002A7A                     l6359:
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  4347  002A7A  0E20               	movlw	low _dbuf
  4348  002A7C  2592               	addwf	efgtoa@n& (0+255),w,b
  4349  002A7E  6ED9               	movwf	fsr2l,c
  4350  002A80  0E01               	movlw	high _dbuf
  4351  002A82  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4352  002A84  6EDA               	movwf	fsr2h,c
  4353  002A86  0E00               	movlw	0
  4354  002A88  6EDF               	movwf	indf2,c
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  4358  002A8A  0E65               	movlw	101
  4359  002A8C  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4360  002A8E  A4D8               	btfss	status,2,c
  4361  002A90  EFF7  F010         	goto	l6171
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  4365  002A94  0E00               	movlw	0
  4366  002A96  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4367  002A98  0E4F               	movlw	79
  4368  002A9A  6F8A               	movwf	efgtoa@i& (0+255),b
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  4372  002A9C  0E20               	movlw	low _dbuf
  4373  002A9E  258A               	addwf	efgtoa@i& (0+255),w,b
  4374  002AA0  6ED9               	movwf	fsr2l,c
  4375  002AA2  0E01               	movlw	high _dbuf
  4376  002AA4  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4377  002AA6  6EDA               	movwf	fsr2h,c
  4378  002AA8  0E00               	movlw	0
  4379  002AAA  6EDF               	movwf	indf2,c
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  4383  002AAC  0E00               	movlw	0
  4384  002AAE  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4385  002AB0  0E00               	movlw	0
  4386  002AB2  6F7A               	movwf	efgtoa@sign& (0+255),b
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  4390  002AB4  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  4391  002AB6  D008               	goto	l6375
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  4395  002AB8  0E00               	movlw	0
  4396  002ABA  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4397  002ABC  0E01               	movlw	1
  4398  002ABE  6F7A               	movwf	efgtoa@sign& (0+255),b
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  4402  002AC0  6D90               	negf	efgtoa@e& (0+255),b
  4403  002AC2  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4404  002AC4  B0D8               	btfsc	status,0,c
  4405  002AC6  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4406  002AC8                     l6375:
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  4410  002AC8  0E00               	movlw	0
  4411  002ACA  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4412  002ACC  0E02               	movlw	2
  4413  002ACE  6F7C               	movwf	efgtoa@p& (0+255),b
  4414                           
  4415                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  4416  002AD0  D031               	goto	l6387
  4417  002AD2                     l6377:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  4421  002AD2  078A               	decf	efgtoa@i& (0+255),f,b
  4422  002AD4  A0D8               	btfss	status,0,c
  4423  002AD6  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  4427  002AD8  0E20               	movlw	low _dbuf
  4428  002ADA  258A               	addwf	efgtoa@i& (0+255),w,b
  4429  002ADC  6ED9               	movwf	fsr2l,c
  4430  002ADE  0E01               	movlw	high _dbuf
  4431  002AE0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4432  002AE2  6EDA               	movwf	fsr2h,c
  4433  002AE4  0060  F240  F006   	movff	efgtoa@e,___awmod@dividend
  4434  002AEA  0060  F244  F007   	movff	efgtoa@e+1,___awmod@dividend+1
  4435  002AF0  0E00               	movlw	0
  4436  002AF2  6E09               	movwf	___awmod@divisor+1,c
  4437  002AF4  0E0A               	movlw	10
  4438  002AF6  6E08               	movwf	___awmod@divisor,c
  4439  002AF8  EC84  F026         	call	___awmod	;wreg free
  4440  002AFC  5006               	movf	?___awmod,w,c
  4441  002AFE  0F30               	addlw	48
  4442  002B00  6EDF               	movwf	indf2,c
  4443                           
  4444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  4445  002B02  0060  F240  F006   	movff	efgtoa@e,___awdiv@dividend
  4446  002B08  0060  F244  F007   	movff	efgtoa@e+1,___awdiv@dividend+1
  4447  002B0E  0E00               	movlw	0
  4448  002B10  6E09               	movwf	___awdiv@divisor+1,c
  4449  002B12  0E0A               	movlw	10
  4450  002B14  6E08               	movwf	___awdiv@divisor,c
  4451  002B16  ECFF  F025         	call	___awdiv	;wreg free
  4452  002B1A  0060  F018  F090   	movff	?___awdiv,efgtoa@e
  4453  002B20  0060  F01C  F091   	movff	?___awdiv+1,efgtoa@e+1
  4454                           
  4455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  4456  002B26  0100               	movlb	0	; () banked
  4457  002B28  077C               	decf	efgtoa@p& (0+255),f,b
  4458  002B2A  A0D8               	btfss	status,0,c
  4459  002B2C  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  4463  002B2E  077F               	decf	efgtoa@w& (0+255),f,b
  4464  002B30  A0D8               	btfss	status,0,c
  4465  002B32  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4466  002B34                     l6387:
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  4470  002B34  5190               	movf	efgtoa@e& (0+255),w,b
  4471  002B36  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4472  002B38  A4D8               	btfss	status,2,c
  4473  002B3A  D7CB               	goto	l6377
  4474                           
  4475                           ; BSR set to: 0
  4476  002B3C  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4477  002B3E  D005               	goto	u8750
  4478  002B40  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4479  002B42  E1C7               	bnz	l6377
  4480  002B44  057C               	decf	efgtoa@p& (0+255),w,b
  4481  002B46  B0D8               	btfsc	status,0,c
  4482  002B48  D7C4               	goto	l6377
  4483  002B4A                     u8750:
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  4487  002B4A  078A               	decf	efgtoa@i& (0+255),f,b
  4488  002B4C  A0D8               	btfss	status,0,c
  4489  002B4E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  4493  002B50  517A               	movf	efgtoa@sign& (0+255),w,b
  4494  002B52  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4495  002B54  A4D8               	btfss	status,2,c
  4496  002B56  D004               	goto	l6397
  4497                           
  4498                           ; BSR set to: 0
  4499  002B58  0E00               	movlw	0
  4500  002B5A  6F6B               	movwf	(_efgtoa$1681+1)& (0+255),b
  4501  002B5C  0E2B               	movlw	43
  4502  002B5E  D003               	goto	L4
  4503  002B60                     l6397:
  4504                           
  4505                           ; BSR set to: 0
  4506  002B60  0E00               	movlw	0
  4507  002B62  6F6B               	movwf	(_efgtoa$1681+1)& (0+255),b
  4508  002B64  0E2D               	movlw	45
  4509  002B66                     L4:
  4510  002B66  6F6A               	movwf	_efgtoa$1681& (0+255),b
  4511                           
  4512                           ; BSR set to: 0
  4513  002B68  0E20               	movlw	low _dbuf
  4514  002B6A  258A               	addwf	efgtoa@i& (0+255),w,b
  4515  002B6C  6ED9               	movwf	fsr2l,c
  4516  002B6E  0E01               	movlw	high _dbuf
  4517  002B70  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4518  002B72  6EDA               	movwf	fsr2h,c
  4519  002B74  0060  F1AB  FFDF   	movff	_efgtoa$1681,indf2
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  4523  002B7A  077F               	decf	efgtoa@w& (0+255),f,b
  4524  002B7C  A0D8               	btfss	status,0,c
  4525  002B7E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4529  002B80  078A               	decf	efgtoa@i& (0+255),f,b
  4530  002B82  A0D8               	btfss	status,0,c
  4531  002B84  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4532                           
  4533                           ; BSR set to: 0
  4534  002B86  0EBF               	movlw	191
  4535  002B88  6E4C               	movwf	??_efgtoa& (0+255),c
  4536  002B8A  0EFF               	movlw	255
  4537  002B8C  6E4D               	movwf	(??_efgtoa+1)& (0+255),c
  4538  002B8E  504B               	movf	efgtoa@c,w,c
  4539  002B90  6E4E               	movwf	(??_efgtoa+2)& (0+255),c
  4540  002B92  6A4F               	clrf	(??_efgtoa+3)& (0+255),c
  4541  002B94  504C               	movf	??_efgtoa,w,c
  4542  002B96  264E               	addwf	??_efgtoa+2,f,c
  4543  002B98  504D               	movf	??_efgtoa+1,w,c
  4544  002B9A  224F               	addwfc	??_efgtoa+3,f,c
  4545  002B9C  504F               	movf	??_efgtoa+3,w,c
  4546  002B9E  E106               	bnz	u8770
  4547  002BA0  0E1A               	movlw	26
  4548  002BA2  5C4E               	subwf	??_efgtoa+2,w,c
  4549  002BA4  B0D8               	btfsc	status,0,c
  4550  002BA6  D002               	goto	u8770
  4551  002BA8  0E01               	movlw	1
  4552  002BAA  D001               	goto	u8780
  4553  002BAC                     u8770:
  4554  002BAC  0E00               	movlw	0
  4555  002BAE                     u8780:
  4556  002BAE  6F6E               	movwf	_efgtoa$1683& (0+255),b
  4557  002BB0  6B6F               	clrf	(_efgtoa$1683+1)& (0+255),b
  4558                           
  4559                           ; BSR set to: 0
  4560  002BB2  516E               	movf	_efgtoa$1683& (0+255),w,b
  4561  002BB4  116F               	iorwf	(_efgtoa$1683+1)& (0+255),w,b
  4562  002BB6  A4D8               	btfss	status,2,c
  4563  002BB8  D004               	goto	l6413
  4564                           
  4565                           ; BSR set to: 0
  4566  002BBA  0E00               	movlw	0
  4567  002BBC  6F6D               	movwf	(_efgtoa$1682+1)& (0+255),b
  4568  002BBE  0E65               	movlw	101
  4569  002BC0  D003               	goto	L5
  4570  002BC2                     l6413:
  4571                           
  4572                           ; BSR set to: 0
  4573  002BC2  0E00               	movlw	0
  4574  002BC4  6F6D               	movwf	(_efgtoa$1682+1)& (0+255),b
  4575  002BC6  0E45               	movlw	69
  4576  002BC8                     L5:
  4577  002BC8  6F6C               	movwf	_efgtoa$1682& (0+255),b
  4578                           
  4579                           ; BSR set to: 0
  4580  002BCA  0E20               	movlw	low _dbuf
  4581  002BCC  258A               	addwf	efgtoa@i& (0+255),w,b
  4582  002BCE  6ED9               	movwf	fsr2l,c
  4583  002BD0  0E01               	movlw	high _dbuf
  4584  002BD2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4585  002BD4  6EDA               	movwf	fsr2h,c
  4586  002BD6  0060  F1B3  FFDF   	movff	_efgtoa$1682,indf2
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  4590  002BDC  077F               	decf	efgtoa@w& (0+255),f,b
  4591  002BDE  A0D8               	btfss	status,0,c
  4592  002BE0  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  4596  002BE2  0E20               	movlw	low _dbuf
  4597  002BE4  2592               	addwf	efgtoa@n& (0+255),w,b
  4598  002BE6  6E06               	movwf	strcpy@dest,c
  4599  002BE8  0E01               	movlw	high _dbuf
  4600  002BEA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4601  002BEC  6E07               	movwf	strcpy@dest+1,c
  4602  002BEE  0E20               	movlw	low _dbuf
  4603  002BF0  258A               	addwf	efgtoa@i& (0+255),w,b
  4604  002BF2  6E08               	movwf	strcpy@src,c
  4605  002BF4  0E01               	movlw	high _dbuf
  4606  002BF6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4607  002BF8  6E09               	movwf	strcpy@src+1,c
  4608  002BFA  EC2B  F027         	call	_strcpy	;wreg free
  4609  002BFE  EFF7  F010         	goto	l6171
  4610  002C02                     __end_of_efgtoa:
  4611                           	opt callstack 0
  4612                           
  4613 ;; *************** function _tolower *****************
  4614 ;; Defined at:
  4615 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  c               2   11[COMRAM] int 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  2   11[COMRAM] int 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4631 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4632 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4633 ;;Total ram usage:        8 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    3
  4636 ;; This function calls:
  4637 ;;		_isupper
  4638 ;; This function is called by:
  4639 ;;		_efgtoa
  4640 ;;		_vfpfcnvrt
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text10
  4645  005026                     __ptext10:
  4646                           	opt callstack 0
  4647  005026                     _tolower:
  4648                           	opt callstack 23
  4649                           
  4650                           ;incstack = 0
  4651  005026  0EBF               	movlw	191
  4652  005028  6E0E               	movwf	??_tolower& (0+255),c
  4653  00502A  0EFF               	movlw	255
  4654  00502C  6E0F               	movwf	(??_tolower+1)& (0+255),c
  4655  00502E  0060  F030  F010   	movff	tolower@c,??_tolower+2
  4656  005034  0060  F034  F011   	movff	tolower@c+1,??_tolower+3
  4657  00503A  500E               	movf	??_tolower,w,c
  4658  00503C  2610               	addwf	??_tolower+2,f,c
  4659  00503E  500F               	movf	??_tolower+1,w,c
  4660  005040  2211               	addwfc	??_tolower+3,f,c
  4661  005042  5011               	movf	??_tolower+3,w,c
  4662  005044  E106               	bnz	u7450
  4663  005046  0E1A               	movlw	26
  4664  005048  5C10               	subwf	??_tolower+2,w,c
  4665  00504A  B0D8               	btfsc	status,0,c
  4666  00504C  D002               	goto	u7450
  4667  00504E  0E01               	movlw	1
  4668  005050  D001               	goto	u7460
  4669  005052                     u7450:
  4670  005052  0E00               	movlw	0
  4671  005054                     u7460:
  4672  005054  6E12               	movwf	_tolower$2255,c
  4673  005056  6A13               	clrf	_tolower$2255+1,c
  4674  005058  5012               	movf	_tolower$2255,w,c
  4675  00505A  1013               	iorwf	_tolower$2255+1,w,c
  4676  00505C  B4D8               	btfsc	status,2,c
  4677  00505E  D006               	goto	l1441
  4678  005060  0E20               	movlw	32
  4679  005062  100C               	iorwf	tolower@c,w,c
  4680  005064  6E0C               	movwf	?_tolower,c
  4681  005066  500D               	movf	tolower@c+1,w,c
  4682  005068  6E0D               	movwf	?_tolower+1,c
  4683  00506A  0012               	return	
  4684  00506C                     l1441:
  4685  00506C  0060  F030  F00C   	movff	tolower@c,?_tolower
  4686  005072  0060  F034  F00D   	movff	tolower@c+1,?_tolower+1
  4687  005078  0012               	return		;funcret
  4688  00507A                     __end_of_tolower:
  4689                           	opt callstack 0
  4690                           
  4691 ;; *************** function _isupper *****************
  4692 ;; Defined at:
  4693 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  c               2    5[COMRAM] int 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  2    5[COMRAM] int 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4711 ;;Total ram usage:        6 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    2
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_efgtoa
  4718 ;;		_vfpfcnvrt
  4719 ;;		_tolower
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text11
  4724  0051AE                     __ptext11:
  4725                           	opt callstack 0
  4726  0051AE                     _isupper:
  4727                           	opt callstack 23
  4728                           
  4729                           ;incstack = 0
  4730  0051AE  0EBF               	movlw	191
  4731  0051B0  6E08               	movwf	??_isupper& (0+255),c
  4732  0051B2  0EFF               	movlw	255
  4733  0051B4  6E09               	movwf	(??_isupper+1)& (0+255),c
  4734  0051B6  0060  F018  F00A   	movff	isupper@c,??_isupper+2
  4735  0051BC  0060  F01C  F00B   	movff	isupper@c+1,??_isupper+3
  4736  0051C2  5008               	movf	??_isupper,w,c
  4737  0051C4  260A               	addwf	??_isupper+2,f,c
  4738  0051C6  5009               	movf	??_isupper+1,w,c
  4739  0051C8  220B               	addwfc	??_isupper+3,f,c
  4740  0051CA  500B               	movf	??_isupper+3,w,c
  4741  0051CC  E106               	bnz	u6910
  4742  0051CE  0E1A               	movlw	26
  4743  0051D0  5C0A               	subwf	??_isupper+2,w,c
  4744  0051D2  B0D8               	btfsc	status,0,c
  4745  0051D4  D002               	goto	u6910
  4746  0051D6  0E01               	movlw	1
  4747  0051D8  D001               	goto	u6920
  4748  0051DA                     u6910:
  4749  0051DA  0E00               	movlw	0
  4750  0051DC                     u6920:
  4751  0051DC  6E06               	movwf	?_isupper,c
  4752  0051DE  6A07               	clrf	?_isupper+1,c
  4753  0051E0  0012               	return		;funcret
  4754  0051E2                     __end_of_isupper:
  4755                           	opt callstack 0
  4756                           
  4757 ;; *************** function _strcpy *****************
  4758 ;; Defined at:
  4759 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  dest            2    5[COMRAM] PTR unsigned char 
  4762 ;;		 -> dbuf(80), 
  4763 ;;  src             2    7[COMRAM] PTR const unsigned char 
  4764 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  4765 ;;		 -> dbuf(80), 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  d               2   13[COMRAM] PTR unsigned char 
  4768 ;;		 -> dbuf(80), 
  4769 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4770 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  4771 ;;		 -> dbuf(80), 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  2    5[COMRAM] PTR unsigned char 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4782 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4783 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4784 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4785 ;;Total ram usage:       10 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    2
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_efgtoa
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text12
  4796  004E56                     __ptext12:
  4797                           	opt callstack 0
  4798  004E56                     _strcpy:
  4799                           	opt callstack 23
  4800                           
  4801                           ;incstack = 0
  4802  004E56  0060  F020  F00C   	movff	strcpy@src,strcpy@s
  4803  004E5C  0060  F024  F00D   	movff	strcpy@src+1,strcpy@s+1
  4804  004E62  0060  F018  F00E   	movff	strcpy@dest,strcpy@d
  4805  004E68  0060  F01C  F00F   	movff	strcpy@dest+1,strcpy@d+1
  4806  004E6E                     l5643:
  4807  004E6E  500C               	movf	strcpy@s,w,c
  4808  004E70  6E0A               	movwf	??_strcpy& (0+255),c
  4809  004E72  500D               	movf	strcpy@s+1,w,c
  4810  004E74  6E0B               	movwf	(??_strcpy+1)& (0+255),c
  4811  004E76  4A0C               	infsnz	strcpy@s,f,c
  4812  004E78  2A0D               	incf	strcpy@s+1,f,c
  4813  004E7A  0060  F02B  FFF6   	movff	??_strcpy,tblptrl
  4814  004E80  0060  F02F  FFF7   	movff	??_strcpy+1,tblptrh
  4815  004E86  0E00               	movlw	low (__smallconst shr (0+16))
  4816  004E88  6EF8               	movwf	tblptru,c
  4817  004E8A  0060  F03B  FFD9   	movff	strcpy@d,fsr2l
  4818  004E90  0060  F03F  FFDA   	movff	strcpy@d+1,fsr2h
  4819  004E96  4A0E               	infsnz	strcpy@d,f,c
  4820  004E98  2A0F               	incf	strcpy@d+1,f,c
  4821  004E9A  0E1F               	movlw	(high __ramtop+-1)
  4822  004E9C  64F7               	cpfsgt	tblptrh,c
  4823  004E9E  D003               	bra	u7437
  4824  004EA0  0008               	tblrd		*
  4825  004EA2  50F5               	movf	tablat,w,c
  4826  004EA4  D007               	bra	u7430
  4827  004EA6                     u7437:
  4828  004EA6  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4829  004EAC  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4830  004EB2  50E7               	movf	indf1,w,c
  4831  004EB4                     u7430:
  4832  004EB4  6EDF               	movwf	indf2,c
  4833  004EB6  50DF               	movf	indf2,w,c
  4834  004EB8  B4D8               	btfsc	status,2,c
  4835  004EBA  0012               	return	
  4836  004EBC  D7D8               	goto	l5643
  4837  004EBE                     __end_of_strcpy:
  4838                           	opt callstack 0
  4839                           
  4840 ;; *************** function _pad *****************
  4841 ;; Defined at:
  4842 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  4845 ;;		 -> sprintf@f(6), 
  4846 ;;  buf             2   23[COMRAM] PTR unsigned char 
  4847 ;;		 -> dbuf(80), 
  4848 ;;  p               2   25[COMRAM] int 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  w               2   30[COMRAM] int 
  4851 ;;  i               2   28[COMRAM] int 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  2   21[COMRAM] int 
  4854 ;; Registers used:
  4855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4861 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4862 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4863 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4864 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4865 ;;Total ram usage:       11 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    5
  4868 ;; This function calls:
  4869 ;;		_fputc
  4870 ;;		_fputs
  4871 ;;		_strlen
  4872 ;; This function is called by:
  4873 ;;		_efgtoa
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text13
  4878  0048D6                     __ptext13:
  4879                           	opt callstack 0
  4880  0048D6                     _pad:
  4881                           	opt callstack 20
  4882                           
  4883                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  4884                           
  4885                           ;incstack = 0
  4886  0048D6  A058               	btfss	_flags,0,c
  4887  0048D8  D00E               	goto	l5601
  4888                           
  4889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  4890  0048DA  0060  F060  F00F   	movff	pad@buf,fputs@s
  4891  0048E0  0060  F064  F010   	movff	pad@buf+1,fputs@s+1
  4892  0048E6  0060  F058  F011   	movff	pad@fp,fputs@fp
  4893  0048EC  0060  F05C  F012   	movff	pad@fp+1,fputs@fp+1
  4894  0048F2  EC64  F028         	call	_fputs	;wreg free
  4895  0048F6                     l5601:
  4896                           
  4897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4898  0048F6  BE1B               	btfsc	pad@p+1,7,c
  4899  0048F8  D007               	goto	l5605
  4900  0048FA  0060  F068  F01F   	movff	pad@p,pad@w
  4901  004900  0060  F06C  F020   	movff	pad@p+1,pad@w+1
  4902  004906  D004               	goto	l564
  4903  004908                     l5605:
  4904  004908  0E00               	movlw	0
  4905  00490A  6E20               	movwf	pad@w+1,c
  4906  00490C  0E00               	movlw	0
  4907  00490E  6E1F               	movwf	pad@w,c
  4908  004910                     l564:
  4909                           
  4910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4911  004910  0E00               	movlw	0
  4912  004912  6E1E               	movwf	pad@i+1,c
  4913  004914  0E00               	movlw	0
  4914  004916  6E1D               	movwf	pad@i,c
  4915                           
  4916                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4917  004918  D00E               	goto	l5611
  4918  00491A                     l5607:
  4919                           
  4920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4921  00491A  0E00               	movlw	0
  4922  00491C  6E07               	movwf	fputc@c+1,c
  4923  00491E  0E20               	movlw	32
  4924  004920  6E06               	movwf	fputc@c,c
  4925  004922  0060  F058  F008   	movff	pad@fp,fputc@fp
  4926  004928  0060  F05C  F009   	movff	pad@fp+1,fputc@fp+1
  4927  00492E  ECC4  F024         	call	_fputc	;wreg free
  4928                           
  4929                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4930  004932  4A1D               	infsnz	pad@i,f,c
  4931  004934  2A1E               	incf	pad@i+1,f,c
  4932  004936                     l5611:
  4933                           
  4934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4935  004936  501F               	movf	pad@w,w,c
  4936  004938  5C1D               	subwf	pad@i,w,c
  4937  00493A  501E               	movf	pad@i+1,w,c
  4938  00493C  0A80               	xorlw	128
  4939  00493E  6E1C               	movwf	??_pad& (0+255),c
  4940  004940  5020               	movf	pad@w+1,w,c
  4941  004942  0A80               	xorlw	128
  4942  004944  581C               	subwfb	??_pad& (0+255),w,c
  4943  004946  A0D8               	btfss	status,0,c
  4944  004948  D7E8               	goto	l5607
  4945                           
  4946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4947  00494A  B058               	btfsc	_flags,0,c
  4948  00494C  D00E               	goto	l5615
  4949                           
  4950                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4951  00494E  0060  F060  F00F   	movff	pad@buf,fputs@s
  4952  004954  0060  F064  F010   	movff	pad@buf+1,fputs@s+1
  4953  00495A  0060  F058  F011   	movff	pad@fp,fputs@fp
  4954  004960  0060  F05C  F012   	movff	pad@fp+1,fputs@fp+1
  4955  004966  EC64  F028         	call	_fputs	;wreg free
  4956  00496A                     l5615:
  4957                           
  4958                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  4959  00496A  0060  F060  F006   	movff	pad@buf,strlen@s
  4960  004970  0060  F064  F007   	movff	pad@buf+1,strlen@s+1
  4961  004976  ECF1  F028         	call	_strlen	;wreg free
  4962  00497A  501F               	movf	pad@w,w,c
  4963  00497C  2406               	addwf	?_strlen,w,c
  4964  00497E  6E16               	movwf	?_pad,c
  4965  004980  5020               	movf	pad@w+1,w,c
  4966  004982  2007               	addwfc	?_strlen+1,w,c
  4967  004984  6E17               	movwf	?_pad+1,c
  4968  004986  0012               	return		;funcret
  4969  004988                     __end_of_pad:
  4970                           	opt callstack 0
  4971                           
  4972 ;; *************** function _strlen *****************
  4973 ;; Defined at:
  4974 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  s               2    5[COMRAM] PTR const unsigned char 
  4977 ;;		 -> dbuf(80), 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  a               2    7[COMRAM] PTR const unsigned char 
  4980 ;;		 -> dbuf(80), 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  2    5[COMRAM] unsigned int 
  4983 ;; Registers used:
  4984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4990 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4993 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4994 ;;Total ram usage:        4 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    2
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_pad
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text14
  5005  0051E2                     __ptext14:
  5006                           	opt callstack 0
  5007  0051E2                     _strlen:
  5008                           	opt callstack 22
  5009                           
  5010                           ;incstack = 0
  5011  0051E2  0060  F018  F008   	movff	strlen@s,strlen@a
  5012  0051E8  0060  F01C  F009   	movff	strlen@s+1,strlen@a+1
  5013  0051EE  D002               	goto	l5385
  5014  0051F0                     l5383:
  5015  0051F0  4A06               	infsnz	strlen@s,f,c
  5016  0051F2  2A07               	incf	strlen@s+1,f,c
  5017  0051F4                     l5385:
  5018  0051F4  0060  F01B  FFD9   	movff	strlen@s,fsr2l
  5019  0051FA  0060  F01F  FFDA   	movff	strlen@s+1,fsr2h
  5020  005200  50DF               	movf	indf2,w,c
  5021  005202  A4D8               	btfss	status,2,c
  5022  005204  D7F5               	goto	l5383
  5023  005206  5008               	movf	strlen@a,w,c
  5024  005208  5C06               	subwf	strlen@s,w,c
  5025  00520A  6E06               	movwf	?_strlen,c
  5026  00520C  5009               	movf	strlen@a+1,w,c
  5027  00520E  5807               	subwfb	strlen@s+1,w,c
  5028  005210  6E07               	movwf	?_strlen+1,c
  5029  005212  0012               	return		;funcret
  5030  005214                     __end_of_strlen:
  5031                           	opt callstack 0
  5032                           
  5033 ;; *************** function _fputs *****************
  5034 ;; Defined at:
  5035 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  s               2   14[COMRAM] PTR const unsigned char 
  5038 ;;		 -> dbuf(80), 
  5039 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5040 ;;		 -> sprintf@f(6), 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  i               2   19[COMRAM] int 
  5043 ;;  c               1   18[COMRAM] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  2   14[COMRAM] int 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5054 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5056 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5057 ;;Total ram usage:        7 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    4
  5060 ;; This function calls:
  5061 ;;		_fputc
  5062 ;; This function is called by:
  5063 ;;		_pad
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text15
  5068  0050C8                     __ptext15:
  5069                           	opt callstack 0
  5070  0050C8                     _fputs:
  5071                           	opt callstack 20
  5072                           
  5073                           ;incstack = 0
  5074  0050C8  0E00               	movlw	0
  5075  0050CA  6E15               	movwf	fputs@i+1,c
  5076  0050CC  0E00               	movlw	0
  5077  0050CE  6E14               	movwf	fputs@i,c
  5078  0050D0  D00E               	goto	l5379
  5079  0050D2                     l5375:
  5080  0050D2  0060  F04C  F006   	movff	fputs@c,fputc@c
  5081  0050D8  6A07               	clrf	fputc@c+1,c
  5082  0050DA  0060  F044  F008   	movff	fputs@fp,fputc@fp
  5083  0050E0  0060  F048  F009   	movff	fputs@fp+1,fputc@fp+1
  5084  0050E6  ECC4  F024         	call	_fputc	;wreg free
  5085  0050EA  4A14               	infsnz	fputs@i,f,c
  5086  0050EC  2A15               	incf	fputs@i+1,f,c
  5087  0050EE                     l5379:
  5088  0050EE  5014               	movf	fputs@i,w,c
  5089  0050F0  240F               	addwf	fputs@s,w,c
  5090  0050F2  6ED9               	movwf	fsr2l,c
  5091  0050F4  5015               	movf	fputs@i+1,w,c
  5092  0050F6  2010               	addwfc	fputs@s+1,w,c
  5093  0050F8  6EDA               	movwf	fsr2h,c
  5094  0050FA  50DF               	movf	indf2,w,c
  5095  0050FC  6E13               	movwf	fputs@c,c
  5096  0050FE  5013               	movf	fputs@c,w,c
  5097  005100  B4D8               	btfsc	status,2,c
  5098  005102  0012               	return	
  5099  005104  D7E6               	goto	l5375
  5100  005106                     __end_of_fputs:
  5101                           	opt callstack 0
  5102                           
  5103 ;; *************** function _fputc *****************
  5104 ;; Defined at:
  5105 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  c               2    5[COMRAM] int 
  5108 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  5109 ;;		 -> sprintf@f(6), 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  2    5[COMRAM] int 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5123 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5124 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5125 ;;Total ram usage:        9 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    3
  5128 ;; This function calls:
  5129 ;;		_putch
  5130 ;; This function is called by:
  5131 ;;		_pad
  5132 ;;		_vfpfcnvrt
  5133 ;;		_fputs
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text16
  5138  004988                     __ptext16:
  5139                           	opt callstack 0
  5140  004988                     _fputc:
  5141                           	opt callstack 23
  5142                           
  5143                           ;incstack = 0
  5144  004988  5008               	movf	fputc@fp,w,c
  5145  00498A  1009               	iorwf	fputc@fp+1,w,c
  5146  00498C  B4D8               	btfsc	status,2,c
  5147  00498E  D004               	goto	u6860
  5148  004990  5008               	movf	fputc@fp,w,c
  5149  004992  1009               	iorwf	fputc@fp+1,w,c
  5150  004994  A4D8               	btfss	status,2,c
  5151  004996  D004               	goto	l5365
  5152  004998                     u6860:
  5153  004998  5006               	movf	fputc@c,w,c
  5154  00499A  ECA9  F029         	call	_putch
  5155  00499E  0012               	return	
  5156  0049A0                     l5365:
  5157  0049A0  EE20 F004          	lfsr	2,4
  5158  0049A4  5008               	movf	fputc@fp,w,c
  5159  0049A6  26D9               	addwf	fsr2l,f,c
  5160  0049A8  5009               	movf	fputc@fp+1,w,c
  5161  0049AA  22DA               	addwfc	fsr2h,f,c
  5162  0049AC  50DE               	movf	postinc2,w,c
  5163  0049AE  10DE               	iorwf	postinc2,w,c
  5164  0049B0  B4D8               	btfsc	status,2,c
  5165  0049B2  D016               	goto	u6880
  5166  0049B4  EE20 F004          	lfsr	2,4
  5167  0049B8  5008               	movf	fputc@fp,w,c
  5168  0049BA  26D9               	addwf	fsr2l,f,c
  5169  0049BC  5009               	movf	fputc@fp+1,w,c
  5170  0049BE  22DA               	addwfc	fsr2h,f,c
  5171  0049C0  EE10 F002          	lfsr	1,2
  5172  0049C4  5008               	movf	fputc@fp,w,c
  5173  0049C6  26E1               	addwf	fsr1l,f,c
  5174  0049C8  5009               	movf	fputc@fp+1,w,c
  5175  0049CA  22E2               	addwfc	fsr1h,f,c
  5176  0049CC  50DE               	movf	postinc2,w,c
  5177  0049CE  5CE6               	subwf	postinc1,w,c
  5178  0049D0  50E6               	movf	postinc1,w,c
  5179  0049D2  0A80               	xorlw	128
  5180  0049D4  6E0E               	movwf	(??_fputc+4)& (0+255),c
  5181  0049D6  50DE               	movf	postinc2,w,c
  5182  0049D8  0A80               	xorlw	128
  5183  0049DA  580E               	subwfb	(??_fputc+4)& (0+255),w,c
  5184  0049DC  B0D8               	btfsc	status,0,c
  5185  0049DE  0012               	return	
  5186  0049E0                     u6880:
  5187  0049E0  EE20 F002          	lfsr	2,2
  5188  0049E4  5008               	movf	fputc@fp,w,c
  5189  0049E6  26D9               	addwf	fsr2l,f,c
  5190  0049E8  5009               	movf	fputc@fp+1,w,c
  5191  0049EA  22DA               	addwfc	fsr2h,f,c
  5192  0049EC  006F FF78  F00A    	movff	postinc2,??_fputc
  5193  0049F2  006F FF74  F00B    	movff	postdec2,??_fputc+1
  5194  0049F8  0060  F023  FFD9   	movff	fputc@fp,fsr2l
  5195  0049FE  0060  F027  FFDA   	movff	fputc@fp+1,fsr2h
  5196  004A04  006F FF78  F00C    	movff	postinc2,??_fputc+2
  5197  004A0A  006F FF74  F00D    	movff	postdec2,??_fputc+3
  5198  004A10  500A               	movf	??_fputc,w,c
  5199  004A12  240C               	addwf	??_fputc+2,w,c
  5200  004A14  6ED9               	movwf	fsr2l,c
  5201  004A16  500B               	movf	??_fputc+1,w,c
  5202  004A18  200D               	addwfc	??_fputc+3,w,c
  5203  004A1A  6EDA               	movwf	fsr2h,c
  5204  004A1C  0060  F01B  FFDF   	movff	fputc@c,indf2
  5205  004A22  EE20 F002          	lfsr	2,2
  5206  004A26  5008               	movf	fputc@fp,w,c
  5207  004A28  26D9               	addwf	fsr2l,f,c
  5208  004A2A  5009               	movf	fputc@fp+1,w,c
  5209  004A2C  22DA               	addwfc	fsr2h,f,c
  5210  004A2E  2ADE               	incf	postinc2,f,c
  5211  004A30  0E00               	movlw	0
  5212  004A32  22DD               	addwfc	postdec2,f,c
  5213  004A34  0012               	return		;funcret
  5214  004A36                     __end_of_fputc:
  5215                           	opt callstack 0
  5216                           
  5217 ;; *************** function _putch *****************
  5218 ;; Defined at:
  5219 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  c               1    wreg     unsigned char 
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;  c               1    0[COMRAM] unsigned char 
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  1    wreg      void 
  5226 ;; Registers used:
  5227 ;;		wreg
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5237 ;;Total ram usage:        0 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:    2
  5240 ;; This function calls:
  5241 ;;		Nothing
  5242 ;; This function is called by:
  5243 ;;		_fputc
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text17
  5248  005352                     __ptext17:
  5249                           	opt callstack 0
  5250  005352                     _putch:
  5251                           	opt callstack 23
  5252                           
  5253                           ;incstack = 0
  5254  005352  0012               	return		;funcret
  5255  005354                     __end_of_putch:
  5256                           	opt callstack 0
  5257                           
  5258 ;; *************** function _floorf *****************
  5259 ;; Defined at:
  5260 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  x               4   30[COMRAM] float 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  u               4   46[COMRAM] struct .
  5265 ;;  m               4   40[COMRAM] unsigned long 
  5266 ;;  e               2   44[COMRAM] int 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  4   30[COMRAM] float 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5277 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5278 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5279 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5280 ;;Total ram usage:       20 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    2
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_efgtoa
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text18
  5291  003EF2                     __ptext18:
  5292                           	opt callstack 0
  5293  003EF2                     _floorf:
  5294                           	opt callstack 23
  5295                           
  5296                           ;incstack = 0
  5297  003EF2  0060  F450  F02F   	movff	floorf@F524,floorf@u
  5298  003EF8  0060  F454  F030   	movff	floorf@F524+1,floorf@u+1
  5299  003EFE  0060  F458  F031   	movff	floorf@F524+2,floorf@u+2
  5300  003F04  0060  F45C  F032   	movff	floorf@F524+3,floorf@u+3
  5301  003F0A  0060  F07C  F02F   	movff	floorf@x,floorf@u
  5302  003F10  0060  F080  F030   	movff	floorf@x+1,floorf@u+1
  5303  003F16  0060  F084  F031   	movff	floorf@x+2,floorf@u+2
  5304  003F1C  0060  F088  F032   	movff	floorf@x+3,floorf@u+3
  5305  003F22  0E81               	movlw	129
  5306  003F24  6E23               	movwf	??_floorf& (0+255),c
  5307  003F26  0EFF               	movlw	255
  5308  003F28  6E24               	movwf	(??_floorf+1)& (0+255),c
  5309  003F2A  0060  F0BC  F025   	movff	floorf@u,??_floorf+2
  5310  003F30  0060  F0C0  F026   	movff	floorf@u+1,??_floorf+3
  5311  003F36  0060  F0C4  F027   	movff	floorf@u+2,??_floorf+4
  5312  003F3C  0060  F0C8  F028   	movff	floorf@u+3,??_floorf+5
  5313  003F42  0E18               	movlw	24
  5314  003F44  D005               	goto	u7480
  5315  003F46                     u7485:
  5316  003F46  90D8               	bcf	status,0,c
  5317  003F48  3228               	rrcf	??_floorf+5,f,c
  5318  003F4A  3227               	rrcf	??_floorf+4,f,c
  5319  003F4C  3226               	rrcf	??_floorf+3,f,c
  5320  003F4E  3225               	rrcf	??_floorf+2,f,c
  5321  003F50                     u7480:
  5322  003F50  2EE8               	decfsz	wreg,f,c
  5323  003F52  D7F9               	goto	u7485
  5324  003F54  5025               	movf	??_floorf+2,w,c
  5325  003F56  2423               	addwf	??_floorf,w,c
  5326  003F58  6E2D               	movwf	floorf@e,c
  5327  003F5A  0E00               	movlw	0
  5328  003F5C  2024               	addwfc	??_floorf+1,w,c
  5329  003F5E  6E2E               	movwf	floorf@e+1,c
  5330  003F60  BE2E               	btfsc	floorf@e+1,7,c
  5331  003F62  D013               	goto	l5661
  5332  003F64  502E               	movf	floorf@e+1,w,c
  5333  003F66  E104               	bnz	u7490
  5334  003F68  0E17               	movlw	23
  5335  003F6A  5C2D               	subwf	floorf@e,w,c
  5336  003F6C  A0D8               	btfss	status,0,c
  5337  003F6E  D00D               	goto	l5661
  5338  003F70                     u7490:
  5339  003F70  0060  F07C  F01F   	movff	floorf@x,?_floorf
  5340  003F76  0060  F080  F020   	movff	floorf@x+1,?_floorf+1
  5341  003F7C  0060  F084  F021   	movff	floorf@x+2,?_floorf+2
  5342  003F82  0060  F088  F022   	movff	floorf@x+3,?_floorf+3
  5343  003F88  0012               	return	
  5344  003F8A                     l5661:
  5345  003F8A  BE2E               	btfsc	floorf@e+1,7,c
  5346  003F8C  D067               	goto	l5671
  5347  003F8E  0060  F0B4  F023   	movff	floorf@e,??_floorf
  5348  003F94  0EFF               	movlw	255
  5349  003F96  6E24               	movwf	(??_floorf+1)& (0+255),c
  5350  003F98  0EFF               	movlw	255
  5351  003F9A  6E25               	movwf	(??_floorf+2)& (0+255),c
  5352  003F9C  0E7F               	movlw	127
  5353  003F9E  6E26               	movwf	(??_floorf+3)& (0+255),c
  5354  003FA0  0E00               	movlw	0
  5355  003FA2  6E27               	movwf	(??_floorf+4)& (0+255),c
  5356  003FA4                     u7515:
  5357  003FA4  6623               	tstfsz	??_floorf,c
  5358  003FA6  D001               	goto	u7516
  5359  003FA8  D007               	goto	u7517
  5360  003FAA                     u7516:
  5361  003FAA  3427               	rlcf	??_floorf+4,w,c
  5362  003FAC  3227               	rrcf	??_floorf+4,f,c
  5363  003FAE  3226               	rrcf	??_floorf+3,f,c
  5364  003FB0  3225               	rrcf	??_floorf+2,f,c
  5365  003FB2  3224               	rrcf	??_floorf+1,f,c
  5366  003FB4  2E23               	decfsz	??_floorf,f,c
  5367  003FB6  D7F6               	goto	u7515
  5368  003FB8                     u7517:
  5369  003FB8  0060  F090  F029   	movff	??_floorf+1,floorf@m
  5370  003FBE  0060  F094  F02A   	movff	??_floorf+2,floorf@m+1
  5371  003FC4  0060  F098  F02B   	movff	??_floorf+3,floorf@m+2
  5372  003FCA  0060  F09C  F02C   	movff	??_floorf+4,floorf@m+3
  5373  003FD0  5029               	movf	floorf@m,w,c
  5374  003FD2  142F               	andwf	floorf@u,w,c
  5375  003FD4  6E23               	movwf	??_floorf& (0+255),c
  5376  003FD6  502A               	movf	floorf@m+1,w,c
  5377  003FD8  1430               	andwf	floorf@u+1,w,c
  5378  003FDA  6E24               	movwf	(??_floorf+1)& (0+255),c
  5379  003FDC  502B               	movf	floorf@m+2,w,c
  5380  003FDE  1431               	andwf	floorf@u+2,w,c
  5381  003FE0  6E25               	movwf	(??_floorf+2)& (0+255),c
  5382  003FE2  502C               	movf	floorf@m+3,w,c
  5383  003FE4  1432               	andwf	floorf@u+3,w,c
  5384  003FE6  6E26               	movwf	(??_floorf+3)& (0+255),c
  5385  003FE8  5023               	movf	??_floorf,w,c
  5386  003FEA  1024               	iorwf	??_floorf+1,w,c
  5387  003FEC  1025               	iorwf	??_floorf+2,w,c
  5388  003FEE  1026               	iorwf	??_floorf+3,w,c
  5389  003FF0  B4D8               	btfsc	status,2,c
  5390  003FF2  D7BE               	goto	u7490
  5391  003FF4  0060  F0BC  F023   	movff	floorf@u,??_floorf
  5392  003FFA  0060  F0C0  F024   	movff	floorf@u+1,??_floorf+1
  5393  004000  0060  F0C4  F025   	movff	floorf@u+2,??_floorf+2
  5394  004006  0060  F0C8  F026   	movff	floorf@u+3,??_floorf+3
  5395  00400C  0E20               	movlw	32
  5396  00400E  D005               	goto	u7530
  5397  004010                     u7535:
  5398  004010  90D8               	bcf	status,0,c
  5399  004012  3226               	rrcf	??_floorf+3,f,c
  5400  004014  3225               	rrcf	??_floorf+2,f,c
  5401  004016  3224               	rrcf	??_floorf+1,f,c
  5402  004018  3223               	rrcf	??_floorf,f,c
  5403  00401A                     u7530:
  5404  00401A  2EE8               	decfsz	wreg,f,c
  5405  00401C  D7F9               	goto	u7535
  5406  00401E  5023               	movf	??_floorf,w,c
  5407  004020  1024               	iorwf	??_floorf+1,w,c
  5408  004022  1025               	iorwf	??_floorf+2,w,c
  5409  004024  1026               	iorwf	??_floorf+3,w,c
  5410  004026  B4D8               	btfsc	status,2,c
  5411  004028  D008               	goto	l1375
  5412  00402A  5029               	movf	floorf@m,w,c
  5413  00402C  262F               	addwf	floorf@u,f,c
  5414  00402E  502A               	movf	floorf@m+1,w,c
  5415  004030  2230               	addwfc	floorf@u+1,f,c
  5416  004032  502B               	movf	floorf@m+2,w,c
  5417  004034  2231               	addwfc	floorf@u+2,f,c
  5418  004036  502C               	movf	floorf@m+3,w,c
  5419  004038  2232               	addwfc	floorf@u+3,f,c
  5420  00403A                     l1375:
  5421  00403A  1C29               	comf	floorf@m,w,c
  5422  00403C  6E23               	movwf	??_floorf& (0+255),c
  5423  00403E  1C2A               	comf	floorf@m+1,w,c
  5424  004040  6E24               	movwf	(??_floorf+1)& (0+255),c
  5425  004042  1C2B               	comf	floorf@m+2,w,c
  5426  004044  6E25               	movwf	(??_floorf+2)& (0+255),c
  5427  004046  1C2C               	comf	floorf@m+3,w,c
  5428  004048  6E26               	movwf	(??_floorf+3)& (0+255),c
  5429  00404A  5023               	movf	??_floorf,w,c
  5430  00404C  162F               	andwf	floorf@u,f,c
  5431  00404E  5024               	movf	??_floorf+1,w,c
  5432  004050  1630               	andwf	floorf@u+1,f,c
  5433  004052  5025               	movf	??_floorf+2,w,c
  5434  004054  1631               	andwf	floorf@u+2,f,c
  5435  004056  5026               	movf	??_floorf+3,w,c
  5436  004058  1632               	andwf	floorf@u+3,f,c
  5437  00405A  D03A               	goto	l5679
  5438  00405C                     l5671:
  5439  00405C  0060  F0BC  F023   	movff	floorf@u,??_floorf
  5440  004062  0060  F0C0  F024   	movff	floorf@u+1,??_floorf+1
  5441  004068  0060  F0C4  F025   	movff	floorf@u+2,??_floorf+2
  5442  00406E  0060  F0C8  F026   	movff	floorf@u+3,??_floorf+3
  5443  004074  0E20               	movlw	32
  5444  004076  D005               	goto	u7550
  5445  004078                     u7555:
  5446  004078  90D8               	bcf	status,0,c
  5447  00407A  3226               	rrcf	??_floorf+3,f,c
  5448  00407C  3225               	rrcf	??_floorf+2,f,c
  5449  00407E  3224               	rrcf	??_floorf+1,f,c
  5450  004080  3223               	rrcf	??_floorf,f,c
  5451  004082                     u7550:
  5452  004082  2EE8               	decfsz	wreg,f,c
  5453  004084  D7F9               	goto	u7555
  5454  004086  5023               	movf	??_floorf,w,c
  5455  004088  1024               	iorwf	??_floorf+1,w,c
  5456  00408A  1025               	iorwf	??_floorf+2,w,c
  5457  00408C  1026               	iorwf	??_floorf+3,w,c
  5458  00408E  A4D8               	btfss	status,2,c
  5459  004090  D008               	goto	l5675
  5460  004092  0E00               	movlw	0
  5461  004094  6E2F               	movwf	floorf@u,c
  5462  004096  0E00               	movlw	0
  5463  004098  6E30               	movwf	floorf@u+1,c
  5464  00409A  0E00               	movlw	0
  5465  00409C  6E31               	movwf	floorf@u+2,c
  5466  00409E  0E00               	movlw	0
  5467  0040A0  D016               	goto	L6
  5468  0040A2                     l5675:
  5469  0040A2  90D8               	bcf	status,0,c
  5470  0040A4  342F               	rlcf	floorf@u,w,c
  5471  0040A6  6E23               	movwf	??_floorf& (0+255),c
  5472  0040A8  3430               	rlcf	floorf@u+1,w,c
  5473  0040AA  6E24               	movwf	(??_floorf+1)& (0+255),c
  5474  0040AC  3431               	rlcf	floorf@u+2,w,c
  5475  0040AE  6E25               	movwf	(??_floorf+2)& (0+255),c
  5476  0040B0  3432               	rlcf	floorf@u+3,w,c
  5477  0040B2  6E26               	movwf	(??_floorf+3)& (0+255),c
  5478  0040B4  5023               	movf	??_floorf,w,c
  5479  0040B6  1024               	iorwf	??_floorf+1,w,c
  5480  0040B8  1025               	iorwf	??_floorf+2,w,c
  5481  0040BA  1026               	iorwf	??_floorf+3,w,c
  5482  0040BC  B4D8               	btfsc	status,2,c
  5483  0040BE  D008               	goto	l5679
  5484  0040C0  0E00               	movlw	0
  5485  0040C2  6E2F               	movwf	floorf@u,c
  5486  0040C4  0E00               	movlw	0
  5487  0040C6  6E30               	movwf	floorf@u+1,c
  5488  0040C8  0E80               	movlw	128
  5489  0040CA  6E31               	movwf	floorf@u+2,c
  5490  0040CC  0EBF               	movlw	191
  5491  0040CE                     L6:
  5492  0040CE  6E32               	movwf	floorf@u+3,c
  5493  0040D0                     l5679:
  5494  0040D0  0060  F0BC  F01F   	movff	floorf@u,?_floorf
  5495  0040D6  0060  F0C0  F020   	movff	floorf@u+1,?_floorf+1
  5496  0040DC  0060  F0C4  F021   	movff	floorf@u+2,?_floorf+2
  5497  0040E2  0060  F0C8  F022   	movff	floorf@u+3,?_floorf+3
  5498  0040E8  0012               	return		;funcret
  5499  0040EA                     __end_of_floorf:
  5500                           	opt callstack 0
  5501                           
  5502 ;; *************** function ___fpclassifyf *****************
  5503 ;; Defined at:
  5504 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  x               4    5[COMRAM] float 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;  u               4   15[COMRAM] struct .
  5509 ;;  e               2   13[COMRAM] int 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  2    5[COMRAM] int 
  5512 ;; Registers used:
  5513 ;;		wreg, status,2, status,0
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5520 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5521 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5522 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5523 ;;Total ram usage:       14 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:    2
  5526 ;; This function calls:
  5527 ;;		Nothing
  5528 ;; This function is called by:
  5529 ;;		_efgtoa
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           	psect	text19
  5534  004582                     __ptext19:
  5535                           	opt callstack 0
  5536  004582                     ___fpclassifyf:
  5537                           	opt callstack 23
  5538                           
  5539                           ;incstack = 0
  5540  004582  0060  F460  F010   	movff	___fpclassifyf@F463,___fpclassifyf@u
  5541  004588  0060  F464  F011   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5542  00458E  0060  F468  F012   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5543  004594  0060  F46C  F013   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5544  00459A  0060  F018  F010   	movff	___fpclassifyf@x,___fpclassifyf@u
  5545  0045A0  0060  F01C  F011   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5546  0045A6  0060  F020  F012   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5547  0045AC  0060  F024  F013   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5548  0045B2  0060  F040  F00A   	movff	___fpclassifyf@u,??___fpclassifyf
  5549  0045B8  0060  F044  F00B   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5550  0045BE  0060  F048  F00C   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5551  0045C4  0060  F04C  F00D   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5552  0045CA  0E18               	movlw	24
  5553  0045CC  D005               	goto	u7360
  5554  0045CE                     u7365:
  5555  0045CE  90D8               	bcf	status,0,c
  5556  0045D0  320D               	rrcf	??___fpclassifyf+3,f,c
  5557  0045D2  320C               	rrcf	??___fpclassifyf+2,f,c
  5558  0045D4  320B               	rrcf	??___fpclassifyf+1,f,c
  5559  0045D6  320A               	rrcf	??___fpclassifyf,f,c
  5560  0045D8                     u7360:
  5561  0045D8  2EE8               	decfsz	wreg,f,c
  5562  0045DA  D7F9               	goto	u7365
  5563  0045DC  500A               	movf	??___fpclassifyf,w,c
  5564  0045DE  6E0E               	movwf	___fpclassifyf@e,c
  5565  0045E0  6A0F               	clrf	___fpclassifyf@e+1,c
  5566  0045E2  500E               	movf	___fpclassifyf@e,w,c
  5567  0045E4  100F               	iorwf	___fpclassifyf@e+1,w,c
  5568  0045E6  A4D8               	btfss	status,2,c
  5569  0045E8  D019               	goto	l5631
  5570  0045EA  90D8               	bcf	status,0,c
  5571  0045EC  3410               	rlcf	___fpclassifyf@u,w,c
  5572  0045EE  6E0A               	movwf	??___fpclassifyf& (0+255),c
  5573  0045F0  3411               	rlcf	___fpclassifyf@u+1,w,c
  5574  0045F2  6E0B               	movwf	(??___fpclassifyf+1)& (0+255),c
  5575  0045F4  3412               	rlcf	___fpclassifyf@u+2,w,c
  5576  0045F6  6E0C               	movwf	(??___fpclassifyf+2)& (0+255),c
  5577  0045F8  3413               	rlcf	___fpclassifyf@u+3,w,c
  5578  0045FA  6E0D               	movwf	(??___fpclassifyf+3)& (0+255),c
  5579  0045FC  500A               	movf	??___fpclassifyf,w,c
  5580  0045FE  100B               	iorwf	??___fpclassifyf+1,w,c
  5581  004600  100C               	iorwf	??___fpclassifyf+2,w,c
  5582  004602  100D               	iorwf	??___fpclassifyf+3,w,c
  5583  004604  A4D8               	btfss	status,2,c
  5584  004606  D005               	goto	l5627
  5585  004608  0E00               	movlw	0
  5586  00460A  6E07               	movwf	?___fpclassifyf+1,c
  5587  00460C  0E02               	movlw	2
  5588  00460E  6E06               	movwf	?___fpclassifyf,c
  5589  004610  0012               	return	
  5590  004612                     l5627:
  5591  004612  0E00               	movlw	0
  5592  004614  6E07               	movwf	?___fpclassifyf+1,c
  5593  004616  0E03               	movlw	3
  5594  004618  6E06               	movwf	?___fpclassifyf,c
  5595  00461A  0012               	return	
  5596  00461C                     l5631:
  5597  00461C  280E               	incf	___fpclassifyf@e,w,c
  5598  00461E  100F               	iorwf	___fpclassifyf@e+1,w,c
  5599  004620  A4D8               	btfss	status,2,c
  5600  004622  D020               	goto	l5637
  5601  004624  0060  F040  F00A   	movff	___fpclassifyf@u,??___fpclassifyf
  5602  00462A  0060  F044  F00B   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5603  004630  0060  F048  F00C   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5604  004636  0060  F04C  F00D   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5605  00463C  0E09               	movlw	9
  5606  00463E                     u7405:
  5607  00463E  90D8               	bcf	status,0,c
  5608  004640  360A               	rlcf	??___fpclassifyf,f,c
  5609  004642  360B               	rlcf	??___fpclassifyf+1,f,c
  5610  004644  360C               	rlcf	??___fpclassifyf+2,f,c
  5611  004646  360D               	rlcf	??___fpclassifyf+3,f,c
  5612  004648  2EE8               	decfsz	wreg,f,c
  5613  00464A  D7F9               	goto	u7405
  5614  00464C  500A               	movf	??___fpclassifyf,w,c
  5615  00464E  100B               	iorwf	??___fpclassifyf+1,w,c
  5616  004650  100C               	iorwf	??___fpclassifyf+2,w,c
  5617  004652  100D               	iorwf	??___fpclassifyf+3,w,c
  5618  004654  A4D8               	btfss	status,2,c
  5619  004656  D002               	goto	u7410
  5620  004658  0E01               	movlw	1
  5621  00465A  D001               	goto	u7420
  5622  00465C                     u7410:
  5623  00465C  0E00               	movlw	0
  5624  00465E                     u7420:
  5625  00465E  6E06               	movwf	?___fpclassifyf,c
  5626  004660  6A07               	clrf	?___fpclassifyf+1,c
  5627  004662  0012               	return	
  5628  004664                     l5637:
  5629  004664  0E00               	movlw	0
  5630  004666  6E07               	movwf	?___fpclassifyf+1,c
  5631  004668  0E04               	movlw	4
  5632  00466A  6E06               	movwf	?___fpclassifyf,c
  5633  00466C  0012               	return		;funcret
  5634  00466E                     __end_of___fpclassifyf:
  5635                           	opt callstack 0
  5636                           
  5637 ;; *************** function ___fltol *****************
  5638 ;; Defined at:
  5639 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  f1              4    5[COMRAM] int 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  exp1            1   14[COMRAM] unsigned char 
  5644 ;;  sign1           1   13[COMRAM] unsigned char 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  4    5[COMRAM] long 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5656 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5657 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5658 ;;Total ram usage:       10 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:    2
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_efgtoa
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text20
  5669  00480C                     __ptext20:
  5670                           	opt callstack 0
  5671  00480C                     ___fltol:
  5672                           	opt callstack 23
  5673                           
  5674                           ;incstack = 0
  5675  00480C  3408               	rlcf	___fltol@f1+2,w,c
  5676  00480E  3409               	rlcf	___fltol@f1+3,w,c
  5677  004810  6E0F               	movwf	___fltol@exp1,c
  5678  004812  500F               	movf	___fltol@exp1,w,c
  5679  004814  A4D8               	btfss	status,2,c
  5680  004816  D009               	goto	l6089
  5681  004818                     u8210:
  5682  004818  0E00               	movlw	0
  5683  00481A  6E06               	movwf	?___fltol,c
  5684  00481C  0E00               	movlw	0
  5685  00481E  6E07               	movwf	?___fltol+1,c
  5686  004820  0E00               	movlw	0
  5687  004822  6E08               	movwf	?___fltol+2,c
  5688  004824  0E00               	movlw	0
  5689  004826  6E09               	movwf	?___fltol+3,c
  5690  004828  0012               	return	
  5691  00482A                     l6089:
  5692  00482A  0060  F018  F00A   	movff	___fltol@f1,??___fltol
  5693  004830  0060  F01C  F00B   	movff	___fltol@f1+1,??___fltol+1
  5694  004836  0060  F020  F00C   	movff	___fltol@f1+2,??___fltol+2
  5695  00483C  0060  F024  F00D   	movff	___fltol@f1+3,??___fltol+3
  5696  004842  0E20               	movlw	32
  5697  004844  D005               	goto	u8220
  5698  004846                     u8225:
  5699  004846  90D8               	bcf	status,0,c
  5700  004848  320D               	rrcf	??___fltol+3,f,c
  5701  00484A  320C               	rrcf	??___fltol+2,f,c
  5702  00484C  320B               	rrcf	??___fltol+1,f,c
  5703  00484E  320A               	rrcf	??___fltol,f,c
  5704  004850                     u8220:
  5705  004850  2EE8               	decfsz	wreg,f,c
  5706  004852  D7F9               	goto	u8225
  5707  004854  500A               	movf	??___fltol,w,c
  5708  004856  6E0E               	movwf	___fltol@sign1,c
  5709  004858  8E08               	bsf	___fltol@f1+2,7,c
  5710  00485A  0EFF               	movlw	255
  5711  00485C  1606               	andwf	___fltol@f1,f,c
  5712  00485E  0EFF               	movlw	255
  5713  004860  1607               	andwf	___fltol@f1+1,f,c
  5714  004862  0EFF               	movlw	255
  5715  004864  1608               	andwf	___fltol@f1+2,f,c
  5716  004866  0E00               	movlw	0
  5717  004868  1609               	andwf	___fltol@f1+3,f,c
  5718  00486A  0E96               	movlw	150
  5719  00486C  5E0F               	subwf	___fltol@exp1,f,c
  5720  00486E  AE0F               	btfss	___fltol@exp1,7,c
  5721  004870  D00D               	goto	l6109
  5722  004872  500F               	movf	___fltol@exp1,w,c
  5723  004874  0A80               	xorlw	128
  5724  004876  0F97               	addlw	151
  5725  004878  A0D8               	btfss	status,0,c
  5726  00487A  D7CE               	goto	u8210
  5727  00487C                     l6105:
  5728  00487C  90D8               	bcf	status,0,c
  5729  00487E  3209               	rrcf	___fltol@f1+3,f,c
  5730  004880  3208               	rrcf	___fltol@f1+2,f,c
  5731  004882  3207               	rrcf	___fltol@f1+1,f,c
  5732  004884  3206               	rrcf	___fltol@f1,f,c
  5733  004886  3E0F               	incfsz	___fltol@exp1,f,c
  5734  004888  D7F9               	goto	l6105
  5735  00488A  D00D               	goto	u8260
  5736  00488C                     l6109:
  5737  00488C  0E1F               	movlw	31
  5738  00488E  640F               	cpfsgt	___fltol@exp1,c
  5739  004890  D007               	goto	l6117
  5740  004892  D7C2               	goto	u8210
  5741  004894                     l6115:
  5742  004894  90D8               	bcf	status,0,c
  5743  004896  3606               	rlcf	___fltol@f1,f,c
  5744  004898  3607               	rlcf	___fltol@f1+1,f,c
  5745  00489A  3608               	rlcf	___fltol@f1+2,f,c
  5746  00489C  3609               	rlcf	___fltol@f1+3,f,c
  5747  00489E  060F               	decf	___fltol@exp1,f,c
  5748  0048A0                     l6117:
  5749  0048A0  500F               	movf	___fltol@exp1,w,c
  5750  0048A2  A4D8               	btfss	status,2,c
  5751  0048A4  D7F7               	goto	l6115
  5752  0048A6                     u8260:
  5753  0048A6  500E               	movf	___fltol@sign1,w,c
  5754  0048A8  B4D8               	btfsc	status,2,c
  5755  0048AA  D008               	goto	l6123
  5756  0048AC  1E09               	comf	___fltol@f1+3,f,c
  5757  0048AE  1E08               	comf	___fltol@f1+2,f,c
  5758  0048B0  1E07               	comf	___fltol@f1+1,f,c
  5759  0048B2  6C06               	negf	___fltol@f1,c
  5760  0048B4  0E00               	movlw	0
  5761  0048B6  2207               	addwfc	___fltol@f1+1,f,c
  5762  0048B8  2208               	addwfc	___fltol@f1+2,f,c
  5763  0048BA  2209               	addwfc	___fltol@f1+3,f,c
  5764  0048BC                     l6123:
  5765  0048BC  0060  F018  F006   	movff	___fltol@f1,?___fltol
  5766  0048C2  0060  F01C  F007   	movff	___fltol@f1+1,?___fltol+1
  5767  0048C8  0060  F020  F008   	movff	___fltol@f1+2,?___fltol+2
  5768  0048CE  0060  F024  F009   	movff	___fltol@f1+3,?___fltol+3
  5769  0048D4  0012               	return		;funcret
  5770  0048D6                     __end_of___fltol:
  5771                           	opt callstack 0
  5772                           
  5773 ;; *************** function ___flsub *****************
  5774 ;; Defined at:
  5775 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  b               4   60[COMRAM] long 
  5778 ;;  a               4   64[COMRAM] long 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  4   60[COMRAM] long 
  5783 ;; Registers used:
  5784 ;;		wreg, status,2, status,0, cstack
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5790 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5793 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5794 ;;Total ram usage:        8 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    3
  5797 ;; This function calls:
  5798 ;;		___fladd
  5799 ;; This function is called by:
  5800 ;;		_efgtoa
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text21
  5805  004EBE                     __ptext21:
  5806                           	opt callstack 0
  5807  004EBE                     ___flsub:
  5808                           	opt callstack 22
  5809                           
  5810                           ;incstack = 0
  5811  004EBE  0E00               	movlw	0
  5812  004EC0  1A41               	xorwf	___flsub@a,f,c
  5813  004EC2  0E00               	movlw	0
  5814  004EC4  1A42               	xorwf	___flsub@a+1,f,c
  5815  004EC6  0E00               	movlw	0
  5816  004EC8  1A43               	xorwf	___flsub@a+2,f,c
  5817  004ECA  0E80               	movlw	128
  5818  004ECC  1A44               	xorwf	___flsub@a+3,f,c
  5819  004ECE  0060  F0F4  F02D   	movff	___flsub@b,___fladd@b
  5820  004ED4  0060  F0F8  F02E   	movff	___flsub@b+1,___fladd@b+1
  5821  004EDA  0060  F0FC  F02F   	movff	___flsub@b+2,___fladd@b+2
  5822  004EE0  0060  F100  F030   	movff	___flsub@b+3,___fladd@b+3
  5823  004EE6  0060  F104  F031   	movff	___flsub@a,___fladd@a
  5824  004EEC  0060  F108  F032   	movff	___flsub@a+1,___fladd@a+1
  5825  004EF2  0060  F10C  F033   	movff	___flsub@a+2,___fladd@a+2
  5826  004EF8  0060  F110  F034   	movff	___flsub@a+3,___fladd@a+3
  5827  004EFE  ECA5  F019         	call	___fladd	;wreg free
  5828  004F02  0060  F0B4  F03D   	movff	?___fladd,?___flsub
  5829  004F08  0060  F0B8  F03E   	movff	?___fladd+1,?___flsub+1
  5830  004F0E  0060  F0BC  F03F   	movff	?___fladd+2,?___flsub+2
  5831  004F14  0060  F0C0  F040   	movff	?___fladd+3,?___flsub+3
  5832  004F1A  0012               	return		;funcret
  5833  004F1C                     __end_of___flsub:
  5834                           	opt callstack 0
  5835                           
  5836 ;; *************** function ___fladd *****************
  5837 ;; Defined at:
  5838 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  b               4   44[COMRAM] long 
  5841 ;;  a               4   48[COMRAM] long 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  grs             1   59[COMRAM] unsigned char 
  5844 ;;  bexp            1   58[COMRAM] unsigned char 
  5845 ;;  aexp            1   57[COMRAM] unsigned char 
  5846 ;;  signs           1   56[COMRAM] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  4   44[COMRAM] unsigned char 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5856 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5857 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5858 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5859 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5860 ;;Total ram usage:       16 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    2
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_stof
  5867 ;;		_efgtoa
  5868 ;;		___flsub
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text22
  5873  00334A                     __ptext22:
  5874                           	opt callstack 0
  5875  00334A                     ___fladd:
  5876                           	opt callstack 26
  5877                           
  5878                           ;incstack = 0
  5879  00334A  5030               	movf	___fladd@b+3,w,c
  5880  00334C  0B80               	andlw	128
  5881  00334E  6E39               	movwf	___fladd@signs,c
  5882  003350  5030               	movf	___fladd@b+3,w,c
  5883  003352  2430               	addwf	___fladd@b+3,w,c
  5884  003354  6E3B               	movwf	___fladd@bexp,c
  5885  003356  BE2F               	btfsc	___fladd@b+2,7,c
  5886  003358  803B               	bsf	___fladd@bexp,0,c
  5887  00335A  503B               	movf	___fladd@bexp,w,c
  5888  00335C  B4D8               	btfsc	status,2,c
  5889  00335E  D00D               	goto	l5411
  5890  003360  283B               	incf	___fladd@bexp,w,c
  5891  003362  A4D8               	btfss	status,2,c
  5892  003364  D008               	goto	l5407
  5893  003366  0E00               	movlw	0
  5894  003368  6E2D               	movwf	___fladd@b,c
  5895  00336A  0E00               	movlw	0
  5896  00336C  6E2E               	movwf	___fladd@b+1,c
  5897  00336E  0E00               	movlw	0
  5898  003370  6E2F               	movwf	___fladd@b+2,c
  5899  003372  0E00               	movlw	0
  5900  003374  6E30               	movwf	___fladd@b+3,c
  5901  003376                     l5407:
  5902  003376  8E2F               	bsf	___fladd@b+2,7,c
  5903  003378  D006               	goto	L7
  5904  00337A                     l5411:
  5905  00337A  0E00               	movlw	0
  5906  00337C  6E2D               	movwf	___fladd@b,c
  5907  00337E  0E00               	movlw	0
  5908  003380  6E2E               	movwf	___fladd@b+1,c
  5909  003382  0E00               	movlw	0
  5910  003384  6E2F               	movwf	___fladd@b+2,c
  5911  003386                     L7:
  5912  003386  0E00               	movlw	0
  5913  003388  6E30               	movwf	___fladd@b+3,c
  5914  00338A  5034               	movf	___fladd@a+3,w,c
  5915  00338C  0B80               	andlw	128
  5916  00338E  6E3A               	movwf	___fladd@aexp,c
  5917  003390  5039               	movf	___fladd@signs,w,c
  5918  003392  183A               	xorwf	___fladd@aexp,w,c
  5919  003394  A4D8               	btfss	status,2,c
  5920  003396  8C39               	bsf	___fladd@signs,6,c
  5921  003398  5034               	movf	___fladd@a+3,w,c
  5922  00339A  2434               	addwf	___fladd@a+3,w,c
  5923  00339C  6E3A               	movwf	___fladd@aexp,c
  5924  00339E  BE33               	btfsc	___fladd@a+2,7,c
  5925  0033A0  803A               	bsf	___fladd@aexp,0,c
  5926  0033A2  503A               	movf	___fladd@aexp,w,c
  5927  0033A4  B4D8               	btfsc	status,2,c
  5928  0033A6  D00D               	goto	l5435
  5929  0033A8  283A               	incf	___fladd@aexp,w,c
  5930  0033AA  A4D8               	btfss	status,2,c
  5931  0033AC  D008               	goto	l5431
  5932  0033AE  0E00               	movlw	0
  5933  0033B0  6E31               	movwf	___fladd@a,c
  5934  0033B2  0E00               	movlw	0
  5935  0033B4  6E32               	movwf	___fladd@a+1,c
  5936  0033B6  0E00               	movlw	0
  5937  0033B8  6E33               	movwf	___fladd@a+2,c
  5938  0033BA  0E00               	movlw	0
  5939  0033BC  6E34               	movwf	___fladd@a+3,c
  5940  0033BE                     l5431:
  5941  0033BE  8E33               	bsf	___fladd@a+2,7,c
  5942  0033C0  D006               	goto	L8
  5943  0033C2                     l5435:
  5944  0033C2  0E00               	movlw	0
  5945  0033C4  6E31               	movwf	___fladd@a,c
  5946  0033C6  0E00               	movlw	0
  5947  0033C8  6E32               	movwf	___fladd@a+1,c
  5948  0033CA  0E00               	movlw	0
  5949  0033CC  6E33               	movwf	___fladd@a+2,c
  5950  0033CE                     L8:
  5951  0033CE  0E00               	movlw	0
  5952  0033D0  6E34               	movwf	___fladd@a+3,c
  5953  0033D2  503B               	movf	___fladd@bexp,w,c
  5954  0033D4  5C3A               	subwf	___fladd@aexp,w,c
  5955  0033D6  B0D8               	btfsc	status,0,c
  5956  0033D8  D031               	goto	l5473
  5957  0033DA  AC39               	btfss	___fladd@signs,6,c
  5958  0033DC  D002               	goto	l5443
  5959  0033DE  0E80               	movlw	128
  5960  0033E0  1A39               	xorwf	___fladd@signs,f,c
  5961  0033E2                     l5443:
  5962  0033E2  0060  F0EC  F03C   	movff	___fladd@bexp,___fladd@grs
  5963  0033E8  0060  F0E8  F03B   	movff	___fladd@aexp,___fladd@bexp
  5964  0033EE  0060  F0F0  F03A   	movff	___fladd@grs,___fladd@aexp
  5965  0033F4  0060  F0B4  F03C   	movff	___fladd@b,___fladd@grs
  5966  0033FA  0060  F0C4  F02D   	movff	___fladd@a,___fladd@b
  5967  003400  0060  F0F0  F031   	movff	___fladd@grs,___fladd@a
  5968  003406  0060  F0B8  F03C   	movff	___fladd@b+1,___fladd@grs
  5969  00340C  0060  F0C8  F02E   	movff	___fladd@a+1,___fladd@b+1
  5970  003412  0060  F0F0  F032   	movff	___fladd@grs,___fladd@a+1
  5971  003418  0060  F0BC  F03C   	movff	___fladd@b+2,___fladd@grs
  5972  00341E  0060  F0CC  F02F   	movff	___fladd@a+2,___fladd@b+2
  5973  003424  0060  F0F0  F033   	movff	___fladd@grs,___fladd@a+2
  5974  00342A  0060  F0C0  F03C   	movff	___fladd@b+3,___fladd@grs
  5975  003430  0060  F0D0  F030   	movff	___fladd@a+3,___fladd@b+3
  5976  003436  0060  F0F0  F034   	movff	___fladd@grs,___fladd@a+3
  5977  00343C                     l5473:
  5978  00343C  0E00               	movlw	0
  5979  00343E  6E3C               	movwf	___fladd@grs,c
  5980  003440  503B               	movf	___fladd@bexp,w,c
  5981  003442  0060  F0E8  F035   	movff	___fladd@aexp,??___fladd
  5982  003448  6A36               	clrf	(??___fladd+1)& (0+255),c
  5983  00344A  5E35               	subwf	??___fladd,f,c
  5984  00344C  0E00               	movlw	0
  5985  00344E  5A36               	subwfb	??___fladd+1,f,c
  5986  003450  BE36               	btfsc	??___fladd+1,7,c
  5987  003452  D02D               	goto	l1213
  5988  003454  5036               	movf	??___fladd+1,w,c
  5989  003456  E104               	bnz	u7020
  5990  003458  0E1A               	movlw	26
  5991  00345A  5C35               	subwf	??___fladd,w,c
  5992  00345C  A0D8               	btfss	status,0,c
  5993  00345E  D027               	goto	l1213
  5994  003460                     u7020:
  5995  003460  502D               	movf	___fladd@b,w,c
  5996  003462  102E               	iorwf	___fladd@b+1,w,c
  5997  003464  102F               	iorwf	___fladd@b+2,w,c
  5998  003466  1030               	iorwf	___fladd@b+3,w,c
  5999  003468  B4D8               	btfsc	status,2,c
  6000  00346A  D002               	goto	u7030
  6001  00346C  0E01               	movlw	1
  6002  00346E  D001               	goto	u7040
  6003  003470                     u7030:
  6004  003470  0E00               	movlw	0
  6005  003472                     u7040:
  6006  003472  6E3C               	movwf	___fladd@grs,c
  6007  003474  0E00               	movlw	0
  6008  003476  6E2D               	movwf	___fladd@b,c
  6009  003478  0E00               	movlw	0
  6010  00347A  6E2E               	movwf	___fladd@b+1,c
  6011  00347C  0E00               	movlw	0
  6012  00347E  6E2F               	movwf	___fladd@b+2,c
  6013  003480  0E00               	movlw	0
  6014  003482  6E30               	movwf	___fladd@b+3,c
  6015  003484  0060  F0E8  F03B   	movff	___fladd@aexp,___fladd@bexp
  6016  00348A  D015               	goto	u7070
  6017  00348C                     l1214:
  6018  00348C  A03C               	btfss	___fladd@grs,0,c
  6019  00348E  D005               	goto	l5485
  6020  003490  90D8               	bcf	status,0,c
  6021  003492  303C               	rrcf	___fladd@grs,w,c
  6022  003494  0901               	iorlw	1
  6023  003496  6E3C               	movwf	___fladd@grs,c
  6024  003498  D002               	goto	l5487
  6025  00349A                     l5485:
  6026  00349A  90D8               	bcf	status,0,c
  6027  00349C  323C               	rrcf	___fladd@grs,f,c
  6028  00349E                     l5487:
  6029  00349E  B02D               	btfsc	___fladd@b,0,c
  6030  0034A0  8E3C               	bsf	___fladd@grs,7,c
  6031  0034A2  3430               	rlcf	___fladd@b+3,w,c
  6032  0034A4  3230               	rrcf	___fladd@b+3,f,c
  6033  0034A6  322F               	rrcf	___fladd@b+2,f,c
  6034  0034A8  322E               	rrcf	___fladd@b+1,f,c
  6035  0034AA  322D               	rrcf	___fladd@b,f,c
  6036  0034AC  2A3B               	incf	___fladd@bexp,f,c
  6037  0034AE                     l1213:
  6038  0034AE  503A               	movf	___fladd@aexp,w,c
  6039  0034B0  5C3B               	subwf	___fladd@bexp,w,c
  6040  0034B2  A0D8               	btfss	status,0,c
  6041  0034B4  D7EB               	goto	l1214
  6042  0034B6                     u7070:
  6043  0034B6  BC39               	btfsc	___fladd@signs,6,c
  6044  0034B8  D028               	goto	l5519
  6045  0034BA  503B               	movf	___fladd@bexp,w,c
  6046  0034BC  A4D8               	btfss	status,2,c
  6047  0034BE  D009               	goto	l5501
  6048  0034C0  0E00               	movlw	0
  6049  0034C2  6E2D               	movwf	?___fladd,c
  6050  0034C4  0E00               	movlw	0
  6051  0034C6  6E2E               	movwf	?___fladd+1,c
  6052  0034C8  0E00               	movlw	0
  6053  0034CA  6E2F               	movwf	?___fladd+2,c
  6054  0034CC  0E00               	movlw	0
  6055  0034CE  6E30               	movwf	?___fladd+3,c
  6056  0034D0  0012               	return	
  6057  0034D2                     l5501:
  6058  0034D2  5031               	movf	___fladd@a,w,c
  6059  0034D4  262D               	addwf	___fladd@b,f,c
  6060  0034D6  5032               	movf	___fladd@a+1,w,c
  6061  0034D8  222E               	addwfc	___fladd@b+1,f,c
  6062  0034DA  5033               	movf	___fladd@a+2,w,c
  6063  0034DC  222F               	addwfc	___fladd@b+2,f,c
  6064  0034DE  5034               	movf	___fladd@a+3,w,c
  6065  0034E0  2230               	addwfc	___fladd@b+3,f,c
  6066  0034E2  A030               	btfss	___fladd@b+3,0,c
  6067  0034E4  D071               	goto	u7200
  6068  0034E6  A03C               	btfss	___fladd@grs,0,c
  6069  0034E8  D005               	goto	l5509
  6070  0034EA  90D8               	bcf	status,0,c
  6071  0034EC  303C               	rrcf	___fladd@grs,w,c
  6072  0034EE  0901               	iorlw	1
  6073  0034F0  6E3C               	movwf	___fladd@grs,c
  6074  0034F2  D002               	goto	l5511
  6075  0034F4                     l5509:
  6076  0034F4  90D8               	bcf	status,0,c
  6077  0034F6  323C               	rrcf	___fladd@grs,f,c
  6078  0034F8                     l5511:
  6079  0034F8  B02D               	btfsc	___fladd@b,0,c
  6080  0034FA  8E3C               	bsf	___fladd@grs,7,c
  6081  0034FC  3430               	rlcf	___fladd@b+3,w,c
  6082  0034FE  3230               	rrcf	___fladd@b+3,f,c
  6083  003500  322F               	rrcf	___fladd@b+2,f,c
  6084  003502  322E               	rrcf	___fladd@b+1,f,c
  6085  003504  322D               	rrcf	___fladd@b,f,c
  6086  003506  2A3B               	incf	___fladd@bexp,f,c
  6087  003508  D05F               	goto	u7200
  6088  00350A                     l5519:
  6089  00350A  5031               	movf	___fladd@a,w,c
  6090  00350C  5C2D               	subwf	___fladd@b,w,c
  6091  00350E  5032               	movf	___fladd@a+1,w,c
  6092  003510  582E               	subwfb	___fladd@b+1,w,c
  6093  003512  5033               	movf	___fladd@a+2,w,c
  6094  003514  582F               	subwfb	___fladd@b+2,w,c
  6095  003516  5030               	movf	___fladd@b+3,w,c
  6096  003518  0A80               	xorlw	128
  6097  00351A  6E35               	movwf	??___fladd& (0+255),c
  6098  00351C  5034               	movf	___fladd@a+3,w,c
  6099  00351E  0A80               	xorlw	128
  6100  003520  5835               	subwfb	??___fladd& (0+255),w,c
  6101  003522  B0D8               	btfsc	status,0,c
  6102  003524  D025               	goto	l5529
  6103  003526  502D               	movf	___fladd@b,w,c
  6104  003528  5C31               	subwf	___fladd@a,w,c
  6105  00352A  6E35               	movwf	??___fladd& (0+255),c
  6106  00352C  502E               	movf	___fladd@b+1,w,c
  6107  00352E  5832               	subwfb	___fladd@a+1,w,c
  6108  003530  6E36               	movwf	(??___fladd+1)& (0+255),c
  6109  003532  502F               	movf	___fladd@b+2,w,c
  6110  003534  5833               	subwfb	___fladd@a+2,w,c
  6111  003536  6E37               	movwf	(??___fladd+2)& (0+255),c
  6112  003538  5030               	movf	___fladd@b+3,w,c
  6113  00353A  5834               	subwfb	___fladd@a+3,w,c
  6114  00353C  6E38               	movwf	(??___fladd+3)& (0+255),c
  6115  00353E  0EFF               	movlw	255
  6116  003540  2435               	addwf	??___fladd,w,c
  6117  003542  6E2D               	movwf	___fladd@b,c
  6118  003544  0EFF               	movlw	255
  6119  003546  2036               	addwfc	??___fladd+1,w,c
  6120  003548  6E2E               	movwf	___fladd@b+1,c
  6121  00354A  0EFF               	movlw	255
  6122  00354C  2037               	addwfc	??___fladd+2,w,c
  6123  00354E  6E2F               	movwf	___fladd@b+2,c
  6124  003550  0EFF               	movlw	255
  6125  003552  2038               	addwfc	??___fladd+3,w,c
  6126  003554  6E30               	movwf	___fladd@b+3,c
  6127  003556  0E80               	movlw	128
  6128  003558  1A39               	xorwf	___fladd@signs,f,c
  6129  00355A  6C3C               	negf	___fladd@grs,c
  6130  00355C  503C               	movf	___fladd@grs,w,c
  6131  00355E  A4D8               	btfss	status,2,c
  6132  003560  D00F               	goto	l1229
  6133  003562  0E01               	movlw	1
  6134  003564  262D               	addwf	___fladd@b,f,c
  6135  003566  0E00               	movlw	0
  6136  003568  222E               	addwfc	___fladd@b+1,f,c
  6137  00356A  222F               	addwfc	___fladd@b+2,f,c
  6138  00356C  2230               	addwfc	___fladd@b+3,f,c
  6139  00356E  D008               	goto	l1229
  6140  003570                     l5529:
  6141  003570  5031               	movf	___fladd@a,w,c
  6142  003572  5E2D               	subwf	___fladd@b,f,c
  6143  003574  5032               	movf	___fladd@a+1,w,c
  6144  003576  5A2E               	subwfb	___fladd@b+1,f,c
  6145  003578  5033               	movf	___fladd@a+2,w,c
  6146  00357A  5A2F               	subwfb	___fladd@b+2,f,c
  6147  00357C  5034               	movf	___fladd@a+3,w,c
  6148  00357E  5A30               	subwfb	___fladd@b+3,f,c
  6149  003580                     l1229:
  6150  003580  502D               	movf	___fladd@b,w,c
  6151  003582  102E               	iorwf	___fladd@b+1,w,c
  6152  003584  102F               	iorwf	___fladd@b+2,w,c
  6153  003586  1030               	iorwf	___fladd@b+3,w,c
  6154  003588  A4D8               	btfss	status,2,c
  6155  00358A  D01C               	goto	l5553
  6156  00358C  503C               	movf	___fladd@grs,w,c
  6157  00358E  A4D8               	btfss	status,2,c
  6158  003590  D019               	goto	l5553
  6159  003592  0E00               	movlw	0
  6160  003594  6E2D               	movwf	?___fladd,c
  6161  003596  0E00               	movlw	0
  6162  003598  6E2E               	movwf	?___fladd+1,c
  6163  00359A  0E00               	movlw	0
  6164  00359C  6E2F               	movwf	?___fladd+2,c
  6165  00359E  0E00               	movlw	0
  6166  0035A0  6E30               	movwf	?___fladd+3,c
  6167  0035A2  0012               	return	
  6168  0035A4                     l5537:
  6169  0035A4  90D8               	bcf	status,0,c
  6170  0035A6  362D               	rlcf	___fladd@b,f,c
  6171  0035A8  362E               	rlcf	___fladd@b+1,f,c
  6172  0035AA  362F               	rlcf	___fladd@b+2,f,c
  6173  0035AC  3630               	rlcf	___fladd@b+3,f,c
  6174  0035AE  BE3C               	btfsc	___fladd@grs,7,c
  6175  0035B0  802D               	bsf	___fladd@b,0,c
  6176  0035B2  A03C               	btfss	___fladd@grs,0,c
  6177  0035B4  D002               	goto	l5547
  6178  0035B6  80D8               	bsf	status,0,c
  6179  0035B8  D001               	goto	L9
  6180  0035BA                     l5547:
  6181  0035BA  90D8               	bcf	status,0,c
  6182  0035BC                     L9:
  6183  0035BC  363C               	rlcf	___fladd@grs,f,c
  6184  0035BE  503B               	movf	___fladd@bexp,w,c
  6185  0035C0  A4D8               	btfss	status,2,c
  6186  0035C2  063B               	decf	___fladd@bexp,f,c
  6187  0035C4                     l5553:
  6188  0035C4  AE2F               	btfss	___fladd@b+2,7,c
  6189  0035C6  D7EE               	goto	l5537
  6190  0035C8                     u7200:
  6191  0035C8  0E00               	movlw	0
  6192  0035CA  6E3A               	movwf	___fladd@aexp,c
  6193  0035CC  AE3C               	btfss	___fladd@grs,7,c
  6194  0035CE  D00C               	goto	l1238
  6195  0035D0  0060  F0F0  F035   	movff	___fladd@grs,??___fladd
  6196  0035D6  0E7F               	movlw	127
  6197  0035D8  1635               	andwf	??___fladd,f,c
  6198  0035DA  B4D8               	btfsc	status,2,c
  6199  0035DC  D003               	goto	l1239
  6200  0035DE                     u7220:
  6201  0035DE  0E01               	movlw	1
  6202  0035E0  6E3A               	movwf	___fladd@aexp,c
  6203  0035E2  D002               	goto	l1238
  6204  0035E4                     l1239:
  6205  0035E4  B02D               	btfsc	___fladd@b,0,c
  6206  0035E6  D7FB               	goto	u7220
  6207  0035E8                     l1238:
  6208  0035E8  503A               	movf	___fladd@aexp,w,c
  6209  0035EA  B4D8               	btfsc	status,2,c
  6210  0035EC  D028               	goto	l5573
  6211  0035EE  0E01               	movlw	1
  6212  0035F0  262D               	addwf	___fladd@b,f,c
  6213  0035F2  0E00               	movlw	0
  6214  0035F4  222E               	addwfc	___fladd@b+1,f,c
  6215  0035F6  222F               	addwfc	___fladd@b+2,f,c
  6216  0035F8  2230               	addwfc	___fladd@b+3,f,c
  6217  0035FA  A030               	btfss	___fladd@b+3,0,c
  6218  0035FC  D020               	goto	l5573
  6219  0035FE  0060  F0B4  F035   	movff	___fladd@b,??___fladd
  6220  003604  0060  F0B8  F036   	movff	___fladd@b+1,??___fladd+1
  6221  00360A  0060  F0BC  F037   	movff	___fladd@b+2,??___fladd+2
  6222  003610  0060  F0C0  F038   	movff	___fladd@b+3,??___fladd+3
  6223  003616  3438               	rlcf	??___fladd+3,w,c
  6224  003618  3238               	rrcf	??___fladd+3,f,c
  6225  00361A  3237               	rrcf	??___fladd+2,f,c
  6226  00361C  3236               	rrcf	??___fladd+1,f,c
  6227  00361E  3235               	rrcf	??___fladd,f,c
  6228  003620  0060  F0D4  F02D   	movff	??___fladd,___fladd@b
  6229  003626  0060  F0D8  F02E   	movff	??___fladd+1,___fladd@b+1
  6230  00362C  0060  F0DC  F02F   	movff	??___fladd+2,___fladd@b+2
  6231  003632  0060  F0E0  F030   	movff	??___fladd+3,___fladd@b+3
  6232  003638  283B               	incf	___fladd@bexp,w,c
  6233  00363A  A4D8               	btfss	status,2,c
  6234  00363C  2A3B               	incf	___fladd@bexp,f,c
  6235  00363E                     l5573:
  6236  00363E  283B               	incf	___fladd@bexp,w,c
  6237  003640  B4D8               	btfsc	status,2,c
  6238  003642  D003               	goto	u7280
  6239  003644  503B               	movf	___fladd@bexp,w,c
  6240  003646  A4D8               	btfss	status,2,c
  6241  003648  D00D               	goto	l5581
  6242  00364A                     u7280:
  6243  00364A  0E00               	movlw	0
  6244  00364C  6E2D               	movwf	___fladd@b,c
  6245  00364E  0E00               	movlw	0
  6246  003650  6E2E               	movwf	___fladd@b+1,c
  6247  003652  0E00               	movlw	0
  6248  003654  6E2F               	movwf	___fladd@b+2,c
  6249  003656  0E00               	movlw	0
  6250  003658  6E30               	movwf	___fladd@b+3,c
  6251  00365A  503B               	movf	___fladd@bexp,w,c
  6252  00365C  A4D8               	btfss	status,2,c
  6253  00365E  D002               	goto	l5581
  6254  003660  0E00               	movlw	0
  6255  003662  6E39               	movwf	___fladd@signs,c
  6256  003664                     l5581:
  6257  003664  A03B               	btfss	___fladd@bexp,0,c
  6258  003666  D002               	goto	l5585
  6259  003668  8E2F               	bsf	___fladd@b+2,7,c
  6260  00366A  D001               	goto	l5587
  6261  00366C                     l5585:
  6262  00366C  9E2F               	bcf	___fladd@b+2,7,c
  6263  00366E                     l5587:
  6264  00366E  90D8               	bcf	status,0,c
  6265  003670  303B               	rrcf	___fladd@bexp,w,c
  6266  003672  6E30               	movwf	___fladd@b+3,c
  6267  003674  BE39               	btfsc	___fladd@signs,7,c
  6268  003676  8E30               	bsf	___fladd@b+3,7,c
  6269  003678  0060  F0B4  F02D   	movff	___fladd@b,?___fladd
  6270  00367E  0060  F0B8  F02E   	movff	___fladd@b+1,?___fladd+1
  6271  003684  0060  F0BC  F02F   	movff	___fladd@b+2,?___fladd+2
  6272  00368A  0060  F0C0  F030   	movff	___fladd@b+3,?___fladd+3
  6273  003690  0012               	return		;funcret
  6274  003692                     __end_of___fladd:
  6275                           	opt callstack 0
  6276                           
  6277 ;; *************** function ___flneg *****************
  6278 ;; Defined at:
  6279 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  f1              4    5[COMRAM] unsigned char 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;		None
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  4    5[COMRAM] unsigned char 
  6286 ;; Registers used:
  6287 ;;		wreg, status,2, status,0
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6296 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6297 ;;Total ram usage:        4 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    2
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_efgtoa
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text23
  6308  005142                     __ptext23:
  6309                           	opt callstack 0
  6310  005142                     ___flneg:
  6311                           	opt callstack 23
  6312                           
  6313                           ;incstack = 0
  6314  005142  5006               	movf	___flneg@f1,w,c
  6315  005144  1007               	iorwf	___flneg@f1+1,w,c
  6316  005146  1008               	iorwf	___flneg@f1+2,w,c
  6317  005148  1009               	iorwf	___flneg@f1+3,w,c
  6318  00514A  B4D8               	btfsc	status,2,c
  6319  00514C  D008               	goto	l6079
  6320  00514E  0E00               	movlw	0
  6321  005150  1A06               	xorwf	___flneg@f1,f,c
  6322  005152  0E00               	movlw	0
  6323  005154  1A07               	xorwf	___flneg@f1+1,f,c
  6324  005156  0E00               	movlw	0
  6325  005158  1A08               	xorwf	___flneg@f1+2,f,c
  6326  00515A  0E80               	movlw	128
  6327  00515C  1A09               	xorwf	___flneg@f1+3,f,c
  6328  00515E                     l6079:
  6329  00515E  0060  F018  F006   	movff	___flneg@f1,?___flneg
  6330  005164  0060  F01C  F007   	movff	___flneg@f1+1,?___flneg+1
  6331  00516A  0060  F020  F008   	movff	___flneg@f1+2,?___flneg+2
  6332  005170  0060  F024  F009   	movff	___flneg@f1+3,?___flneg+3
  6333  005176  0012               	return		;funcret
  6334  005178                     __end_of___flneg:
  6335                           	opt callstack 0
  6336                           
  6337 ;; *************** function ___flmul *****************
  6338 ;; Defined at:
  6339 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  b               4   19[COMRAM] unsigned char 
  6342 ;;  a               4   23[COMRAM] unsigned char 
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;  prod            4   38[COMRAM] struct .
  6345 ;;  grs             4   33[COMRAM] unsigned long 
  6346 ;;  temp            2   42[COMRAM] struct .
  6347 ;;  bexp            1   37[COMRAM] unsigned char 
  6348 ;;  aexp            1   32[COMRAM] unsigned char 
  6349 ;;  sign            1   31[COMRAM] unsigned char 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  4   19[COMRAM] unsigned char 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0, prodl, prodh
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6359 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6360 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6361 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6362 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6363 ;;Total ram usage:       25 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    2
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_main
  6370 ;;		_UART_handler
  6371 ;;		_stof
  6372 ;;		_efgtoa
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text24
  6377  002C02                     __ptext24:
  6378                           	opt callstack 0
  6379  002C02                     ___flmul:
  6380                           	opt callstack 28
  6381                           
  6382                           ;incstack = 0
  6383  002C02  5017               	movf	___flmul@b+3,w,c
  6384  002C04  0B80               	andlw	128
  6385  002C06  6E20               	movwf	___flmul@sign,c
  6386  002C08  5017               	movf	___flmul@b+3,w,c
  6387  002C0A  2417               	addwf	___flmul@b+3,w,c
  6388  002C0C  6E26               	movwf	___flmul@bexp,c
  6389  002C0E  BE16               	btfsc	___flmul@b+2,7,c
  6390  002C10  8026               	bsf	___flmul@bexp,0,c
  6391  002C12  5026               	movf	___flmul@bexp,w,c
  6392  002C14  B4D8               	btfsc	status,2,c
  6393  002C16  D00D               	goto	l5835
  6394  002C18  2826               	incf	___flmul@bexp,w,c
  6395  002C1A  A4D8               	btfss	status,2,c
  6396  002C1C  D008               	goto	l5833
  6397  002C1E  0E00               	movlw	0
  6398  002C20  6E14               	movwf	___flmul@b,c
  6399  002C22  0E00               	movlw	0
  6400  002C24  6E15               	movwf	___flmul@b+1,c
  6401  002C26  0E00               	movlw	0
  6402  002C28  6E16               	movwf	___flmul@b+2,c
  6403  002C2A  0E00               	movlw	0
  6404  002C2C  6E17               	movwf	___flmul@b+3,c
  6405  002C2E                     l5833:
  6406  002C2E  8E16               	bsf	___flmul@b+2,7,c
  6407  002C30  D008               	goto	l5837
  6408  002C32                     l5835:
  6409  002C32  0E00               	movlw	0
  6410  002C34  6E14               	movwf	___flmul@b,c
  6411  002C36  0E00               	movlw	0
  6412  002C38  6E15               	movwf	___flmul@b+1,c
  6413  002C3A  0E00               	movlw	0
  6414  002C3C  6E16               	movwf	___flmul@b+2,c
  6415  002C3E  0E00               	movlw	0
  6416  002C40  6E17               	movwf	___flmul@b+3,c
  6417  002C42                     l5837:
  6418  002C42  501B               	movf	___flmul@a+3,w,c
  6419  002C44  0B80               	andlw	128
  6420  002C46  1A20               	xorwf	___flmul@sign,f,c
  6421  002C48  501B               	movf	___flmul@a+3,w,c
  6422  002C4A  241B               	addwf	___flmul@a+3,w,c
  6423  002C4C  6E21               	movwf	___flmul@aexp,c
  6424  002C4E  BE1A               	btfsc	___flmul@a+2,7,c
  6425  002C50  8021               	bsf	___flmul@aexp,0,c
  6426  002C52  5021               	movf	___flmul@aexp,w,c
  6427  002C54  B4D8               	btfsc	status,2,c
  6428  002C56  D00D               	goto	l5853
  6429  002C58  2821               	incf	___flmul@aexp,w,c
  6430  002C5A  A4D8               	btfss	status,2,c
  6431  002C5C  D008               	goto	l5851
  6432  002C5E  0E00               	movlw	0
  6433  002C60  6E18               	movwf	___flmul@a,c
  6434  002C62  0E00               	movlw	0
  6435  002C64  6E19               	movwf	___flmul@a+1,c
  6436  002C66  0E00               	movlw	0
  6437  002C68  6E1A               	movwf	___flmul@a+2,c
  6438  002C6A  0E00               	movlw	0
  6439  002C6C  6E1B               	movwf	___flmul@a+3,c
  6440  002C6E                     l5851:
  6441  002C6E  8E1A               	bsf	___flmul@a+2,7,c
  6442  002C70  D008               	goto	l1298
  6443  002C72                     l5853:
  6444  002C72  0E00               	movlw	0
  6445  002C74  6E18               	movwf	___flmul@a,c
  6446  002C76  0E00               	movlw	0
  6447  002C78  6E19               	movwf	___flmul@a+1,c
  6448  002C7A  0E00               	movlw	0
  6449  002C7C  6E1A               	movwf	___flmul@a+2,c
  6450  002C7E  0E00               	movlw	0
  6451  002C80  6E1B               	movwf	___flmul@a+3,c
  6452  002C82                     l1298:
  6453  002C82  5021               	movf	___flmul@aexp,w,c
  6454  002C84  B4D8               	btfsc	status,2,c
  6455  002C86  D003               	goto	u7880
  6456  002C88  5026               	movf	___flmul@bexp,w,c
  6457  002C8A  A4D8               	btfss	status,2,c
  6458  002C8C  D009               	goto	l5861
  6459  002C8E                     u7880:
  6460  002C8E  0E00               	movlw	0
  6461  002C90  6E14               	movwf	?___flmul,c
  6462  002C92  0E00               	movlw	0
  6463  002C94  6E15               	movwf	?___flmul+1,c
  6464  002C96  0E00               	movlw	0
  6465  002C98  6E16               	movwf	?___flmul+2,c
  6466  002C9A  0E00               	movlw	0
  6467  002C9C  6E17               	movwf	?___flmul+3,c
  6468  002C9E  0012               	return	
  6469  002CA0                     l5861:
  6470  002CA0  501A               	movf	___flmul@a+2,w,c
  6471  002CA2  0214               	mulwf	___flmul@b,c
  6472  002CA4  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6473  002CAA  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6474  002CB0  502B               	movf	___flmul@temp,w,c
  6475  002CB2  6E22               	movwf	___flmul@grs,c
  6476  002CB4  6A23               	clrf	___flmul@grs+1,c
  6477  002CB6  6A24               	clrf	___flmul@grs+2,c
  6478  002CB8  6A25               	clrf	___flmul@grs+3,c
  6479  002CBA  502C               	movf	___flmul@temp+1,w,c
  6480  002CBC  6E27               	movwf	___flmul@prod,c
  6481  002CBE  6A28               	clrf	___flmul@prod+1,c
  6482  002CC0  6A29               	clrf	___flmul@prod+2,c
  6483  002CC2  6A2A               	clrf	___flmul@prod+3,c
  6484  002CC4  5019               	movf	___flmul@a+1,w,c
  6485  002CC6  0215               	mulwf	___flmul@b+1,c
  6486  002CC8  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6487  002CCE  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6488  002CD4  502B               	movf	___flmul@temp,w,c
  6489  002CD6  2622               	addwf	___flmul@grs,f,c
  6490  002CD8  0E00               	movlw	0
  6491  002CDA  2223               	addwfc	___flmul@grs+1,f,c
  6492  002CDC  2224               	addwfc	___flmul@grs+2,f,c
  6493  002CDE  2225               	addwfc	___flmul@grs+3,f,c
  6494  002CE0  502C               	movf	___flmul@temp+1,w,c
  6495  002CE2  2627               	addwf	___flmul@prod,f,c
  6496  002CE4  0E00               	movlw	0
  6497  002CE6  2228               	addwfc	___flmul@prod+1,f,c
  6498  002CE8  2229               	addwfc	___flmul@prod+2,f,c
  6499  002CEA  222A               	addwfc	___flmul@prod+3,f,c
  6500  002CEC  5018               	movf	___flmul@a,w,c
  6501  002CEE  0216               	mulwf	___flmul@b+2,c
  6502  002CF0  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6503  002CF6  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6504  002CFC  502B               	movf	___flmul@temp,w,c
  6505  002CFE  2622               	addwf	___flmul@grs,f,c
  6506  002D00  0E00               	movlw	0
  6507  002D02  2223               	addwfc	___flmul@grs+1,f,c
  6508  002D04  2224               	addwfc	___flmul@grs+2,f,c
  6509  002D06  2225               	addwfc	___flmul@grs+3,f,c
  6510  002D08  502C               	movf	___flmul@temp+1,w,c
  6511  002D0A  2627               	addwf	___flmul@prod,f,c
  6512  002D0C  0E00               	movlw	0
  6513  002D0E  2228               	addwfc	___flmul@prod+1,f,c
  6514  002D10  2229               	addwfc	___flmul@prod+2,f,c
  6515  002D12  222A               	addwfc	___flmul@prod+3,f,c
  6516  002D14  0060  F090  F025   	movff	___flmul@grs+2,___flmul@grs+3
  6517  002D1A  0060  F08C  F024   	movff	___flmul@grs+1,___flmul@grs+2
  6518  002D20  0060  F088  F023   	movff	___flmul@grs,___flmul@grs+1
  6519  002D26  6A22               	clrf	___flmul@grs,c
  6520  002D28  5018               	movf	___flmul@a,w,c
  6521  002D2A  0215               	mulwf	___flmul@b+1,c
  6522  002D2C  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6523  002D32  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6524  002D38  502B               	movf	___flmul@temp,w,c
  6525  002D3A  2622               	addwf	___flmul@grs,f,c
  6526  002D3C  502C               	movf	___flmul@temp+1,w,c
  6527  002D3E  2223               	addwfc	___flmul@grs+1,f,c
  6528  002D40  0E00               	movlw	0
  6529  002D42  2224               	addwfc	___flmul@grs+2,f,c
  6530  002D44  0E00               	movlw	0
  6531  002D46  2225               	addwfc	___flmul@grs+3,f,c
  6532  002D48  5019               	movf	___flmul@a+1,w,c
  6533  002D4A  0214               	mulwf	___flmul@b,c
  6534  002D4C  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6535  002D52  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6536  002D58  502B               	movf	___flmul@temp,w,c
  6537  002D5A  2622               	addwf	___flmul@grs,f,c
  6538  002D5C  502C               	movf	___flmul@temp+1,w,c
  6539  002D5E  2223               	addwfc	___flmul@grs+1,f,c
  6540  002D60  0E00               	movlw	0
  6541  002D62  2224               	addwfc	___flmul@grs+2,f,c
  6542  002D64  0E00               	movlw	0
  6543  002D66  2225               	addwfc	___flmul@grs+3,f,c
  6544  002D68  0060  F090  F025   	movff	___flmul@grs+2,___flmul@grs+3
  6545  002D6E  0060  F08C  F024   	movff	___flmul@grs+1,___flmul@grs+2
  6546  002D74  0060  F088  F023   	movff	___flmul@grs,___flmul@grs+1
  6547  002D7A  6A22               	clrf	___flmul@grs,c
  6548  002D7C  5018               	movf	___flmul@a,w,c
  6549  002D7E  0214               	mulwf	___flmul@b,c
  6550  002D80  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6551  002D86  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6552  002D8C  502B               	movf	___flmul@temp,w,c
  6553  002D8E  2622               	addwf	___flmul@grs,f,c
  6554  002D90  502C               	movf	___flmul@temp+1,w,c
  6555  002D92  2223               	addwfc	___flmul@grs+1,f,c
  6556  002D94  0E00               	movlw	0
  6557  002D96  2224               	addwfc	___flmul@grs+2,f,c
  6558  002D98  0E00               	movlw	0
  6559  002D9A  2225               	addwfc	___flmul@grs+3,f,c
  6560  002D9C  501A               	movf	___flmul@a+2,w,c
  6561  002D9E  0215               	mulwf	___flmul@b+1,c
  6562  002DA0  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6563  002DA6  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6564  002DAC  502B               	movf	___flmul@temp,w,c
  6565  002DAE  2627               	addwf	___flmul@prod,f,c
  6566  002DB0  502C               	movf	___flmul@temp+1,w,c
  6567  002DB2  2228               	addwfc	___flmul@prod+1,f,c
  6568  002DB4  0E00               	movlw	0
  6569  002DB6  2229               	addwfc	___flmul@prod+2,f,c
  6570  002DB8  0E00               	movlw	0
  6571  002DBA  222A               	addwfc	___flmul@prod+3,f,c
  6572  002DBC  5019               	movf	___flmul@a+1,w,c
  6573  002DBE  0216               	mulwf	___flmul@b+2,c
  6574  002DC0  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6575  002DC6  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6576  002DCC  502B               	movf	___flmul@temp,w,c
  6577  002DCE  2627               	addwf	___flmul@prod,f,c
  6578  002DD0  502C               	movf	___flmul@temp+1,w,c
  6579  002DD2  2228               	addwfc	___flmul@prod+1,f,c
  6580  002DD4  0E00               	movlw	0
  6581  002DD6  2229               	addwfc	___flmul@prod+2,f,c
  6582  002DD8  0E00               	movlw	0
  6583  002DDA  222A               	addwfc	___flmul@prod+3,f,c
  6584  002DDC  501A               	movf	___flmul@a+2,w,c
  6585  002DDE  0216               	mulwf	___flmul@b+2,c
  6586  002DE0  006F FFCC  F02B    	movff	prodl,___flmul@temp
  6587  002DE6  006F FFD0  F02C    	movff	prodh,___flmul@temp+1
  6588  002DEC  502B               	movf	___flmul@temp,w,c
  6589  002DEE  6E1C               	movwf	??___flmul& (0+255),c
  6590  002DF0  502C               	movf	___flmul@temp+1,w,c
  6591  002DF2  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6592  002DF4  6A1E               	clrf	(??___flmul+2)& (0+255),c
  6593  002DF6  6A1F               	clrf	(??___flmul+3)& (0+255),c
  6594  002DF8  0060  F078  F01F   	movff	??___flmul+2,??___flmul+3
  6595  002DFE  0060  F074  F01E   	movff	??___flmul+1,??___flmul+2
  6596  002E04  0060  F070  F01D   	movff	??___flmul,??___flmul+1
  6597  002E0A  6A1C               	clrf	??___flmul,c
  6598  002E0C  501C               	movf	??___flmul,w,c
  6599  002E0E  2627               	addwf	___flmul@prod,f,c
  6600  002E10  501D               	movf	??___flmul+1,w,c
  6601  002E12  2228               	addwfc	___flmul@prod+1,f,c
  6602  002E14  501E               	movf	??___flmul+2,w,c
  6603  002E16  2229               	addwfc	___flmul@prod+2,f,c
  6604  002E18  501F               	movf	??___flmul+3,w,c
  6605  002E1A  222A               	addwfc	___flmul@prod+3,f,c
  6606  002E1C  0060  F088  F01C   	movff	___flmul@grs,??___flmul
  6607  002E22  0060  F08C  F01D   	movff	___flmul@grs+1,??___flmul+1
  6608  002E28  0060  F090  F01E   	movff	___flmul@grs+2,??___flmul+2
  6609  002E2E  0060  F094  F01F   	movff	___flmul@grs+3,??___flmul+3
  6610  002E34  0E19               	movlw	25
  6611  002E36  D005               	goto	u7890
  6612  002E38                     u7895:
  6613  002E38  90D8               	bcf	status,0,c
  6614  002E3A  321F               	rrcf	??___flmul+3,f,c
  6615  002E3C  321E               	rrcf	??___flmul+2,f,c
  6616  002E3E  321D               	rrcf	??___flmul+1,f,c
  6617  002E40  321C               	rrcf	??___flmul,f,c
  6618  002E42                     u7890:
  6619  002E42  2EE8               	decfsz	wreg,f,c
  6620  002E44  D7F9               	goto	u7895
  6621  002E46  501C               	movf	??___flmul,w,c
  6622  002E48  2627               	addwf	___flmul@prod,f,c
  6623  002E4A  501D               	movf	??___flmul+1,w,c
  6624  002E4C  2228               	addwfc	___flmul@prod+1,f,c
  6625  002E4E  501E               	movf	??___flmul+2,w,c
  6626  002E50  2229               	addwfc	___flmul@prod+2,f,c
  6627  002E52  501F               	movf	??___flmul+3,w,c
  6628  002E54  222A               	addwfc	___flmul@prod+3,f,c
  6629  002E56  0060  F090  F025   	movff	___flmul@grs+2,___flmul@grs+3
  6630  002E5C  0060  F08C  F024   	movff	___flmul@grs+1,___flmul@grs+2
  6631  002E62  0060  F088  F023   	movff	___flmul@grs,___flmul@grs+1
  6632  002E68  6A22               	clrf	___flmul@grs,c
  6633  002E6A  5021               	movf	___flmul@aexp,w,c
  6634  002E6C  0060  F098  F01C   	movff	___flmul@bexp,??___flmul
  6635  002E72  6A1D               	clrf	(??___flmul+1)& (0+255),c
  6636  002E74  261C               	addwf	??___flmul,f,c
  6637  002E76  0E00               	movlw	0
  6638  002E78  221D               	addwfc	??___flmul+1,f,c
  6639  002E7A  0E82               	movlw	130
  6640  002E7C  241C               	addwf	??___flmul,w,c
  6641  002E7E  6E2B               	movwf	___flmul@temp,c
  6642  002E80  0EFF               	movlw	255
  6643  002E82  201D               	addwfc	??___flmul+1,w,c
  6644  002E84  6E2C               	movwf	___flmul@temp+1,c
  6645  002E86  D00F               	goto	l5909
  6646  002E88                     l5903:
  6647  002E88  90D8               	bcf	status,0,c
  6648  002E8A  3627               	rlcf	___flmul@prod,f,c
  6649  002E8C  3628               	rlcf	___flmul@prod+1,f,c
  6650  002E8E  3629               	rlcf	___flmul@prod+2,f,c
  6651  002E90  362A               	rlcf	___flmul@prod+3,f,c
  6652  002E92  BE25               	btfsc	___flmul@grs+3,7,c
  6653  002E94  8027               	bsf	___flmul@prod,0,c
  6654  002E96  90D8               	bcf	status,0,c
  6655  002E98  3622               	rlcf	___flmul@grs,f,c
  6656  002E9A  3623               	rlcf	___flmul@grs+1,f,c
  6657  002E9C  3624               	rlcf	___flmul@grs+2,f,c
  6658  002E9E  3625               	rlcf	___flmul@grs+3,f,c
  6659  002EA0  062B               	decf	___flmul@temp,f,c
  6660  002EA2  A0D8               	btfss	status,0,c
  6661  002EA4  062C               	decf	___flmul@temp+1,f,c
  6662  002EA6                     l5909:
  6663  002EA6  AE29               	btfss	___flmul@prod+2,7,c
  6664  002EA8  D7EF               	goto	l5903
  6665  002EAA  0E00               	movlw	0
  6666  002EAC  6E21               	movwf	___flmul@aexp,c
  6667  002EAE  AE25               	btfss	___flmul@grs+3,7,c
  6668  002EB0  D017               	goto	l1307
  6669  002EB2  0EFF               	movlw	255
  6670  002EB4  1422               	andwf	___flmul@grs,w,c
  6671  002EB6  6E1C               	movwf	??___flmul& (0+255),c
  6672  002EB8  0EFF               	movlw	255
  6673  002EBA  1423               	andwf	___flmul@grs+1,w,c
  6674  002EBC  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6675  002EBE  0EFF               	movlw	255
  6676  002EC0  1424               	andwf	___flmul@grs+2,w,c
  6677  002EC2  6E1E               	movwf	(??___flmul+2)& (0+255),c
  6678  002EC4  0E7F               	movlw	127
  6679  002EC6  1425               	andwf	___flmul@grs+3,w,c
  6680  002EC8  6E1F               	movwf	(??___flmul+3)& (0+255),c
  6681  002ECA  501C               	movf	??___flmul,w,c
  6682  002ECC  101D               	iorwf	??___flmul+1,w,c
  6683  002ECE  101E               	iorwf	??___flmul+2,w,c
  6684  002ED0  101F               	iorwf	??___flmul+3,w,c
  6685  002ED2  B4D8               	btfsc	status,2,c
  6686  002ED4  D003               	goto	l1308
  6687  002ED6                     u7930:
  6688  002ED6  0E01               	movlw	1
  6689  002ED8  6E21               	movwf	___flmul@aexp,c
  6690  002EDA  D002               	goto	l1307
  6691  002EDC                     l1308:
  6692  002EDC  B027               	btfsc	___flmul@prod,0,c
  6693  002EDE  D7FB               	goto	u7930
  6694  002EE0                     l1307:
  6695  002EE0  5021               	movf	___flmul@aexp,w,c
  6696  002EE2  B4D8               	btfsc	status,2,c
  6697  002EE4  D027               	goto	l5929
  6698  002EE6  0E01               	movlw	1
  6699  002EE8  2627               	addwf	___flmul@prod,f,c
  6700  002EEA  0E00               	movlw	0
  6701  002EEC  2228               	addwfc	___flmul@prod+1,f,c
  6702  002EEE  2229               	addwfc	___flmul@prod+2,f,c
  6703  002EF0  222A               	addwfc	___flmul@prod+3,f,c
  6704  002EF2  A02A               	btfss	___flmul@prod+3,0,c
  6705  002EF4  D01F               	goto	l5929
  6706  002EF6  0060  F09C  F01C   	movff	___flmul@prod,??___flmul
  6707  002EFC  0060  F0A0  F01D   	movff	___flmul@prod+1,??___flmul+1
  6708  002F02  0060  F0A4  F01E   	movff	___flmul@prod+2,??___flmul+2
  6709  002F08  0060  F0A8  F01F   	movff	___flmul@prod+3,??___flmul+3
  6710  002F0E  341F               	rlcf	??___flmul+3,w,c
  6711  002F10  321F               	rrcf	??___flmul+3,f,c
  6712  002F12  321E               	rrcf	??___flmul+2,f,c
  6713  002F14  321D               	rrcf	??___flmul+1,f,c
  6714  002F16  321C               	rrcf	??___flmul,f,c
  6715  002F18  0060  F070  F027   	movff	??___flmul,___flmul@prod
  6716  002F1E  0060  F074  F028   	movff	??___flmul+1,___flmul@prod+1
  6717  002F24  0060  F078  F029   	movff	??___flmul+2,___flmul@prod+2
  6718  002F2A  0060  F07C  F02A   	movff	??___flmul+3,___flmul@prod+3
  6719  002F30  4A2B               	infsnz	___flmul@temp,f,c
  6720  002F32  2A2C               	incf	___flmul@temp+1,f,c
  6721  002F34                     l5929:
  6722  002F34  BE2C               	btfsc	___flmul@temp+1,7,c
  6723  002F36  D00D               	goto	l5933
  6724  002F38  502C               	movf	___flmul@temp+1,w,c
  6725  002F3A  E103               	bnz	u7970
  6726  002F3C  282B               	incf	___flmul@temp,w,c
  6727  002F3E  A0D8               	btfss	status,0,c
  6728  002F40  D008               	goto	l5933
  6729  002F42                     u7970:
  6730  002F42  0E00               	movlw	0
  6731  002F44  6E27               	movwf	___flmul@prod,c
  6732  002F46  0E00               	movlw	0
  6733  002F48  6E28               	movwf	___flmul@prod+1,c
  6734  002F4A  0E80               	movlw	128
  6735  002F4C  6E29               	movwf	___flmul@prod+2,c
  6736  002F4E  0E7F               	movlw	127
  6737  002F50  D021               	goto	L10
  6738  002F52                     l5933:
  6739  002F52  BE2C               	btfsc	___flmul@temp+1,7,c
  6740  002F54  D005               	goto	u7980
  6741  002F56  502C               	movf	___flmul@temp+1,w,c
  6742  002F58  E10E               	bnz	l1315
  6743  002F5A  042B               	decf	___flmul@temp,w,c
  6744  002F5C  B0D8               	btfsc	status,0,c
  6745  002F5E  D00B               	goto	l1315
  6746  002F60                     u7980:
  6747  002F60  0E00               	movlw	0
  6748  002F62  6E27               	movwf	___flmul@prod,c
  6749  002F64  0E00               	movlw	0
  6750  002F66  6E28               	movwf	___flmul@prod+1,c
  6751  002F68  0E00               	movlw	0
  6752  002F6A  6E29               	movwf	___flmul@prod+2,c
  6753  002F6C  0E00               	movlw	0
  6754  002F6E  6E2A               	movwf	___flmul@prod+3,c
  6755  002F70  0E00               	movlw	0
  6756  002F72  6E20               	movwf	___flmul@sign,c
  6757  002F74  D010               	goto	l5945
  6758  002F76                     l1315:
  6759  002F76  0060  F0AC  F026   	movff	___flmul@temp,___flmul@bexp
  6760  002F7C  0EFF               	movlw	255
  6761  002F7E  1627               	andwf	___flmul@prod,f,c
  6762  002F80  0EFF               	movlw	255
  6763  002F82  1628               	andwf	___flmul@prod+1,f,c
  6764  002F84  0E7F               	movlw	127
  6765  002F86  1629               	andwf	___flmul@prod+2,f,c
  6766  002F88  0E00               	movlw	0
  6767  002F8A  162A               	andwf	___flmul@prod+3,f,c
  6768  002F8C  B026               	btfsc	___flmul@bexp,0,c
  6769  002F8E  8E29               	bsf	___flmul@prod+2,7,c
  6770  002F90  90D8               	bcf	status,0,c
  6771  002F92  3026               	rrcf	___flmul@bexp,w,c
  6772  002F94                     L10:
  6773  002F94  6E2A               	movwf	___flmul@prod+3,c
  6774  002F96                     l5945:
  6775  002F96  5020               	movf	___flmul@sign,w,c
  6776  002F98  122A               	iorwf	___flmul@prod+3,f,c
  6777  002F9A  0060  F09C  F014   	movff	___flmul@prod,?___flmul
  6778  002FA0  0060  F0A0  F015   	movff	___flmul@prod+1,?___flmul+1
  6779  002FA6  0060  F0A4  F016   	movff	___flmul@prod+2,?___flmul+2
  6780  002FAC  0060  F0A8  F017   	movff	___flmul@prod+3,?___flmul+3
  6781  002FB2  0012               	return		;funcret
  6782  002FB4                     __end_of___flmul:
  6783                           	opt callstack 0
  6784                           
  6785 ;; *************** function ___flge *****************
  6786 ;; Defined at:
  6787 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  ff1             4   44[COMRAM] unsigned char 
  6790 ;;  ff2             4   48[COMRAM] unsigned char 
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;		None               void
  6795 ;; Registers used:
  6796 ;;		wreg, status,2, status,0
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6802 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6806 ;;Total ram usage:       12 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:    2
  6809 ;; This function calls:
  6810 ;;		Nothing
  6811 ;; This function is called by:
  6812 ;;		_main
  6813 ;;		_efgtoa
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817                           	psect	text25
  6818  00466E                     __ptext25:
  6819                           	opt callstack 0
  6820  00466E                     ___flge:
  6821                           	opt callstack 28
  6822                           
  6823                           ;incstack = 0
  6824  00466E  0E00               	movlw	0
  6825  004670  142D               	andwf	___flge@ff1,w,c
  6826  004672  6E35               	movwf	??___flge& (0+255),c
  6827  004674  0E00               	movlw	0
  6828  004676  142E               	andwf	___flge@ff1+1,w,c
  6829  004678  6E36               	movwf	(??___flge+1)& (0+255),c
  6830  00467A  0E80               	movlw	128
  6831  00467C  142F               	andwf	___flge@ff1+2,w,c
  6832  00467E  6E37               	movwf	(??___flge+2)& (0+255),c
  6833  004680  0E7F               	movlw	127
  6834  004682  1430               	andwf	___flge@ff1+3,w,c
  6835  004684  6E38               	movwf	(??___flge+3)& (0+255),c
  6836  004686  5035               	movf	??___flge,w,c
  6837  004688  1036               	iorwf	??___flge+1,w,c
  6838  00468A  1037               	iorwf	??___flge+2,w,c
  6839  00468C  1038               	iorwf	??___flge+3,w,c
  6840  00468E  A4D8               	btfss	status,2,c
  6841  004690  D008               	goto	l6057
  6842  004692  0E00               	movlw	0
  6843  004694  6E2D               	movwf	___flge@ff1,c
  6844  004696  0E00               	movlw	0
  6845  004698  6E2E               	movwf	___flge@ff1+1,c
  6846  00469A  0E00               	movlw	0
  6847  00469C  6E2F               	movwf	___flge@ff1+2,c
  6848  00469E  0E00               	movlw	0
  6849  0046A0  6E30               	movwf	___flge@ff1+3,c
  6850  0046A2                     l6057:
  6851  0046A2  0E00               	movlw	0
  6852  0046A4  1431               	andwf	___flge@ff2,w,c
  6853  0046A6  6E35               	movwf	??___flge& (0+255),c
  6854  0046A8  0E00               	movlw	0
  6855  0046AA  1432               	andwf	___flge@ff2+1,w,c
  6856  0046AC  6E36               	movwf	(??___flge+1)& (0+255),c
  6857  0046AE  0E80               	movlw	128
  6858  0046B0  1433               	andwf	___flge@ff2+2,w,c
  6859  0046B2  6E37               	movwf	(??___flge+2)& (0+255),c
  6860  0046B4  0E7F               	movlw	127
  6861  0046B6  1434               	andwf	___flge@ff2+3,w,c
  6862  0046B8  6E38               	movwf	(??___flge+3)& (0+255),c
  6863  0046BA  5035               	movf	??___flge,w,c
  6864  0046BC  1036               	iorwf	??___flge+1,w,c
  6865  0046BE  1037               	iorwf	??___flge+2,w,c
  6866  0046C0  1038               	iorwf	??___flge+3,w,c
  6867  0046C2  A4D8               	btfss	status,2,c
  6868  0046C4  D008               	goto	l6061
  6869  0046C6  0E00               	movlw	0
  6870  0046C8  6E31               	movwf	___flge@ff2,c
  6871  0046CA  0E00               	movlw	0
  6872  0046CC  6E32               	movwf	___flge@ff2+1,c
  6873  0046CE  0E00               	movlw	0
  6874  0046D0  6E33               	movwf	___flge@ff2+2,c
  6875  0046D2  0E00               	movlw	0
  6876  0046D4  6E34               	movwf	___flge@ff2+3,c
  6877  0046D6                     l6061:
  6878  0046D6  AE30               	btfss	___flge@ff1+3,7,c
  6879  0046D8  D009               	goto	l6065
  6880  0046DA  6C2D               	negf	___flge@ff1,c
  6881  0046DC  1E2E               	comf	___flge@ff1+1,f,c
  6882  0046DE  B0D8               	btfsc	status,0,c
  6883  0046E0  2A2E               	incf	___flge@ff1+1,f,c
  6884  0046E2  1E2F               	comf	___flge@ff1+2,f,c
  6885  0046E4  B0D8               	btfsc	status,0,c
  6886  0046E6  2A2F               	incf	___flge@ff1+2,f,c
  6887  0046E8  0E80               	movlw	128
  6888  0046EA  5630               	subfwb	___flge@ff1+3,f,c
  6889  0046EC                     l6065:
  6890  0046EC  AE34               	btfss	___flge@ff2+3,7,c
  6891  0046EE  D009               	goto	l949
  6892  0046F0  6C31               	negf	___flge@ff2,c
  6893  0046F2  1E32               	comf	___flge@ff2+1,f,c
  6894  0046F4  B0D8               	btfsc	status,0,c
  6895  0046F6  2A32               	incf	___flge@ff2+1,f,c
  6896  0046F8  1E33               	comf	___flge@ff2+2,f,c
  6897  0046FA  B0D8               	btfsc	status,0,c
  6898  0046FC  2A33               	incf	___flge@ff2+2,f,c
  6899  0046FE  0E80               	movlw	128
  6900  004700  5634               	subfwb	___flge@ff2+3,f,c
  6901  004702                     l949:
  6902  004702  0E00               	movlw	0
  6903  004704  1A2D               	xorwf	___flge@ff1,f,c
  6904  004706  0E00               	movlw	0
  6905  004708  1A2E               	xorwf	___flge@ff1+1,f,c
  6906  00470A  0E00               	movlw	0
  6907  00470C  1A2F               	xorwf	___flge@ff1+2,f,c
  6908  00470E  0E80               	movlw	128
  6909  004710  1A30               	xorwf	___flge@ff1+3,f,c
  6910  004712  0E00               	movlw	0
  6911  004714  1A31               	xorwf	___flge@ff2,f,c
  6912  004716  0E00               	movlw	0
  6913  004718  1A32               	xorwf	___flge@ff2+1,f,c
  6914  00471A  0E00               	movlw	0
  6915  00471C  1A33               	xorwf	___flge@ff2+2,f,c
  6916  00471E  0E80               	movlw	128
  6917  004720  1A34               	xorwf	___flge@ff2+3,f,c
  6918  004722  5031               	movf	___flge@ff2,w,c
  6919  004724  5C2D               	subwf	___flge@ff1,w,c
  6920  004726  5032               	movf	___flge@ff2+1,w,c
  6921  004728  582E               	subwfb	___flge@ff1+1,w,c
  6922  00472A  5033               	movf	___flge@ff2+2,w,c
  6923  00472C  582F               	subwfb	___flge@ff1+2,w,c
  6924  00472E  5034               	movf	___flge@ff2+3,w,c
  6925  004730  5830               	subwfb	___flge@ff1+3,w,c
  6926  004732  B0D8               	btfsc	status,0,c
  6927  004734  D002               	goto	l6071
  6928  004736  90D8               	bcf	status,0,c
  6929  004738  0012               	return	
  6930  00473A                     l6071:
  6931  00473A  80D8               	bsf	status,0,c
  6932  00473C  0012               	return		;funcret
  6933  00473E                     __end_of___flge:
  6934                           	opt callstack 0
  6935                           
  6936 ;; *************** function ___fleq *****************
  6937 ;; Defined at:
  6938 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;  ff1             4    5[COMRAM] unsigned char 
  6941 ;;  ff2             4    9[COMRAM] unsigned char 
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;		None               void
  6946 ;; Registers used:
  6947 ;;		wreg, status,2, status,0
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6953 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6955 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6956 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6957 ;;Total ram usage:       12 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:    2
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_efgtoa
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text26
  6968  004B74                     __ptext26:
  6969                           	opt callstack 0
  6970  004B74                     ___fleq:
  6971                           	opt callstack 23
  6972                           
  6973                           ;incstack = 0
  6974  004B74  0E00               	movlw	0
  6975  004B76  1406               	andwf	___fleq@ff1,w,c
  6976  004B78  6E0E               	movwf	??___fleq& (0+255),c
  6977  004B7A  0E00               	movlw	0
  6978  004B7C  1407               	andwf	___fleq@ff1+1,w,c
  6979  004B7E  6E0F               	movwf	(??___fleq+1)& (0+255),c
  6980  004B80  0E80               	movlw	128
  6981  004B82  1408               	andwf	___fleq@ff1+2,w,c
  6982  004B84  6E10               	movwf	(??___fleq+2)& (0+255),c
  6983  004B86  0E7F               	movlw	127
  6984  004B88  1409               	andwf	___fleq@ff1+3,w,c
  6985  004B8A  6E11               	movwf	(??___fleq+3)& (0+255),c
  6986  004B8C  500E               	movf	??___fleq,w,c
  6987  004B8E  100F               	iorwf	??___fleq+1,w,c
  6988  004B90  1010               	iorwf	??___fleq+2,w,c
  6989  004B92  1011               	iorwf	??___fleq+3,w,c
  6990  004B94  A4D8               	btfss	status,2,c
  6991  004B96  D008               	goto	l6041
  6992  004B98  0E00               	movlw	0
  6993  004B9A  6E06               	movwf	___fleq@ff1,c
  6994  004B9C  0E00               	movlw	0
  6995  004B9E  6E07               	movwf	___fleq@ff1+1,c
  6996  004BA0  0E00               	movlw	0
  6997  004BA2  6E08               	movwf	___fleq@ff1+2,c
  6998  004BA4  0E00               	movlw	0
  6999  004BA6  6E09               	movwf	___fleq@ff1+3,c
  7000  004BA8                     l6041:
  7001  004BA8  0E00               	movlw	0
  7002  004BAA  140A               	andwf	___fleq@ff2,w,c
  7003  004BAC  6E0E               	movwf	??___fleq& (0+255),c
  7004  004BAE  0E00               	movlw	0
  7005  004BB0  140B               	andwf	___fleq@ff2+1,w,c
  7006  004BB2  6E0F               	movwf	(??___fleq+1)& (0+255),c
  7007  004BB4  0E80               	movlw	128
  7008  004BB6  140C               	andwf	___fleq@ff2+2,w,c
  7009  004BB8  6E10               	movwf	(??___fleq+2)& (0+255),c
  7010  004BBA  0E7F               	movlw	127
  7011  004BBC  140D               	andwf	___fleq@ff2+3,w,c
  7012  004BBE  6E11               	movwf	(??___fleq+3)& (0+255),c
  7013  004BC0  500E               	movf	??___fleq,w,c
  7014  004BC2  100F               	iorwf	??___fleq+1,w,c
  7015  004BC4  1010               	iorwf	??___fleq+2,w,c
  7016  004BC6  1011               	iorwf	??___fleq+3,w,c
  7017  004BC8  A4D8               	btfss	status,2,c
  7018  004BCA  D008               	goto	l6045
  7019  004BCC  0E00               	movlw	0
  7020  004BCE  6E0A               	movwf	___fleq@ff2,c
  7021  004BD0  0E00               	movlw	0
  7022  004BD2  6E0B               	movwf	___fleq@ff2+1,c
  7023  004BD4  0E00               	movlw	0
  7024  004BD6  6E0C               	movwf	___fleq@ff2+2,c
  7025  004BD8  0E00               	movlw	0
  7026  004BDA  6E0D               	movwf	___fleq@ff2+3,c
  7027  004BDC                     l6045:
  7028  004BDC  500A               	movf	___fleq@ff2,w,c
  7029  004BDE  1806               	xorwf	___fleq@ff1,w,c
  7030  004BE0  E10A               	bnz	u8140
  7031  004BE2  500B               	movf	___fleq@ff2+1,w,c
  7032  004BE4  1807               	xorwf	___fleq@ff1+1,w,c
  7033  004BE6  E107               	bnz	u8140
  7034  004BE8  500C               	movf	___fleq@ff2+2,w,c
  7035  004BEA  1808               	xorwf	___fleq@ff1+2,w,c
  7036  004BEC  E104               	bnz	u8140
  7037  004BEE  500D               	movf	___fleq@ff2+3,w,c
  7038  004BF0  1809               	xorwf	___fleq@ff1+3,w,c
  7039  004BF2  B4D8               	btfsc	status,2,c
  7040  004BF4  D002               	goto	l6049
  7041  004BF6                     u8140:
  7042  004BF6  90D8               	bcf	status,0,c
  7043  004BF8  0012               	return	
  7044  004BFA                     l6049:
  7045  004BFA  80D8               	bsf	status,0,c
  7046  004BFC  0012               	return		;funcret
  7047  004BFE                     __end_of___fleq:
  7048                           	opt callstack 0
  7049                           
  7050 ;; *************** function ___fldiv *****************
  7051 ;; Defined at:
  7052 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;  b               4    5[COMRAM] unsigned char 
  7055 ;;  a               4    9[COMRAM] unsigned char 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  grs             4   24[COMRAM] unsigned long 
  7058 ;;  rem             4   17[COMRAM] unsigned long 
  7059 ;;  new_exp         2   22[COMRAM] short 
  7060 ;;  aexp            1   29[COMRAM] unsigned char 
  7061 ;;  bexp            1   28[COMRAM] unsigned char 
  7062 ;;  sign            1   21[COMRAM] unsigned char 
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  4    5[COMRAM] unsigned char 
  7065 ;; Registers used:
  7066 ;;		wreg, status,2, status,0
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7072 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7073 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7074 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7076 ;;Total ram usage:       25 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:    2
  7079 ;; This function calls:
  7080 ;;		Nothing
  7081 ;; This function is called by:
  7082 ;;		_stof
  7083 ;;		_efgtoa
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           	psect	text27
  7088  0039BC                     __ptext27:
  7089                           	opt callstack 0
  7090  0039BC                     ___fldiv:
  7091                           	opt callstack 26
  7092                           
  7093                           ;incstack = 0
  7094  0039BC  5009               	movf	___fldiv@b+3,w,c
  7095  0039BE  0B80               	andlw	128
  7096  0039C0  6E16               	movwf	___fldiv@sign,c
  7097  0039C2  5009               	movf	___fldiv@b+3,w,c
  7098  0039C4  2409               	addwf	___fldiv@b+3,w,c
  7099  0039C6  6E1D               	movwf	___fldiv@bexp,c
  7100  0039C8  BE08               	btfsc	___fldiv@b+2,7,c
  7101  0039CA  801D               	bsf	___fldiv@bexp,0,c
  7102  0039CC  501D               	movf	___fldiv@bexp,w,c
  7103  0039CE  B4D8               	btfsc	status,2,c
  7104  0039D0  D00D               	goto	l5699
  7105  0039D2  281D               	incf	___fldiv@bexp,w,c
  7106  0039D4  A4D8               	btfss	status,2,c
  7107  0039D6  D008               	goto	l5695
  7108  0039D8  0E00               	movlw	0
  7109  0039DA  6E06               	movwf	___fldiv@b,c
  7110  0039DC  0E00               	movlw	0
  7111  0039DE  6E07               	movwf	___fldiv@b+1,c
  7112  0039E0  0E00               	movlw	0
  7113  0039E2  6E08               	movwf	___fldiv@b+2,c
  7114  0039E4  0E00               	movlw	0
  7115  0039E6  6E09               	movwf	___fldiv@b+3,c
  7116  0039E8                     l5695:
  7117  0039E8  8E08               	bsf	___fldiv@b+2,7,c
  7118  0039EA  D006               	goto	L11
  7119  0039EC                     l5699:
  7120  0039EC  0E00               	movlw	0
  7121  0039EE  6E06               	movwf	___fldiv@b,c
  7122  0039F0  0E00               	movlw	0
  7123  0039F2  6E07               	movwf	___fldiv@b+1,c
  7124  0039F4  0E00               	movlw	0
  7125  0039F6  6E08               	movwf	___fldiv@b+2,c
  7126  0039F8                     L11:
  7127  0039F8  0E00               	movlw	0
  7128  0039FA  6E09               	movwf	___fldiv@b+3,c
  7129  0039FC  500D               	movf	___fldiv@a+3,w,c
  7130  0039FE  0B80               	andlw	128
  7131  003A00  1A16               	xorwf	___fldiv@sign,f,c
  7132  003A02  500D               	movf	___fldiv@a+3,w,c
  7133  003A04  240D               	addwf	___fldiv@a+3,w,c
  7134  003A06  6E1E               	movwf	___fldiv@aexp,c
  7135  003A08  BE0C               	btfsc	___fldiv@a+2,7,c
  7136  003A0A  801E               	bsf	___fldiv@aexp,0,c
  7137  003A0C  501E               	movf	___fldiv@aexp,w,c
  7138  003A0E  B4D8               	btfsc	status,2,c
  7139  003A10  D00D               	goto	l5719
  7140  003A12  281E               	incf	___fldiv@aexp,w,c
  7141  003A14  A4D8               	btfss	status,2,c
  7142  003A16  D008               	goto	l5715
  7143  003A18  0E00               	movlw	0
  7144  003A1A  6E0A               	movwf	___fldiv@a,c
  7145  003A1C  0E00               	movlw	0
  7146  003A1E  6E0B               	movwf	___fldiv@a+1,c
  7147  003A20  0E00               	movlw	0
  7148  003A22  6E0C               	movwf	___fldiv@a+2,c
  7149  003A24  0E00               	movlw	0
  7150  003A26  6E0D               	movwf	___fldiv@a+3,c
  7151  003A28                     l5715:
  7152  003A28  8E0C               	bsf	___fldiv@a+2,7,c
  7153  003A2A  D006               	goto	L12
  7154  003A2C                     l5719:
  7155  003A2C  0E00               	movlw	0
  7156  003A2E  6E0A               	movwf	___fldiv@a,c
  7157  003A30  0E00               	movlw	0
  7158  003A32  6E0B               	movwf	___fldiv@a+1,c
  7159  003A34  0E00               	movlw	0
  7160  003A36  6E0C               	movwf	___fldiv@a+2,c
  7161  003A38                     L12:
  7162  003A38  0E00               	movlw	0
  7163  003A3A  6E0D               	movwf	___fldiv@a+3,c
  7164  003A3C  500A               	movf	___fldiv@a,w,c
  7165  003A3E  100B               	iorwf	___fldiv@a+1,w,c
  7166  003A40  100C               	iorwf	___fldiv@a+2,w,c
  7167  003A42  100D               	iorwf	___fldiv@a+3,w,c
  7168  003A44  A4D8               	btfss	status,2,c
  7169  003A46  D01B               	goto	l5733
  7170  003A48  0E00               	movlw	0
  7171  003A4A  6E06               	movwf	___fldiv@b,c
  7172  003A4C  0E00               	movlw	0
  7173  003A4E  6E07               	movwf	___fldiv@b+1,c
  7174  003A50  0E00               	movlw	0
  7175  003A52  6E08               	movwf	___fldiv@b+2,c
  7176  003A54  0E00               	movlw	0
  7177  003A56  6E09               	movwf	___fldiv@b+3,c
  7178  003A58  0E80               	movlw	128
  7179  003A5A  1208               	iorwf	___fldiv@b+2,f,c
  7180  003A5C  0E7F               	movlw	127
  7181  003A5E  1209               	iorwf	___fldiv@b+3,f,c
  7182  003A60                     l5727:
  7183  003A60  5016               	movf	___fldiv@sign,w,c
  7184  003A62  1209               	iorwf	___fldiv@b+3,f,c
  7185  003A64  0060  F018  F006   	movff	___fldiv@b,?___fldiv
  7186  003A6A  0060  F01C  F007   	movff	___fldiv@b+1,?___fldiv+1
  7187  003A70  0060  F020  F008   	movff	___fldiv@b+2,?___fldiv+2
  7188  003A76  0060  F024  F009   	movff	___fldiv@b+3,?___fldiv+3
  7189  003A7C  0012               	return	
  7190  003A7E                     l5733:
  7191  003A7E  501D               	movf	___fldiv@bexp,w,c
  7192  003A80  A4D8               	btfss	status,2,c
  7193  003A82  D009               	goto	l5741
  7194  003A84  0E00               	movlw	0
  7195  003A86  6E06               	movwf	?___fldiv,c
  7196  003A88  0E00               	movlw	0
  7197  003A8A  6E07               	movwf	?___fldiv+1,c
  7198  003A8C  0E00               	movlw	0
  7199  003A8E  6E08               	movwf	?___fldiv+2,c
  7200  003A90  0E00               	movlw	0
  7201  003A92  6E09               	movwf	?___fldiv+3,c
  7202  003A94  0012               	return	
  7203  003A96                     l5741:
  7204  003A96  501E               	movf	___fldiv@aexp,w,c
  7205  003A98  0060  F074  F00E   	movff	___fldiv@bexp,??___fldiv
  7206  003A9E  6A0F               	clrf	(??___fldiv+1)& (0+255),c
  7207  003AA0  5E0E               	subwf	??___fldiv,f,c
  7208  003AA2  0E00               	movlw	0
  7209  003AA4  5A0F               	subwfb	??___fldiv+1,f,c
  7210  003AA6  0E7F               	movlw	127
  7211  003AA8  240E               	addwf	??___fldiv,w,c
  7212  003AAA  6E17               	movwf	___fldiv@new_exp,c
  7213  003AAC  0E00               	movlw	0
  7214  003AAE  200F               	addwfc	??___fldiv+1,w,c
  7215  003AB0  6E18               	movwf	___fldiv@new_exp+1,c
  7216  003AB2  0060  F018  F012   	movff	___fldiv@b,___fldiv@rem
  7217  003AB8  0060  F01C  F013   	movff	___fldiv@b+1,___fldiv@rem+1
  7218  003ABE  0060  F020  F014   	movff	___fldiv@b+2,___fldiv@rem+2
  7219  003AC4  0060  F024  F015   	movff	___fldiv@b+3,___fldiv@rem+3
  7220  003ACA  0E00               	movlw	0
  7221  003ACC  6E06               	movwf	___fldiv@b,c
  7222  003ACE  0E00               	movlw	0
  7223  003AD0  6E07               	movwf	___fldiv@b+1,c
  7224  003AD2  0E00               	movlw	0
  7225  003AD4  6E08               	movwf	___fldiv@b+2,c
  7226  003AD6  0E00               	movlw	0
  7227  003AD8  6E09               	movwf	___fldiv@b+3,c
  7228  003ADA  0E00               	movlw	0
  7229  003ADC  6E19               	movwf	___fldiv@grs,c
  7230  003ADE  0E00               	movlw	0
  7231  003AE0  6E1A               	movwf	___fldiv@grs+1,c
  7232  003AE2  0E00               	movlw	0
  7233  003AE4  6E1B               	movwf	___fldiv@grs+2,c
  7234  003AE6  0E00               	movlw	0
  7235  003AE8  6E1C               	movwf	___fldiv@grs+3,c
  7236  003AEA  0E00               	movlw	0
  7237  003AEC  6E1E               	movwf	___fldiv@aexp,c
  7238  003AEE  D028               	goto	l1268
  7239  003AF0                     l5751:
  7240  003AF0  501E               	movf	___fldiv@aexp,w,c
  7241  003AF2  B4D8               	btfsc	status,2,c
  7242  003AF4  D011               	goto	l5759
  7243  003AF6  90D8               	bcf	status,0,c
  7244  003AF8  3612               	rlcf	___fldiv@rem,f,c
  7245  003AFA  3613               	rlcf	___fldiv@rem+1,f,c
  7246  003AFC  3614               	rlcf	___fldiv@rem+2,f,c
  7247  003AFE  3615               	rlcf	___fldiv@rem+3,f,c
  7248  003B00  90D8               	bcf	status,0,c
  7249  003B02  3606               	rlcf	___fldiv@b,f,c
  7250  003B04  3607               	rlcf	___fldiv@b+1,f,c
  7251  003B06  3608               	rlcf	___fldiv@b+2,f,c
  7252  003B08  3609               	rlcf	___fldiv@b+3,f,c
  7253  003B0A  BE1C               	btfsc	___fldiv@grs+3,7,c
  7254  003B0C  8006               	bsf	___fldiv@b,0,c
  7255  003B0E  90D8               	bcf	status,0,c
  7256  003B10  3619               	rlcf	___fldiv@grs,f,c
  7257  003B12  361A               	rlcf	___fldiv@grs+1,f,c
  7258  003B14  361B               	rlcf	___fldiv@grs+2,f,c
  7259  003B16  361C               	rlcf	___fldiv@grs+3,f,c
  7260  003B18                     l5759:
  7261  003B18  500A               	movf	___fldiv@a,w,c
  7262  003B1A  5C12               	subwf	___fldiv@rem,w,c
  7263  003B1C  500B               	movf	___fldiv@a+1,w,c
  7264  003B1E  5813               	subwfb	___fldiv@rem+1,w,c
  7265  003B20  500C               	movf	___fldiv@a+2,w,c
  7266  003B22  5814               	subwfb	___fldiv@rem+2,w,c
  7267  003B24  500D               	movf	___fldiv@a+3,w,c
  7268  003B26  5815               	subwfb	___fldiv@rem+3,w,c
  7269  003B28  A0D8               	btfss	status,0,c
  7270  003B2A  D009               	goto	l5765
  7271  003B2C  8C1C               	bsf	___fldiv@grs+3,6,c
  7272  003B2E  500A               	movf	___fldiv@a,w,c
  7273  003B30  5E12               	subwf	___fldiv@rem,f,c
  7274  003B32  500B               	movf	___fldiv@a+1,w,c
  7275  003B34  5A13               	subwfb	___fldiv@rem+1,f,c
  7276  003B36  500C               	movf	___fldiv@a+2,w,c
  7277  003B38  5A14               	subwfb	___fldiv@rem+2,f,c
  7278  003B3A  500D               	movf	___fldiv@a+3,w,c
  7279  003B3C  5A15               	subwfb	___fldiv@rem+3,f,c
  7280  003B3E                     l5765:
  7281  003B3E  2A1E               	incf	___fldiv@aexp,f,c
  7282  003B40                     l1268:
  7283  003B40  0E19               	movlw	25
  7284  003B42  641E               	cpfsgt	___fldiv@aexp,c
  7285  003B44  D7D5               	goto	l5751
  7286  003B46  5012               	movf	___fldiv@rem,w,c
  7287  003B48  1013               	iorwf	___fldiv@rem+1,w,c
  7288  003B4A  1014               	iorwf	___fldiv@rem+2,w,c
  7289  003B4C  1015               	iorwf	___fldiv@rem+3,w,c
  7290  003B4E  B4D8               	btfsc	status,2,c
  7291  003B50  D011               	goto	l5777
  7292  003B52  8019               	bsf	___fldiv@grs,0,c
  7293  003B54  D00F               	goto	l5777
  7294  003B56                     l5771:
  7295  003B56  90D8               	bcf	status,0,c
  7296  003B58  3606               	rlcf	___fldiv@b,f,c
  7297  003B5A  3607               	rlcf	___fldiv@b+1,f,c
  7298  003B5C  3608               	rlcf	___fldiv@b+2,f,c
  7299  003B5E  3609               	rlcf	___fldiv@b+3,f,c
  7300  003B60  BE1C               	btfsc	___fldiv@grs+3,7,c
  7301  003B62  8006               	bsf	___fldiv@b,0,c
  7302  003B64  90D8               	bcf	status,0,c
  7303  003B66  3619               	rlcf	___fldiv@grs,f,c
  7304  003B68  361A               	rlcf	___fldiv@grs+1,f,c
  7305  003B6A  361B               	rlcf	___fldiv@grs+2,f,c
  7306  003B6C  361C               	rlcf	___fldiv@grs+3,f,c
  7307  003B6E  0617               	decf	___fldiv@new_exp,f,c
  7308  003B70  A0D8               	btfss	status,0,c
  7309  003B72  0618               	decf	___fldiv@new_exp+1,f,c
  7310  003B74                     l5777:
  7311  003B74  AE08               	btfss	___fldiv@b+2,7,c
  7312  003B76  D7EF               	goto	l5771
  7313  003B78  0E00               	movlw	0
  7314  003B7A  6E1E               	movwf	___fldiv@aexp,c
  7315  003B7C  AE1C               	btfss	___fldiv@grs+3,7,c
  7316  003B7E  D017               	goto	l1279
  7317  003B80  0EFF               	movlw	255
  7318  003B82  1419               	andwf	___fldiv@grs,w,c
  7319  003B84  6E0E               	movwf	??___fldiv& (0+255),c
  7320  003B86  0EFF               	movlw	255
  7321  003B88  141A               	andwf	___fldiv@grs+1,w,c
  7322  003B8A  6E0F               	movwf	(??___fldiv+1)& (0+255),c
  7323  003B8C  0EFF               	movlw	255
  7324  003B8E  141B               	andwf	___fldiv@grs+2,w,c
  7325  003B90  6E10               	movwf	(??___fldiv+2)& (0+255),c
  7326  003B92  0E7F               	movlw	127
  7327  003B94  141C               	andwf	___fldiv@grs+3,w,c
  7328  003B96  6E11               	movwf	(??___fldiv+3)& (0+255),c
  7329  003B98  500E               	movf	??___fldiv,w,c
  7330  003B9A  100F               	iorwf	??___fldiv+1,w,c
  7331  003B9C  1010               	iorwf	??___fldiv+2,w,c
  7332  003B9E  1011               	iorwf	??___fldiv+3,w,c
  7333  003BA0  B4D8               	btfsc	status,2,c
  7334  003BA2  D003               	goto	l1280
  7335  003BA4                     u7740:
  7336  003BA4  0E01               	movlw	1
  7337  003BA6  6E1E               	movwf	___fldiv@aexp,c
  7338  003BA8  D002               	goto	l1279
  7339  003BAA                     l1280:
  7340  003BAA  B006               	btfsc	___fldiv@b,0,c
  7341  003BAC  D7FB               	goto	u7740
  7342  003BAE                     l1279:
  7343  003BAE  501E               	movf	___fldiv@aexp,w,c
  7344  003BB0  B4D8               	btfsc	status,2,c
  7345  003BB2  D027               	goto	l5797
  7346  003BB4  0E01               	movlw	1
  7347  003BB6  2606               	addwf	___fldiv@b,f,c
  7348  003BB8  0E00               	movlw	0
  7349  003BBA  2207               	addwfc	___fldiv@b+1,f,c
  7350  003BBC  2208               	addwfc	___fldiv@b+2,f,c
  7351  003BBE  2209               	addwfc	___fldiv@b+3,f,c
  7352  003BC0  A009               	btfss	___fldiv@b+3,0,c
  7353  003BC2  D01F               	goto	l5797
  7354  003BC4  0060  F018  F00E   	movff	___fldiv@b,??___fldiv
  7355  003BCA  0060  F01C  F00F   	movff	___fldiv@b+1,??___fldiv+1
  7356  003BD0  0060  F020  F010   	movff	___fldiv@b+2,??___fldiv+2
  7357  003BD6  0060  F024  F011   	movff	___fldiv@b+3,??___fldiv+3
  7358  003BDC  3411               	rlcf	??___fldiv+3,w,c
  7359  003BDE  3211               	rrcf	??___fldiv+3,f,c
  7360  003BE0  3210               	rrcf	??___fldiv+2,f,c
  7361  003BE2  320F               	rrcf	??___fldiv+1,f,c
  7362  003BE4  320E               	rrcf	??___fldiv,f,c
  7363  003BE6  0060  F038  F006   	movff	??___fldiv,___fldiv@b
  7364  003BEC  0060  F03C  F007   	movff	??___fldiv+1,___fldiv@b+1
  7365  003BF2  0060  F040  F008   	movff	??___fldiv+2,___fldiv@b+2
  7366  003BF8  0060  F044  F009   	movff	??___fldiv+3,___fldiv@b+3
  7367  003BFE  4A17               	infsnz	___fldiv@new_exp,f,c
  7368  003C00  2A18               	incf	___fldiv@new_exp+1,f,c
  7369  003C02                     l5797:
  7370  003C02  BE18               	btfsc	___fldiv@new_exp+1,7,c
  7371  003C04  D010               	goto	l5801
  7372  003C06  5018               	movf	___fldiv@new_exp+1,w,c
  7373  003C08  E103               	bnz	u7780
  7374  003C0A  2817               	incf	___fldiv@new_exp,w,c
  7375  003C0C  A0D8               	btfss	status,0,c
  7376  003C0E  D00B               	goto	l5801
  7377  003C10                     u7780:
  7378  003C10  0E00               	movlw	0
  7379  003C12  6E18               	movwf	___fldiv@new_exp+1,c
  7380  003C14  6817               	setf	___fldiv@new_exp,c
  7381  003C16  0E00               	movlw	0
  7382  003C18  6E06               	movwf	___fldiv@b,c
  7383  003C1A  0E00               	movlw	0
  7384  003C1C  6E07               	movwf	___fldiv@b+1,c
  7385  003C1E  0E00               	movlw	0
  7386  003C20  6E08               	movwf	___fldiv@b+2,c
  7387  003C22  0E00               	movlw	0
  7388  003C24  6E09               	movwf	___fldiv@b+3,c
  7389  003C26                     l5801:
  7390  003C26  BE18               	btfsc	___fldiv@new_exp+1,7,c
  7391  003C28  D005               	goto	u7790
  7392  003C2A  5018               	movf	___fldiv@new_exp+1,w,c
  7393  003C2C  E111               	bnz	l5805
  7394  003C2E  0417               	decf	___fldiv@new_exp,w,c
  7395  003C30  B0D8               	btfsc	status,0,c
  7396  003C32  D00E               	goto	l5805
  7397  003C34                     u7790:
  7398  003C34  0E00               	movlw	0
  7399  003C36  6E18               	movwf	___fldiv@new_exp+1,c
  7400  003C38  0E00               	movlw	0
  7401  003C3A  6E17               	movwf	___fldiv@new_exp,c
  7402  003C3C  0E00               	movlw	0
  7403  003C3E  6E06               	movwf	___fldiv@b,c
  7404  003C40  0E00               	movlw	0
  7405  003C42  6E07               	movwf	___fldiv@b+1,c
  7406  003C44  0E00               	movlw	0
  7407  003C46  6E08               	movwf	___fldiv@b+2,c
  7408  003C48  0E00               	movlw	0
  7409  003C4A  6E09               	movwf	___fldiv@b+3,c
  7410  003C4C  0E00               	movlw	0
  7411  003C4E  6E16               	movwf	___fldiv@sign,c
  7412  003C50                     l5805:
  7413  003C50  0060  F05C  F01D   	movff	___fldiv@new_exp,___fldiv@bexp
  7414  003C56  A01D               	btfss	___fldiv@bexp,0,c
  7415  003C58  D002               	goto	l5811
  7416  003C5A  8E08               	bsf	___fldiv@b+2,7,c
  7417  003C5C  D001               	goto	l5813
  7418  003C5E                     l5811:
  7419  003C5E  9E08               	bcf	___fldiv@b+2,7,c
  7420  003C60                     l5813:
  7421  003C60  90D8               	bcf	status,0,c
  7422  003C62  301D               	rrcf	___fldiv@bexp,w,c
  7423  003C64  6E09               	movwf	___fldiv@b+3,c
  7424  003C66  D6FC               	goto	l5727
  7425  003C68                     __end_of___fldiv:
  7426                           	opt callstack 0
  7427                           
  7428 ;; *************** function ___awmod *****************
  7429 ;; Defined at:
  7430 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  dividend        2    5[COMRAM] int 
  7433 ;;  divisor         2    7[COMRAM] int 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;  sign            1   10[COMRAM] unsigned char 
  7436 ;;  counter         1    9[COMRAM] unsigned char 
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  2    5[COMRAM] int 
  7439 ;; Registers used:
  7440 ;;		wreg, status,2, status,0
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7449 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7450 ;;Total ram usage:        6 bytes
  7451 ;; Hardware stack levels used:    1
  7452 ;; Hardware stack levels required when called:    2
  7453 ;; This function calls:
  7454 ;;		Nothing
  7455 ;; This function is called by:
  7456 ;;		_efgtoa
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text28
  7461  004D08                     __ptext28:
  7462                           	opt callstack 0
  7463  004D08                     ___awmod:
  7464                           	opt callstack 23
  7465                           
  7466                           ;incstack = 0
  7467  004D08  0E00               	movlw	0
  7468  004D0A  6E0B               	movwf	___awmod@sign,c
  7469  004D0C  AE07               	btfss	___awmod@dividend+1,7,c
  7470  004D0E  D006               	goto	l6009
  7471  004D10  6C06               	negf	___awmod@dividend,c
  7472  004D12  1E07               	comf	___awmod@dividend+1,f,c
  7473  004D14  B0D8               	btfsc	status,0,c
  7474  004D16  2A07               	incf	___awmod@dividend+1,f,c
  7475  004D18  0E01               	movlw	1
  7476  004D1A  6E0B               	movwf	___awmod@sign,c
  7477  004D1C                     l6009:
  7478  004D1C  AE09               	btfss	___awmod@divisor+1,7,c
  7479  004D1E  D004               	goto	l6013
  7480  004D20  6C08               	negf	___awmod@divisor,c
  7481  004D22  1E09               	comf	___awmod@divisor+1,f,c
  7482  004D24  B0D8               	btfsc	status,0,c
  7483  004D26  2A09               	incf	___awmod@divisor+1,f,c
  7484  004D28                     l6013:
  7485  004D28  5008               	movf	___awmod@divisor,w,c
  7486  004D2A  1009               	iorwf	___awmod@divisor+1,w,c
  7487  004D2C  B4D8               	btfsc	status,2,c
  7488  004D2E  D018               	goto	l6029
  7489  004D30  0E01               	movlw	1
  7490  004D32  6E0A               	movwf	___awmod@counter,c
  7491  004D34  D004               	goto	l6019
  7492  004D36                     l6017:
  7493  004D36  90D8               	bcf	status,0,c
  7494  004D38  3608               	rlcf	___awmod@divisor,f,c
  7495  004D3A  3609               	rlcf	___awmod@divisor+1,f,c
  7496  004D3C  2A0A               	incf	___awmod@counter,f,c
  7497  004D3E                     l6019:
  7498  004D3E  AE09               	btfss	___awmod@divisor+1,7,c
  7499  004D40  D7FA               	goto	l6017
  7500  004D42                     u8090:
  7501  004D42  5008               	movf	___awmod@divisor,w,c
  7502  004D44  5C06               	subwf	___awmod@dividend,w,c
  7503  004D46  5009               	movf	___awmod@divisor+1,w,c
  7504  004D48  5807               	subwfb	___awmod@dividend+1,w,c
  7505  004D4A  A0D8               	btfss	status,0,c
  7506  004D4C  D004               	goto	l6025
  7507  004D4E  5008               	movf	___awmod@divisor,w,c
  7508  004D50  5E06               	subwf	___awmod@dividend,f,c
  7509  004D52  5009               	movf	___awmod@divisor+1,w,c
  7510  004D54  5A07               	subwfb	___awmod@dividend+1,f,c
  7511  004D56                     l6025:
  7512  004D56  90D8               	bcf	status,0,c
  7513  004D58  3209               	rrcf	___awmod@divisor+1,f,c
  7514  004D5A  3208               	rrcf	___awmod@divisor,f,c
  7515  004D5C  2E0A               	decfsz	___awmod@counter,f,c
  7516  004D5E  D7F1               	goto	u8090
  7517  004D60                     l6029:
  7518  004D60  500B               	movf	___awmod@sign,w,c
  7519  004D62  B4D8               	btfsc	status,2,c
  7520  004D64  D004               	goto	l6033
  7521  004D66  6C06               	negf	___awmod@dividend,c
  7522  004D68  1E07               	comf	___awmod@dividend+1,f,c
  7523  004D6A  B0D8               	btfsc	status,0,c
  7524  004D6C  2A07               	incf	___awmod@dividend+1,f,c
  7525  004D6E                     l6033:
  7526  004D6E  0060  F018  F006   	movff	___awmod@dividend,?___awmod
  7527  004D74  0060  F01C  F007   	movff	___awmod@dividend+1,?___awmod+1
  7528  004D7A  0012               	return		;funcret
  7529  004D7C                     __end_of___awmod:
  7530                           	opt callstack 0
  7531                           
  7532 ;; *************** function ___awdiv *****************
  7533 ;; Defined at:
  7534 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;  dividend        2    5[COMRAM] int 
  7537 ;;  divisor         2    7[COMRAM] int 
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;  quotient        2   11[COMRAM] int 
  7540 ;;  sign            1   10[COMRAM] unsigned char 
  7541 ;;  counter         1    9[COMRAM] unsigned char 
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  2    5[COMRAM] int 
  7544 ;; Registers used:
  7545 ;;		wreg, status,2, status,0
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7551 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7552 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7554 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7555 ;;Total ram usage:        8 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; Hardware stack levels required when called:    2
  7558 ;; This function calls:
  7559 ;;		Nothing
  7560 ;; This function is called by:
  7561 ;;		_efgtoa
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text29
  7566  004BFE                     __ptext29:
  7567                           	opt callstack 0
  7568  004BFE                     ___awdiv:
  7569                           	opt callstack 23
  7570                           
  7571                           ;incstack = 0
  7572  004BFE  0E00               	movlw	0
  7573  004C00  6E0B               	movwf	___awdiv@sign,c
  7574  004C02  AE09               	btfss	___awdiv@divisor+1,7,c
  7575  004C04  D006               	goto	l5965
  7576  004C06  6C08               	negf	___awdiv@divisor,c
  7577  004C08  1E09               	comf	___awdiv@divisor+1,f,c
  7578  004C0A  B0D8               	btfsc	status,0,c
  7579  004C0C  2A09               	incf	___awdiv@divisor+1,f,c
  7580  004C0E  0E01               	movlw	1
  7581  004C10  6E0B               	movwf	___awdiv@sign,c
  7582  004C12                     l5965:
  7583  004C12  AE07               	btfss	___awdiv@dividend+1,7,c
  7584  004C14  D006               	goto	l5971
  7585  004C16  6C06               	negf	___awdiv@dividend,c
  7586  004C18  1E07               	comf	___awdiv@dividend+1,f,c
  7587  004C1A  B0D8               	btfsc	status,0,c
  7588  004C1C  2A07               	incf	___awdiv@dividend+1,f,c
  7589  004C1E  0E01               	movlw	1
  7590  004C20  1A0B               	xorwf	___awdiv@sign,f,c
  7591  004C22                     l5971:
  7592  004C22  0E00               	movlw	0
  7593  004C24  6E0D               	movwf	___awdiv@quotient+1,c
  7594  004C26  0E00               	movlw	0
  7595  004C28  6E0C               	movwf	___awdiv@quotient,c
  7596  004C2A  5008               	movf	___awdiv@divisor,w,c
  7597  004C2C  1009               	iorwf	___awdiv@divisor+1,w,c
  7598  004C2E  B4D8               	btfsc	status,2,c
  7599  004C30  D01C               	goto	l5993
  7600  004C32  0E01               	movlw	1
  7601  004C34  6E0A               	movwf	___awdiv@counter,c
  7602  004C36  D004               	goto	l5979
  7603  004C38                     l5977:
  7604  004C38  90D8               	bcf	status,0,c
  7605  004C3A  3608               	rlcf	___awdiv@divisor,f,c
  7606  004C3C  3609               	rlcf	___awdiv@divisor+1,f,c
  7607  004C3E  2A0A               	incf	___awdiv@counter,f,c
  7608  004C40                     l5979:
  7609  004C40  AE09               	btfss	___awdiv@divisor+1,7,c
  7610  004C42  D7FA               	goto	l5977
  7611  004C44                     u8030:
  7612  004C44  90D8               	bcf	status,0,c
  7613  004C46  360C               	rlcf	___awdiv@quotient,f,c
  7614  004C48  360D               	rlcf	___awdiv@quotient+1,f,c
  7615  004C4A  5008               	movf	___awdiv@divisor,w,c
  7616  004C4C  5C06               	subwf	___awdiv@dividend,w,c
  7617  004C4E  5009               	movf	___awdiv@divisor+1,w,c
  7618  004C50  5807               	subwfb	___awdiv@dividend+1,w,c
  7619  004C52  A0D8               	btfss	status,0,c
  7620  004C54  D005               	goto	l5989
  7621  004C56  5008               	movf	___awdiv@divisor,w,c
  7622  004C58  5E06               	subwf	___awdiv@dividend,f,c
  7623  004C5A  5009               	movf	___awdiv@divisor+1,w,c
  7624  004C5C  5A07               	subwfb	___awdiv@dividend+1,f,c
  7625  004C5E  800C               	bsf	___awdiv@quotient,0,c
  7626  004C60                     l5989:
  7627  004C60  90D8               	bcf	status,0,c
  7628  004C62  3209               	rrcf	___awdiv@divisor+1,f,c
  7629  004C64  3208               	rrcf	___awdiv@divisor,f,c
  7630  004C66  2E0A               	decfsz	___awdiv@counter,f,c
  7631  004C68  D7ED               	goto	u8030
  7632  004C6A                     l5993:
  7633  004C6A  500B               	movf	___awdiv@sign,w,c
  7634  004C6C  B4D8               	btfsc	status,2,c
  7635  004C6E  D004               	goto	l5997
  7636  004C70  6C0C               	negf	___awdiv@quotient,c
  7637  004C72  1E0D               	comf	___awdiv@quotient+1,f,c
  7638  004C74  B0D8               	btfsc	status,0,c
  7639  004C76  2A0D               	incf	___awdiv@quotient+1,f,c
  7640  004C78                     l5997:
  7641  004C78  0060  F030  F006   	movff	___awdiv@quotient,?___awdiv
  7642  004C7E  0060  F034  F007   	movff	___awdiv@quotient+1,?___awdiv+1
  7643  004C84  0012               	return		;funcret
  7644  004C86                     __end_of___awdiv:
  7645                           	opt callstack 0
  7646                           
  7647 ;; *************** function _memset *****************
  7648 ;; Defined at:
  7649 ;;		line 312 in file "main.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  st              2    5[COMRAM] PTR unsigned char 
  7652 ;;		 -> tx_buffer(55), 
  7653 ;;  x               1    7[COMRAM] unsigned char 
  7654 ;;  size            2    8[COMRAM] int 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;  i               2   11[COMRAM] int 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  1    wreg      void 
  7659 ;; Registers used:
  7660 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7666 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7667 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7668 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7669 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7670 ;;Total ram usage:        8 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    2
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_UART_handler
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text30
  7681  005178                     __ptext30:
  7682                           	opt callstack 0
  7683  005178                     _memset:
  7684                           	opt callstack 27
  7685                           
  7686                           ;main.c: 313:     for(int i=0;i<size;i++){
  7687                           
  7688                           ;incstack = 0
  7689  005178  0E00               	movlw	0
  7690  00517A  6E0D               	movwf	memset@i+1,c
  7691  00517C  0E00               	movlw	0
  7692  00517E  6E0C               	movwf	memset@i,c
  7693  005180  D00B               	goto	l6609
  7694  005182                     l6605:
  7695                           
  7696                           ;main.c: 314:         st[i] = x;
  7697  005182  500C               	movf	memset@i,w,c
  7698  005184  2406               	addwf	memset@st,w,c
  7699  005186  6ED9               	movwf	fsr2l,c
  7700  005188  500D               	movf	memset@i+1,w,c
  7701  00518A  2007               	addwfc	memset@st+1,w,c
  7702  00518C  6EDA               	movwf	fsr2h,c
  7703  00518E  0060  F023  FFDF   	movff	memset@x,indf2
  7704                           
  7705                           ;main.c: 315:     }
  7706  005194  4A0C               	infsnz	memset@i,f,c
  7707  005196  2A0D               	incf	memset@i+1,f,c
  7708  005198                     l6609:
  7709  005198  5009               	movf	memset@size,w,c
  7710  00519A  5C0C               	subwf	memset@i,w,c
  7711  00519C  500D               	movf	memset@i+1,w,c
  7712  00519E  0A80               	xorlw	128
  7713  0051A0  6E0B               	movwf	??_memset& (0+255),c
  7714  0051A2  500A               	movf	memset@size+1,w,c
  7715  0051A4  0A80               	xorlw	128
  7716  0051A6  580B               	subwfb	??_memset& (0+255),w,c
  7717  0051A8  B0D8               	btfsc	status,0,c
  7718  0051AA  0012               	return	
  7719  0051AC  D7EA               	goto	l6605
  7720  0051AE                     __end_of_memset:
  7721                           	opt callstack 0
  7722                           
  7723 ;; *************** function _UART1_SendString *****************
  7724 ;; Defined at:
  7725 ;;		line 57 in file "UART1.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  str             2    9[COMRAM] PTR unsigned char 
  7728 ;;		 -> tx_buffer(55), 
  7729 ;;  size            2   11[COMRAM] int 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;  attempts        2   15[COMRAM] unsigned int 
  7732 ;;  i               2   13[COMRAM] unsigned int 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      unsigned char 
  7735 ;; Registers used:
  7736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7743 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7745 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7746 ;;Total ram usage:        8 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    3
  7749 ;; This function calls:
  7750 ;;		_UART1_SendByte
  7751 ;; This function is called by:
  7752 ;;		_UART_handler
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           
  7756                           	psect	text31
  7757  004ADC                     __ptext31:
  7758                           	opt callstack 0
  7759  004ADC                     _UART1_SendString:
  7760                           	opt callstack 26
  7761                           
  7762                           ;UART1.c: 58:     unsigned int attempts = 65000,i;
  7763                           
  7764                           ;incstack = 0
  7765  004ADC  0EFD               	movlw	253
  7766  004ADE  6E11               	movwf	UART1_SendString@attempts+1,c
  7767  004AE0  0EE8               	movlw	232
  7768  004AE2  6E10               	movwf	UART1_SendString@attempts,c
  7769                           
  7770                           ;UART1.c: 59:     for(i=0;i<size;i++){
  7771  004AE4  0E00               	movlw	0
  7772  004AE6  6E0F               	movwf	UART1_SendString@i+1,c
  7773  004AE8  0E00               	movlw	0
  7774  004AEA  6E0E               	movwf	UART1_SendString@i,c
  7775  004AEC  D01C               	goto	l6693
  7776  004AEE                     l6681:
  7777                           
  7778                           ;UART1.c: 60:         if(!UART1_SendByte(*(str + i))){
  7779  004AEE  500E               	movf	UART1_SendString@i,w,c
  7780  004AF0  240A               	addwf	UART1_SendString@str,w,c
  7781  004AF2  6ED9               	movwf	fsr2l,c
  7782  004AF4  500F               	movf	UART1_SendString@i+1,w,c
  7783  004AF6  200B               	addwfc	UART1_SendString@str+1,w,c
  7784  004AF8  6EDA               	movwf	fsr2h,c
  7785  004AFA  50DF               	movf	indf2,w,c
  7786  004AFC  EC67  F029         	call	_UART1_SendByte
  7787  004B00  0900               	iorlw	0
  7788  004B02  A4D8               	btfss	status,2,c
  7789  004B04  D006               	goto	l6685
  7790                           
  7791                           ;UART1.c: 61:             attempts --;
  7792  004B06  0610               	decf	UART1_SendString@attempts,f,c
  7793  004B08  A0D8               	btfss	status,0,c
  7794  004B0A  0611               	decf	UART1_SendString@attempts+1,f,c
  7795                           
  7796                           ;UART1.c: 62:             i --;
  7797  004B0C  060E               	decf	UART1_SendString@i,f,c
  7798  004B0E  A0D8               	btfss	status,0,c
  7799  004B10  060F               	decf	UART1_SendString@i+1,f,c
  7800  004B12                     l6685:
  7801                           
  7802                           ;UART1.c: 64:         if(!attempts)
  7803  004B12  5010               	movf	UART1_SendString@attempts,w,c
  7804  004B14  1011               	iorwf	UART1_SendString@attempts+1,w,c
  7805  004B16  B4D8               	btfsc	status,2,c
  7806  004B18  0012               	return	
  7807                           
  7808                           ;UART1.c: 66:         attempts = 65000;
  7809  004B1A  0EFD               	movlw	253
  7810  004B1C  6E11               	movwf	UART1_SendString@attempts+1,c
  7811  004B1E  0EE8               	movlw	232
  7812  004B20  6E10               	movwf	UART1_SendString@attempts,c
  7813                           
  7814                           ;UART1.c: 67:     }
  7815  004B22  4A0E               	infsnz	UART1_SendString@i,f,c
  7816  004B24  2A0F               	incf	UART1_SendString@i+1,f,c
  7817  004B26                     l6693:
  7818  004B26  500C               	movf	UART1_SendString@size,w,c
  7819  004B28  5C0E               	subwf	UART1_SendString@i,w,c
  7820  004B2A  500D               	movf	UART1_SendString@size+1,w,c
  7821  004B2C  580F               	subwfb	UART1_SendString@i+1,w,c
  7822  004B2E  A0D8               	btfss	status,0,c
  7823  004B30  D7DE               	goto	l6681
  7824                           
  7825                           ;UART1.c: 68:     attempts =65000;
  7826  004B32  0EFD               	movlw	253
  7827  004B34  6E11               	movwf	UART1_SendString@attempts+1,c
  7828  004B36  0EE8               	movlw	232
  7829  004B38  6E10               	movwf	UART1_SendString@attempts,c
  7830  004B3A                     l6697:
  7831  004B3A  0E0D               	movlw	13
  7832  004B3C  EC67  F029         	call	_UART1_SendByte
  7833  004B40  0900               	iorlw	0
  7834  004B42  A4D8               	btfss	status,2,c
  7835  004B44  D008               	goto	u9240
  7836  004B46  0610               	decf	UART1_SendString@attempts,f,c
  7837  004B48  A0D8               	btfss	status,0,c
  7838  004B4A  0611               	decf	UART1_SendString@attempts+1,f,c
  7839  004B4C  2810               	incf	UART1_SendString@attempts,w,c
  7840  004B4E  E1F5               	bnz	l6697
  7841  004B50  2811               	incf	UART1_SendString@attempts+1,w,c
  7842  004B52  A4D8               	btfss	status,2,c
  7843  004B54  D7F2               	goto	l6697
  7844  004B56                     u9240:
  7845  004B56                     l6701:
  7846  004B56  0E0A               	movlw	10
  7847  004B58  EC67  F029         	call	_UART1_SendByte
  7848  004B5C  0900               	iorlw	0
  7849  004B5E  A4D8               	btfss	status,2,c
  7850  004B60  0012               	return	
  7851  004B62  0610               	decf	UART1_SendString@attempts,f,c
  7852  004B64  A0D8               	btfss	status,0,c
  7853  004B66  0611               	decf	UART1_SendString@attempts+1,f,c
  7854  004B68  2810               	incf	UART1_SendString@attempts,w,c
  7855  004B6A  E1F5               	bnz	l6701
  7856  004B6C  2811               	incf	UART1_SendString@attempts+1,w,c
  7857  004B6E  B4D8               	btfsc	status,2,c
  7858  004B70  0012               	return	
  7859  004B72  D7F1               	goto	u9240
  7860  004B74                     __end_of_UART1_SendString:
  7861                           	opt callstack 0
  7862                           
  7863 ;; *************** function _UART1_SendByte *****************
  7864 ;; Defined at:
  7865 ;;		line 48 in file "UART1.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;  byte            1    wreg     unsigned char 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  byte            1    5[COMRAM] unsigned char 
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  1    wreg      unsigned char 
  7872 ;; Registers used:
  7873 ;;		wreg
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7883 ;;Total ram usage:        1 bytes
  7884 ;; Hardware stack levels used:    1
  7885 ;; Hardware stack levels required when called:    2
  7886 ;; This function calls:
  7887 ;;		Nothing
  7888 ;; This function is called by:
  7889 ;;		_UART1_SendString
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           	psect	text32
  7894  0052CE                     __ptext32:
  7895                           	opt callstack 0
  7896  0052CE                     _UART1_SendByte:
  7897                           	opt callstack 26
  7898                           
  7899                           ;incstack = 0
  7900                           ;UART1_SendByte@byte stored from wreg
  7901  0052CE  6E06               	movwf	UART1_SendByte@byte,c
  7902                           
  7903                           ;UART1.c: 49:     if(!PIE3bits.U1TXIE){
  7904  0052D0  0139               	movlb	57	; () banked
  7905  0052D2  B993               	btfsc	147,4,b	;volatile
  7906  0052D4  D006               	goto	l6545
  7907                           
  7908                           ; BSR set to: 57
  7909                           ;UART1.c: 50:         tx_byte = byte;
  7910  0052D6  0060  F018  F0F7   	movff	UART1_SendByte@byte,_tx_byte
  7911                           
  7912                           ; BSR set to: 57
  7913                           ;UART1.c: 51:         PIE3bits.U1TXIE = 1;
  7914  0052DC  8993               	bsf	147,4,b	;volatile
  7915                           
  7916                           ;UART1.c: 52:         return 1;
  7917  0052DE  0E01               	movlw	1
  7918  0052E0  0012               	return	
  7919  0052E2                     l6545:
  7920                           
  7921                           ; BSR set to: 57
  7922                           ;UART1.c: 54:     return 0;
  7923  0052E2  0E00               	movlw	0
  7924                           
  7925                           ; BSR set to: 57
  7926  0052E4  0012               	return		;funcret
  7927  0052E6                     __end_of_UART1_SendByte:
  7928                           	opt callstack 0
  7929                           
  7930 ;; *************** function _I2C_handler *****************
  7931 ;; Defined at:
  7932 ;;		line 89 in file "I2C.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  value           2   17[COMRAM] int 
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      void 
  7939 ;; Registers used:
  7940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7950 ;;Total ram usage:        2 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; Hardware stack levels required when called:    3
  7953 ;; This function calls:
  7954 ;;		_I2C_Transmit
  7955 ;; This function is called by:
  7956 ;;		_UART_handler
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           	psect	text33
  7961  005242                     __ptext33:
  7962                           	opt callstack 0
  7963  005242                     _I2C_handler:
  7964                           	opt callstack 26
  7965                           
  7966                           ;I2C.c: 90:     AD5272_COMMANDS[0] = (unsigned char)(0x04 | (value >> 8));
  7967                           
  7968                           ; BSR set to: 57
  7969                           ;incstack = 0
  7970  005242  5013               	movf	I2C_handler@value+1,w,c
  7971  005244  0904               	iorlw	4
  7972  005246  0100               	movlb	0	; () banked
  7973  005248  6FF8               	movwf	_AD5272_COMMANDS& (0+255),b
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;I2C.c: 91:     AD5272_COMMANDS[1] = (unsigned char)value;
  7977  00524A  0060  F048  F0F9   	movff	I2C_handler@value,_AD5272_COMMANDS+1
  7978                           
  7979                           ; BSR set to: 0
  7980  005250  0EF8               	movlw	low _AD5272_COMMANDS
  7981  005252  6E06               	movwf	I2C_Transmit@buffer,c
  7982  005254  0E00               	movlw	high _AD5272_COMMANDS
  7983  005256  6E07               	movwf	I2C_Transmit@buffer+1,c
  7984  005258  0E02               	movlw	2
  7985  00525A  6E08               	movwf	I2C_Transmit@buffer_size,c
  7986  00525C  0E5E               	movlw	94
  7987  00525E  6E09               	movwf	I2C_Transmit@address,c
  7988  005260  EC1B  F025         	call	_I2C_Transmit	;wreg free
  7989  005264                     l6629:
  7990  005264  0100               	movlb	0	; () banked
  7991  005266  51F2               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  7992  005268  A4D8               	btfss	status,2,c
  7993  00526A  0012               	return	
  7994  00526C  D7FB               	goto	l6629
  7995  00526E                     __end_of_I2C_handler:
  7996                           	opt callstack 0
  7997                           
  7998 ;; *************** function _I2C_Transmit *****************
  7999 ;; Defined at:
  8000 ;;		line 49 in file "I2C.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  buffer          2    5[COMRAM] PTR unsigned char 
  8003 ;;		 -> AD5272_COMMANDS(2), 
  8004 ;;  buffer_size     1    7[COMRAM] unsigned char 
  8005 ;;  address         1    8[COMRAM] unsigned char 
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;  i               1   16[COMRAM] unsigned char 
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  1    wreg      unsigned char 
  8010 ;; Registers used:
  8011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8019 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8020 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8021 ;;Total ram usage:       12 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; Hardware stack levels required when called:    2
  8024 ;; This function calls:
  8025 ;;		Nothing
  8026 ;; This function is called by:
  8027 ;;		_main
  8028 ;;		_I2C_handler
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           	psect	text34
  8033  004A36                     __ptext34:
  8034                           	opt callstack 0
  8035  004A36                     _I2C_Transmit:
  8036                           	opt callstack 26
  8037                           
  8038                           ;I2C.c: 50:     if(I2C_STOP_DETECTED && I2C1STAT0bits.BFRE && I2C1CNT == 0){
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;incstack = 0
  8042  004A36  0100               	movlb	0	; () banked
  8043  004A38  51F2               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  8044  004A3A  B4D8               	btfsc	status,2,c
  8045  004A3C  0012               	return	
  8046                           
  8047                           ; BSR set to: 0
  8048  004A3E  013D               	movlb	61	; () banked
  8049  004A40  AF77               	btfss	119,7,b	;volatile
  8050  004A42  0012               	return	
  8051                           
  8052                           ; BSR set to: 61
  8053  004A44  516C               	movf	108,w,b	;volatile
  8054  004A46  A4D8               	btfss	status,2,c
  8055  004A48  0012               	return	
  8056                           
  8057                           ; BSR set to: 61
  8058                           ;I2C.c: 51:         I2C_STOP_DETECTED = 0;
  8059  004A4A  0E00               	movlw	0
  8060  004A4C  0100               	movlb	0	; () banked
  8061  004A4E  6FF2               	movwf	_I2C_STOP_DETECTED& (0+255),b
  8062                           
  8063                           ;I2C.c: 52:         for(unsigned char i=0;i<(buffer_size-1);i++){
  8064  004A50  0E00               	movlw	0
  8065  004A52  6E11               	movwf	I2C_Transmit@i,c
  8066  004A54  D016               	goto	l6527
  8067  004A56                     l6523:
  8068                           
  8069                           ;I2C.c: 53:             I2C_TX_BUFFER[i] = buffer[i+1];
  8070  004A56  5011               	movf	I2C_Transmit@i,w,c
  8071  004A58  2406               	addwf	I2C_Transmit@buffer,w,c
  8072  004A5A  6E0A               	movwf	??_I2C_Transmit& (0+255),c
  8073  004A5C  0E00               	movlw	0
  8074  004A5E  2007               	addwfc	I2C_Transmit@buffer+1,w,c
  8075  004A60  6E0B               	movwf	(??_I2C_Transmit+1)& (0+255),c
  8076  004A62  0E01               	movlw	1
  8077  004A64  240A               	addwf	??_I2C_Transmit,w,c
  8078  004A66  6ED9               	movwf	fsr2l,c
  8079  004A68  0E00               	movlw	0
  8080  004A6A  200B               	addwfc	??_I2C_Transmit+1,w,c
  8081  004A6C  6EDA               	movwf	fsr2h,c
  8082  004A6E  0E0A               	movlw	low _I2C_TX_BUFFER
  8083  004A70  2411               	addwf	I2C_Transmit@i,w,c
  8084  004A72  6EE1               	movwf	fsr1l,c
  8085  004A74  6AE2               	clrf	fsr1h,c
  8086  004A76  0E01               	movlw	high _I2C_TX_BUFFER
  8087  004A78  22E2               	addwfc	fsr1h,f,c
  8088  004A7A  006F FF7F FFE7     	movff	indf2,indf1
  8089                           
  8090                           ;I2C.c: 54:         }
  8091  004A80  2A11               	incf	I2C_Transmit@i,f,c
  8092  004A82                     l6527:
  8093  004A82  0EFF               	movlw	255
  8094  004A84  6E0A               	movwf	??_I2C_Transmit& (0+255),c
  8095  004A86  0EFF               	movlw	255
  8096  004A88  6E0B               	movwf	(??_I2C_Transmit+1)& (0+255),c
  8097  004A8A  5008               	movf	I2C_Transmit@buffer_size,w,c
  8098  004A8C  6E0C               	movwf	(??_I2C_Transmit+2)& (0+255),c
  8099  004A8E  6A0D               	clrf	(??_I2C_Transmit+3)& (0+255),c
  8100  004A90  500A               	movf	??_I2C_Transmit,w,c
  8101  004A92  260C               	addwf	??_I2C_Transmit+2,f,c
  8102  004A94  500B               	movf	??_I2C_Transmit+1,w,c
  8103  004A96  220D               	addwfc	??_I2C_Transmit+3,f,c
  8104  004A98  5011               	movf	I2C_Transmit@i,w,c
  8105  004A9A  6E0E               	movwf	(??_I2C_Transmit+4)& (0+255),c
  8106  004A9C  6A0F               	clrf	(??_I2C_Transmit+5)& (0+255),c
  8107  004A9E  500C               	movf	??_I2C_Transmit+2,w,c
  8108  004AA0  5C0E               	subwf	??_I2C_Transmit+4,w,c
  8109  004AA2  500F               	movf	??_I2C_Transmit+5,w,c
  8110  004AA4  0A80               	xorlw	128
  8111  004AA6  6E10               	movwf	(??_I2C_Transmit+6)& (0+255),c
  8112  004AA8  500D               	movf	??_I2C_Transmit+3,w,c
  8113  004AAA  0A80               	xorlw	128
  8114  004AAC  5810               	subwfb	(??_I2C_Transmit+6)& (0+255),w,c
  8115  004AAE  A0D8               	btfss	status,0,c
  8116  004AB0  D7D2               	goto	l6523
  8117                           
  8118                           ;I2C.c: 55:         I2C1ADB1 = address;
  8119  004AB2  0060  F027  FD6E   	movff	I2C_Transmit@address,15726	;volatile
  8120                           
  8121                           ;I2C.c: 56:         I2C1CNT = buffer_size;
  8122  004AB8  0060  F023  FD6C   	movff	I2C_Transmit@buffer_size,15724	;volatile
  8123                           
  8124                           ;I2C.c: 57:         I2C1TXB = buffer[0];
  8125  004ABE  0060  F01B  FFD9   	movff	I2C_Transmit@buffer,fsr2l
  8126  004AC4  0060  F01F  FFDA   	movff	I2C_Transmit@buffer+1,fsr2h
  8127  004ACA  50DF               	movf	indf2,w,c
  8128  004ACC  013D               	movlb	61	; () banked
  8129  004ACE  6F6B               	movwf	107,b	;volatile
  8130                           
  8131                           ; BSR set to: 61
  8132                           ;I2C.c: 58:         I2C_TX_COUNTER = 0;
  8133  004AD0  0E00               	movlw	0
  8134  004AD2  0100               	movlb	0	; () banked
  8135  004AD4  6FF4               	movwf	_I2C_TX_COUNTER& (0+255),b
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;I2C.c: 59:         I2C1CON0bits.S = 1;
  8139  004AD6  013D               	movlb	61	; () banked
  8140  004AD8  8B73               	bsf	115,5,b	;volatile
  8141  004ADA  0012               	return		;funcret
  8142  004ADC                     __end_of_I2C_Transmit:
  8143                           	opt callstack 0
  8144                           
  8145 ;; *************** function _GetStringSize *****************
  8146 ;; Defined at:
  8147 ;;		line 302 in file "main.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;		None
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;  i               2    7[COMRAM] int 
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  2    5[COMRAM] int 
  8154 ;; Registers used:
  8155 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8164 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8165 ;;Total ram usage:        4 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; Hardware stack levels required when called:    2
  8168 ;; This function calls:
  8169 ;;		Nothing
  8170 ;; This function is called by:
  8171 ;;		_UART_handler
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text35
  8176  005106                     __ptext35:
  8177                           	opt callstack 0
  8178  005106                     _GetStringSize:
  8179                           	opt callstack 27
  8180                           
  8181                           ;main.c: 303:     int i;;main.c: 304:     for(i=0;i<55;i++){
  8182                           
  8183                           ;incstack = 0
  8184  005106  0E00               	movlw	0
  8185  005108  6E09               	movwf	GetStringSize@i+1,c
  8186  00510A  0E00               	movlw	0
  8187  00510C  6E08               	movwf	GetStringSize@i,c
  8188  00510E                     l6671:
  8189                           
  8190                           ;main.c: 305:         if(tx_buffer[i] == 0){
  8191  00510E  0E70               	movlw	low _tx_buffer
  8192  005110  2408               	addwf	GetStringSize@i,w,c
  8193  005112  6ED9               	movwf	fsr2l,c
  8194  005114  0E01               	movlw	high _tx_buffer
  8195  005116  2009               	addwfc	GetStringSize@i+1,w,c
  8196  005118  6EDA               	movwf	fsr2h,c
  8197  00511A  50DF               	movf	indf2,w,c
  8198  00511C  B4D8               	btfsc	status,2,c
  8199  00511E  D00A               	goto	u9190
  8200                           
  8201                           ;main.c: 308:     }
  8202  005120  4A08               	infsnz	GetStringSize@i,f,c
  8203  005122  2A09               	incf	GetStringSize@i+1,f,c
  8204  005124  BE09               	btfsc	GetStringSize@i+1,7,c
  8205  005126  D7F3               	goto	l6671
  8206  005128  5009               	movf	GetStringSize@i+1,w,c
  8207  00512A  E104               	bnz	u9190
  8208  00512C  0E37               	movlw	55
  8209  00512E  5C08               	subwf	GetStringSize@i,w,c
  8210  005130  A0D8               	btfss	status,0,c
  8211  005132  D7ED               	goto	l6671
  8212  005134                     u9190:
  8213                           
  8214                           ;main.c: 309:     return i;
  8215  005134  0060  F020  F006   	movff	GetStringSize@i,?_GetStringSize
  8216  00513A  0060  F024  F007   	movff	GetStringSize@i+1,?_GetStringSize+1
  8217  005140  0012               	return		;funcret
  8218  005142                     __end_of_GetStringSize:
  8219                           	opt callstack 0
  8220                           
  8221 ;; *************** function _UART1_ReceiveCommand *****************
  8222 ;; Defined at:
  8223 ;;		line 83 in file "UART1.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;		None
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;  i               1   13[COMRAM] unsigned char 
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  1    wreg      unsigned char 
  8230 ;; Registers used:
  8231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8240 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8241 ;;Total ram usage:        3 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; Hardware stack levels required when called:    3
  8244 ;; This function calls:
  8245 ;;		___wmul
  8246 ;; This function is called by:
  8247 ;;		_main
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text36
  8252  003692                     __ptext36:
  8253                           	opt callstack 0
  8254  003692                     _UART1_ReceiveCommand:
  8255                           	opt callstack 27
  8256                           
  8257                           ;UART1.c: 84:     if(rx_counter == 0)
  8258                           
  8259                           ;incstack = 0
  8260  003692  505A               	movf	_rx_counter,w,c
  8261  003694  A4D8               	btfss	status,2,c
  8262  003696  D002               	goto	l6801
  8263  003698                     u9270:
  8264                           
  8265                           ;UART1.c: 85:         return 0;
  8266  003698  0E00               	movlw	0
  8267  00369A  0012               	return	
  8268  00369C                     l6801:
  8269                           
  8270                           ;UART1.c: 86:     if(rx_counter == 1 && rx_buffer[0] != 'W' && rx_buffer[0] != 'R' && rx
      +                          _buffer[0] != 'C'){
  8271  00369C  045A               	decf	_rx_counter,w,c
  8272  00369E  A4D8               	btfss	status,2,c
  8273  0036A0  D010               	goto	l6815
  8274  0036A2  0E57               	movlw	87
  8275  0036A4  0100               	movlb	0	; () banked
  8276  0036A6  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8277  0036A8  B4D8               	btfsc	status,2,c
  8278  0036AA  D00B               	goto	l6815
  8279                           
  8280                           ; BSR set to: 0
  8281  0036AC  0E52               	movlw	82
  8282  0036AE  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8283  0036B0  B4D8               	btfsc	status,2,c
  8284  0036B2  D007               	goto	l6815
  8285                           
  8286                           ; BSR set to: 0
  8287  0036B4  0E43               	movlw	67
  8288  0036B6  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8289  0036B8  B4D8               	btfsc	status,2,c
  8290  0036BA  D003               	goto	l6815
  8291  0036BC                     u9310:
  8292                           
  8293                           ;UART1.c: 87:         rx_counter = 0;
  8294  0036BC  0E00               	movlw	0
  8295  0036BE  6E5A               	movwf	_rx_counter,c
  8296  0036C0  D7EB               	goto	u9270
  8297  0036C2                     l6815:
  8298                           
  8299                           ;UART1.c: 90:     if(rx_buffer[0] == 'R') {
  8300  0036C2  0E52               	movlw	82
  8301  0036C4  0100               	movlb	0	; () banked
  8302  0036C6  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8303  0036C8  A4D8               	btfss	status,2,c
  8304  0036CA  D032               	goto	l6859
  8305                           
  8306                           ; BSR set to: 0
  8307                           ;UART1.c: 91:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57))
      +                          ){
  8308  0036CC  0E02               	movlw	2
  8309  0036CE  185A               	xorwf	_rx_counter,w,c
  8310  0036D0  A4D8               	btfss	status,2,c
  8311  0036D2  D007               	goto	l6825
  8312                           
  8313                           ; BSR set to: 0
  8314  0036D4  0E2F               	movlw	47
  8315  0036D6  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8316  0036D8  D7F1               	goto	u9310
  8317                           
  8318                           ; BSR set to: 0
  8319  0036DA  0E39               	movlw	57
  8320  0036DC  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8321  0036DE  D001               	goto	l6825
  8322  0036E0  D7ED               	goto	u9310
  8323  0036E2                     l6825:
  8324                           
  8325                           ; BSR set to: 0
  8326  0036E2  0E03               	movlw	3
  8327  0036E4  185A               	xorwf	_rx_counter,w,c
  8328  0036E6  A4D8               	btfss	status,2,c
  8329  0036E8  D004               	goto	l6831
  8330                           
  8331                           ; BSR set to: 0
  8332  0036EA  0E0D               	movlw	13
  8333  0036EC  19C8               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8334  0036EE  A4D8               	btfss	status,2,c
  8335  0036F0  D7E5               	goto	u9310
  8336  0036F2                     l6831:
  8337                           
  8338                           ; BSR set to: 0
  8339  0036F2  0E04               	movlw	4
  8340  0036F4  185A               	xorwf	_rx_counter,w,c
  8341  0036F6  A4D8               	btfss	status,2,c
  8342  0036F8  D7CF               	goto	u9270
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;UART1.c: 96:             if(rx_buffer[0] != 'R' || (rx_buffer[1] < 48) || (rx_buffer[1]
      +                           > 57) || rx_buffer[2] != '\r' || rx_buffer[3] != '\n'){
  8346  0036FA  0E52               	movlw	82
  8347  0036FC  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8348  0036FE  A4D8               	btfss	status,2,c
  8349  003700  D7DD               	goto	u9310
  8350                           
  8351                           ; BSR set to: 0
  8352  003702  0E2F               	movlw	47
  8353  003704  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8354  003706  D7DA               	goto	u9310
  8355                           
  8356                           ; BSR set to: 0
  8357  003708  0E3A               	movlw	58
  8358  00370A  61C7               	cpfslt	(_rx_buffer+1)& (0+255),b
  8359  00370C  D7D7               	goto	u9310
  8360                           
  8361                           ; BSR set to: 0
  8362  00370E  0E0D               	movlw	13
  8363  003710  19C8               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8364  003712  A4D8               	btfss	status,2,c
  8365  003714  D7D3               	goto	u9310
  8366                           
  8367                           ; BSR set to: 0
  8368  003716  0E0A               	movlw	10
  8369  003718  19C9               	xorwf	(_rx_buffer+3)& (0+255),w,b
  8370  00371A  A4D8               	btfss	status,2,c
  8371  00371C  D7CF               	goto	u9310
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;UART1.c: 100:             COMMAND_WR = 1;
  8375  00371E  0E01               	movlw	1
  8376  003720  6FF6               	movwf	_COMMAND_WR& (0+255),b
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;UART1.c: 101:             COMMAND = rx_buffer[1]-48;
  8380  003722  51C7               	movf	(_rx_buffer+1)& (0+255),w,b
  8381  003724  0FD0               	addlw	208
  8382  003726  6FF5               	movwf	_COMMAND& (0+255),b
  8383  003728                     l6853:
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;UART1.c: 102:             rx_counter = 0;
  8387  003728  0E00               	movlw	0
  8388  00372A  6E5A               	movwf	_rx_counter,c
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;UART1.c: 103:             return 1;
  8392  00372C  0E01               	movlw	1
  8393  00372E  0012               	return	
  8394  003730                     l6859:
  8395                           
  8396                           ; BSR set to: 0
  8397  003730  0E57               	movlw	87
  8398  003732  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8399  003734  A4D8               	btfss	status,2,c
  8400  003736  D09A               	goto	l6953
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;UART1.c: 106:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57)
      +                          )){
  8404  003738  0E02               	movlw	2
  8405  00373A  185A               	xorwf	_rx_counter,w,c
  8406  00373C  A4D8               	btfss	status,2,c
  8407  00373E  D007               	goto	l6869
  8408                           
  8409                           ; BSR set to: 0
  8410  003740  0E2F               	movlw	47
  8411  003742  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8412  003744  D7BB               	goto	u9310
  8413                           
  8414                           ; BSR set to: 0
  8415  003746  0E39               	movlw	57
  8416  003748  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8417  00374A  D001               	goto	l6869
  8418  00374C  D7B7               	goto	u9310
  8419  00374E                     l6869:
  8420                           
  8421                           ; BSR set to: 0
  8422  00374E  0E03               	movlw	3
  8423  003750  185A               	xorwf	_rx_counter,w,c
  8424  003752  A4D8               	btfss	status,2,c
  8425  003754  D007               	goto	l6877
  8426                           
  8427                           ; BSR set to: 0
  8428  003756  0E2F               	movlw	47
  8429  003758  65C8               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8430  00375A  D7B0               	goto	u9310
  8431                           
  8432                           ; BSR set to: 0
  8433  00375C  0E39               	movlw	57
  8434  00375E  65C8               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8435  003760  D001               	goto	l6877
  8436  003762  D7AC               	goto	u9310
  8437  003764                     l6877:
  8438                           
  8439                           ; BSR set to: 0
  8440  003764  0E04               	movlw	4
  8441  003766  185A               	xorwf	_rx_counter,w,c
  8442  003768  A4D8               	btfss	status,2,c
  8443  00376A  D007               	goto	l6885
  8444                           
  8445                           ; BSR set to: 0
  8446  00376C  0E2F               	movlw	47
  8447  00376E  65C9               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8448  003770  D7A5               	goto	u9310
  8449                           
  8450                           ; BSR set to: 0
  8451  003772  0E39               	movlw	57
  8452  003774  65C9               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8453  003776  D001               	goto	l6885
  8454  003778  D7A1               	goto	u9310
  8455  00377A                     l6885:
  8456                           
  8457                           ; BSR set to: 0
  8458  00377A  0E05               	movlw	5
  8459  00377C  185A               	xorwf	_rx_counter,w,c
  8460  00377E  A4D8               	btfss	status,2,c
  8461  003780  D007               	goto	l6893
  8462                           
  8463                           ; BSR set to: 0
  8464  003782  0E2F               	movlw	47
  8465  003784  65CA               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8466  003786  D79A               	goto	u9310
  8467                           
  8468                           ; BSR set to: 0
  8469  003788  0E39               	movlw	57
  8470  00378A  65CA               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8471  00378C  D001               	goto	l6893
  8472  00378E  D796               	goto	u9310
  8473  003790                     l6893:
  8474                           
  8475                           ; BSR set to: 0
  8476  003790  0E06               	movlw	6
  8477  003792  185A               	xorwf	_rx_counter,w,c
  8478  003794  A4D8               	btfss	status,2,c
  8479  003796  D007               	goto	l6901
  8480                           
  8481                           ; BSR set to: 0
  8482  003798  0E2F               	movlw	47
  8483  00379A  65CB               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8484  00379C  D78F               	goto	u9310
  8485                           
  8486                           ; BSR set to: 0
  8487  00379E  0E39               	movlw	57
  8488  0037A0  65CB               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8489  0037A2  D001               	goto	l6901
  8490  0037A4  D78B               	goto	u9310
  8491  0037A6                     l6901:
  8492                           
  8493                           ; BSR set to: 0
  8494  0037A6  0E07               	movlw	7
  8495  0037A8  185A               	xorwf	_rx_counter,w,c
  8496  0037AA  A4D8               	btfss	status,2,c
  8497  0037AC  D004               	goto	l6907
  8498                           
  8499                           ; BSR set to: 0
  8500  0037AE  0E0D               	movlw	13
  8501  0037B0  19CC               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8502  0037B2  A4D8               	btfss	status,2,c
  8503  0037B4  D783               	goto	u9310
  8504  0037B6                     l6907:
  8505                           
  8506                           ; BSR set to: 0
  8507  0037B6  0E08               	movlw	8
  8508  0037B8  185A               	xorwf	_rx_counter,w,c
  8509  0037BA  A4D8               	btfss	status,2,c
  8510  0037BC  D76D               	goto	u9270
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;UART1.c: 119:             if(rx_buffer[0] != 'W' || (rx_buffer[1] < 48) || (rx_buffer[1
      +                          ] > 57) || (rx_buffer[2] < 48) || (rx_buffer[2] > 57) || (rx_buffer[3] < 48) || (rx_buff
      +                          er[3] > 57) || (rx_buffer[4] < 48) || (rx_buffer[4] > 57) || (rx_buffer[5] < 48) || (rx_
      +                          buffer[5] > 57) || rx_buffer[6] != '\r' || rx_buffer[7] != '\n'){
  8514  0037BE  0E57               	movlw	87
  8515  0037C0  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8516  0037C2  A4D8               	btfss	status,2,c
  8517  0037C4  D77B               	goto	u9310
  8518                           
  8519                           ; BSR set to: 0
  8520  0037C6  0E2F               	movlw	47
  8521  0037C8  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8522  0037CA  D778               	goto	u9310
  8523                           
  8524                           ; BSR set to: 0
  8525  0037CC  0E3A               	movlw	58
  8526  0037CE  61C7               	cpfslt	(_rx_buffer+1)& (0+255),b
  8527  0037D0  D775               	goto	u9310
  8528                           
  8529                           ; BSR set to: 0
  8530  0037D2  0E2F               	movlw	47
  8531  0037D4  65C8               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8532  0037D6  D772               	goto	u9310
  8533                           
  8534                           ; BSR set to: 0
  8535  0037D8  0E3A               	movlw	58
  8536  0037DA  61C8               	cpfslt	(_rx_buffer+2)& (0+255),b
  8537  0037DC  D76F               	goto	u9310
  8538                           
  8539                           ; BSR set to: 0
  8540  0037DE  0E2F               	movlw	47
  8541  0037E0  65C9               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8542  0037E2  D76C               	goto	u9310
  8543                           
  8544                           ; BSR set to: 0
  8545  0037E4  0E3A               	movlw	58
  8546  0037E6  61C9               	cpfslt	(_rx_buffer+3)& (0+255),b
  8547  0037E8  D769               	goto	u9310
  8548                           
  8549                           ; BSR set to: 0
  8550  0037EA  0E2F               	movlw	47
  8551  0037EC  65CA               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8552  0037EE  D766               	goto	u9310
  8553                           
  8554                           ; BSR set to: 0
  8555  0037F0  0E3A               	movlw	58
  8556  0037F2  61CA               	cpfslt	(_rx_buffer+4)& (0+255),b
  8557  0037F4  D763               	goto	u9310
  8558                           
  8559                           ; BSR set to: 0
  8560  0037F6  0E2F               	movlw	47
  8561  0037F8  65CB               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8562  0037FA  D760               	goto	u9310
  8563                           
  8564                           ; BSR set to: 0
  8565  0037FC  0E3A               	movlw	58
  8566  0037FE  61CB               	cpfslt	(_rx_buffer+5)& (0+255),b
  8567  003800  D75D               	goto	u9310
  8568                           
  8569                           ; BSR set to: 0
  8570  003802  0E0D               	movlw	13
  8571  003804  19CC               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8572  003806  A4D8               	btfss	status,2,c
  8573  003808  D759               	goto	u9310
  8574                           
  8575                           ; BSR set to: 0
  8576  00380A  0E0A               	movlw	10
  8577  00380C  19CD               	xorwf	(_rx_buffer+7)& (0+255),w,b
  8578  00380E  A4D8               	btfss	status,2,c
  8579  003810  D755               	goto	u9310
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;UART1.c: 123:             COMMAND_WR = 0;
  8583  003812  0E00               	movlw	0
  8584  003814  6FF6               	movwf	_COMMAND_WR& (0+255),b
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;UART1.c: 124:             COMMAND = rx_buffer[1]-48;
  8588  003816  51C7               	movf	(_rx_buffer+1)& (0+255),w,b
  8589  003818  0FD0               	addlw	208
  8590  00381A  6FF5               	movwf	_COMMAND& (0+255),b
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;UART1.c: 125:             COMMAND_WRITE_NUMBER = ((rx_buffer[2]-48) * 1000) + ((rx_buff
      +                          er[3]-48) * 100) + ((rx_buffer[4]-48) * 10) + (rx_buffer[5]-48);
  8594  00381C  0060  F320  F006   	movff	_rx_buffer+2,___wmul@multiplier
  8595  003822  6A07               	clrf	___wmul@multiplier+1,c
  8596  003824  0E03               	movlw	3
  8597  003826  6E09               	movwf	___wmul@multiplicand+1,c
  8598  003828  0EE8               	movlw	232
  8599  00382A  6E08               	movwf	___wmul@multiplicand,c
  8600  00382C  EC0A  F029         	call	___wmul	;wreg free
  8601  003830  0100               	movlb	0	; () banked
  8602  003832  51C9               	movf	(_rx_buffer+3)& (0+255),w,b
  8603  003834  0D64               	mullw	100
  8604  003836  006F FFCC  F00C    	movff	prodl,??_UART1_ReceiveCommand
  8605  00383C  006F FFD0  F00D    	movff	prodh,??_UART1_ReceiveCommand+1
  8606  003842  51CA               	movf	(_rx_buffer+4)& (0+255),w,b
  8607  003844  0D0A               	mullw	10
  8608  003846  50F3               	movf	prodl,w,c
  8609  003848  260C               	addwf	??_UART1_ReceiveCommand,f,c
  8610  00384A  50F4               	movf	prodh,w,c
  8611  00384C  220D               	addwfc	??_UART1_ReceiveCommand+1,f,c
  8612  00384E  5006               	movf	?___wmul,w,c
  8613  003850  260C               	addwf	??_UART1_ReceiveCommand,f,c
  8614  003852  5007               	movf	?___wmul+1,w,c
  8615  003854  220D               	addwfc	??_UART1_ReceiveCommand+1,f,c
  8616  003856  51CB               	movf	(_rx_buffer+5)& (0+255),w,b
  8617  003858  260C               	addwf	??_UART1_ReceiveCommand,f,c
  8618  00385A  0E00               	movlw	0
  8619  00385C  220D               	addwfc	??_UART1_ReceiveCommand+1,f,c
  8620  00385E  0EB0               	movlw	176
  8621  003860  240C               	addwf	??_UART1_ReceiveCommand,w,c
  8622  003862  6FEE               	movwf	_COMMAND_WRITE_NUMBER& (0+255),b
  8623  003864  0E2F               	movlw	47
  8624  003866  200D               	addwfc	??_UART1_ReceiveCommand+1,w,c
  8625  003868  6FEF               	movwf	(_COMMAND_WRITE_NUMBER+1)& (0+255),b
  8626  00386A  D75E               	goto	l6853
  8627  00386C                     l6953:
  8628                           
  8629                           ; BSR set to: 0
  8630  00386C  0E43               	movlw	67
  8631  00386E  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8632  003870  A4D8               	btfss	status,2,c
  8633  003872  D712               	goto	u9270
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;UART1.c: 130:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57)
      +                          )){
  8637  003874  0E02               	movlw	2
  8638  003876  185A               	xorwf	_rx_counter,w,c
  8639  003878  A4D8               	btfss	status,2,c
  8640  00387A  D007               	goto	l6963
  8641                           
  8642                           ; BSR set to: 0
  8643  00387C  0E2F               	movlw	47
  8644  00387E  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8645  003880  D71D               	goto	u9310
  8646                           
  8647                           ; BSR set to: 0
  8648  003882  0E39               	movlw	57
  8649  003884  65C7               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8650  003886  D001               	goto	l6963
  8651  003888  D719               	goto	u9310
  8652  00388A                     l6963:
  8653                           
  8654                           ; BSR set to: 0
  8655  00388A  0E03               	movlw	3
  8656  00388C  185A               	xorwf	_rx_counter,w,c
  8657  00388E  A4D8               	btfss	status,2,c
  8658  003890  D004               	goto	l6969
  8659                           
  8660                           ; BSR set to: 0
  8661  003892  0E2E               	movlw	46
  8662  003894  19C8               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8663  003896  A4D8               	btfss	status,2,c
  8664  003898  D711               	goto	u9310
  8665  00389A                     l6969:
  8666                           
  8667                           ; BSR set to: 0
  8668  00389A  0E04               	movlw	4
  8669  00389C  185A               	xorwf	_rx_counter,w,c
  8670  00389E  A4D8               	btfss	status,2,c
  8671  0038A0  D007               	goto	l6977
  8672                           
  8673                           ; BSR set to: 0
  8674  0038A2  0E2F               	movlw	47
  8675  0038A4  65C9               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8676  0038A6  D70A               	goto	u9310
  8677                           
  8678                           ; BSR set to: 0
  8679  0038A8  0E39               	movlw	57
  8680  0038AA  65C9               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8681  0038AC  D001               	goto	l6977
  8682  0038AE  D706               	goto	u9310
  8683  0038B0                     l6977:
  8684                           
  8685                           ; BSR set to: 0
  8686  0038B0  0E05               	movlw	5
  8687  0038B2  185A               	xorwf	_rx_counter,w,c
  8688  0038B4  A4D8               	btfss	status,2,c
  8689  0038B6  D007               	goto	l6985
  8690                           
  8691                           ; BSR set to: 0
  8692  0038B8  0E2F               	movlw	47
  8693  0038BA  65CA               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8694  0038BC  D6FF               	goto	u9310
  8695                           
  8696                           ; BSR set to: 0
  8697  0038BE  0E39               	movlw	57
  8698  0038C0  65CA               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8699  0038C2  D001               	goto	l6985
  8700  0038C4  D6FB               	goto	u9310
  8701  0038C6                     l6985:
  8702                           
  8703                           ; BSR set to: 0
  8704  0038C6  0E06               	movlw	6
  8705  0038C8  185A               	xorwf	_rx_counter,w,c
  8706  0038CA  A4D8               	btfss	status,2,c
  8707  0038CC  D007               	goto	l6993
  8708                           
  8709                           ; BSR set to: 0
  8710  0038CE  0E2F               	movlw	47
  8711  0038D0  65CB               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8712  0038D2  D6F4               	goto	u9310
  8713                           
  8714                           ; BSR set to: 0
  8715  0038D4  0E39               	movlw	57
  8716  0038D6  65CB               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8717  0038D8  D001               	goto	l6993
  8718  0038DA  D6F0               	goto	u9310
  8719  0038DC                     l6993:
  8720                           
  8721                           ; BSR set to: 0
  8722  0038DC  0E07               	movlw	7
  8723  0038DE  185A               	xorwf	_rx_counter,w,c
  8724  0038E0  A4D8               	btfss	status,2,c
  8725  0038E2  D007               	goto	l7001
  8726                           
  8727                           ; BSR set to: 0
  8728  0038E4  0E2F               	movlw	47
  8729  0038E6  65CC               	cpfsgt	(_rx_buffer+6)& (0+255),b
  8730  0038E8  D6E9               	goto	u9310
  8731                           
  8732                           ; BSR set to: 0
  8733  0038EA  0E39               	movlw	57
  8734  0038EC  65CC               	cpfsgt	(_rx_buffer+6)& (0+255),b
  8735  0038EE  D001               	goto	l7001
  8736  0038F0  D6E5               	goto	u9310
  8737  0038F2                     l7001:
  8738                           
  8739                           ; BSR set to: 0
  8740  0038F2  0E08               	movlw	8
  8741  0038F4  185A               	xorwf	_rx_counter,w,c
  8742  0038F6  A4D8               	btfss	status,2,c
  8743  0038F8  D007               	goto	l7009
  8744                           
  8745                           ; BSR set to: 0
  8746  0038FA  0E2F               	movlw	47
  8747  0038FC  65CD               	cpfsgt	(_rx_buffer+7)& (0+255),b
  8748  0038FE  D6DE               	goto	u9310
  8749                           
  8750                           ; BSR set to: 0
  8751  003900  0E39               	movlw	57
  8752  003902  65CD               	cpfsgt	(_rx_buffer+7)& (0+255),b
  8753  003904  D001               	goto	l7009
  8754  003906  D6DA               	goto	u9310
  8755  003908                     l7009:
  8756                           
  8757                           ; BSR set to: 0
  8758  003908  0E09               	movlw	9
  8759  00390A  185A               	xorwf	_rx_counter,w,c
  8760  00390C  A4D8               	btfss	status,2,c
  8761  00390E  D007               	goto	l7017
  8762                           
  8763                           ; BSR set to: 0
  8764  003910  0E2F               	movlw	47
  8765  003912  65CE               	cpfsgt	(_rx_buffer+8)& (0+255),b
  8766  003914  D6D3               	goto	u9310
  8767                           
  8768                           ; BSR set to: 0
  8769  003916  0E39               	movlw	57
  8770  003918  65CE               	cpfsgt	(_rx_buffer+8)& (0+255),b
  8771  00391A  D001               	goto	l7017
  8772  00391C  D6CF               	goto	u9310
  8773  00391E                     l7017:
  8774                           
  8775                           ; BSR set to: 0
  8776  00391E  0E0A               	movlw	10
  8777  003920  185A               	xorwf	_rx_counter,w,c
  8778  003922  A4D8               	btfss	status,2,c
  8779  003924  D004               	goto	l7023
  8780                           
  8781                           ; BSR set to: 0
  8782  003926  0E0D               	movlw	13
  8783  003928  19CF               	xorwf	(_rx_buffer+9)& (0+255),w,b
  8784  00392A  A4D8               	btfss	status,2,c
  8785  00392C  D6C7               	goto	u9310
  8786  00392E                     l7023:
  8787                           
  8788                           ; BSR set to: 0
  8789  00392E  0E0B               	movlw	11
  8790  003930  185A               	xorwf	_rx_counter,w,c
  8791  003932  A4D8               	btfss	status,2,c
  8792  003934  D6B1               	goto	u9270
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;UART1.c: 149:             for(unsigned char i = 3;i<9;i++){
  8796  003936  0E03               	movlw	3
  8797  003938  6E0E               	movwf	UART1_ReceiveCommand@i,c
  8798  00393A                     l7031:
  8799                           
  8800                           ;UART1.c: 150:                 if(rx_buffer[i] < 48 || rx_buffer[i] > 57){
  8801  00393A  0EC6               	movlw	low _rx_buffer
  8802  00393C  240E               	addwf	UART1_ReceiveCommand@i,w,c
  8803  00393E  6ED9               	movwf	fsr2l,c
  8804  003940  6ADA               	clrf	fsr2h,c
  8805  003942  0E00               	movlw	high _rx_buffer
  8806  003944  22DA               	addwfc	fsr2h,f,c
  8807  003946  0E2F               	movlw	47
  8808  003948  64DF               	cpfsgt	indf2,c
  8809  00394A  D6B8               	goto	u9310
  8810  00394C  0EC6               	movlw	low _rx_buffer
  8811  00394E  240E               	addwf	UART1_ReceiveCommand@i,w,c
  8812  003950  6ED9               	movwf	fsr2l,c
  8813  003952  6ADA               	clrf	fsr2h,c
  8814  003954  0E00               	movlw	high _rx_buffer
  8815  003956  22DA               	addwfc	fsr2h,f,c
  8816  003958  0E39               	movlw	57
  8817  00395A  64DF               	cpfsgt	indf2,c
  8818  00395C  D001               	goto	l7041
  8819  00395E  D6AE               	goto	u9310
  8820  003960                     l7041:
  8821                           
  8822                           ;UART1.c: 154:                 COMMAND_CURRENT_LIMIT[i-1] = rx_buffer[i];
  8823  003960  0EC6               	movlw	low _rx_buffer
  8824  003962  240E               	addwf	UART1_ReceiveCommand@i,w,c
  8825  003964  6ED9               	movwf	fsr2l,c
  8826  003966  6ADA               	clrf	fsr2h,c
  8827  003968  0E00               	movlw	high _rx_buffer
  8828  00396A  22DA               	addwfc	fsr2h,f,c
  8829  00396C  0EA6               	movlw	low (_COMMAND_CURRENT_LIMIT+65535)
  8830  00396E  240E               	addwf	UART1_ReceiveCommand@i,w,c
  8831  003970  6EE1               	movwf	fsr1l,c
  8832  003972  6AE2               	clrf	fsr1h,c
  8833  003974  0E01               	movlw	high (_COMMAND_CURRENT_LIMIT+65535)
  8834  003976  22E2               	addwfc	fsr1h,f,c
  8835  003978  006F FF7F FFE7     	movff	indf2,indf1
  8836                           
  8837                           ;UART1.c: 155:             }
  8838  00397E  2A0E               	incf	UART1_ReceiveCommand@i,f,c
  8839  003980  0E08               	movlw	8
  8840  003982  640E               	cpfsgt	UART1_ReceiveCommand@i,c
  8841  003984  D7DA               	goto	l7031
  8842                           
  8843                           ;UART1.c: 156:             if(rx_buffer[0] != 'C' || rx_buffer[2] != '.' || rx_buffer[9]
      +                           != '\r' || rx_buffer[10] != '\n'){
  8844  003986  0E43               	movlw	67
  8845  003988  0100               	movlb	0	; () banked
  8846  00398A  19C6               	xorwf	_rx_buffer& (0+255),w,b
  8847  00398C  A4D8               	btfss	status,2,c
  8848  00398E  D696               	goto	u9310
  8849                           
  8850                           ; BSR set to: 0
  8851  003990  0E2E               	movlw	46
  8852  003992  19C8               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8853  003994  A4D8               	btfss	status,2,c
  8854  003996  D692               	goto	u9310
  8855                           
  8856                           ; BSR set to: 0
  8857  003998  0E0D               	movlw	13
  8858  00399A  19CF               	xorwf	(_rx_buffer+9)& (0+255),w,b
  8859  00399C  A4D8               	btfss	status,2,c
  8860  00399E  D68E               	goto	u9310
  8861                           
  8862                           ; BSR set to: 0
  8863  0039A0  0E0A               	movlw	10
  8864  0039A2  19D0               	xorwf	(_rx_buffer+10)& (0+255),w,b
  8865  0039A4  A4D8               	btfss	status,2,c
  8866  0039A6  D68A               	goto	u9310
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;UART1.c: 160:             COMMAND_CURRENT_LIMIT[0] = rx_buffer[1];
  8870                           
  8871                           ;UART1.c: 159:             }
  8872  0039A8  C0C7  F1A7         	movff	_rx_buffer+1,_COMMAND_CURRENT_LIMIT
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;UART1.c: 161:             COMMAND_CURRENT_LIMIT[1] = '.';
  8876  0039AC  0E2E               	movlw	46
  8877  0039AE  0101               	movlb	1	; () banked
  8878  0039B0  6FA8               	movwf	(_COMMAND_CURRENT_LIMIT+1)& (0+255),b
  8879                           
  8880                           ;UART1.c: 162:             COMMAND_WR = 0;
  8881  0039B2  0E00               	movlw	0
  8882  0039B4  0100               	movlb	0	; () banked
  8883  0039B6  6FF6               	movwf	_COMMAND_WR& (0+255),b
  8884                           
  8885                           ;UART1.c: 163:             COMMAND = 2;
  8886  0039B8  0E02               	movlw	2
  8887  0039BA  D6B5               	goto	L13
  8888  0039BC                     __end_of_UART1_ReceiveCommand:
  8889                           	opt callstack 0
  8890                           
  8891 ;; *************** function ___wmul *****************
  8892 ;; Defined at:
  8893 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;  multiplier      2    5[COMRAM] unsigned int 
  8896 ;;  multiplicand    2    7[COMRAM] unsigned int 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;  product         2    9[COMRAM] unsigned int 
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  2    5[COMRAM] unsigned int 
  8901 ;; Registers used:
  8902 ;;		wreg, status,2, status,0, prodl, prodh
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8909 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8911 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8912 ;;Total ram usage:        6 bytes
  8913 ;; Hardware stack levels used:    1
  8914 ;; Hardware stack levels required when called:    2
  8915 ;; This function calls:
  8916 ;;		Nothing
  8917 ;; This function is called by:
  8918 ;;		_UART1_ReceiveCommand
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text37
  8923  005214                     __ptext37:
  8924                           	opt callstack 0
  8925  005214                     ___wmul:
  8926                           	opt callstack 27
  8927                           
  8928                           ;incstack = 0
  8929  005214  5006               	movf	___wmul@multiplier,w,c
  8930  005216  0208               	mulwf	___wmul@multiplicand,c
  8931  005218  006F FFCC  F00A    	movff	prodl,___wmul@product
  8932  00521E  006F FFD0  F00B    	movff	prodh,___wmul@product+1
  8933  005224  5006               	movf	___wmul@multiplier,w,c
  8934  005226  0209               	mulwf	___wmul@multiplicand+1,c
  8935  005228  50F3               	movf	prodl,w,c
  8936  00522A  260B               	addwf	___wmul@product+1,f,c
  8937  00522C  5007               	movf	___wmul@multiplier+1,w,c
  8938  00522E  0208               	mulwf	___wmul@multiplicand,c
  8939  005230  50F3               	movf	prodl,w,c
  8940  005232  260B               	addwf	___wmul@product+1,f,c
  8941  005234  0060  F028  F006   	movff	___wmul@product,?___wmul
  8942  00523A  0060  F02C  F007   	movff	___wmul@product+1,?___wmul+1
  8943  005240  0012               	return		;funcret
  8944  005242                     __end_of___wmul:
  8945                           	opt callstack 0
  8946                           
  8947 ;; *************** function _UART1_Init *****************
  8948 ;; Defined at:
  8949 ;;		line 4 in file "UART1.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;  baud_rate       1    wreg     unsigned char 
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;  baud_rate       1    7[COMRAM] unsigned char 
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  1    wreg      void 
  8956 ;; Registers used:
  8957 ;;		wreg, status,2, status,0
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8965 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8966 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8967 ;;Total ram usage:        3 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:    2
  8970 ;; This function calls:
  8971 ;;		Nothing
  8972 ;; This function is called by:
  8973 ;;		_main
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           	psect	text38
  8978  004C86                     __ptext38:
  8979                           	opt callstack 0
  8980  004C86                     _UART1_Init:
  8981                           	opt callstack 28
  8982                           
  8983                           ;incstack = 0
  8984                           ;UART1_Init@baud_rate stored from wreg
  8985  004C86  6E08               	movwf	UART1_Init@baud_rate,c
  8986                           
  8987                           ;UART1.c: 6:     TRISCbits.TRISC6 = 1;
  8988  004C88  8CC4               	bsf	16324,6,c	;volatile
  8989                           
  8990                           ;UART1.c: 7:     TRISCbits.TRISC7 = 0;
  8991  004C8A  9EC4               	bcf	16324,7,c	;volatile
  8992                           
  8993                           ;UART1.c: 8:     ANSELCbits.ANSELC6 = 0;
  8994  004C8C  013A               	movlb	58	; () banked
  8995  004C8E  9D60               	bcf	96,6,b	;volatile
  8996                           
  8997                           ;UART1.c: 9:     ANSELCbits.ANSELC7 = 0;
  8998  004C90  9F60               	bcf	96,7,b	;volatile
  8999                           
  9000                           ; BSR set to: 58
  9001                           ;UART1.c: 10:     U1RXPPS = 0x16;
  9002  004C92  0E16               	movlw	22
  9003  004C94  6FE5               	movwf	229,b	;volatile
  9004                           
  9005                           ;UART1.c: 11:     RC7PPS = 0x13;
  9006  004C96  0E13               	movlw	19
  9007  004C98  6F17               	movwf	23,b	;volatile
  9008                           
  9009                           ;UART1.c: 14:     switch(baud_rate){
  9010  004C9A  D010               	goto	l6735
  9011  004C9C                     l6725:
  9012                           
  9013                           ; BSR set to: 58
  9014                           ;UART1.c: 16:             U1BRGH = 0x03;
  9015  004C9C  0E03               	movlw	3
  9016  004C9E  013D               	movlb	61	; () banked
  9017  004CA0  6FF6               	movwf	246,b	;volatile
  9018                           
  9019                           ;UART1.c: 17:             U1BRGL = 0x40;
  9020  004CA2  0E40               	movlw	64
  9021  004CA4  D009               	goto	L15
  9022  004CA6                     l6727:
  9023                           
  9024                           ; BSR set to: 58
  9025                           ;UART1.c: 20:             U1BRGH = 0x01;
  9026  004CA6  0E01               	movlw	1
  9027  004CA8  013D               	movlb	61	; () banked
  9028  004CAA  6FF6               	movwf	246,b	;volatile
  9029                           
  9030                           ;UART1.c: 21:             U1BRGL = 0x14;
  9031  004CAC  0E14               	movlw	20
  9032  004CAE  D004               	goto	L15
  9033  004CB0                     l6729:
  9034                           
  9035                           ; BSR set to: 58
  9036                           ;UART1.c: 24:             U1BRGH = 0x00;
  9037  004CB0  0E00               	movlw	0
  9038  004CB2  013D               	movlb	61	; () banked
  9039  004CB4  6FF6               	movwf	246,b	;volatile
  9040                           
  9041                           ;UART1.c: 25:             U1BRGL = 0x89;
  9042  004CB6  0E89               	movlw	137
  9043  004CB8                     L15:
  9044  004CB8  6FF5               	movwf	245,b	;volatile
  9045                           
  9046                           ;UART1.c: 26:             break;
  9047  004CBA  D010               	goto	l6737
  9048  004CBC                     l6735:
  9049                           
  9050                           ; BSR set to: 58
  9051  004CBC  5008               	movf	UART1_Init@baud_rate,w,c
  9052  004CBE  6E06               	movwf	??_UART1_Init& (0+255),c
  9053  004CC0  6A07               	clrf	(??_UART1_Init+1)& (0+255),c
  9054                           
  9055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9056                           ; Switch size 1, requested type "simple"
  9057                           ; Number of cases is 1, Range of values is 0 to 0
  9058                           ; switch strategies available:
  9059                           ; Name         Instructions Cycles
  9060                           ; simple_byte            4     3 (average)
  9061                           ;	Chosen strategy is simple_byte
  9062  004CC2  5007               	movf	??_UART1_Init+1,w,c
  9063  004CC4  0A00               	xorlw	0	; case 0
  9064  004CC6  A4D8               	btfss	status,2,c
  9065  004CC8  D7F3               	goto	l6729
  9066                           
  9067                           ; BSR set to: 58
  9068                           ; Switch size 1, requested type "simple"
  9069                           ; Number of cases is 3, Range of values is 1 to 3
  9070                           ; switch strategies available:
  9071                           ; Name         Instructions Cycles
  9072                           ; simple_byte           10     6 (average)
  9073                           ;	Chosen strategy is simple_byte
  9074  004CCA  5006               	movf	??_UART1_Init,w,c
  9075  004CCC  0A01               	xorlw	1	; case 1
  9076  004CCE  B4D8               	btfsc	status,2,c
  9077  004CD0  D7E5               	goto	l6725
  9078  004CD2  0A03               	xorlw	3	; case 2
  9079  004CD4  B4D8               	btfsc	status,2,c
  9080  004CD6  D7E7               	goto	l6727
  9081  004CD8  0A01               	xorlw	1	; case 3
  9082  004CDA  D7EA               	goto	l6729
  9083  004CDC                     l6737:
  9084                           
  9085                           ; BSR set to: 61
  9086                           ;UART1.c: 33:     rx_counter = 0;
  9087  004CDC  0E00               	movlw	0
  9088  004CDE  6E5A               	movwf	_rx_counter,c
  9089                           
  9090                           ;UART1.c: 35:     U1CON0 = 0xB0;
  9091  004CE0  0EB0               	movlw	176
  9092  004CE2  6FF2               	movwf	242,b	;volatile
  9093                           
  9094                           ;UART1.c: 36:     U1CON1 = 0x00;
  9095  004CE4  0E00               	movlw	0
  9096  004CE6  6FF3               	movwf	243,b	;volatile
  9097                           
  9098                           ;UART1.c: 37:     U2CON2 = 0x80;
  9099  004CE8  0E80               	movlw	128
  9100  004CEA  6FDC               	movwf	220,b	;volatile
  9101                           
  9102                           ;UART1.c: 38:     U1ERRIE = 0x00;
  9103  004CEC  0E00               	movlw	0
  9104  004CEE  6FFA               	movwf	250,b	;volatile
  9105                           
  9106                           ;UART1.c: 39:     U1UIR = 0x00;
  9107  004CF0  0E00               	movlw	0
  9108  004CF2  6FF8               	movwf	248,b	;volatile
  9109                           
  9110                           ; BSR set to: 61
  9111                           ;UART1.c: 40:     PIE3bits.U1RXIE = 1;
  9112  004CF4  0139               	movlb	57	; () banked
  9113  004CF6  8793               	bsf	147,3,b	;volatile
  9114                           
  9115                           ; BSR set to: 57
  9116                           ;UART1.c: 41:     PIE3bits.U1TXIE =1;
  9117  004CF8  8993               	bsf	147,4,b	;volatile
  9118                           
  9119                           ; BSR set to: 57
  9120                           ;UART1.c: 42:     IPR3bits.U1RXIP = 1;
  9121  004CFA  8783               	bsf	131,3,b	;volatile
  9122                           
  9123                           ; BSR set to: 57
  9124                           ;UART1.c: 43:     IPR3bits.U1TXIP = 1;
  9125  004CFC  8983               	bsf	131,4,b	;volatile
  9126                           
  9127                           ;UART1.c: 44:     PIR3 = 0x00;
  9128  004CFE  0E00               	movlw	0
  9129  004D00  6FA3               	movwf	163,b	;volatile
  9130                           
  9131                           ; BSR set to: 57
  9132                           ;UART1.c: 45:     U1CON1bits.ON = 1;
  9133  004D02  013D               	movlb	61	; () banked
  9134  004D04  8FF3               	bsf	243,7,b	;volatile
  9135                           
  9136                           ; BSR set to: 61
  9137  004D06  0012               	return		;funcret
  9138  004D08                     __end_of_UART1_Init:
  9139                           	opt callstack 0
  9140                           
  9141 ;; *************** function _I2C_Init *****************
  9142 ;; Defined at:
  9143 ;;		line 4 in file "I2C.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;		None
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;		None
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  1    wreg      void 
  9150 ;; Registers used:
  9151 ;;		wreg, status,2
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9161 ;;Total ram usage:        0 bytes
  9162 ;; Hardware stack levels used:    1
  9163 ;; Hardware stack levels required when called:    2
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_main
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171                           	psect	text39
  9172  004DEA                     __ptext39:
  9173                           	opt callstack 0
  9174  004DEA                     _I2C_Init:
  9175                           	opt callstack 28
  9176                           
  9177                           ;I2C.c: 6:     TRISBbits.TRISB1 = 0;
  9178                           
  9179                           ; BSR set to: 61
  9180                           ;incstack = 0
  9181  004DEA  92C3               	bcf	16323,1,c	;volatile
  9182                           
  9183                           ;I2C.c: 7:     TRISBbits.TRISB0 = 0;
  9184  004DEC  90C3               	bcf	16323,0,c	;volatile
  9185                           
  9186                           ;I2C.c: 8:     LATBbits.LATB1 = 0;
  9187  004DEE  92BB               	bcf	16315,1,c	;volatile
  9188                           
  9189                           ;I2C.c: 9:     LATBbits.LATB0 = 0;
  9190  004DF0  90BB               	bcf	16315,0,c	;volatile
  9191                           
  9192                           ;I2C.c: 10:     ANSELBbits.ANSELB1 = 0;
  9193  004DF2  013A               	movlb	58	; () banked
  9194  004DF4  9350               	bcf	80,1,b	;volatile
  9195                           
  9196                           ;I2C.c: 11:     ANSELBbits.ANSELB0 = 0;
  9197  004DF6  9150               	bcf	80,0,b	;volatile
  9198                           
  9199                           ;I2C.c: 12:     ODCONBbits.ODCB1 = 1;
  9200  004DF8  8352               	bsf	82,1,b	;volatile
  9201                           
  9202                           ;I2C.c: 13:     ODCONBbits.ODCB0 = 1;
  9203  004DFA  8152               	bsf	82,0,b	;volatile
  9204                           
  9205                           ; BSR set to: 58
  9206                           ;I2C.c: 14:     RB1I2C = 0x01;
  9207  004DFC  0E01               	movlw	1
  9208  004DFE  6F5A               	movwf	90,b	;volatile
  9209                           
  9210                           ; BSR set to: 58
  9211                           ;I2C.c: 15:     SLRCONBbits.SLRB1 = 0;
  9212  004E00  9353               	bcf	83,1,b	;volatile
  9213                           
  9214                           ; BSR set to: 58
  9215                           ;I2C.c: 16:     SLRCONBbits.SLRB0 = 0;
  9216  004E02  9153               	bcf	83,0,b	;volatile
  9217                           
  9218                           ;I2C.c: 17:     I2C1SCLPPS = 0x09;
  9219  004E04  0E09               	movlw	9
  9220  004E06  6FE1               	movwf	225,b	;volatile
  9221                           
  9222                           ;I2C.c: 18:     I2C1SDAPPS = 0x08;
  9223  004E08  0E08               	movlw	8
  9224  004E0A  6FE2               	movwf	226,b	;volatile
  9225                           
  9226                           ;I2C.c: 19:     RB1PPS = 0x21;
  9227  004E0C  0E21               	movlw	33
  9228  004E0E  6F09               	movwf	9,b	;volatile
  9229                           
  9230                           ;I2C.c: 20:     RB0PPS = 0x22;
  9231  004E10  0E22               	movlw	34
  9232  004E12  6F08               	movwf	8,b	;volatile
  9233                           
  9234                           ;I2C.c: 22:     I2C1CON0 = 0x04;
  9235  004E14  0E04               	movlw	4
  9236  004E16  013D               	movlb	61	; () banked
  9237  004E18  6F73               	movwf	115,b	;volatile
  9238                           
  9239                           ;I2C.c: 23:     I2C1CON1 = 0x80;
  9240  004E1A  0E80               	movlw	128
  9241  004E1C  6F74               	movwf	116,b	;volatile
  9242                           
  9243                           ;I2C.c: 24:     I2C1CON2 = 0x24;
  9244  004E1E  0E24               	movlw	36
  9245  004E20  6F75               	movwf	117,b	;volatile
  9246                           
  9247                           ;I2C.c: 25:     I2C1CLK = 0x03;
  9248  004E22  0E03               	movlw	3
  9249  004E24  6F7B               	movwf	123,b	;volatile
  9250                           
  9251                           ;I2C.c: 27:     I2C1PIR = 0x00;
  9252  004E26  0E00               	movlw	0
  9253  004E28  6F79               	movwf	121,b	;volatile
  9254                           
  9255                           ;I2C.c: 28:     I2C1ERR = 0x00;
  9256  004E2A  0E00               	movlw	0
  9257  004E2C  6F76               	movwf	118,b	;volatile
  9258                           
  9259                           ;I2C.c: 30:     I2C_STOP_DETECTED = 1;
  9260  004E2E  0E01               	movlw	1
  9261  004E30  0100               	movlb	0	; () banked
  9262  004E32  6FF2               	movwf	_I2C_STOP_DETECTED& (0+255),b
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;I2C.c: 32:     IPR3bits.I2C1TXIP = 0;
  9266  004E34  0139               	movlb	57	; () banked
  9267  004E36  9183               	bcf	131,0,b	;volatile
  9268                           
  9269                           ; BSR set to: 57
  9270                           ;I2C.c: 33:     IPR2bits.I2C1RXIP = 0;
  9271  004E38  9F82               	bcf	130,7,b	;volatile
  9272                           
  9273                           ; BSR set to: 57
  9274                           ;I2C.c: 34:     PIR3bits.I2C1TXIF = 0;
  9275  004E3A  91A3               	bcf	163,0,b	;volatile
  9276                           
  9277                           ; BSR set to: 57
  9278                           ;I2C.c: 35:     PIR2bits.I2C1RXIF = 0;
  9279  004E3C  9FA2               	bcf	162,7,b	;volatile
  9280                           
  9281                           ; BSR set to: 57
  9282                           ;I2C.c: 36:     PIE3bits.I2C1TXIE = 1;
  9283  004E3E  8193               	bsf	147,0,b	;volatile
  9284                           
  9285                           ; BSR set to: 57
  9286                           ;I2C.c: 37:     PIE2bits.I2C1RXIE = 1;
  9287  004E40  8F92               	bsf	146,7,b	;volatile
  9288                           
  9289                           ; BSR set to: 57
  9290                           ;I2C.c: 40:     I2C1PIRbits.PC1IF = 0;
  9291  004E42  013D               	movlb	61	; () banked
  9292  004E44  9579               	bcf	121,2,b	;volatile
  9293                           
  9294                           ; BSR set to: 61
  9295                           ;I2C.c: 41:     I2C1PIEbits.PC1IE = 1;
  9296  004E46  857A               	bsf	122,2,b	;volatile
  9297                           
  9298                           ; BSR set to: 61
  9299                           ;I2C.c: 42:     IPR3bits.I2C1IP = 0;
  9300  004E48  0139               	movlb	57	; () banked
  9301  004E4A  9383               	bcf	131,1,b	;volatile
  9302                           
  9303                           ; BSR set to: 57
  9304                           ;I2C.c: 43:     PIR3bits.I2C1IF = 0;
  9305  004E4C  93A3               	bcf	163,1,b	;volatile
  9306                           
  9307                           ; BSR set to: 57
  9308                           ;I2C.c: 44:     PIE3bits.I2C1IE = 1;
  9309  004E4E  8393               	bsf	147,1,b	;volatile
  9310                           
  9311                           ; BSR set to: 57
  9312                           ;I2C.c: 46:     I2C1CON0bits.EN = 1;
  9313  004E50  013D               	movlb	61	; () banked
  9314  004E52  8F73               	bsf	115,7,b	;volatile
  9315                           
  9316                           ; BSR set to: 61
  9317  004E54  0012               	return		;funcret
  9318  004E56                     __end_of_I2C_Init:
  9319                           	opt callstack 0
  9320                           
  9321 ;; *************** function _ADC_Init *****************
  9322 ;; Defined at:
  9323 ;;		line 258 in file "main.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;		None
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;		None
  9328 ;; Return value:  Size  Location     Type
  9329 ;;                  1    wreg      void 
  9330 ;; Registers used:
  9331 ;;		wreg, status,2
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9341 ;;Total ram usage:        0 bytes
  9342 ;; Hardware stack levels used:    1
  9343 ;; Hardware stack levels required when called:    2
  9344 ;; This function calls:
  9345 ;;		Nothing
  9346 ;; This function is called by:
  9347 ;;		_main
  9348 ;; This function uses a non-reentrant model
  9349 ;;
  9350                           
  9351                           	psect	text40
  9352  005290                     __ptext40:
  9353                           	opt callstack 0
  9354  005290                     _ADC_Init:
  9355                           	opt callstack 28
  9356                           
  9357                           ;main.c: 260:     TRISBbits.TRISB4 = 1;
  9358                           
  9359                           ; BSR set to: 61
  9360                           ;incstack = 0
  9361  005290  88C3               	bsf	16323,4,c	;volatile
  9362                           
  9363                           ;main.c: 261:     ANSELBbits.ANSELB4 = 1;
  9364  005292  013A               	movlb	58	; () banked
  9365  005294  8950               	bsf	80,4,b	;volatile
  9366                           
  9367                           ; BSR set to: 58
  9368                           ;main.c: 262:     ADCON0 = 0x94;
  9369  005296  0E94               	movlw	148
  9370  005298  013E               	movlb	62	; () banked
  9371  00529A  6FF8               	movwf	248,b	;volatile
  9372                           
  9373                           ;main.c: 263:     ADCON1 = 0x00;
  9374  00529C  0E00               	movlw	0
  9375  00529E  6FF9               	movwf	249,b	;volatile
  9376                           
  9377                           ;main.c: 264:     ADCON2 = 0x00;
  9378  0052A0  0E00               	movlw	0
  9379  0052A2  6FFA               	movwf	250,b	;volatile
  9380                           
  9381                           ;main.c: 265:     ADREF = 0x00;
  9382  0052A4  0E00               	movlw	0
  9383  0052A6  6FFD               	movwf	253,b	;volatile
  9384                           
  9385                           ; BSR set to: 62
  9386                           ;main.c: 266:     IPR1bits.ADIP = 0;
  9387  0052A8  0139               	movlb	57	; () banked
  9388  0052AA  9581               	bcf	129,2,b	;volatile
  9389                           
  9390                           ; BSR set to: 57
  9391                           ;main.c: 267:     PIE1bits.ADIE = 1;
  9392  0052AC  8591               	bsf	145,2,b	;volatile
  9393                           
  9394                           ; BSR set to: 57
  9395                           ;main.c: 268:     PIR1bits.ADIF = 0;
  9396  0052AE  95A1               	bcf	161,2,b	;volatile
  9397                           
  9398                           ; BSR set to: 57
  9399  0052B0  0012               	return		;funcret
  9400  0052B2                     __end_of_ADC_Init:
  9401                           	opt callstack 0
  9402                           
  9403 ;; *************** function _TIMER0_ISR *****************
  9404 ;; Defined at:
  9405 ;;		line 68 in file "main.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;		None
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;		None
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  1    wreg      void 
  9412 ;; Registers used:
  9413 ;;		wreg, status,2, status,0, cstack
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9423 ;;Total ram usage:        0 bytes
  9424 ;; Hardware stack levels used:    1
  9425 ;; Hardware stack levels required when called:    1
  9426 ;; This function calls:
  9427 ;;		_ADC_Start
  9428 ;; This function is called by:
  9429 ;;		Interrupt level 2
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433                           	psect	text41
  9434  004F78                     __ptext41:
  9435                           	opt callstack 0
  9436  004F78                     _TIMER0_ISR:
  9437                           	opt callstack 20
  9438                           
  9439                           ;main.c: 69:     T0CON0bits.EN = 0;
  9440                           
  9441                           ; BSR set to: 57
  9442                           ;incstack = 0
  9443  004F78  9EB8               	bcf	16312,7,c	;volatile
  9444                           
  9445                           ;main.c: 70:     counter_timer0 ++;
  9446  004F7A  0100               	movlb	0	; () banked
  9447  004F7C  2BF1               	incf	_counter_timer0& (0+255),f,b
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;main.c: 71:     if(counter_timer0 == 2){
  9451  004F7E  0E02               	movlw	2
  9452  004F80  19F1               	xorwf	_counter_timer0& (0+255),w,b
  9453  004F82  A4D8               	btfss	status,2,c
  9454  004F84  D002               	goto	i2l5187
  9455                           
  9456                           ; BSR set to: 0
  9457                           ;main.c: 72:         LATAbits.LA0 = 0;
  9458  004F86  90BA               	bcf	16314,0,c	;volatile
  9459                           
  9460                           ;main.c: 73:     }else if(counter_timer0 == 40){
  9461  004F88  D009               	goto	i2l160
  9462  004F8A                     i2l5187:
  9463                           
  9464                           ; BSR set to: 0
  9465  004F8A  0E28               	movlw	40
  9466  004F8C  19F1               	xorwf	_counter_timer0& (0+255),w,b
  9467  004F8E  A4D8               	btfss	status,2,c
  9468  004F90  D005               	goto	i2l160
  9469                           
  9470                           ; BSR set to: 0
  9471                           ;main.c: 74:         if(led_enable)
  9472  004F92  51F0               	movf	_led_enable& (0+255),w,b
  9473  004F94  A4D8               	btfss	status,2,c
  9474                           
  9475                           ; BSR set to: 0
  9476                           ;main.c: 75:             LATAbits.LA0 = 1;
  9477  004F96  80BA               	bsf	16314,0,c	;volatile
  9478                           
  9479                           ; BSR set to: 0
  9480                           ;main.c: 76:         counter_timer0 = 0;
  9481  004F98  0E00               	movlw	0
  9482  004F9A  6FF1               	movwf	_counter_timer0& (0+255),b
  9483  004F9C                     i2l160:
  9484                           
  9485                           ; BSR set to: 0
  9486                           ;main.c: 78:     TMR0L = 0xB0;
  9487  004F9C  0EB0               	movlw	176
  9488  004F9E  6EB6               	movwf	16310,c	;volatile
  9489                           
  9490                           ;main.c: 79:     TMR0H = 0x3C;
  9491  004FA0  0E3C               	movlw	60
  9492  004FA2  6EB7               	movwf	16311,c	;volatile
  9493                           
  9494                           ;main.c: 80:     if(measur_vol_or_cur)
  9495  004FA4  51FE               	movf	_measur_vol_or_cur& (0+255),w,b
  9496  004FA6  B4D8               	btfsc	status,2,c
  9497  004FA8  D004               	goto	i2l5197
  9498                           
  9499                           ; BSR set to: 0
  9500                           ;main.c: 81:         ADC_Start(12);
  9501  004FAA  0E0C               	movlw	12
  9502  004FAC  EC96  F029         	call	_ADC_Start
  9503  004FB0  D003               	goto	i2l5199
  9504  004FB2                     i2l5197:
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;main.c: 83:         ADC_Start(13);
  9508  004FB2  0E0D               	movlw	13
  9509  004FB4  EC96  F029         	call	_ADC_Start
  9510  004FB8                     i2l5199:
  9511                           
  9512                           ;main.c: 84:     measur_vol_or_cur = !measur_vol_or_cur;
  9513  004FB8  0100               	movlb	0	; () banked
  9514  004FBA  51FE               	movf	_measur_vol_or_cur& (0+255),w,b
  9515  004FBC  A4D8               	btfss	status,2,c
  9516  004FBE  D002               	goto	i2u675_40
  9517  004FC0  0E01               	movlw	1
  9518  004FC2  D001               	goto	i2u676_40
  9519  004FC4                     i2u675_40:
  9520  004FC4  0E00               	movlw	0
  9521  004FC6                     i2u676_40:
  9522  004FC6  6FFE               	movwf	_measur_vol_or_cur& (0+255),b
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;main.c: 85:     PIR3bits.TMR0IF = 0;
  9526  004FC8  0139               	movlb	57	; () banked
  9527  004FCA  9FA3               	bcf	163,7,b	;volatile
  9528                           
  9529                           ; BSR set to: 57
  9530                           ;main.c: 86:     T0CON0bits.EN = 1;
  9531  004FCC  8EB8               	bsf	16312,7,c	;volatile
  9532                           
  9533                           ; BSR set to: 57
  9534  004FCE  0011               	retfie		f
  9535  004FD0                     __end_of_TIMER0_ISR:
  9536                           	opt callstack 0
  9537                           
  9538 ;; *************** function _ADC_Start *****************
  9539 ;; Defined at:
  9540 ;;		line 272 in file "main.c"
  9541 ;; Parameters:    Size  Location     Type
  9542 ;;  pin             1    wreg     unsigned char 
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;  pin             1    0[COMRAM] unsigned char 
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  1    wreg      void 
  9547 ;; Registers used:
  9548 ;;		wreg
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9558 ;;Total ram usage:        1 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; This function calls:
  9561 ;;		Nothing
  9562 ;; This function is called by:
  9563 ;;		_TIMER0_ISR
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           	psect	text42
  9568  00532C                     __ptext42:
  9569                           	opt callstack 0
  9570  00532C                     _ADC_Start:
  9571                           	opt callstack 20
  9572                           
  9573                           ; BSR set to: 57
  9574                           ;incstack = 0
  9575                           ;ADC_Start@pin stored from wreg
  9576  00532C  6E01               	movwf	ADC_Start@pin,c
  9577                           
  9578                           ;main.c: 273:     if(!ADCON0bits.GO){
  9579  00532E  013E               	movlb	62	; () banked
  9580  005330  B1F8               	btfsc	248,0,b	;volatile
  9581  005332  0012               	return	
  9582                           
  9583                           ; BSR set to: 62
  9584                           ;main.c: 274:         ADPCH = pin;
  9585  005334  0060  F007  FEF1   	movff	ADC_Start@pin,16113	;volatile
  9586                           
  9587                           ; BSR set to: 62
  9588                           ;main.c: 275:         ADCON0bits.GO = 1;
  9589  00533A  81F8               	bsf	248,0,b	;volatile
  9590                           
  9591                           ; BSR set to: 62
  9592  00533C  0012               	return		;funcret
  9593  00533E                     __end_of_ADC_Start:
  9594                           	opt callstack 0
  9595                           
  9596 ;; *************** function _UART1_TX_ISR *****************
  9597 ;; Defined at:
  9598 ;;		line 89 in file "main.c"
  9599 ;; Parameters:    Size  Location     Type
  9600 ;;		None
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;		None
  9603 ;; Return value:  Size  Location     Type
  9604 ;;                  1    wreg      void 
  9605 ;; Registers used:
  9606 ;;		None
  9607 ;; Tracked objects:
  9608 ;;		On entry : 0/0
  9609 ;;		On exit  : 0/0
  9610 ;;		Unchanged: 0/0
  9611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9616 ;;Total ram usage:        0 bytes
  9617 ;; Hardware stack levels used:    1
  9618 ;; This function calls:
  9619 ;;		Nothing
  9620 ;; This function is called by:
  9621 ;;		Interrupt level 2
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           	psect	text43
  9626  005340                     __ptext43:
  9627                           	opt callstack 0
  9628  005340                     _UART1_TX_ISR:
  9629                           	opt callstack 21
  9630                           
  9631                           ;main.c: 91:     U1TXB = tx_byte;
  9632                           
  9633                           ; BSR set to: 62
  9634                           ;incstack = 0
  9635  005340  0060  F3DF  FDEA   	movff	_tx_byte,15850	;volatile
  9636                           
  9637                           ;main.c: 92:     PIE3bits.U1TXIE = 0;
  9638  005346  0139               	movlb	57	; () banked
  9639  005348  9993               	bcf	147,4,b	;volatile
  9640                           
  9641                           ; BSR set to: 57
  9642  00534A  0011               	retfie		f
  9643  00534C                     __end_of_UART1_TX_ISR:
  9644                           	opt callstack 0
  9645                           
  9646 ;; *************** function _UART1_RX_ISR *****************
  9647 ;; Defined at:
  9648 ;;		line 95 in file "main.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;		None
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;		None
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      void 
  9655 ;; Registers used:
  9656 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9666 ;;Total ram usage:        0 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		Interrupt level 2
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text44
  9676  005300                     __ptext44:
  9677                           	opt callstack 0
  9678  005300                     _UART1_RX_ISR:
  9679                           	opt callstack 21
  9680                           
  9681                           ;main.c: 96:     rx_buffer[rx_counter] = U1RXB;
  9682                           
  9683                           ; BSR set to: 57
  9684                           ;incstack = 0
  9685  005300  0EC6               	movlw	low _rx_buffer
  9686  005302  245A               	addwf	_rx_counter,w,c
  9687  005304  6ED9               	movwf	fsr2l,c
  9688  005306  6ADA               	clrf	fsr2h,c
  9689  005308  0E00               	movlw	high _rx_buffer
  9690  00530A  22DA               	addwfc	fsr2h,f,c
  9691  00530C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9692                           
  9693                           ;main.c: 97:     rx_counter ++;
  9694  005312  2A5A               	incf	_rx_counter,f,c
  9695  005314  0011               	retfie		f
  9696  005316                     __end_of_UART1_RX_ISR:
  9697                           	opt callstack 0
  9698                           
  9699 ;; *************** function _ADC_ISR *****************
  9700 ;; Defined at:
  9701 ;;		line 100 in file "main.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;		None
  9704 ;; Auto vars:     Size  Location     Type
  9705 ;;  adc_result      2    3[COMRAM] int 
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  1    wreg      void 
  9708 ;; Registers used:
  9709 ;;		wreg, status,2, status,0
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/0
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9718 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9719 ;;Total ram usage:        4 bytes
  9720 ;; Hardware stack levels used:    1
  9721 ;; This function calls:
  9722 ;;		Nothing
  9723 ;; This function is called by:
  9724 ;;		Interrupt level 2
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           	psect	text45
  9729  00507C                     __ptext45:
  9730                           	opt callstack 0
  9731  00507C                     _ADC_ISR:
  9732                           	opt callstack 21
  9733                           
  9734                           ;main.c: 101:     int adc_result = ADRESL;
  9735                           
  9736                           ;incstack = 0
  9737  00507C  006F FBBC  F004    	movff	16111,ADC_ISR@adc_result	;volatile
  9738  005082  6A05               	clrf	ADC_ISR@adc_result+1,c
  9739                           
  9740                           ;main.c: 102:     adc_result = adc_result | (ADRESH <<8);
  9741  005084  013E               	movlb	62	; () banked
  9742  005086  51F0               	movf	240,w,b	;volatile
  9743  005088  6E03               	movwf	(??_ADC_ISR+1)& (0+255),c
  9744  00508A  6A02               	clrf	??_ADC_ISR& (0+255),c
  9745  00508C  5004               	movf	ADC_ISR@adc_result,w,c
  9746  00508E  1002               	iorwf	??_ADC_ISR,w,c
  9747  005090  6E04               	movwf	ADC_ISR@adc_result,c
  9748  005092  5005               	movf	ADC_ISR@adc_result+1,w,c
  9749  005094  1003               	iorwf	??_ADC_ISR+1,w,c
  9750  005096  6E05               	movwf	ADC_ISR@adc_result+1,c
  9751                           
  9752                           ;main.c: 103:     if(ADPCH == 12)
  9753  005098  0E0C               	movlw	12
  9754  00509A  19F1               	xorwf	241,w,b	;volatile
  9755  00509C  A4D8               	btfss	status,2,c
  9756  00509E  D007               	goto	i2l5217
  9757                           
  9758                           ; BSR set to: 62
  9759                           ;main.c: 104:         ADC_VOLTAGE_RESULT = adc_result;
  9760  0050A0  0060  F010  F0EC   	movff	ADC_ISR@adc_result,_ADC_VOLTAGE_RESULT
  9761  0050A6  0060  F014  F0ED   	movff	ADC_ISR@adc_result+1,_ADC_VOLTAGE_RESULT+1
  9762  0050AC  D00A               	goto	i2l181
  9763  0050AE                     i2l5217:
  9764                           
  9765                           ; BSR set to: 62
  9766  0050AE  0E0D               	movlw	13
  9767  0050B0  19F1               	xorwf	241,w,b	;volatile
  9768  0050B2  A4D8               	btfss	status,2,c
  9769  0050B4  D006               	goto	i2l181
  9770                           
  9771                           ; BSR set to: 62
  9772                           ;main.c: 106:         ADC_CURRENT_RESULT = adc_result;
  9773  0050B6  0060  F010  F0EA   	movff	ADC_ISR@adc_result,_ADC_CURRENT_RESULT
  9774  0050BC  0060  F014  F0EB   	movff	ADC_ISR@adc_result+1,_ADC_CURRENT_RESULT+1
  9775  0050C2                     i2l181:
  9776                           
  9777                           ; BSR set to: 62
  9778                           ;main.c: 107:     PIR1bits.ADIF = 0;
  9779  0050C2  0139               	movlb	57	; () banked
  9780  0050C4  95A1               	bcf	161,2,b	;volatile
  9781                           
  9782                           ; BSR set to: 57
  9783  0050C6  0011               	retfie		f
  9784  0050C8                     __end_of_ADC_ISR:
  9785                           	opt callstack 0
  9786                           
  9787 ;; *************** function _I2C_TX_ISR *****************
  9788 ;; Defined at:
  9789 ;;		line 110 in file "main.c"
  9790 ;; Parameters:    Size  Location     Type
  9791 ;;		None
  9792 ;; Auto vars:     Size  Location     Type
  9793 ;;		None
  9794 ;; Return value:  Size  Location     Type
  9795 ;;                  1    wreg      void 
  9796 ;; Registers used:
  9797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9798 ;; Tracked objects:
  9799 ;;		On entry : 0/0
  9800 ;;		On exit  : 0/0
  9801 ;;		Unchanged: 0/0
  9802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9807 ;;Total ram usage:        0 bytes
  9808 ;; Hardware stack levels used:    1
  9809 ;; This function calls:
  9810 ;;		Nothing
  9811 ;; This function is called by:
  9812 ;;		Interrupt level 2
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text46
  9817  0052B4                     __ptext46:
  9818                           	opt callstack 0
  9819  0052B4                     _I2C_TX_ISR:
  9820                           	opt callstack 21
  9821                           
  9822                           ;main.c: 111:     I2C1TXB = I2C_TX_BUFFER[I2C_TX_COUNTER];
  9823                           
  9824                           ; BSR set to: 57
  9825                           ;incstack = 0
  9826  0052B4  0E0A               	movlw	low _I2C_TX_BUFFER
  9827  0052B6  0100               	movlb	0	; () banked
  9828  0052B8  25F4               	addwf	_I2C_TX_COUNTER& (0+255),w,b
  9829  0052BA  6ED9               	movwf	fsr2l,c
  9830  0052BC  6ADA               	clrf	fsr2h,c
  9831  0052BE  0E01               	movlw	high _I2C_TX_BUFFER
  9832  0052C0  22DA               	addwfc	fsr2h,f,c
  9833  0052C2  50DF               	movf	indf2,w,c
  9834  0052C4  013D               	movlb	61	; () banked
  9835  0052C6  6F6B               	movwf	107,b	;volatile
  9836                           
  9837                           ; BSR set to: 61
  9838                           ;main.c: 112:     I2C_TX_COUNTER ++;
  9839  0052C8  0100               	movlb	0	; () banked
  9840  0052CA  2BF4               	incf	_I2C_TX_COUNTER& (0+255),f,b
  9841                           
  9842                           ; BSR set to: 0
  9843  0052CC  0011               	retfie		f
  9844  0052CE                     __end_of_I2C_TX_ISR:
  9845                           	opt callstack 0
  9846                           
  9847 ;; *************** function _I2C_RX_ISR *****************
  9848 ;; Defined at:
  9849 ;;		line 114 in file "main.c"
  9850 ;; Parameters:    Size  Location     Type
  9851 ;;		None
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;		None
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  1    wreg      void 
  9856 ;; Registers used:
  9857 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9867 ;;Total ram usage:        0 bytes
  9868 ;; Hardware stack levels used:    1
  9869 ;; This function calls:
  9870 ;;		Nothing
  9871 ;; This function is called by:
  9872 ;;		Interrupt level 2
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876                           	psect	text47
  9877  0052E8                     __ptext47:
  9878                           	opt callstack 0
  9879  0052E8                     _I2C_RX_ISR:
  9880                           	opt callstack 21
  9881                           
  9882                           ;main.c: 115:     I2C_RX_BUFFER[I2C_RX_COUNTER] = I2C1RXB;
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;incstack = 0
  9886  0052E8  0E00               	movlw	low _I2C_RX_BUFFER
  9887  0052EA  0100               	movlb	0	; () banked
  9888  0052EC  25F3               	addwf	_I2C_RX_COUNTER& (0+255),w,b
  9889  0052EE  6ED9               	movwf	fsr2l,c
  9890  0052F0  6ADA               	clrf	fsr2h,c
  9891  0052F2  0E01               	movlw	high _I2C_RX_BUFFER
  9892  0052F4  22DA               	addwfc	fsr2h,f,c
  9893  0052F6  006F F5AB FFDF     	movff	15722,indf2	;volatile
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;main.c: 116:     I2C_RX_COUNTER ++;
  9897  0052FC  2BF3               	incf	_I2C_RX_COUNTER& (0+255),f,b
  9898                           
  9899                           ; BSR set to: 0
  9900  0052FE  0011               	retfie		f
  9901  005300                     __end_of_I2C_RX_ISR:
  9902                           	opt callstack 0
  9903                           
  9904 ;; *************** function _I2C_GENERAL_ISR *****************
  9905 ;; Defined at:
  9906 ;;		line 119 in file "main.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;		None
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;		None
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  1    wreg      void 
  9913 ;; Registers used:
  9914 ;;		wreg, status,2
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9924 ;;Total ram usage:        0 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; This function calls:
  9927 ;;		Nothing
  9928 ;; This function is called by:
  9929 ;;		Interrupt level 2
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           	psect	text48
  9934  005318                     __ptext48:
  9935                           	opt callstack 0
  9936  005318                     _I2C_GENERAL_ISR:
  9937                           	opt callstack 21
  9938                           
  9939                           ;main.c: 120:     if(I2C1PIRbits.PC1IF)
  9940                           
  9941                           ; BSR set to: 0
  9942                           ;incstack = 0
  9943  005318  013D               	movlb	61	; () banked
  9944  00531A  A579               	btfss	121,2,b	;volatile
  9945  00531C  D003               	goto	i2l198
  9946                           
  9947                           ; BSR set to: 61
  9948                           ;main.c: 121:         I2C_STOP_DETECTED = 1;
  9949  00531E  0E01               	movlw	1
  9950  005320  0100               	movlb	0	; () banked
  9951  005322  6FF2               	movwf	_I2C_STOP_DETECTED& (0+255),b
  9952  005324                     i2l198:
  9953                           
  9954                           ;main.c: 122:     I2C1PIR = 0x00;
  9955  005324  0E00               	movlw	0
  9956  005326  013D               	movlb	61	; () banked
  9957  005328  6F79               	movwf	121,b	;volatile
  9958                           
  9959                           ; BSR set to: 61
  9960  00532A  0011               	retfie		f
  9961  00532C                     __end_of_I2C_GENERAL_ISR:
  9962                           	opt callstack 0
  9963                           
  9964 ;; *************** function _DEFAULT_ISR *****************
  9965 ;; Defined at:
  9966 ;;		line 125 in file "main.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;		None
  9969 ;; Auto vars:     Size  Location     Type
  9970 ;;		None
  9971 ;; Return value:  Size  Location     Type
  9972 ;;                  1    wreg      void 
  9973 ;; Registers used:
  9974 ;;		None
  9975 ;; Tracked objects:
  9976 ;;		On entry : 0/0
  9977 ;;		On exit  : 0/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9984 ;;Total ram usage:        0 bytes
  9985 ;; Hardware stack levels used:    1
  9986 ;; This function calls:
  9987 ;;		Nothing
  9988 ;; This function is called by:
  9989 ;;		Interrupt level 2
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           	psect	text49
  9994  005354                     __ptext49:
  9995                           	opt callstack 0
  9996  005354                     _DEFAULT_ISR:
  9997                           	opt callstack 21
  9998                           
  9999                           ; BSR set to: 61
 10000                           ;incstack = 0
 10001  005354  0011               	retfie		f
 10002  005356                     __end_of_DEFAULT_ISR:
 10003                           	opt callstack 0
 10004                           
 10005                           ;
 10006                           ; Interrupt Vector Table @ 0x8
 10007                           ;
 10008                           
 10009                           	psect	ivt0x8
 10010  000008                     __pivt0x8:
 10011                           	opt callstack 0
 10012  000008                     ivt0x8_base:
 10013                           	opt callstack 0
 10014                           
 10015                           ; Vector 0 : SWINT
 10016  000008  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10017                           
 10018                           ; Vector 1 : HLVD
 10019  00000A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10020                           
 10021                           ; Vector 2 : OSF
 10022  00000C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10023                           
 10024                           ; Vector 3 : CSW
 10025  00000E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10026                           
 10027                           ; Vector 4 : NVM
 10028  000010  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10029                           
 10030                           ; Vector 5 : SCAN
 10031  000012  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10032                           
 10033                           ; Vector 6 : CRC
 10034  000014  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10035                           
 10036                           ; Vector 7 : IOC
 10037  000016  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10038                           
 10039                           ; Vector 8 : INT0
 10040  000018  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10041                           
 10042                           ; Vector 9 : ZCD
 10043  00001A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10044                           
 10045                           ; Vector 10 : AD
 10046  00001C  141F               	dw	_ADC_ISR shr (0+2)
 10047                           
 10048                           ; Vector 11 : ADT
 10049  00001E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10050                           
 10051                           ; Vector 12 : CMP1
 10052  000020  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10053                           
 10054                           ; Vector 13 : SMT1
 10055  000022  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10056                           
 10057                           ; Vector 14 : SMT1PRA
 10058  000024  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10059                           
 10060                           ; Vector 15 : SMT1PRW
 10061  000026  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10062                           
 10063                           ; Vector 16 : DMA1SCNT
 10064  000028  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10065                           
 10066                           ; Vector 17 : DMA1DCNT
 10067  00002A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10068                           
 10069                           ; Vector 18 : DMA1OR
 10070  00002C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10071                           
 10072                           ; Vector 19 : DMA1A
 10073  00002E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10074                           
 10075                           ; Vector 20 : SPI1RX
 10076  000030  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10077                           
 10078                           ; Vector 21 : SPI1TX
 10079  000032  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10080                           
 10081                           ; Vector 22 : SPI1
 10082  000034  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10083                           
 10084                           ; Vector 23 : I2C1RX
 10085  000036  14BA               	dw	_I2C_RX_ISR shr (0+2)
 10086                           
 10087                           ; Vector 24 : I2C1TX
 10088  000038  14AD               	dw	_I2C_TX_ISR shr (0+2)
 10089                           
 10090                           ; Vector 25 : I2C1
 10091  00003A  14C6               	dw	_I2C_GENERAL_ISR shr (0+2)
 10092                           
 10093                           ; Vector 26 : I2C1E
 10094  00003C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10095                           
 10096                           ; Vector 27 : U1RX
 10097  00003E  14C0               	dw	_UART1_RX_ISR shr (0+2)
 10098                           
 10099                           ; Vector 28 : U1TX
 10100  000040  14D0               	dw	_UART1_TX_ISR shr (0+2)
 10101                           
 10102                           ; Vector 29 : U1E
 10103  000042  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10104                           
 10105                           ; Vector 30 : U1
 10106  000044  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10107                           
 10108                           ; Vector 31 : TMR0
 10109  000046  13DE               	dw	_TIMER0_ISR shr (0+2)
 10110                           
 10111                           ; Vector 32 : TMR1
 10112  000048  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10113                           
 10114                           ; Vector 33 : TMR1G
 10115  00004A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10116                           
 10117                           ; Vector 34 : TMR2
 10118  00004C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10119                           
 10120                           ; Vector 35 : CCP1
 10121  00004E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10122                           
 10123                           ; Vector 36 : Undefined
 10124  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10125                           
 10126                           ; Vector 37 : NCO1
 10127  000052  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10128                           
 10129                           ; Vector 38 : CWG1
 10130  000054  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10131                           
 10132                           ; Vector 39 : CLC1
 10133  000056  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10134                           
 10135                           ; Vector 40 : INT1
 10136  000058  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10137                           
 10138                           ; Vector 41 : CMP2
 10139  00005A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10140                           
 10141                           ; Vector 42 : DMA2SCNT
 10142  00005C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10143                           
 10144                           ; Vector 43 : DMA2DCNT
 10145  00005E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10146                           
 10147                           ; Vector 44 : DMA2OR
 10148  000060  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10149                           
 10150                           ; Vector 45 : DMA2A
 10151  000062  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10152                           
 10153                           ; Vector 46 : I2C2RX
 10154  000064  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10155                           
 10156                           ; Vector 47 : I2C2TX
 10157  000066  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10158                           
 10159                           ; Vector 48 : I2C2
 10160  000068  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10161                           
 10162                           ; Vector 49 : I2C2E
 10163  00006A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10164                           
 10165                           ; Vector 50 : U2RX
 10166  00006C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10167                           
 10168                           ; Vector 51 : U2TX
 10169  00006E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10170                           
 10171                           ; Vector 52 : U2E
 10172  000070  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10173                           
 10174                           ; Vector 53 : U2
 10175  000072  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10176                           
 10177                           ; Vector 54 : TMR3
 10178  000074  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10179                           
 10180                           ; Vector 55 : TMR3G
 10181  000076  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10182                           
 10183                           ; Vector 56 : TMR4
 10184  000078  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10185                           
 10186                           ; Vector 57 : CCP2
 10187  00007A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10188                           
 10189                           ; Vector 58 : Undefined
 10190  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10191                           
 10192                           ; Vector 59 : CWG2
 10193  00007E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10194                           
 10195                           ; Vector 60 : CLC2
 10196  000080  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10197                           
 10198                           ; Vector 61 : INT2
 10199  000082  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10200                           
 10201                           ; Vector 62 : Undefined
 10202  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10203                           
 10204                           ; Vector 63 : Undefined
 10205  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10206                           
 10207                           ; Vector 64 : Undefined
 10208  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10209                           
 10210                           ; Vector 65 : Undefined
 10211  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10212                           
 10213                           ; Vector 66 : Undefined
 10214  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10215                           
 10216                           ; Vector 67 : Undefined
 10217  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10218                           
 10219                           ; Vector 68 : Undefined
 10220  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10221                           
 10222                           ; Vector 69 : Undefined
 10223  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10224                           
 10225                           ; Vector 70 : TMR5
 10226  000094  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10227                           
 10228                           ; Vector 71 : TMR5G
 10229  000096  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10230                           
 10231                           ; Vector 72 : TMR6
 10232  000098  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10233                           
 10234                           ; Vector 73 : CCP3
 10235  00009A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10236                           
 10237                           ; Vector 74 : CWG3
 10238  00009C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10239                           
 10240                           ; Vector 75 : CLC3
 10241  00009E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10242                           
 10243                           ; Vector 76 : Undefined
 10244  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10245                           
 10246                           ; Vector 77 : Undefined
 10247  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10248                           
 10249                           ; Vector 78 : Undefined
 10250  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10251                           
 10252                           ; Vector 79 : Undefined
 10253  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10254                           
 10255                           ; Vector 80 : CCP4
 10256  0000A8  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10257                           
 10258                           ; Vector 81 : CLC4
 10259  0000AA  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10260  0000AC                     ivt0x8_undefint:
 10261                           	opt callstack 0
 10262  0000AC  00FF               	reset	
 10263                           
 10264                           	psect	rparam
 10265  0000                     tosu	equ	0x3FFF
 10266                           tosh	equ	0x3FFE
 10267                           tosl	equ	0x3FFD
 10268                           stkptr	equ	0x3FFC
 10269                           pclatu	equ	0x3FFB
 10270                           pclath	equ	0x3FFA
 10271                           pcl	equ	0x3FF9
 10272                           tblptru	equ	0x3FF8
 10273                           tblptrh	equ	0x3FF7
 10274                           tblptrl	equ	0x3FF6
 10275                           tablat	equ	0x3FF5
 10276                           prodh	equ	0x3FF4
 10277                           prodl	equ	0x3FF3
 10278                           indf0	equ	0x3FEF
 10279                           postinc0	equ	0x3FEE
 10280                           postdec0	equ	0x3FED
 10281                           preinc0	equ	0x3FEC
 10282                           plusw0	equ	0x3FEB
 10283                           fsr0h	equ	0x3FEA
 10284                           fsr0l	equ	0x3FE9
 10285                           wreg	equ	0x3FE8
 10286                           indf1	equ	0x3FE7
 10287                           postinc1	equ	0x3FE6
 10288                           postdec1	equ	0x3FE5
 10289                           preinc1	equ	0x3FE4
 10290                           plusw1	equ	0x3FE3
 10291                           fsr1h	equ	0x3FE2
 10292                           fsr1l	equ	0x3FE1
 10293                           bsr	equ	0x3FE0
 10294                           indf2	equ	0x3FDF
 10295                           postinc2	equ	0x3FDE
 10296                           postdec2	equ	0x3FDD
 10297                           preinc2	equ	0x3FDC
 10298                           plusw2	equ	0x3FDB
 10299                           fsr2h	equ	0x3FDA
 10300                           fsr2l	equ	0x3FD9
 10301                           status	equ	0x3FD8


Data Sizes:
    Strings     170
    Constant    0
    Data        6
    BSS         232
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      90
    BANK0           160    102     160
    BANK1           256      4     179
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_9(CODE[24]), STR_8(CODE[19]), STR_7(CODE[13]), STR_6(CODE[21]), 
		 -> STR_5(CODE[20]), STR_4(CODE[24]), STR_3(CODE[51]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S2183_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_9(CODE[24]), STR_8(CODE[19]), STR_7(CODE[13]), STR_6(CODE[21]), 
		 -> STR_5(CODE[20]), STR_4(CODE[24]), STR_3(CODE[51]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_9(CODE[24]), STR_8(CODE[19]), STR_7(CODE[13]), STR_6(CODE[21]), 
		 -> STR_5(CODE[20]), STR_4(CODE[24]), STR_3(CODE[51]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    UART1_SendString@str	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    I2C_Transmit@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> AD5272_COMMANDS(BANK0[2]), 

    memset@st	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    stof@s	PTR unsigned char  size(2) Largest target is 8
		 -> COMMAND_CURRENT_LIMIT(BANK1[8]), 


Critical Paths under _main in COMRAM

    _stof->___fladd
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _UART1_SendString->_GetStringSize
    _I2C_handler->_I2C_Transmit
    _UART1_ReceiveCommand->___wmul

Critical Paths under _TIMER0_ISR in COMRAM

    _TIMER0_ISR->_ADC_Start

Critical Paths under _UART1_TX_ISR in COMRAM

    None.

Critical Paths under _UART1_RX_ISR in COMRAM

    None.

Critical Paths under _ADC_ISR in COMRAM

    None.

Critical Paths under _I2C_TX_ISR in COMRAM

    None.

Critical Paths under _I2C_RX_ISR in COMRAM

    None.

Critical Paths under _I2C_GENERAL_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_UART_handler
    _UART_handler->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _TIMER0_ISR in BANK0

    None.

Critical Paths under _UART1_TX_ISR in BANK0

    None.

Critical Paths under _UART1_RX_ISR in BANK0

    None.

Critical Paths under _ADC_ISR in BANK0

    None.

Critical Paths under _I2C_TX_ISR in BANK0

    None.

Critical Paths under _I2C_RX_ISR in BANK0

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK0

    None.

Critical Paths under _DEFAULT_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_UART_handler

Critical Paths under _TIMER0_ISR in BANK1

    None.

Critical Paths under _UART1_TX_ISR in BANK1

    None.

Critical Paths under _UART1_RX_ISR in BANK1

    None.

Critical Paths under _ADC_ISR in BANK1

    None.

Critical Paths under _I2C_TX_ISR in BANK1

    None.

Critical Paths under _I2C_RX_ISR in BANK1

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK1

    None.

Critical Paths under _DEFAULT_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0_ISR in BANK2

    None.

Critical Paths under _UART1_TX_ISR in BANK2

    None.

Critical Paths under _UART1_RX_ISR in BANK2

    None.

Critical Paths under _ADC_ISR in BANK2

    None.

Critical Paths under _I2C_TX_ISR in BANK2

    None.

Critical Paths under _I2C_RX_ISR in BANK2

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK2

    None.

Critical Paths under _DEFAULT_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0_ISR in BANK3

    None.

Critical Paths under _UART1_TX_ISR in BANK3

    None.

Critical Paths under _UART1_RX_ISR in BANK3

    None.

Critical Paths under _ADC_ISR in BANK3

    None.

Critical Paths under _I2C_TX_ISR in BANK3

    None.

Critical Paths under _I2C_RX_ISR in BANK3

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK3

    None.

Critical Paths under _DEFAULT_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0_ISR in BANK4

    None.

Critical Paths under _UART1_TX_ISR in BANK4

    None.

Critical Paths under _UART1_RX_ISR in BANK4

    None.

Critical Paths under _ADC_ISR in BANK4

    None.

Critical Paths under _I2C_TX_ISR in BANK4

    None.

Critical Paths under _I2C_RX_ISR in BANK4

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK4

    None.

Critical Paths under _DEFAULT_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0_ISR in BANK5

    None.

Critical Paths under _UART1_TX_ISR in BANK5

    None.

Critical Paths under _UART1_RX_ISR in BANK5

    None.

Critical Paths under _ADC_ISR in BANK5

    None.

Critical Paths under _I2C_TX_ISR in BANK5

    None.

Critical Paths under _I2C_RX_ISR in BANK5

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0_ISR in BANK6

    None.

Critical Paths under _UART1_TX_ISR in BANK6

    None.

Critical Paths under _UART1_RX_ISR in BANK6

    None.

Critical Paths under _ADC_ISR in BANK6

    None.

Critical Paths under _I2C_TX_ISR in BANK6

    None.

Critical Paths under _I2C_RX_ISR in BANK6

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0_ISR in BANK7

    None.

Critical Paths under _UART1_TX_ISR in BANK7

    None.

Critical Paths under _UART1_RX_ISR in BANK7

    None.

Critical Paths under _ADC_ISR in BANK7

    None.

Critical Paths under _I2C_TX_ISR in BANK7

    None.

Critical Paths under _I2C_RX_ISR in BANK7

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TIMER0_ISR in BANK8

    None.

Critical Paths under _UART1_TX_ISR in BANK8

    None.

Critical Paths under _UART1_RX_ISR in BANK8

    None.

Critical Paths under _ADC_ISR in BANK8

    None.

Critical Paths under _I2C_TX_ISR in BANK8

    None.

Critical Paths under _I2C_RX_ISR in BANK8

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TIMER0_ISR in BANK9

    None.

Critical Paths under _UART1_TX_ISR in BANK9

    None.

Critical Paths under _UART1_RX_ISR in BANK9

    None.

Critical Paths under _ADC_ISR in BANK9

    None.

Critical Paths under _I2C_TX_ISR in BANK9

    None.

Critical Paths under _I2C_RX_ISR in BANK9

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TIMER0_ISR in BANK10

    None.

Critical Paths under _UART1_TX_ISR in BANK10

    None.

Critical Paths under _UART1_RX_ISR in BANK10

    None.

Critical Paths under _ADC_ISR in BANK10

    None.

Critical Paths under _I2C_TX_ISR in BANK10

    None.

Critical Paths under _I2C_RX_ISR in BANK10

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TIMER0_ISR in BANK11

    None.

Critical Paths under _UART1_TX_ISR in BANK11

    None.

Critical Paths under _UART1_RX_ISR in BANK11

    None.

Critical Paths under _ADC_ISR in BANK11

    None.

Critical Paths under _I2C_TX_ISR in BANK11

    None.

Critical Paths under _I2C_RX_ISR in BANK11

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TIMER0_ISR in BANK12

    None.

Critical Paths under _UART1_TX_ISR in BANK12

    None.

Critical Paths under _UART1_RX_ISR in BANK12

    None.

Critical Paths under _ADC_ISR in BANK12

    None.

Critical Paths under _I2C_TX_ISR in BANK12

    None.

Critical Paths under _I2C_RX_ISR in BANK12

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TIMER0_ISR in BANK13

    None.

Critical Paths under _UART1_TX_ISR in BANK13

    None.

Critical Paths under _UART1_RX_ISR in BANK13

    None.

Critical Paths under _ADC_ISR in BANK13

    None.

Critical Paths under _I2C_TX_ISR in BANK13

    None.

Critical Paths under _I2C_RX_ISR in BANK13

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TIMER0_ISR in BANK14

    None.

Critical Paths under _UART1_TX_ISR in BANK14

    None.

Critical Paths under _UART1_RX_ISR in BANK14

    None.

Critical Paths under _ADC_ISR in BANK14

    None.

Critical Paths under _I2C_TX_ISR in BANK14

    None.

Critical Paths under _I2C_RX_ISR in BANK14

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TIMER0_ISR in BANK15

    None.

Critical Paths under _UART1_TX_ISR in BANK15

    None.

Critical Paths under _UART1_RX_ISR in BANK15

    None.

Critical Paths under _ADC_ISR in BANK15

    None.

Critical Paths under _I2C_TX_ISR in BANK15

    None.

Critical Paths under _I2C_RX_ISR in BANK15

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TIMER0_ISR in BANK16

    None.

Critical Paths under _UART1_TX_ISR in BANK16

    None.

Critical Paths under _UART1_RX_ISR in BANK16

    None.

Critical Paths under _ADC_ISR in BANK16

    None.

Critical Paths under _I2C_TX_ISR in BANK16

    None.

Critical Paths under _I2C_RX_ISR in BANK16

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TIMER0_ISR in BANK17

    None.

Critical Paths under _UART1_TX_ISR in BANK17

    None.

Critical Paths under _UART1_RX_ISR in BANK17

    None.

Critical Paths under _ADC_ISR in BANK17

    None.

Critical Paths under _I2C_TX_ISR in BANK17

    None.

Critical Paths under _I2C_RX_ISR in BANK17

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TIMER0_ISR in BANK18

    None.

Critical Paths under _UART1_TX_ISR in BANK18

    None.

Critical Paths under _UART1_RX_ISR in BANK18

    None.

Critical Paths under _ADC_ISR in BANK18

    None.

Critical Paths under _I2C_TX_ISR in BANK18

    None.

Critical Paths under _I2C_RX_ISR in BANK18

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TIMER0_ISR in BANK19

    None.

Critical Paths under _UART1_TX_ISR in BANK19

    None.

Critical Paths under _UART1_RX_ISR in BANK19

    None.

Critical Paths under _ADC_ISR in BANK19

    None.

Critical Paths under _I2C_TX_ISR in BANK19

    None.

Critical Paths under _I2C_RX_ISR in BANK19

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TIMER0_ISR in BANK20

    None.

Critical Paths under _UART1_TX_ISR in BANK20

    None.

Critical Paths under _UART1_RX_ISR in BANK20

    None.

Critical Paths under _ADC_ISR in BANK20

    None.

Critical Paths under _I2C_TX_ISR in BANK20

    None.

Critical Paths under _I2C_RX_ISR in BANK20

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TIMER0_ISR in BANK21

    None.

Critical Paths under _UART1_TX_ISR in BANK21

    None.

Critical Paths under _UART1_RX_ISR in BANK21

    None.

Critical Paths under _ADC_ISR in BANK21

    None.

Critical Paths under _I2C_TX_ISR in BANK21

    None.

Critical Paths under _I2C_RX_ISR in BANK21

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TIMER0_ISR in BANK22

    None.

Critical Paths under _UART1_TX_ISR in BANK22

    None.

Critical Paths under _UART1_RX_ISR in BANK22

    None.

Critical Paths under _ADC_ISR in BANK22

    None.

Critical Paths under _I2C_TX_ISR in BANK22

    None.

Critical Paths under _I2C_RX_ISR in BANK22

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TIMER0_ISR in BANK23

    None.

Critical Paths under _UART1_TX_ISR in BANK23

    None.

Critical Paths under _UART1_RX_ISR in BANK23

    None.

Critical Paths under _ADC_ISR in BANK23

    None.

Critical Paths under _I2C_TX_ISR in BANK23

    None.

Critical Paths under _I2C_RX_ISR in BANK23

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TIMER0_ISR in BANK24

    None.

Critical Paths under _UART1_TX_ISR in BANK24

    None.

Critical Paths under _UART1_RX_ISR in BANK24

    None.

Critical Paths under _ADC_ISR in BANK24

    None.

Critical Paths under _I2C_TX_ISR in BANK24

    None.

Critical Paths under _I2C_RX_ISR in BANK24

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TIMER0_ISR in BANK25

    None.

Critical Paths under _UART1_TX_ISR in BANK25

    None.

Critical Paths under _UART1_RX_ISR in BANK25

    None.

Critical Paths under _ADC_ISR in BANK25

    None.

Critical Paths under _I2C_TX_ISR in BANK25

    None.

Critical Paths under _I2C_RX_ISR in BANK25

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TIMER0_ISR in BANK26

    None.

Critical Paths under _UART1_TX_ISR in BANK26

    None.

Critical Paths under _UART1_RX_ISR in BANK26

    None.

Critical Paths under _ADC_ISR in BANK26

    None.

Critical Paths under _I2C_TX_ISR in BANK26

    None.

Critical Paths under _I2C_RX_ISR in BANK26

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TIMER0_ISR in BANK27

    None.

Critical Paths under _UART1_TX_ISR in BANK27

    None.

Critical Paths under _UART1_RX_ISR in BANK27

    None.

Critical Paths under _ADC_ISR in BANK27

    None.

Critical Paths under _I2C_TX_ISR in BANK27

    None.

Critical Paths under _I2C_RX_ISR in BANK27

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TIMER0_ISR in BANK28

    None.

Critical Paths under _UART1_TX_ISR in BANK28

    None.

Critical Paths under _UART1_RX_ISR in BANK28

    None.

Critical Paths under _ADC_ISR in BANK28

    None.

Critical Paths under _I2C_TX_ISR in BANK28

    None.

Critical Paths under _I2C_RX_ISR in BANK28

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TIMER0_ISR in BANK29

    None.

Critical Paths under _UART1_TX_ISR in BANK29

    None.

Critical Paths under _UART1_RX_ISR in BANK29

    None.

Critical Paths under _ADC_ISR in BANK29

    None.

Critical Paths under _I2C_TX_ISR in BANK29

    None.

Critical Paths under _I2C_RX_ISR in BANK29

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TIMER0_ISR in BANK30

    None.

Critical Paths under _UART1_TX_ISR in BANK30

    None.

Critical Paths under _UART1_RX_ISR in BANK30

    None.

Critical Paths under _ADC_ISR in BANK30

    None.

Critical Paths under _I2C_TX_ISR in BANK30

    None.

Critical Paths under _I2C_RX_ISR in BANK30

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TIMER0_ISR in BANK31

    None.

Critical Paths under _UART1_TX_ISR in BANK31

    None.

Critical Paths under _UART1_RX_ISR in BANK31

    None.

Critical Paths under _ADC_ISR in BANK31

    None.

Critical Paths under _I2C_TX_ISR in BANK31

    None.

Critical Paths under _I2C_RX_ISR in BANK31

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   64013
                                             84 COMRAM     1     1      0
                                            100 BANK0      2     2      0
                           _ADC_Init
                           _I2C_Init
                       _I2C_Transmit
                         _UART1_Init
               _UART1_ReceiveCommand
                       _UART_handler
                             ___flge
                            ___flmul
                           ___xxtofl
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_handler                                         6     6      0   56595
                                             98 BANK0      2     2      0
                                              0 BANK1      4     4      0
                      _GetStringSize
                        _I2C_handler
                   _UART1_SendString
                            ___flmul
                           ___xxtofl
                             _memset
                            _sprintf
                               _stof
 ---------------------------------------------------------------------------------
 (2) _stof                                                17    13      4   11986
                                             60 COMRAM    17    13      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     836
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   37616
                                             80 BANK0     18    10      8
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   35678
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   35184
                                             80 COMRAM     4     4      0
                                             56 BANK0     16    10      6
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   30487
                                             68 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3957
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             30 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4187
                                             60 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3622
                                             44 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4133
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2903
                                              5 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     3      5     431
                                              5 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _UART1_SendString                                     8     4      4     449
                                              9 COMRAM     8     4      4
                      _GetStringSize (ARG)
                     _UART1_SendByte
 ---------------------------------------------------------------------------------
 (3) _UART1_SendByte                                       1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_handler                                          2     0      2     946
                                             17 COMRAM     2     0      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C_Transmit                                        12     8      4     794
                                              5 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (2) _GetStringSize                                        4     2      2     130
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART1_ReceiveCommand                                 3     3      0     604
                                             11 COMRAM     3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _TIMER0_ISR                                          0     0      0      22
                          _ADC_Start
 ---------------------------------------------------------------------------------
 (11) _ADC_Start                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ADC_ISR                                             4     4      0      68
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_TX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_RX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_GENERAL_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Init
   _I2C_Transmit
   _UART1_Init
   _UART1_ReceiveCommand
     ___wmul
   _UART_handler
     _GetStringSize
     _I2C_handler
       _I2C_Transmit
     _UART1_SendString
       _GetStringSize (ARG)
       _UART1_SendByte (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
     _memset
     _sprintf
       ___xxtofl (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isupper
           _strncmp
           _tolower
             _isupper
     _stof
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
       ___flmul
         ___xxtofl (ARG)
       ___xxtofl
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _timer0_init

 _TIMER0_ISR (ROOT)
   _ADC_Start

 _UART1_TX_ISR (ROOT)

 _UART1_RX_ISR (ROOT)

 _ADC_ISR (ROOT)

 _I2C_TX_ISR (ROOT)

 _I2C_RX_ISR (ROOT)

 _I2C_GENERAL_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      B3       7       69.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AD      58        0.0%
DATA                 0      0     1AD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri May 17 21:06:27 2019

                    ___fldiv@aexp 001E                      ___fldiv@bexp 001D  
             __size_of_I2C_RX_ISR 0018                      ___fldiv@sign 0016  
             __size_of_I2C_TX_ISR 001A            ??_UART1_ReceiveCommand 000C  
                     __CFG_CP$OFF 000000                      ___awdiv@sign 000B  
              __size_of_ADC_Start 0012               ___wmul@multiplicand 0008  
                             l209 4440                               l218 4574  
                             l605 2476                               l631 282C  
                             l564 4910                               l949 4702  
                             _pad 48D6                   __end_of_ADC_ISR 50C8  
                    ___awmod@sign 000B                               wreg 003FE8  
                    ___flmul@aexp 0021                      ___flmul@bexp 0026  
                    ___flmul@sign 0020                      ___flmul@temp 002B  
                    ___flmul@prod 0027                     __CFG_BBEN$OFF 000000  
            __size_of_DEFAULT_ISR 0002                      __CFG_LVP$OFF 000000  
                    __CFG_ZCD$OFF 000000                      ___fltol@exp1 000F  
                            l1213 34AE                              l1214 348C  
                            l1315 2F76                              l1307 2EE0  
                            l1308 2EDC                              l1229 3580  
                            l1238 35E8                              l1239 35E4  
                            l1280 3BAA                              l1441 506C  
                            l1346 43A2                              l1339 431C  
                            l1268 3B40                              l1279 3BAE  
                            l1375 403A                              l1298 2C82  
                            l6013 4D28                              l7001 38F2  
                            l6033 4D6E                              l6025 4D56  
                            l6017 4D36                              l6009 4D1C  
                            l6041 4BA8                              l6105 487C  
                            l6019 4D3E                              l5411 337A  
                            l6123 48BC                              l6115 4894  
                            l6203 2344                              l6029 4D60  
                            l6045 4BDC                              l6061 46D6  
                            l5501 34D2                              l6117 48A0  
                            l6109 488C                              l6221 245E  
                            l6205 23AA                              ?_pad 0016  
                            l7031 393A                              l7023 392E  
                            l6071 473A                              l5511 34F8  
                            l5431 33BE                              l5407 3376  
                            l6311 28F4                              l6231 248A  
                            l7111 3E9A                              l7103 3E36  
                            l7041 3960                              l7017 391E  
                            l7009 3908                              l6049 4BFA  
                            l6065 46EC                              l6057 46A2  
                            l5601 48F6                              l6241 24DA  
                            l6225 2484                              l6209 23F6  
                            l6137 210E                              l5443 33E2  
                            l5435 33C2                              l5611 4936  
                            l6323 2924                              l6331 2944  
                            l6251 24FC                              l6171 21EE  
                            l7107 3E5E                              l7115 3EB0  
                            l5509 34F4                              l5365 49A0  
                            l5605 4908                              l6413 2BC2  
                            l6261 2530                              l6149 2140  
                            l6157 2158                              l6501 32E4  
                            l7117 3ED4                              l6079 515E  
                            l5519 350A                              l5631 461C  
                            l5375 50D2                              l5383 51F0  
                            l5615 496A                              l5607 491A  
                            l6239 24D6                              l6167 21CC  
                            l6175 2220                              l6431 4770  
                            l5801 3C26                              l5537 35A4  
                            l5553 35C4                              l5529 3570  
                            l5473 343C                              l6089 482A  
                            l5385 51F4                              l6257 2520  
                            l6185 2294                              l6193 22AE  
                            l6169 21E4                              l6433 477E  
                            l7081 3D1A                              l6523 4A56  
                            l5811 3C5E                              l5715 3A28  
                            l5547 35BA                              l5627 4612  
                            l5379 50EE                              l5643 4E6E  
                            l6339 2968                              l6347 2A38  
                            l6283 275A                              l6267 256A  
                            l6275 26C4                              l6507 3302  
                            l7091 3DD6                              l6701 4B56  
                            l6605 5182                              l5813 3C60  
                            l5805 3C50                              l5741 3A96  
                            l5733 3A7E                              l5581 3664  
                            l5573 363E                              l5485 349A  
                            l5637 4664                              l5661 3F8A  
                            l7093 3DFA                              l7085 3DAA  
                            l7077 3C8A                              l7181 44D2  
                            l6527 4A82                              l5751 3AF0  
                            l5727 3A60                              l5719 3A2C  
                            l5903 2E88                              l5487 349E  
                            l5671 405C                              l6375 2AC8  
                            l6359 2A7A                              l6199 22FA  
                            l6471 3146                              l6463 30C4  
                            l7087 3DC0                              l6801 369C  
                            l6545 52E2                              l6609 5198  
                            l5833 2C2E                              l5585 366C  
                            l6377 2AD2                              l6297 2824  
                            l6289 27A8                              l6553 4D94  
                            l6641 413C                              l7177 44BC  
                            l5771 3B56                              l5851 2C6E  
                            l5835 2C32                              l5587 366E  
                            l5675 40A2                              l6387 2B34  
                            l6299 2846                              l6491 3288  
                            l6475 3182                              l6555 4DC2  
                            l6571 4358                              l6563 4334  
                            l7099 3E1C                              l6725 4C9C  
                            l6901 37A6                              l6629 5264  
                            l5765 3B3E                              l5933 2F52  
                            l5909 2EA6                              l5861 2CA0  
                            l5853 2C72                              l5837 2C42  
                            l6397 2B60                              l6581 43C8  
                            l6573 4364                              l6645 415A  
                            l7189 4576                              l6727 4CA6  
                            l6735 4CBC                              l6831 36F2  
                            l6815 36C2                              l6671 510E  
                            l5759 3B18                              l5695 39E8  
                            l5679 40D0                              l6583 43D4  
                            l6575 438A                              l6655 41D6  
                            l6639 4132                              l6729 4CB0  
                            l6737 4CDC                              l6825 36E2  
                            l6681 4AEE                              l5777 3B74  
                            l5945 2F96                              l5929 2F34  
                            l6497 32D8                              l6569 4352  
                            l6657 426A                              l6907 37B6  
                            l5971 4C22                              l5699 39EC  
                            l6659 426E                              l6853 3728  
                            l6685 4B12                              l6693 4B26  
                            l5965 4C12                              l5797 3C02  
                            l6599 4418                              l6953 386C  
                            l6697 4B3A                              l5977 4C38  
                            l5993 4C6A                              l6963 388A  
                            l6859 3730                              l5979 4C40  
                            l6893 3790                              l6885 377A  
                            l6877 3764                              l6869 374E  
                            l5997 4C78                              l5989 4C60  
                            l6993 38DC                              l6985 38C6  
                            l6977 38B0                              l6969 389A  
                            STR_1 20A8                              STR_2 20A8  
                            STR_3 2001                              STR_4 2034  
                            STR_5 2061                              STR_6 204C  
                            STR_7 2088                              STR_8 2075  
                            STR_9 2034                              u7020 3460  
                            u7030 3470                              u7200 35C8  
                            u7040 3472                              u7220 35DE  
                            u8030 4C44                              u7070 34B6  
                            u8210 4818                              u7410 465C  
                            _PIR3 0039A3                              u8140 4BF6  
                            u8220 4850                              u7420 465E  
                            u8300 2130                              u7405 463E  
                            u7430 4EB4                              u7280 364A  
                            u7360 45D8                              u8225 4846  
                            u8090 4D42                              u7530 401A  
                            u7450 5052                              u8330 21A2  
                            u7515 3FA4                              u8260 48A6  
                            u7516 3FAA                              u7460 5054  
                            u8420 242E                              u8340 21A4  
                            u9060 43DE                              u7365 45CE  
                            u7517 3FB8                              u7437 4EA6  
                            u9310 36BC                              u7550 4082  
                            u6910 51DA                              u9150 418A  
                            u7535 4010                              u9240 4B56  
                            u7480 3F50                              u6920 51DC  
                            u8520 24F8                              u7490 3F70  
                            u8450 246C                              u8370 226A  
                            u7555 4078                              u7740 3BA4  
                            u6860 4998                              u8380 226C  
                            u7485 3F46                              u9270 3698  
                            u9190 5134                              u6880 49E0  
                            u8480 24A2                              u7930 2ED6  
                            u7780 3C10                              u8900 3222  
                            u7790 3C34                              u8750 2B4A  
                            u8910 3224                              u7880 2C8E  
                            u8840 47DC                              u7970 2F42  
                            u7890 2E42                              u8770 2BAC  
                            u8690 2A5C                              u7980 2F60  
                            u8780 2BAE                              u7895 2E38  
                  _UART1_SendByte 52CE                              _dbuf 0120  
            __size_of_I2C_handler 002C                              _main 4432  
                            _prec 0056                  __end_of_I2C_Init 4E56  
                            _nout 00E6                              pad@i 001D  
                            pad@p 001A                              fsr1h 003FE2  
                            fsr2h 003FDA                              indf1 003FE7  
                            indf2 003FDF                              fsr1l 003FE1  
                            pad@w 001F                              fsr2l 003FD9  
                            _stof 40EA                  __end_of_ADC_Init 52B2  
                   ___fpclassifyf 4582                              prodh 003FF4  
                            prodl 003FF3                              start 00AE  
                 ___fldiv@new_exp 0017                      _tolower$2255 0012  
                    ___param_bank 000000                       ?_UART1_Init 0001  
                     ?_TIMER0_ISR 0001                             ??_pad 001C  
           __size_of_I2C_Transmit 00A6             _COMMAND_CURRENT_LIMIT 01A7  
                   ___fltol@sign1 000E                   __end_of___fladd 3692  
                           ?_main 0001                             _ADPCH 003EF1  
                 __end_of___fldiv 3C68                             _ADREF 003EFD  
                 __end_of___awdiv 4C86                   __end_of___flneg 5178  
                           STR_10 2095                             STR_11 209D  
                           STR_20 20A5                             STR_14 2099  
                           STR_15 20A1                             STR_18 20A5  
                 __end_of___awmod 4D7C                   __end_of___flmul 2FB4  
                 __end_of___flsub 4F1C                   __end_of___fltol 48D6  
               _UART_handler$2468 01AF                             ?_stof 003D  
                           u10130 4448                             u10177 4490  
                 ___awdiv@divisor 0008                    __CFG_DEBUG$OFF 000000  
                           _U1UIR 003DF8                             _U1RXB 003DE8  
                           _U1TXB 003DEA                             i2l160 4F9C  
                           i2l181 50C2                             i2l198 5324  
                 ___awdiv@counter 000A                             _OSCEN 0039DD  
                    vfpfcnvrt@fmt 009A                             _TMR0H 003FB7  
                           _TMR0L 003FB6            _AD5272_VOLTAGE_ADDRESS 00FF  
                I2C_handler@value 0012                    __CFG_FCMEN$OFF 000000  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                             _flags 0058  
          __end_of_UART1_SendByte 52E6                             _fputc 4988  
                           _fputs 50C8                __CFG_MCLRE$EXTMCLR 000000  
                           pad@fp 0016                             _width 00E8  
                           _putch 5352                   __end_of_isupper 51E2  
                           tablat 003FF5                 UART1_SendString@i 000E  
               __end_of_ADC_Start 533E                             stof@d 004C  
                           stof@s 003D                             status 003FD8  
                 __end_of_sprintf 4F76                    ?___fpclassifyf 0006  
                 __end_of_tolower 507A                   __end_of_strncmp 480C  
                    _I2C_Transmit 4A36                    __CFG_CSWEN$OFF 000000  
         I2C_Transmit@buffer_size 0008                   __initialization 4FD0  
                    __end_of_main 4582                      __end_of_stof 42CE  
                  __CFG_SAFEN$OFF 000000                         ??_ADC_ISR 0002  
                   _I2C_RX_BUFFER 0100                            ??_main 00C4  
                  __CFG_PR1WAY$ON 000000                            ??_stof 0041  
                   __activetblptr 000003                     _I2C_TX_BUFFER 010A  
              UART1_SendByte@byte 0006                    __CFG_MVECEN$ON 000000  
                    ??_I2C_RX_ISR 0006                      ??_I2C_TX_ISR 0006  
                          _ADCON0 003EF8                            _ADCON1 003EF9  
                          _ADCON2 003EFA                            ?_fputc 0006  
                 ?_UART1_SendByte 0001                            ?_fputs 000F  
                          _ADRESH 003EF0                            _ADRESL 003EEF  
                ___awdiv@dividend 0006                            ?_putch 0001  
                          _T0CON0 003FB8                            _T0CON1 003FB9  
                          _RB1I2C 003A5A                            _U1CON0 003DF2  
                          _U1CON1 003DF3               __size_of_UART1_Init 0082  
                          _U1BRGH 003DF6                            _U1BRGL 003DF5  
                          _U2CON2 003DDC                            _RB0PPS 003A08  
              __CFG_PWRTS$PWRT_64 000000                            _RB1PPS 003A09  
                          _RC7PPS 003A17                    __CFG_WDTCCS$SC 000000  
                          i2l5217 50AE                            i2l5187 4F8A  
                          i2l5197 4FB2               __size_of_TIMER0_ISR 0058  
                          i2l5199 4FB8                   _I2C_GENERAL_ISR 5318  
                          _OSCFRQ 0039DF                  __end_of___xxtofl 4432  
                  __CFG_XINST$OFF 000000                  _UART1_SendString 4ADC  
               _I2C_STOP_DETECTED 00F2                      vfprintf@cfmt 00AE  
                          ___flge 466E                            ___fleq 4B74  
                       ??___fladd 0035                            ___wmul 5214  
                       ??___fldiv 000E                         ??___awdiv 000A  
                       ??___flneg 000A                    __CFG_STVREN$ON 000000  
                       ??___awmod 000A                         ??___flmul 001C  
                       ??___flsub 0045                         ??___fltol 000A  
                    ?_timer0_init 0001                            _efgtoa 20AC  
              __end_of_I2C_RX_ISR 5300                __end_of_I2C_TX_ISR 52CE  
                          _floorf 3EF2                            _memset 5178  
                          clear_0 4FF8                            clear_1 5004  
                ___awdiv@quotient 000C                   ___awmod@divisor 0008  
                 ___awmod@counter 000A                            pad@buf 0018  
                          _strcpy 4E56                            _strlen 51E2  
                          fputc@c 0006                            fputs@c 0013  
                          fputs@i 0014                            fputs@s 000F  
                       ?_I2C_Init 0001                   ___fpclassifyf@e 000E  
                       ?_ADC_Init 0001                   ___fpclassifyf@u 0010  
                 ___fpclassifyf@x 0006                      __mediumconst 0000  
                          tblptrh 003FF7                         ??_isupper 0008  
                          tblptrl 003FF6                            tblptru 003FF8  
                          putch@c 0001                  __end_of_vfprintf 4DEA  
                       ??_sprintf 0055                         ??_tolower 000E  
           __end_of_GetStringSize 5142                         ??_strncmp 000C  
                      ___flge@ff1 002D                        ___flge@ff2 0031  
                 ??___fpclassifyf 000A                      ___xxtofl@arg 0010  
                    ___xxtofl@exp 000F                      ___xxtofl@val 0006  
                      ___fleq@ff1 0006                        ___fleq@ff2 000A  
                      __accesstop 0060           __end_of__initialization 5020  
                      ___flneg@f1 0006                     ___rparam_used 000001  
                      ___fltol@f1 0006                    __pcstackCOMRAM 0001  
                    __pidataBANK0 534C                    ivt0x8_undefint 00AC  
                   __end_of_fputc 4A36                     __end_of_fputs 5106  
                   __end_of_putch 5354                     ?_UART1_RX_ISR 0001  
                   ?_UART1_TX_ISR 0001                        ??_I2C_Init 0006  
                      ??_ADC_Init 0006           __end_of_I2C_GENERAL_ISR 532C  
                  _I2C_RX_COUNTER 00F3                           ??_fputc 000A  
                         ??_fputs 0013                   __CFG_IVT1WAY$ON 000000  
                         ??_putch 0006                        __pbssBANK0 00C6  
                      __pbssBANK1 0100                    _I2C_TX_COUNTER 00F4  
                         IVTBASEH 003FD6                           IVTBASEL 003FD5  
                         IVTBASEU 003FD7                           ?___flge 002D  
                         ?___fleq 0006                      ??_UART1_Init 0006  
                         _I2C1CLK 003D7B                           _I2C1CNT 003D6C  
                         _I2C1ERR 003D76                           ?___wmul 0006  
                         _I2C1PIR 003D79                           _I2C1RXB 003D6A  
                         _I2C1TXB 003D6B                   __CFG_PPS1WAY$ON 000000  
                    ??_TIMER0_ISR 0002                           ?_efgtoa 0045  
                  _counter_timer0 00F1                           ?_floorf 001F  
                         _ADC_ISR 507C                           ?_memset 0006  
                  ??_UART1_RX_ISR 0002                    ??_UART1_TX_ISR 0002  
   __size_of_UART1_ReceiveCommand 032A                           _COMMAND 00F5  
                         ?_strcpy 0006                           ?_strlen 0006  
                         _U1ERRIE 003DFA                     ??_DEFAULT_ISR 0006  
                         _U1RXPPS 003AE5                         ?___xxtofl 0006  
                         _IVTLOCK 003FD4                __size_of_vfpfcnvrt 0396  
                         _OSCTUNE 0039DE                           _WDTCON0 00395B  
                         _WDTCON1 00395C                        _led_enable 00F0  
                   ??_I2C_handler 0014                _ADC_VOLTAGE_RESULT 00EC  
              __end_of_UART1_Init 4D08                __end_of_TIMER0_ISR 4FD0  
                  GetStringSize@i 0008                         _ADC_Start 532C  
                         __Hparam 0000                           __Lparam 0000  
      __CFG_RSTOSC$HFINTOSC_64MHZ 000000                   __size_of___flge 00D0  
                 __size_of___fleq 008A                           ___fladd 334A  
                         ___fldiv 39BC                           ___awdiv 4BFE  
                         ___flneg 5142                           ___awmod 4D08  
                         ___flmul 2C02                           ___flsub 4EBE  
                         ___fltol 480C                   __size_of___wmul 002E  
           UART1_ReceiveCommand@i 000E                     ?_UART_handler 0001  
                       ?_vfprintf 00A8                      __psmallconst 2000  
                 __size_of_efgtoa 0B56                   __size_of_floorf 01F8  
                         __pcinit 4FD0                   __size_of_memset 0036  
                         __ramtop 2000              __size_of_timer0_init 0022  
                         __ptext0 4432                           __ptext1 526E  
                         __ptext2 3C68                           __ptext3 40EA  
                         __ptext4 42CE                           __ptext5 4F1C  
                         __ptext6 4D7C                           __ptext7 2FB4  
                         __ptext8 473E                           __ptext9 20AC  
                 __CFG_WRTAPP$OFF 000000                   __size_of_strcpy 0068  
                 __size_of_strlen 0032                  ??_UART1_SendByte 0006  
                    __size_of_pad 00B2                        ??___xxtofl 000A  
                ___awmod@dividend 0006                       _I2C1PIEbits 003D7A  
                 __CFG_WRTSAF$OFF 000000          __end_of_UART1_SendString 4B74  
                         _isupper 51AE                           efgtoa@c 004B  
                         efgtoa@d 0078                           efgtoa@e 0090  
                         efgtoa@f 0047                           efgtoa@g 008C  
                         efgtoa@h 0082                           efgtoa@i 008A  
                ?_I2C_GENERAL_ISR 0001                           efgtoa@l 0086  
                         efgtoa@m 0074                           efgtoa@n 0092  
                         efgtoa@p 007C                           efgtoa@t 0070  
                         efgtoa@u 0094                           efgtoa@w 007F  
                     _I2C1PIRbits 003D79                           _sprintf 4F1C  
                         _tolower 5026                           _tx_byte 00F7  
                         _strncmp 473E               __end_of_DEFAULT_ISR 5356  
            end_of_initialization 5020                           floorf@e 002D  
                         floorf@m 0029                           floorf@u 002F  
                         floorf@x 001F                           fputc@fp 0008  
                __CFG_BOREN$NOSLP 000000                           memset@i 000C  
                         memset@x 0008                           fputs@fp 0011  
                    ADC_Start@pin 0001               __end_of_I2C_handler 526E  
             UART1_SendString@str 000A                        ?_ADC_Start 0001  
               __end_of_vfpfcnvrt 334A                        efgtoa@mode 0081  
                      efgtoa@sign 007A                           postdec1 003FE5  
                         postdec2 003FDD                           postinc0 003FEE  
                         postinc1 003FE6                           postinc2 003FDE  
                  ??_UART_handler 00C2                           stof@rez 0044  
              _ADC_CURRENT_RESULT 00EA                        ??_vfprintf 0055  
           __CFG_WDTCPS$WDTCPS_31 000000                           strcpy@d 000E  
                         strlen@a 0008                           strcpy@s 000C  
                         strlen@s 0006                       ___fladd@grs 003C  
                   ___xxtofl@sign 000E                         _TRISAbits 003FC2  
                       _TRISBbits 003FC3                         _TRISCbits 003FC4  
               __size_of_I2C_Init 006C                       ___fldiv@grs 0019  
                     ___fldiv@rem 0012                        _rx_counter 005A  
               __size_of_ADC_Init 0022                  __CFG_FEXTOSC$OFF 000000  
                     ___flmul@grs 0022              __end_of_UART1_RX_ISR 5316  
            __end_of_UART1_TX_ISR 534C                    __end_of___flge 473E  
                  __end_of___fleq 4BFE                       vfpfcnvrt@ap 009C  
                     vfpfcnvrt@ct 00A4                       vfpfcnvrt@fp 0098  
                  __end_of___wmul 5242                    __end_of_efgtoa 2C02  
                  __end_of_floorf 40EA                        floorf@F524 0114  
                  __end_of_memset 51AE               UART1_Init@baud_rate 0008  
                     _DEFAULT_ISR 5354                    __end_of_strcpy 4EBE  
                  __end_of_strlen 5214               start_initialization 4FD0  
               ADC_ISR@adc_result 0004                       __end_of_pad 4988  
                      ivt0x8_base 0008                       _I2C_handler 5242  
           __end_of___fpclassifyf 466E                       ??_ADC_Start 0001  
                __CFG_LPBOREN$OFF 000000                       vfprintf@fmt 00AA  
                        ??___flge 0035                          ??___fleq 000E  
                        ??___wmul 000A                          ??_efgtoa 004C  
                     __pdataBANK0 00FA                          ??_floorf 0023  
            _COMMAND_WRITE_NUMBER 00EE            __size_of_GetStringSize 003C  
                        ?_ADC_ISR 0001                          ??_memset 000B  
                 _AD5272_COMMANDS 00F8                        memset@size 0009  
                        ??_strcpy 000A                          ??_strlen 0008  
 _CURRENT_REAL_AMPLIFIED_DVOLTAGE 011C                         ___fladd@a 0031  
                       ___fladd@b 002D                         ___fldiv@a 000A  
                       ___fldiv@b 0006                         ___flmul@a 0018  
                       ___flmul@b 0014                       __pbssCOMRAM 0056  
                       ___flsub@a 0041                         ___flsub@b 003D  
                   __pcstackBANK0 0060                     __pcstackBANK1 01AF  
               __size_of___xxtofl 0164              __end_of_UART_handler 3EF2  
    __end_of_UART1_ReceiveCommand 39BC                     ?_I2C_Transmit 0006  
                     _efgtoa$1671 0064                       _efgtoa$1672 0066  
                     _efgtoa$1681 006A                       _efgtoa$1682 006C  
                     _efgtoa$1683 006E                       _efgtoa$1677 0068  
                        ?___fladd 002D                          ?___fldiv 0006  
                        ?___awdiv 0006                          ?___flneg 0006  
                        ?___awmod 0006                          ?___flmul 0014  
                        ?___flsub 003D                          ?___fltol 0006  
                        _I2C1ADB1 003D6E                          _I2C1CON0 003D73  
                        _I2C1CON1 003D74                          _I2C1CON2 003D75  
             main@receive_command 0055                 __size_of_vfprintf 006E  
        UART1_SendString@attempts 0010            __CFG_BBSIZE$BBSIZE_512 000000  
                     __smallconst 2000                          _I2C_Init 4DEA  
                        _ADC_Init 5290                          ?_isupper 0006  
               ?_UART1_SendString 000A                  __CFG_WDTE$SWDTEN 000000  
           __size_of_UART1_RX_ISR 0016             __size_of_UART1_TX_ISR 000C  
                        ?_sprintf 00B0                          ?_tolower 000C  
                  __size_of_fputc 00AE                    __size_of_fputs 003E  
                        ?_strncmp 0006                ??_UART1_SendString 000E  
                  __size_of_putch 0002                     _GetStringSize 5106  
                      _I2C1SDAPPS 003AE2                        _I2C1SCLPPS 003AE1  
                  ___wmul@product 000A                          _LATAbits 003FBA  
                        _LATBbits 003FBB                    ??_I2C_Transmit 000A  
                        _IPR1bits 003981                          _IPR2bits 003982  
                        _IPR3bits 003983                          _PIE1bits 003991  
                        _PIE2bits 003992                          _PIE3bits 003993  
             __CFG_BORV$VBOR_2P85 000000                     _I2C1STAT0bits 003D77  
                        _PIR1bits 0039A1                          _PIR2bits 0039A2  
                        _PIR3bits 0039A3                          i2u675_40 4FC4  
                        i2u676_40 4FC6                     ??_timer0_init 0006  
                       _vfpfcnvrt 2FB4                         _rx_buffer 00C6  
                __size_of_ADC_ISR 004C                        _ADCON0bits 003EF8  
               ___wmul@multiplier 0006                      _UART1_RX_ISR 5300  
                    _UART1_TX_ISR 5340                         _tx_buffer 0170  
_CURRENT_LIMIT_AMPLIFIED_DVOLTAGE 00FA                        _I2C_RX_ISR 52E8  
                      _I2C_TX_ISR 52B4                        vfpfcnvrt@c 00A7  
                      vfpfcnvrt@f 00A0                       _INTCON0bits 003FD2  
                  ?_GetStringSize 0006                         copy_data0 4FE4  
                   I2C_Transmit@i 0011                    stof@point_seen 0042  
               _measur_vol_or_cur 00FE          __size_of_I2C_GENERAL_ISR 0014  
                        __Hrparam 0000                        vfprintf@ap 00AC  
                        __Lrparam 0000                        vfprintf@fp 00A8  
                __size_of___fladd 0348                  __size_of___fldiv 02AC  
                __size_of___awdiv 0088                  __size_of___flneg 0036  
                __size_of___awmod 0074                  __size_of___flmul 03B2  
                __size_of___flsub 005E                  __size_of___fltol 00CA  
                      ?_vfpfcnvrt 0098              _UART1_ReceiveCommand 3692  
                      _ANSELAbits 003A40                        _ANSELBbits 003A50  
                      _ANSELCbits 003A60                ___fpclassifyf@F463 0118  
             __end_of_timer0_init 5290                      ?_DEFAULT_ISR 0001  
                      sprintf@fmt 00B2                          ___xxtofl 42CE  
                      _T0CON0bits 003FB8             __size_of_UART_handler 028A  
                      _COMMAND_WR 00F6                      _I2C1CON0bits 003D73  
                        __pivt0x8 0008                          __ptext10 5026  
                        __ptext11 51AE                          __ptext20 480C  
                        __ptext12 4E56                          __ptext21 4EBE  
                        __ptext13 48D6                          __ptext30 5178  
                        __ptext22 334A                          __ptext14 51E2  
                        __ptext31 4ADC                          __ptext23 5142  
                        __ptext15 50C8                          __ptext40 5290  
                        __ptext32 52CE                          __ptext24 2C02  
                        __ptext16 4988                          __ptext41 4F78  
                        __ptext33 5242                          __ptext25 466E  
                        __ptext17 5352                          __ptext42 532C  
                        __ptext34 4A36                          __ptext26 4B74  
                        __ptext18 3EF2                          __ptext43 5340  
                        __ptext35 5106                          __ptext27 39BC  
                        __ptext19 4582                          __ptext44 5300  
                        __ptext36 3692                          __ptext28 4D08  
                        __ptext45 507C                          __ptext37 5214  
                        __ptext29 4BFE                          __ptext46 52B4  
                        __ptext38 4C86                          __ptext47 52E8  
                        __ptext39 4DEA                          __ptext48 5318  
                        __ptext49 5354                  __size_of_isupper 0034  
                      _U1CON1bits 003DF3                      ?_I2C_handler 0012  
                __size_of_sprintf 005A                  __size_of_tolower 0054  
                      strcpy@dest 0006                  __size_of_strncmp 00CE  
         __size_of_UART1_SendByte 0018                     __size_of_main 0150  
                   __size_of_stof 01E4              __CFG_WDTCWS$WDTCWS_7 000000  
                        efgtoa@fp 0045                          efgtoa@ne 0076  
                        efgtoa@pp 0072                          efgtoa@ou 0060  
             I2C_Transmit@address 0009                        _ODCONBbits 003A52  
                        _vfprintf 4D7C                      _UART_handler 3C68  
           ?_UART1_ReceiveCommand 0001                       _OSCSTATbits 0039DC  
            __end_of_I2C_Transmit 4ADC                    _vfpfcnvrt$1700 009E  
                 ??_GetStringSize 0008                       ?_I2C_RX_ISR 0001  
                     ?_I2C_TX_ISR 0001                          memset@st 0006  
                        intlevel2 0000                         sprintf@ap 00BA  
            UART1_SendString@size 000C                 __CFG_CLKOUTEN$OFF 000000  
                     _SLRCONBbits 003A53                         strcpy@src 0008  
                     _PPSLOCKbits 003ABF                          isupper@c 0006  
                       strncmp@_l 0006                         strncmp@_r 0008  
               ??_I2C_GENERAL_ISR 0006                       efgtoa@nmode 007E  
                      _UART1_Init 4C86                I2C_Transmit@buffer 0006  
                     _timer0_init 526E                        _TIMER0_ISR 4F78  
                     ??_vfpfcnvrt 0051                          stof@fact 0048  
                        sprintf@f 00BC                          tolower@c 000C  
                        sprintf@s 00B0            __size_of___fpclassifyf 00EC  
                        strncmp@l 000D                          strncmp@n 000A  
                        strncmp@r 000F                     ___fladd@signs 0039  
                    ___fladd@aexp 003A                      ___fladd@bexp 003B  
       __size_of_UART1_SendString 0098  
