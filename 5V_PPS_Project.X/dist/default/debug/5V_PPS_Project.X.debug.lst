

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu May  2 13:05:50 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=4,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=4,class=CODE,delta=1
    56                           	psect	text42,global,reloc=4,class=CODE,delta=1
    57                           	psect	text43,global,reloc=4,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=4,class=CODE,delta=1
    61                           	psect	text47,global,reloc=4,class=CODE,delta=1
    62                           	psect	text48,global,reloc=4,class=CODE,delta=1
    63                           	psect	text49,global,reloc=4,class=CODE,delta=1
    64                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    67  0000                     
    68                           ; Version 2.05
    69                           ; Generated 20/12/2018 GMT
    70                           ; 
    71                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F27K42 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataCOMRAM
   104  00529C                     __pidataCOMRAM:
   105                           	opt callstack 0
   106                           
   107                           ;initializer for _AD5272_CURRENT_ADDRESS
   108  00529C  58                 	db	88
   109                           
   110                           ;initializer for _AD5272_VOLTAGE_ADDRESS
   111  00529D  5E                 	db	94
   112  0000                     _PIE2bits	set	14738
   113  0000                     _PIR2bits	set	14754
   114  0000                     _IPR2bits	set	14722
   115  0000                     _PIE1bits	set	14737
   116  0000                     _IPR1bits	set	14721
   117  0000                     _WDTCON0	set	14683
   118  0000                     _WDTCON1	set	14684
   119  0000                     _OSCSTATbits	set	14812
   120  0000                     _OSCEN	set	14813
   121  0000                     _OSCTUNE	set	14814
   122  0000                     _OSCFRQ	set	14815
   123  0000                     _PIR1bits	set	14753
   124  0000                     _PIR3bits	set	14755
   125  0000                     _PIR3	set	14755
   126  0000                     _IPR3bits	set	14723
   127  0000                     _PIE3bits	set	14739
   128  0000                     _RB0PPS	set	14856
   129  0000                     _RB1PPS	set	14857
   130  0000                     _I2C1SDAPPS	set	15074
   131  0000                     _I2C1SCLPPS	set	15073
   132  0000                     _SLRCONBbits	set	14931
   133  0000                     _RB1I2C	set	14938
   134  0000                     _ODCONBbits	set	14930
   135  0000                     _ANSELBbits	set	14928
   136  0000                     _ANSELAbits	set	14912
   137  0000                     _PPSLOCKbits	set	15039
   138  0000                     _RC7PPS	set	14871
   139  0000                     _U1RXPPS	set	15077
   140  0000                     _ANSELCbits	set	14944
   141  0000                     _I2C1ADB1	set	15726
   142  0000                     _I2C1CNT	set	15724
   143  0000                     _I2C1STAT0bits	set	15735
   144  0000                     _I2C1CON0bits	set	15731
   145  0000                     _I2C1PIEbits	set	15738
   146  0000                     _I2C1ERR	set	15734
   147  0000                     _I2C1CLK	set	15739
   148  0000                     _I2C1CON2	set	15733
   149  0000                     _I2C1CON1	set	15732
   150  0000                     _I2C1CON0	set	15731
   151  0000                     _I2C1PIR	set	15737
   152  0000                     _I2C1PIRbits	set	15737
   153  0000                     _I2C1RXB	set	15722
   154  0000                     _I2C1TXB	set	15723
   155  0000                     _U1RXB	set	15848
   156  0000                     _U1TXB	set	15850
   157  0000                     _U1CON1bits	set	15859
   158  0000                     _U1UIR	set	15864
   159  0000                     _U1ERRIE	set	15866
   160  0000                     _U2CON2	set	15836
   161  0000                     _U1CON1	set	15859
   162  0000                     _U1CON0	set	15858
   163  0000                     _U1BRGL	set	15861
   164  0000                     _U1BRGH	set	15862
   165  0000                     _ADPCH	set	16113
   166  0000                     _ADCON0bits	set	16120
   167  0000                     _ADREF	set	16125
   168  0000                     _ADCON2	set	16122
   169  0000                     _ADCON1	set	16121
   170  0000                     _ADCON0	set	16120
   171  0000                     _ADRESH	set	16112
   172  0000                     _ADRESL	set	16111
   173  0000                     _T0CON1	set	16313
   174  0000                     _T0CON0	set	16312
   175  0000                     _LATBbits	set	16315
   176  0000                     _TRISBbits	set	16323
   177  0000                     _TRISAbits	set	16322
   178  0000                     _INTCON0bits	set	16338
   179  0000                     _IVTLOCK	set	16340
   180  0000                     _TMR0H	set	16311
   181  0000                     _TMR0L	set	16310
   182  0000                     _LATAbits	set	16314
   183  0000                     _T0CON0bits	set	16312
   184  0000                     _TRISCbits	set	16324
   185                           
   186                           	psect	smallconst
   187  002000                     __psmallconst:
   188                           	opt callstack 0
   189  002000  00                 	db	0
   190  002001                     STR_3:
   191  002001  43                 	db	67	;'C'
   192  002002  6F                 	db	111	;'o'
   193  002003  6D                 	db	109	;'m'
   194  002004  6D                 	db	109	;'m'
   195  002005  61                 	db	97	;'a'
   196  002006  6E                 	db	110	;'n'
   197  002007  64                 	db	100	;'d'
   198  002008  20                 	db	32
   199  002009  6E                 	db	110	;'n'
   200  00200A  6F                 	db	111	;'o'
   201  00200B  74                 	db	116	;'t'
   202  00200C  20                 	db	32
   203  00200D  72                 	db	114	;'r'
   204  00200E  65                 	db	101	;'e'
   205  00200F  63                 	db	99	;'c'
   206  002010  6F                 	db	111	;'o'
   207  002011  67                 	db	103	;'g'
   208  002012  6E                 	db	110	;'n'
   209  002013  69                 	db	105	;'i'
   210  002014  7A                 	db	122	;'z'
   211  002015  65                 	db	101	;'e'
   212  002016  64                 	db	100	;'d'
   213  002017  21                 	db	33
   214  002018  00                 	db	0
   215  002019                     STR_5:
   216  002019  42                 	db	66	;'B'
   217  00201A  6C                 	db	108	;'l'
   218  00201B  69                 	db	105	;'i'
   219  00201C  6E                 	db	110	;'n'
   220  00201D  6B                 	db	107	;'k'
   221  00201E  69                 	db	105	;'i'
   222  00201F  6E                 	db	110	;'n'
   223  002020  67                 	db	103	;'g'
   224  002021  20                 	db	32
   225  002022  4C                 	db	76	;'L'
   226  002023  45                 	db	69	;'E'
   227  002024  44                 	db	68	;'D'
   228  002025  20                 	db	32
   229  002026  69                 	db	105	;'i'
   230  002027  73                 	db	115	;'s'
   231  002028  20                 	db	32
   232  002029  4F                 	db	79	;'O'
   233  00202A  46                 	db	70	;'F'
   234  00202B  46                 	db	70	;'F'
   235  00202C  21                 	db	33
   236  00202D  00                 	db	0
   237  00202E                     STR_4:
   238  00202E  42                 	db	66	;'B'
   239  00202F  6C                 	db	108	;'l'
   240  002030  69                 	db	105	;'i'
   241  002031  6E                 	db	110	;'n'
   242  002032  6B                 	db	107	;'k'
   243  002033  69                 	db	105	;'i'
   244  002034  6E                 	db	110	;'n'
   245  002035  67                 	db	103	;'g'
   246  002036  20                 	db	32
   247  002037  4C                 	db	76	;'L'
   248  002038  45                 	db	69	;'E'
   249  002039  44                 	db	68	;'D'
   250  00203A  20                 	db	32
   251  00203B  69                 	db	105	;'i'
   252  00203C  73                 	db	115	;'s'
   253  00203D  20                 	db	32
   254  00203E  4F                 	db	79	;'O'
   255  00203F  4E                 	db	78	;'N'
   256  002040  21                 	db	33
   257  002041  00                 	db	0
   258  002042                     STR_7:
   259  002042  43                 	db	67	;'C'
   260  002043  75                 	db	117	;'u'
   261  002044  72                 	db	114	;'r'
   262  002045  72                 	db	114	;'r'
   263  002046  65                 	db	101	;'e'
   264  002047  6E                 	db	110	;'n'
   265  002048  74                 	db	116	;'t'
   266  002049  20                 	db	32
   267  00204A  4C                 	db	76	;'L'
   268  00204B  69                 	db	105	;'i'
   269  00204C  6D                 	db	109	;'m'
   270  00204D  69                 	db	105	;'i'
   271  00204E  74                 	db	116	;'t'
   272  00204F  20                 	db	32
   273  002050  73                 	db	115	;'s'
   274  002051  65                 	db	101	;'e'
   275  002052  74                 	db	116	;'t'
   276  002053  21                 	db	33
   277  002054  00                 	db	0
   278  002055                     STR_6:
   279  002055  56                 	db	86	;'V'
   280  002056  6F                 	db	111	;'o'
   281  002057  6C                 	db	108	;'l'
   282  002058  74                 	db	116	;'t'
   283  002059  61                 	db	97	;'a'
   284  00205A  67                 	db	103	;'g'
   285  00205B  65                 	db	101	;'e'
   286  00205C  20                 	db	32
   287  00205D  73                 	db	115	;'s'
   288  00205E  65                 	db	101	;'e'
   289  00205F  74                 	db	116	;'t'
   290  002060  21                 	db	33
   291  002061  00                 	db	0
   292  002062                     STR_2:
   293  002062  43                 	db	67	;'C'
   294  002063  75                 	db	117	;'u'
   295  002064  72                 	db	114	;'r'
   296  002065  72                 	db	114	;'r'
   297  002066  65                 	db	101	;'e'
   298  002067  6E                 	db	110	;'n'
   299  002068  74                 	db	116	;'t'
   300  002069  3A                 	db	58	;':'
   301  00206A  25                 	db	37
   302  00206B  66                 	db	102	;'f'
   303  00206C  20                 	db	32
   304  00206D  41                 	db	65	;'A'
   305  00206E  00                 	db	0
   306  00206F                     STR_1:
   307  00206F  56                 	db	86	;'V'
   308  002070  6F                 	db	111	;'o'
   309  002071  6C                 	db	108	;'l'
   310  002072  74                 	db	116	;'t'
   311  002073  61                 	db	97	;'a'
   312  002074  67                 	db	103	;'g'
   313  002075  65                 	db	101	;'e'
   314  002076  3A                 	db	58	;':'
   315  002077  25                 	db	37
   316  002078  66                 	db	102	;'f'
   317  002079  20                 	db	32
   318  00207A  56                 	db	86	;'V'
   319  00207B  00                 	db	0
   320  00207C                     STR_9:
   321  00207C  49                 	db	73	;'I'
   322  00207D  4E                 	db	78	;'N'
   323  00207E  46                 	db	70	;'F'
   324  00207F  00                 	db	0
   325  002080                     STR_13:
   326  002080  4E                 	db	78	;'N'
   327  002081  41                 	db	65	;'A'
   328  002082  4E                 	db	78	;'N'
   329  002083  00                 	db	0
   330  002084                     STR_10:
   331  002084  69                 	db	105	;'i'
   332  002085  6E                 	db	110	;'n'
   333  002086  66                 	db	102	;'f'
   334  002087  00                 	db	0
   335  002088                     STR_14:
   336  002088  6E                 	db	110	;'n'
   337  002089  61                 	db	97	;'a'
   338  00208A  6E                 	db	110	;'n'
   339  00208B  00                 	db	0
   340  00208C                     STR_17:
   341  00208C  6C                 	db	108	;'l'
   342  00208D  66                 	db	102	;'f'
   343  00208E  00                 	db	0
   344  0000                     
   345                           ; #config settings
   346  00208F  00                 	db	0	; dummy byte at the end
   347  0000                     
   348                           	psect	cinit
   349  004FC0                     __pcinit:
   350                           	opt callstack 0
   351  004FC0                     start_initialization:
   352                           	opt callstack 0
   353  004FC0                     __initialization:
   354                           	opt callstack 0
   355                           
   356                           ; Initialize objects allocated to COMRAM (2 bytes)
   357                           ; load TBLPTR registers with __pidataCOMRAM
   358  004FC0  0E9C               	movlw	low __pidataCOMRAM
   359  004FC2  6EF6               	movwf	tblptrl,c
   360  004FC4  0E52               	movlw	high __pidataCOMRAM
   361  004FC6  6EF7               	movwf	tblptrh,c
   362  004FC8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   363  004FCA  6EF8               	movwf	tblptru,c
   364  004FCC  0009               	tblrd		*+	;fetch initializer
   365  004FCE  006F FFD4  F04E    	movff	tablat,__pdataCOMRAM
   366  004FD4  0009               	tblrd		*+	;fetch initializer
   367  004FD6  006F FFD4  F04F    	movff	tablat,__pdataCOMRAM+1
   368                           
   369                           ; Clear objects allocated to BANK1 (164 bytes)
   370  004FDC  EE00  F100         	lfsr	0,__pbssBANK1
   371  004FE0  0EA4               	movlw	164
   372  004FE2                     clear_0:
   373  004FE2  6AEE               	clrf	postinc0,c
   374  004FE4  06E8               	decf	wreg,f,c
   375  004FE6  E1FD               	bnz	clear_0
   376                           
   377                           ; Clear objects allocated to COMRAM (33 bytes)
   378  004FE8  EE00  F02D         	lfsr	0,__pbssCOMRAM
   379  004FEC  0E21               	movlw	33
   380  004FEE                     clear_1:
   381  004FEE  6AEE               	clrf	postinc0,c
   382  004FF0  06E8               	decf	wreg,f,c
   383  004FF2  E1FD               	bnz	clear_1
   384                           
   385                           ;
   386                           ; Setup IVTBASE
   387                           ;
   388  004FF4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   389  004FF6  6ED5               	movwf	213,c
   390  004FF8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   391  004FFA  6ED6               	movwf	214,c
   392  004FFC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   393  004FFE  6ED7               	movwf	215,c
   394  005000                     end_of_initialization:
   395                           	opt callstack 0
   396  005000                     __end_of__initialization:
   397                           	opt callstack 0
   398  005000  0100               	movlb	0
   399  005002  EF8F  F023         	goto	_main	;jump to C main() function
   400                           
   401                           	psect	bssCOMRAM
   402  00002D                     __pbssCOMRAM:
   403                           	opt callstack 0
   404  00002D                     floorf@F524:
   405                           	opt callstack 0
   406  00002D                     	ds	4
   407  000031                     ___fpclassifyf@F463:
   408                           	opt callstack 0
   409  000031                     	ds	4
   410  000035                     _ADC_VOLTAGE_RESULT:
   411                           	opt callstack 0
   412  000035                     	ds	4
   413  000039                     _nout:
   414                           	opt callstack 0
   415  000039                     	ds	2
   416  00003B                     _width:
   417                           	opt callstack 0
   418  00003B                     	ds	2
   419  00003D                     _prec:
   420                           	opt callstack 0
   421  00003D                     	ds	2
   422  00003F                     _flags:
   423                           	opt callstack 0
   424  00003F                     	ds	2
   425  000041                     _COMMAND_WRITE_NUMBER:
   426                           	opt callstack 0
   427  000041                     	ds	2
   428  000043                     _led_enable:
   429                           	opt callstack 0
   430  000043                     	ds	1
   431  000044                     _counter_timer0:
   432                           	opt callstack 0
   433  000044                     	ds	1
   434  000045                     _I2C_STOP_DETECTED:
   435                           	opt callstack 0
   436  000045                     	ds	1
   437  000046                     _I2C_RX_COUNTER:
   438                           	opt callstack 0
   439  000046                     	ds	1
   440  000047                     _I2C_TX_COUNTER:
   441                           	opt callstack 0
   442  000047                     	ds	1
   443  000048                     _COMMAND:
   444                           	opt callstack 0
   445  000048                     	ds	1
   446  000049                     _COMMAND_WR:
   447                           	opt callstack 0
   448  000049                     	ds	1
   449  00004A                     _tx_byte:
   450                           	opt callstack 0
   451  00004A                     	ds	1
   452  00004B                     _rx_counter:
   453                           	opt callstack 0
   454  00004B                     	ds	1
   455  00004C                     _AD5272_COMMANDS:
   456                           	opt callstack 0
   457  00004C                     	ds	2
   458                           
   459                           	psect	dataCOMRAM
   460  00004E                     __pdataCOMRAM:
   461                           	opt callstack 0
   462  00004E                     _AD5272_CURRENT_ADDRESS:
   463                           	opt callstack 0
   464  00004E                     	ds	1
   465  00004F                     _AD5272_VOLTAGE_ADDRESS:
   466                           	opt callstack 0
   467  00004F                     	ds	1
   468                           
   469                           	psect	bssBANK1
   470  000100                     __pbssBANK1:
   471                           	opt callstack 0
   472  000100                     _rx_buffer:
   473                           	opt callstack 0
   474  000100                     	ds	32
   475  000120                     _I2C_RX_BUFFER:
   476                           	opt callstack 0
   477  000120                     	ds	10
   478  00012A                     _I2C_TX_BUFFER:
   479                           	opt callstack 0
   480  00012A                     	ds	10
   481  000134                     _dbuf:
   482                           	opt callstack 0
   483  000134                     	ds	80
   484  000184                     _tx_buffer:
   485                           	opt callstack 0
   486  000184                     	ds	32
   487                           
   488                           	psect	cstackBANK1
   489  0001A4                     __pcstackBANK1:
   490                           	opt callstack 0
   491  0001A4                     ??_USART_handler:
   492                           
   493                           ; 1 bytes @ 0x0
   494  0001A4                     	ds	2
   495  0001A6                     ??_main:
   496                           
   497                           ; 1 bytes @ 0x2
   498  0001A6                     	ds	2
   499                           
   500                           	psect	cstackBANK0
   501  000060                     __pcstackBANK0:
   502                           	opt callstack 0
   503  000060                     ??_USART1_Init:
   504  000060                     ?_GetStringSize:
   505                           	opt callstack 0
   506  000060                     ?_strlen:
   507                           	opt callstack 0
   508  000060                     ?___fpclassifyf:
   509                           	opt callstack 0
   510  000060                     ?_isupper:
   511                           	opt callstack 0
   512  000060                     ?_strncmp:
   513                           	opt callstack 0
   514  000060                     ?___wmul:
   515                           	opt callstack 0
   516  000060                     ?___awdiv:
   517                           	opt callstack 0
   518  000060                     ?___awmod:
   519                           	opt callstack 0
   520  000060                     ?___fladd:
   521                           	opt callstack 0
   522  000060                     ?___fldiv:
   523                           	opt callstack 0
   524  000060                     ?___flmul:
   525                           	opt callstack 0
   526  000060                     ?___flneg:
   527                           	opt callstack 0
   528  000060                     ?___fltol:
   529                           	opt callstack 0
   530  000060                     USART1_SendByte@byte:
   531                           	opt callstack 0
   532  000060                     memset@st:
   533                           	opt callstack 0
   534  000060                     I2C_Transmit@buffer:
   535                           	opt callstack 0
   536  000060                     ___wmul@multiplier:
   537                           	opt callstack 0
   538  000060                     ___awdiv@dividend:
   539                           	opt callstack 0
   540  000060                     ___awmod@dividend:
   541                           	opt callstack 0
   542  000060                     isupper@c:
   543                           	opt callstack 0
   544  000060                     fputc@c:
   545                           	opt callstack 0
   546  000060                     strcpy@dest:
   547                           	opt callstack 0
   548  000060                     strlen@s:
   549                           	opt callstack 0
   550  000060                     strncmp@_l:
   551                           	opt callstack 0
   552  000060                     ___fleq@ff1:
   553                           	opt callstack 0
   554  000060                     ___flneg@f1:
   555                           	opt callstack 0
   556  000060                     ___fltol@f1:
   557                           	opt callstack 0
   558  000060                     ___fladd@b:
   559                           	opt callstack 0
   560  000060                     ___fldiv@b:
   561                           	opt callstack 0
   562  000060                     ___flmul@b:
   563                           	opt callstack 0
   564  000060                     ___fpclassifyf@x:
   565                           	opt callstack 0
   566                           
   567                           ; 4 bytes @ 0x0
   568  000060                     	ds	2
   569  000062                     ??_isupper:
   570  000062                     USART1_Init@baud_rate:
   571                           	opt callstack 0
   572  000062                     memset@x:
   573                           	opt callstack 0
   574  000062                     I2C_Transmit@buffer_size:
   575                           	opt callstack 0
   576  000062                     GetStringSize@i:
   577                           	opt callstack 0
   578  000062                     ___wmul@multiplicand:
   579                           	opt callstack 0
   580  000062                     ___awdiv@divisor:
   581                           	opt callstack 0
   582  000062                     ___awmod@divisor:
   583                           	opt callstack 0
   584  000062                     fputc@fp:
   585                           	opt callstack 0
   586  000062                     strcpy@src:
   587                           	opt callstack 0
   588  000062                     strlen@a:
   589                           	opt callstack 0
   590  000062                     strncmp@_r:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0x2
   594  000062                     	ds	1
   595  000063                     I2C_Transmit@address:
   596                           	opt callstack 0
   597  000063                     memset@size:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0x3
   601  000063                     	ds	1
   602  000064                     ??_I2C_Transmit:
   603  000064                     ??_fputc:
   604  000064                     ??___fpclassifyf:
   605  000064                     ??_strcpy:
   606  000064                     ??___fltol:
   607  000064                     ___awdiv@counter:
   608                           	opt callstack 0
   609  000064                     ___awmod@counter:
   610                           	opt callstack 0
   611  000064                     USART1_SendString@str:
   612                           	opt callstack 0
   613  000064                     ___wmul@product:
   614                           	opt callstack 0
   615  000064                     strncmp@n:
   616                           	opt callstack 0
   617  000064                     ___fleq@ff2:
   618                           	opt callstack 0
   619  000064                     ___fladd@a:
   620                           	opt callstack 0
   621  000064                     ___fldiv@a:
   622                           	opt callstack 0
   623  000064                     ___flmul@a:
   624                           	opt callstack 0
   625                           
   626                           ; 4 bytes @ 0x4
   627  000064                     	ds	1
   628  000065                     ??_memset:
   629  000065                     ___awdiv@sign:
   630                           	opt callstack 0
   631  000065                     ___awmod@sign:
   632                           	opt callstack 0
   633                           
   634                           ; 1 bytes @ 0x5
   635  000065                     	ds	1
   636  000066                     ??_strncmp:
   637  000066                     ??_USART1_ReceiveCommand:
   638  000066                     ?_tolower:
   639                           	opt callstack 0
   640  000066                     USART1_SendString@size:
   641                           	opt callstack 0
   642  000066                     memset@i:
   643                           	opt callstack 0
   644  000066                     ___awdiv@quotient:
   645                           	opt callstack 0
   646  000066                     strcpy@s:
   647                           	opt callstack 0
   648  000066                     tolower@c:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0x6
   652  000066                     	ds	1
   653  000067                     strncmp@l:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0x7
   657  000067                     	ds	1
   658  000068                     ??_tolower:
   659  000068                     ??___fladd:
   660  000068                     ??___fldiv:
   661  000068                     ??___flmul:
   662  000068                     ??___fleq:
   663  000068                     ___fltol@sign1:
   664                           	opt callstack 0
   665  000068                     USART1_SendString@i:
   666                           	opt callstack 0
   667  000068                     ___fpclassifyf@e:
   668                           	opt callstack 0
   669  000068                     strcpy@d:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x8
   673  000068                     	ds	1
   674  000069                     ___fltol@exp1:
   675                           	opt callstack 0
   676  000069                     fputs@s:
   677                           	opt callstack 0
   678  000069                     strncmp@r:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x9
   682  000069                     	ds	1
   683  00006A                     USART1_SendString@attempts:
   684                           	opt callstack 0
   685  00006A                     ___fpclassifyf@u:
   686                           	opt callstack 0
   687                           
   688                           ; 4 bytes @ 0xA
   689  00006A                     	ds	1
   690  00006B                     I2C_Transmit@i:
   691                           	opt callstack 0
   692  00006B                     fputs@fp:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0xB
   696  00006B                     	ds	1
   697  00006C                     ___fladd@signs:
   698                           	opt callstack 0
   699  00006C                     ___flmul@sign:
   700                           	opt callstack 0
   701  00006C                     I2C_handler@value:
   702                           	opt callstack 0
   703  00006C                     _tolower$2238:
   704                           	opt callstack 0
   705  00006C                     ___fldiv@rem:
   706                           	opt callstack 0
   707                           
   708                           ; 4 bytes @ 0xC
   709  00006C                     	ds	1
   710  00006D                     ___fladd@aexp:
   711                           	opt callstack 0
   712  00006D                     ___flmul@aexp:
   713                           	opt callstack 0
   714  00006D                     fputs@c:
   715                           	opt callstack 0
   716                           
   717                           ; 1 bytes @ 0xD
   718  00006D                     	ds	1
   719  00006E                     I2C_handler@ad5272_select:
   720                           	opt callstack 0
   721  00006E                     ___fladd@bexp:
   722                           	opt callstack 0
   723  00006E                     fputs@i:
   724                           	opt callstack 0
   725  00006E                     ___flmul@grs:
   726                           	opt callstack 0
   727                           
   728                           ; 4 bytes @ 0xE
   729  00006E                     	ds	1
   730  00006F                     ___fladd@grs:
   731                           	opt callstack 0
   732                           
   733                           ; 1 bytes @ 0xF
   734  00006F                     	ds	1
   735  000070                     ?_pad:
   736                           	opt callstack 0
   737  000070                     ___fldiv@sign:
   738                           	opt callstack 0
   739  000070                     pad@fp:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x10
   743  000070                     	ds	1
   744  000071                     ___fldiv@new_exp:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x11
   748  000071                     	ds	1
   749  000072                     ___flmul@bexp:
   750                           	opt callstack 0
   751  000072                     pad@buf:
   752                           	opt callstack 0
   753                           
   754                           ; 2 bytes @ 0x12
   755  000072                     	ds	1
   756  000073                     ___fldiv@grs:
   757                           	opt callstack 0
   758  000073                     ___flmul@prod:
   759                           	opt callstack 0
   760                           
   761                           ; 4 bytes @ 0x13
   762  000073                     	ds	1
   763  000074                     pad@p:
   764                           	opt callstack 0
   765                           
   766                           ; 2 bytes @ 0x14
   767  000074                     	ds	2
   768  000076                     ??_pad:
   769                           
   770                           ; 1 bytes @ 0x16
   771  000076                     	ds	1
   772  000077                     ___fldiv@bexp:
   773                           	opt callstack 0
   774  000077                     pad@i:
   775                           	opt callstack 0
   776  000077                     ___flmul@temp:
   777                           	opt callstack 0
   778                           
   779                           ; 2 bytes @ 0x17
   780  000077                     	ds	1
   781  000078                     ___fldiv@aexp:
   782                           	opt callstack 0
   783                           
   784                           ; 1 bytes @ 0x18
   785  000078                     	ds	1
   786  000079                     ?_floorf:
   787                           	opt callstack 0
   788  000079                     ?___flsub:
   789                           	opt callstack 0
   790  000079                     pad@w:
   791                           	opt callstack 0
   792  000079                     ___flge@ff1:
   793                           	opt callstack 0
   794  000079                     ___flsub@b:
   795                           	opt callstack 0
   796  000079                     floorf@x:
   797                           	opt callstack 0
   798                           
   799                           ; 4 bytes @ 0x19
   800  000079                     	ds	4
   801  00007D                     ??_floorf:
   802  00007D                     ___flge@ff2:
   803                           	opt callstack 0
   804  00007D                     ___flsub@a:
   805                           	opt callstack 0
   806                           
   807                           ; 4 bytes @ 0x1D
   808  00007D                     	ds	4
   809  000081                     ??___flge:
   810                           
   811                           ; 1 bytes @ 0x21
   812  000081                     	ds	2
   813  000083                     floorf@m:
   814                           	opt callstack 0
   815                           
   816                           ; 4 bytes @ 0x23
   817  000083                     	ds	4
   818  000087                     floorf@e:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0x27
   822  000087                     	ds	2
   823  000089                     floorf@u:
   824                           	opt callstack 0
   825                           
   826                           ; 4 bytes @ 0x29
   827  000089                     	ds	4
   828  00008D                     ?_efgtoa:
   829                           	opt callstack 0
   830  00008D                     efgtoa@fp:
   831                           	opt callstack 0
   832                           
   833                           ; 2 bytes @ 0x2D
   834  00008D                     	ds	2
   835  00008F                     efgtoa@f:
   836                           	opt callstack 0
   837                           
   838                           ; 4 bytes @ 0x2F
   839  00008F                     	ds	4
   840  000093                     efgtoa@c:
   841                           	opt callstack 0
   842                           
   843                           ; 1 bytes @ 0x33
   844  000093                     	ds	1
   845  000094                     ??_efgtoa:
   846                           
   847                           ; 1 bytes @ 0x34
   848  000094                     	ds	5
   849  000099                     efgtoa@ou:
   850                           	opt callstack 0
   851                           
   852                           ; 4 bytes @ 0x39
   853  000099                     	ds	4
   854  00009D                     _efgtoa$1654:
   855                           	opt callstack 0
   856                           
   857                           ; 2 bytes @ 0x3D
   858  00009D                     	ds	2
   859  00009F                     _efgtoa$1655:
   860                           	opt callstack 0
   861                           
   862                           ; 2 bytes @ 0x3F
   863  00009F                     	ds	2
   864  0000A1                     _efgtoa$1660:
   865                           	opt callstack 0
   866                           
   867                           ; 2 bytes @ 0x41
   868  0000A1                     	ds	2
   869  0000A3                     _efgtoa$1664:
   870                           	opt callstack 0
   871                           
   872                           ; 2 bytes @ 0x43
   873  0000A3                     	ds	2
   874  0000A5                     _efgtoa$1665:
   875                           	opt callstack 0
   876                           
   877                           ; 2 bytes @ 0x45
   878  0000A5                     	ds	2
   879  0000A7                     _efgtoa$1666:
   880                           	opt callstack 0
   881                           
   882                           ; 2 bytes @ 0x47
   883  0000A7                     	ds	2
   884  0000A9                     efgtoa@t:
   885                           	opt callstack 0
   886                           
   887                           ; 2 bytes @ 0x49
   888  0000A9                     	ds	2
   889  0000AB                     efgtoa@pp:
   890                           	opt callstack 0
   891                           
   892                           ; 2 bytes @ 0x4B
   893  0000AB                     	ds	2
   894  0000AD                     efgtoa@m:
   895                           	opt callstack 0
   896                           
   897                           ; 2 bytes @ 0x4D
   898  0000AD                     	ds	2
   899  0000AF                     efgtoa@ne:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x4F
   903  0000AF                     	ds	2
   904  0000B1                     efgtoa@d:
   905                           	opt callstack 0
   906                           
   907                           ; 2 bytes @ 0x51
   908  0000B1                     	ds	2
   909  0000B3                     efgtoa@sign:
   910                           	opt callstack 0
   911                           
   912                           ; 2 bytes @ 0x53
   913  0000B3                     	ds	2
   914  0000B5                     efgtoa@p:
   915                           	opt callstack 0
   916                           
   917                           ; 2 bytes @ 0x55
   918  0000B5                     	ds	2
   919  0000B7                     efgtoa@nmode:
   920                           	opt callstack 0
   921                           
   922                           ; 1 bytes @ 0x57
   923  0000B7                     	ds	1
   924  0000B8                     efgtoa@w:
   925                           	opt callstack 0
   926                           
   927                           ; 2 bytes @ 0x58
   928  0000B8                     	ds	2
   929  0000BA                     efgtoa@mode:
   930                           	opt callstack 0
   931                           
   932                           ; 1 bytes @ 0x5A
   933  0000BA                     	ds	1
   934  0000BB                     efgtoa@h:
   935                           	opt callstack 0
   936                           
   937                           ; 4 bytes @ 0x5B
   938  0000BB                     	ds	4
   939  0000BF                     efgtoa@l:
   940                           	opt callstack 0
   941                           
   942                           ; 4 bytes @ 0x5F
   943  0000BF                     	ds	4
   944  0000C3                     efgtoa@i:
   945                           	opt callstack 0
   946                           
   947                           ; 2 bytes @ 0x63
   948  0000C3                     	ds	2
   949  0000C5                     efgtoa@g:
   950                           	opt callstack 0
   951                           
   952                           ; 4 bytes @ 0x65
   953  0000C5                     	ds	4
   954  0000C9                     efgtoa@e:
   955                           	opt callstack 0
   956                           
   957                           ; 2 bytes @ 0x69
   958  0000C9                     	ds	2
   959  0000CB                     efgtoa@n:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0x6B
   963  0000CB                     	ds	2
   964  0000CD                     efgtoa@u:
   965                           	opt callstack 0
   966                           
   967                           ; 4 bytes @ 0x6D
   968  0000CD                     	ds	4
   969  0000D1                     ?_vfpfcnvrt:
   970                           	opt callstack 0
   971  0000D1                     vfpfcnvrt@fp:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x71
   975  0000D1                     	ds	2
   976  0000D3                     vfpfcnvrt@fmt:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x73
   980  0000D3                     	ds	2
   981  0000D5                     vfpfcnvrt@ap:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0x75
   985  0000D5                     	ds	2
   986  0000D7                     ??_vfpfcnvrt:
   987                           
   988                           ; 1 bytes @ 0x77
   989  0000D7                     	ds	4
   990  0000DB                     _vfpfcnvrt$1683:
   991                           	opt callstack 0
   992                           
   993                           ; 2 bytes @ 0x7B
   994  0000DB                     	ds	2
   995  0000DD                     vfpfcnvrt@f:
   996                           	opt callstack 0
   997                           
   998                           ; 4 bytes @ 0x7D
   999  0000DD                     	ds	4
  1000  0000E1                     vfpfcnvrt@ct:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 3 bytes @ 0x81
  1004  0000E1                     	ds	3
  1005  0000E4                     vfpfcnvrt@c:
  1006                           	opt callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x84
  1009  0000E4                     	ds	1
  1010  0000E5                     ?_vfprintf:
  1011                           	opt callstack 0
  1012  0000E5                     vfprintf@fp:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x85
  1016  0000E5                     	ds	2
  1017  0000E7                     vfprintf@fmt:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x87
  1021  0000E7                     	ds	2
  1022  0000E9                     vfprintf@ap:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x89
  1026  0000E9                     	ds	2
  1027  0000EB                     vfprintf@cfmt:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x8B
  1031  0000EB                     	ds	2
  1032  0000ED                     ?_sprintf:
  1033                           	opt callstack 0
  1034  0000ED                     sprintf@s:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x8D
  1038  0000ED                     	ds	2
  1039  0000EF                     sprintf@fmt:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x8F
  1043  0000EF                     	ds	6
  1044  0000F5                     
  1045                           ; 1 bytes @ 0x95
  1046  0000F5                     	ds	2
  1047  0000F7                     sprintf@ap:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x97
  1051  0000F7                     	ds	2
  1052  0000F9                     sprintf@f:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 6 bytes @ 0x99
  1056  0000F9                     	ds	6
  1057  0000FF                     main@receive_command:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 1 bytes @ 0x9F
  1061  0000FF                     	ds	1
  1062                           
  1063                           	psect	cstackCOMRAM
  1064  000001                     __pcstackCOMRAM:
  1065                           	opt callstack 0
  1066  000001                     ADC_Start@pin:
  1067                           	opt callstack 0
  1068  000001                     
  1069                           ; 1 bytes @ 0x0
  1070  000001                     	ds	1
  1071  000002                     ?___xxtofl:
  1072                           	opt callstack 0
  1073  000002                     ___xxtofl@val:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 4 bytes @ 0x1
  1077  000002                     	ds	4
  1078  000006                     ??___xxtofl:
  1079                           
  1080                           ; 1 bytes @ 0x5
  1081  000006                     	ds	4
  1082  00000A                     ___xxtofl@sign:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x9
  1086  00000A                     	ds	1
  1087  00000B                     ___xxtofl@exp:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 1 bytes @ 0xA
  1091  00000B                     	ds	1
  1092  00000C                     ___xxtofl@arg:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 4 bytes @ 0xB
  1096  00000C                     	ds	4
  1097  000010                     ?i2___flmul:
  1098                           	opt callstack 0
  1099  000010                     i2___flmul@b:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 4 bytes @ 0xF
  1103  000010                     	ds	4
  1104  000014                     i2___flmul@a:
  1105                           	opt callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x13
  1108  000014                     	ds	4
  1109  000018                     ??i2___flmul:
  1110                           
  1111                           ; 1 bytes @ 0x17
  1112  000018                     	ds	4
  1113  00001C                     i2___flmul@sign:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x1B
  1117  00001C                     	ds	1
  1118  00001D                     i2___flmul@grs:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x1C
  1122  00001D                     	ds	4
  1123  000021                     i2___flmul@aexp:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 1 bytes @ 0x20
  1127  000021                     	ds	1
  1128  000022                     i2___flmul@bexp:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x21
  1132  000022                     	ds	1
  1133  000023                     i2___flmul@prod:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x22
  1137  000023                     	ds	4
  1138  000027                     i2___flmul@temp:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x26
  1142  000027                     	ds	2
  1143  000029                     ??_ADC_ISR:
  1144                           
  1145                           ; 1 bytes @ 0x28
  1146  000029                     	ds	2
  1147  00002B                     ADC_ISR@adc_result:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x2A
  1151  00002B                     	ds	2
  1152                           
  1153 ;;
  1154 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1155 ;;
  1156 ;; *************** function _main *****************
  1157 ;; Defined at:
  1158 ;;		line 119 in file "main.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  receive_comm    1  159[BANK0 ] unsigned char 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1174 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1175 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1176 ;;Total ram usage:        3 bytes
  1177 ;; Hardware stack levels required when called:   11
  1178 ;; This function calls:
  1179 ;;		_ADC_Init
  1180 ;;		_I2C_Init
  1181 ;;		_I2C_Transmit
  1182 ;;		_USART1_Init
  1183 ;;		_USART1_ReceiveCommand
  1184 ;;		_USART_handler
  1185 ;;		_timer0_init
  1186 ;; This function is called by:
  1187 ;;		Startup code after reset
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text0
  1192  00471E                     __ptext0:
  1193                           	opt callstack 0
  1194  00471E                     _main:
  1195                           	opt callstack 20
  1196                           
  1197                           ;main.c: 120:     OSCFRQ = 0x08;
  1198                           
  1199                           ;incstack = 0
  1200  00471E  0E08               	movlw	8
  1201  004720  0139               	movlb	57	; () banked
  1202  004722  6FDF               	movwf	223,b	;volatile
  1203                           
  1204                           ;main.c: 121:     OSCTUNE = 0x00;
  1205  004724  0E00               	movlw	0
  1206  004726  6FDE               	movwf	222,b	;volatile
  1207                           
  1208                           ;main.c: 122:     OSCEN = 0x40;
  1209  004728  0E40               	movlw	64
  1210  00472A  6FDD               	movwf	221,b	;volatile
  1211  00472C                     l312:
  1212                           
  1213                           ; BSR set to: 57
  1214  00472C  BDDC               	btfsc	220,6,b	;volatile
  1215  00472E  D002               	goto	u8990
  1216                           
  1217                           ; BSR set to: 57
  1218  004730  A5DC               	btfss	220,2,b	;volatile
  1219  004732  D7FC               	goto	l312
  1220  004734                     u8990:
  1221                           
  1222                           ; BSR set to: 57
  1223                           ;main.c: 129:     IVTLOCK = 0x01;
  1224  004734  0E01               	movlw	1
  1225  004736  6ED4               	movwf	16340,c	;volatile
  1226                           
  1227                           ;main.c: 132:     WDTCON1 = 0x07;
  1228  004738  0E07               	movlw	7
  1229  00473A  6F5C               	movwf	92,b	;volatile
  1230                           
  1231                           ;main.c: 133:     WDTCON0 = 0x3F;
  1232  00473C  0E3F               	movlw	63
  1233  00473E  6F5B               	movwf	91,b	;volatile
  1234                           
  1235                           ; BSR set to: 57
  1236                           ;main.c: 136:     PPSLOCKbits.PPSLOCKED = 0;
  1237  004740  013A               	movlb	58	; () banked
  1238  004742  91BF               	bcf	191,0,b	;volsfr
  1239                           
  1240                           ; BSR set to: 58
  1241                           ;main.c: 139:     timer0_init();
  1242  004744  ECF7  F028         	call	_timer0_init	;wreg free
  1243                           
  1244                           ;main.c: 140:     USART1_Init(1);
  1245  004748  0E01               	movlw	1
  1246  00474A  ECD3  F025         	call	_USART1_Init
  1247                           
  1248                           ;main.c: 141:     ADC_Init();
  1249  00474E  ECE6  F028         	call	_ADC_Init	;wreg free
  1250                           
  1251                           ;main.c: 142:     I2C_Init();
  1252  004752  ECFE  F026         	call	_I2C_Init	;wreg free
  1253                           
  1254                           ;main.c: 144:     INTCON0bits.GIEH = 1;
  1255  004756  8ED2               	bsf	16338,7,c	;volatile
  1256                           
  1257                           ;main.c: 145:     INTCON0bits.GIEL = 1;
  1258  004758  8CD2               	bsf	16338,6,c	;volatile
  1259                           
  1260                           ;main.c: 146:     INTCON0bits.IPEN = 1;
  1261  00475A  8AD2               	bsf	16338,5,c	;volatile
  1262                           
  1263                           ;main.c: 149:     TRISAbits.TRISA0 = 0;
  1264  00475C  90C2               	bcf	16322,0,c	;volatile
  1265                           
  1266                           ;main.c: 150:     ANSELAbits.ANSELA0 = 1;
  1267  00475E  013A               	movlb	58	; () banked
  1268  004760  8140               	bsf	64,0,b	;volatile
  1269                           
  1270                           ; BSR set to: 58
  1271                           ;main.c: 151:     led_enable = 1;
  1272  004762  0E01               	movlw	1
  1273  004764  6E43               	movwf	_led_enable,c
  1274                           
  1275                           ; BSR set to: 58
  1276                           ;main.c: 153:     TRISAbits.TRISA1 = 0;
  1277  004766  92C2               	bcf	16322,1,c	;volatile
  1278                           
  1279                           ; BSR set to: 58
  1280                           ;main.c: 154:     ANSELAbits.ANSELA1 = 1;
  1281  004768  8340               	bsf	64,1,b	;volatile
  1282                           
  1283                           ; BSR set to: 58
  1284                           ;main.c: 155:     LATAbits.LA1 = 0;
  1285  00476A  92BA               	bcf	16314,1,c	;volatile
  1286                           
  1287                           ; BSR set to: 58
  1288                           ;main.c: 157:     TRISBbits.TRISB2 = 0;
  1289  00476C  94C3               	bcf	16323,2,c	;volatile
  1290                           
  1291                           ; BSR set to: 58
  1292                           ;main.c: 158:     TRISBbits.TRISB3 = 0;
  1293  00476E  96C3               	bcf	16323,3,c	;volatile
  1294                           
  1295                           ; BSR set to: 58
  1296                           ;main.c: 159:     LATBbits.LB2 = 1;
  1297  004770  84BB               	bsf	16315,2,c	;volatile
  1298                           
  1299                           ; BSR set to: 58
  1300                           ;main.c: 160:     LATBbits.LB3 = 1;
  1301  004772  86BB               	bsf	16315,3,c	;volatile
  1302                           
  1303                           ; BSR set to: 58
  1304                           ;main.c: 162:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1305  004774  0EA3               	movlw	163
  1306  004776  0101               	movlb	1	; () banked
  1307  004778  6FA7               	movwf	(??_main+1)& (0+255),b
  1308  00477A  0E57               	movlw	87
  1309  00477C  6FA6               	movwf	??_main& (0+255),b
  1310  00477E  0E02               	movlw	2
  1311  004780                     u9037:
  1312  004780  2EE8               	decfsz	wreg,f,c
  1313  004782  D7FE               	bra	u9037
  1314  004784  2FA6               	decfsz	??_main& (0+255),f,b
  1315  004786  D7FC               	bra	u9037
  1316  004788  2FA7               	decfsz	(??_main+1)& (0+255),f,b
  1317  00478A  D7FA               	bra	u9037
  1318  00478C  F000               	nop	
  1319                           
  1320                           ;main.c: 164:     AD5272_COMMANDS[0] = 0x00;
  1321  00478E  0E00               	movlw	0
  1322  004790  6E4C               	movwf	_AD5272_COMMANDS,c
  1323                           
  1324                           ;main.c: 165:     AD5272_COMMANDS[1] = 0x02;
  1325  004792  0E02               	movlw	2
  1326  004794  6E4D               	movwf	_AD5272_COMMANDS+1,c
  1327  004796  0E4C               	movlw	low _AD5272_COMMANDS
  1328  004798  0100               	movlb	0	; () banked
  1329  00479A  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  1330  00479C  0E00               	movlw	high _AD5272_COMMANDS
  1331  00479E  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  1332  0047A0  0E02               	movlw	2
  1333  0047A2  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  1334  0047A4  0E5E               	movlw	94
  1335  0047A6  6F63               	movwf	I2C_Transmit@address& (0+255),b
  1336  0047A8  ECF8  F024         	call	_I2C_Transmit	;wreg free
  1337  0047AC                     l6828:
  1338  0047AC  5045               	movf	_I2C_STOP_DETECTED,w,c
  1339  0047AE  B4D8               	btfsc	status,2,c
  1340  0047B0  D7FD               	goto	l6828
  1341  0047B2  0E4C               	movlw	low _AD5272_COMMANDS
  1342  0047B4  0100               	movlb	0	; () banked
  1343  0047B6  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  1344  0047B8  0E00               	movlw	high _AD5272_COMMANDS
  1345  0047BA  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  1346  0047BC  0E02               	movlw	2
  1347  0047BE  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  1348  0047C0  0E58               	movlw	88
  1349  0047C2  6F63               	movwf	I2C_Transmit@address& (0+255),b
  1350  0047C4  ECF8  F024         	call	_I2C_Transmit	;wreg free
  1351  0047C8                     l6832:
  1352  0047C8  5045               	movf	_I2C_STOP_DETECTED,w,c
  1353  0047CA  B4D8               	btfsc	status,2,c
  1354  0047CC  D7FD               	goto	l6832
  1355                           
  1356                           ;main.c: 170:     AD5272_COMMANDS[0] = 0x04;
  1357  0047CE  0E04               	movlw	4
  1358  0047D0  6E4C               	movwf	_AD5272_COMMANDS,c
  1359  0047D2                     l6836:
  1360                           
  1361                           ;main.c: 175:         receive_command = USART1_ReceiveCommand();
  1362  0047D2  EC6E  F01F         	call	_USART1_ReceiveCommand	;wreg free
  1363  0047D6  0100               	movlb	0	; () banked
  1364  0047D8  6FFF               	movwf	main@receive_command& (0+255),b
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;main.c: 176:         if(receive_command)
  1368  0047DA  51FF               	movf	main@receive_command& (0+255),w,b
  1369  0047DC  B4D8               	btfsc	status,2,c
  1370  0047DE  D7F9               	goto	l6836
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;main.c: 177:             USART_handler();
  1374  0047E0  EC57  F020         	call	_USART_handler	;wreg free
  1375  0047E4  D7F6               	goto	l6836
  1376  0047E6                     __end_of_main:
  1377                           	opt callstack 0
  1378                           
  1379 ;; *************** function _timer0_init *****************
  1380 ;; Defined at:
  1381 ;;		line 224 in file "main.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1399 ;;Total ram usage:        0 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    2
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text1
  1410  0051EE                     __ptext1:
  1411                           	opt callstack 0
  1412  0051EE                     _timer0_init:
  1413                           	opt callstack 28
  1414                           
  1415                           ;main.c: 225:     T0CON0 = 0x10;
  1416                           
  1417                           ;incstack = 0
  1418  0051EE  0E10               	movlw	16
  1419  0051F0  6EB8               	movwf	16312,c	;volatile
  1420                           
  1421                           ;main.c: 226:     T0CON1 = 0x75;
  1422  0051F2  0E75               	movlw	117
  1423  0051F4  6EB9               	movwf	16313,c	;volatile
  1424                           
  1425                           ;main.c: 227:     TMR0L = 0xB0;
  1426  0051F6  0EB0               	movlw	176
  1427  0051F8  6EB6               	movwf	16310,c	;volatile
  1428                           
  1429                           ;main.c: 228:     TMR0H = 0x3C;
  1430  0051FA  0E3C               	movlw	60
  1431  0051FC  6EB7               	movwf	16311,c	;volatile
  1432                           
  1433                           ;main.c: 229:     counter_timer0 = 0;
  1434  0051FE  0E00               	movlw	0
  1435  005200  6E44               	movwf	_counter_timer0,c
  1436                           
  1437                           ;main.c: 230:     IPR3bits.TMR0IP = 0;
  1438  005202  0139               	movlb	57	; () banked
  1439  005204  9F83               	bcf	131,7,b	;volatile
  1440                           
  1441                           ; BSR set to: 57
  1442                           ;main.c: 231:     PIR3bits.TMR0IF = 0;
  1443  005206  9FA3               	bcf	163,7,b	;volatile
  1444                           
  1445                           ; BSR set to: 57
  1446                           ;main.c: 232:     PIE3bits.TMR0IE = 1;
  1447  005208  8F93               	bsf	147,7,b	;volatile
  1448                           
  1449                           ; BSR set to: 57
  1450                           ;main.c: 233:     T0CON0bits.EN = 1;
  1451  00520A  8EB8               	bsf	16312,7,c	;volatile
  1452                           
  1453                           ; BSR set to: 57
  1454  00520C  0012               	return		;funcret
  1455  00520E                     __end_of_timer0_init:
  1456                           	opt callstack 0
  1457                           
  1458 ;; *************** function _USART_handler *****************
  1459 ;; Defined at:
  1460 ;;		line 183 in file "main.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1476 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1477 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1478 ;;Total ram usage:        2 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:   10
  1481 ;; This function calls:
  1482 ;;		_GetStringSize
  1483 ;;		_I2C_handler
  1484 ;;		_USART1_SendString
  1485 ;;		_memset
  1486 ;;		_sprintf
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text2
  1493  0040AE                     __ptext2:
  1494                           	opt callstack 0
  1495  0040AE                     _USART_handler:
  1496                           	opt callstack 20
  1497                           
  1498                           ;main.c: 184:     memset(tx_buffer,0,32);
  1499                           
  1500                           ; BSR set to: 57
  1501                           ;incstack = 0
  1502  0040AE  0E84               	movlw	low _tx_buffer
  1503  0040B0  0100               	movlb	0	; () banked
  1504  0040B2  6F60               	movwf	memset@st& (0+255),b
  1505  0040B4  0E01               	movlw	high _tx_buffer
  1506  0040B6  6F61               	movwf	(memset@st+1)& (0+255),b
  1507  0040B8  0E00               	movlw	0
  1508  0040BA  6F62               	movwf	memset@x& (0+255),b
  1509  0040BC  0E00               	movlw	0
  1510  0040BE  6F64               	movwf	(memset@size+1)& (0+255),b
  1511  0040C0  0E20               	movlw	32
  1512  0040C2  6F63               	movwf	memset@size& (0+255),b
  1513  0040C4  EC5F  F028         	call	_memset	;wreg free
  1514                           
  1515                           ;main.c: 185:     if(COMMAND_WR){
  1516  0040C8  5049               	movf	_COMMAND_WR,w,c
  1517  0040CA  A4D8               	btfss	status,2,c
  1518  0040CC  D03D               	goto	l6730
  1519  0040CE  D0A4               	goto	l6750
  1520  0040D0                     l6722:
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;main.c: 188:                 sprintf(tx_buffer,"Voltage:%f V",ADC_VOLTAGE_RESULT);
  1524  0040D0  0E84               	movlw	low _tx_buffer
  1525  0040D2  0100               	movlb	0	; () banked
  1526  0040D4  6FED               	movwf	sprintf@s& (0+255),b
  1527  0040D6  0E01               	movlw	high _tx_buffer
  1528  0040D8  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1529  0040DA  0E6F               	movlw	low STR_1
  1530  0040DC  6FEF               	movwf	sprintf@fmt& (0+255),b
  1531  0040DE  0E20               	movlw	high STR_1
  1532  0040E0  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1533  0040E2  0060  F0D4  F0F1   	movff	_ADC_VOLTAGE_RESULT,?_sprintf+4
  1534  0040E8  0060  F0D8  F0F2   	movff	_ADC_VOLTAGE_RESULT+1,?_sprintf+5
  1535  0040EE  0060  F0DC  F0F3   	movff	_ADC_VOLTAGE_RESULT+2,?_sprintf+6
  1536  0040F4  0060  F0E0  F0F4   	movff	_ADC_VOLTAGE_RESULT+3,?_sprintf+7
  1537  0040FA  EC63  F027         	call	_sprintf	;wreg free
  1538                           
  1539                           ;main.c: 189:                 break;
  1540  0040FE  D09F               	goto	l6752
  1541  004100                     l6724:
  1542                           
  1543                           ; BSR set to: 1
  1544                           ;main.c: 191:                 sprintf(tx_buffer,"Current:%f A",ADC_VOLTAGE_RESULT);
  1545  004100  0E84               	movlw	low _tx_buffer
  1546  004102  0100               	movlb	0	; () banked
  1547  004104  6FED               	movwf	sprintf@s& (0+255),b
  1548  004106  0E01               	movlw	high _tx_buffer
  1549  004108  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1550  00410A  0E62               	movlw	low STR_2
  1551  00410C  6FEF               	movwf	sprintf@fmt& (0+255),b
  1552  00410E  0E20               	movlw	high STR_2
  1553  004110  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1554  004112  0060  F0D4  F0F1   	movff	_ADC_VOLTAGE_RESULT,?_sprintf+4
  1555  004118  0060  F0D8  F0F2   	movff	_ADC_VOLTAGE_RESULT+1,?_sprintf+5
  1556  00411E  0060  F0DC  F0F3   	movff	_ADC_VOLTAGE_RESULT+2,?_sprintf+6
  1557  004124  0060  F0E0  F0F4   	movff	_ADC_VOLTAGE_RESULT+3,?_sprintf+7
  1558  00412A  EC63  F027         	call	_sprintf	;wreg free
  1559                           
  1560                           ;main.c: 192:                 break;
  1561  00412E  D087               	goto	l6752
  1562  004130                     l6726:
  1563                           
  1564                           ; BSR set to: 1
  1565                           ;main.c: 194:                 sprintf(tx_buffer,"Command not recognized!");
  1566  004130  0E84               	movlw	low _tx_buffer
  1567  004132  0100               	movlb	0	; () banked
  1568  004134  6FED               	movwf	sprintf@s& (0+255),b
  1569  004136  0E01               	movlw	high _tx_buffer
  1570  004138  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1571  00413A  0E01               	movlw	low STR_3
  1572  00413C  6FEF               	movwf	sprintf@fmt& (0+255),b
  1573  00413E  0E20               	movlw	high STR_3
  1574  004140  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1575  004142  EC63  F027         	call	_sprintf	;wreg free
  1576                           
  1577                           ;main.c: 195:                 break;
  1578  004146  D07B               	goto	l6752
  1579  004148                     l6730:
  1580  004148  5048               	movf	_COMMAND,w,c
  1581  00414A  0101               	movlb	1	; () banked
  1582  00414C  6FA4               	movwf	??_USART_handler& (0+255),b
  1583  00414E  6BA5               	clrf	(??_USART_handler+1)& (0+255),b
  1584                           
  1585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1586                           ; Switch size 1, requested type "simple"
  1587                           ; Number of cases is 1, Range of values is 0 to 0
  1588                           ; switch strategies available:
  1589                           ; Name         Instructions Cycles
  1590                           ; simple_byte            4     3 (average)
  1591                           ;	Chosen strategy is simple_byte
  1592  004150  51A5               	movf	(??_USART_handler+1)& (0+255),w,b
  1593  004152  0A00               	xorlw	0	; case 0
  1594  004154  A4D8               	btfss	status,2,c
  1595  004156  D7EC               	goto	l6726
  1596                           
  1597                           ; BSR set to: 1
  1598                           ; Switch size 1, requested type "simple"
  1599                           ; Number of cases is 2, Range of values is 0 to 1
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte            7     4 (average)
  1603                           ;	Chosen strategy is simple_byte
  1604  004158  51A4               	movf	??_USART_handler& (0+255),w,b
  1605  00415A  0A00               	xorlw	0	; case 0
  1606  00415C  B4D8               	btfsc	status,2,c
  1607  00415E  D7B8               	goto	l6722
  1608  004160  0A01               	xorlw	1	; case 1
  1609  004162  B4D8               	btfsc	status,2,c
  1610  004164  D7CD               	goto	l6724
  1611  004166  D7E4               	goto	l6726
  1612  004168                     l6732:
  1613                           
  1614                           ; BSR set to: 1
  1615                           ;main.c: 200:                 led_enable = !led_enable;
  1616  004168  5043               	movf	_led_enable,w,c
  1617  00416A  A4D8               	btfss	status,2,c
  1618  00416C  D002               	goto	u8940
  1619  00416E  0E01               	movlw	1
  1620  004170  D001               	goto	u8950
  1621  004172                     u8940:
  1622  004172  0E00               	movlw	0
  1623  004174                     u8950:
  1624  004174  6E43               	movwf	_led_enable,c
  1625                           
  1626                           ;main.c: 201:                 if(led_enable)
  1627  004176  5043               	movf	_led_enable,w,c
  1628  004178  B4D8               	btfsc	status,2,c
  1629  00417A  D00C               	goto	l6736
  1630                           
  1631                           ; BSR set to: 1
  1632                           ;main.c: 202:                     sprintf(tx_buffer,"Blinking LED is ON!");
  1633  00417C  0E84               	movlw	low _tx_buffer
  1634  00417E  0100               	movlb	0	; () banked
  1635  004180  6FED               	movwf	sprintf@s& (0+255),b
  1636  004182  0E01               	movlw	high _tx_buffer
  1637  004184  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1638  004186  0E2E               	movlw	low STR_4
  1639  004188  6FEF               	movwf	sprintf@fmt& (0+255),b
  1640  00418A  0E20               	movlw	high STR_4
  1641  00418C  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1642  00418E  EC63  F027         	call	_sprintf	;wreg free
  1643  004192  D055               	goto	l6752
  1644  004194                     l6736:
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;main.c: 204:                     sprintf(tx_buffer,"Blinking LED is OFF!");
  1648  004194  0E84               	movlw	low _tx_buffer
  1649  004196  0100               	movlb	0	; () banked
  1650  004198  6FED               	movwf	sprintf@s& (0+255),b
  1651  00419A  0E01               	movlw	high _tx_buffer
  1652  00419C  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1653  00419E  0E19               	movlw	low STR_5
  1654  0041A0  6FEF               	movwf	sprintf@fmt& (0+255),b
  1655  0041A2  0E20               	movlw	high STR_5
  1656  0041A4  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1657  0041A6  EC63  F027         	call	_sprintf	;wreg free
  1658  0041AA  D049               	goto	l6752
  1659  0041AC                     l6738:
  1660                           
  1661                           ; BSR set to: 1
  1662                           ;main.c: 207:                 I2C_handler(0,COMMAND_WRITE_NUMBER);
  1663  0041AC  0060  F104  F06C   	movff	_COMMAND_WRITE_NUMBER,I2C_handler@value
  1664  0041B2  0060  F108  F06D   	movff	_COMMAND_WRITE_NUMBER+1,I2C_handler@value+1
  1665  0041B8  0E00               	movlw	0
  1666  0041BA  ECBB  F027         	call	_I2C_handler
  1667                           
  1668                           ;main.c: 208:                 sprintf(tx_buffer,"Voltage set!");
  1669  0041BE  0E84               	movlw	low _tx_buffer
  1670  0041C0  0100               	movlb	0	; () banked
  1671  0041C2  6FED               	movwf	sprintf@s& (0+255),b
  1672  0041C4  0E01               	movlw	high _tx_buffer
  1673  0041C6  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1674  0041C8  0E55               	movlw	low STR_6
  1675  0041CA  6FEF               	movwf	sprintf@fmt& (0+255),b
  1676  0041CC  0E20               	movlw	high STR_6
  1677  0041CE  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1678  0041D0  EC63  F027         	call	_sprintf	;wreg free
  1679                           
  1680                           ;main.c: 209:                 break;
  1681  0041D4  D034               	goto	l6752
  1682  0041D6                     l6742:
  1683                           
  1684                           ; BSR set to: 1
  1685                           ;main.c: 211:                 I2C_handler(1,COMMAND_WRITE_NUMBER);
  1686  0041D6  0060  F104  F06C   	movff	_COMMAND_WRITE_NUMBER,I2C_handler@value
  1687  0041DC  0060  F108  F06D   	movff	_COMMAND_WRITE_NUMBER+1,I2C_handler@value+1
  1688  0041E2  0E01               	movlw	1
  1689  0041E4  ECBB  F027         	call	_I2C_handler
  1690                           
  1691                           ;main.c: 212:                 sprintf(tx_buffer,"Current Limit set!");
  1692  0041E8  0E84               	movlw	low _tx_buffer
  1693  0041EA  0100               	movlb	0	; () banked
  1694  0041EC  6FED               	movwf	sprintf@s& (0+255),b
  1695  0041EE  0E01               	movlw	high _tx_buffer
  1696  0041F0  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1697  0041F2  0E42               	movlw	low STR_7
  1698  0041F4  6FEF               	movwf	sprintf@fmt& (0+255),b
  1699  0041F6  0E20               	movlw	high STR_7
  1700  0041F8  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1701  0041FA  EC63  F027         	call	_sprintf	;wreg free
  1702                           
  1703                           ;main.c: 213:                 break;
  1704  0041FE  D01F               	goto	l6752
  1705  004200                     l6746:
  1706                           
  1707                           ; BSR set to: 1
  1708                           ;main.c: 215:                 sprintf(tx_buffer,"Command not recognized!");
  1709  004200  0E84               	movlw	low _tx_buffer
  1710  004202  0100               	movlb	0	; () banked
  1711  004204  6FED               	movwf	sprintf@s& (0+255),b
  1712  004206  0E01               	movlw	high _tx_buffer
  1713  004208  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1714  00420A  0E01               	movlw	low STR_3
  1715  00420C  6FEF               	movwf	sprintf@fmt& (0+255),b
  1716  00420E  0E20               	movlw	high STR_3
  1717  004210  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1718  004212  EC63  F027         	call	_sprintf	;wreg free
  1719                           
  1720                           ;main.c: 216:                 break;
  1721  004216  D013               	goto	l6752
  1722  004218                     l6750:
  1723  004218  5048               	movf	_COMMAND,w,c
  1724  00421A  0101               	movlb	1	; () banked
  1725  00421C  6FA4               	movwf	??_USART_handler& (0+255),b
  1726  00421E  6BA5               	clrf	(??_USART_handler+1)& (0+255),b
  1727                           
  1728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1729                           ; Switch size 1, requested type "simple"
  1730                           ; Number of cases is 1, Range of values is 0 to 0
  1731                           ; switch strategies available:
  1732                           ; Name         Instructions Cycles
  1733                           ; simple_byte            4     3 (average)
  1734                           ;	Chosen strategy is simple_byte
  1735  004220  51A5               	movf	(??_USART_handler+1)& (0+255),w,b
  1736  004222  0A00               	xorlw	0	; case 0
  1737  004224  A4D8               	btfss	status,2,c
  1738  004226  D7EC               	goto	l6746
  1739                           
  1740                           ; BSR set to: 1
  1741                           ; Switch size 1, requested type "simple"
  1742                           ; Number of cases is 3, Range of values is 0 to 2
  1743                           ; switch strategies available:
  1744                           ; Name         Instructions Cycles
  1745                           ; simple_byte           10     6 (average)
  1746                           ;	Chosen strategy is simple_byte
  1747  004228  51A4               	movf	??_USART_handler& (0+255),w,b
  1748  00422A  0A00               	xorlw	0	; case 0
  1749  00422C  B4D8               	btfsc	status,2,c
  1750  00422E  D79C               	goto	l6732
  1751  004230  0A01               	xorlw	1	; case 1
  1752  004232  B4D8               	btfsc	status,2,c
  1753  004234  D7BB               	goto	l6738
  1754  004236  0A03               	xorlw	3	; case 2
  1755  004238  B4D8               	btfsc	status,2,c
  1756  00423A  D7CD               	goto	l6742
  1757  00423C  D7E1               	goto	l6746
  1758  00423E                     l6752:
  1759                           
  1760                           ;main.c: 219:     USART1_SendString(tx_buffer,GetStringSize());
  1761  00423E  0E84               	movlw	low _tx_buffer
  1762  004240  0100               	movlb	0	; () banked
  1763  004242  6F64               	movwf	USART1_SendString@str& (0+255),b
  1764  004244  0E01               	movlw	high _tx_buffer
  1765  004246  6F65               	movwf	(USART1_SendString@str+1)& (0+255),b
  1766  004248  EC24  F028         	call	_GetStringSize	;wreg free
  1767  00424C  0060  F180  F066   	movff	?_GetStringSize,USART1_SendString@size
  1768  004252  0060  F184  F067   	movff	?_GetStringSize+1,USART1_SendString@size+1
  1769  004258  ECA7  F024         	call	_USART1_SendString	;wreg free
  1770  00425C  0012               	return		;funcret
  1771  00425E                     __end_of_USART_handler:
  1772                           	opt callstack 0
  1773                           
  1774 ;; *************** function _sprintf *****************
  1775 ;; Defined at:
  1776 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  s               2  141[BANK0 ] PTR unsigned char 
  1779 ;;		 -> tx_buffer(32), 
  1780 ;;  fmt             2  143[BANK0 ] PTR const unsigned char 
  1781 ;;		 -> STR_8(24), STR_7(19), STR_6(13), STR_5(21), 
  1782 ;;		 -> STR_4(20), STR_3(24), STR_2(13), STR_1(13), 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  f               6  153[BANK0 ] struct _IO_FILE
  1785 ;;  ap              2  151[BANK0 ] PTR void [1]
  1786 ;;		 -> ?_sprintf(2), 
  1787 ;;  ret             2    0        int 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  2  141[BANK0 ] int 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1797 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1798 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1800 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1801 ;;Total ram usage:       18 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    9
  1804 ;; This function calls:
  1805 ;;		_vfprintf
  1806 ;; This function is called by:
  1807 ;;		_USART_handler
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text3
  1812  004EC6                     __ptext3:
  1813                           	opt callstack 0
  1814  004EC6                     _sprintf:
  1815                           	opt callstack 20
  1816                           
  1817                           ;incstack = 0
  1818  004EC6  0EF1               	movlw	low (?_sprintf+4)
  1819  004EC8  0100               	movlb	0	; () banked
  1820  004ECA  6FF7               	movwf	sprintf@ap& (0+255),b
  1821  004ECC  0E00               	movlw	high (?_sprintf+4)
  1822  004ECE  6FF8               	movwf	(sprintf@ap+1)& (0+255),b
  1823  004ED0  0060  F3B4  F0F9   	movff	sprintf@s,sprintf@f
  1824  004ED6  0060  F3B8  F0FA   	movff	sprintf@s+1,sprintf@f+1
  1825                           
  1826                           ; BSR set to: 0
  1827  004EDC  0E00               	movlw	0
  1828  004EDE  6FFC               	movwf	(sprintf@f+3)& (0+255),b
  1829  004EE0  0E00               	movlw	0
  1830  004EE2  6FFB               	movwf	(sprintf@f+2)& (0+255),b
  1831                           
  1832                           ; BSR set to: 0
  1833  004EE4  0E00               	movlw	0
  1834  004EE6  6FFE               	movwf	(sprintf@f+5)& (0+255),b
  1835  004EE8  0E00               	movlw	0
  1836  004EEA  6FFD               	movwf	(sprintf@f+4)& (0+255),b
  1837                           
  1838                           ; BSR set to: 0
  1839  004EEC  0EF9               	movlw	low sprintf@f
  1840  004EEE  6FE5               	movwf	vfprintf@fp& (0+255),b
  1841  004EF0  0E00               	movlw	high sprintf@f
  1842  004EF2  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  1843  004EF4  0060  F3BC  F0E7   	movff	sprintf@fmt,vfprintf@fmt
  1844  004EFA  0060  F3C0  F0E8   	movff	sprintf@fmt+1,vfprintf@fmt+1
  1845  004F00  0EF7               	movlw	low sprintf@ap
  1846  004F02  6FE9               	movwf	vfprintf@ap& (0+255),b
  1847  004F04  0E00               	movlw	high sprintf@ap
  1848  004F06  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  1849  004F08  EC92  F026         	call	_vfprintf	;wreg free
  1850  004F0C  0100               	movlb	0	; () banked
  1851  004F0E  51FB               	movf	(sprintf@f+2)& (0+255),w,b
  1852  004F10  25ED               	addwf	sprintf@s& (0+255),w,b
  1853  004F12  6ED9               	movwf	fsr2l,c
  1854  004F14  51FC               	movf	(sprintf@f+3)& (0+255),w,b
  1855  004F16  21EE               	addwfc	(sprintf@s+1)& (0+255),w,b
  1856  004F18  6EDA               	movwf	fsr2h,c
  1857  004F1A  0E00               	movlw	0
  1858  004F1C  6EDF               	movwf	indf2,c
  1859                           
  1860                           ; BSR set to: 0
  1861  004F1E  0012               	return		;funcret
  1862  004F20                     __end_of_sprintf:
  1863                           	opt callstack 0
  1864                           
  1865 ;; *************** function _vfprintf *****************
  1866 ;; Defined at:
  1867 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  fp              2  133[BANK0 ] PTR struct _IO_FILE
  1870 ;;		 -> sprintf@f(6), 
  1871 ;;  fmt             2  135[BANK0 ] PTR const unsigned char 
  1872 ;;		 -> STR_8(24), STR_7(19), STR_6(13), STR_5(21), 
  1873 ;;		 -> STR_4(20), STR_3(24), STR_2(13), STR_1(13), 
  1874 ;;  ap              2  137[BANK0 ] PTR PTR void 
  1875 ;;		 -> sprintf@ap(2), 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  cfmt            2  139[BANK0 ] PTR unsigned char 
  1878 ;;		 -> STR_8(24), STR_7(19), STR_6(13), STR_5(21), 
  1879 ;;		 -> STR_4(20), STR_3(24), STR_2(13), STR_1(13), 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  2  133[BANK0 ] int 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1889 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1890 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1892 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1893 ;;Total ram usage:        8 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    8
  1896 ;; This function calls:
  1897 ;;		_vfpfcnvrt
  1898 ;; This function is called by:
  1899 ;;		_sprintf
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text4
  1904  004D24                     __ptext4:
  1905                           	opt callstack 0
  1906  004D24                     _vfprintf:
  1907                           	opt callstack 20
  1908                           
  1909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;incstack = 0
  1913  004D24  0060  F39C  F0EB   	movff	vfprintf@fmt,vfprintf@cfmt
  1914  004D2A  0060  F3A0  F0EC   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1915                           
  1916                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1917  004D30  0E00               	movlw	0
  1918  004D32  6E3A               	movwf	_nout+1,c
  1919  004D34  0E00               	movlw	0
  1920  004D36  6E39               	movwf	_nout,c
  1921                           
  1922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1923  004D38  D018               	goto	l6394
  1924  004D3A                     l6392:
  1925                           
  1926                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1927  004D3A  0060  F394  F0D1   	movff	vfprintf@fp,vfpfcnvrt@fp
  1928  004D40  0060  F398  F0D2   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1929  004D46  0EEB               	movlw	low vfprintf@cfmt
  1930  004D48  0100               	movlb	0	; () banked
  1931  004D4A  6FD3               	movwf	vfpfcnvrt@fmt& (0+255),b
  1932  004D4C  0E00               	movlw	high vfprintf@cfmt
  1933  004D4E  6FD4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1934  004D50  0060  F3A4  F0D5   	movff	vfprintf@ap,vfpfcnvrt@ap
  1935  004D56  0060  F3A8  F0D6   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1936  004D5C  ECA9  F019         	call	_vfpfcnvrt	;wreg free
  1937  004D60  0100               	movlb	0	; () banked
  1938  004D62  51D1               	movf	?_vfpfcnvrt& (0+255),w,b
  1939  004D64  2639               	addwf	_nout,f,c
  1940  004D66  51D2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1941  004D68  223A               	addwfc	_nout+1,f,c
  1942  004D6A                     l6394:
  1943                           
  1944                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1945  004D6A  0060  F3AF  FFF6   	movff	vfprintf@cfmt,tblptrl
  1946  004D70  0060  F3B3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  1947  004D76                     	if	0	;tblptru may be non-zero
  1948  004D76                     	endif
  1949  004D76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1950  004D76  0E00               	movlw	low (__mediumconst shr (0+16))
  1951  004D78  6EF8               	movwf	tblptru,c
  1952  004D7A                     	endif
  1953  004D7A  0008               	tblrd		*
  1954  004D7C  50F5               	movf	tablat,w,c
  1955  004D7E  0900               	iorlw	0
  1956  004D80  A4D8               	btfss	status,2,c
  1957  004D82  D7DB               	goto	l6392
  1958                           
  1959                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1960  004D84  0060  F0E4  F0E5   	movff	_nout,?_vfprintf
  1961  004D8A  0060  F0E8  F0E6   	movff	_nout+1,?_vfprintf+1
  1962  004D90  0012               	return		;funcret
  1963  004D92                     __end_of_vfprintf:
  1964                           	opt callstack 0
  1965                           
  1966 ;; *************** function _vfpfcnvrt *****************
  1967 ;; Defined at:
  1968 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  fp              2  113[BANK0 ] PTR struct _IO_FILE
  1971 ;;		 -> sprintf@f(6), 
  1972 ;;  fmt             2  115[BANK0 ] PTR PTR unsigned char 
  1973 ;;		 -> vfprintf@cfmt(2), 
  1974 ;;  ap              2  117[BANK0 ] PTR PTR void 
  1975 ;;		 -> sprintf@ap(2), 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  llu             8    0        unsigned long long 
  1978 ;;  ll              8    0        long long 
  1979 ;;  f               4  125[BANK0 ] long long 
  1980 ;;  ct              3  129[BANK0 ] unsigned char [3]
  1981 ;;  vp              3    0        PTR void 
  1982 ;;  cp              3    0        PTR unsigned char 
  1983 ;;  i               2    0        int 
  1984 ;;  done            2    0        int 
  1985 ;;  c               1  132[BANK0 ] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  2  113[BANK0 ] int 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1995 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1996 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1997 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1998 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1999 ;;Total ram usage:       20 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    7
  2002 ;; This function calls:
  2003 ;;		_efgtoa
  2004 ;;		_fputc
  2005 ;;		_isupper
  2006 ;;		_strncmp
  2007 ;;		_tolower
  2008 ;; This function is called by:
  2009 ;;		_vfprintf
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text5
  2014  003352                     __ptext5:
  2015                           	opt callstack 0
  2016  003352                     _vfpfcnvrt:
  2017                           	opt callstack 20
  2018                           
  2019                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2020                           
  2021                           ;incstack = 0
  2022  003352  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2023  003358  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2024  00335E  006F FF7B FFF6     	movff	postinc2,tblptrl
  2025  003364  006F FF77 FFF7     	movff	postdec2,tblptrh
  2026  00336A                     	if	0	;tblptru may be non-zero
  2027  00336A                     	endif
  2028  00336A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2029  00336A  0E00               	movlw	low (__mediumconst shr (0+16))
  2030  00336C  6EF8               	movwf	tblptru,c
  2031  00336E                     	endif
  2032  00336E  0008               	tblrd		*
  2033  003370  50F5               	movf	tablat,w,c
  2034  003372  0A25               	xorlw	37
  2035  003374  A4D8               	btfss	status,2,c
  2036  003376  D193               	goto	l6346
  2037                           
  2038                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2039  003378  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2040  00337E  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2041  003384  2ADE               	incf	postinc2,f,c
  2042  003386  0E00               	movlw	0
  2043  003388  22DD               	addwfc	postdec2,f,c
  2044                           
  2045                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2046  00338A  0E00               	movlw	0
  2047  00338C  6E3C               	movwf	_width+1,c
  2048  00338E  0E00               	movlw	0
  2049  003390  6E3B               	movwf	_width,c
  2050  003392  0060  F0EC  F03F   	movff	_width,_flags
  2051  003398  0060  F0F0  F040   	movff	_width+1,_flags+1
  2052                           
  2053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2054  00339E  683D               	setf	_prec,c
  2055  0033A0  683E               	setf	_prec+1,c
  2056                           
  2057                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  2058  0033A2  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2059  0033A8  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2060  0033AE  006F FF7B FFF6     	movff	postinc2,tblptrl
  2061  0033B4  006F FF77 FFF7     	movff	postdec2,tblptrh
  2062  0033BA                     	if	0	;tblptru may be non-zero
  2063  0033BA                     	endif
  2064  0033BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2065  0033BA  0E00               	movlw	low (__mediumconst shr (0+16))
  2066  0033BC  6EF8               	movwf	tblptru,c
  2067  0033BE                     	endif
  2068  0033BE  0008               	tblrd		*
  2069  0033C0  50F5               	movf	tablat,w,c
  2070  0033C2  0100               	movlb	0	; () banked
  2071  0033C4  6F66               	movwf	tolower@c& (0+255),b
  2072  0033C6  6B67               	clrf	(tolower@c+1)& (0+255),b
  2073  0033C8  EC90  F027         	call	_tolower	;wreg free
  2074  0033CC  0100               	movlb	0	; () banked
  2075  0033CE  5166               	movf	?_tolower& (0+255),w,b
  2076  0033D0  6FE1               	movwf	vfpfcnvrt@ct& (0+255),b
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  2080  0033D2  51E1               	movf	vfpfcnvrt@ct& (0+255),w,b
  2081  0033D4  B4D8               	btfsc	status,2,c
  2082  0033D6  D045               	goto	l6302
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  2086  0033D8  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2087  0033DE  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2088  0033E4  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2089  0033EA  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2090  0033F0  0E01               	movlw	1
  2091  0033F2  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2092  0033F4  0E00               	movlw	0
  2093  0033F6  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2094  0033F8  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2095  0033FE  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2096  003404                     	if	0	;tblptru may be non-zero
  2097  003404                     	endif
  2098  003404                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2099  003404  0E00               	movlw	low (__mediumconst shr (0+16))
  2100  003406  6EF8               	movwf	tblptru,c
  2101  003408                     	endif
  2102  003408  0008               	tblrd		*
  2103  00340A  50F5               	movf	tablat,w,c
  2104  00340C  6F66               	movwf	tolower@c& (0+255),b
  2105  00340E  6B67               	clrf	(tolower@c+1)& (0+255),b
  2106  003410  EC90  F027         	call	_tolower	;wreg free
  2107  003414  0100               	movlb	0	; () banked
  2108  003416  5166               	movf	?_tolower& (0+255),w,b
  2109  003418  6FE2               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  2113  00341A  51E2               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2114  00341C  B4D8               	btfsc	status,2,c
  2115  00341E  D021               	goto	l6302
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  2119  003420  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2120  003426  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2121  00342C  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2122  003432  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2123  003438  0E02               	movlw	2
  2124  00343A  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2125  00343C  0E00               	movlw	0
  2126  00343E  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2127  003440  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2128  003446  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2129  00344C                     	if	0	;tblptru may be non-zero
  2130  00344C                     	endif
  2131  00344C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2132  00344C  0E00               	movlw	low (__mediumconst shr (0+16))
  2133  00344E  6EF8               	movwf	tblptru,c
  2134  003450                     	endif
  2135  003450  0008               	tblrd		*
  2136  003452  50F5               	movf	tablat,w,c
  2137  003454  6F66               	movwf	tolower@c& (0+255),b
  2138  003456  6B67               	clrf	(tolower@c+1)& (0+255),b
  2139  003458  EC90  F027         	call	_tolower	;wreg free
  2140  00345C  0100               	movlb	0	; () banked
  2141  00345E  5166               	movf	?_tolower& (0+255),w,b
  2142  003460  6FE3               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2143  003462                     l6302:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  2147  003462  0E66               	movlw	102
  2148  003464  19E1               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2149  003466  A4D8               	btfss	status,2,c
  2150  003468  D05B               	goto	l6314
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  2154  00346A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2155  003470  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2156  003476  006F FF7B FFF6     	movff	postinc2,tblptrl
  2157  00347C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2158  003482                     	if	0	;tblptru may be non-zero
  2159  003482                     	endif
  2160  003482                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2161  003482  0E00               	movlw	low (__mediumconst shr (0+16))
  2162  003484  6EF8               	movwf	tblptru,c
  2163  003486                     	endif
  2164  003486  0008               	tblrd		*
  2165  003488  006F FFD4  F0E4    	movff	tablat,vfpfcnvrt@c
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  2169  00348E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2170  003494  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2171  00349A  2ADE               	incf	postinc2,f,c
  2172  00349C  0E00               	movlw	0
  2173  00349E  22DD               	addwfc	postdec2,f,c
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  2177  0034A0  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2178  0034A6  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2179  0034AC  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  2180  0034B2  0E04               	movlw	4
  2181  0034B4  26DE               	addwf	postinc2,f,c
  2182  0034B6  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  2183  0034BC  0E00               	movlw	0
  2184  0034BE  22DD               	addwfc	postdec2,f,c
  2185  0034C0  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2186  0034C6  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2187  0034CC  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f
  2188  0034D2  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+1
  2189  0034D8  006F FF78  F0DF    	movff	postinc2,vfpfcnvrt@f+2
  2190  0034DE  006F FF78  F0E0    	movff	postinc2,vfpfcnvrt@f+3
  2191  0034E4                     l6310:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  2195  0034E4  0060  F344  F08D   	movff	vfpfcnvrt@fp,efgtoa@fp
  2196  0034EA  0060  F348  F08E   	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2197  0034F0  0060  F374  F08F   	movff	vfpfcnvrt@f,efgtoa@f
  2198  0034F6  0060  F378  F090   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2199  0034FC  0060  F37C  F091   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2200  003502  0060  F380  F092   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2201  003508  0060  F390  F093   	movff	vfpfcnvrt@c,efgtoa@c
  2202  00350E  EC48  F010         	call	_efgtoa	;wreg free
  2203  003512  0060  F234  F0D1   	movff	?_efgtoa,?_vfpfcnvrt
  2204  003518  0060  F238  F0D2   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2205  00351E  0012               	return	
  2206  003520                     l6314:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2210  003520  0EE1               	movlw	low vfpfcnvrt@ct
  2211  003522  6F60               	movwf	strncmp@_l& (0+255),b
  2212  003524  0E00               	movlw	high vfpfcnvrt@ct
  2213  003526  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2214  003528  0E8C               	movlw	low STR_17
  2215  00352A  6F62               	movwf	strncmp@_r& (0+255),b
  2216  00352C  0E20               	movlw	high STR_17
  2217  00352E  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2218  003530  0E00               	movlw	0
  2219  003532  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2220  003534  0E02               	movlw	2
  2221  003536  6F64               	movwf	strncmp@n& (0+255),b
  2222  003538  ECC1  F022         	call	_strncmp	;wreg free
  2223  00353C  0100               	movlb	0	; () banked
  2224  00353E  5160               	movf	?_strncmp& (0+255),w,b
  2225  003540  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2226  003542  A4D8               	btfss	status,2,c
  2227  003544  D070               	goto	l6330
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2231  003546  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2232  00354C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2233  003552  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2234  003558  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2235  00355E  0E01               	movlw	1
  2236  003560  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2237  003562  0E00               	movlw	0
  2238  003564  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2239  003566  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2240  00356C  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2241  003572                     	if	0	;tblptru may be non-zero
  2242  003572                     	endif
  2243  003572                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2244  003572  0E00               	movlw	low (__mediumconst shr (0+16))
  2245  003574  6EF8               	movwf	tblptru,c
  2246  003576                     	endif
  2247  003576  0008               	tblrd		*
  2248  003578  006F FFD4  F0E4    	movff	tablat,vfpfcnvrt@c
  2249  00357E  0EBF               	movlw	191
  2250  003580  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  2251  003582  0EFF               	movlw	255
  2252  003584  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2253  003586  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2254  00358C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2255  003592  006F FF7B FFF6     	movff	postinc2,tblptrl
  2256  003598  006F FF77 FFF7     	movff	postdec2,tblptrh
  2257  00359E                     	if	0	;tblptru may be non-zero
  2258  00359E                     	endif
  2259  00359E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2260  00359E  0E00               	movlw	low (__mediumconst shr (0+16))
  2261  0035A0  6EF8               	movwf	tblptru,c
  2262  0035A2                     	endif
  2263  0035A2  0008               	tblrd		*
  2264  0035A4  50F5               	movf	tablat,w,c
  2265  0035A6  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2266  0035A8  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2267  0035AA  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  2268  0035AC  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2269  0035AE  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2270  0035B0  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2271  0035B2  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2272  0035B4  E106               	bnz	u8240
  2273  0035B6  0E1A               	movlw	26
  2274  0035B8  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2275  0035BA  B0D8               	btfsc	status,0,c
  2276  0035BC  D002               	goto	u8240
  2277  0035BE  0E01               	movlw	1
  2278  0035C0  D001               	goto	u8250
  2279  0035C2                     u8240:
  2280  0035C2  0E00               	movlw	0
  2281  0035C4                     u8250:
  2282  0035C4  6FDB               	movwf	_vfpfcnvrt$1683& (0+255),b
  2283  0035C6  6BDC               	clrf	(_vfpfcnvrt$1683+1)& (0+255),b
  2284                           
  2285                           ; BSR set to: 0
  2286  0035C8  51DB               	movf	_vfpfcnvrt$1683& (0+255),w,b
  2287  0035CA  11DC               	iorwf	(_vfpfcnvrt$1683+1)& (0+255),w,b
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2291                           
  2292                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  2296  0035CC  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2297  0035D2  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2298  0035D8  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  2299  0035DE  0E04               	movlw	4
  2300  0035E0  26DE               	addwf	postinc2,f,c
  2301  0035E2  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  2302  0035E8  0E00               	movlw	0
  2303  0035EA  22DD               	addwfc	postdec2,f,c
  2304  0035EC  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2305  0035F2  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2306  0035F8  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f
  2307  0035FE  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+1
  2308  003604  006F FF78  F0DF    	movff	postinc2,vfpfcnvrt@f+2
  2309  00360A  006F FF78  F0E0    	movff	postinc2,vfpfcnvrt@f+3
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  2313                           
  2314                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  2315  003610  0E02               	movlw	2
  2316  003612  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2317  003618  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2318  00361E  26DE               	addwf	postinc2,f,c
  2319  003620  0E00               	movlw	0
  2320  003622  22DD               	addwfc	postdec2,f,c
  2321  003624  D75F               	goto	l6310
  2322  003626                     l6330:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2326  003626  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2327  00362C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2328  003632  006F FF7B FFF6     	movff	postinc2,tblptrl
  2329  003638  006F FF77 FFF7     	movff	postdec2,tblptrh
  2330  00363E                     	if	0	;tblptru may be non-zero
  2331  00363E                     	endif
  2332  00363E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2333  00363E  0E00               	movlw	low (__mediumconst shr (0+16))
  2334  003640  6EF8               	movwf	tblptru,c
  2335  003642                     	endif
  2336  003642  0008               	tblrd		*
  2337  003644  50F5               	movf	tablat,w,c
  2338  003646  0A25               	xorlw	37
  2339  003648  A4D8               	btfss	status,2,c
  2340  00364A  D01B               	goto	l6340
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2344  00364C  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2345  003652  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2346  003658  2ADE               	incf	postinc2,f,c
  2347  00365A  0E00               	movlw	0
  2348  00365C  22DD               	addwfc	postdec2,f,c
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2352  00365E  0E00               	movlw	0
  2353  003660  6F61               	movwf	(fputc@c+1)& (0+255),b
  2354  003662  0E25               	movlw	37
  2355  003664  6F60               	movwf	fputc@c& (0+255),b
  2356  003666  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  2357  00366C  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2358  003672  EC4F  F024         	call	_fputc	;wreg free
  2359  003676                     l6336:
  2360                           
  2361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2362  003676  0E00               	movlw	0
  2363  003678  0100               	movlb	0	; () banked
  2364  00367A  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2365  00367C  0E01               	movlw	1
  2366  00367E  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  2367  003680  0012               	return	
  2368  003682                     l6340:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2372  003682  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2373  003688  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2374  00368E  2ADE               	incf	postinc2,f,c
  2375  003690  0E00               	movlw	0
  2376  003692  22DD               	addwfc	postdec2,f,c
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2380  003694  0E00               	movlw	0
  2381  003696  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2382  003698  0E00               	movlw	0
  2383  00369A  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  2384  00369C  0012               	return	
  2385  00369E                     l6346:
  2386                           
  2387                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  2388  00369E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2389  0036A4  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2390  0036AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  2391  0036B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  2392  0036B6                     	if	0	;tblptru may be non-zero
  2393  0036B6                     	endif
  2394  0036B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2395  0036B6  0E00               	movlw	low (__mediumconst shr (0+16))
  2396  0036B8  6EF8               	movwf	tblptru,c
  2397  0036BA                     	endif
  2398  0036BA  0008               	tblrd		*
  2399  0036BC  50F5               	movf	tablat,w,c
  2400  0036BE  0100               	movlb	0	; () banked
  2401  0036C0  6F60               	movwf	fputc@c& (0+255),b
  2402  0036C2  6B61               	clrf	(fputc@c+1)& (0+255),b
  2403  0036C4  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  2404  0036CA  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2405  0036D0  EC4F  F024         	call	_fputc	;wreg free
  2406                           
  2407                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2408  0036D4  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2409  0036DA  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2410  0036E0  2ADE               	incf	postinc2,f,c
  2411  0036E2  0E00               	movlw	0
  2412  0036E4  22DD               	addwfc	postdec2,f,c
  2413  0036E6  D7C7               	goto	l6336
  2414  0036E8                     __end_of_vfpfcnvrt:
  2415                           	opt callstack 0
  2416                           
  2417 ;; *************** function _strncmp *****************
  2418 ;; Defined at:
  2419 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  2422 ;;		 -> vfpfcnvrt@ct(3), 
  2423 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  2424 ;;		 -> STR_19(3), 
  2425 ;;  n               2    4[BANK0 ] unsigned int 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  2428 ;;		 -> STR_19(3), 
  2429 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  2430 ;;		 -> vfpfcnvrt@ct(3), 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  2    0[BANK0 ] int 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2440 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2441 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2442 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2443 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2444 ;;Total ram usage:       11 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    2
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_vfpfcnvrt
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text6
  2455  004582                     __ptext6:
  2456                           	opt callstack 0
  2457  004582                     _strncmp:
  2458                           	opt callstack 24
  2459                           
  2460                           ;incstack = 0
  2461  004582  0060  F180  F067   	movff	strncmp@_l,strncmp@l
  2462  004588  0060  F184  F068   	movff	strncmp@_l+1,strncmp@l+1
  2463  00458E  0060  F188  F069   	movff	strncmp@_r,strncmp@r
  2464  004594  0060  F18C  F06A   	movff	strncmp@_r+1,strncmp@r+1
  2465  00459A  0100               	movlb	0	; () banked
  2466  00459C  0764               	decf	strncmp@n& (0+255),f,b
  2467  00459E  A0D8               	btfss	status,0,c
  2468  0045A0  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2469  0045A2  2964               	incf	strncmp@n& (0+255),w,b
  2470  0045A4  E10F               	bnz	l6272
  2471  0045A6  2965               	incf	(strncmp@n+1)& (0+255),w,b
  2472  0045A8  A4D8               	btfss	status,2,c
  2473  0045AA  D00C               	goto	l6272
  2474                           
  2475                           ; BSR set to: 0
  2476  0045AC  0E00               	movlw	0
  2477  0045AE  6F61               	movwf	(?_strncmp+1)& (0+255),b
  2478  0045B0  0E00               	movlw	0
  2479  0045B2  6F60               	movwf	?_strncmp& (0+255),b
  2480  0045B4  0012               	return	
  2481  0045B6                     l6270:
  2482                           
  2483                           ; BSR set to: 0
  2484  0045B6  4B67               	infsnz	strncmp@l& (0+255),f,b
  2485  0045B8  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  2486  0045BA  4B69               	infsnz	strncmp@r& (0+255),f,b
  2487  0045BC  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  2488  0045BE  0764               	decf	strncmp@n& (0+255),f,b
  2489  0045C0  A0D8               	btfss	status,0,c
  2490  0045C2  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2491  0045C4                     l6272:
  2492                           
  2493                           ; BSR set to: 0
  2494  0045C4  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2495  0045CA  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2496  0045D0  50DF               	movf	indf2,w,c
  2497  0045D2  B4D8               	btfsc	status,2,c
  2498  0045D4  D026               	goto	u8180
  2499                           
  2500                           ; BSR set to: 0
  2501  0045D6  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2502  0045DC  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2503  0045E2                     	if	0	;tblptru may be non-zero
  2504  0045E2                     	endif
  2505  0045E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2506  0045E2  0E00               	movlw	low (__mediumconst shr (0+16))
  2507  0045E4  6EF8               	movwf	tblptru,c
  2508  0045E6                     	endif
  2509  0045E6  0008               	tblrd		*
  2510  0045E8  50F5               	movf	tablat,w,c
  2511  0045EA  0900               	iorlw	0
  2512  0045EC  B4D8               	btfsc	status,2,c
  2513  0045EE  D019               	goto	u8180
  2514                           
  2515                           ; BSR set to: 0
  2516  0045F0  5164               	movf	strncmp@n& (0+255),w,b
  2517  0045F2  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  2518  0045F4  B4D8               	btfsc	status,2,c
  2519  0045F6  D015               	goto	u8180
  2520                           
  2521                           ; BSR set to: 0
  2522  0045F8  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2523  0045FE  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2524  004604  50DF               	movf	indf2,w,c
  2525  004606  6F66               	movwf	??_strncmp& (0+255),b
  2526  004608  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2527  00460E  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2528  004614                     	if	0	;tblptru may be non-zero
  2529  004614                     	endif
  2530  004614                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2531  004614  0E00               	movlw	low (__mediumconst shr (0+16))
  2532  004616  6EF8               	movwf	tblptru,c
  2533  004618                     	endif
  2534  004618  0008               	tblrd		*
  2535  00461A  50F5               	movf	tablat,w,c
  2536  00461C  1966               	xorwf	??_strncmp& (0+255),w,b
  2537  00461E  B4D8               	btfsc	status,2,c
  2538  004620  D7CA               	goto	l6270
  2539  004622                     u8180:
  2540                           
  2541                           ; BSR set to: 0
  2542  004622  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2543  004628  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2544  00462E  50DF               	movf	indf2,w,c
  2545  004630  6F66               	movwf	??_strncmp& (0+255),b
  2546  004632  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2547  004638  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2548  00463E                     	if	0	;tblptru may be non-zero
  2549  00463E                     	endif
  2550  00463E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2551  00463E  0E00               	movlw	low (__mediumconst shr (0+16))
  2552  004640  6EF8               	movwf	tblptru,c
  2553  004642                     	endif
  2554  004642  0008               	tblrd		*
  2555  004644  50F5               	movf	tablat,w,c
  2556  004646  5D66               	subwf	??_strncmp& (0+255),w,b
  2557  004648  6F60               	movwf	?_strncmp& (0+255),b
  2558  00464A  6B61               	clrf	(?_strncmp+1)& (0+255),b
  2559  00464C  A0D8               	btfss	status,0,c
  2560  00464E  0761               	decf	(?_strncmp+1)& (0+255),f,b
  2561                           
  2562                           ; BSR set to: 0
  2563  004650  0012               	return		;funcret
  2564  004652                     __end_of_strncmp:
  2565                           	opt callstack 0
  2566                           
  2567 ;; *************** function _efgtoa *****************
  2568 ;; Defined at:
  2569 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  2572 ;;		 -> sprintf@f(6), 
  2573 ;;  f               4   47[BANK0 ] PTR struct _IO_FILE
  2574 ;;  c               1   51[BANK0 ] unsigned char 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  u               4  109[BANK0 ] unsigned char 
  2577 ;;  g               4  101[BANK0 ] unsigned char 
  2578 ;;  l               4   95[BANK0 ] unsigned char 
  2579 ;;  h               4   91[BANK0 ] unsigned char 
  2580 ;;  ou              4   57[BANK0 ] unsigned char 
  2581 ;;  n               2  107[BANK0 ] int 
  2582 ;;  e               2  105[BANK0 ] int 
  2583 ;;  i               2   99[BANK0 ] int 
  2584 ;;  w               2   88[BANK0 ] int 
  2585 ;;  p               2   85[BANK0 ] int 
  2586 ;;  sign            2   83[BANK0 ] int 
  2587 ;;  d               2   81[BANK0 ] int 
  2588 ;;  ne              2   79[BANK0 ] int 
  2589 ;;  m               2   77[BANK0 ] int 
  2590 ;;  pp              2   75[BANK0 ] int 
  2591 ;;  t               2   73[BANK0 ] int 
  2592 ;;  mode            1   90[BANK0 ] unsigned char 
  2593 ;;  nmode           1   87[BANK0 ] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  2   45[BANK0 ] int 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2603 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2604 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2605 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2606 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2607 ;;Total ram usage:       68 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    6
  2610 ;; This function calls:
  2611 ;;		___awdiv
  2612 ;;		___awmod
  2613 ;;		___fladd
  2614 ;;		___fldiv
  2615 ;;		___fleq
  2616 ;;		___flge
  2617 ;;		___flmul
  2618 ;;		___flneg
  2619 ;;		___flsub
  2620 ;;		___fltol
  2621 ;;		___fpclassifyf
  2622 ;;		_floorf
  2623 ;;		_isupper
  2624 ;;		_pad
  2625 ;;		_strcpy
  2626 ;;		_tolower
  2627 ;; This function is called by:
  2628 ;;		_vfpfcnvrt
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text7
  2633  002090                     __ptext7:
  2634                           	opt callstack 0
  2635  002090                     _efgtoa:
  2636                           	opt callstack 20
  2637                           
  2638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;incstack = 0
  2642  002090  0E00               	movlw	0
  2643  002092  0100               	movlb	0	; () banked
  2644  002094  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  2645  002096  0E00               	movlw	0
  2646  002098  6FB3               	movwf	efgtoa@sign& (0+255),b
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  2650  00209A  0060  F23C  F0C5   	movff	efgtoa@f,efgtoa@g
  2651  0020A0  0060  F240  F0C6   	movff	efgtoa@f+1,efgtoa@g+1
  2652  0020A6  0060  F244  F0C7   	movff	efgtoa@f+2,efgtoa@g+2
  2653  0020AC  0060  F248  F0C8   	movff	efgtoa@f+3,efgtoa@g+3
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  2657  0020B2  AFC8               	btfss	(efgtoa@g+3)& (0+255),7,b
  2658  0020B4  D01E               	goto	l5976
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  2662  0020B6  0E00               	movlw	0
  2663  0020B8  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  2664  0020BA  0E01               	movlw	1
  2665  0020BC  6FB3               	movwf	efgtoa@sign& (0+255),b
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  2669  0020BE  0060  F314  F060   	movff	efgtoa@g,___flneg@f1
  2670  0020C4  0060  F318  F061   	movff	efgtoa@g+1,___flneg@f1+1
  2671  0020CA  0060  F31C  F062   	movff	efgtoa@g+2,___flneg@f1+2
  2672  0020D0  0060  F320  F063   	movff	efgtoa@g+3,___flneg@f1+3
  2673  0020D6  EC43  F028         	call	___flneg	;wreg free
  2674  0020DA  0060  F180  F0C5   	movff	?___flneg,efgtoa@g
  2675  0020E0  0060  F184  F0C6   	movff	?___flneg+1,efgtoa@g+1
  2676  0020E6  0060  F188  F0C7   	movff	?___flneg+2,efgtoa@g+2
  2677  0020EC  0060  F18C  F0C8   	movff	?___flneg+3,efgtoa@g+3
  2678  0020F2                     l5976:
  2679                           
  2680                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  2681  0020F2  0E00               	movlw	0
  2682  0020F4  0100               	movlb	0	; () banked
  2683  0020F6  6FCC               	movwf	(efgtoa@n+1)& (0+255),b
  2684  0020F8  0E00               	movlw	0
  2685  0020FA  6FCB               	movwf	efgtoa@n& (0+255),b
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  2689  0020FC  0060  F0EC  F0B8   	movff	_width,efgtoa@w
  2690  002102  0060  F0F0  F0B9   	movff	_width+1,efgtoa@w+1
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  2694  002108  51B3               	movf	efgtoa@sign& (0+255),w,b
  2695  00210A  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2696  00210C  A4D8               	btfss	status,2,c
  2697  00210E  D002               	goto	u7640
  2698                           
  2699                           ; BSR set to: 0
  2700  002110  A43F               	btfss	_flags,2,c
  2701  002112  D014               	goto	l5996
  2702  002114                     u7640:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  2706  002114  51B3               	movf	efgtoa@sign& (0+255),w,b
  2707  002116  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2708  002118  A4D8               	btfss	status,2,c
  2709  00211A  D004               	goto	l5988
  2710                           
  2711                           ; BSR set to: 0
  2712  00211C  0E00               	movlw	0
  2713  00211E  6F9E               	movwf	(_efgtoa$1654+1)& (0+255),b
  2714  002120  0E2B               	movlw	43
  2715  002122  D003               	goto	L1
  2716  002124                     l5988:
  2717                           
  2718                           ; BSR set to: 0
  2719  002124  0E00               	movlw	0
  2720  002126  6F9E               	movwf	(_efgtoa$1654+1)& (0+255),b
  2721  002128  0E2D               	movlw	45
  2722  00212A                     L1:
  2723  00212A  6F9D               	movwf	_efgtoa$1654& (0+255),b
  2724                           
  2725                           ; BSR set to: 0
  2726  00212C  0060  F274  F134   	movff	_efgtoa$1654,_dbuf
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  2730  002132  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  2731  002134  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  2735  002136  07B8               	decf	efgtoa@w& (0+255),f,b
  2736  002138  A0D8               	btfss	status,0,c
  2737  00213A  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  2738  00213C                     l5996:
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2742  00213C  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  2743  002142  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  2744  002148  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  2745  00214E  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  2746  002154  ECE1  F021         	call	___fpclassifyf	;wreg free
  2747  002158  0100               	movlb	0	; () banked
  2748  00215A  0560               	decf	?___fpclassifyf& (0+255),w,b
  2749  00215C  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2750  00215E  A4D8               	btfss	status,2,c
  2751  002160  D052               	goto	l6014
  2752                           
  2753                           ; BSR set to: 0
  2754  002162  0EBF               	movlw	191
  2755  002164  6F94               	movwf	??_efgtoa& (0+255),b
  2756  002166  0EFF               	movlw	255
  2757  002168  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  2758  00216A  5193               	movf	efgtoa@c& (0+255),w,b
  2759  00216C  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  2760  00216E  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  2761  002170  5194               	movf	??_efgtoa& (0+255),w,b
  2762  002172  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  2763  002174  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  2764  002176  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2765  002178  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  2766  00217A  E106               	bnz	u7670
  2767  00217C  0E1A               	movlw	26
  2768  00217E  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  2769  002180  B0D8               	btfsc	status,0,c
  2770  002182  D002               	goto	u7670
  2771  002184  0E01               	movlw	1
  2772  002186  D001               	goto	u7680
  2773  002188                     u7670:
  2774  002188  0E00               	movlw	0
  2775  00218A                     u7680:
  2776  00218A  6F9F               	movwf	_efgtoa$1655& (0+255),b
  2777  00218C  6BA0               	clrf	(_efgtoa$1655+1)& (0+255),b
  2778                           
  2779                           ; BSR set to: 0
  2780  00218E  519F               	movf	_efgtoa$1655& (0+255),w,b
  2781  002190  11A0               	iorwf	(_efgtoa$1655+1)& (0+255),w,b
  2782  002192  B4D8               	btfsc	status,2,c
  2783  002194  D00D               	goto	l6006
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  2787  002196  0E34               	movlw	low _dbuf
  2788  002198  25CB               	addwf	efgtoa@n& (0+255),w,b
  2789  00219A  6F60               	movwf	strcpy@dest& (0+255),b
  2790  00219C  0E01               	movlw	high _dbuf
  2791  00219E  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2792  0021A0  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2793  0021A2  0E7C               	movlw	low STR_9
  2794  0021A4  6F62               	movwf	strcpy@src& (0+255),b
  2795  0021A6  0E20               	movlw	high STR_9
  2796  0021A8  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2797  0021AA  ECC9  F026         	call	_strcpy	;wreg free
  2798                           
  2799                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  2800  0021AE  D00C               	goto	l6008
  2801  0021B0                     l6006:
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  2805  0021B0  0E34               	movlw	low _dbuf
  2806  0021B2  25CB               	addwf	efgtoa@n& (0+255),w,b
  2807  0021B4  6F60               	movwf	strcpy@dest& (0+255),b
  2808  0021B6  0E01               	movlw	high _dbuf
  2809  0021B8  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2810  0021BA  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2811  0021BC  0E84               	movlw	low STR_10
  2812  0021BE  6F62               	movwf	strcpy@src& (0+255),b
  2813  0021C0  0E20               	movlw	high STR_10
  2814  0021C2  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2815  0021C4  ECC9  F026         	call	_strcpy	;wreg free
  2816  0021C8                     l6008:
  2817                           
  2818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  2819  0021C8  0100               	movlb	0	; () banked
  2820  0021CA  0EFD               	movlw	253
  2821  0021CC  27B8               	addwf	efgtoa@w& (0+255),f,b
  2822  0021CE  0EFF               	movlw	255
  2823  0021D0  23B9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2824  0021D2                     l6010:
  2825                           
  2826                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  2827  0021D2  0060  F234  F070   	movff	efgtoa@fp,pad@fp
  2828  0021D8  0060  F238  F071   	movff	efgtoa@fp+1,pad@fp+1
  2829  0021DE  0E34               	movlw	low _dbuf
  2830  0021E0  0100               	movlb	0	; () banked
  2831  0021E2  6F72               	movwf	pad@buf& (0+255),b
  2832  0021E4  0E01               	movlw	high _dbuf
  2833  0021E6  6F73               	movwf	(pad@buf+1)& (0+255),b
  2834  0021E8  0060  F2E0  F074   	movff	efgtoa@w,pad@p
  2835  0021EE  0060  F2E4  F075   	movff	efgtoa@w+1,pad@p+1
  2836  0021F4  ECF3  F023         	call	_pad	;wreg free
  2837  0021F8  0060  F1C0  F08D   	movff	?_pad,?_efgtoa
  2838  0021FE  0060  F1C4  F08E   	movff	?_pad+1,?_efgtoa+1
  2839  002204  0012               	return	
  2840  002206                     l6014:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2844  002206  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  2845  00220C  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  2846  002212  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  2847  002218  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  2848  00221E  ECE1  F021         	call	___fpclassifyf	;wreg free
  2849  002222  0100               	movlb	0	; () banked
  2850  002224  5160               	movf	?___fpclassifyf& (0+255),w,b
  2851  002226  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2852  002228  A4D8               	btfss	status,2,c
  2853  00222A  D034               	goto	l6032
  2854                           
  2855                           ; BSR set to: 0
  2856  00222C  0EBF               	movlw	191
  2857  00222E  6F94               	movwf	??_efgtoa& (0+255),b
  2858  002230  0EFF               	movlw	255
  2859  002232  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  2860  002234  5193               	movf	efgtoa@c& (0+255),w,b
  2861  002236  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  2862  002238  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  2863  00223A  5194               	movf	??_efgtoa& (0+255),w,b
  2864  00223C  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  2865  00223E  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  2866  002240  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2867  002242  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  2868  002244  E106               	bnz	u7710
  2869  002246  0E1A               	movlw	26
  2870  002248  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  2871  00224A  B0D8               	btfsc	status,0,c
  2872  00224C  D002               	goto	u7710
  2873  00224E  0E01               	movlw	1
  2874  002250  D001               	goto	u7720
  2875  002252                     u7710:
  2876  002252  0E00               	movlw	0
  2877  002254                     u7720:
  2878  002254  6FA1               	movwf	_efgtoa$1660& (0+255),b
  2879  002256  6BA2               	clrf	(_efgtoa$1660+1)& (0+255),b
  2880                           
  2881                           ; BSR set to: 0
  2882  002258  51A1               	movf	_efgtoa$1660& (0+255),w,b
  2883  00225A  11A2               	iorwf	(_efgtoa$1660+1)& (0+255),w,b
  2884  00225C  B4D8               	btfsc	status,2,c
  2885  00225E  D00D               	goto	l6024
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  2889  002260  0E34               	movlw	low _dbuf
  2890  002262  25CB               	addwf	efgtoa@n& (0+255),w,b
  2891  002264  6F60               	movwf	strcpy@dest& (0+255),b
  2892  002266  0E01               	movlw	high _dbuf
  2893  002268  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2894  00226A  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2895  00226C  0E80               	movlw	low STR_13
  2896  00226E  6F62               	movwf	strcpy@src& (0+255),b
  2897  002270  0E20               	movlw	high STR_13
  2898  002272  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2899  002274  ECC9  F026         	call	_strcpy	;wreg free
  2900                           
  2901                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  2902  002278  D7A7               	goto	l6008
  2903  00227A                     l6024:
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  2907  00227A  0E34               	movlw	low _dbuf
  2908  00227C  25CB               	addwf	efgtoa@n& (0+255),w,b
  2909  00227E  6F60               	movwf	strcpy@dest& (0+255),b
  2910  002280  0E01               	movlw	high _dbuf
  2911  002282  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2912  002284  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2913  002286  0E88               	movlw	low STR_14
  2914  002288  6F62               	movwf	strcpy@src& (0+255),b
  2915  00228A  0E20               	movlw	high STR_14
  2916  00228C  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2917  00228E  ECC9  F026         	call	_strcpy	;wreg free
  2918  002292  D79A               	goto	l6008
  2919  002294                     l6032:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  2923  002294  0E00               	movlw	0
  2924  002296  6FCD               	movwf	efgtoa@u& (0+255),b
  2925  002298  0E00               	movlw	0
  2926  00229A  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  2927  00229C  0E80               	movlw	128
  2928  00229E  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  2929  0022A0  0E3F               	movlw	63
  2930  0022A2  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  2931                           
  2932                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  2933  0022A4  0E00               	movlw	0
  2934  0022A6  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  2935  0022A8  0E00               	movlw	0
  2936  0022AA  6FC9               	movwf	efgtoa@e& (0+255),b
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  2940  0022AC  0060  F314  F060   	movff	efgtoa@g,___fleq@ff1
  2941  0022B2  0060  F318  F061   	movff	efgtoa@g+1,___fleq@ff1+1
  2942  0022B8  0060  F31C  F062   	movff	efgtoa@g+2,___fleq@ff1+2
  2943  0022BE  0060  F320  F063   	movff	efgtoa@g+3,___fleq@ff1+3
  2944  0022C4  0E00               	movlw	0
  2945  0022C6  6F64               	movwf	___fleq@ff2& (0+255),b
  2946  0022C8  0E00               	movlw	0
  2947  0022CA  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  2948  0022CC  0E00               	movlw	0
  2949  0022CE  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  2950  0022D0  0E00               	movlw	0
  2951  0022D2  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  2952  0022D4  EC48  F025         	call	___fleq	;wreg free
  2953  0022D8  0100               	movlb	0	; () banked
  2954  0022DA  A0D8               	btfss	status,0,c
  2955  0022DC  D026               	goto	l6042
  2956  0022DE  D09C               	goto	u7760
  2957  0022E0                     l6038:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  2961  0022E0  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  2962  0022E6  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  2963  0022EC  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  2964  0022F2  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  2965  0022F8  0E00               	movlw	0
  2966  0022FA  6F64               	movwf	___flmul@a& (0+255),b
  2967  0022FC  0E00               	movlw	0
  2968  0022FE  6F65               	movwf	(___flmul@a+1)& (0+255),b
  2969  002300  0E20               	movlw	32
  2970  002302  6F66               	movwf	(___flmul@a+2)& (0+255),b
  2971  002304  0E41               	movlw	65
  2972  002306  6F67               	movwf	(___flmul@a+3)& (0+255),b
  2973  002308  ECF6  F015         	call	___flmul	;wreg free
  2974  00230C  0060  F180  F0CD   	movff	?___flmul,efgtoa@u
  2975  002312  0060  F184  F0CE   	movff	?___flmul+1,efgtoa@u+1
  2976  002318  0060  F188  F0CF   	movff	?___flmul+2,efgtoa@u+2
  2977  00231E  0060  F18C  F0D0   	movff	?___flmul+3,efgtoa@u+3
  2978                           
  2979                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  2980  002324  0100               	movlb	0	; () banked
  2981  002326  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  2982  002328  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  2983  00232A                     l6042:
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  2987  00232A  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  2988  002330  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  2989  002336  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  2990  00233C  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  2991  002342  0E00               	movlw	0
  2992  002344  6F64               	movwf	___flmul@a& (0+255),b
  2993  002346  0E00               	movlw	0
  2994  002348  6F65               	movwf	(___flmul@a+1)& (0+255),b
  2995  00234A  0E20               	movlw	32
  2996  00234C  6F66               	movwf	(___flmul@a+2)& (0+255),b
  2997  00234E  0E41               	movlw	65
  2998  002350  6F67               	movwf	(___flmul@a+3)& (0+255),b
  2999  002352  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  3000  002358  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  3001  00235E  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  3002  002364  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  3003  00236A  ECF6  F015         	call	___flmul	;wreg free
  3004  00236E  0060  F180  F07D   	movff	?___flmul,___flge@ff2
  3005  002374  0060  F184  F07E   	movff	?___flmul+1,___flge@ff2+1
  3006  00237A  0060  F188  F07F   	movff	?___flmul+2,___flge@ff2+2
  3007  002380  0060  F18C  F080   	movff	?___flmul+3,___flge@ff2+3
  3008  002386  EC58  F022         	call	___flge	;wreg free
  3009  00238A  0100               	movlb	0	; () banked
  3010  00238C  A0D8               	btfss	status,0,c
  3011  00238E  D027               	goto	l6048
  3012  002390  D7A7               	goto	l6038
  3013  002392                     l6044:
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  3017  002392  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3018  002398  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3019  00239E  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3020  0023A4  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3021  0023AA  0E00               	movlw	0
  3022  0023AC  6F64               	movwf	___fldiv@a& (0+255),b
  3023  0023AE  0E00               	movlw	0
  3024  0023B0  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3025  0023B2  0E20               	movlw	32
  3026  0023B4  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3027  0023B6  0E41               	movlw	65
  3028  0023B8  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3029  0023BA  EC19  F01D         	call	___fldiv	;wreg free
  3030  0023BE  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3031  0023C4  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3032  0023CA  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3033  0023D0  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3034                           
  3035                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  3036  0023D6  0100               	movlb	0	; () banked
  3037  0023D8  07C9               	decf	efgtoa@e& (0+255),f,b
  3038  0023DA  A0D8               	btfss	status,0,c
  3039  0023DC  07CA               	decf	(efgtoa@e+1)& (0+255),f,b
  3040  0023DE                     l6048:
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  3044  0023DE  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  3045  0023E4  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  3046  0023EA  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  3047  0023F0  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  3048  0023F6  0060  F334  F07D   	movff	efgtoa@u,___flge@ff2
  3049  0023FC  0060  F338  F07E   	movff	efgtoa@u+1,___flge@ff2+1
  3050  002402  0060  F33C  F07F   	movff	efgtoa@u+2,___flge@ff2+2
  3051  002408  0060  F340  F080   	movff	efgtoa@u+3,___flge@ff2+3
  3052  00240E  EC58  F022         	call	___flge	;wreg free
  3053  002412  0100               	movlb	0	; () banked
  3054  002414  A0D8               	btfss	status,0,c
  3055  002416  D7BD               	goto	l6044
  3056  002418                     u7760:
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  3060  002418  0060  F24C  F066   	movff	efgtoa@c,tolower@c
  3061  00241E  6B67               	clrf	(tolower@c+1)& (0+255),b
  3062  002420  EC90  F027         	call	_tolower	;wreg free
  3063  002424  0100               	movlb	0	; () banked
  3064  002426  5166               	movf	?_tolower& (0+255),w,b
  3065  002428  6FBA               	movwf	efgtoa@mode& (0+255),b
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  3069  00242A  0060  F2E8  F0B7   	movff	efgtoa@mode,efgtoa@nmode
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  3073  002430  0E67               	movlw	103
  3074  002432  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3075  002434  A4D8               	btfss	status,2,c
  3076  002436  D01B               	goto	l6064
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  3080  002438  503D               	movf	_prec,w,c
  3081  00243A  103E               	iorwf	_prec+1,w,c
  3082  00243C  A4D8               	btfss	status,2,c
  3083  00243E  D004               	goto	l6060
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  3087  002440  0E00               	movlw	0
  3088  002442  6E3E               	movwf	_prec+1,c
  3089  002444  0E01               	movlw	1
  3090  002446  6E3D               	movwf	_prec,c
  3091  002448                     l6060:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  3095  002448  BE3E               	btfsc	_prec+1,7,c
  3096  00244A  D005               	goto	u7790
  3097  00244C  503E               	movf	_prec+1,w,c
  3098  00244E  E108               	bnz	l548
  3099  002450  043D               	decf	_prec,w,c
  3100  002452  B0D8               	btfsc	status,0,c
  3101  002454  D005               	goto	l548
  3102  002456                     u7790:
  3103                           
  3104                           ; BSR set to: 0
  3105  002456  0E00               	movlw	0
  3106  002458  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  3107  00245A  0E06               	movlw	6
  3108  00245C  6FB5               	movwf	efgtoa@p& (0+255),b
  3109  00245E  D00A               	goto	l6070
  3110  002460                     l548:
  3111                           
  3112                           ; BSR set to: 0
  3113  002460  0060  F0F4  F0B5   	movff	_prec,efgtoa@p
  3114  002466  0060  F0F8  F0B6   	movff	_prec+1,efgtoa@p+1
  3115  00246C  D003               	goto	l6070
  3116  00246E                     l6064:
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  3120  00246E  AE3E               	btfss	_prec+1,7,c
  3121  002470  D7F7               	goto	l548
  3122  002472  D7F1               	goto	u7790
  3123  002474                     l6070:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  3127  002474  0E67               	movlw	103
  3128  002476  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3129  002478  A4D8               	btfss	status,2,c
  3130  00247A  D024               	goto	l6080
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  3134  00247C  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3135  00247E  D006               	goto	u7820
  3136  002480  0EFC               	movlw	252
  3137  002482  5DC9               	subwf	efgtoa@e& (0+255),w,b
  3138  002484  0EFF               	movlw	255
  3139  002486  59CA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3140  002488  A0D8               	btfss	status,0,c
  3141  00248A  D01A               	goto	l6078
  3142  00248C                     u7820:
  3143                           
  3144                           ; BSR set to: 0
  3145  00248C  0EFF               	movlw	255
  3146  00248E  6F94               	movwf	??_efgtoa& (0+255),b
  3147  002490  0EFF               	movlw	255
  3148  002492  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  3149  002494  0060  F2D4  F096   	movff	efgtoa@p,??_efgtoa+2
  3150  00249A  0060  F2D8  F097   	movff	efgtoa@p+1,??_efgtoa+3
  3151  0024A0  5194               	movf	??_efgtoa& (0+255),w,b
  3152  0024A2  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  3153  0024A4  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  3154  0024A6  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3155  0024A8  51C9               	movf	efgtoa@e& (0+255),w,b
  3156  0024AA  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  3157  0024AC  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  3158  0024AE  0A80               	xorlw	128
  3159  0024B0  6F98               	movwf	(??_efgtoa+4)& (0+255),b
  3160  0024B2  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  3161  0024B4  0A80               	xorlw	128
  3162  0024B6  5998               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3163  0024B8  A0D8               	btfss	status,0,c
  3164  0024BA  D002               	goto	l6078
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  3168  0024BC  0E66               	movlw	102
  3169  0024BE  D001               	goto	L2
  3170  0024C0                     l6078:
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  3174  0024C0  0E65               	movlw	101
  3175  0024C2                     L2:
  3176  0024C2  6FB7               	movwf	efgtoa@nmode& (0+255),b
  3177  0024C4                     l6080:
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  3181  0024C4  0060  F2D4  F0AD   	movff	efgtoa@p,efgtoa@m
  3182  0024CA  0060  F2D8  F0AE   	movff	efgtoa@p+1,efgtoa@m+1
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  3186  0024D0  0E67               	movlw	103
  3187  0024D2  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3188  0024D4  A4D8               	btfss	status,2,c
  3189  0024D6  D005               	goto	u7860
  3190                           
  3191                           ; BSR set to: 0
  3192  0024D8  0E66               	movlw	102
  3193  0024DA  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3194  0024DC  B4D8               	btfsc	status,2,c
  3195                           
  3196                           ; BSR set to: 0
  3197  0024DE  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3198  0024E0  D002               	goto	l6090
  3199  0024E2                     u7860:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  3203  0024E2  4BAD               	infsnz	efgtoa@m& (0+255),f,b
  3204  0024E4  2BAE               	incf	(efgtoa@m+1)& (0+255),f,b
  3205  0024E6                     l6090:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  3209  0024E6  0E66               	movlw	102
  3210  0024E8  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3211  0024EA  A4D8               	btfss	status,2,c
  3212  0024EC  D016               	goto	l6100
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  3216  0024EE  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3217  0024F0  D00C               	goto	l6096
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  3221  0024F2  0E00               	movlw	0
  3222  0024F4  6FCD               	movwf	efgtoa@u& (0+255),b
  3223  0024F6  0E00               	movlw	0
  3224  0024F8  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  3225  0024FA  0E80               	movlw	128
  3226  0024FC  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  3227  0024FE  0E3F               	movlw	63
  3228  002500  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  3229                           
  3230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  3231  002502  0E00               	movlw	0
  3232  002504  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  3233  002506  0E00               	movlw	0
  3234  002508  6FC9               	movwf	efgtoa@e& (0+255),b
  3235  00250A                     l6096:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  3239  00250A  0E67               	movlw	103
  3240  00250C  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3241  00250E  B4D8               	btfsc	status,2,c
  3242  002510  D004               	goto	l6100
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  3246  002512  51C9               	movf	efgtoa@e& (0+255),w,b
  3247  002514  27AD               	addwf	efgtoa@m& (0+255),f,b
  3248  002516  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  3249  002518  23AE               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3250  00251A                     l6100:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  3254  00251A  0E00               	movlw	0
  3255  00251C  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3256  00251E  0E00               	movlw	0
  3257  002520  6FC3               	movwf	efgtoa@i& (0+255),b
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  3261  002522  0060  F314  F0BB   	movff	efgtoa@g,efgtoa@h
  3262  002528  0060  F318  F0BC   	movff	efgtoa@g+1,efgtoa@h+1
  3263  00252E  0060  F31C  F0BD   	movff	efgtoa@g+2,efgtoa@h+2
  3264  002534  0060  F320  F0BE   	movff	efgtoa@g+3,efgtoa@h+3
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  3268  00253A  0060  F334  F099   	movff	efgtoa@u,efgtoa@ou
  3269  002540  0060  F338  F09A   	movff	efgtoa@u+1,efgtoa@ou+1
  3270  002546  0060  F33C  F09B   	movff	efgtoa@u+2,efgtoa@ou+2
  3271  00254C  0060  F340  F09C   	movff	efgtoa@u+3,efgtoa@ou+3
  3272                           
  3273                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3274  002552  D0AE               	goto	l6114
  3275  002554                     l6106:
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  3279  002554  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  3280  00255A  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  3281  002560  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  3282  002566  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  3283  00256C  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  3284  002572  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  3285  002578  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  3286  00257E  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  3287  002584  EC19  F01D         	call	___fldiv	;wreg free
  3288  002588  0060  F180  F079   	movff	?___fldiv,floorf@x
  3289  00258E  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  3290  002594  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  3291  00259A  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  3292  0025A0  EC70  F01E         	call	_floorf	;wreg free
  3293  0025A4  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  3294  0025AA  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  3295  0025B0  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  3296  0025B6  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  3297                           
  3298                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  3299  0025BC  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  3300  0025C2  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  3301  0025C8  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  3302  0025CE  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  3303  0025D4  EC29  F023         	call	___fltol	;wreg free
  3304  0025D8  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  3305  0025DE  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  3306                           
  3307                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  3308  0025E4  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  3309  0025EA  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  3310  0025F0  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  3311  0025F6  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  3312  0025FC  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  3313  002602  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  3314  002608  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  3315  00260E  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  3316  002614  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  3317  00261A  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  3318  002620  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  3319  002626  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  3320  00262C  ECF6  F015         	call	___flmul	;wreg free
  3321  002630  0060  F180  F07D   	movff	?___flmul,___flsub@a
  3322  002636  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  3323  00263C  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  3324  002642  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  3325  002648  EC33  F027         	call	___flsub	;wreg free
  3326  00264C  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  3327  002652  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  3328  002658  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  3329  00265E  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  3330                           
  3331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  3332  002664  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3333  00266A  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3334  002670  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3335  002676  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3336  00267C  0E00               	movlw	0
  3337  00267E  0100               	movlb	0	; () banked
  3338  002680  6F64               	movwf	___fldiv@a& (0+255),b
  3339  002682  0E00               	movlw	0
  3340  002684  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3341  002686  0E20               	movlw	32
  3342  002688  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3343  00268A  0E41               	movlw	65
  3344  00268C  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3345  00268E  EC19  F01D         	call	___fldiv	;wreg free
  3346  002692  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3347  002698  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3348  00269E  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3349  0026A4  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3350                           
  3351                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  3352  0026AA  0100               	movlb	0	; () banked
  3353  0026AC  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  3354  0026AE  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  3355  0026B0                     l6114:
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3359  0026B0  51AD               	movf	efgtoa@m& (0+255),w,b
  3360  0026B2  5DC3               	subwf	efgtoa@i& (0+255),w,b
  3361  0026B4  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  3362  0026B6  0A80               	xorlw	128
  3363  0026B8  6F94               	movwf	??_efgtoa& (0+255),b
  3364  0026BA  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  3365  0026BC  0A80               	xorlw	128
  3366  0026BE  5994               	subwfb	??_efgtoa& (0+255),w,b
  3367  0026C0  A0D8               	btfss	status,0,c
  3368  0026C2  D748               	goto	l6106
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  3372  0026C4  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  3373  0026CA  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  3374  0026D0  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  3375  0026D6  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  3376  0026DC  0E00               	movlw	0
  3377  0026DE  6F64               	movwf	___flmul@a& (0+255),b
  3378  0026E0  0E00               	movlw	0
  3379  0026E2  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3380  0026E4  0EA0               	movlw	160
  3381  0026E6  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3382  0026E8  0E40               	movlw	64
  3383  0026EA  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3384  0026EC  ECF6  F015         	call	___flmul	;wreg free
  3385  0026F0  0060  F180  F0BF   	movff	?___flmul,efgtoa@l
  3386  0026F6  0060  F184  F0C0   	movff	?___flmul+1,efgtoa@l+1
  3387  0026FC  0060  F188  F0C1   	movff	?___flmul+2,efgtoa@l+2
  3388  002702  0060  F18C  F0C2   	movff	?___flmul+3,efgtoa@l+3
  3389                           
  3390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  3391  002708  0060  F2EC  F079   	movff	efgtoa@h,___flge@ff1
  3392  00270E  0060  F2F0  F07A   	movff	efgtoa@h+1,___flge@ff1+1
  3393  002714  0060  F2F4  F07B   	movff	efgtoa@h+2,___flge@ff1+2
  3394  00271A  0060  F2F8  F07C   	movff	efgtoa@h+3,___flge@ff1+3
  3395  002720  0060  F2FC  F07D   	movff	efgtoa@l,___flge@ff2
  3396  002726  0060  F300  F07E   	movff	efgtoa@l+1,___flge@ff2+1
  3397  00272C  0060  F304  F07F   	movff	efgtoa@l+2,___flge@ff2+2
  3398  002732  0060  F308  F080   	movff	efgtoa@l+3,___flge@ff2+3
  3399  002738  EC58  F022         	call	___flge	;wreg free
  3400  00273C  0100               	movlb	0	; () banked
  3401  00273E  A0D8               	btfss	status,0,c
  3402  002740  D01E               	goto	u7930
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  3406                           
  3407                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 430:     } else {
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  3411  002742  0060  F2EC  F060   	movff	efgtoa@h,___fleq@ff1
  3412  002748  0060  F2F0  F061   	movff	efgtoa@h+1,___fleq@ff1+1
  3413  00274E  0060  F2F4  F062   	movff	efgtoa@h+2,___fleq@ff1+2
  3414  002754  0060  F2F8  F063   	movff	efgtoa@h+3,___fleq@ff1+3
  3415  00275A  0060  F2FC  F064   	movff	efgtoa@l,___fleq@ff2
  3416  002760  0060  F300  F065   	movff	efgtoa@l+1,___fleq@ff2+1
  3417  002766  0060  F304  F066   	movff	efgtoa@l+2,___fleq@ff2+2
  3418  00276C  0060  F308  F067   	movff	efgtoa@l+3,___fleq@ff2+3
  3419  002772  EC48  F025         	call	___fleq	;wreg free
  3420  002776  0100               	movlb	0	; () banked
  3421  002778  B0D8               	btfsc	status,0,c
  3422                           
  3423                           ; BSR set to: 0
  3424  00277A  B1B1               	btfsc	efgtoa@d& (0+255),0,b
  3425  00277C  D008               	goto	l6128
  3426  00277E                     u7930:
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  3430  00277E  0E00               	movlw	0
  3431  002780  6FBF               	movwf	efgtoa@l& (0+255),b
  3432  002782  0E00               	movlw	0
  3433  002784  6FC0               	movwf	(efgtoa@l+1)& (0+255),b
  3434  002786  0E00               	movlw	0
  3435  002788  6FC1               	movwf	(efgtoa@l+2)& (0+255),b
  3436  00278A  0E00               	movlw	0
  3437  00278C  6FC2               	movwf	(efgtoa@l+3)& (0+255),b
  3438  00278E                     l6128:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  3442  00278E  0060  F314  F060   	movff	efgtoa@g,___fladd@b
  3443  002794  0060  F318  F061   	movff	efgtoa@g+1,___fladd@b+1
  3444  00279A  0060  F31C  F062   	movff	efgtoa@g+2,___fladd@b+2
  3445  0027A0  0060  F320  F063   	movff	efgtoa@g+3,___fladd@b+3
  3446  0027A6  0060  F2FC  F064   	movff	efgtoa@l,___fladd@a
  3447  0027AC  0060  F300  F065   	movff	efgtoa@l+1,___fladd@a+1
  3448  0027B2  0060  F304  F066   	movff	efgtoa@l+2,___fladd@a+2
  3449  0027B8  0060  F308  F067   	movff	efgtoa@l+3,___fladd@a+3
  3450  0027BE  EC74  F01B         	call	___fladd	;wreg free
  3451  0027C2  0060  F180  F0BB   	movff	?___fladd,efgtoa@h
  3452  0027C8  0060  F184  F0BC   	movff	?___fladd+1,efgtoa@h+1
  3453  0027CE  0060  F188  F0BD   	movff	?___fladd+2,efgtoa@h+2
  3454  0027D4  0060  F18C  F0BE   	movff	?___fladd+3,efgtoa@h+3
  3455                           
  3456                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  3457  0027DA  0060  F264  F0CD   	movff	efgtoa@ou,efgtoa@u
  3458  0027E0  0060  F268  F0CE   	movff	efgtoa@ou+1,efgtoa@u+1
  3459  0027E6  0060  F26C  F0CF   	movff	efgtoa@ou+2,efgtoa@u+2
  3460  0027EC  0060  F270  F0D0   	movff	efgtoa@ou+3,efgtoa@u+3
  3461                           
  3462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  3463  0027F2  0E65               	movlw	101
  3464  0027F4  0100               	movlb	0	; () banked
  3465  0027F6  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3466  0027F8  B4D8               	btfsc	status,2,c
  3467  0027FA  D007               	goto	l6136
  3468                           
  3469                           ; BSR set to: 0
  3470  0027FC  0060  F324  F0AF   	movff	efgtoa@e,efgtoa@ne
  3471  002802  0060  F328  F0B0   	movff	efgtoa@e+1,efgtoa@ne+1
  3472  002808  D004               	goto	l574
  3473  00280A                     l6136:
  3474                           
  3475                           ; BSR set to: 0
  3476  00280A  0E00               	movlw	0
  3477  00280C  6FB0               	movwf	(efgtoa@ne+1)& (0+255),b
  3478  00280E  0E00               	movlw	0
  3479  002810  6FAF               	movwf	efgtoa@ne& (0+255),b
  3480  002812                     l574:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  3484  002812  0E00               	movlw	0
  3485  002814  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  3486  002816  0E00               	movlw	0
  3487  002818  6FAB               	movwf	efgtoa@pp& (0+255),b
  3488                           
  3489                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  3490  00281A  0E00               	movlw	0
  3491  00281C  6FAA               	movwf	(efgtoa@t+1)& (0+255),b
  3492  00281E  0E00               	movlw	0
  3493  002820  6FA9               	movwf	efgtoa@t& (0+255),b
  3494                           
  3495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  3496  002822  0E00               	movlw	0
  3497  002824  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3498  002826  0E00               	movlw	0
  3499  002828  6FC3               	movwf	efgtoa@i& (0+255),b
  3500                           
  3501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3502  00282A  D0FA               	goto	l6186
  3503  00282C                     l6138:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  3507  00282C  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  3508  002832  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  3509  002838  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  3510  00283E  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  3511  002844  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  3512  00284A  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  3513  002850  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  3514  002856  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  3515  00285C  EC19  F01D         	call	___fldiv	;wreg free
  3516  002860  0060  F180  F079   	movff	?___fldiv,floorf@x
  3517  002866  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  3518  00286C  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  3519  002872  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  3520  002878  EC70  F01E         	call	_floorf	;wreg free
  3521  00287C  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  3522  002882  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  3523  002888  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  3524  00288E  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  3525                           
  3526                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  3527  002894  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  3528  00289A  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  3529  0028A0  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  3530  0028A6  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  3531  0028AC  EC29  F023         	call	___fltol	;wreg free
  3532  0028B0  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  3533  0028B6  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  3534                           
  3535                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3536  0028BC  B83F               	btfsc	_flags,4,c
  3537  0028BE  D00D               	goto	l6150
  3538  0028C0  0100               	movlb	0	; () banked
  3539  0028C2  51B1               	movf	efgtoa@d& (0+255),w,b
  3540  0028C4  11B2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3541  0028C6  A4D8               	btfss	status,2,c
  3542  0028C8  D008               	goto	l6150
  3543                           
  3544                           ; BSR set to: 0
  3545  0028CA  0E67               	movlw	103
  3546  0028CC  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3547  0028CE  B4D8               	btfsc	status,2,c
  3548                           
  3549                           ; BSR set to: 0
  3550  0028D0  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3551  0028D2  D003               	goto	l6150
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  3555  0028D4  4BA9               	infsnz	efgtoa@t& (0+255),f,b
  3556  0028D6  2BAA               	incf	(efgtoa@t+1)& (0+255),f,b
  3557                           
  3558                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  3559  0028D8  D03A               	goto	l6178
  3560  0028DA                     l6150:
  3561                           
  3562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  3563  0028DA  0100               	movlb	0	; () banked
  3564  0028DC  51AB               	movf	efgtoa@pp& (0+255),w,b
  3565  0028DE  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3566  0028E0  B4D8               	btfsc	status,2,c
  3567                           
  3568                           ; BSR set to: 0
  3569  0028E2  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3570  0028E4  D022               	goto	l6170
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  3574  0028E6  0E34               	movlw	low _dbuf
  3575  0028E8  25CB               	addwf	efgtoa@n& (0+255),w,b
  3576  0028EA  6ED9               	movwf	fsr2l,c
  3577  0028EC  0E01               	movlw	high _dbuf
  3578  0028EE  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3579  0028F0  6EDA               	movwf	fsr2h,c
  3580  0028F2  0E2E               	movlw	46
  3581  0028F4  6EDF               	movwf	indf2,c
  3582                           
  3583                           ; BSR set to: 0
  3584  0028F6  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3585  0028F8  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  3589  0028FA  07B8               	decf	efgtoa@w& (0+255),f,b
  3590  0028FC  A0D8               	btfss	status,0,c
  3591  0028FE  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  3595  002900  0E00               	movlw	0
  3596  002902  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  3597  002904  0E01               	movlw	1
  3598  002906  6FAB               	movwf	efgtoa@pp& (0+255),b
  3599  002908  D010               	goto	l6170
  3600  00290A                     l6162:
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  3604  00290A  0E34               	movlw	low _dbuf
  3605  00290C  25CB               	addwf	efgtoa@n& (0+255),w,b
  3606  00290E  6ED9               	movwf	fsr2l,c
  3607  002910  0E01               	movlw	high _dbuf
  3608  002912  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3609  002914  6EDA               	movwf	fsr2h,c
  3610  002916  0E30               	movlw	48
  3611  002918  6EDF               	movwf	indf2,c
  3612                           
  3613                           ; BSR set to: 0
  3614  00291A  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3615  00291C  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  3619  00291E  07B8               	decf	efgtoa@w& (0+255),f,b
  3620  002920  A0D8               	btfss	status,0,c
  3621  002922  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  3625  002924  07A9               	decf	efgtoa@t& (0+255),f,b
  3626  002926  A0D8               	btfss	status,0,c
  3627  002928  07AA               	decf	(efgtoa@t+1)& (0+255),f,b
  3628  00292A                     l6170:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  3632  00292A  51A9               	movf	efgtoa@t& (0+255),w,b
  3633  00292C  11AA               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3634  00292E  A4D8               	btfss	status,2,c
  3635  002930  D7EC               	goto	l6162
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  3639  002932  0E34               	movlw	low _dbuf
  3640  002934  25CB               	addwf	efgtoa@n& (0+255),w,b
  3641  002936  6ED9               	movwf	fsr2l,c
  3642  002938  0E01               	movlw	high _dbuf
  3643  00293A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3644  00293C  6EDA               	movwf	fsr2h,c
  3645  00293E  51B1               	movf	efgtoa@d& (0+255),w,b
  3646  002940  0F30               	addlw	48
  3647  002942  6EDF               	movwf	indf2,c
  3648                           
  3649                           ; BSR set to: 0
  3650  002944  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3651  002946  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  3655  002948  07B8               	decf	efgtoa@w& (0+255),f,b
  3656  00294A  A0D8               	btfss	status,0,c
  3657  00294C  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3658  00294E                     l6178:
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  3662  00294E  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  3663  002954  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  3664  00295A  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  3665  002960  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  3666  002966  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  3667  00296C  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  3668  002972  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  3669  002978  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  3670  00297E  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  3671  002984  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  3672  00298A  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  3673  002990  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  3674  002996  ECF6  F015         	call	___flmul	;wreg free
  3675  00299A  0060  F180  F07D   	movff	?___flmul,___flsub@a
  3676  0029A0  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  3677  0029A6  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  3678  0029AC  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  3679  0029B2  EC33  F027         	call	___flsub	;wreg free
  3680  0029B6  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  3681  0029BC  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  3682  0029C2  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  3683  0029C8  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  3684                           
  3685                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  3686  0029CE  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3687  0029D4  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3688  0029DA  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3689  0029E0  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3690  0029E6  0E00               	movlw	0
  3691  0029E8  0100               	movlb	0	; () banked
  3692  0029EA  6F64               	movwf	___fldiv@a& (0+255),b
  3693  0029EC  0E00               	movlw	0
  3694  0029EE  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3695  0029F0  0E20               	movlw	32
  3696  0029F2  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3697  0029F4  0E41               	movlw	65
  3698  0029F6  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3699  0029F8  EC19  F01D         	call	___fldiv	;wreg free
  3700  0029FC  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3701  002A02  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3702  002A08  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3703  002A0E  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3704                           
  3705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  3706  002A14  0100               	movlb	0	; () banked
  3707  002A16  07AF               	decf	efgtoa@ne& (0+255),f,b
  3708  002A18  A0D8               	btfss	status,0,c
  3709  002A1A  07B0               	decf	(efgtoa@ne+1)& (0+255),f,b
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  3713  002A1C  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  3714  002A1E  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  3715  002A20                     l6186:
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3719  002A20  51AD               	movf	efgtoa@m& (0+255),w,b
  3720  002A22  5DC3               	subwf	efgtoa@i& (0+255),w,b
  3721  002A24  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  3722  002A26  0A80               	xorlw	128
  3723  002A28  6F94               	movwf	??_efgtoa& (0+255),b
  3724  002A2A  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  3725  002A2C  0A80               	xorlw	128
  3726  002A2E  5994               	subwfb	??_efgtoa& (0+255),w,b
  3727  002A30  B0D8               	btfsc	status,0,c
  3728  002A32  D008               	goto	u8030
  3729                           
  3730                           ; BSR set to: 0
  3731  002A34  BFCC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3732  002A36  D6FA               	goto	l6138
  3733  002A38  51CC               	movf	(efgtoa@n+1)& (0+255),w,b
  3734  002A3A  E104               	bnz	u8030
  3735  002A3C  0E4B               	movlw	75
  3736  002A3E  5DCB               	subwf	efgtoa@n& (0+255),w,b
  3737  002A40  A0D8               	btfss	status,0,c
  3738  002A42  D6F4               	goto	l6138
  3739  002A44                     u8030:
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  3743  002A44  51AB               	movf	efgtoa@pp& (0+255),w,b
  3744  002A46  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3745  002A48  B4D8               	btfsc	status,2,c
  3746                           
  3747                           ; BSR set to: 0
  3748  002A4A  A83F               	btfss	_flags,4,c
  3749  002A4C  D00A               	goto	l6198
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  3753  002A4E  0E34               	movlw	low _dbuf
  3754  002A50  25CB               	addwf	efgtoa@n& (0+255),w,b
  3755  002A52  6ED9               	movwf	fsr2l,c
  3756  002A54  0E01               	movlw	high _dbuf
  3757  002A56  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3758  002A58  6EDA               	movwf	fsr2h,c
  3759  002A5A  0E2E               	movlw	46
  3760  002A5C  6EDF               	movwf	indf2,c
  3761                           
  3762                           ; BSR set to: 0
  3763  002A5E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3764  002A60  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3765  002A62                     l6198:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  3769  002A62  0E34               	movlw	low _dbuf
  3770  002A64  25CB               	addwf	efgtoa@n& (0+255),w,b
  3771  002A66  6ED9               	movwf	fsr2l,c
  3772  002A68  0E01               	movlw	high _dbuf
  3773  002A6A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3774  002A6C  6EDA               	movwf	fsr2h,c
  3775  002A6E  0E00               	movlw	0
  3776  002A70  6EDF               	movwf	indf2,c
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  3780  002A72  0E65               	movlw	101
  3781  002A74  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3782  002A76  A4D8               	btfss	status,2,c
  3783  002A78  EFE9  F010         	goto	l6010
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  3787  002A7C  0E00               	movlw	0
  3788  002A7E  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3789  002A80  0E4F               	movlw	79
  3790  002A82  6FC3               	movwf	efgtoa@i& (0+255),b
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  3794  002A84  0E34               	movlw	low _dbuf
  3795  002A86  25C3               	addwf	efgtoa@i& (0+255),w,b
  3796  002A88  6ED9               	movwf	fsr2l,c
  3797  002A8A  0E01               	movlw	high _dbuf
  3798  002A8C  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3799  002A8E  6EDA               	movwf	fsr2h,c
  3800  002A90  0E00               	movlw	0
  3801  002A92  6EDF               	movwf	indf2,c
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  3805  002A94  0E00               	movlw	0
  3806  002A96  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3807  002A98  0E00               	movlw	0
  3808  002A9A  6FB3               	movwf	efgtoa@sign& (0+255),b
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  3812  002A9C  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3813  002A9E  D008               	goto	l6214
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  3817  002AA0  0E00               	movlw	0
  3818  002AA2  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3819  002AA4  0E01               	movlw	1
  3820  002AA6  6FB3               	movwf	efgtoa@sign& (0+255),b
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  3824  002AA8  6DC9               	negf	efgtoa@e& (0+255),b
  3825  002AAA  1FCA               	comf	(efgtoa@e+1)& (0+255),f,b
  3826  002AAC  B0D8               	btfsc	status,0,c
  3827  002AAE  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  3828  002AB0                     l6214:
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  3832  002AB0  0E00               	movlw	0
  3833  002AB2  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  3834  002AB4  0E02               	movlw	2
  3835  002AB6  6FB5               	movwf	efgtoa@p& (0+255),b
  3836                           
  3837                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3838  002AB8  D032               	goto	l6226
  3839  002ABA                     l6216:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  3843  002ABA  07C3               	decf	efgtoa@i& (0+255),f,b
  3844  002ABC  A0D8               	btfss	status,0,c
  3845  002ABE  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  3849  002AC0  0E34               	movlw	low _dbuf
  3850  002AC2  25C3               	addwf	efgtoa@i& (0+255),w,b
  3851  002AC4  6ED9               	movwf	fsr2l,c
  3852  002AC6  0E01               	movlw	high _dbuf
  3853  002AC8  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3854  002ACA  6EDA               	movwf	fsr2h,c
  3855  002ACC  0060  F324  F060   	movff	efgtoa@e,___awmod@dividend
  3856  002AD2  0060  F328  F061   	movff	efgtoa@e+1,___awmod@dividend+1
  3857  002AD8  0E00               	movlw	0
  3858  002ADA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3859  002ADC  0E0A               	movlw	10
  3860  002ADE  6F62               	movwf	___awmod@divisor& (0+255),b
  3861  002AE0  EC57  F026         	call	___awmod	;wreg free
  3862  002AE4  0100               	movlb	0	; () banked
  3863  002AE6  5160               	movf	?___awmod& (0+255),w,b
  3864  002AE8  0F30               	addlw	48
  3865  002AEA  6EDF               	movwf	indf2,c
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  3869  002AEC  0060  F324  F060   	movff	efgtoa@e,___awdiv@dividend
  3870  002AF2  0060  F328  F061   	movff	efgtoa@e+1,___awdiv@dividend+1
  3871  002AF8  0E00               	movlw	0
  3872  002AFA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3873  002AFC  0E0A               	movlw	10
  3874  002AFE  6F62               	movwf	___awdiv@divisor& (0+255),b
  3875  002B00  EC8E  F025         	call	___awdiv	;wreg free
  3876  002B04  0060  F180  F0C9   	movff	?___awdiv,efgtoa@e
  3877  002B0A  0060  F184  F0CA   	movff	?___awdiv+1,efgtoa@e+1
  3878                           
  3879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  3880  002B10  0100               	movlb	0	; () banked
  3881  002B12  07B5               	decf	efgtoa@p& (0+255),f,b
  3882  002B14  A0D8               	btfss	status,0,c
  3883  002B16  07B6               	decf	(efgtoa@p+1)& (0+255),f,b
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  3887  002B18  07B8               	decf	efgtoa@w& (0+255),f,b
  3888  002B1A  A0D8               	btfss	status,0,c
  3889  002B1C  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3890  002B1E                     l6226:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3894  002B1E  51C9               	movf	efgtoa@e& (0+255),w,b
  3895  002B20  11CA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3896  002B22  A4D8               	btfss	status,2,c
  3897  002B24  D7CA               	goto	l6216
  3898                           
  3899                           ; BSR set to: 0
  3900  002B26  BFB6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3901  002B28  D005               	goto	u8090
  3902  002B2A  51B6               	movf	(efgtoa@p+1)& (0+255),w,b
  3903  002B2C  E1C6               	bnz	l6216
  3904  002B2E  05B5               	decf	efgtoa@p& (0+255),w,b
  3905  002B30  B0D8               	btfsc	status,0,c
  3906  002B32  D7C3               	goto	l6216
  3907  002B34                     u8090:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  3911  002B34  07C3               	decf	efgtoa@i& (0+255),f,b
  3912  002B36  A0D8               	btfss	status,0,c
  3913  002B38  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  3917  002B3A  51B3               	movf	efgtoa@sign& (0+255),w,b
  3918  002B3C  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3919  002B3E  A4D8               	btfss	status,2,c
  3920  002B40  D004               	goto	l6236
  3921                           
  3922                           ; BSR set to: 0
  3923  002B42  0E00               	movlw	0
  3924  002B44  6FA4               	movwf	(_efgtoa$1664+1)& (0+255),b
  3925  002B46  0E2B               	movlw	43
  3926  002B48  D003               	goto	L3
  3927  002B4A                     l6236:
  3928                           
  3929                           ; BSR set to: 0
  3930  002B4A  0E00               	movlw	0
  3931  002B4C  6FA4               	movwf	(_efgtoa$1664+1)& (0+255),b
  3932  002B4E  0E2D               	movlw	45
  3933  002B50                     L3:
  3934  002B50  6FA3               	movwf	_efgtoa$1664& (0+255),b
  3935                           
  3936                           ; BSR set to: 0
  3937  002B52  0E34               	movlw	low _dbuf
  3938  002B54  25C3               	addwf	efgtoa@i& (0+255),w,b
  3939  002B56  6ED9               	movwf	fsr2l,c
  3940  002B58  0E01               	movlw	high _dbuf
  3941  002B5A  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3942  002B5C  6EDA               	movwf	fsr2h,c
  3943  002B5E  0060  F28F  FFDF   	movff	_efgtoa$1664,indf2
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  3947  002B64  07B8               	decf	efgtoa@w& (0+255),f,b
  3948  002B66  A0D8               	btfss	status,0,c
  3949  002B68  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3953  002B6A  07C3               	decf	efgtoa@i& (0+255),f,b
  3954  002B6C  A0D8               	btfss	status,0,c
  3955  002B6E  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3956                           
  3957                           ; BSR set to: 0
  3958  002B70  0EBF               	movlw	191
  3959  002B72  6F94               	movwf	??_efgtoa& (0+255),b
  3960  002B74  0EFF               	movlw	255
  3961  002B76  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  3962  002B78  5193               	movf	efgtoa@c& (0+255),w,b
  3963  002B7A  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  3964  002B7C  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  3965  002B7E  5194               	movf	??_efgtoa& (0+255),w,b
  3966  002B80  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  3967  002B82  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  3968  002B84  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3969  002B86  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  3970  002B88  E106               	bnz	u8110
  3971  002B8A  0E1A               	movlw	26
  3972  002B8C  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  3973  002B8E  B0D8               	btfsc	status,0,c
  3974  002B90  D002               	goto	u8110
  3975  002B92  0E01               	movlw	1
  3976  002B94  D001               	goto	u8120
  3977  002B96                     u8110:
  3978  002B96  0E00               	movlw	0
  3979  002B98                     u8120:
  3980  002B98  6FA7               	movwf	_efgtoa$1666& (0+255),b
  3981  002B9A  6BA8               	clrf	(_efgtoa$1666+1)& (0+255),b
  3982                           
  3983                           ; BSR set to: 0
  3984  002B9C  51A7               	movf	_efgtoa$1666& (0+255),w,b
  3985  002B9E  11A8               	iorwf	(_efgtoa$1666+1)& (0+255),w,b
  3986  002BA0  A4D8               	btfss	status,2,c
  3987  002BA2  D004               	goto	l6252
  3988                           
  3989                           ; BSR set to: 0
  3990  002BA4  0E00               	movlw	0
  3991  002BA6  6FA6               	movwf	(_efgtoa$1665+1)& (0+255),b
  3992  002BA8  0E65               	movlw	101
  3993  002BAA  D003               	goto	L4
  3994  002BAC                     l6252:
  3995                           
  3996                           ; BSR set to: 0
  3997  002BAC  0E00               	movlw	0
  3998  002BAE  6FA6               	movwf	(_efgtoa$1665+1)& (0+255),b
  3999  002BB0  0E45               	movlw	69
  4000  002BB2                     L4:
  4001  002BB2  6FA5               	movwf	_efgtoa$1665& (0+255),b
  4002                           
  4003                           ; BSR set to: 0
  4004  002BB4  0E34               	movlw	low _dbuf
  4005  002BB6  25C3               	addwf	efgtoa@i& (0+255),w,b
  4006  002BB8  6ED9               	movwf	fsr2l,c
  4007  002BBA  0E01               	movlw	high _dbuf
  4008  002BBC  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4009  002BBE  6EDA               	movwf	fsr2h,c
  4010  002BC0  0060  F297  FFDF   	movff	_efgtoa$1665,indf2
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  4014  002BC6  07B8               	decf	efgtoa@w& (0+255),f,b
  4015  002BC8  A0D8               	btfss	status,0,c
  4016  002BCA  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  4020  002BCC  0E34               	movlw	low _dbuf
  4021  002BCE  25CB               	addwf	efgtoa@n& (0+255),w,b
  4022  002BD0  6F60               	movwf	strcpy@dest& (0+255),b
  4023  002BD2  0E01               	movlw	high _dbuf
  4024  002BD4  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4025  002BD6  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4026  002BD8  0E34               	movlw	low _dbuf
  4027  002BDA  25C3               	addwf	efgtoa@i& (0+255),w,b
  4028  002BDC  6F62               	movwf	strcpy@src& (0+255),b
  4029  002BDE  0E01               	movlw	high _dbuf
  4030  002BE0  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4031  002BE2  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4032  002BE4  ECC9  F026         	call	_strcpy	;wreg free
  4033  002BE8  EFE9  F010         	goto	l6010
  4034  002BEC                     __end_of_efgtoa:
  4035                           	opt callstack 0
  4036                           
  4037 ;; *************** function _tolower *****************
  4038 ;; Defined at:
  4039 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  c               2    6[BANK0 ] int 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  2    6[BANK0 ] int 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4053 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4055 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4056 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4057 ;;Total ram usage:        8 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    3
  4060 ;; This function calls:
  4061 ;;		_isupper
  4062 ;; This function is called by:
  4063 ;;		_efgtoa
  4064 ;;		_vfpfcnvrt
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text8
  4069  004F20                     __ptext8:
  4070                           	opt callstack 0
  4071  004F20                     _tolower:
  4072                           	opt callstack 23
  4073                           
  4074                           ;incstack = 0
  4075  004F20  0EBF               	movlw	191
  4076  004F22  0100               	movlb	0	; () banked
  4077  004F24  6F68               	movwf	??_tolower& (0+255),b
  4078  004F26  0EFF               	movlw	255
  4079  004F28  6F69               	movwf	(??_tolower+1)& (0+255),b
  4080  004F2A  0060  F198  F06A   	movff	tolower@c,??_tolower+2
  4081  004F30  0060  F19C  F06B   	movff	tolower@c+1,??_tolower+3
  4082  004F36  5168               	movf	??_tolower& (0+255),w,b
  4083  004F38  276A               	addwf	(??_tolower+2)& (0+255),f,b
  4084  004F3A  5169               	movf	(??_tolower+1)& (0+255),w,b
  4085  004F3C  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  4086  004F3E  516B               	movf	(??_tolower+3)& (0+255),w,b
  4087  004F40  E106               	bnz	u6940
  4088  004F42  0E1A               	movlw	26
  4089  004F44  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  4090  004F46  B0D8               	btfsc	status,0,c
  4091  004F48  D002               	goto	u6940
  4092  004F4A  0E01               	movlw	1
  4093  004F4C  D001               	goto	u6950
  4094  004F4E                     u6940:
  4095  004F4E  0E00               	movlw	0
  4096  004F50                     u6950:
  4097  004F50  6F6C               	movwf	_tolower$2238& (0+255),b
  4098  004F52  6B6D               	clrf	(_tolower$2238+1)& (0+255),b
  4099                           
  4100                           ; BSR set to: 0
  4101  004F54  516C               	movf	_tolower$2238& (0+255),w,b
  4102  004F56  116D               	iorwf	(_tolower$2238+1)& (0+255),w,b
  4103  004F58  B4D8               	btfsc	status,2,c
  4104  004F5A  D006               	goto	l1384
  4105                           
  4106                           ; BSR set to: 0
  4107  004F5C  0E20               	movlw	32
  4108  004F5E  1166               	iorwf	tolower@c& (0+255),w,b
  4109  004F60  6F66               	movwf	?_tolower& (0+255),b
  4110  004F62  5167               	movf	(tolower@c+1)& (0+255),w,b
  4111  004F64  6F67               	movwf	(?_tolower+1)& (0+255),b
  4112  004F66  0012               	return	
  4113  004F68                     l1384:
  4114                           
  4115                           ; BSR set to: 0
  4116  004F68  0060  F198  F066   	movff	tolower@c,?_tolower
  4117  004F6E  0060  F19C  F067   	movff	tolower@c+1,?_tolower+1
  4118                           
  4119                           ; BSR set to: 0
  4120  004F74  0012               	return		;funcret
  4121  004F76                     __end_of_tolower:
  4122                           	opt callstack 0
  4123                           
  4124 ;; *************** function _isupper *****************
  4125 ;; Defined at:
  4126 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  c               2    0[BANK0 ] int 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  2    0[BANK0 ] int 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4142 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4143 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4144 ;;Total ram usage:        6 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    2
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_efgtoa
  4151 ;;		_vfpfcnvrt
  4152 ;;		_tolower
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text9
  4157  005130                     __ptext9:
  4158                           	opt callstack 0
  4159  005130                     _isupper:
  4160                           	opt callstack 23
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;incstack = 0
  4164  005130  0EBF               	movlw	191
  4165  005132  0100               	movlb	0	; () banked
  4166  005134  6F62               	movwf	??_isupper& (0+255),b
  4167  005136  0EFF               	movlw	255
  4168  005138  6F63               	movwf	(??_isupper+1)& (0+255),b
  4169  00513A  0060  F180  F064   	movff	isupper@c,??_isupper+2
  4170  005140  0060  F184  F065   	movff	isupper@c+1,??_isupper+3
  4171  005146  5162               	movf	??_isupper& (0+255),w,b
  4172  005148  2764               	addwf	(??_isupper+2)& (0+255),f,b
  4173  00514A  5163               	movf	(??_isupper+1)& (0+255),w,b
  4174  00514C  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  4175  00514E  5165               	movf	(??_isupper+3)& (0+255),w,b
  4176  005150  E106               	bnz	u6400
  4177  005152  0E1A               	movlw	26
  4178  005154  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  4179  005156  B0D8               	btfsc	status,0,c
  4180  005158  D002               	goto	u6400
  4181  00515A  0E01               	movlw	1
  4182  00515C  D001               	goto	u6410
  4183  00515E                     u6400:
  4184  00515E  0E00               	movlw	0
  4185  005160                     u6410:
  4186  005160  6F60               	movwf	?_isupper& (0+255),b
  4187  005162  6B61               	clrf	(?_isupper+1)& (0+255),b
  4188                           
  4189                           ; BSR set to: 0
  4190  005164  0012               	return		;funcret
  4191  005166                     __end_of_isupper:
  4192                           	opt callstack 0
  4193                           
  4194 ;; *************** function _strcpy *****************
  4195 ;; Defined at:
  4196 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  4199 ;;		 -> dbuf(80), 
  4200 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  4201 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4202 ;;		 -> dbuf(80), 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  d               2    8[BANK0 ] PTR unsigned char 
  4205 ;;		 -> dbuf(80), 
  4206 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  4207 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4208 ;;		 -> dbuf(80), 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  2    0[BANK0 ] PTR unsigned char 
  4211 ;; Registers used:
  4212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4218 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4219 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4220 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4221 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4222 ;;Total ram usage:       10 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    2
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_efgtoa
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text10
  4233  004D92                     __ptext10:
  4234                           	opt callstack 0
  4235  004D92                     _strcpy:
  4236                           	opt callstack 23
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;incstack = 0
  4240  004D92  0060  F188  F066   	movff	strcpy@src,strcpy@s
  4241  004D98  0060  F18C  F067   	movff	strcpy@src+1,strcpy@s+1
  4242  004D9E  0060  F180  F068   	movff	strcpy@dest,strcpy@d
  4243  004DA4  0060  F184  F069   	movff	strcpy@dest+1,strcpy@d+1
  4244  004DAA                     l5532:
  4245  004DAA  0100               	movlb	0	; () banked
  4246  004DAC  5166               	movf	strcpy@s& (0+255),w,b
  4247  004DAE  6F64               	movwf	??_strcpy& (0+255),b
  4248  004DB0  5167               	movf	(strcpy@s+1)& (0+255),w,b
  4249  004DB2  6F65               	movwf	(??_strcpy+1)& (0+255),b
  4250  004DB4  4B66               	infsnz	strcpy@s& (0+255),f,b
  4251  004DB6  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  4252  004DB8  0060  F193  FFF6   	movff	??_strcpy,tblptrl
  4253  004DBE  0060  F197  FFF7   	movff	??_strcpy+1,tblptrh
  4254  004DC4  0E00               	movlw	low (__smallconst shr (0+16))
  4255  004DC6  6EF8               	movwf	tblptru,c
  4256  004DC8  0060  F1A3  FFD9   	movff	strcpy@d,fsr2l
  4257  004DCE  0060  F1A7  FFDA   	movff	strcpy@d+1,fsr2h
  4258  004DD4  4B68               	infsnz	strcpy@d& (0+255),f,b
  4259  004DD6  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  4260  004DD8  0E1F               	movlw	(high __ramtop+-1)
  4261  004DDA  64F7               	cpfsgt	tblptrh,c
  4262  004DDC  D003               	bra	u6927
  4263  004DDE  0008               	tblrd		*
  4264  004DE0  50F5               	movf	tablat,w,c
  4265  004DE2  D007               	bra	u6920
  4266  004DE4                     u6927:
  4267  004DE4  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4268  004DEA  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4269  004DF0  50E7               	movf	indf1,w,c
  4270  004DF2                     u6920:
  4271  004DF2  6EDF               	movwf	indf2,c
  4272  004DF4  50DF               	movf	indf2,w,c
  4273  004DF6  B4D8               	btfsc	status,2,c
  4274  004DF8  0012               	return	
  4275  004DFA  D7D7               	goto	l5532
  4276  004DFC                     __end_of_strcpy:
  4277                           	opt callstack 0
  4278                           
  4279 ;; *************** function _pad *****************
  4280 ;; Defined at:
  4281 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  4284 ;;		 -> sprintf@f(6), 
  4285 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  4286 ;;		 -> dbuf(80), 
  4287 ;;  p               2   20[BANK0 ] int 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  w               2   25[BANK0 ] int 
  4290 ;;  i               2   23[BANK0 ] int 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  2   16[BANK0 ] int 
  4293 ;; Registers used:
  4294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4300 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4301 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4302 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4303 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4304 ;;Total ram usage:       11 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    5
  4307 ;; This function calls:
  4308 ;;		_fputc
  4309 ;;		_fputs
  4310 ;;		_strlen
  4311 ;; This function is called by:
  4312 ;;		_efgtoa
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text11
  4317  0047E6                     __ptext11:
  4318                           	opt callstack 0
  4319  0047E6                     _pad:
  4320                           	opt callstack 20
  4321                           
  4322                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  4323                           
  4324                           ;incstack = 0
  4325  0047E6  A03F               	btfss	_flags,0,c
  4326  0047E8  D00E               	goto	l5490
  4327                           
  4328                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  4329  0047EA  0060  F1C8  F069   	movff	pad@buf,fputs@s
  4330  0047F0  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
  4331  0047F6  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
  4332  0047FC  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
  4333  004802  EC03  F028         	call	_fputs	;wreg free
  4334  004806                     l5490:
  4335                           
  4336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4337  004806  0100               	movlb	0	; () banked
  4338  004808  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  4339  00480A  D007               	goto	l5494
  4340                           
  4341                           ; BSR set to: 0
  4342  00480C  0060  F1D0  F079   	movff	pad@p,pad@w
  4343  004812  0060  F1D4  F07A   	movff	pad@p+1,pad@w+1
  4344  004818  D004               	goto	l507
  4345  00481A                     l5494:
  4346                           
  4347                           ; BSR set to: 0
  4348  00481A  0E00               	movlw	0
  4349  00481C  6F7A               	movwf	(pad@w+1)& (0+255),b
  4350  00481E  0E00               	movlw	0
  4351  004820  6F79               	movwf	pad@w& (0+255),b
  4352  004822                     l507:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4356  004822  0E00               	movlw	0
  4357  004824  6F78               	movwf	(pad@i+1)& (0+255),b
  4358  004826  0E00               	movlw	0
  4359  004828  6F77               	movwf	pad@i& (0+255),b
  4360                           
  4361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4362  00482A  D00F               	goto	l5500
  4363  00482C                     l5496:
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4367  00482C  0E00               	movlw	0
  4368  00482E  6F61               	movwf	(fputc@c+1)& (0+255),b
  4369  004830  0E20               	movlw	32
  4370  004832  6F60               	movwf	fputc@c& (0+255),b
  4371  004834  0060  F1C0  F062   	movff	pad@fp,fputc@fp
  4372  00483A  0060  F1C4  F063   	movff	pad@fp+1,fputc@fp+1
  4373  004840  EC4F  F024         	call	_fputc	;wreg free
  4374                           
  4375                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4376  004844  0100               	movlb	0	; () banked
  4377  004846  4B77               	infsnz	pad@i& (0+255),f,b
  4378  004848  2B78               	incf	(pad@i+1)& (0+255),f,b
  4379  00484A                     l5500:
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4383  00484A  5179               	movf	pad@w& (0+255),w,b
  4384  00484C  5D77               	subwf	pad@i& (0+255),w,b
  4385  00484E  5178               	movf	(pad@i+1)& (0+255),w,b
  4386  004850  0A80               	xorlw	128
  4387  004852  6F76               	movwf	??_pad& (0+255),b
  4388  004854  517A               	movf	(pad@w+1)& (0+255),w,b
  4389  004856  0A80               	xorlw	128
  4390  004858  5976               	subwfb	??_pad& (0+255),w,b
  4391  00485A  A0D8               	btfss	status,0,c
  4392  00485C  D7E7               	goto	l5496
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4396  00485E  B03F               	btfsc	_flags,0,c
  4397  004860  D00E               	goto	l5504
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4401  004862  0060  F1C8  F069   	movff	pad@buf,fputs@s
  4402  004868  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
  4403  00486E  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
  4404  004874  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
  4405  00487A  EC03  F028         	call	_fputs	;wreg free
  4406  00487E                     l5504:
  4407                           
  4408                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  4409  00487E  0060  F1C8  F060   	movff	pad@buf,strlen@s
  4410  004884  0060  F1CC  F061   	movff	pad@buf+1,strlen@s+1
  4411  00488A  ECB3  F028         	call	_strlen	;wreg free
  4412  00488E  0100               	movlb	0	; () banked
  4413  004890  5179               	movf	pad@w& (0+255),w,b
  4414  004892  2560               	addwf	?_strlen& (0+255),w,b
  4415  004894  6F70               	movwf	?_pad& (0+255),b
  4416  004896  517A               	movf	(pad@w+1)& (0+255),w,b
  4417  004898  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  4418  00489A  6F71               	movwf	(?_pad+1)& (0+255),b
  4419                           
  4420                           ; BSR set to: 0
  4421  00489C  0012               	return		;funcret
  4422  00489E                     __end_of_pad:
  4423                           	opt callstack 0
  4424                           
  4425 ;; *************** function _strlen *****************
  4426 ;; Defined at:
  4427 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4430 ;;		 -> dbuf(80), 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  4433 ;;		 -> dbuf(80), 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  2    0[BANK0 ] unsigned int 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4443 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4444 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4446 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4447 ;;Total ram usage:        4 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    2
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_pad
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text12
  4458  005166                     __ptext12:
  4459                           	opt callstack 0
  4460  005166                     _strlen:
  4461                           	opt callstack 22
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;incstack = 0
  4465  005166  0060  F180  F062   	movff	strlen@s,strlen@a
  4466  00516C  0060  F184  F063   	movff	strlen@s+1,strlen@a+1
  4467  005172  D003               	goto	l5274
  4468  005174                     l5272:
  4469  005174  0100               	movlb	0	; () banked
  4470  005176  4B60               	infsnz	strlen@s& (0+255),f,b
  4471  005178  2B61               	incf	(strlen@s+1)& (0+255),f,b
  4472  00517A                     l5274:
  4473  00517A  0060  F183  FFD9   	movff	strlen@s,fsr2l
  4474  005180  0060  F187  FFDA   	movff	strlen@s+1,fsr2h
  4475  005186  50DF               	movf	indf2,w,c
  4476  005188  A4D8               	btfss	status,2,c
  4477  00518A  D7F4               	goto	l5272
  4478  00518C  0100               	movlb	0	; () banked
  4479  00518E  5162               	movf	strlen@a& (0+255),w,b
  4480  005190  5D60               	subwf	strlen@s& (0+255),w,b
  4481  005192  6F60               	movwf	?_strlen& (0+255),b
  4482  005194  5163               	movf	(strlen@a+1)& (0+255),w,b
  4483  005196  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  4484  005198  6F61               	movwf	(?_strlen+1)& (0+255),b
  4485                           
  4486                           ; BSR set to: 0
  4487  00519A  0012               	return		;funcret
  4488  00519C                     __end_of_strlen:
  4489                           	opt callstack 0
  4490                           
  4491 ;; *************** function _fputs *****************
  4492 ;; Defined at:
  4493 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4496 ;;		 -> dbuf(80), 
  4497 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4498 ;;		 -> sprintf@f(6), 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  i               2   14[BANK0 ] int 
  4501 ;;  c               1   13[BANK0 ] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  2    9[BANK0 ] int 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4511 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4512 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4514 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4515 ;;Total ram usage:        7 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    4
  4518 ;; This function calls:
  4519 ;;		_fputc
  4520 ;; This function is called by:
  4521 ;;		_pad
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text13
  4526  005006                     __ptext13:
  4527                           	opt callstack 0
  4528  005006                     _fputs:
  4529                           	opt callstack 20
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;incstack = 0
  4533  005006  0E00               	movlw	0
  4534  005008  0100               	movlb	0	; () banked
  4535  00500A  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4536  00500C  0E00               	movlw	0
  4537  00500E  6F6E               	movwf	fputs@i& (0+255),b
  4538  005010  D00F               	goto	l5268
  4539  005012                     l5264:
  4540                           
  4541                           ; BSR set to: 0
  4542  005012  0060  F1B4  F060   	movff	fputs@c,fputc@c
  4543  005018  6B61               	clrf	(fputc@c+1)& (0+255),b
  4544  00501A  0060  F1AC  F062   	movff	fputs@fp,fputc@fp
  4545  005020  0060  F1B0  F063   	movff	fputs@fp+1,fputc@fp+1
  4546  005026  EC4F  F024         	call	_fputc	;wreg free
  4547  00502A  0100               	movlb	0	; () banked
  4548  00502C  4B6E               	infsnz	fputs@i& (0+255),f,b
  4549  00502E  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4550  005030                     l5268:
  4551                           
  4552                           ; BSR set to: 0
  4553  005030  516E               	movf	fputs@i& (0+255),w,b
  4554  005032  2569               	addwf	fputs@s& (0+255),w,b
  4555  005034  6ED9               	movwf	fsr2l,c
  4556  005036  516F               	movf	(fputs@i+1)& (0+255),w,b
  4557  005038  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4558  00503A  6EDA               	movwf	fsr2h,c
  4559  00503C  50DF               	movf	indf2,w,c
  4560  00503E  6F6D               	movwf	fputs@c& (0+255),b
  4561  005040  516D               	movf	fputs@c& (0+255),w,b
  4562  005042  B4D8               	btfsc	status,2,c
  4563  005044  0012               	return	
  4564  005046  D7E5               	goto	l5264
  4565  005048                     __end_of_fputs:
  4566                           	opt callstack 0
  4567                           
  4568 ;; *************** function _fputc *****************
  4569 ;; Defined at:
  4570 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  c               2    0[BANK0 ] int 
  4573 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4574 ;;		 -> sprintf@f(6), 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;		None
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  2    0[BANK0 ] int 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4586 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4588 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4589 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4590 ;;Total ram usage:        9 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    3
  4593 ;; This function calls:
  4594 ;;		_putch
  4595 ;; This function is called by:
  4596 ;;		_pad
  4597 ;;		_vfpfcnvrt
  4598 ;;		_fputs
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text14
  4603  00489E                     __ptext14:
  4604                           	opt callstack 0
  4605  00489E                     _fputc:
  4606                           	opt callstack 23
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;incstack = 0
  4610  00489E  0100               	movlb	0	; () banked
  4611  0048A0  5162               	movf	fputc@fp& (0+255),w,b
  4612  0048A2  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4613  0048A4  B4D8               	btfsc	status,2,c
  4614  0048A6  D004               	goto	u6350
  4615                           
  4616                           ; BSR set to: 0
  4617  0048A8  5162               	movf	fputc@fp& (0+255),w,b
  4618  0048AA  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4619  0048AC  A4D8               	btfss	status,2,c
  4620  0048AE  D004               	goto	l5254
  4621  0048B0                     u6350:
  4622                           
  4623                           ; BSR set to: 0
  4624  0048B0  5160               	movf	fputc@c& (0+255),w,b
  4625  0048B2  EC4F  F029         	call	_putch
  4626  0048B6  0012               	return	
  4627  0048B8                     l5254:
  4628                           
  4629                           ; BSR set to: 0
  4630  0048B8  EE20 F004          	lfsr	2,4
  4631  0048BC  5162               	movf	fputc@fp& (0+255),w,b
  4632  0048BE  26D9               	addwf	fsr2l,f,c
  4633  0048C0  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4634  0048C2  22DA               	addwfc	fsr2h,f,c
  4635  0048C4  50DE               	movf	postinc2,w,c
  4636  0048C6  10DE               	iorwf	postinc2,w,c
  4637  0048C8  B4D8               	btfsc	status,2,c
  4638  0048CA  D016               	goto	u6370
  4639                           
  4640                           ; BSR set to: 0
  4641  0048CC  EE20 F004          	lfsr	2,4
  4642  0048D0  5162               	movf	fputc@fp& (0+255),w,b
  4643  0048D2  26D9               	addwf	fsr2l,f,c
  4644  0048D4  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4645  0048D6  22DA               	addwfc	fsr2h,f,c
  4646  0048D8  EE10 F002          	lfsr	1,2
  4647  0048DC  5162               	movf	fputc@fp& (0+255),w,b
  4648  0048DE  26E1               	addwf	fsr1l,f,c
  4649  0048E0  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4650  0048E2  22E2               	addwfc	fsr1h,f,c
  4651  0048E4  50DE               	movf	postinc2,w,c
  4652  0048E6  5CE6               	subwf	postinc1,w,c
  4653  0048E8  50E6               	movf	postinc1,w,c
  4654  0048EA  0A80               	xorlw	128
  4655  0048EC  6F68               	movwf	(??_fputc+4)& (0+255),b
  4656  0048EE  50DE               	movf	postinc2,w,c
  4657  0048F0  0A80               	xorlw	128
  4658  0048F2  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4659  0048F4  B0D8               	btfsc	status,0,c
  4660  0048F6  0012               	return	
  4661  0048F8                     u6370:
  4662                           
  4663                           ; BSR set to: 0
  4664  0048F8  EE20 F002          	lfsr	2,2
  4665  0048FC  5162               	movf	fputc@fp& (0+255),w,b
  4666  0048FE  26D9               	addwf	fsr2l,f,c
  4667  004900  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4668  004902  22DA               	addwfc	fsr2h,f,c
  4669  004904  006F FF78  F064    	movff	postinc2,??_fputc
  4670  00490A  006F FF74  F065    	movff	postdec2,??_fputc+1
  4671  004910  0060  F18B  FFD9   	movff	fputc@fp,fsr2l
  4672  004916  0060  F18F  FFDA   	movff	fputc@fp+1,fsr2h
  4673  00491C  006F FF78  F066    	movff	postinc2,??_fputc+2
  4674  004922  006F FF74  F067    	movff	postdec2,??_fputc+3
  4675  004928  5164               	movf	??_fputc& (0+255),w,b
  4676  00492A  2566               	addwf	(??_fputc+2)& (0+255),w,b
  4677  00492C  6ED9               	movwf	fsr2l,c
  4678  00492E  5165               	movf	(??_fputc+1)& (0+255),w,b
  4679  004930  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  4680  004932  6EDA               	movwf	fsr2h,c
  4681  004934  0060  F183  FFDF   	movff	fputc@c,indf2
  4682  00493A  EE20 F002          	lfsr	2,2
  4683  00493E  5162               	movf	fputc@fp& (0+255),w,b
  4684  004940  26D9               	addwf	fsr2l,f,c
  4685  004942  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4686  004944  22DA               	addwfc	fsr2h,f,c
  4687  004946  2ADE               	incf	postinc2,f,c
  4688  004948  0E00               	movlw	0
  4689  00494A  22DD               	addwfc	postdec2,f,c
  4690  00494C  0012               	return		;funcret
  4691  00494E                     __end_of_fputc:
  4692                           	opt callstack 0
  4693                           
  4694 ;; *************** function _putch *****************
  4695 ;; Defined at:
  4696 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  c               1    wreg     unsigned char 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  c               1    0[COMRAM] unsigned char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		wreg
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4714 ;;Total ram usage:        0 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    2
  4717 ;; This function calls:
  4718 ;;		Nothing
  4719 ;; This function is called by:
  4720 ;;		_fputc
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text15
  4725  00529E                     __ptext15:
  4726                           	opt callstack 0
  4727  00529E                     _putch:
  4728                           	opt callstack 23
  4729                           
  4730                           ;incstack = 0
  4731  00529E  0012               	return		;funcret
  4732  0052A0                     __end_of_putch:
  4733                           	opt callstack 0
  4734                           
  4735 ;; *************** function _floorf *****************
  4736 ;; Defined at:
  4737 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  x               4   25[BANK0 ] float 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  u               4   41[BANK0 ] struct .
  4742 ;;  m               4   35[BANK0 ] unsigned long 
  4743 ;;  e               2   39[BANK0 ] int 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  4   25[BANK0 ] float 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2, status,0
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4753 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4754 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4755 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4756 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4757 ;;Total ram usage:       20 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    2
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_efgtoa
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text16
  4768  003CE0                     __ptext16:
  4769                           	opt callstack 0
  4770  003CE0                     _floorf:
  4771                           	opt callstack 23
  4772                           
  4773                           ;incstack = 0
  4774  003CE0  0060  F0B4  F089   	movff	floorf@F524,floorf@u
  4775  003CE6  0060  F0B8  F08A   	movff	floorf@F524+1,floorf@u+1
  4776  003CEC  0060  F0BC  F08B   	movff	floorf@F524+2,floorf@u+2
  4777  003CF2  0060  F0C0  F08C   	movff	floorf@F524+3,floorf@u+3
  4778  003CF8  0060  F1E4  F089   	movff	floorf@x,floorf@u
  4779  003CFE  0060  F1E8  F08A   	movff	floorf@x+1,floorf@u+1
  4780  003D04  0060  F1EC  F08B   	movff	floorf@x+2,floorf@u+2
  4781  003D0A  0060  F1F0  F08C   	movff	floorf@x+3,floorf@u+3
  4782  003D10  0E81               	movlw	129
  4783  003D12  0100               	movlb	0	; () banked
  4784  003D14  6F7D               	movwf	??_floorf& (0+255),b
  4785  003D16  0EFF               	movlw	255
  4786  003D18  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4787  003D1A  0060  F224  F07F   	movff	floorf@u,??_floorf+2
  4788  003D20  0060  F228  F080   	movff	floorf@u+1,??_floorf+3
  4789  003D26  0060  F22C  F081   	movff	floorf@u+2,??_floorf+4
  4790  003D2C  0060  F230  F082   	movff	floorf@u+3,??_floorf+5
  4791  003D32  0E18               	movlw	24
  4792  003D34  D005               	goto	u3850
  4793  003D36                     u3855:
  4794  003D36  90D8               	bcf	status,0,c
  4795  003D38  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  4796  003D3A  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4797  003D3C  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4798  003D3E  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4799  003D40                     u3850:
  4800  003D40  2EE8               	decfsz	wreg,f,c
  4801  003D42  D7F9               	goto	u3855
  4802  003D44  517F               	movf	(??_floorf+2)& (0+255),w,b
  4803  003D46  257D               	addwf	??_floorf& (0+255),w,b
  4804  003D48  6F87               	movwf	floorf@e& (0+255),b
  4805  003D4A  0E00               	movlw	0
  4806  003D4C  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  4807  003D4E  6F88               	movwf	(floorf@e+1)& (0+255),b
  4808  003D50  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4809  003D52  D013               	goto	l3642
  4810  003D54  5188               	movf	(floorf@e+1)& (0+255),w,b
  4811  003D56  E104               	bnz	u3860
  4812  003D58  0E17               	movlw	23
  4813  003D5A  5D87               	subwf	floorf@e& (0+255),w,b
  4814  003D5C  A0D8               	btfss	status,0,c
  4815  003D5E  D00D               	goto	l3642
  4816  003D60                     u3860:
  4817                           
  4818                           ; BSR set to: 0
  4819  003D60  0060  F1E4  F079   	movff	floorf@x,?_floorf
  4820  003D66  0060  F1E8  F07A   	movff	floorf@x+1,?_floorf+1
  4821  003D6C  0060  F1EC  F07B   	movff	floorf@x+2,?_floorf+2
  4822  003D72  0060  F1F0  F07C   	movff	floorf@x+3,?_floorf+3
  4823  003D78  0012               	return	
  4824  003D7A                     l3642:
  4825                           
  4826                           ; BSR set to: 0
  4827  003D7A  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4828  003D7C  D068               	goto	l3652
  4829                           
  4830                           ; BSR set to: 0
  4831  003D7E  0060  F21C  F07D   	movff	floorf@e,??_floorf
  4832  003D84  0EFF               	movlw	255
  4833  003D86  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4834  003D88  0EFF               	movlw	255
  4835  003D8A  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4836  003D8C  0E7F               	movlw	127
  4837  003D8E  6F80               	movwf	(??_floorf+3)& (0+255),b
  4838  003D90  0E00               	movlw	0
  4839  003D92  6F81               	movwf	(??_floorf+4)& (0+255),b
  4840  003D94                     u3885:
  4841  003D94  677D               	tstfsz	??_floorf& (0+255),b
  4842  003D96  D001               	goto	u3886
  4843  003D98  D007               	goto	u3887
  4844  003D9A                     u3886:
  4845  003D9A  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  4846  003D9C  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4847  003D9E  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4848  003DA0  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4849  003DA2  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4850  003DA4  2F7D               	decfsz	??_floorf& (0+255),f,b
  4851  003DA6  D7F6               	goto	u3885
  4852  003DA8                     u3887:
  4853  003DA8  0060  F1F8  F083   	movff	??_floorf+1,floorf@m
  4854  003DAE  0060  F1FC  F084   	movff	??_floorf+2,floorf@m+1
  4855  003DB4  0060  F200  F085   	movff	??_floorf+3,floorf@m+2
  4856  003DBA  0060  F204  F086   	movff	??_floorf+4,floorf@m+3
  4857  003DC0  0100               	movlb	0	; () banked
  4858  003DC2  5183               	movf	floorf@m& (0+255),w,b
  4859  003DC4  1589               	andwf	floorf@u& (0+255),w,b
  4860  003DC6  6F7D               	movwf	??_floorf& (0+255),b
  4861  003DC8  5184               	movf	(floorf@m+1)& (0+255),w,b
  4862  003DCA  158A               	andwf	(floorf@u+1)& (0+255),w,b
  4863  003DCC  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4864  003DCE  5185               	movf	(floorf@m+2)& (0+255),w,b
  4865  003DD0  158B               	andwf	(floorf@u+2)& (0+255),w,b
  4866  003DD2  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4867  003DD4  5186               	movf	(floorf@m+3)& (0+255),w,b
  4868  003DD6  158C               	andwf	(floorf@u+3)& (0+255),w,b
  4869  003DD8  6F80               	movwf	(??_floorf+3)& (0+255),b
  4870  003DDA  517D               	movf	??_floorf& (0+255),w,b
  4871  003DDC  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4872  003DDE  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4873  003DE0  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4874  003DE2  B4D8               	btfsc	status,2,c
  4875  003DE4  D7BD               	goto	u3860
  4876                           
  4877                           ; BSR set to: 0
  4878  003DE6  0060  F224  F07D   	movff	floorf@u,??_floorf
  4879  003DEC  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  4880  003DF2  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  4881  003DF8  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  4882  003DFE  0E20               	movlw	32
  4883  003E00  D005               	goto	u3900
  4884  003E02                     u3905:
  4885  003E02  90D8               	bcf	status,0,c
  4886  003E04  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4887  003E06  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4888  003E08  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4889  003E0A  337D               	rrcf	??_floorf& (0+255),f,b
  4890  003E0C                     u3900:
  4891  003E0C  2EE8               	decfsz	wreg,f,c
  4892  003E0E  D7F9               	goto	u3905
  4893  003E10  517D               	movf	??_floorf& (0+255),w,b
  4894  003E12  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4895  003E14  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4896  003E16  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4897  003E18  B4D8               	btfsc	status,2,c
  4898  003E1A  D008               	goto	l1318
  4899                           
  4900                           ; BSR set to: 0
  4901  003E1C  5183               	movf	floorf@m& (0+255),w,b
  4902  003E1E  2789               	addwf	floorf@u& (0+255),f,b
  4903  003E20  5184               	movf	(floorf@m+1)& (0+255),w,b
  4904  003E22  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  4905  003E24  5185               	movf	(floorf@m+2)& (0+255),w,b
  4906  003E26  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  4907  003E28  5186               	movf	(floorf@m+3)& (0+255),w,b
  4908  003E2A  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  4909  003E2C                     l1318:
  4910                           
  4911                           ; BSR set to: 0
  4912  003E2C  1D83               	comf	floorf@m& (0+255),w,b
  4913  003E2E  6F7D               	movwf	??_floorf& (0+255),b
  4914  003E30  1D84               	comf	(floorf@m+1)& (0+255),w,b
  4915  003E32  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4916  003E34  1D85               	comf	(floorf@m+2)& (0+255),w,b
  4917  003E36  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4918  003E38  1D86               	comf	(floorf@m+3)& (0+255),w,b
  4919  003E3A  6F80               	movwf	(??_floorf+3)& (0+255),b
  4920  003E3C  517D               	movf	??_floorf& (0+255),w,b
  4921  003E3E  1789               	andwf	floorf@u& (0+255),f,b
  4922  003E40  517E               	movf	(??_floorf+1)& (0+255),w,b
  4923  003E42  178A               	andwf	(floorf@u+1)& (0+255),f,b
  4924  003E44  517F               	movf	(??_floorf+2)& (0+255),w,b
  4925  003E46  178B               	andwf	(floorf@u+2)& (0+255),f,b
  4926  003E48  5180               	movf	(??_floorf+3)& (0+255),w,b
  4927  003E4A  178C               	andwf	(floorf@u+3)& (0+255),f,b
  4928  003E4C  D03A               	goto	l3660
  4929  003E4E                     l3652:
  4930                           
  4931                           ; BSR set to: 0
  4932  003E4E  0060  F224  F07D   	movff	floorf@u,??_floorf
  4933  003E54  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  4934  003E5A  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  4935  003E60  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  4936  003E66  0E20               	movlw	32
  4937  003E68  D005               	goto	u3920
  4938  003E6A                     u3925:
  4939  003E6A  90D8               	bcf	status,0,c
  4940  003E6C  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4941  003E6E  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4942  003E70  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4943  003E72  337D               	rrcf	??_floorf& (0+255),f,b
  4944  003E74                     u3920:
  4945  003E74  2EE8               	decfsz	wreg,f,c
  4946  003E76  D7F9               	goto	u3925
  4947  003E78  517D               	movf	??_floorf& (0+255),w,b
  4948  003E7A  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4949  003E7C  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4950  003E7E  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4951  003E80  A4D8               	btfss	status,2,c
  4952  003E82  D008               	goto	l3656
  4953                           
  4954                           ; BSR set to: 0
  4955  003E84  0E00               	movlw	0
  4956  003E86  6F89               	movwf	floorf@u& (0+255),b
  4957  003E88  0E00               	movlw	0
  4958  003E8A  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4959  003E8C  0E00               	movlw	0
  4960  003E8E  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4961  003E90  0E00               	movlw	0
  4962  003E92  D016               	goto	L5
  4963  003E94                     l3656:
  4964                           
  4965                           ; BSR set to: 0
  4966  003E94  90D8               	bcf	status,0,c
  4967  003E96  3589               	rlcf	floorf@u& (0+255),w,b
  4968  003E98  6F7D               	movwf	??_floorf& (0+255),b
  4969  003E9A  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  4970  003E9C  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4971  003E9E  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  4972  003EA0  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4973  003EA2  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  4974  003EA4  6F80               	movwf	(??_floorf+3)& (0+255),b
  4975  003EA6  517D               	movf	??_floorf& (0+255),w,b
  4976  003EA8  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4977  003EAA  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4978  003EAC  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4979  003EAE  B4D8               	btfsc	status,2,c
  4980  003EB0  D008               	goto	l3660
  4981                           
  4982                           ; BSR set to: 0
  4983  003EB2  0E00               	movlw	0
  4984  003EB4  6F89               	movwf	floorf@u& (0+255),b
  4985  003EB6  0E00               	movlw	0
  4986  003EB8  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4987  003EBA  0E80               	movlw	128
  4988  003EBC  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4989  003EBE  0EBF               	movlw	191
  4990  003EC0                     L5:
  4991  003EC0  6F8C               	movwf	(floorf@u+3)& (0+255),b
  4992  003EC2                     l3660:
  4993                           
  4994                           ; BSR set to: 0
  4995  003EC2  0060  F224  F079   	movff	floorf@u,?_floorf
  4996  003EC8  0060  F228  F07A   	movff	floorf@u+1,?_floorf+1
  4997  003ECE  0060  F22C  F07B   	movff	floorf@u+2,?_floorf+2
  4998  003ED4  0060  F230  F07C   	movff	floorf@u+3,?_floorf+3
  4999                           
  5000                           ; BSR set to: 0
  5001  003EDA  0012               	return		;funcret
  5002  003EDC                     __end_of_floorf:
  5003                           	opt callstack 0
  5004                           
  5005 ;; *************** function ___fpclassifyf *****************
  5006 ;; Defined at:
  5007 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  x               4    0[BANK0 ] float 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  u               4   10[BANK0 ] struct .
  5012 ;;  e               2    8[BANK0 ] int 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  2    0[BANK0 ] int 
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5022 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5023 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5024 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5025 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5026 ;;Total ram usage:       14 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    2
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_efgtoa
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text17
  5037  0043C2                     __ptext17:
  5038                           	opt callstack 0
  5039  0043C2                     ___fpclassifyf:
  5040                           	opt callstack 23
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;incstack = 0
  5044  0043C2  0060  F0C4  F06A   	movff	___fpclassifyf@F463,___fpclassifyf@u
  5045  0043C8  0060  F0C8  F06B   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5046  0043CE  0060  F0CC  F06C   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5047  0043D4  0060  F0D0  F06D   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5048  0043DA  0060  F180  F06A   	movff	___fpclassifyf@x,___fpclassifyf@u
  5049  0043E0  0060  F184  F06B   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5050  0043E6  0060  F188  F06C   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5051  0043EC  0060  F18C  F06D   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5052  0043F2  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  5053  0043F8  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5054  0043FE  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5055  004404  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5056  00440A  0E18               	movlw	24
  5057  00440C  D006               	goto	u6850
  5058  00440E                     u6855:
  5059  00440E  0100               	movlb	0	; () banked
  5060  004410  90D8               	bcf	status,0,c
  5061  004412  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5062  004414  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5063  004416  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5064  004418  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5065  00441A                     u6850:
  5066  00441A  2EE8               	decfsz	wreg,f,c
  5067  00441C  D7F8               	goto	u6855
  5068  00441E  5164               	movf	??___fpclassifyf& (0+255),w,b
  5069  004420  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5070  004422  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5071  004424  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5072  004426  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5073  004428  A4D8               	btfss	status,2,c
  5074  00442A  D019               	goto	l5520
  5075                           
  5076                           ; BSR set to: 0
  5077  00442C  90D8               	bcf	status,0,c
  5078  00442E  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5079  004430  6F64               	movwf	??___fpclassifyf& (0+255),b
  5080  004432  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5081  004434  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5082  004436  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5083  004438  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5084  00443A  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5085  00443C  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5086  00443E  5164               	movf	??___fpclassifyf& (0+255),w,b
  5087  004440  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5088  004442  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5089  004444  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5090  004446  A4D8               	btfss	status,2,c
  5091  004448  D005               	goto	l5516
  5092                           
  5093                           ; BSR set to: 0
  5094  00444A  0E00               	movlw	0
  5095  00444C  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5096  00444E  0E02               	movlw	2
  5097  004450  6F60               	movwf	?___fpclassifyf& (0+255),b
  5098  004452  0012               	return	
  5099  004454                     l5516:
  5100                           
  5101                           ; BSR set to: 0
  5102  004454  0E00               	movlw	0
  5103  004456  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5104  004458  0E03               	movlw	3
  5105  00445A  6F60               	movwf	?___fpclassifyf& (0+255),b
  5106  00445C  0012               	return	
  5107  00445E                     l5520:
  5108                           
  5109                           ; BSR set to: 0
  5110  00445E  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5111  004460  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5112  004462  A4D8               	btfss	status,2,c
  5113  004464  D020               	goto	l5526
  5114                           
  5115                           ; BSR set to: 0
  5116  004466  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  5117  00446C  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5118  004472  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5119  004478  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5120  00447E  0E09               	movlw	9
  5121  004480                     u6895:
  5122  004480  90D8               	bcf	status,0,c
  5123  004482  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5124  004484  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5125  004486  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5126  004488  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5127  00448A  2EE8               	decfsz	wreg,f,c
  5128  00448C  D7F9               	goto	u6895
  5129  00448E  5164               	movf	??___fpclassifyf& (0+255),w,b
  5130  004490  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5131  004492  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5132  004494  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5133  004496  A4D8               	btfss	status,2,c
  5134  004498  D002               	goto	u6900
  5135  00449A  0E01               	movlw	1
  5136  00449C  D001               	goto	u6910
  5137  00449E                     u6900:
  5138  00449E  0E00               	movlw	0
  5139  0044A0                     u6910:
  5140  0044A0  6F60               	movwf	?___fpclassifyf& (0+255),b
  5141  0044A2  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5142  0044A4  0012               	return	
  5143  0044A6                     l5526:
  5144                           
  5145                           ; BSR set to: 0
  5146  0044A6  0E00               	movlw	0
  5147  0044A8  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5148  0044AA  0E04               	movlw	4
  5149  0044AC  6F60               	movwf	?___fpclassifyf& (0+255),b
  5150                           
  5151                           ; BSR set to: 0
  5152  0044AE  0012               	return		;funcret
  5153  0044B0                     __end_of___fpclassifyf:
  5154                           	opt callstack 0
  5155                           
  5156 ;; *************** function ___fltol *****************
  5157 ;; Defined at:
  5158 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  f1              4    0[BANK0 ] int 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  exp1            1    9[BANK0 ] unsigned char 
  5163 ;;  sign1           1    8[BANK0 ] unsigned char 
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  4    0[BANK0 ] long 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2, status,0
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5173 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5175 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5176 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5177 ;;Total ram usage:       10 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    2
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_efgtoa
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text18
  5188  004652                     __ptext18:
  5189                           	opt callstack 0
  5190  004652                     ___fltol:
  5191                           	opt callstack 23
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;incstack = 0
  5195  004652  0100               	movlb	0	; () banked
  5196  004654  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5197  004656  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5198  004658  6F69               	movwf	___fltol@exp1& (0+255),b
  5199  00465A  5169               	movf	___fltol@exp1& (0+255),w,b
  5200  00465C  A4D8               	btfss	status,2,c
  5201  00465E  D009               	goto	l5928
  5202  004660                     u7550:
  5203                           
  5204                           ; BSR set to: 0
  5205  004660  0E00               	movlw	0
  5206  004662  6F60               	movwf	?___fltol& (0+255),b
  5207  004664  0E00               	movlw	0
  5208  004666  6F61               	movwf	(?___fltol+1)& (0+255),b
  5209  004668  0E00               	movlw	0
  5210  00466A  6F62               	movwf	(?___fltol+2)& (0+255),b
  5211  00466C  0E00               	movlw	0
  5212  00466E  6F63               	movwf	(?___fltol+3)& (0+255),b
  5213  004670  0012               	return	
  5214  004672                     l5928:
  5215                           
  5216                           ; BSR set to: 0
  5217  004672  0060  F180  F064   	movff	___fltol@f1,??___fltol
  5218  004678  0060  F184  F065   	movff	___fltol@f1+1,??___fltol+1
  5219  00467E  0060  F188  F066   	movff	___fltol@f1+2,??___fltol+2
  5220  004684  0060  F18C  F067   	movff	___fltol@f1+3,??___fltol+3
  5221  00468A  0E20               	movlw	32
  5222  00468C  D005               	goto	u7560
  5223  00468E                     u7565:
  5224  00468E  90D8               	bcf	status,0,c
  5225  004690  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  5226  004692  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  5227  004694  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  5228  004696  3364               	rrcf	??___fltol& (0+255),f,b
  5229  004698                     u7560:
  5230  004698  2EE8               	decfsz	wreg,f,c
  5231  00469A  D7F9               	goto	u7565
  5232  00469C  5164               	movf	??___fltol& (0+255),w,b
  5233  00469E  6F68               	movwf	___fltol@sign1& (0+255),b
  5234                           
  5235                           ; BSR set to: 0
  5236  0046A0  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  5237                           
  5238                           ; BSR set to: 0
  5239  0046A2  0EFF               	movlw	255
  5240  0046A4  1760               	andwf	___fltol@f1& (0+255),f,b
  5241  0046A6  0EFF               	movlw	255
  5242  0046A8  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  5243  0046AA  0EFF               	movlw	255
  5244  0046AC  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  5245  0046AE  0E00               	movlw	0
  5246  0046B0  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  5247                           
  5248                           ; BSR set to: 0
  5249  0046B2  0E96               	movlw	150
  5250  0046B4  5F69               	subwf	___fltol@exp1& (0+255),f,b
  5251                           
  5252                           ; BSR set to: 0
  5253  0046B6  AF69               	btfss	___fltol@exp1& (0+255),7,b
  5254  0046B8  D00D               	goto	l5948
  5255                           
  5256                           ; BSR set to: 0
  5257  0046BA  5169               	movf	___fltol@exp1& (0+255),w,b
  5258  0046BC  0A80               	xorlw	128
  5259  0046BE  0F97               	addlw	151
  5260  0046C0  A0D8               	btfss	status,0,c
  5261  0046C2  D7CE               	goto	u7550
  5262  0046C4                     l5944:
  5263                           
  5264                           ; BSR set to: 0
  5265  0046C4  90D8               	bcf	status,0,c
  5266  0046C6  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5267  0046C8  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5268  0046CA  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5269  0046CC  3360               	rrcf	___fltol@f1& (0+255),f,b
  5270                           
  5271                           ; BSR set to: 0
  5272  0046CE  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  5273  0046D0  D7F9               	goto	l5944
  5274  0046D2  D00D               	goto	u7600
  5275  0046D4                     l5948:
  5276                           
  5277                           ; BSR set to: 0
  5278  0046D4  0E1F               	movlw	31
  5279  0046D6  6569               	cpfsgt	___fltol@exp1& (0+255),b
  5280  0046D8  D007               	goto	l5956
  5281  0046DA  D7C2               	goto	u7550
  5282  0046DC                     l5954:
  5283                           
  5284                           ; BSR set to: 0
  5285  0046DC  90D8               	bcf	status,0,c
  5286  0046DE  3760               	rlcf	___fltol@f1& (0+255),f,b
  5287  0046E0  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5288  0046E2  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5289  0046E4  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5290  0046E6  0769               	decf	___fltol@exp1& (0+255),f,b
  5291  0046E8                     l5956:
  5292                           
  5293                           ; BSR set to: 0
  5294  0046E8  5169               	movf	___fltol@exp1& (0+255),w,b
  5295  0046EA  A4D8               	btfss	status,2,c
  5296  0046EC  D7F7               	goto	l5954
  5297  0046EE                     u7600:
  5298                           
  5299                           ; BSR set to: 0
  5300  0046EE  5168               	movf	___fltol@sign1& (0+255),w,b
  5301  0046F0  B4D8               	btfsc	status,2,c
  5302  0046F2  D008               	goto	l5962
  5303                           
  5304                           ; BSR set to: 0
  5305  0046F4  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  5306  0046F6  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  5307  0046F8  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  5308  0046FA  6D60               	negf	___fltol@f1& (0+255),b
  5309  0046FC  0E00               	movlw	0
  5310  0046FE  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5311  004700  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5312  004702  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5313  004704                     l5962:
  5314                           
  5315                           ; BSR set to: 0
  5316  004704  0060  F180  F060   	movff	___fltol@f1,?___fltol
  5317  00470A  0060  F184  F061   	movff	___fltol@f1+1,?___fltol+1
  5318  004710  0060  F188  F062   	movff	___fltol@f1+2,?___fltol+2
  5319  004716  0060  F18C  F063   	movff	___fltol@f1+3,?___fltol+3
  5320                           
  5321                           ; BSR set to: 0
  5322  00471C  0012               	return		;funcret
  5323  00471E                     __end_of___fltol:
  5324                           	opt callstack 0
  5325                           
  5326 ;; *************** function ___flsub *****************
  5327 ;; Defined at:
  5328 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  b               4   25[BANK0 ] long 
  5331 ;;  a               4   29[BANK0 ] long 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  4   25[BANK0 ] long 
  5336 ;; Registers used:
  5337 ;;		wreg, status,2, status,0, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5343 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5346 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5347 ;;Total ram usage:        8 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    3
  5350 ;; This function calls:
  5351 ;;		___fladd
  5352 ;; This function is called by:
  5353 ;;		_efgtoa
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text19
  5358  004E66                     __ptext19:
  5359                           	opt callstack 0
  5360  004E66                     ___flsub:
  5361                           	opt callstack 22
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;incstack = 0
  5365  004E66  0E00               	movlw	0
  5366  004E68  0100               	movlb	0	; () banked
  5367  004E6A  1B7D               	xorwf	___flsub@a& (0+255),f,b
  5368  004E6C  0E00               	movlw	0
  5369  004E6E  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  5370  004E70  0E00               	movlw	0
  5371  004E72  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  5372  004E74  0E80               	movlw	128
  5373  004E76  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  5374                           
  5375                           ; BSR set to: 0
  5376  004E78  0060  F1E4  F060   	movff	___flsub@b,___fladd@b
  5377  004E7E  0060  F1E8  F061   	movff	___flsub@b+1,___fladd@b+1
  5378  004E84  0060  F1EC  F062   	movff	___flsub@b+2,___fladd@b+2
  5379  004E8A  0060  F1F0  F063   	movff	___flsub@b+3,___fladd@b+3
  5380  004E90  0060  F1F4  F064   	movff	___flsub@a,___fladd@a
  5381  004E96  0060  F1F8  F065   	movff	___flsub@a+1,___fladd@a+1
  5382  004E9C  0060  F1FC  F066   	movff	___flsub@a+2,___fladd@a+2
  5383  004EA2  0060  F200  F067   	movff	___flsub@a+3,___fladd@a+3
  5384  004EA8  EC74  F01B         	call	___fladd	;wreg free
  5385  004EAC  0060  F180  F079   	movff	?___fladd,?___flsub
  5386  004EB2  0060  F184  F07A   	movff	?___fladd+1,?___flsub+1
  5387  004EB8  0060  F188  F07B   	movff	?___fladd+2,?___flsub+2
  5388  004EBE  0060  F18C  F07C   	movff	?___fladd+3,?___flsub+3
  5389  004EC4  0012               	return		;funcret
  5390  004EC6                     __end_of___flsub:
  5391                           	opt callstack 0
  5392                           
  5393 ;; *************** function ___fladd *****************
  5394 ;; Defined at:
  5395 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  b               4    0[BANK0 ] long 
  5398 ;;  a               4    4[BANK0 ] long 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  grs             1   15[BANK0 ] unsigned char 
  5401 ;;  bexp            1   14[BANK0 ] unsigned char 
  5402 ;;  aexp            1   13[BANK0 ] unsigned char 
  5403 ;;  signs           1   12[BANK0 ] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  4    0[BANK0 ] unsigned char 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5413 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5414 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5415 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5416 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5417 ;;Total ram usage:       16 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    2
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_efgtoa
  5424 ;;		___flsub
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text20
  5429  0036E8                     __ptext20:
  5430                           	opt callstack 0
  5431  0036E8                     ___fladd:
  5432                           	opt callstack 22
  5433                           
  5434                           ;incstack = 0
  5435  0036E8  0100               	movlb	0	; () banked
  5436  0036EA  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5437  0036EC  0B80               	andlw	128
  5438  0036EE  6F6C               	movwf	___fladd@signs& (0+255),b
  5439  0036F0  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5440  0036F2  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  5441  0036F4  6F6E               	movwf	___fladd@bexp& (0+255),b
  5442                           
  5443                           ; BSR set to: 0
  5444  0036F6  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
  5445                           
  5446                           ; BSR set to: 0
  5447  0036F8  816E               	bsf	___fladd@bexp& (0+255),0,b
  5448                           
  5449                           ; BSR set to: 0
  5450  0036FA  516E               	movf	___fladd@bexp& (0+255),w,b
  5451  0036FC  B4D8               	btfsc	status,2,c
  5452  0036FE  D00D               	goto	l5300
  5453                           
  5454                           ; BSR set to: 0
  5455  003700  296E               	incf	___fladd@bexp& (0+255),w,b
  5456  003702  A4D8               	btfss	status,2,c
  5457  003704  D008               	goto	l5296
  5458                           
  5459                           ; BSR set to: 0
  5460  003706  0E00               	movlw	0
  5461  003708  6F60               	movwf	___fladd@b& (0+255),b
  5462  00370A  0E00               	movlw	0
  5463  00370C  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5464  00370E  0E00               	movlw	0
  5465  003710  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5466  003712  0E00               	movlw	0
  5467  003714  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5468  003716                     l5296:
  5469                           
  5470                           ; BSR set to: 0
  5471  003716  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5472  003718  D006               	goto	L6
  5473  00371A                     l5300:
  5474                           
  5475                           ; BSR set to: 0
  5476  00371A  0E00               	movlw	0
  5477  00371C  6F60               	movwf	___fladd@b& (0+255),b
  5478  00371E  0E00               	movlw	0
  5479  003720  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5480  003722  0E00               	movlw	0
  5481  003724  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5482  003726                     L6:
  5483  003726  0E00               	movlw	0
  5484  003728  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5485                           
  5486                           ; BSR set to: 0
  5487  00372A  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5488  00372C  0B80               	andlw	128
  5489  00372E  6F6D               	movwf	___fladd@aexp& (0+255),b
  5490                           
  5491                           ; BSR set to: 0
  5492  003730  516C               	movf	___fladd@signs& (0+255),w,b
  5493  003732  196D               	xorwf	___fladd@aexp& (0+255),w,b
  5494  003734  A4D8               	btfss	status,2,c
  5495                           
  5496                           ; BSR set to: 0
  5497  003736  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5498                           
  5499                           ; BSR set to: 0
  5500  003738  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5501  00373A  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5502  00373C  6F6D               	movwf	___fladd@aexp& (0+255),b
  5503                           
  5504                           ; BSR set to: 0
  5505  00373E  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
  5506                           
  5507                           ; BSR set to: 0
  5508  003740  816D               	bsf	___fladd@aexp& (0+255),0,b
  5509                           
  5510                           ; BSR set to: 0
  5511  003742  516D               	movf	___fladd@aexp& (0+255),w,b
  5512  003744  B4D8               	btfsc	status,2,c
  5513  003746  D00D               	goto	l5324
  5514                           
  5515                           ; BSR set to: 0
  5516  003748  296D               	incf	___fladd@aexp& (0+255),w,b
  5517  00374A  A4D8               	btfss	status,2,c
  5518  00374C  D008               	goto	l5320
  5519                           
  5520                           ; BSR set to: 0
  5521  00374E  0E00               	movlw	0
  5522  003750  6F64               	movwf	___fladd@a& (0+255),b
  5523  003752  0E00               	movlw	0
  5524  003754  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5525  003756  0E00               	movlw	0
  5526  003758  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5527  00375A  0E00               	movlw	0
  5528  00375C  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5529  00375E                     l5320:
  5530                           
  5531                           ; BSR set to: 0
  5532  00375E  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5533  003760  D006               	goto	L7
  5534  003762                     l5324:
  5535                           
  5536                           ; BSR set to: 0
  5537  003762  0E00               	movlw	0
  5538  003764  6F64               	movwf	___fladd@a& (0+255),b
  5539  003766  0E00               	movlw	0
  5540  003768  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5541  00376A  0E00               	movlw	0
  5542  00376C  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5543  00376E                     L7:
  5544  00376E  0E00               	movlw	0
  5545  003770  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5546                           
  5547                           ; BSR set to: 0
  5548  003772  516E               	movf	___fladd@bexp& (0+255),w,b
  5549  003774  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5550  003776  B0D8               	btfsc	status,0,c
  5551  003778  D031               	goto	l5362
  5552                           
  5553                           ; BSR set to: 0
  5554  00377A  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5555  00377C  D002               	goto	l5332
  5556                           
  5557                           ; BSR set to: 0
  5558  00377E  0E80               	movlw	128
  5559  003780  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5560  003782                     l5332:
  5561                           
  5562                           ; BSR set to: 0
  5563  003782  0060  F1B8  F06F   	movff	___fladd@bexp,___fladd@grs
  5564                           
  5565                           ; BSR set to: 0
  5566  003788  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  5567                           
  5568                           ; BSR set to: 0
  5569  00378E  0060  F1BC  F06D   	movff	___fladd@grs,___fladd@aexp
  5570                           
  5571                           ; BSR set to: 0
  5572  003794  0060  F180  F06F   	movff	___fladd@b,___fladd@grs
  5573                           
  5574                           ; BSR set to: 0
  5575  00379A  0060  F190  F060   	movff	___fladd@a,___fladd@b
  5576                           
  5577                           ; BSR set to: 0
  5578  0037A0  0060  F1BC  F064   	movff	___fladd@grs,___fladd@a
  5579                           
  5580                           ; BSR set to: 0
  5581  0037A6  0060  F184  F06F   	movff	___fladd@b+1,___fladd@grs
  5582                           
  5583                           ; BSR set to: 0
  5584  0037AC  0060  F194  F061   	movff	___fladd@a+1,___fladd@b+1
  5585                           
  5586                           ; BSR set to: 0
  5587  0037B2  0060  F1BC  F065   	movff	___fladd@grs,___fladd@a+1
  5588                           
  5589                           ; BSR set to: 0
  5590  0037B8  0060  F188  F06F   	movff	___fladd@b+2,___fladd@grs
  5591                           
  5592                           ; BSR set to: 0
  5593  0037BE  0060  F198  F062   	movff	___fladd@a+2,___fladd@b+2
  5594                           
  5595                           ; BSR set to: 0
  5596  0037C4  0060  F1BC  F066   	movff	___fladd@grs,___fladd@a+2
  5597                           
  5598                           ; BSR set to: 0
  5599  0037CA  0060  F18C  F06F   	movff	___fladd@b+3,___fladd@grs
  5600                           
  5601                           ; BSR set to: 0
  5602  0037D0  0060  F19C  F063   	movff	___fladd@a+3,___fladd@b+3
  5603                           
  5604                           ; BSR set to: 0
  5605  0037D6  0060  F1BC  F067   	movff	___fladd@grs,___fladd@a+3
  5606  0037DC                     l5362:
  5607                           
  5608                           ; BSR set to: 0
  5609  0037DC  0E00               	movlw	0
  5610  0037DE  6F6F               	movwf	___fladd@grs& (0+255),b
  5611                           
  5612                           ; BSR set to: 0
  5613  0037E0  516E               	movf	___fladd@bexp& (0+255),w,b
  5614  0037E2  0060  F1B4  F068   	movff	___fladd@aexp,??___fladd
  5615  0037E8  6B69               	clrf	(??___fladd+1)& (0+255),b
  5616  0037EA  5F68               	subwf	??___fladd& (0+255),f,b
  5617  0037EC  0E00               	movlw	0
  5618  0037EE  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5619  0037F0  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5620  0037F2  D02D               	goto	l1156
  5621  0037F4  5169               	movf	(??___fladd+1)& (0+255),w,b
  5622  0037F6  E104               	bnz	u6510
  5623  0037F8  0E1A               	movlw	26
  5624  0037FA  5D68               	subwf	??___fladd& (0+255),w,b
  5625  0037FC  A0D8               	btfss	status,0,c
  5626  0037FE  D027               	goto	l1156
  5627  003800                     u6510:
  5628                           
  5629                           ; BSR set to: 0
  5630  003800  5160               	movf	___fladd@b& (0+255),w,b
  5631  003802  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5632  003804  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5633  003806  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5634  003808  B4D8               	btfsc	status,2,c
  5635  00380A  D002               	goto	u6520
  5636  00380C  0E01               	movlw	1
  5637  00380E  D001               	goto	u6530
  5638  003810                     u6520:
  5639  003810  0E00               	movlw	0
  5640  003812                     u6530:
  5641  003812  6F6F               	movwf	___fladd@grs& (0+255),b
  5642                           
  5643                           ; BSR set to: 0
  5644  003814  0E00               	movlw	0
  5645  003816  6F60               	movwf	___fladd@b& (0+255),b
  5646  003818  0E00               	movlw	0
  5647  00381A  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5648  00381C  0E00               	movlw	0
  5649  00381E  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5650  003820  0E00               	movlw	0
  5651  003822  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5652                           
  5653                           ; BSR set to: 0
  5654  003824  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  5655  00382A  D015               	goto	u6560
  5656  00382C                     l1157:
  5657                           
  5658                           ; BSR set to: 0
  5659  00382C  A16F               	btfss	___fladd@grs& (0+255),0,b
  5660  00382E  D005               	goto	l5374
  5661                           
  5662                           ; BSR set to: 0
  5663  003830  90D8               	bcf	status,0,c
  5664  003832  316F               	rrcf	___fladd@grs& (0+255),w,b
  5665  003834  0901               	iorlw	1
  5666  003836  6F6F               	movwf	___fladd@grs& (0+255),b
  5667  003838  D002               	goto	l5376
  5668  00383A                     l5374:
  5669                           
  5670                           ; BSR set to: 0
  5671  00383A  90D8               	bcf	status,0,c
  5672  00383C  336F               	rrcf	___fladd@grs& (0+255),f,b
  5673  00383E                     l5376:
  5674                           
  5675                           ; BSR set to: 0
  5676  00383E  B160               	btfsc	___fladd@b& (0+255),0,b
  5677                           
  5678                           ; BSR set to: 0
  5679  003840  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5680                           
  5681                           ; BSR set to: 0
  5682  003842  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5683  003844  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5684  003846  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5685  003848  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5686  00384A  3360               	rrcf	___fladd@b& (0+255),f,b
  5687                           
  5688                           ; BSR set to: 0
  5689  00384C  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5690  00384E                     l1156:
  5691                           
  5692                           ; BSR set to: 0
  5693  00384E  516D               	movf	___fladd@aexp& (0+255),w,b
  5694  003850  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5695  003852  A0D8               	btfss	status,0,c
  5696  003854  D7EB               	goto	l1157
  5697  003856                     u6560:
  5698                           
  5699                           ; BSR set to: 0
  5700  003856  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5701  003858  D028               	goto	l5408
  5702                           
  5703                           ; BSR set to: 0
  5704  00385A  516E               	movf	___fladd@bexp& (0+255),w,b
  5705  00385C  A4D8               	btfss	status,2,c
  5706  00385E  D009               	goto	l5390
  5707                           
  5708                           ; BSR set to: 0
  5709  003860  0E00               	movlw	0
  5710  003862  6F60               	movwf	?___fladd& (0+255),b
  5711  003864  0E00               	movlw	0
  5712  003866  6F61               	movwf	(?___fladd+1)& (0+255),b
  5713  003868  0E00               	movlw	0
  5714  00386A  6F62               	movwf	(?___fladd+2)& (0+255),b
  5715  00386C  0E00               	movlw	0
  5716  00386E  6F63               	movwf	(?___fladd+3)& (0+255),b
  5717  003870  0012               	return	
  5718  003872                     l5390:
  5719                           
  5720                           ; BSR set to: 0
  5721  003872  5164               	movf	___fladd@a& (0+255),w,b
  5722  003874  2760               	addwf	___fladd@b& (0+255),f,b
  5723  003876  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5724  003878  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5725  00387A  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5726  00387C  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5727  00387E  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5728  003880  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5729                           
  5730                           ; BSR set to: 0
  5731  003882  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5732  003884  D071               	goto	u6690
  5733                           
  5734                           ; BSR set to: 0
  5735  003886  A16F               	btfss	___fladd@grs& (0+255),0,b
  5736  003888  D005               	goto	l5398
  5737                           
  5738                           ; BSR set to: 0
  5739  00388A  90D8               	bcf	status,0,c
  5740  00388C  316F               	rrcf	___fladd@grs& (0+255),w,b
  5741  00388E  0901               	iorlw	1
  5742  003890  6F6F               	movwf	___fladd@grs& (0+255),b
  5743  003892  D002               	goto	l5400
  5744  003894                     l5398:
  5745                           
  5746                           ; BSR set to: 0
  5747  003894  90D8               	bcf	status,0,c
  5748  003896  336F               	rrcf	___fladd@grs& (0+255),f,b
  5749  003898                     l5400:
  5750                           
  5751                           ; BSR set to: 0
  5752  003898  B160               	btfsc	___fladd@b& (0+255),0,b
  5753                           
  5754                           ; BSR set to: 0
  5755  00389A  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5756                           
  5757                           ; BSR set to: 0
  5758  00389C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5759  00389E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5760  0038A0  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5761  0038A2  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5762  0038A4  3360               	rrcf	___fladd@b& (0+255),f,b
  5763                           
  5764                           ; BSR set to: 0
  5765  0038A6  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5766  0038A8  D05F               	goto	u6690
  5767  0038AA                     l5408:
  5768                           
  5769                           ; BSR set to: 0
  5770  0038AA  5164               	movf	___fladd@a& (0+255),w,b
  5771  0038AC  5D60               	subwf	___fladd@b& (0+255),w,b
  5772  0038AE  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5773  0038B0  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5774  0038B2  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5775  0038B4  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5776  0038B6  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5777  0038B8  0A80               	xorlw	128
  5778  0038BA  6F68               	movwf	??___fladd& (0+255),b
  5779  0038BC  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5780  0038BE  0A80               	xorlw	128
  5781  0038C0  5968               	subwfb	??___fladd& (0+255),w,b
  5782  0038C2  B0D8               	btfsc	status,0,c
  5783  0038C4  D025               	goto	l5418
  5784                           
  5785                           ; BSR set to: 0
  5786  0038C6  5160               	movf	___fladd@b& (0+255),w,b
  5787  0038C8  5D64               	subwf	___fladd@a& (0+255),w,b
  5788  0038CA  6F68               	movwf	??___fladd& (0+255),b
  5789  0038CC  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5790  0038CE  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5791  0038D0  6F69               	movwf	(??___fladd+1)& (0+255),b
  5792  0038D2  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5793  0038D4  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5794  0038D6  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5795  0038D8  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5796  0038DA  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5797  0038DC  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5798  0038DE  0EFF               	movlw	255
  5799  0038E0  2568               	addwf	??___fladd& (0+255),w,b
  5800  0038E2  6F60               	movwf	___fladd@b& (0+255),b
  5801  0038E4  0EFF               	movlw	255
  5802  0038E6  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5803  0038E8  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5804  0038EA  0EFF               	movlw	255
  5805  0038EC  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5806  0038EE  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5807  0038F0  0EFF               	movlw	255
  5808  0038F2  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5809  0038F4  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5810  0038F6  0E80               	movlw	128
  5811  0038F8  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5812                           
  5813                           ; BSR set to: 0
  5814  0038FA  6D6F               	negf	___fladd@grs& (0+255),b
  5815                           
  5816                           ; BSR set to: 0
  5817  0038FC  516F               	movf	___fladd@grs& (0+255),w,b
  5818  0038FE  A4D8               	btfss	status,2,c
  5819  003900  D00F               	goto	l1172
  5820                           
  5821                           ; BSR set to: 0
  5822  003902  0E01               	movlw	1
  5823  003904  2760               	addwf	___fladd@b& (0+255),f,b
  5824  003906  0E00               	movlw	0
  5825  003908  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5826  00390A  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5827  00390C  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5828  00390E  D008               	goto	l1172
  5829  003910                     l5418:
  5830                           
  5831                           ; BSR set to: 0
  5832  003910  5164               	movf	___fladd@a& (0+255),w,b
  5833  003912  5F60               	subwf	___fladd@b& (0+255),f,b
  5834  003914  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5835  003916  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5836  003918  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5837  00391A  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5838  00391C  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5839  00391E  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5840  003920                     l1172:
  5841                           
  5842                           ; BSR set to: 0
  5843  003920  5160               	movf	___fladd@b& (0+255),w,b
  5844  003922  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5845  003924  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5846  003926  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5847  003928  A4D8               	btfss	status,2,c
  5848  00392A  D01C               	goto	l5442
  5849                           
  5850                           ; BSR set to: 0
  5851  00392C  516F               	movf	___fladd@grs& (0+255),w,b
  5852  00392E  A4D8               	btfss	status,2,c
  5853  003930  D019               	goto	l5442
  5854                           
  5855                           ; BSR set to: 0
  5856  003932  0E00               	movlw	0
  5857  003934  6F60               	movwf	?___fladd& (0+255),b
  5858  003936  0E00               	movlw	0
  5859  003938  6F61               	movwf	(?___fladd+1)& (0+255),b
  5860  00393A  0E00               	movlw	0
  5861  00393C  6F62               	movwf	(?___fladd+2)& (0+255),b
  5862  00393E  0E00               	movlw	0
  5863  003940  6F63               	movwf	(?___fladd+3)& (0+255),b
  5864  003942  0012               	return	
  5865  003944                     l5426:
  5866                           
  5867                           ; BSR set to: 0
  5868  003944  90D8               	bcf	status,0,c
  5869  003946  3760               	rlcf	___fladd@b& (0+255),f,b
  5870  003948  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5871  00394A  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5872  00394C  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5873                           
  5874                           ; BSR set to: 0
  5875  00394E  BF6F               	btfsc	___fladd@grs& (0+255),7,b
  5876                           
  5877                           ; BSR set to: 0
  5878  003950  8160               	bsf	___fladd@b& (0+255),0,b
  5879                           
  5880                           ; BSR set to: 0
  5881  003952  A16F               	btfss	___fladd@grs& (0+255),0,b
  5882  003954  D002               	goto	l5436
  5883                           
  5884                           ; BSR set to: 0
  5885  003956  80D8               	bsf	status,0,c
  5886  003958  D001               	goto	L8
  5887  00395A                     l5436:
  5888                           
  5889                           ; BSR set to: 0
  5890  00395A  90D8               	bcf	status,0,c
  5891  00395C                     L8:
  5892  00395C  376F               	rlcf	___fladd@grs& (0+255),f,b
  5893                           
  5894                           ; BSR set to: 0
  5895  00395E  516E               	movf	___fladd@bexp& (0+255),w,b
  5896  003960  A4D8               	btfss	status,2,c
  5897                           
  5898                           ; BSR set to: 0
  5899  003962  076E               	decf	___fladd@bexp& (0+255),f,b
  5900  003964                     l5442:
  5901                           
  5902                           ; BSR set to: 0
  5903  003964  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5904  003966  D7EE               	goto	l5426
  5905  003968                     u6690:
  5906                           
  5907                           ; BSR set to: 0
  5908  003968  0E00               	movlw	0
  5909  00396A  6F6D               	movwf	___fladd@aexp& (0+255),b
  5910                           
  5911                           ; BSR set to: 0
  5912  00396C  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5913  00396E  D00C               	goto	l1181
  5914                           
  5915                           ; BSR set to: 0
  5916  003970  0060  F1BC  F068   	movff	___fladd@grs,??___fladd
  5917  003976  0E7F               	movlw	127
  5918  003978  1768               	andwf	??___fladd& (0+255),f,b
  5919  00397A  B4D8               	btfsc	status,2,c
  5920  00397C  D003               	goto	l1182
  5921  00397E                     u6710:
  5922                           
  5923                           ; BSR set to: 0
  5924  00397E  0E01               	movlw	1
  5925  003980  6F6D               	movwf	___fladd@aexp& (0+255),b
  5926  003982  D002               	goto	l1181
  5927  003984                     l1182:
  5928                           
  5929                           ; BSR set to: 0
  5930  003984  B160               	btfsc	___fladd@b& (0+255),0,b
  5931  003986  D7FB               	goto	u6710
  5932  003988                     l1181:
  5933                           
  5934                           ; BSR set to: 0
  5935  003988  516D               	movf	___fladd@aexp& (0+255),w,b
  5936  00398A  B4D8               	btfsc	status,2,c
  5937  00398C  D028               	goto	l5462
  5938                           
  5939                           ; BSR set to: 0
  5940  00398E  0E01               	movlw	1
  5941  003990  2760               	addwf	___fladd@b& (0+255),f,b
  5942  003992  0E00               	movlw	0
  5943  003994  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5944  003996  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5945  003998  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5946                           
  5947                           ; BSR set to: 0
  5948  00399A  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5949  00399C  D020               	goto	l5462
  5950                           
  5951                           ; BSR set to: 0
  5952  00399E  0060  F180  F068   	movff	___fladd@b,??___fladd
  5953  0039A4  0060  F184  F069   	movff	___fladd@b+1,??___fladd+1
  5954  0039AA  0060  F188  F06A   	movff	___fladd@b+2,??___fladd+2
  5955  0039B0  0060  F18C  F06B   	movff	___fladd@b+3,??___fladd+3
  5956  0039B6  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  5957  0039B8  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  5958  0039BA  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  5959  0039BC  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  5960  0039BE  3368               	rrcf	??___fladd& (0+255),f,b
  5961  0039C0  0060  F1A0  F060   	movff	??___fladd,___fladd@b
  5962  0039C6  0060  F1A4  F061   	movff	??___fladd+1,___fladd@b+1
  5963  0039CC  0060  F1A8  F062   	movff	??___fladd+2,___fladd@b+2
  5964  0039D2  0060  F1AC  F063   	movff	??___fladd+3,___fladd@b+3
  5965  0039D8  296E               	incf	___fladd@bexp& (0+255),w,b
  5966  0039DA  A4D8               	btfss	status,2,c
  5967                           
  5968                           ; BSR set to: 0
  5969  0039DC  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5970  0039DE                     l5462:
  5971                           
  5972                           ; BSR set to: 0
  5973  0039DE  296E               	incf	___fladd@bexp& (0+255),w,b
  5974  0039E0  B4D8               	btfsc	status,2,c
  5975  0039E2  D003               	goto	u6770
  5976                           
  5977                           ; BSR set to: 0
  5978  0039E4  516E               	movf	___fladd@bexp& (0+255),w,b
  5979  0039E6  A4D8               	btfss	status,2,c
  5980  0039E8  D00D               	goto	l5470
  5981  0039EA                     u6770:
  5982                           
  5983                           ; BSR set to: 0
  5984  0039EA  0E00               	movlw	0
  5985  0039EC  6F60               	movwf	___fladd@b& (0+255),b
  5986  0039EE  0E00               	movlw	0
  5987  0039F0  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5988  0039F2  0E00               	movlw	0
  5989  0039F4  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5990  0039F6  0E00               	movlw	0
  5991  0039F8  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5992  0039FA  516E               	movf	___fladd@bexp& (0+255),w,b
  5993  0039FC  A4D8               	btfss	status,2,c
  5994  0039FE  D002               	goto	l5470
  5995                           
  5996                           ; BSR set to: 0
  5997  003A00  0E00               	movlw	0
  5998  003A02  6F6C               	movwf	___fladd@signs& (0+255),b
  5999  003A04                     l5470:
  6000                           
  6001                           ; BSR set to: 0
  6002  003A04  A16E               	btfss	___fladd@bexp& (0+255),0,b
  6003  003A06  D002               	goto	l5474
  6004                           
  6005                           ; BSR set to: 0
  6006  003A08  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  6007  003A0A  D001               	goto	l5476
  6008  003A0C                     l5474:
  6009                           
  6010                           ; BSR set to: 0
  6011  003A0C  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  6012  003A0E                     l5476:
  6013                           
  6014                           ; BSR set to: 0
  6015  003A0E  90D8               	bcf	status,0,c
  6016  003A10  316E               	rrcf	___fladd@bexp& (0+255),w,b
  6017  003A12  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6018                           
  6019                           ; BSR set to: 0
  6020  003A14  BF6C               	btfsc	___fladd@signs& (0+255),7,b
  6021                           
  6022                           ; BSR set to: 0
  6023  003A16  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  6024                           
  6025                           ; BSR set to: 0
  6026  003A18  0060  F180  F060   	movff	___fladd@b,?___fladd
  6027  003A1E  0060  F184  F061   	movff	___fladd@b+1,?___fladd+1
  6028  003A24  0060  F188  F062   	movff	___fladd@b+2,?___fladd+2
  6029  003A2A  0060  F18C  F063   	movff	___fladd@b+3,?___fladd+3
  6030                           
  6031                           ; BSR set to: 0
  6032  003A30  0012               	return		;funcret
  6033  003A32                     __end_of___fladd:
  6034                           	opt callstack 0
  6035                           
  6036 ;; *************** function ___flneg *****************
  6037 ;; Defined at:
  6038 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  f1              4    0[BANK0 ] unsigned char 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  4    0[BANK0 ] unsigned char 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6055 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6056 ;;Total ram usage:        4 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    2
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_efgtoa
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text21
  6067  005086                     __ptext21:
  6068                           	opt callstack 0
  6069  005086                     ___flneg:
  6070                           	opt callstack 23
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;incstack = 0
  6074  005086  0100               	movlb	0	; () banked
  6075  005088  5160               	movf	___flneg@f1& (0+255),w,b
  6076  00508A  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6077  00508C  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6078  00508E  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6079  005090  B4D8               	btfsc	status,2,c
  6080  005092  D008               	goto	l5918
  6081                           
  6082                           ; BSR set to: 0
  6083  005094  0E00               	movlw	0
  6084  005096  1B60               	xorwf	___flneg@f1& (0+255),f,b
  6085  005098  0E00               	movlw	0
  6086  00509A  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6087  00509C  0E00               	movlw	0
  6088  00509E  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6089  0050A0  0E80               	movlw	128
  6090  0050A2  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6091  0050A4                     l5918:
  6092                           
  6093                           ; BSR set to: 0
  6094  0050A4  0060  F180  F060   	movff	___flneg@f1,?___flneg
  6095  0050AA  0060  F184  F061   	movff	___flneg@f1+1,?___flneg+1
  6096  0050B0  0060  F188  F062   	movff	___flneg@f1+2,?___flneg+2
  6097  0050B6  0060  F18C  F063   	movff	___flneg@f1+3,?___flneg+3
  6098                           
  6099                           ; BSR set to: 0
  6100  0050BC  0012               	return		;funcret
  6101  0050BE                     __end_of___flneg:
  6102                           	opt callstack 0
  6103                           
  6104 ;; *************** function ___flmul *****************
  6105 ;; Defined at:
  6106 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  b               4    0[BANK0 ] unsigned char 
  6109 ;;  a               4    4[BANK0 ] unsigned char 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  prod            4   19[BANK0 ] struct .
  6112 ;;  grs             4   14[BANK0 ] unsigned long 
  6113 ;;  temp            2   23[BANK0 ] struct .
  6114 ;;  bexp            1   18[BANK0 ] unsigned char 
  6115 ;;  aexp            1   13[BANK0 ] unsigned char 
  6116 ;;  sign            1   12[BANK0 ] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  4    0[BANK0 ] unsigned char 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0, prodl, prodh
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6126 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6127 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6128 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6129 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6130 ;;Total ram usage:       25 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    2
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_efgtoa
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text22
  6141  002BEC                     __ptext22:
  6142                           	opt callstack 0
  6143  002BEC                     ___flmul:
  6144                           	opt callstack 23
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;incstack = 0
  6148  002BEC  0100               	movlb	0	; () banked
  6149  002BEE  5163               	movf	(___flmul@b+3)& (0+255),w,b
  6150  002BF0  0B80               	andlw	128
  6151  002BF2  6F6C               	movwf	___flmul@sign& (0+255),b
  6152  002BF4  5163               	movf	(___flmul@b+3)& (0+255),w,b
  6153  002BF6  2563               	addwf	(___flmul@b+3)& (0+255),w,b
  6154  002BF8  6F72               	movwf	___flmul@bexp& (0+255),b
  6155                           
  6156                           ; BSR set to: 0
  6157  002BFA  BF62               	btfsc	(___flmul@b+2)& (0+255),7,b
  6158                           
  6159                           ; BSR set to: 0
  6160  002BFC  8172               	bsf	___flmul@bexp& (0+255),0,b
  6161                           
  6162                           ; BSR set to: 0
  6163  002BFE  5172               	movf	___flmul@bexp& (0+255),w,b
  6164  002C00  B4D8               	btfsc	status,2,c
  6165  002C02  D00D               	goto	l5696
  6166                           
  6167                           ; BSR set to: 0
  6168  002C04  2972               	incf	___flmul@bexp& (0+255),w,b
  6169  002C06  A4D8               	btfss	status,2,c
  6170  002C08  D008               	goto	l5694
  6171                           
  6172                           ; BSR set to: 0
  6173  002C0A  0E00               	movlw	0
  6174  002C0C  6F60               	movwf	___flmul@b& (0+255),b
  6175  002C0E  0E00               	movlw	0
  6176  002C10  6F61               	movwf	(___flmul@b+1)& (0+255),b
  6177  002C12  0E00               	movlw	0
  6178  002C14  6F62               	movwf	(___flmul@b+2)& (0+255),b
  6179  002C16  0E00               	movlw	0
  6180  002C18  6F63               	movwf	(___flmul@b+3)& (0+255),b
  6181  002C1A                     l5694:
  6182                           
  6183                           ; BSR set to: 0
  6184  002C1A  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
  6185  002C1C  D008               	goto	l5698
  6186  002C1E                     l5696:
  6187                           
  6188                           ; BSR set to: 0
  6189  002C1E  0E00               	movlw	0
  6190  002C20  6F60               	movwf	___flmul@b& (0+255),b
  6191  002C22  0E00               	movlw	0
  6192  002C24  6F61               	movwf	(___flmul@b+1)& (0+255),b
  6193  002C26  0E00               	movlw	0
  6194  002C28  6F62               	movwf	(___flmul@b+2)& (0+255),b
  6195  002C2A  0E00               	movlw	0
  6196  002C2C  6F63               	movwf	(___flmul@b+3)& (0+255),b
  6197  002C2E                     l5698:
  6198                           
  6199                           ; BSR set to: 0
  6200  002C2E  5167               	movf	(___flmul@a+3)& (0+255),w,b
  6201  002C30  0B80               	andlw	128
  6202  002C32  1B6C               	xorwf	___flmul@sign& (0+255),f,b
  6203                           
  6204                           ; BSR set to: 0
  6205  002C34  5167               	movf	(___flmul@a+3)& (0+255),w,b
  6206  002C36  2567               	addwf	(___flmul@a+3)& (0+255),w,b
  6207  002C38  6F6D               	movwf	___flmul@aexp& (0+255),b
  6208                           
  6209                           ; BSR set to: 0
  6210  002C3A  BF66               	btfsc	(___flmul@a+2)& (0+255),7,b
  6211                           
  6212                           ; BSR set to: 0
  6213  002C3C  816D               	bsf	___flmul@aexp& (0+255),0,b
  6214                           
  6215                           ; BSR set to: 0
  6216  002C3E  516D               	movf	___flmul@aexp& (0+255),w,b
  6217  002C40  B4D8               	btfsc	status,2,c
  6218  002C42  D00D               	goto	l5714
  6219                           
  6220                           ; BSR set to: 0
  6221  002C44  296D               	incf	___flmul@aexp& (0+255),w,b
  6222  002C46  A4D8               	btfss	status,2,c
  6223  002C48  D008               	goto	l5712
  6224                           
  6225                           ; BSR set to: 0
  6226  002C4A  0E00               	movlw	0
  6227  002C4C  6F64               	movwf	___flmul@a& (0+255),b
  6228  002C4E  0E00               	movlw	0
  6229  002C50  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6230  002C52  0E00               	movlw	0
  6231  002C54  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6232  002C56  0E00               	movlw	0
  6233  002C58  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6234  002C5A                     l5712:
  6235                           
  6236                           ; BSR set to: 0
  6237  002C5A  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
  6238  002C5C  D008               	goto	l1241
  6239  002C5E                     l5714:
  6240                           
  6241                           ; BSR set to: 0
  6242  002C5E  0E00               	movlw	0
  6243  002C60  6F64               	movwf	___flmul@a& (0+255),b
  6244  002C62  0E00               	movlw	0
  6245  002C64  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6246  002C66  0E00               	movlw	0
  6247  002C68  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6248  002C6A  0E00               	movlw	0
  6249  002C6C  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6250  002C6E                     l1241:
  6251                           
  6252                           ; BSR set to: 0
  6253  002C6E  516D               	movf	___flmul@aexp& (0+255),w,b
  6254  002C70  B4D8               	btfsc	status,2,c
  6255  002C72  D003               	goto	u7270
  6256                           
  6257                           ; BSR set to: 0
  6258  002C74  5172               	movf	___flmul@bexp& (0+255),w,b
  6259  002C76  A4D8               	btfss	status,2,c
  6260  002C78  D009               	goto	l5722
  6261  002C7A                     u7270:
  6262                           
  6263                           ; BSR set to: 0
  6264  002C7A  0E00               	movlw	0
  6265  002C7C  6F60               	movwf	?___flmul& (0+255),b
  6266  002C7E  0E00               	movlw	0
  6267  002C80  6F61               	movwf	(?___flmul+1)& (0+255),b
  6268  002C82  0E00               	movlw	0
  6269  002C84  6F62               	movwf	(?___flmul+2)& (0+255),b
  6270  002C86  0E00               	movlw	0
  6271  002C88  6F63               	movwf	(?___flmul+3)& (0+255),b
  6272  002C8A  0012               	return	
  6273  002C8C                     l5722:
  6274                           
  6275                           ; BSR set to: 0
  6276  002C8C  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6277  002C8E  0360               	mulwf	___flmul@b& (0+255),b
  6278  002C90  006F FFCC  F077    	movff	prodl,___flmul@temp
  6279  002C96  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6280                           
  6281                           ; BSR set to: 0
  6282  002C9C  5177               	movf	___flmul@temp& (0+255),w,b
  6283  002C9E  6F6E               	movwf	___flmul@grs& (0+255),b
  6284  002CA0  6B6F               	clrf	(___flmul@grs+1)& (0+255),b
  6285  002CA2  6B70               	clrf	(___flmul@grs+2)& (0+255),b
  6286  002CA4  6B71               	clrf	(___flmul@grs+3)& (0+255),b
  6287                           
  6288                           ; BSR set to: 0
  6289  002CA6  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6290  002CA8  6F73               	movwf	___flmul@prod& (0+255),b
  6291  002CAA  6B74               	clrf	(___flmul@prod+1)& (0+255),b
  6292  002CAC  6B75               	clrf	(___flmul@prod+2)& (0+255),b
  6293  002CAE  6B76               	clrf	(___flmul@prod+3)& (0+255),b
  6294  002CB0  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6295  002CB2  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6296  002CB4  006F FFCC  F077    	movff	prodl,___flmul@temp
  6297  002CBA  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6298                           
  6299                           ; BSR set to: 0
  6300  002CC0  5177               	movf	___flmul@temp& (0+255),w,b
  6301  002CC2  276E               	addwf	___flmul@grs& (0+255),f,b
  6302  002CC4  0E00               	movlw	0
  6303  002CC6  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6304  002CC8  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6305  002CCA  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6306                           
  6307                           ; BSR set to: 0
  6308  002CCC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6309  002CCE  2773               	addwf	___flmul@prod& (0+255),f,b
  6310  002CD0  0E00               	movlw	0
  6311  002CD2  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6312  002CD4  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6313  002CD6  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6314  002CD8  5164               	movf	___flmul@a& (0+255),w,b
  6315  002CDA  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6316  002CDC  006F FFCC  F077    	movff	prodl,___flmul@temp
  6317  002CE2  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6318                           
  6319                           ; BSR set to: 0
  6320  002CE8  5177               	movf	___flmul@temp& (0+255),w,b
  6321  002CEA  276E               	addwf	___flmul@grs& (0+255),f,b
  6322  002CEC  0E00               	movlw	0
  6323  002CEE  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6324  002CF0  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6325  002CF2  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6326                           
  6327                           ; BSR set to: 0
  6328  002CF4  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6329  002CF6  2773               	addwf	___flmul@prod& (0+255),f,b
  6330  002CF8  0E00               	movlw	0
  6331  002CFA  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6332  002CFC  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6333  002CFE  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6334                           
  6335                           ; BSR set to: 0
  6336  002D00  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6337  002D06  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6338  002D0C  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6339  002D12  6B6E               	clrf	___flmul@grs& (0+255),b
  6340                           
  6341                           ; BSR set to: 0
  6342  002D14  5164               	movf	___flmul@a& (0+255),w,b
  6343  002D16  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6344  002D18  006F FFCC  F077    	movff	prodl,___flmul@temp
  6345  002D1E  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6346                           
  6347                           ; BSR set to: 0
  6348  002D24  5177               	movf	___flmul@temp& (0+255),w,b
  6349  002D26  276E               	addwf	___flmul@grs& (0+255),f,b
  6350  002D28  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6351  002D2A  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6352  002D2C  0E00               	movlw	0
  6353  002D2E  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6354  002D30  0E00               	movlw	0
  6355  002D32  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6356                           
  6357                           ; BSR set to: 0
  6358  002D34  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6359  002D36  0360               	mulwf	___flmul@b& (0+255),b
  6360  002D38  006F FFCC  F077    	movff	prodl,___flmul@temp
  6361  002D3E  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6362                           
  6363                           ; BSR set to: 0
  6364  002D44  5177               	movf	___flmul@temp& (0+255),w,b
  6365  002D46  276E               	addwf	___flmul@grs& (0+255),f,b
  6366  002D48  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6367  002D4A  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6368  002D4C  0E00               	movlw	0
  6369  002D4E  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6370  002D50  0E00               	movlw	0
  6371  002D52  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6372                           
  6373                           ; BSR set to: 0
  6374  002D54  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6375  002D5A  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6376  002D60  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6377  002D66  6B6E               	clrf	___flmul@grs& (0+255),b
  6378  002D68  5164               	movf	___flmul@a& (0+255),w,b
  6379  002D6A  0360               	mulwf	___flmul@b& (0+255),b
  6380  002D6C  006F FFCC  F077    	movff	prodl,___flmul@temp
  6381  002D72  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6382                           
  6383                           ; BSR set to: 0
  6384  002D78  5177               	movf	___flmul@temp& (0+255),w,b
  6385  002D7A  276E               	addwf	___flmul@grs& (0+255),f,b
  6386  002D7C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6387  002D7E  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6388  002D80  0E00               	movlw	0
  6389  002D82  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6390  002D84  0E00               	movlw	0
  6391  002D86  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6392                           
  6393                           ; BSR set to: 0
  6394  002D88  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6395  002D8A  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6396  002D8C  006F FFCC  F077    	movff	prodl,___flmul@temp
  6397  002D92  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6398  002D98  5177               	movf	___flmul@temp& (0+255),w,b
  6399  002D9A  2773               	addwf	___flmul@prod& (0+255),f,b
  6400  002D9C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6401  002D9E  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6402  002DA0  0E00               	movlw	0
  6403  002DA2  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6404  002DA4  0E00               	movlw	0
  6405  002DA6  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6406                           
  6407                           ; BSR set to: 0
  6408  002DA8  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6409  002DAA  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6410  002DAC  006F FFCC  F077    	movff	prodl,___flmul@temp
  6411  002DB2  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6412                           
  6413                           ; BSR set to: 0
  6414  002DB8  5177               	movf	___flmul@temp& (0+255),w,b
  6415  002DBA  2773               	addwf	___flmul@prod& (0+255),f,b
  6416  002DBC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6417  002DBE  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6418  002DC0  0E00               	movlw	0
  6419  002DC2  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6420  002DC4  0E00               	movlw	0
  6421  002DC6  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6422  002DC8  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6423  002DCA  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6424  002DCC  006F FFCC  F077    	movff	prodl,___flmul@temp
  6425  002DD2  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6426                           
  6427                           ; BSR set to: 0
  6428  002DD8  5177               	movf	___flmul@temp& (0+255),w,b
  6429  002DDA  6F68               	movwf	??___flmul& (0+255),b
  6430  002DDC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6431  002DDE  6F69               	movwf	(??___flmul+1)& (0+255),b
  6432  002DE0  6B6A               	clrf	(??___flmul+2)& (0+255),b
  6433  002DE2  6B6B               	clrf	(??___flmul+3)& (0+255),b
  6434  002DE4  0060  F1A8  F06B   	movff	??___flmul+2,??___flmul+3
  6435  002DEA  0060  F1A4  F06A   	movff	??___flmul+1,??___flmul+2
  6436  002DF0  0060  F1A0  F069   	movff	??___flmul,??___flmul+1
  6437  002DF6  6B68               	clrf	??___flmul& (0+255),b
  6438  002DF8  5168               	movf	??___flmul& (0+255),w,b
  6439  002DFA  2773               	addwf	___flmul@prod& (0+255),f,b
  6440  002DFC  5169               	movf	(??___flmul+1)& (0+255),w,b
  6441  002DFE  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6442  002E00  516A               	movf	(??___flmul+2)& (0+255),w,b
  6443  002E02  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6444  002E04  516B               	movf	(??___flmul+3)& (0+255),w,b
  6445  002E06  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6446                           
  6447                           ; BSR set to: 0
  6448  002E08  0060  F1B8  F068   	movff	___flmul@grs,??___flmul
  6449  002E0E  0060  F1BC  F069   	movff	___flmul@grs+1,??___flmul+1
  6450  002E14  0060  F1C0  F06A   	movff	___flmul@grs+2,??___flmul+2
  6451  002E1A  0060  F1C4  F06B   	movff	___flmul@grs+3,??___flmul+3
  6452  002E20  0E19               	movlw	25
  6453  002E22  D005               	goto	u7280
  6454  002E24                     u7285:
  6455  002E24  90D8               	bcf	status,0,c
  6456  002E26  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  6457  002E28  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  6458  002E2A  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  6459  002E2C  3368               	rrcf	??___flmul& (0+255),f,b
  6460  002E2E                     u7280:
  6461  002E2E  2EE8               	decfsz	wreg,f,c
  6462  002E30  D7F9               	goto	u7285
  6463  002E32  5168               	movf	??___flmul& (0+255),w,b
  6464  002E34  2773               	addwf	___flmul@prod& (0+255),f,b
  6465  002E36  5169               	movf	(??___flmul+1)& (0+255),w,b
  6466  002E38  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6467  002E3A  516A               	movf	(??___flmul+2)& (0+255),w,b
  6468  002E3C  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6469  002E3E  516B               	movf	(??___flmul+3)& (0+255),w,b
  6470  002E40  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6471                           
  6472                           ; BSR set to: 0
  6473  002E42  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6474  002E48  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6475  002E4E  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6476  002E54  6B6E               	clrf	___flmul@grs& (0+255),b
  6477                           
  6478                           ; BSR set to: 0
  6479  002E56  516D               	movf	___flmul@aexp& (0+255),w,b
  6480  002E58  0060  F1C8  F068   	movff	___flmul@bexp,??___flmul
  6481  002E5E  6B69               	clrf	(??___flmul+1)& (0+255),b
  6482  002E60  2768               	addwf	??___flmul& (0+255),f,b
  6483  002E62  0E00               	movlw	0
  6484  002E64  2369               	addwfc	(??___flmul+1)& (0+255),f,b
  6485  002E66  0E82               	movlw	130
  6486  002E68  2568               	addwf	??___flmul& (0+255),w,b
  6487  002E6A  6F77               	movwf	___flmul@temp& (0+255),b
  6488  002E6C  0EFF               	movlw	255
  6489  002E6E  2169               	addwfc	(??___flmul+1)& (0+255),w,b
  6490  002E70  6F78               	movwf	(___flmul@temp+1)& (0+255),b
  6491  002E72  D00F               	goto	l5770
  6492  002E74                     l5764:
  6493                           
  6494                           ; BSR set to: 0
  6495  002E74  90D8               	bcf	status,0,c
  6496  002E76  3773               	rlcf	___flmul@prod& (0+255),f,b
  6497  002E78  3774               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6498  002E7A  3775               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6499  002E7C  3776               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6500                           
  6501                           ; BSR set to: 0
  6502  002E7E  BF71               	btfsc	(___flmul@grs+3)& (0+255),7,b
  6503                           
  6504                           ; BSR set to: 0
  6505  002E80  8173               	bsf	___flmul@prod& (0+255),0,b
  6506                           
  6507                           ; BSR set to: 0
  6508  002E82  90D8               	bcf	status,0,c
  6509  002E84  376E               	rlcf	___flmul@grs& (0+255),f,b
  6510  002E86  376F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6511  002E88  3770               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6512  002E8A  3771               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6513  002E8C  0777               	decf	___flmul@temp& (0+255),f,b
  6514  002E8E  A0D8               	btfss	status,0,c
  6515  002E90  0778               	decf	(___flmul@temp+1)& (0+255),f,b
  6516  002E92                     l5770:
  6517                           
  6518                           ; BSR set to: 0
  6519  002E92  AF75               	btfss	(___flmul@prod+2)& (0+255),7,b
  6520  002E94  D7EF               	goto	l5764
  6521                           
  6522                           ; BSR set to: 0
  6523  002E96  0E00               	movlw	0
  6524  002E98  6F6D               	movwf	___flmul@aexp& (0+255),b
  6525                           
  6526                           ; BSR set to: 0
  6527  002E9A  AF71               	btfss	(___flmul@grs+3)& (0+255),7,b
  6528  002E9C  D017               	goto	l1250
  6529                           
  6530                           ; BSR set to: 0
  6531  002E9E  0EFF               	movlw	255
  6532  002EA0  156E               	andwf	___flmul@grs& (0+255),w,b
  6533  002EA2  6F68               	movwf	??___flmul& (0+255),b
  6534  002EA4  0EFF               	movlw	255
  6535  002EA6  156F               	andwf	(___flmul@grs+1)& (0+255),w,b
  6536  002EA8  6F69               	movwf	(??___flmul+1)& (0+255),b
  6537  002EAA  0EFF               	movlw	255
  6538  002EAC  1570               	andwf	(___flmul@grs+2)& (0+255),w,b
  6539  002EAE  6F6A               	movwf	(??___flmul+2)& (0+255),b
  6540  002EB0  0E7F               	movlw	127
  6541  002EB2  1571               	andwf	(___flmul@grs+3)& (0+255),w,b
  6542  002EB4  6F6B               	movwf	(??___flmul+3)& (0+255),b
  6543  002EB6  5168               	movf	??___flmul& (0+255),w,b
  6544  002EB8  1169               	iorwf	(??___flmul+1)& (0+255),w,b
  6545  002EBA  116A               	iorwf	(??___flmul+2)& (0+255),w,b
  6546  002EBC  116B               	iorwf	(??___flmul+3)& (0+255),w,b
  6547  002EBE  B4D8               	btfsc	status,2,c
  6548  002EC0  D003               	goto	l1251
  6549  002EC2                     u7320:
  6550                           
  6551                           ; BSR set to: 0
  6552  002EC2  0E01               	movlw	1
  6553  002EC4  6F6D               	movwf	___flmul@aexp& (0+255),b
  6554  002EC6  D002               	goto	l1250
  6555  002EC8                     l1251:
  6556                           
  6557                           ; BSR set to: 0
  6558  002EC8  B173               	btfsc	___flmul@prod& (0+255),0,b
  6559  002ECA  D7FB               	goto	u7320
  6560  002ECC                     l1250:
  6561                           
  6562                           ; BSR set to: 0
  6563  002ECC  516D               	movf	___flmul@aexp& (0+255),w,b
  6564  002ECE  B4D8               	btfsc	status,2,c
  6565  002ED0  D027               	goto	l5790
  6566                           
  6567                           ; BSR set to: 0
  6568  002ED2  0E01               	movlw	1
  6569  002ED4  2773               	addwf	___flmul@prod& (0+255),f,b
  6570  002ED6  0E00               	movlw	0
  6571  002ED8  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6572  002EDA  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6573  002EDC  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6574                           
  6575                           ; BSR set to: 0
  6576  002EDE  A176               	btfss	(___flmul@prod+3)& (0+255),0,b
  6577  002EE0  D01F               	goto	l5790
  6578                           
  6579                           ; BSR set to: 0
  6580  002EE2  0060  F1CC  F068   	movff	___flmul@prod,??___flmul
  6581  002EE8  0060  F1D0  F069   	movff	___flmul@prod+1,??___flmul+1
  6582  002EEE  0060  F1D4  F06A   	movff	___flmul@prod+2,??___flmul+2
  6583  002EF4  0060  F1D8  F06B   	movff	___flmul@prod+3,??___flmul+3
  6584  002EFA  356B               	rlcf	(??___flmul+3)& (0+255),w,b
  6585  002EFC  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  6586  002EFE  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  6587  002F00  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  6588  002F02  3368               	rrcf	??___flmul& (0+255),f,b
  6589  002F04  0060  F1A0  F073   	movff	??___flmul,___flmul@prod
  6590  002F0A  0060  F1A4  F074   	movff	??___flmul+1,___flmul@prod+1
  6591  002F10  0060  F1A8  F075   	movff	??___flmul+2,___flmul@prod+2
  6592  002F16  0060  F1AC  F076   	movff	??___flmul+3,___flmul@prod+3
  6593                           
  6594                           ; BSR set to: 0
  6595  002F1C  4B77               	infsnz	___flmul@temp& (0+255),f,b
  6596  002F1E  2B78               	incf	(___flmul@temp+1)& (0+255),f,b
  6597  002F20                     l5790:
  6598                           
  6599                           ; BSR set to: 0
  6600  002F20  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6601  002F22  D00D               	goto	l5794
  6602  002F24  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6603  002F26  E103               	bnz	u7360
  6604  002F28  2977               	incf	___flmul@temp& (0+255),w,b
  6605  002F2A  A0D8               	btfss	status,0,c
  6606  002F2C  D008               	goto	l5794
  6607  002F2E                     u7360:
  6608                           
  6609                           ; BSR set to: 0
  6610  002F2E  0E00               	movlw	0
  6611  002F30  6F73               	movwf	___flmul@prod& (0+255),b
  6612  002F32  0E00               	movlw	0
  6613  002F34  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6614  002F36  0E80               	movlw	128
  6615  002F38  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6616  002F3A  0E7F               	movlw	127
  6617  002F3C  D021               	goto	L9
  6618  002F3E                     l5794:
  6619                           
  6620                           ; BSR set to: 0
  6621  002F3E  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6622  002F40  D005               	goto	u7370
  6623  002F42  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6624  002F44  E10E               	bnz	l1258
  6625  002F46  0577               	decf	___flmul@temp& (0+255),w,b
  6626  002F48  B0D8               	btfsc	status,0,c
  6627  002F4A  D00B               	goto	l1258
  6628  002F4C                     u7370:
  6629                           
  6630                           ; BSR set to: 0
  6631  002F4C  0E00               	movlw	0
  6632  002F4E  6F73               	movwf	___flmul@prod& (0+255),b
  6633  002F50  0E00               	movlw	0
  6634  002F52  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6635  002F54  0E00               	movlw	0
  6636  002F56  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6637  002F58  0E00               	movlw	0
  6638  002F5A  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6639  002F5C  0E00               	movlw	0
  6640  002F5E  6F6C               	movwf	___flmul@sign& (0+255),b
  6641  002F60  D010               	goto	l5806
  6642  002F62                     l1258:
  6643                           
  6644                           ; BSR set to: 0
  6645  002F62  0060  F1DC  F072   	movff	___flmul@temp,___flmul@bexp
  6646                           
  6647                           ; BSR set to: 0
  6648  002F68  0EFF               	movlw	255
  6649  002F6A  1773               	andwf	___flmul@prod& (0+255),f,b
  6650  002F6C  0EFF               	movlw	255
  6651  002F6E  1774               	andwf	(___flmul@prod+1)& (0+255),f,b
  6652  002F70  0E7F               	movlw	127
  6653  002F72  1775               	andwf	(___flmul@prod+2)& (0+255),f,b
  6654  002F74  0E00               	movlw	0
  6655  002F76  1776               	andwf	(___flmul@prod+3)& (0+255),f,b
  6656                           
  6657                           ; BSR set to: 0
  6658  002F78  B172               	btfsc	___flmul@bexp& (0+255),0,b
  6659                           
  6660                           ; BSR set to: 0
  6661  002F7A  8F75               	bsf	(___flmul@prod+2)& (0+255),7,b
  6662                           
  6663                           ; BSR set to: 0
  6664  002F7C  90D8               	bcf	status,0,c
  6665  002F7E  3172               	rrcf	___flmul@bexp& (0+255),w,b
  6666  002F80                     L9:
  6667  002F80  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6668  002F82                     l5806:
  6669                           
  6670                           ; BSR set to: 0
  6671  002F82  516C               	movf	___flmul@sign& (0+255),w,b
  6672  002F84  1376               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6673                           
  6674                           ; BSR set to: 0
  6675  002F86  0060  F1CC  F060   	movff	___flmul@prod,?___flmul
  6676  002F8C  0060  F1D0  F061   	movff	___flmul@prod+1,?___flmul+1
  6677  002F92  0060  F1D4  F062   	movff	___flmul@prod+2,?___flmul+2
  6678  002F98  0060  F1D8  F063   	movff	___flmul@prod+3,?___flmul+3
  6679                           
  6680                           ; BSR set to: 0
  6681  002F9E  0012               	return		;funcret
  6682  002FA0                     __end_of___flmul:
  6683                           	opt callstack 0
  6684                           
  6685 ;; *************** function ___flge *****************
  6686 ;; Defined at:
  6687 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;  ff1             4   25[BANK0 ] unsigned char 
  6690 ;;  ff2             4   29[BANK0 ] unsigned char 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;		None
  6693 ;; Return value:  Size  Location     Type
  6694 ;;		None               void
  6695 ;; Registers used:
  6696 ;;		wreg, status,2, status,0
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6702 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6704 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6705 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6706 ;;Total ram usage:       12 bytes
  6707 ;; Hardware stack levels used:    1
  6708 ;; Hardware stack levels required when called:    2
  6709 ;; This function calls:
  6710 ;;		Nothing
  6711 ;; This function is called by:
  6712 ;;		_efgtoa
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           	psect	text23
  6717  0044B0                     __ptext23:
  6718                           	opt callstack 0
  6719  0044B0                     ___flge:
  6720                           	opt callstack 23
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;incstack = 0
  6724  0044B0  0E00               	movlw	0
  6725  0044B2  0100               	movlb	0	; () banked
  6726  0044B4  1579               	andwf	___flge@ff1& (0+255),w,b
  6727  0044B6  6F81               	movwf	??___flge& (0+255),b
  6728  0044B8  0E00               	movlw	0
  6729  0044BA  157A               	andwf	(___flge@ff1+1)& (0+255),w,b
  6730  0044BC  6F82               	movwf	(??___flge+1)& (0+255),b
  6731  0044BE  0E80               	movlw	128
  6732  0044C0  157B               	andwf	(___flge@ff1+2)& (0+255),w,b
  6733  0044C2  6F83               	movwf	(??___flge+2)& (0+255),b
  6734  0044C4  0E7F               	movlw	127
  6735  0044C6  157C               	andwf	(___flge@ff1+3)& (0+255),w,b
  6736  0044C8  6F84               	movwf	(??___flge+3)& (0+255),b
  6737  0044CA  5181               	movf	??___flge& (0+255),w,b
  6738  0044CC  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6739  0044CE  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6740  0044D0  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6741  0044D2  A4D8               	btfss	status,2,c
  6742  0044D4  D008               	goto	l4038
  6743                           
  6744                           ; BSR set to: 0
  6745  0044D6  0E00               	movlw	0
  6746  0044D8  6F79               	movwf	___flge@ff1& (0+255),b
  6747  0044DA  0E00               	movlw	0
  6748  0044DC  6F7A               	movwf	(___flge@ff1+1)& (0+255),b
  6749  0044DE  0E00               	movlw	0
  6750  0044E0  6F7B               	movwf	(___flge@ff1+2)& (0+255),b
  6751  0044E2  0E00               	movlw	0
  6752  0044E4  6F7C               	movwf	(___flge@ff1+3)& (0+255),b
  6753  0044E6                     l4038:
  6754                           
  6755                           ; BSR set to: 0
  6756  0044E6  0E00               	movlw	0
  6757  0044E8  157D               	andwf	___flge@ff2& (0+255),w,b
  6758  0044EA  6F81               	movwf	??___flge& (0+255),b
  6759  0044EC  0E00               	movlw	0
  6760  0044EE  157E               	andwf	(___flge@ff2+1)& (0+255),w,b
  6761  0044F0  6F82               	movwf	(??___flge+1)& (0+255),b
  6762  0044F2  0E80               	movlw	128
  6763  0044F4  157F               	andwf	(___flge@ff2+2)& (0+255),w,b
  6764  0044F6  6F83               	movwf	(??___flge+2)& (0+255),b
  6765  0044F8  0E7F               	movlw	127
  6766  0044FA  1580               	andwf	(___flge@ff2+3)& (0+255),w,b
  6767  0044FC  6F84               	movwf	(??___flge+3)& (0+255),b
  6768  0044FE  5181               	movf	??___flge& (0+255),w,b
  6769  004500  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6770  004502  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6771  004504  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6772  004506  A4D8               	btfss	status,2,c
  6773  004508  D008               	goto	l4042
  6774                           
  6775                           ; BSR set to: 0
  6776  00450A  0E00               	movlw	0
  6777  00450C  6F7D               	movwf	___flge@ff2& (0+255),b
  6778  00450E  0E00               	movlw	0
  6779  004510  6F7E               	movwf	(___flge@ff2+1)& (0+255),b
  6780  004512  0E00               	movlw	0
  6781  004514  6F7F               	movwf	(___flge@ff2+2)& (0+255),b
  6782  004516  0E00               	movlw	0
  6783  004518  6F80               	movwf	(___flge@ff2+3)& (0+255),b
  6784  00451A                     l4042:
  6785                           
  6786                           ; BSR set to: 0
  6787  00451A  AF7C               	btfss	(___flge@ff1+3)& (0+255),7,b
  6788  00451C  D009               	goto	l4046
  6789                           
  6790                           ; BSR set to: 0
  6791  00451E  6D79               	negf	___flge@ff1& (0+255),b
  6792  004520  1F7A               	comf	(___flge@ff1+1)& (0+255),f,b
  6793  004522  B0D8               	btfsc	status,0,c
  6794  004524  2B7A               	incf	(___flge@ff1+1)& (0+255),f,b
  6795  004526  1F7B               	comf	(___flge@ff1+2)& (0+255),f,b
  6796  004528  B0D8               	btfsc	status,0,c
  6797  00452A  2B7B               	incf	(___flge@ff1+2)& (0+255),f,b
  6798  00452C  0E80               	movlw	128
  6799  00452E  577C               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6800  004530                     l4046:
  6801                           
  6802                           ; BSR set to: 0
  6803  004530  AF80               	btfss	(___flge@ff2+3)& (0+255),7,b
  6804  004532  D009               	goto	l892
  6805                           
  6806                           ; BSR set to: 0
  6807  004534  6D7D               	negf	___flge@ff2& (0+255),b
  6808  004536  1F7E               	comf	(___flge@ff2+1)& (0+255),f,b
  6809  004538  B0D8               	btfsc	status,0,c
  6810  00453A  2B7E               	incf	(___flge@ff2+1)& (0+255),f,b
  6811  00453C  1F7F               	comf	(___flge@ff2+2)& (0+255),f,b
  6812  00453E  B0D8               	btfsc	status,0,c
  6813  004540  2B7F               	incf	(___flge@ff2+2)& (0+255),f,b
  6814  004542  0E80               	movlw	128
  6815  004544  5780               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6816  004546                     l892:
  6817                           
  6818                           ; BSR set to: 0
  6819  004546  0E00               	movlw	0
  6820  004548  1B79               	xorwf	___flge@ff1& (0+255),f,b
  6821  00454A  0E00               	movlw	0
  6822  00454C  1B7A               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6823  00454E  0E00               	movlw	0
  6824  004550  1B7B               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6825  004552  0E80               	movlw	128
  6826  004554  1B7C               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6827  004556  0E00               	movlw	0
  6828  004558  1B7D               	xorwf	___flge@ff2& (0+255),f,b
  6829  00455A  0E00               	movlw	0
  6830  00455C  1B7E               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6831  00455E  0E00               	movlw	0
  6832  004560  1B7F               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6833  004562  0E80               	movlw	128
  6834  004564  1B80               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6835  004566  517D               	movf	___flge@ff2& (0+255),w,b
  6836  004568  5D79               	subwf	___flge@ff1& (0+255),w,b
  6837  00456A  517E               	movf	(___flge@ff2+1)& (0+255),w,b
  6838  00456C  597A               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6839  00456E  517F               	movf	(___flge@ff2+2)& (0+255),w,b
  6840  004570  597B               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6841  004572  5180               	movf	(___flge@ff2+3)& (0+255),w,b
  6842  004574  597C               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6843  004576  B0D8               	btfsc	status,0,c
  6844  004578  D002               	goto	l4052
  6845                           
  6846                           ; BSR set to: 0
  6847  00457A  90D8               	bcf	status,0,c
  6848  00457C  0012               	return	
  6849  00457E                     l4052:
  6850                           
  6851                           ; BSR set to: 0
  6852  00457E  80D8               	bsf	status,0,c
  6853                           
  6854                           ; BSR set to: 0
  6855  004580  0012               	return		;funcret
  6856  004582                     __end_of___flge:
  6857                           	opt callstack 0
  6858                           
  6859 ;; *************** function ___fleq *****************
  6860 ;; Defined at:
  6861 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  ff1             4    0[BANK0 ] unsigned char 
  6864 ;;  ff2             4    4[BANK0 ] unsigned char 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;		None               void
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6876 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6878 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6879 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6880 ;;Total ram usage:       12 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:    2
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_efgtoa
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text24
  6891  004A90                     __ptext24:
  6892                           	opt callstack 0
  6893  004A90                     ___fleq:
  6894                           	opt callstack 23
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;incstack = 0
  6898  004A90  0E00               	movlw	0
  6899  004A92  0100               	movlb	0	; () banked
  6900  004A94  1560               	andwf	___fleq@ff1& (0+255),w,b
  6901  004A96  6F68               	movwf	??___fleq& (0+255),b
  6902  004A98  0E00               	movlw	0
  6903  004A9A  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6904  004A9C  6F69               	movwf	(??___fleq+1)& (0+255),b
  6905  004A9E  0E80               	movlw	128
  6906  004AA0  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6907  004AA2  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6908  004AA4  0E7F               	movlw	127
  6909  004AA6  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6910  004AA8  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6911  004AAA  5168               	movf	??___fleq& (0+255),w,b
  6912  004AAC  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6913  004AAE  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6914  004AB0  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6915  004AB2  A4D8               	btfss	status,2,c
  6916  004AB4  D008               	goto	l5902
  6917                           
  6918                           ; BSR set to: 0
  6919  004AB6  0E00               	movlw	0
  6920  004AB8  6F60               	movwf	___fleq@ff1& (0+255),b
  6921  004ABA  0E00               	movlw	0
  6922  004ABC  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6923  004ABE  0E00               	movlw	0
  6924  004AC0  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6925  004AC2  0E00               	movlw	0
  6926  004AC4  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6927  004AC6                     l5902:
  6928                           
  6929                           ; BSR set to: 0
  6930  004AC6  0E00               	movlw	0
  6931  004AC8  1564               	andwf	___fleq@ff2& (0+255),w,b
  6932  004ACA  6F68               	movwf	??___fleq& (0+255),b
  6933  004ACC  0E00               	movlw	0
  6934  004ACE  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6935  004AD0  6F69               	movwf	(??___fleq+1)& (0+255),b
  6936  004AD2  0E80               	movlw	128
  6937  004AD4  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6938  004AD6  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6939  004AD8  0E7F               	movlw	127
  6940  004ADA  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6941  004ADC  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6942  004ADE  5168               	movf	??___fleq& (0+255),w,b
  6943  004AE0  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6944  004AE2  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6945  004AE4  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6946  004AE6  A4D8               	btfss	status,2,c
  6947  004AE8  D008               	goto	l5906
  6948                           
  6949                           ; BSR set to: 0
  6950  004AEA  0E00               	movlw	0
  6951  004AEC  6F64               	movwf	___fleq@ff2& (0+255),b
  6952  004AEE  0E00               	movlw	0
  6953  004AF0  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6954  004AF2  0E00               	movlw	0
  6955  004AF4  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6956  004AF6  0E00               	movlw	0
  6957  004AF8  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6958  004AFA                     l5906:
  6959                           
  6960                           ; BSR set to: 0
  6961  004AFA  5164               	movf	___fleq@ff2& (0+255),w,b
  6962  004AFC  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6963  004AFE  E10A               	bnz	u7530
  6964  004B00  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6965  004B02  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6966  004B04  E107               	bnz	u7530
  6967  004B06  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6968  004B08  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6969  004B0A  E104               	bnz	u7530
  6970  004B0C  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6971  004B0E  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6972  004B10  B4D8               	btfsc	status,2,c
  6973  004B12  D002               	goto	l5910
  6974  004B14                     u7530:
  6975                           
  6976                           ; BSR set to: 0
  6977  004B14  90D8               	bcf	status,0,c
  6978  004B16  0012               	return	
  6979  004B18                     l5910:
  6980                           
  6981                           ; BSR set to: 0
  6982  004B18  80D8               	bsf	status,0,c
  6983                           
  6984                           ; BSR set to: 0
  6985  004B1A  0012               	return		;funcret
  6986  004B1C                     __end_of___fleq:
  6987                           	opt callstack 0
  6988                           
  6989 ;; *************** function ___fldiv *****************
  6990 ;; Defined at:
  6991 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  b               4    0[BANK0 ] unsigned char 
  6994 ;;  a               4    4[BANK0 ] unsigned char 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  grs             4   19[BANK0 ] unsigned long 
  6997 ;;  rem             4   12[BANK0 ] unsigned long 
  6998 ;;  new_exp         2   17[BANK0 ] short 
  6999 ;;  aexp            1   24[BANK0 ] unsigned char 
  7000 ;;  bexp            1   23[BANK0 ] unsigned char 
  7001 ;;  sign            1   16[BANK0 ] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  4    0[BANK0 ] unsigned char 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7011 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7012 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7013 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7014 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7015 ;;Total ram usage:       25 bytes
  7016 ;; Hardware stack levels used:    1
  7017 ;; Hardware stack levels required when called:    2
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_efgtoa
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text25
  7026  003A32                     __ptext25:
  7027                           	opt callstack 0
  7028  003A32                     ___fldiv:
  7029                           	opt callstack 23
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;incstack = 0
  7033  003A32  0100               	movlb	0	; () banked
  7034  003A34  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7035  003A36  0B80               	andlw	128
  7036  003A38  6F70               	movwf	___fldiv@sign& (0+255),b
  7037  003A3A  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7038  003A3C  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  7039  003A3E  6F77               	movwf	___fldiv@bexp& (0+255),b
  7040                           
  7041                           ; BSR set to: 0
  7042  003A40  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  7043                           
  7044                           ; BSR set to: 0
  7045  003A42  8177               	bsf	___fldiv@bexp& (0+255),0,b
  7046                           
  7047                           ; BSR set to: 0
  7048  003A44  5177               	movf	___fldiv@bexp& (0+255),w,b
  7049  003A46  B4D8               	btfsc	status,2,c
  7050  003A48  D00D               	goto	l5560
  7051                           
  7052                           ; BSR set to: 0
  7053  003A4A  2977               	incf	___fldiv@bexp& (0+255),w,b
  7054  003A4C  A4D8               	btfss	status,2,c
  7055  003A4E  D008               	goto	l5556
  7056                           
  7057                           ; BSR set to: 0
  7058  003A50  0E00               	movlw	0
  7059  003A52  6F60               	movwf	___fldiv@b& (0+255),b
  7060  003A54  0E00               	movlw	0
  7061  003A56  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7062  003A58  0E00               	movlw	0
  7063  003A5A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7064  003A5C  0E00               	movlw	0
  7065  003A5E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7066  003A60                     l5556:
  7067                           
  7068                           ; BSR set to: 0
  7069  003A60  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7070  003A62  D006               	goto	L10
  7071  003A64                     l5560:
  7072                           
  7073                           ; BSR set to: 0
  7074  003A64  0E00               	movlw	0
  7075  003A66  6F60               	movwf	___fldiv@b& (0+255),b
  7076  003A68  0E00               	movlw	0
  7077  003A6A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7078  003A6C  0E00               	movlw	0
  7079  003A6E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7080  003A70                     L10:
  7081  003A70  0E00               	movlw	0
  7082  003A72  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7083                           
  7084                           ; BSR set to: 0
  7085  003A74  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7086  003A76  0B80               	andlw	128
  7087  003A78  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  7088                           
  7089                           ; BSR set to: 0
  7090  003A7A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7091  003A7C  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  7092  003A7E  6F78               	movwf	___fldiv@aexp& (0+255),b
  7093                           
  7094                           ; BSR set to: 0
  7095  003A80  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  7096                           
  7097                           ; BSR set to: 0
  7098  003A82  8178               	bsf	___fldiv@aexp& (0+255),0,b
  7099                           
  7100                           ; BSR set to: 0
  7101  003A84  5178               	movf	___fldiv@aexp& (0+255),w,b
  7102  003A86  B4D8               	btfsc	status,2,c
  7103  003A88  D00D               	goto	l5580
  7104                           
  7105                           ; BSR set to: 0
  7106  003A8A  2978               	incf	___fldiv@aexp& (0+255),w,b
  7107  003A8C  A4D8               	btfss	status,2,c
  7108  003A8E  D008               	goto	l5576
  7109                           
  7110                           ; BSR set to: 0
  7111  003A90  0E00               	movlw	0
  7112  003A92  6F64               	movwf	___fldiv@a& (0+255),b
  7113  003A94  0E00               	movlw	0
  7114  003A96  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7115  003A98  0E00               	movlw	0
  7116  003A9A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7117  003A9C  0E00               	movlw	0
  7118  003A9E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7119  003AA0                     l5576:
  7120                           
  7121                           ; BSR set to: 0
  7122  003AA0  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  7123  003AA2  D006               	goto	L11
  7124  003AA4                     l5580:
  7125                           
  7126                           ; BSR set to: 0
  7127  003AA4  0E00               	movlw	0
  7128  003AA6  6F64               	movwf	___fldiv@a& (0+255),b
  7129  003AA8  0E00               	movlw	0
  7130  003AAA  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7131  003AAC  0E00               	movlw	0
  7132  003AAE  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7133  003AB0                     L11:
  7134  003AB0  0E00               	movlw	0
  7135  003AB2  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7136                           
  7137                           ; BSR set to: 0
  7138  003AB4  5164               	movf	___fldiv@a& (0+255),w,b
  7139  003AB6  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7140  003AB8  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7141  003ABA  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7142  003ABC  A4D8               	btfss	status,2,c
  7143  003ABE  D01B               	goto	l5594
  7144                           
  7145                           ; BSR set to: 0
  7146  003AC0  0E00               	movlw	0
  7147  003AC2  6F60               	movwf	___fldiv@b& (0+255),b
  7148  003AC4  0E00               	movlw	0
  7149  003AC6  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7150  003AC8  0E00               	movlw	0
  7151  003ACA  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7152  003ACC  0E00               	movlw	0
  7153  003ACE  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7154                           
  7155                           ; BSR set to: 0
  7156  003AD0  0E80               	movlw	128
  7157  003AD2  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7158  003AD4  0E7F               	movlw	127
  7159  003AD6  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7160  003AD8                     l5588:
  7161                           
  7162                           ; BSR set to: 0
  7163  003AD8  5170               	movf	___fldiv@sign& (0+255),w,b
  7164  003ADA  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7165                           
  7166                           ; BSR set to: 0
  7167  003ADC  0060  F180  F060   	movff	___fldiv@b,?___fldiv
  7168  003AE2  0060  F184  F061   	movff	___fldiv@b+1,?___fldiv+1
  7169  003AE8  0060  F188  F062   	movff	___fldiv@b+2,?___fldiv+2
  7170  003AEE  0060  F18C  F063   	movff	___fldiv@b+3,?___fldiv+3
  7171  003AF4  0012               	return	
  7172  003AF6                     l5594:
  7173                           
  7174                           ; BSR set to: 0
  7175  003AF6  5177               	movf	___fldiv@bexp& (0+255),w,b
  7176  003AF8  A4D8               	btfss	status,2,c
  7177  003AFA  D009               	goto	l5602
  7178                           
  7179                           ; BSR set to: 0
  7180                           
  7181                           ; BSR set to: 0
  7182  003AFC  0E00               	movlw	0
  7183  003AFE  6F60               	movwf	?___fldiv& (0+255),b
  7184  003B00  0E00               	movlw	0
  7185  003B02  6F61               	movwf	(?___fldiv+1)& (0+255),b
  7186  003B04  0E00               	movlw	0
  7187  003B06  6F62               	movwf	(?___fldiv+2)& (0+255),b
  7188  003B08  0E00               	movlw	0
  7189  003B0A  6F63               	movwf	(?___fldiv+3)& (0+255),b
  7190  003B0C  0012               	return	
  7191  003B0E                     l5602:
  7192                           
  7193                           ; BSR set to: 0
  7194  003B0E  5178               	movf	___fldiv@aexp& (0+255),w,b
  7195  003B10  0060  F1DC  F068   	movff	___fldiv@bexp,??___fldiv
  7196  003B16  6B69               	clrf	(??___fldiv+1)& (0+255),b
  7197  003B18  5F68               	subwf	??___fldiv& (0+255),f,b
  7198  003B1A  0E00               	movlw	0
  7199  003B1C  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  7200  003B1E  0E7F               	movlw	127
  7201  003B20  2568               	addwf	??___fldiv& (0+255),w,b
  7202  003B22  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7203  003B24  0E00               	movlw	0
  7204  003B26  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  7205  003B28  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7206                           
  7207                           ; BSR set to: 0
  7208  003B2A  0060  F180  F06C   	movff	___fldiv@b,___fldiv@rem
  7209  003B30  0060  F184  F06D   	movff	___fldiv@b+1,___fldiv@rem+1
  7210  003B36  0060  F188  F06E   	movff	___fldiv@b+2,___fldiv@rem+2
  7211  003B3C  0060  F18C  F06F   	movff	___fldiv@b+3,___fldiv@rem+3
  7212                           
  7213                           ; BSR set to: 0
  7214  003B42  0E00               	movlw	0
  7215  003B44  6F60               	movwf	___fldiv@b& (0+255),b
  7216  003B46  0E00               	movlw	0
  7217  003B48  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7218  003B4A  0E00               	movlw	0
  7219  003B4C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7220  003B4E  0E00               	movlw	0
  7221  003B50  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7222                           
  7223                           ; BSR set to: 0
  7224  003B52  0E00               	movlw	0
  7225  003B54  6F73               	movwf	___fldiv@grs& (0+255),b
  7226  003B56  0E00               	movlw	0
  7227  003B58  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  7228  003B5A  0E00               	movlw	0
  7229  003B5C  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  7230  003B5E  0E00               	movlw	0
  7231  003B60  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  7232                           
  7233                           ; BSR set to: 0
  7234  003B62  0E00               	movlw	0
  7235  003B64  6F78               	movwf	___fldiv@aexp& (0+255),b
  7236  003B66  D028               	goto	l1211
  7237  003B68                     l5612:
  7238                           
  7239                           ; BSR set to: 0
  7240  003B68  5178               	movf	___fldiv@aexp& (0+255),w,b
  7241  003B6A  B4D8               	btfsc	status,2,c
  7242  003B6C  D011               	goto	l5620
  7243                           
  7244                           ; BSR set to: 0
  7245  003B6E  90D8               	bcf	status,0,c
  7246  003B70  376C               	rlcf	___fldiv@rem& (0+255),f,b
  7247  003B72  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7248  003B74  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7249  003B76  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7250  003B78  90D8               	bcf	status,0,c
  7251  003B7A  3760               	rlcf	___fldiv@b& (0+255),f,b
  7252  003B7C  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7253  003B7E  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7254  003B80  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7255                           
  7256                           ; BSR set to: 0
  7257  003B82  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7258                           
  7259                           ; BSR set to: 0
  7260  003B84  8160               	bsf	___fldiv@b& (0+255),0,b
  7261                           
  7262                           ; BSR set to: 0
  7263  003B86  90D8               	bcf	status,0,c
  7264  003B88  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7265  003B8A  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7266  003B8C  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7267  003B8E  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7268  003B90                     l5620:
  7269                           
  7270                           ; BSR set to: 0
  7271  003B90  5164               	movf	___fldiv@a& (0+255),w,b
  7272  003B92  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  7273  003B94  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7274  003B96  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7275  003B98  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7276  003B9A  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7277  003B9C  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7278  003B9E  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7279  003BA0  A0D8               	btfss	status,0,c
  7280  003BA2  D009               	goto	l5626
  7281                           
  7282                           ; BSR set to: 0
  7283  003BA4  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7284                           
  7285                           ; BSR set to: 0
  7286  003BA6  5164               	movf	___fldiv@a& (0+255),w,b
  7287  003BA8  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  7288  003BAA  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7289  003BAC  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7290  003BAE  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7291  003BB0  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7292  003BB2  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7293  003BB4  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7294  003BB6                     l5626:
  7295                           
  7296                           ; BSR set to: 0
  7297  003BB6  2B78               	incf	___fldiv@aexp& (0+255),f,b
  7298  003BB8                     l1211:
  7299                           
  7300                           ; BSR set to: 0
  7301  003BB8  0E19               	movlw	25
  7302  003BBA  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  7303  003BBC  D7D5               	goto	l5612
  7304                           
  7305                           ; BSR set to: 0
  7306  003BBE  516C               	movf	___fldiv@rem& (0+255),w,b
  7307  003BC0  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7308  003BC2  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7309  003BC4  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7310  003BC6  B4D8               	btfsc	status,2,c
  7311  003BC8  D011               	goto	l5638
  7312                           
  7313                           ; BSR set to: 0
  7314  003BCA  8173               	bsf	___fldiv@grs& (0+255),0,b
  7315  003BCC  D00F               	goto	l5638
  7316  003BCE                     l5632:
  7317                           
  7318                           ; BSR set to: 0
  7319  003BCE  90D8               	bcf	status,0,c
  7320  003BD0  3760               	rlcf	___fldiv@b& (0+255),f,b
  7321  003BD2  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7322  003BD4  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7323  003BD6  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7324                           
  7325                           ; BSR set to: 0
  7326  003BD8  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7327                           
  7328                           ; BSR set to: 0
  7329  003BDA  8160               	bsf	___fldiv@b& (0+255),0,b
  7330                           
  7331                           ; BSR set to: 0
  7332  003BDC  90D8               	bcf	status,0,c
  7333  003BDE  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7334  003BE0  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7335  003BE2  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7336  003BE4  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7337  003BE6  0771               	decf	___fldiv@new_exp& (0+255),f,b
  7338  003BE8  A0D8               	btfss	status,0,c
  7339  003BEA  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7340  003BEC                     l5638:
  7341                           
  7342                           ; BSR set to: 0
  7343  003BEC  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  7344  003BEE  D7EF               	goto	l5632
  7345                           
  7346                           ; BSR set to: 0
  7347  003BF0  0E00               	movlw	0
  7348  003BF2  6F78               	movwf	___fldiv@aexp& (0+255),b
  7349                           
  7350                           ; BSR set to: 0
  7351  003BF4  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7352  003BF6  D017               	goto	l1222
  7353                           
  7354                           ; BSR set to: 0
  7355  003BF8  0EFF               	movlw	255
  7356  003BFA  1573               	andwf	___fldiv@grs& (0+255),w,b
  7357  003BFC  6F68               	movwf	??___fldiv& (0+255),b
  7358  003BFE  0EFF               	movlw	255
  7359  003C00  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7360  003C02  6F69               	movwf	(??___fldiv+1)& (0+255),b
  7361  003C04  0EFF               	movlw	255
  7362  003C06  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7363  003C08  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  7364  003C0A  0E7F               	movlw	127
  7365  003C0C  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7366  003C0E  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  7367  003C10  5168               	movf	??___fldiv& (0+255),w,b
  7368  003C12  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  7369  003C14  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  7370  003C16  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  7371  003C18  B4D8               	btfsc	status,2,c
  7372  003C1A  D003               	goto	l1223
  7373  003C1C                     u7130:
  7374                           
  7375                           ; BSR set to: 0
  7376  003C1C  0E01               	movlw	1
  7377  003C1E  6F78               	movwf	___fldiv@aexp& (0+255),b
  7378  003C20  D002               	goto	l1222
  7379  003C22                     l1223:
  7380                           
  7381                           ; BSR set to: 0
  7382  003C22  B160               	btfsc	___fldiv@b& (0+255),0,b
  7383  003C24  D7FB               	goto	u7130
  7384  003C26                     l1222:
  7385                           
  7386                           ; BSR set to: 0
  7387  003C26  5178               	movf	___fldiv@aexp& (0+255),w,b
  7388  003C28  B4D8               	btfsc	status,2,c
  7389  003C2A  D027               	goto	l5658
  7390                           
  7391                           ; BSR set to: 0
  7392  003C2C  0E01               	movlw	1
  7393  003C2E  2760               	addwf	___fldiv@b& (0+255),f,b
  7394  003C30  0E00               	movlw	0
  7395  003C32  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7396  003C34  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7397  003C36  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7398                           
  7399                           ; BSR set to: 0
  7400  003C38  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  7401  003C3A  D01F               	goto	l5658
  7402                           
  7403                           ; BSR set to: 0
  7404  003C3C  0060  F180  F068   	movff	___fldiv@b,??___fldiv
  7405  003C42  0060  F184  F069   	movff	___fldiv@b+1,??___fldiv+1
  7406  003C48  0060  F188  F06A   	movff	___fldiv@b+2,??___fldiv+2
  7407  003C4E  0060  F18C  F06B   	movff	___fldiv@b+3,??___fldiv+3
  7408  003C54  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  7409  003C56  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  7410  003C58  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  7411  003C5A  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  7412  003C5C  3368               	rrcf	??___fldiv& (0+255),f,b
  7413  003C5E  0060  F1A0  F060   	movff	??___fldiv,___fldiv@b
  7414  003C64  0060  F1A4  F061   	movff	??___fldiv+1,___fldiv@b+1
  7415  003C6A  0060  F1A8  F062   	movff	??___fldiv+2,___fldiv@b+2
  7416  003C70  0060  F1AC  F063   	movff	??___fldiv+3,___fldiv@b+3
  7417                           
  7418                           ; BSR set to: 0
  7419  003C76  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  7420  003C78  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7421  003C7A                     l5658:
  7422                           
  7423                           ; BSR set to: 0
  7424  003C7A  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7425  003C7C  D010               	goto	l5662
  7426  003C7E  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7427  003C80  E103               	bnz	u7170
  7428  003C82  2971               	incf	___fldiv@new_exp& (0+255),w,b
  7429  003C84  A0D8               	btfss	status,0,c
  7430  003C86  D00B               	goto	l5662
  7431  003C88                     u7170:
  7432                           
  7433                           ; BSR set to: 0
  7434  003C88  0E00               	movlw	0
  7435  003C8A  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7436  003C8C  6971               	setf	___fldiv@new_exp& (0+255),b
  7437  003C8E  0E00               	movlw	0
  7438  003C90  6F60               	movwf	___fldiv@b& (0+255),b
  7439  003C92  0E00               	movlw	0
  7440  003C94  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7441  003C96  0E00               	movlw	0
  7442  003C98  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7443  003C9A  0E00               	movlw	0
  7444  003C9C  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7445  003C9E                     l5662:
  7446                           
  7447                           ; BSR set to: 0
  7448  003C9E  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7449  003CA0  D005               	goto	u7180
  7450  003CA2  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7451  003CA4  E111               	bnz	l5666
  7452  003CA6  0571               	decf	___fldiv@new_exp& (0+255),w,b
  7453  003CA8  B0D8               	btfsc	status,0,c
  7454  003CAA  D00E               	goto	l5666
  7455  003CAC                     u7180:
  7456                           
  7457                           ; BSR set to: 0
  7458  003CAC  0E00               	movlw	0
  7459  003CAE  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7460  003CB0  0E00               	movlw	0
  7461  003CB2  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7462  003CB4  0E00               	movlw	0
  7463  003CB6  6F60               	movwf	___fldiv@b& (0+255),b
  7464  003CB8  0E00               	movlw	0
  7465  003CBA  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7466  003CBC  0E00               	movlw	0
  7467  003CBE  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7468  003CC0  0E00               	movlw	0
  7469  003CC2  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7470  003CC4  0E00               	movlw	0
  7471  003CC6  6F70               	movwf	___fldiv@sign& (0+255),b
  7472  003CC8                     l5666:
  7473                           
  7474                           ; BSR set to: 0
  7475  003CC8  0060  F1C4  F077   	movff	___fldiv@new_exp,___fldiv@bexp
  7476                           
  7477                           ; BSR set to: 0
  7478  003CCE  A177               	btfss	___fldiv@bexp& (0+255),0,b
  7479  003CD0  D002               	goto	l5672
  7480                           
  7481                           ; BSR set to: 0
  7482  003CD2  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7483  003CD4  D001               	goto	l5674
  7484  003CD6                     l5672:
  7485                           
  7486                           ; BSR set to: 0
  7487  003CD6  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  7488  003CD8                     l5674:
  7489                           
  7490                           ; BSR set to: 0
  7491  003CD8  90D8               	bcf	status,0,c
  7492  003CDA  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  7493  003CDC  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7494  003CDE  D6FC               	goto	l5588
  7495  003CE0                     __end_of___fldiv:
  7496                           	opt callstack 0
  7497                           
  7498 ;; *************** function ___awmod *****************
  7499 ;; Defined at:
  7500 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  dividend        2    0[BANK0 ] int 
  7503 ;;  divisor         2    2[BANK0 ] int 
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;  sign            1    5[BANK0 ] unsigned char 
  7506 ;;  counter         1    4[BANK0 ] unsigned char 
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  2    0[BANK0 ] int 
  7509 ;; Registers used:
  7510 ;;		wreg, status,2, status,0
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7517 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7519 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7520 ;;Total ram usage:        6 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    2
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_efgtoa
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text26
  7531  004CAE                     __ptext26:
  7532                           	opt callstack 0
  7533  004CAE                     ___awmod:
  7534                           	opt callstack 23
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;incstack = 0
  7538  004CAE  0E00               	movlw	0
  7539  004CB0  0100               	movlb	0	; () banked
  7540  004CB2  6F65               	movwf	___awmod@sign& (0+255),b
  7541                           
  7542                           ; BSR set to: 0
  7543  004CB4  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7544  004CB6  D006               	goto	l5870
  7545                           
  7546                           ; BSR set to: 0
  7547  004CB8  6D60               	negf	___awmod@dividend& (0+255),b
  7548  004CBA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7549  004CBC  B0D8               	btfsc	status,0,c
  7550  004CBE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7551                           
  7552                           ; BSR set to: 0
  7553  004CC0  0E01               	movlw	1
  7554  004CC2  6F65               	movwf	___awmod@sign& (0+255),b
  7555  004CC4                     l5870:
  7556                           
  7557                           ; BSR set to: 0
  7558  004CC4  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7559  004CC6  D004               	goto	l5874
  7560                           
  7561                           ; BSR set to: 0
  7562  004CC8  6D62               	negf	___awmod@divisor& (0+255),b
  7563  004CCA  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7564  004CCC  B0D8               	btfsc	status,0,c
  7565  004CCE  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7566  004CD0                     l5874:
  7567                           
  7568                           ; BSR set to: 0
  7569  004CD0  5162               	movf	___awmod@divisor& (0+255),w,b
  7570  004CD2  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7571  004CD4  B4D8               	btfsc	status,2,c
  7572  004CD6  D018               	goto	l5890
  7573                           
  7574                           ; BSR set to: 0
  7575  004CD8  0E01               	movlw	1
  7576  004CDA  6F64               	movwf	___awmod@counter& (0+255),b
  7577  004CDC  D004               	goto	l5880
  7578  004CDE                     l5878:
  7579                           
  7580                           ; BSR set to: 0
  7581  004CDE  90D8               	bcf	status,0,c
  7582  004CE0  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7583  004CE2  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7584  004CE4  2B64               	incf	___awmod@counter& (0+255),f,b
  7585  004CE6                     l5880:
  7586                           
  7587                           ; BSR set to: 0
  7588  004CE6  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7589  004CE8  D7FA               	goto	l5878
  7590  004CEA                     u7480:
  7591                           
  7592                           ; BSR set to: 0
  7593  004CEA  5162               	movf	___awmod@divisor& (0+255),w,b
  7594  004CEC  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7595  004CEE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7596  004CF0  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7597  004CF2  A0D8               	btfss	status,0,c
  7598  004CF4  D004               	goto	l5886
  7599                           
  7600                           ; BSR set to: 0
  7601  004CF6  5162               	movf	___awmod@divisor& (0+255),w,b
  7602  004CF8  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7603  004CFA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7604  004CFC  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7605  004CFE                     l5886:
  7606                           
  7607                           ; BSR set to: 0
  7608  004CFE  90D8               	bcf	status,0,c
  7609  004D00  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7610  004D02  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7611                           
  7612                           ; BSR set to: 0
  7613  004D04  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7614  004D06  D7F1               	goto	u7480
  7615  004D08                     l5890:
  7616                           
  7617                           ; BSR set to: 0
  7618  004D08  5165               	movf	___awmod@sign& (0+255),w,b
  7619  004D0A  B4D8               	btfsc	status,2,c
  7620  004D0C  D004               	goto	l5894
  7621                           
  7622                           ; BSR set to: 0
  7623  004D0E  6D60               	negf	___awmod@dividend& (0+255),b
  7624  004D10  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7625  004D12  B0D8               	btfsc	status,0,c
  7626  004D14  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7627  004D16                     l5894:
  7628                           
  7629                           ; BSR set to: 0
  7630  004D16  0060  F180  F060   	movff	___awmod@dividend,?___awmod
  7631  004D1C  0060  F184  F061   	movff	___awmod@dividend+1,?___awmod+1
  7632                           
  7633                           ; BSR set to: 0
  7634  004D22  0012               	return		;funcret
  7635  004D24                     __end_of___awmod:
  7636                           	opt callstack 0
  7637                           
  7638 ;; *************** function ___awdiv *****************
  7639 ;; Defined at:
  7640 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  dividend        2    0[BANK0 ] int 
  7643 ;;  divisor         2    2[BANK0 ] int 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  quotient        2    6[BANK0 ] int 
  7646 ;;  sign            1    5[BANK0 ] unsigned char 
  7647 ;;  counter         1    4[BANK0 ] unsigned char 
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  2    0[BANK0 ] int 
  7650 ;; Registers used:
  7651 ;;		wreg, status,2, status,0
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7657 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7658 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7660 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7661 ;;Total ram usage:        8 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:    2
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_efgtoa
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           	psect	text27
  7672  004B1C                     __ptext27:
  7673                           	opt callstack 0
  7674  004B1C                     ___awdiv:
  7675                           	opt callstack 23
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;incstack = 0
  7679  004B1C  0E00               	movlw	0
  7680  004B1E  0100               	movlb	0	; () banked
  7681  004B20  6F65               	movwf	___awdiv@sign& (0+255),b
  7682                           
  7683                           ; BSR set to: 0
  7684  004B22  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7685  004B24  D006               	goto	l5826
  7686                           
  7687                           ; BSR set to: 0
  7688  004B26  6D62               	negf	___awdiv@divisor& (0+255),b
  7689  004B28  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7690  004B2A  B0D8               	btfsc	status,0,c
  7691  004B2C  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7692                           
  7693                           ; BSR set to: 0
  7694  004B2E  0E01               	movlw	1
  7695  004B30  6F65               	movwf	___awdiv@sign& (0+255),b
  7696  004B32                     l5826:
  7697                           
  7698                           ; BSR set to: 0
  7699  004B32  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7700  004B34  D006               	goto	l5832
  7701                           
  7702                           ; BSR set to: 0
  7703  004B36  6D60               	negf	___awdiv@dividend& (0+255),b
  7704  004B38  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7705  004B3A  B0D8               	btfsc	status,0,c
  7706  004B3C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7707                           
  7708                           ; BSR set to: 0
  7709  004B3E  0E01               	movlw	1
  7710  004B40  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7711  004B42                     l5832:
  7712                           
  7713                           ; BSR set to: 0
  7714  004B42  0E00               	movlw	0
  7715  004B44  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7716  004B46  0E00               	movlw	0
  7717  004B48  6F66               	movwf	___awdiv@quotient& (0+255),b
  7718                           
  7719                           ; BSR set to: 0
  7720  004B4A  5162               	movf	___awdiv@divisor& (0+255),w,b
  7721  004B4C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7722  004B4E  B4D8               	btfsc	status,2,c
  7723  004B50  D01C               	goto	l5854
  7724                           
  7725                           ; BSR set to: 0
  7726  004B52  0E01               	movlw	1
  7727  004B54  6F64               	movwf	___awdiv@counter& (0+255),b
  7728  004B56  D004               	goto	l5840
  7729  004B58                     l5838:
  7730                           
  7731                           ; BSR set to: 0
  7732  004B58  90D8               	bcf	status,0,c
  7733  004B5A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7734  004B5C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7735  004B5E  2B64               	incf	___awdiv@counter& (0+255),f,b
  7736  004B60                     l5840:
  7737                           
  7738                           ; BSR set to: 0
  7739  004B60  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7740  004B62  D7FA               	goto	l5838
  7741  004B64                     u7420:
  7742                           
  7743                           ; BSR set to: 0
  7744  004B64  90D8               	bcf	status,0,c
  7745  004B66  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7746  004B68  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7747                           
  7748                           ; BSR set to: 0
  7749  004B6A  5162               	movf	___awdiv@divisor& (0+255),w,b
  7750  004B6C  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7751  004B6E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7752  004B70  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7753  004B72  A0D8               	btfss	status,0,c
  7754  004B74  D005               	goto	l5850
  7755                           
  7756                           ; BSR set to: 0
  7757  004B76  5162               	movf	___awdiv@divisor& (0+255),w,b
  7758  004B78  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7759  004B7A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7760  004B7C  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7761                           
  7762                           ; BSR set to: 0
  7763  004B7E  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7764  004B80                     l5850:
  7765                           
  7766                           ; BSR set to: 0
  7767  004B80  90D8               	bcf	status,0,c
  7768  004B82  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7769  004B84  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7770                           
  7771                           ; BSR set to: 0
  7772  004B86  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7773  004B88  D7ED               	goto	u7420
  7774  004B8A                     l5854:
  7775                           
  7776                           ; BSR set to: 0
  7777  004B8A  5165               	movf	___awdiv@sign& (0+255),w,b
  7778  004B8C  B4D8               	btfsc	status,2,c
  7779  004B8E  D004               	goto	l5858
  7780                           
  7781                           ; BSR set to: 0
  7782  004B90  6D66               	negf	___awdiv@quotient& (0+255),b
  7783  004B92  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7784  004B94  B0D8               	btfsc	status,0,c
  7785  004B96  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7786  004B98                     l5858:
  7787                           
  7788                           ; BSR set to: 0
  7789  004B98  0060  F198  F060   	movff	___awdiv@quotient,?___awdiv
  7790  004B9E  0060  F19C  F061   	movff	___awdiv@quotient+1,?___awdiv+1
  7791                           
  7792                           ; BSR set to: 0
  7793  004BA4  0012               	return		;funcret
  7794  004BA6                     __end_of___awdiv:
  7795                           	opt callstack 0
  7796                           
  7797 ;; *************** function _memset *****************
  7798 ;; Defined at:
  7799 ;;		line 271 in file "main.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;  st              2    0[BANK0 ] PTR unsigned char 
  7802 ;;		 -> tx_buffer(32), 
  7803 ;;  x               1    2[BANK0 ] unsigned char 
  7804 ;;  size            2    3[BANK0 ] int 
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;  i               2    6[BANK0 ] int 
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1    wreg      void 
  7809 ;; Registers used:
  7810 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7816 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7817 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7819 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7820 ;;Total ram usage:        8 bytes
  7821 ;; Hardware stack levels used:    1
  7822 ;; Hardware stack levels required when called:    2
  7823 ;; This function calls:
  7824 ;;		Nothing
  7825 ;; This function is called by:
  7826 ;;		_USART_handler
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           	psect	text28
  7831  0050BE                     __ptext28:
  7832                           	opt callstack 0
  7833  0050BE                     _memset:
  7834                           	opt callstack 27
  7835                           
  7836                           ;main.c: 272:     for(int i=0;i<size;i++){
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;incstack = 0
  7840  0050BE  0E00               	movlw	0
  7841  0050C0  0100               	movlb	0	; () banked
  7842  0050C2  6F67               	movwf	(memset@i+1)& (0+255),b
  7843  0050C4  0E00               	movlw	0
  7844  0050C6  6F66               	movwf	memset@i& (0+255),b
  7845  0050C8  D00B               	goto	l6428
  7846  0050CA                     l6424:
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;main.c: 273:         st[i] = x;
  7850  0050CA  5166               	movf	memset@i& (0+255),w,b
  7851  0050CC  2560               	addwf	memset@st& (0+255),w,b
  7852  0050CE  6ED9               	movwf	fsr2l,c
  7853  0050D0  5167               	movf	(memset@i+1)& (0+255),w,b
  7854  0050D2  2161               	addwfc	(memset@st+1)& (0+255),w,b
  7855  0050D4  6EDA               	movwf	fsr2h,c
  7856  0050D6  0060  F18B  FFDF   	movff	memset@x,indf2
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;main.c: 274:     }
  7860  0050DC  4B66               	infsnz	memset@i& (0+255),f,b
  7861  0050DE  2B67               	incf	(memset@i+1)& (0+255),f,b
  7862  0050E0                     l6428:
  7863                           
  7864                           ; BSR set to: 0
  7865  0050E0  5163               	movf	memset@size& (0+255),w,b
  7866  0050E2  5D66               	subwf	memset@i& (0+255),w,b
  7867  0050E4  5167               	movf	(memset@i+1)& (0+255),w,b
  7868  0050E6  0A80               	xorlw	128
  7869  0050E8  6F65               	movwf	??_memset& (0+255),b
  7870  0050EA  5164               	movf	(memset@size+1)& (0+255),w,b
  7871  0050EC  0A80               	xorlw	128
  7872  0050EE  5965               	subwfb	??_memset& (0+255),w,b
  7873  0050F0  B0D8               	btfsc	status,0,c
  7874  0050F2  0012               	return	
  7875  0050F4  D7EA               	goto	l6424
  7876  0050F6                     __end_of_memset:
  7877                           	opt callstack 0
  7878                           
  7879 ;; *************** function _USART1_SendString *****************
  7880 ;; Defined at:
  7881 ;;		line 58 in file "USART1.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;  str             2    4[BANK0 ] PTR unsigned char 
  7884 ;;		 -> tx_buffer(32), 
  7885 ;;  size            2    6[BANK0 ] int 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  attempts        2   10[BANK0 ] unsigned int 
  7888 ;;  i               2    8[BANK0 ] unsigned int 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      unsigned char 
  7891 ;; Registers used:
  7892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7898 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7899 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7901 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7902 ;;Total ram usage:        8 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:    3
  7905 ;; This function calls:
  7906 ;;		_USART1_SendByte
  7907 ;; This function is called by:
  7908 ;;		_USART_handler
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           	psect	text29
  7913  00494E                     __ptext29:
  7914                           	opt callstack 0
  7915  00494E                     _USART1_SendString:
  7916                           	opt callstack 26
  7917                           
  7918                           ;USART1.c: 59:     unsigned int attempts = 65000,i;
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;incstack = 0
  7922  00494E  0EFD               	movlw	253
  7923  004950  0100               	movlb	0	; () banked
  7924  004952  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  7925  004954  0EE8               	movlw	232
  7926  004956  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  7927                           
  7928                           ;USART1.c: 60:     for(i=0;i<size;i++){
  7929  004958  0E00               	movlw	0
  7930  00495A  6F69               	movwf	(USART1_SendString@i+1)& (0+255),b
  7931  00495C  0E00               	movlw	0
  7932  00495E  6F68               	movwf	USART1_SendString@i& (0+255),b
  7933  004960  D01E               	goto	l6410
  7934  004962                     l6398:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;USART1.c: 61:         if(!USART1_SendByte(*(str + i))){
  7938  004962  5168               	movf	USART1_SendString@i& (0+255),w,b
  7939  004964  2564               	addwf	USART1_SendString@str& (0+255),w,b
  7940  004966  6ED9               	movwf	fsr2l,c
  7941  004968  5169               	movf	(USART1_SendString@i+1)& (0+255),w,b
  7942  00496A  2165               	addwfc	(USART1_SendString@str+1)& (0+255),w,b
  7943  00496C  6EDA               	movwf	fsr2h,c
  7944  00496E  50DF               	movf	indf2,w,c
  7945  004970  EC07  F029         	call	_USART1_SendByte
  7946  004974  0900               	iorlw	0
  7947  004976  A4D8               	btfss	status,2,c
  7948  004978  D007               	goto	l6402
  7949                           
  7950                           ;USART1.c: 62:             attempts --;
  7951  00497A  0100               	movlb	0	; () banked
  7952  00497C  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  7953  00497E  A0D8               	btfss	status,0,c
  7954  004980  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  7955                           
  7956                           ;USART1.c: 63:             i --;
  7957  004982  0768               	decf	USART1_SendString@i& (0+255),f,b
  7958  004984  A0D8               	btfss	status,0,c
  7959  004986  0769               	decf	(USART1_SendString@i+1)& (0+255),f,b
  7960  004988                     l6402:
  7961                           
  7962                           ;USART1.c: 65:         if(!attempts)
  7963  004988  0100               	movlb	0	; () banked
  7964  00498A  516A               	movf	USART1_SendString@attempts& (0+255),w,b
  7965  00498C  116B               	iorwf	(USART1_SendString@attempts+1)& (0+255),w,b
  7966  00498E  B4D8               	btfsc	status,2,c
  7967  004990  0012               	return	
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;USART1.c: 67:         attempts = 65000;
  7971  004992  0EFD               	movlw	253
  7972  004994  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  7973  004996  0EE8               	movlw	232
  7974  004998  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;USART1.c: 68:     }
  7978  00499A  4B68               	infsnz	USART1_SendString@i& (0+255),f,b
  7979  00499C  2B69               	incf	(USART1_SendString@i+1)& (0+255),f,b
  7980  00499E                     l6410:
  7981                           
  7982                           ; BSR set to: 0
  7983  00499E  5166               	movf	USART1_SendString@size& (0+255),w,b
  7984  0049A0  5D68               	subwf	USART1_SendString@i& (0+255),w,b
  7985  0049A2  5167               	movf	(USART1_SendString@size+1)& (0+255),w,b
  7986  0049A4  5969               	subwfb	(USART1_SendString@i+1)& (0+255),w,b
  7987  0049A6  A0D8               	btfss	status,0,c
  7988  0049A8  D7DC               	goto	l6398
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;USART1.c: 69:     attempts =65000;
  7992  0049AA  0EFD               	movlw	253
  7993  0049AC  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  7994  0049AE  0EE8               	movlw	232
  7995  0049B0  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  7996  0049B2                     l6414:
  7997                           
  7998                           ; BSR set to: 0
  7999  0049B2  0E0D               	movlw	13
  8000  0049B4  EC07  F029         	call	_USART1_SendByte
  8001  0049B8  0900               	iorlw	0
  8002  0049BA  A4D8               	btfss	status,2,c
  8003  0049BC  D009               	goto	u8380
  8004  0049BE  0100               	movlb	0	; () banked
  8005  0049C0  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  8006  0049C2  A0D8               	btfss	status,0,c
  8007  0049C4  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  8008  0049C6  296A               	incf	USART1_SendString@attempts& (0+255),w,b
  8009  0049C8  E1F4               	bnz	l6414
  8010  0049CA  296B               	incf	(USART1_SendString@attempts+1)& (0+255),w,b
  8011  0049CC  A4D8               	btfss	status,2,c
  8012  0049CE  D7F1               	goto	l6414
  8013  0049D0                     u8380:
  8014  0049D0                     l6418:
  8015  0049D0  0E0A               	movlw	10
  8016  0049D2  EC07  F029         	call	_USART1_SendByte
  8017  0049D6  0900               	iorlw	0
  8018  0049D8  A4D8               	btfss	status,2,c
  8019  0049DA  0012               	return	
  8020  0049DC  0100               	movlb	0	; () banked
  8021  0049DE  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  8022  0049E0  A0D8               	btfss	status,0,c
  8023  0049E2  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  8024  0049E4  296A               	incf	USART1_SendString@attempts& (0+255),w,b
  8025  0049E6  E1F4               	bnz	l6418
  8026  0049E8  296B               	incf	(USART1_SendString@attempts+1)& (0+255),w,b
  8027  0049EA  B4D8               	btfsc	status,2,c
  8028  0049EC  0012               	return	
  8029  0049EE  D7F0               	goto	u8380
  8030  0049F0                     __end_of_USART1_SendString:
  8031                           	opt callstack 0
  8032                           
  8033 ;; *************** function _USART1_SendByte *****************
  8034 ;; Defined at:
  8035 ;;		line 49 in file "USART1.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  byte            1    wreg     unsigned char 
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;  byte            1    0[BANK0 ] unsigned char 
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      unsigned char 
  8042 ;; Registers used:
  8043 ;;		wreg
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8052 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8053 ;;Total ram usage:        1 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:    2
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_USART1_SendString
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text30
  8064  00520E                     __ptext30:
  8065                           	opt callstack 0
  8066  00520E                     _USART1_SendByte:
  8067                           	opt callstack 26
  8068                           
  8069                           ;incstack = 0
  8070                           ;USART1_SendByte@byte stored from wreg
  8071  00520E  0100               	movlb	0	; () banked
  8072  005210  6F60               	movwf	USART1_SendByte@byte& (0+255),b
  8073                           
  8074                           ;USART1.c: 50:     if(!PIE3bits.U1TXIE){
  8075  005212  0139               	movlb	57	; () banked
  8076  005214  B993               	btfsc	147,4,b	;volatile
  8077  005216  D006               	goto	l6362
  8078                           
  8079                           ; BSR set to: 57
  8080                           ;USART1.c: 51:         tx_byte = byte;
  8081  005218  0060  F180  F04A   	movff	USART1_SendByte@byte,_tx_byte
  8082                           
  8083                           ; BSR set to: 57
  8084                           ;USART1.c: 52:         PIE3bits.U1TXIE = 1;
  8085  00521E  8993               	bsf	147,4,b	;volatile
  8086                           
  8087                           ;USART1.c: 53:         return 1;
  8088  005220  0E01               	movlw	1
  8089  005222  0012               	return	
  8090  005224                     l6362:
  8091                           
  8092                           ; BSR set to: 57
  8093                           ;USART1.c: 55:     return 0;
  8094  005224  0E00               	movlw	0
  8095                           
  8096                           ; BSR set to: 57
  8097  005226  0012               	return		;funcret
  8098  005228                     __end_of_USART1_SendByte:
  8099                           	opt callstack 0
  8100                           
  8101 ;; *************** function _I2C_handler *****************
  8102 ;; Defined at:
  8103 ;;		line 89 in file "I2C.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;  ad5272_selec    1    wreg     unsigned char 
  8106 ;;  value           2   12[BANK0 ] int 
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;  ad5272_selec    1   14[BANK0 ] unsigned char 
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  1    wreg      void 
  8111 ;; Registers used:
  8112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8121 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8122 ;;Total ram usage:        3 bytes
  8123 ;; Hardware stack levels used:    1
  8124 ;; Hardware stack levels required when called:    3
  8125 ;; This function calls:
  8126 ;;		_I2C_Transmit
  8127 ;; This function is called by:
  8128 ;;		_USART_handler
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text31
  8133  004F76                     __ptext31:
  8134                           	opt callstack 0
  8135  004F76                     _I2C_handler:
  8136                           	opt callstack 26
  8137                           
  8138                           ; BSR set to: 57
  8139                           ;incstack = 0
  8140                           ;I2C_handler@ad5272_select stored from wreg
  8141  004F76  0100               	movlb	0	; () banked
  8142  004F78  6F6E               	movwf	I2C_handler@ad5272_select& (0+255),b
  8143                           
  8144                           ;I2C.c: 90:     AD5272_COMMANDS[0] = (unsigned char)(AD5272_COMMANDS[0] | (value >> 8));
  8145  004F7A  0100               	movlb	0	; () banked
  8146  004F7C  516D               	movf	(I2C_handler@value+1)& (0+255),w,b
  8147  004F7E  104C               	iorwf	_AD5272_COMMANDS,w,c
  8148  004F80  6E4C               	movwf	_AD5272_COMMANDS,c
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;I2C.c: 91:     AD5272_COMMANDS[1] = (unsigned char)value;
  8152  004F82  0060  F1B0  F04D   	movff	I2C_handler@value,_AD5272_COMMANDS+1
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;I2C.c: 92:     if(ad5272_select == 0){
  8156  004F88  516E               	movf	I2C_handler@ad5272_select& (0+255),w,b
  8157  004F8A  A4D8               	btfss	status,2,c
  8158  004F8C  D00B               	goto	l6450
  8159                           
  8160                           ; BSR set to: 0
  8161  004F8E  0E4C               	movlw	low _AD5272_COMMANDS
  8162  004F90  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  8163  004F92  0E00               	movlw	high _AD5272_COMMANDS
  8164  004F94  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  8165  004F96  0E02               	movlw	2
  8166  004F98  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  8167  004F9A  0E5E               	movlw	94
  8168  004F9C  6F63               	movwf	I2C_Transmit@address& (0+255),b
  8169  004F9E  ECF8  F024         	call	_I2C_Transmit	;wreg free
  8170                           
  8171                           ;I2C.c: 94:     }else{
  8172  004FA2  D00A               	goto	l6452
  8173  004FA4                     l6450:
  8174                           
  8175                           ; BSR set to: 0
  8176  004FA4  0E4C               	movlw	low _AD5272_COMMANDS
  8177  004FA6  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  8178  004FA8  0E00               	movlw	high _AD5272_COMMANDS
  8179  004FAA  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  8180  004FAC  0E02               	movlw	2
  8181  004FAE  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  8182  004FB0  0E58               	movlw	88
  8183  004FB2  6F63               	movwf	I2C_Transmit@address& (0+255),b
  8184  004FB4  ECF8  F024         	call	_I2C_Transmit	;wreg free
  8185  004FB8                     l6452:
  8186  004FB8  5045               	movf	_I2C_STOP_DETECTED,w,c
  8187  004FBA  A4D8               	btfss	status,2,c
  8188  004FBC  0012               	return	
  8189  004FBE  D7FC               	goto	l6452
  8190  004FC0                     __end_of_I2C_handler:
  8191                           	opt callstack 0
  8192                           
  8193 ;; *************** function _I2C_Transmit *****************
  8194 ;; Defined at:
  8195 ;;		line 49 in file "I2C.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;  buffer          2    0[BANK0 ] PTR unsigned char 
  8198 ;;		 -> AD5272_COMMANDS(2), 
  8199 ;;  buffer_size     1    2[BANK0 ] unsigned char 
  8200 ;;  address         1    3[BANK0 ] unsigned char 
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  i               1   11[BANK0 ] unsigned char 
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      unsigned char 
  8205 ;; Registers used:
  8206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8212 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8214 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8215 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8216 ;;Total ram usage:       12 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; Hardware stack levels required when called:    2
  8219 ;; This function calls:
  8220 ;;		Nothing
  8221 ;; This function is called by:
  8222 ;;		_main
  8223 ;;		_I2C_handler
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text32
  8228  0049F0                     __ptext32:
  8229                           	opt callstack 0
  8230  0049F0                     _I2C_Transmit:
  8231                           	opt callstack 26
  8232                           
  8233                           ;I2C.c: 50:     if(I2C_STOP_DETECTED && I2C1STAT0bits.BFRE && I2C1CNT == 0){
  8234                           
  8235                           ;incstack = 0
  8236  0049F0  5045               	movf	_I2C_STOP_DETECTED,w,c
  8237  0049F2  B4D8               	btfsc	status,2,c
  8238  0049F4  0012               	return	
  8239  0049F6  013D               	movlb	61	; () banked
  8240  0049F8  AF77               	btfss	119,7,b	;volatile
  8241  0049FA  0012               	return	
  8242                           
  8243                           ; BSR set to: 61
  8244  0049FC  516C               	movf	108,w,b	;volatile
  8245  0049FE  A4D8               	btfss	status,2,c
  8246  004A00  0012               	return	
  8247                           
  8248                           ; BSR set to: 61
  8249                           ;I2C.c: 51:         I2C_STOP_DETECTED = 0;
  8250  004A02  0E00               	movlw	0
  8251  004A04  6E45               	movwf	_I2C_STOP_DETECTED,c
  8252                           
  8253                           ;I2C.c: 52:         for(unsigned char i=0;i<(buffer_size-1);i++){
  8254  004A06  0E00               	movlw	0
  8255  004A08  0100               	movlb	0	; () banked
  8256  004A0A  6F6B               	movwf	I2C_Transmit@i& (0+255),b
  8257  004A0C  D016               	goto	l6378
  8258  004A0E                     l6374:
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;I2C.c: 53:             I2C_TX_BUFFER[i] = buffer[i+1];
  8262  004A0E  516B               	movf	I2C_Transmit@i& (0+255),w,b
  8263  004A10  2560               	addwf	I2C_Transmit@buffer& (0+255),w,b
  8264  004A12  6F64               	movwf	??_I2C_Transmit& (0+255),b
  8265  004A14  0E00               	movlw	0
  8266  004A16  2161               	addwfc	(I2C_Transmit@buffer+1)& (0+255),w,b
  8267  004A18  6F65               	movwf	(??_I2C_Transmit+1)& (0+255),b
  8268  004A1A  0E01               	movlw	1
  8269  004A1C  2564               	addwf	??_I2C_Transmit& (0+255),w,b
  8270  004A1E  6ED9               	movwf	fsr2l,c
  8271  004A20  0E00               	movlw	0
  8272  004A22  2165               	addwfc	(??_I2C_Transmit+1)& (0+255),w,b
  8273  004A24  6EDA               	movwf	fsr2h,c
  8274  004A26  0E2A               	movlw	low _I2C_TX_BUFFER
  8275  004A28  256B               	addwf	I2C_Transmit@i& (0+255),w,b
  8276  004A2A  6EE1               	movwf	fsr1l,c
  8277  004A2C  6AE2               	clrf	fsr1h,c
  8278  004A2E  0E01               	movlw	high _I2C_TX_BUFFER
  8279  004A30  22E2               	addwfc	fsr1h,f,c
  8280  004A32  006F FF7F FFE7     	movff	indf2,indf1
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;I2C.c: 54:         }
  8284  004A38  2B6B               	incf	I2C_Transmit@i& (0+255),f,b
  8285  004A3A                     l6378:
  8286                           
  8287                           ; BSR set to: 0
  8288  004A3A  0EFF               	movlw	255
  8289  004A3C  6F64               	movwf	??_I2C_Transmit& (0+255),b
  8290  004A3E  0EFF               	movlw	255
  8291  004A40  6F65               	movwf	(??_I2C_Transmit+1)& (0+255),b
  8292  004A42  5162               	movf	I2C_Transmit@buffer_size& (0+255),w,b
  8293  004A44  6F66               	movwf	(??_I2C_Transmit+2)& (0+255),b
  8294  004A46  6B67               	clrf	(??_I2C_Transmit+3)& (0+255),b
  8295  004A48  5164               	movf	??_I2C_Transmit& (0+255),w,b
  8296  004A4A  2766               	addwf	(??_I2C_Transmit+2)& (0+255),f,b
  8297  004A4C  5165               	movf	(??_I2C_Transmit+1)& (0+255),w,b
  8298  004A4E  2367               	addwfc	(??_I2C_Transmit+3)& (0+255),f,b
  8299  004A50  516B               	movf	I2C_Transmit@i& (0+255),w,b
  8300  004A52  6F68               	movwf	(??_I2C_Transmit+4)& (0+255),b
  8301  004A54  6B69               	clrf	(??_I2C_Transmit+5)& (0+255),b
  8302  004A56  5166               	movf	(??_I2C_Transmit+2)& (0+255),w,b
  8303  004A58  5D68               	subwf	(??_I2C_Transmit+4)& (0+255),w,b
  8304  004A5A  5169               	movf	(??_I2C_Transmit+5)& (0+255),w,b
  8305  004A5C  0A80               	xorlw	128
  8306  004A5E  6F6A               	movwf	(??_I2C_Transmit+6)& (0+255),b
  8307  004A60  5167               	movf	(??_I2C_Transmit+3)& (0+255),w,b
  8308  004A62  0A80               	xorlw	128
  8309  004A64  596A               	subwfb	(??_I2C_Transmit+6)& (0+255),w,b
  8310  004A66  A0D8               	btfss	status,0,c
  8311  004A68  D7D2               	goto	l6374
  8312                           
  8313                           ; BSR set to: 0
  8314                           ;I2C.c: 55:         I2C1ADB1 = address;
  8315  004A6A  0060  F18F  FD6E   	movff	I2C_Transmit@address,15726	;volatile
  8316                           
  8317                           ;I2C.c: 56:         I2C1CNT = buffer_size;
  8318  004A70  0060  F18B  FD6C   	movff	I2C_Transmit@buffer_size,15724	;volatile
  8319                           
  8320                           ; BSR set to: 0
  8321                           ;I2C.c: 57:         I2C1TXB = buffer[0];
  8322  004A76  0060  F183  FFD9   	movff	I2C_Transmit@buffer,fsr2l
  8323  004A7C  0060  F187  FFDA   	movff	I2C_Transmit@buffer+1,fsr2h
  8324  004A82  50DF               	movf	indf2,w,c
  8325  004A84  013D               	movlb	61	; () banked
  8326  004A86  6F6B               	movwf	107,b	;volatile
  8327                           
  8328                           ; BSR set to: 61
  8329                           ;I2C.c: 58:         I2C_TX_COUNTER = 0;
  8330  004A88  0E00               	movlw	0
  8331  004A8A  6E47               	movwf	_I2C_TX_COUNTER,c
  8332                           
  8333                           ; BSR set to: 61
  8334                           ;I2C.c: 59:         I2C1CON0bits.S = 1;
  8335  004A8C  8B73               	bsf	115,5,b	;volatile
  8336  004A8E  0012               	return		;funcret
  8337  004A90                     __end_of_I2C_Transmit:
  8338                           	opt callstack 0
  8339                           
  8340 ;; *************** function _GetStringSize *****************
  8341 ;; Defined at:
  8342 ;;		line 261 in file "main.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;		None
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;  i               2    2[BANK0 ] int 
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  2    0[BANK0 ] int 
  8349 ;; Registers used:
  8350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8357 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8359 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8360 ;;Total ram usage:        4 bytes
  8361 ;; Hardware stack levels used:    1
  8362 ;; Hardware stack levels required when called:    2
  8363 ;; This function calls:
  8364 ;;		Nothing
  8365 ;; This function is called by:
  8366 ;;		_USART_handler
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           	psect	text33
  8371  005048                     __ptext33:
  8372                           	opt callstack 0
  8373  005048                     _GetStringSize:
  8374                           	opt callstack 27
  8375                           
  8376                           ;main.c: 262:     int i;;main.c: 263:     for(i=0;i<32;i++){
  8377                           
  8378                           ;incstack = 0
  8379  005048  0E00               	movlw	0
  8380  00504A  0100               	movlb	0	; () banked
  8381  00504C  6F63               	movwf	(GetStringSize@i+1)& (0+255),b
  8382  00504E  0E00               	movlw	0
  8383  005050  6F62               	movwf	GetStringSize@i& (0+255),b
  8384  005052                     l6460:
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;main.c: 264:         if(tx_buffer[i] == 0){
  8388  005052  0E84               	movlw	low _tx_buffer
  8389  005054  2562               	addwf	GetStringSize@i& (0+255),w,b
  8390  005056  6ED9               	movwf	fsr2l,c
  8391  005058  0E01               	movlw	high _tx_buffer
  8392  00505A  2163               	addwfc	(GetStringSize@i+1)& (0+255),w,b
  8393  00505C  6EDA               	movwf	fsr2h,c
  8394  00505E  50DF               	movf	indf2,w,c
  8395  005060  B4D8               	btfsc	status,2,c
  8396  005062  D00A               	goto	u8450
  8397                           
  8398                           ; BSR set to: 0
  8399                           ;main.c: 267:     }
  8400  005064  4B62               	infsnz	GetStringSize@i& (0+255),f,b
  8401  005066  2B63               	incf	(GetStringSize@i+1)& (0+255),f,b
  8402                           
  8403                           ; BSR set to: 0
  8404  005068  BF63               	btfsc	(GetStringSize@i+1)& (0+255),7,b
  8405  00506A  D7F3               	goto	l6460
  8406  00506C  5163               	movf	(GetStringSize@i+1)& (0+255),w,b
  8407  00506E  E104               	bnz	u8450
  8408  005070  0E20               	movlw	32
  8409  005072  5D62               	subwf	GetStringSize@i& (0+255),w,b
  8410  005074  A0D8               	btfss	status,0,c
  8411  005076  D7ED               	goto	l6460
  8412  005078                     u8450:
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;main.c: 268:     return i;
  8416  005078  0060  F188  F060   	movff	GetStringSize@i,?_GetStringSize
  8417  00507E  0060  F18C  F061   	movff	GetStringSize@i+1,?_GetStringSize+1
  8418                           
  8419                           ; BSR set to: 0
  8420  005084  0012               	return		;funcret
  8421  005086                     __end_of_GetStringSize:
  8422                           	opt callstack 0
  8423                           
  8424 ;; *************** function _USART1_ReceiveCommand *****************
  8425 ;; Defined at:
  8426 ;;		line 84 in file "USART1.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;		None
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;		None
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  1    wreg      unsigned char 
  8433 ;; Registers used:
  8434 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8443 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8444 ;;Total ram usage:        2 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; Hardware stack levels required when called:    3
  8447 ;; This function calls:
  8448 ;;		___wmul
  8449 ;; This function is called by:
  8450 ;;		_main
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	text34
  8455  003EDC                     __ptext34:
  8456                           	opt callstack 0
  8457  003EDC                     _USART1_ReceiveCommand:
  8458                           	opt callstack 27
  8459                           
  8460                           ;USART1.c: 85:     if(rx_counter == 0)
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;incstack = 0
  8464  003EDC  504B               	movf	_rx_counter,w,c
  8465  003EDE  A4D8               	btfss	status,2,c
  8466  003EE0  D002               	goto	l6512
  8467  003EE2                     u8460:
  8468                           
  8469                           ;USART1.c: 86:         return 0;
  8470  003EE2  0E00               	movlw	0
  8471  003EE4  0012               	return	
  8472  003EE6                     l6512:
  8473                           
  8474                           ;USART1.c: 87:     if(rx_counter == 1 && rx_buffer[0] != 'W' && rx_buffer[0] != 'R'){
  8475  003EE6  044B               	decf	_rx_counter,w,c
  8476  003EE8  A4D8               	btfss	status,2,c
  8477  003EEA  D00C               	goto	l6524
  8478  003EEC  0E57               	movlw	87
  8479  003EEE  0101               	movlb	1	; () banked
  8480  003EF0  1900               	xorwf	_rx_buffer& (0+255),w,b
  8481  003EF2  B4D8               	btfsc	status,2,c
  8482  003EF4  D007               	goto	l6524
  8483                           
  8484                           ; BSR set to: 1
  8485  003EF6  0E52               	movlw	82
  8486  003EF8  1900               	xorwf	_rx_buffer& (0+255),w,b
  8487  003EFA  B4D8               	btfsc	status,2,c
  8488  003EFC  D003               	goto	l6524
  8489  003EFE                     u8490:
  8490                           
  8491                           ; BSR set to: 1
  8492                           ;USART1.c: 88:         rx_counter = 0;
  8493  003EFE  0E00               	movlw	0
  8494  003F00  6E4B               	movwf	_rx_counter,c
  8495  003F02  D7EF               	goto	u8460
  8496  003F04                     l6524:
  8497                           
  8498                           ;USART1.c: 91:     if(rx_buffer[0] == 'R') {
  8499  003F04  0E52               	movlw	82
  8500  003F06  0101               	movlb	1	; () banked
  8501  003F08  1900               	xorwf	_rx_buffer& (0+255),w,b
  8502  003F0A  A4D8               	btfss	status,2,c
  8503  003F0C  D032               	goto	l6568
  8504                           
  8505                           ; BSR set to: 1
  8506                           ;USART1.c: 92:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57)
      +                          )){
  8507  003F0E  0E02               	movlw	2
  8508  003F10  184B               	xorwf	_rx_counter,w,c
  8509  003F12  A4D8               	btfss	status,2,c
  8510  003F14  D007               	goto	l6534
  8511                           
  8512                           ; BSR set to: 1
  8513  003F16  0E2F               	movlw	47
  8514  003F18  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8515  003F1A  D7F1               	goto	u8490
  8516                           
  8517                           ; BSR set to: 1
  8518  003F1C  0E39               	movlw	57
  8519  003F1E  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8520  003F20  D001               	goto	l6534
  8521  003F22  D7ED               	goto	u8490
  8522  003F24                     l6534:
  8523                           
  8524                           ; BSR set to: 1
  8525  003F24  0E03               	movlw	3
  8526  003F26  184B               	xorwf	_rx_counter,w,c
  8527  003F28  A4D8               	btfss	status,2,c
  8528  003F2A  D004               	goto	l6540
  8529                           
  8530                           ; BSR set to: 1
  8531  003F2C  0E0D               	movlw	13
  8532  003F2E  1902               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8533  003F30  A4D8               	btfss	status,2,c
  8534  003F32  D7E5               	goto	u8490
  8535  003F34                     l6540:
  8536                           
  8537                           ; BSR set to: 1
  8538  003F34  0E04               	movlw	4
  8539  003F36  184B               	xorwf	_rx_counter,w,c
  8540  003F38  A4D8               	btfss	status,2,c
  8541  003F3A  D7D3               	goto	u8460
  8542                           
  8543                           ; BSR set to: 1
  8544                           ;USART1.c: 97:             if(rx_buffer[0] != 'R' || (rx_buffer[1] < 48) || (rx_buffer[1
      +                          ] > 57) || rx_buffer[2] != '\r' || rx_buffer[3] != '\n'){
  8545  003F3C  0E52               	movlw	82
  8546  003F3E  1900               	xorwf	_rx_buffer& (0+255),w,b
  8547  003F40  A4D8               	btfss	status,2,c
  8548  003F42  D7DD               	goto	u8490
  8549                           
  8550                           ; BSR set to: 1
  8551  003F44  0E2F               	movlw	47
  8552  003F46  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8553  003F48  D7DA               	goto	u8490
  8554                           
  8555                           ; BSR set to: 1
  8556  003F4A  0E3A               	movlw	58
  8557  003F4C  6101               	cpfslt	(_rx_buffer+1)& (0+255),b
  8558  003F4E  D7D7               	goto	u8490
  8559                           
  8560                           ; BSR set to: 1
  8561  003F50  0E0D               	movlw	13
  8562  003F52  1902               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8563  003F54  A4D8               	btfss	status,2,c
  8564  003F56  D7D3               	goto	u8490
  8565                           
  8566                           ; BSR set to: 1
  8567  003F58  0E0A               	movlw	10
  8568  003F5A  1903               	xorwf	(_rx_buffer+3)& (0+255),w,b
  8569  003F5C  A4D8               	btfss	status,2,c
  8570  003F5E  D7CF               	goto	u8490
  8571                           
  8572                           ; BSR set to: 1
  8573                           ;USART1.c: 101:             COMMAND_WR = 1;
  8574  003F60  0E01               	movlw	1
  8575  003F62  6E49               	movwf	_COMMAND_WR,c
  8576                           
  8577                           ; BSR set to: 1
  8578                           ;USART1.c: 102:             COMMAND = rx_buffer[1]-48;
  8579  003F64  5101               	movf	(_rx_buffer+1)& (0+255),w,b
  8580  003F66  0FD0               	addlw	208
  8581  003F68  6E48               	movwf	_COMMAND,c
  8582  003F6A                     l6562:
  8583                           
  8584                           ;USART1.c: 103:             rx_counter = 0;
  8585  003F6A  0E00               	movlw	0
  8586  003F6C  6E4B               	movwf	_rx_counter,c
  8587                           
  8588                           ;USART1.c: 104:             return 1;
  8589  003F6E  0E01               	movlw	1
  8590  003F70  0012               	return	
  8591  003F72                     l6568:
  8592                           
  8593                           ; BSR set to: 1
  8594                           ;USART1.c: 107:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57
      +                          ))){
  8595  003F72  0E02               	movlw	2
  8596  003F74  184B               	xorwf	_rx_counter,w,c
  8597  003F76  A4D8               	btfss	status,2,c
  8598  003F78  D007               	goto	l6576
  8599                           
  8600                           ; BSR set to: 1
  8601  003F7A  0E2F               	movlw	47
  8602  003F7C  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8603  003F7E  D7BF               	goto	u8490
  8604                           
  8605                           ; BSR set to: 1
  8606  003F80  0E39               	movlw	57
  8607  003F82  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8608  003F84  D001               	goto	l6576
  8609  003F86  D7BB               	goto	u8490
  8610  003F88                     l6576:
  8611                           
  8612                           ; BSR set to: 1
  8613  003F88  0E03               	movlw	3
  8614  003F8A  184B               	xorwf	_rx_counter,w,c
  8615  003F8C  A4D8               	btfss	status,2,c
  8616  003F8E  D007               	goto	l6584
  8617                           
  8618                           ; BSR set to: 1
  8619  003F90  0E2F               	movlw	47
  8620  003F92  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8621  003F94  D7B4               	goto	u8490
  8622                           
  8623                           ; BSR set to: 1
  8624  003F96  0E39               	movlw	57
  8625  003F98  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8626  003F9A  D001               	goto	l6584
  8627  003F9C  D7B0               	goto	u8490
  8628  003F9E                     l6584:
  8629                           
  8630                           ; BSR set to: 1
  8631  003F9E  0E04               	movlw	4
  8632  003FA0  184B               	xorwf	_rx_counter,w,c
  8633  003FA2  A4D8               	btfss	status,2,c
  8634  003FA4  D007               	goto	l6592
  8635                           
  8636                           ; BSR set to: 1
  8637  003FA6  0E2F               	movlw	47
  8638  003FA8  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8639  003FAA  D7A9               	goto	u8490
  8640                           
  8641                           ; BSR set to: 1
  8642  003FAC  0E39               	movlw	57
  8643  003FAE  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8644  003FB0  D001               	goto	l6592
  8645  003FB2  D7A5               	goto	u8490
  8646  003FB4                     l6592:
  8647                           
  8648                           ; BSR set to: 1
  8649  003FB4  0E05               	movlw	5
  8650  003FB6  184B               	xorwf	_rx_counter,w,c
  8651  003FB8  A4D8               	btfss	status,2,c
  8652  003FBA  D007               	goto	l6600
  8653                           
  8654                           ; BSR set to: 1
  8655  003FBC  0E2F               	movlw	47
  8656  003FBE  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8657  003FC0  D79E               	goto	u8490
  8658                           
  8659                           ; BSR set to: 1
  8660  003FC2  0E39               	movlw	57
  8661  003FC4  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8662  003FC6  D001               	goto	l6600
  8663  003FC8  D79A               	goto	u8490
  8664  003FCA                     l6600:
  8665                           
  8666                           ; BSR set to: 1
  8667  003FCA  0E06               	movlw	6
  8668  003FCC  184B               	xorwf	_rx_counter,w,c
  8669  003FCE  A4D8               	btfss	status,2,c
  8670  003FD0  D007               	goto	l6608
  8671                           
  8672                           ; BSR set to: 1
  8673  003FD2  0E2F               	movlw	47
  8674  003FD4  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8675  003FD6  D793               	goto	u8490
  8676                           
  8677                           ; BSR set to: 1
  8678  003FD8  0E39               	movlw	57
  8679  003FDA  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8680  003FDC  D001               	goto	l6608
  8681  003FDE  D78F               	goto	u8490
  8682  003FE0                     l6608:
  8683                           
  8684                           ; BSR set to: 1
  8685  003FE0  0E07               	movlw	7
  8686  003FE2  184B               	xorwf	_rx_counter,w,c
  8687  003FE4  A4D8               	btfss	status,2,c
  8688  003FE6  D004               	goto	l6614
  8689                           
  8690                           ; BSR set to: 1
  8691  003FE8  0E0D               	movlw	13
  8692  003FEA  1906               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8693  003FEC  A4D8               	btfss	status,2,c
  8694  003FEE  D787               	goto	u8490
  8695  003FF0                     l6614:
  8696                           
  8697                           ; BSR set to: 1
  8698  003FF0  0E08               	movlw	8
  8699  003FF2  184B               	xorwf	_rx_counter,w,c
  8700  003FF4  A4D8               	btfss	status,2,c
  8701  003FF6  D775               	goto	u8460
  8702                           
  8703                           ; BSR set to: 1
  8704                           ;USART1.c: 120:             if(rx_buffer[0] != 'W' || (rx_buffer[1] < 48) || (rx_buffer[
      +                          1] > 57) || (rx_buffer[2] < 48) || (rx_buffer[2] > 57) || (rx_buffer[3] < 48) || (rx_buf
      +                          fer[3] > 57) || (rx_buffer[4] < 48) || (rx_buffer[4] > 57) || (rx_buffer[5] < 48) || (rx
      +                          _buffer[5] > 57) || rx_buffer[6] != '\r' || rx_buffer[7] != '\n'){
  8705  003FF8  0E57               	movlw	87
  8706  003FFA  1900               	xorwf	_rx_buffer& (0+255),w,b
  8707  003FFC  A4D8               	btfss	status,2,c
  8708  003FFE  D77F               	goto	u8490
  8709                           
  8710                           ; BSR set to: 1
  8711  004000  0E2F               	movlw	47
  8712  004002  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8713  004004  D77C               	goto	u8490
  8714                           
  8715                           ; BSR set to: 1
  8716  004006  0E3A               	movlw	58
  8717  004008  6101               	cpfslt	(_rx_buffer+1)& (0+255),b
  8718  00400A  D779               	goto	u8490
  8719                           
  8720                           ; BSR set to: 1
  8721  00400C  0E2F               	movlw	47
  8722  00400E  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8723  004010  D776               	goto	u8490
  8724                           
  8725                           ; BSR set to: 1
  8726  004012  0E3A               	movlw	58
  8727  004014  6102               	cpfslt	(_rx_buffer+2)& (0+255),b
  8728  004016  D773               	goto	u8490
  8729                           
  8730                           ; BSR set to: 1
  8731  004018  0E2F               	movlw	47
  8732  00401A  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8733  00401C  D770               	goto	u8490
  8734                           
  8735                           ; BSR set to: 1
  8736  00401E  0E3A               	movlw	58
  8737  004020  6103               	cpfslt	(_rx_buffer+3)& (0+255),b
  8738  004022  D76D               	goto	u8490
  8739                           
  8740                           ; BSR set to: 1
  8741  004024  0E2F               	movlw	47
  8742  004026  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8743  004028  D76A               	goto	u8490
  8744                           
  8745                           ; BSR set to: 1
  8746  00402A  0E3A               	movlw	58
  8747  00402C  6104               	cpfslt	(_rx_buffer+4)& (0+255),b
  8748  00402E  D767               	goto	u8490
  8749                           
  8750                           ; BSR set to: 1
  8751  004030  0E2F               	movlw	47
  8752  004032  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8753  004034  D764               	goto	u8490
  8754                           
  8755                           ; BSR set to: 1
  8756  004036  0E3A               	movlw	58
  8757  004038  6105               	cpfslt	(_rx_buffer+5)& (0+255),b
  8758  00403A  D761               	goto	u8490
  8759                           
  8760                           ; BSR set to: 1
  8761  00403C  0E0D               	movlw	13
  8762  00403E  1906               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8763  004040  A4D8               	btfss	status,2,c
  8764  004042  D75D               	goto	u8490
  8765                           
  8766                           ; BSR set to: 1
  8767  004044  0E0A               	movlw	10
  8768  004046  1907               	xorwf	(_rx_buffer+7)& (0+255),w,b
  8769  004048  A4D8               	btfss	status,2,c
  8770  00404A  D759               	goto	u8490
  8771                           
  8772                           ; BSR set to: 1
  8773                           ;USART1.c: 124:             COMMAND_WR = 0;
  8774  00404C  0E00               	movlw	0
  8775  00404E  6E49               	movwf	_COMMAND_WR,c
  8776                           
  8777                           ; BSR set to: 1
  8778                           ;USART1.c: 125:             COMMAND = rx_buffer[1]-48;
  8779  004050  5101               	movf	(_rx_buffer+1)& (0+255),w,b
  8780  004052  0FD0               	addlw	208
  8781  004054  6E48               	movwf	_COMMAND,c
  8782                           
  8783                           ; BSR set to: 1
  8784                           ;USART1.c: 126:             COMMAND_WRITE_NUMBER = ((rx_buffer[2]-48) * 1000) + ((rx_buf
      +                          fer[3]-48) * 100) + ((rx_buffer[4]-48) * 10) + (rx_buffer[5]-48);
  8785  004056  0060  F408  F060   	movff	_rx_buffer+2,___wmul@multiplier
  8786  00405C  0100               	movlb	0	; () banked
  8787  00405E  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  8788  004060  0E03               	movlw	3
  8789  004062  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8790  004064  0EE8               	movlw	232
  8791  004066  6F62               	movwf	___wmul@multiplicand& (0+255),b
  8792  004068  ECCE  F028         	call	___wmul	;wreg free
  8793  00406C  0101               	movlb	1	; () banked
  8794  00406E  5103               	movf	(_rx_buffer+3)& (0+255),w,b
  8795  004070  0D64               	mullw	100
  8796  004072  006F FFCC  F066    	movff	prodl,??_USART1_ReceiveCommand
  8797  004078  006F FFD0  F067    	movff	prodh,??_USART1_ReceiveCommand+1
  8798  00407E  5104               	movf	(_rx_buffer+4)& (0+255),w,b
  8799  004080  0D0A               	mullw	10
  8800  004082  50F3               	movf	prodl,w,c
  8801  004084  0100               	movlb	0	; () banked
  8802  004086  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8803  004088  50F4               	movf	prodh,w,c
  8804  00408A  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8805  00408C  5160               	movf	?___wmul& (0+255),w,b
  8806  00408E  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8807  004090  5161               	movf	(?___wmul+1)& (0+255),w,b
  8808  004092  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8809  004094  0101               	movlb	1	; () banked
  8810  004096  5105               	movf	(_rx_buffer+5)& (0+255),w,b
  8811  004098  0100               	movlb	0	; () banked
  8812  00409A  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8813  00409C  0E00               	movlw	0
  8814  00409E  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8815  0040A0  0EB0               	movlw	176
  8816  0040A2  2566               	addwf	??_USART1_ReceiveCommand& (0+255),w,b
  8817  0040A4  6E41               	movwf	_COMMAND_WRITE_NUMBER,c
  8818  0040A6  0E2F               	movlw	47
  8819  0040A8  2167               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),w,b
  8820  0040AA  6E42               	movwf	_COMMAND_WRITE_NUMBER+1,c
  8821  0040AC  D75E               	goto	l6562
  8822  0040AE                     __end_of_USART1_ReceiveCommand:
  8823                           	opt callstack 0
  8824                           
  8825 ;; *************** function ___wmul *****************
  8826 ;; Defined at:
  8827 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8830 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  product         2    4[BANK0 ] unsigned int 
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  2    0[BANK0 ] unsigned int 
  8835 ;; Registers used:
  8836 ;;		wreg, status,2, status,0, prodl, prodh
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8842 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8843 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8845 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8846 ;;Total ram usage:        6 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:    2
  8849 ;; This function calls:
  8850 ;;		Nothing
  8851 ;; This function is called by:
  8852 ;;		_USART1_ReceiveCommand
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text35
  8857  00519C                     __ptext35:
  8858                           	opt callstack 0
  8859  00519C                     ___wmul:
  8860                           	opt callstack 27
  8861                           
  8862                           ;incstack = 0
  8863  00519C  0100               	movlb	0	; () banked
  8864  00519E  5160               	movf	___wmul@multiplier& (0+255),w,b
  8865  0051A0  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8866  0051A2  006F FFCC  F064    	movff	prodl,___wmul@product
  8867  0051A8  006F FFD0  F065    	movff	prodh,___wmul@product+1
  8868  0051AE  5160               	movf	___wmul@multiplier& (0+255),w,b
  8869  0051B0  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8870  0051B2  50F3               	movf	prodl,w,c
  8871  0051B4  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8872  0051B6  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8873  0051B8  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8874  0051BA  50F3               	movf	prodl,w,c
  8875  0051BC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8876                           
  8877                           ; BSR set to: 0
  8878  0051BE  0060  F190  F060   	movff	___wmul@product,?___wmul
  8879  0051C4  0060  F194  F061   	movff	___wmul@product+1,?___wmul+1
  8880                           
  8881                           ; BSR set to: 0
  8882  0051CA  0012               	return		;funcret
  8883  0051CC                     __end_of___wmul:
  8884                           	opt callstack 0
  8885                           
  8886 ;; *************** function _USART1_Init *****************
  8887 ;; Defined at:
  8888 ;;		line 5 in file "USART1.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  baud_rate       1    wreg     unsigned char 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;  baud_rate       1    2[BANK0 ] unsigned char 
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  1    wreg      void 
  8895 ;; Registers used:
  8896 ;;		wreg, status,2, status,0
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8904 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8905 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8906 ;;Total ram usage:        3 bytes
  8907 ;; Hardware stack levels used:    1
  8908 ;; Hardware stack levels required when called:    2
  8909 ;; This function calls:
  8910 ;;		Nothing
  8911 ;; This function is called by:
  8912 ;;		_main
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text36
  8917  004BA6                     __ptext36:
  8918                           	opt callstack 0
  8919  004BA6                     _USART1_Init:
  8920                           	opt callstack 28
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;incstack = 0
  8924                           ;USART1_Init@baud_rate stored from wreg
  8925  004BA6  0100               	movlb	0	; () banked
  8926  004BA8  6F62               	movwf	USART1_Init@baud_rate& (0+255),b
  8927                           
  8928                           ;USART1.c: 7:     TRISCbits.TRISC6 = 1;
  8929  004BAA  8CC4               	bsf	16324,6,c	;volatile
  8930                           
  8931                           ;USART1.c: 8:     TRISCbits.TRISC7 = 0;
  8932  004BAC  9EC4               	bcf	16324,7,c	;volatile
  8933                           
  8934                           ;USART1.c: 9:     ANSELCbits.ANSELC6 = 0;
  8935  004BAE  013A               	movlb	58	; () banked
  8936  004BB0  9D60               	bcf	96,6,b	;volatile
  8937                           
  8938                           ;USART1.c: 10:     ANSELCbits.ANSELC7 = 0;
  8939  004BB2  9F60               	bcf	96,7,b	;volatile
  8940                           
  8941                           ; BSR set to: 58
  8942                           ;USART1.c: 11:     U1RXPPS = 0x16;
  8943  004BB4  0E16               	movlw	22
  8944  004BB6  6FE5               	movwf	229,b	;volatile
  8945                           
  8946                           ;USART1.c: 12:     RC7PPS = 0x13;
  8947  004BB8  0E13               	movlw	19
  8948  004BBA  6F17               	movwf	23,b	;volatile
  8949                           
  8950                           ;USART1.c: 15:     switch(baud_rate){
  8951  004BBC  D010               	goto	l6488
  8952  004BBE                     l6478:
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;USART1.c: 17:             U1BRGH = 0x03;
  8956  004BBE  0E03               	movlw	3
  8957  004BC0  013D               	movlb	61	; () banked
  8958  004BC2  6FF6               	movwf	246,b	;volatile
  8959                           
  8960                           ;USART1.c: 18:             U1BRGL = 0x40;
  8961  004BC4  0E40               	movlw	64
  8962  004BC6  D009               	goto	L13
  8963  004BC8                     l6480:
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;USART1.c: 21:             U1BRGH = 0x01;
  8967  004BC8  0E01               	movlw	1
  8968  004BCA  013D               	movlb	61	; () banked
  8969  004BCC  6FF6               	movwf	246,b	;volatile
  8970                           
  8971                           ;USART1.c: 22:             U1BRGL = 0x14;
  8972  004BCE  0E14               	movlw	20
  8973  004BD0  D004               	goto	L13
  8974  004BD2                     l6482:
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;USART1.c: 25:             U1BRGH = 0x00;
  8978  004BD2  0E00               	movlw	0
  8979  004BD4  013D               	movlb	61	; () banked
  8980  004BD6  6FF6               	movwf	246,b	;volatile
  8981                           
  8982                           ;USART1.c: 26:             U1BRGL = 0x89;
  8983  004BD8  0E89               	movlw	137
  8984  004BDA                     L13:
  8985  004BDA  6FF5               	movwf	245,b	;volatile
  8986                           
  8987                           ;USART1.c: 27:             break;
  8988  004BDC  D011               	goto	l6490
  8989  004BDE                     l6488:
  8990                           
  8991                           ; BSR set to: 58
  8992  004BDE  0100               	movlb	0	; () banked
  8993  004BE0  5162               	movf	USART1_Init@baud_rate& (0+255),w,b
  8994  004BE2  6F60               	movwf	??_USART1_Init& (0+255),b
  8995  004BE4  6B61               	clrf	(??_USART1_Init+1)& (0+255),b
  8996                           
  8997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8998                           ; Switch size 1, requested type "simple"
  8999                           ; Number of cases is 1, Range of values is 0 to 0
  9000                           ; switch strategies available:
  9001                           ; Name         Instructions Cycles
  9002                           ; simple_byte            4     3 (average)
  9003                           ;	Chosen strategy is simple_byte
  9004  004BE6  5161               	movf	(??_USART1_Init+1)& (0+255),w,b
  9005  004BE8  0A00               	xorlw	0	; case 0
  9006  004BEA  A4D8               	btfss	status,2,c
  9007  004BEC  D7F2               	goto	l6482
  9008                           
  9009                           ; BSR set to: 0
  9010                           ; Switch size 1, requested type "simple"
  9011                           ; Number of cases is 3, Range of values is 1 to 3
  9012                           ; switch strategies available:
  9013                           ; Name         Instructions Cycles
  9014                           ; simple_byte           10     6 (average)
  9015                           ;	Chosen strategy is simple_byte
  9016  004BEE  5160               	movf	??_USART1_Init& (0+255),w,b
  9017  004BF0  0A01               	xorlw	1	; case 1
  9018  004BF2  B4D8               	btfsc	status,2,c
  9019  004BF4  D7E4               	goto	l6478
  9020  004BF6  0A03               	xorlw	3	; case 2
  9021  004BF8  B4D8               	btfsc	status,2,c
  9022  004BFA  D7E6               	goto	l6480
  9023  004BFC  0A01               	xorlw	1	; case 3
  9024  004BFE  D7E9               	goto	l6482
  9025  004C00                     l6490:
  9026                           
  9027                           ; BSR set to: 61
  9028                           ;USART1.c: 34:     rx_counter = 0;
  9029  004C00  0E00               	movlw	0
  9030  004C02  6E4B               	movwf	_rx_counter,c
  9031                           
  9032                           ;USART1.c: 36:     U1CON0 = 0xB0;
  9033  004C04  0EB0               	movlw	176
  9034  004C06  6FF2               	movwf	242,b	;volatile
  9035                           
  9036                           ;USART1.c: 37:     U1CON1 = 0x00;
  9037  004C08  0E00               	movlw	0
  9038  004C0A  6FF3               	movwf	243,b	;volatile
  9039                           
  9040                           ;USART1.c: 38:     U2CON2 = 0x80;
  9041  004C0C  0E80               	movlw	128
  9042  004C0E  6FDC               	movwf	220,b	;volatile
  9043                           
  9044                           ;USART1.c: 39:     U1ERRIE = 0x00;
  9045  004C10  0E00               	movlw	0
  9046  004C12  6FFA               	movwf	250,b	;volatile
  9047                           
  9048                           ;USART1.c: 40:     U1UIR = 0x00;
  9049  004C14  0E00               	movlw	0
  9050  004C16  6FF8               	movwf	248,b	;volatile
  9051                           
  9052                           ; BSR set to: 61
  9053                           ;USART1.c: 41:     PIE3bits.U1RXIE = 1;
  9054  004C18  0139               	movlb	57	; () banked
  9055  004C1A  8793               	bsf	147,3,b	;volatile
  9056                           
  9057                           ; BSR set to: 57
  9058                           ;USART1.c: 42:     PIE3bits.U1TXIE =1;
  9059  004C1C  8993               	bsf	147,4,b	;volatile
  9060                           
  9061                           ; BSR set to: 57
  9062                           ;USART1.c: 43:     IPR3bits.U1RXIP = 1;
  9063  004C1E  8783               	bsf	131,3,b	;volatile
  9064                           
  9065                           ; BSR set to: 57
  9066                           ;USART1.c: 44:     IPR3bits.U1TXIP = 1;
  9067  004C20  8983               	bsf	131,4,b	;volatile
  9068                           
  9069                           ;USART1.c: 45:     PIR3 = 0x00;
  9070  004C22  0E00               	movlw	0
  9071  004C24  6FA3               	movwf	163,b	;volatile
  9072                           
  9073                           ; BSR set to: 57
  9074                           ;USART1.c: 46:     U1CON1bits.ON = 1;
  9075  004C26  013D               	movlb	61	; () banked
  9076  004C28  8FF3               	bsf	243,7,b	;volatile
  9077                           
  9078                           ; BSR set to: 61
  9079  004C2A  0012               	return		;funcret
  9080  004C2C                     __end_of_USART1_Init:
  9081                           	opt callstack 0
  9082                           
  9083 ;; *************** function _I2C_Init *****************
  9084 ;; Defined at:
  9085 ;;		line 4 in file "I2C.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;		None
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      void 
  9092 ;; Registers used:
  9093 ;;		wreg, status,2
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9103 ;;Total ram usage:        0 bytes
  9104 ;; Hardware stack levels used:    1
  9105 ;; Hardware stack levels required when called:    2
  9106 ;; This function calls:
  9107 ;;		Nothing
  9108 ;; This function is called by:
  9109 ;;		_main
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           	psect	text37
  9114  004DFC                     __ptext37:
  9115                           	opt callstack 0
  9116  004DFC                     _I2C_Init:
  9117                           	opt callstack 28
  9118                           
  9119                           ;I2C.c: 6:     TRISBbits.TRISB1 = 0;
  9120                           
  9121                           ; BSR set to: 61
  9122                           ;incstack = 0
  9123  004DFC  92C3               	bcf	16323,1,c	;volatile
  9124                           
  9125                           ;I2C.c: 7:     TRISBbits.TRISB0 = 0;
  9126  004DFE  90C3               	bcf	16323,0,c	;volatile
  9127                           
  9128                           ;I2C.c: 8:     LATBbits.LATB1 = 0;
  9129  004E00  92BB               	bcf	16315,1,c	;volatile
  9130                           
  9131                           ;I2C.c: 9:     LATBbits.LATB0 = 0;
  9132  004E02  90BB               	bcf	16315,0,c	;volatile
  9133                           
  9134                           ;I2C.c: 10:     ANSELBbits.ANSELB1 = 0;
  9135  004E04  013A               	movlb	58	; () banked
  9136  004E06  9350               	bcf	80,1,b	;volatile
  9137                           
  9138                           ;I2C.c: 11:     ANSELBbits.ANSELB0 = 0;
  9139  004E08  9150               	bcf	80,0,b	;volatile
  9140                           
  9141                           ;I2C.c: 12:     ODCONBbits.ODCB1 = 1;
  9142  004E0A  8352               	bsf	82,1,b	;volatile
  9143                           
  9144                           ;I2C.c: 13:     ODCONBbits.ODCB0 = 1;
  9145  004E0C  8152               	bsf	82,0,b	;volatile
  9146                           
  9147                           ; BSR set to: 58
  9148                           ;I2C.c: 14:     RB1I2C = 0x01;
  9149  004E0E  0E01               	movlw	1
  9150  004E10  6F5A               	movwf	90,b	;volatile
  9151                           
  9152                           ; BSR set to: 58
  9153                           ;I2C.c: 15:     SLRCONBbits.SLRB1 = 0;
  9154  004E12  9353               	bcf	83,1,b	;volatile
  9155                           
  9156                           ; BSR set to: 58
  9157                           ;I2C.c: 16:     SLRCONBbits.SLRB0 = 0;
  9158  004E14  9153               	bcf	83,0,b	;volatile
  9159                           
  9160                           ;I2C.c: 17:     I2C1SCLPPS = 0x09;
  9161  004E16  0E09               	movlw	9
  9162  004E18  6FE1               	movwf	225,b	;volatile
  9163                           
  9164                           ;I2C.c: 18:     I2C1SDAPPS = 0x08;
  9165  004E1A  0E08               	movlw	8
  9166  004E1C  6FE2               	movwf	226,b	;volatile
  9167                           
  9168                           ;I2C.c: 19:     RB1PPS = 0x21;
  9169  004E1E  0E21               	movlw	33
  9170  004E20  6F09               	movwf	9,b	;volatile
  9171                           
  9172                           ;I2C.c: 20:     RB0PPS = 0x22;
  9173  004E22  0E22               	movlw	34
  9174  004E24  6F08               	movwf	8,b	;volatile
  9175                           
  9176                           ;I2C.c: 22:     I2C1CON0 = 0x04;
  9177  004E26  0E04               	movlw	4
  9178  004E28  013D               	movlb	61	; () banked
  9179  004E2A  6F73               	movwf	115,b	;volatile
  9180                           
  9181                           ;I2C.c: 23:     I2C1CON1 = 0x80;
  9182  004E2C  0E80               	movlw	128
  9183  004E2E  6F74               	movwf	116,b	;volatile
  9184                           
  9185                           ;I2C.c: 24:     I2C1CON2 = 0x24;
  9186  004E30  0E24               	movlw	36
  9187  004E32  6F75               	movwf	117,b	;volatile
  9188                           
  9189                           ;I2C.c: 25:     I2C1CLK = 0x03;
  9190  004E34  0E03               	movlw	3
  9191  004E36  6F7B               	movwf	123,b	;volatile
  9192                           
  9193                           ;I2C.c: 27:     I2C1PIR = 0x00;
  9194  004E38  0E00               	movlw	0
  9195  004E3A  6F79               	movwf	121,b	;volatile
  9196                           
  9197                           ;I2C.c: 28:     I2C1ERR = 0x00;
  9198  004E3C  0E00               	movlw	0
  9199  004E3E  6F76               	movwf	118,b	;volatile
  9200                           
  9201                           ;I2C.c: 30:     I2C_STOP_DETECTED = 1;
  9202  004E40  0E01               	movlw	1
  9203  004E42  6E45               	movwf	_I2C_STOP_DETECTED,c
  9204                           
  9205                           ; BSR set to: 61
  9206                           ;I2C.c: 32:     IPR3bits.I2C1TXIP = 0;
  9207  004E44  0139               	movlb	57	; () banked
  9208  004E46  9183               	bcf	131,0,b	;volatile
  9209                           
  9210                           ; BSR set to: 57
  9211                           ;I2C.c: 33:     IPR2bits.I2C1RXIP = 0;
  9212  004E48  9F82               	bcf	130,7,b	;volatile
  9213                           
  9214                           ; BSR set to: 57
  9215                           ;I2C.c: 34:     PIR3bits.I2C1TXIF = 0;
  9216  004E4A  91A3               	bcf	163,0,b	;volatile
  9217                           
  9218                           ; BSR set to: 57
  9219                           ;I2C.c: 35:     PIR2bits.I2C1RXIF = 0;
  9220  004E4C  9FA2               	bcf	162,7,b	;volatile
  9221                           
  9222                           ; BSR set to: 57
  9223                           ;I2C.c: 36:     PIE3bits.I2C1TXIE = 1;
  9224  004E4E  8193               	bsf	147,0,b	;volatile
  9225                           
  9226                           ; BSR set to: 57
  9227                           ;I2C.c: 37:     PIE2bits.I2C1RXIE = 1;
  9228  004E50  8F92               	bsf	146,7,b	;volatile
  9229                           
  9230                           ; BSR set to: 57
  9231                           ;I2C.c: 40:     I2C1PIRbits.PC1IF = 0;
  9232  004E52  013D               	movlb	61	; () banked
  9233  004E54  9579               	bcf	121,2,b	;volatile
  9234                           
  9235                           ; BSR set to: 61
  9236                           ;I2C.c: 41:     I2C1PIEbits.PC1IE = 1;
  9237  004E56  857A               	bsf	122,2,b	;volatile
  9238                           
  9239                           ; BSR set to: 61
  9240                           ;I2C.c: 42:     IPR3bits.I2C1IP = 0;
  9241  004E58  0139               	movlb	57	; () banked
  9242  004E5A  9383               	bcf	131,1,b	;volatile
  9243                           
  9244                           ; BSR set to: 57
  9245                           ;I2C.c: 43:     PIR3bits.I2C1IF = 0;
  9246  004E5C  93A3               	bcf	163,1,b	;volatile
  9247                           
  9248                           ; BSR set to: 57
  9249                           ;I2C.c: 44:     PIE3bits.I2C1IE = 1;
  9250  004E5E  8393               	bsf	147,1,b	;volatile
  9251                           
  9252                           ; BSR set to: 57
  9253                           ;I2C.c: 46:     I2C1CON0bits.EN = 1;
  9254  004E60  013D               	movlb	61	; () banked
  9255  004E62  8F73               	bsf	115,7,b	;volatile
  9256                           
  9257                           ; BSR set to: 61
  9258  004E64  0012               	return		;funcret
  9259  004E66                     __end_of_I2C_Init:
  9260                           	opt callstack 0
  9261                           
  9262 ;; *************** function _ADC_Init *****************
  9263 ;; Defined at:
  9264 ;;		line 237 in file "main.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;		None
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;		None
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  1    wreg      void 
  9271 ;; Registers used:
  9272 ;;		wreg, status,2
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9282 ;;Total ram usage:        0 bytes
  9283 ;; Hardware stack levels used:    1
  9284 ;; Hardware stack levels required when called:    2
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		_main
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text38
  9293  0051CC                     __ptext38:
  9294                           	opt callstack 0
  9295  0051CC                     _ADC_Init:
  9296                           	opt callstack 28
  9297                           
  9298                           ;main.c: 239:     TRISBbits.TRISB4 = 1;
  9299                           
  9300                           ; BSR set to: 61
  9301                           ;incstack = 0
  9302  0051CC  88C3               	bsf	16323,4,c	;volatile
  9303                           
  9304                           ;main.c: 240:     ANSELBbits.ANSELB4 = 1;
  9305  0051CE  013A               	movlb	58	; () banked
  9306  0051D0  8950               	bsf	80,4,b	;volatile
  9307                           
  9308                           ; BSR set to: 58
  9309                           ;main.c: 241:     ADCON0 = 0x94;
  9310  0051D2  0E94               	movlw	148
  9311  0051D4  013E               	movlb	62	; () banked
  9312  0051D6  6FF8               	movwf	248,b	;volatile
  9313                           
  9314                           ;main.c: 242:     ADCON1 = 0x00;
  9315  0051D8  0E00               	movlw	0
  9316  0051DA  6FF9               	movwf	249,b	;volatile
  9317                           
  9318                           ;main.c: 243:     ADCON2 = 0x00;
  9319  0051DC  0E00               	movlw	0
  9320  0051DE  6FFA               	movwf	250,b	;volatile
  9321                           
  9322                           ;main.c: 244:     ADREF = 0x00;
  9323  0051E0  0E00               	movlw	0
  9324  0051E2  6FFD               	movwf	253,b	;volatile
  9325                           
  9326                           ; BSR set to: 62
  9327                           ;main.c: 245:     IPR1bits.ADIP = 0;
  9328  0051E4  0139               	movlb	57	; () banked
  9329  0051E6  9581               	bcf	129,2,b	;volatile
  9330                           
  9331                           ; BSR set to: 57
  9332                           ;main.c: 246:     PIE1bits.ADIE = 1;
  9333  0051E8  8591               	bsf	145,2,b	;volatile
  9334                           
  9335                           ; BSR set to: 57
  9336                           ;main.c: 247:     PIR1bits.ADIF = 0;
  9337  0051EA  95A1               	bcf	161,2,b	;volatile
  9338                           
  9339                           ; BSR set to: 57
  9340  0051EC  0012               	return		;funcret
  9341  0051EE                     __end_of_ADC_Init:
  9342                           	opt callstack 0
  9343                           
  9344 ;; *************** function _TIMER0_ISR *****************
  9345 ;; Defined at:
  9346 ;;		line 63 in file "main.c"
  9347 ;; Parameters:    Size  Location     Type
  9348 ;;		None
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;		None
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  1    wreg      void 
  9353 ;; Registers used:
  9354 ;;		wreg, status,2, status,0, cstack
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9364 ;;Total ram usage:        0 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; Hardware stack levels required when called:    1
  9367 ;; This function calls:
  9368 ;;		_ADC_Start
  9369 ;; This function is called by:
  9370 ;;		Interrupt level 2
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text39
  9375  0050F8                     __ptext39:
  9376                           	opt callstack 0
  9377  0050F8                     _TIMER0_ISR:
  9378                           	opt callstack 20
  9379                           
  9380                           ;main.c: 64:     T0CON0bits.EN = 0;
  9381                           
  9382                           ; BSR set to: 57
  9383                           ;incstack = 0
  9384  0050F8  9EB8               	bcf	16312,7,c	;volatile
  9385                           
  9386                           ;main.c: 65:     counter_timer0 ++;
  9387  0050FA  2A44               	incf	_counter_timer0,f,c
  9388                           
  9389                           ;main.c: 66:     if(counter_timer0 == 2){
  9390  0050FC  0E02               	movlw	2
  9391  0050FE  1844               	xorwf	_counter_timer0,w,c
  9392  005100  A4D8               	btfss	status,2,c
  9393  005102  D002               	goto	i2l3148
  9394                           
  9395                           ;main.c: 67:         LATAbits.LA0 = 0;
  9396  005104  90BA               	bcf	16314,0,c	;volatile
  9397                           
  9398                           ;main.c: 68:     }else if(counter_timer0 == 40){
  9399  005106  D009               	goto	i2l268
  9400  005108                     i2l3148:
  9401  005108  0E28               	movlw	40
  9402  00510A  1844               	xorwf	_counter_timer0,w,c
  9403  00510C  A4D8               	btfss	status,2,c
  9404  00510E  D005               	goto	i2l268
  9405                           
  9406                           ;main.c: 69:         if(led_enable)
  9407  005110  5043               	movf	_led_enable,w,c
  9408  005112  A4D8               	btfss	status,2,c
  9409                           
  9410                           ;main.c: 70:             LATAbits.LA0 = 1;
  9411  005114  80BA               	bsf	16314,0,c	;volatile
  9412                           
  9413                           ;main.c: 71:         counter_timer0 = 0;
  9414  005116  0E00               	movlw	0
  9415  005118  6E44               	movwf	_counter_timer0,c
  9416  00511A                     i2l268:
  9417                           
  9418                           ;main.c: 73:     TMR0L = 0xB0;
  9419  00511A  0EB0               	movlw	176
  9420  00511C  6EB6               	movwf	16310,c	;volatile
  9421                           
  9422                           ;main.c: 74:     TMR0H = 0x3C;
  9423  00511E  0E3C               	movlw	60
  9424  005120  6EB7               	movwf	16311,c	;volatile
  9425                           
  9426                           ;main.c: 75:     ADC_Start(12);
  9427  005122  0E0C               	movlw	12
  9428  005124  EC37  F029         	call	_ADC_Start
  9429                           
  9430                           ;main.c: 76:     PIR3bits.TMR0IF = 0;
  9431  005128  0139               	movlb	57	; () banked
  9432  00512A  9FA3               	bcf	163,7,b	;volatile
  9433                           
  9434                           ; BSR set to: 57
  9435                           ;main.c: 77:     T0CON0bits.EN = 1;
  9436  00512C  8EB8               	bsf	16312,7,c	;volatile
  9437                           
  9438                           ; BSR set to: 57
  9439  00512E  0011               	retfie		f
  9440  005130                     __end_of_TIMER0_ISR:
  9441                           	opt callstack 0
  9442                           
  9443 ;; *************** function _ADC_Start *****************
  9444 ;; Defined at:
  9445 ;;		line 251 in file "main.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;  pin             1    wreg     unsigned char 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;  pin             1    0[COMRAM] unsigned char 
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      void 
  9452 ;; Registers used:
  9453 ;;		wreg
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9462 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9463 ;;Total ram usage:        1 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_TIMER0_ISR
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text40
  9473  00526E                     __ptext40:
  9474                           	opt callstack 0
  9475  00526E                     _ADC_Start:
  9476                           	opt callstack 20
  9477                           
  9478                           ; BSR set to: 57
  9479                           ;incstack = 0
  9480                           ;ADC_Start@pin stored from wreg
  9481  00526E  6E01               	movwf	ADC_Start@pin,c
  9482                           
  9483                           ;main.c: 252:     if(!ADCON0bits.GO){
  9484  005270  013E               	movlb	62	; () banked
  9485  005272  B1F8               	btfsc	248,0,b	;volatile
  9486  005274  0012               	return	
  9487                           
  9488                           ; BSR set to: 62
  9489                           ;main.c: 253:         ADPCH = pin;
  9490  005276  0060  F007  FEF1   	movff	ADC_Start@pin,16113	;volatile
  9491                           
  9492                           ; BSR set to: 62
  9493                           ;main.c: 254:         ADCON0bits.GO = 1;
  9494  00527C  81F8               	bsf	248,0,b	;volatile
  9495                           
  9496                           ; BSR set to: 62
  9497  00527E  0012               	return		;funcret
  9498  005280                     __end_of_ADC_Start:
  9499                           	opt callstack 0
  9500                           
  9501 ;; *************** function _UART1_TX_ISR *****************
  9502 ;; Defined at:
  9503 ;;		line 80 in file "main.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;		None
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;		None
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      void 
  9510 ;; Registers used:
  9511 ;;		None
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9521 ;;Total ram usage:        0 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; This function calls:
  9524 ;;		Nothing
  9525 ;; This function is called by:
  9526 ;;		Interrupt level 2
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text41
  9531  005290                     __ptext41:
  9532                           	opt callstack 0
  9533  005290                     _UART1_TX_ISR:
  9534                           	opt callstack 21
  9535                           
  9536                           ;main.c: 82:     U1TXB = tx_byte;
  9537                           
  9538                           ; BSR set to: 62
  9539                           ;incstack = 0
  9540  005290  0060  F12B  FDEA   	movff	_tx_byte,15850	;volatile
  9541                           
  9542                           ;main.c: 83:     PIE3bits.U1TXIE = 0;
  9543  005296  0139               	movlb	57	; () banked
  9544  005298  9993               	bcf	147,4,b	;volatile
  9545                           
  9546                           ; BSR set to: 57
  9547  00529A  0011               	retfie		f
  9548  00529C                     __end_of_UART1_TX_ISR:
  9549                           	opt callstack 0
  9550                           
  9551 ;; *************** function _UART1_RX_ISR *****************
  9552 ;; Defined at:
  9553 ;;		line 86 in file "main.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;		None
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;		None
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  1    wreg      void 
  9560 ;; Registers used:
  9561 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9571 ;;Total ram usage:        0 bytes
  9572 ;; Hardware stack levels used:    1
  9573 ;; This function calls:
  9574 ;;		Nothing
  9575 ;; This function is called by:
  9576 ;;		Interrupt level 2
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580                           	psect	text42
  9581  005228                     __ptext42:
  9582                           	opt callstack 0
  9583  005228                     _UART1_RX_ISR:
  9584                           	opt callstack 21
  9585                           
  9586                           ;main.c: 87:     rx_buffer[rx_counter] = U1RXB;
  9587                           
  9588                           ; BSR set to: 57
  9589                           ;incstack = 0
  9590  005228  0E00               	movlw	low _rx_buffer
  9591  00522A  244B               	addwf	_rx_counter,w,c
  9592  00522C  6ED9               	movwf	fsr2l,c
  9593  00522E  6ADA               	clrf	fsr2h,c
  9594  005230  0E01               	movlw	high _rx_buffer
  9595  005232  22DA               	addwfc	fsr2h,f,c
  9596  005234  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9597                           
  9598                           ;main.c: 88:     rx_counter ++;
  9599  00523A  2A4B               	incf	_rx_counter,f,c
  9600  00523C  0011               	retfie		f
  9601  00523E                     __end_of_UART1_RX_ISR:
  9602                           	opt callstack 0
  9603                           
  9604 ;; *************** function _ADC_ISR *****************
  9605 ;; Defined at:
  9606 ;;		line 91 in file "main.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;		None
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;  adc_result      2   42[COMRAM] int 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  1    wreg      void 
  9613 ;; Registers used:
  9614 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9623 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9624 ;;Total ram usage:        4 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; Hardware stack levels required when called:    1
  9627 ;; This function calls:
  9628 ;;		___xxtofl
  9629 ;;		i2___flmul
  9630 ;; This function is called by:
  9631 ;;		Interrupt level 2
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           	psect	text43
  9636  004C2C                     __ptext43:
  9637                           	opt callstack 0
  9638  004C2C                     _ADC_ISR:
  9639                           	opt callstack 20
  9640                           
  9641                           ;main.c: 92:     int adc_result = ADRESL;
  9642                           
  9643                           ;incstack = 0
  9644  004C2C  006F FBBC  F02B    	movff	16111,ADC_ISR@adc_result	;volatile
  9645  004C32  6A2C               	clrf	ADC_ISR@adc_result+1,c
  9646                           
  9647                           ;main.c: 93:     adc_result = adc_result | (ADRESH <<8);
  9648  004C34  013E               	movlb	62	; () banked
  9649  004C36  51F0               	movf	240,w,b	;volatile
  9650  004C38  6E2A               	movwf	(??_ADC_ISR+1)& (0+255),c
  9651  004C3A  6A29               	clrf	??_ADC_ISR& (0+255),c
  9652  004C3C  502B               	movf	ADC_ISR@adc_result,w,c
  9653  004C3E  1029               	iorwf	??_ADC_ISR,w,c
  9654  004C40  6E2B               	movwf	ADC_ISR@adc_result,c
  9655  004C42  502C               	movf	ADC_ISR@adc_result+1,w,c
  9656  004C44  102A               	iorwf	??_ADC_ISR+1,w,c
  9657  004C46  6E2C               	movwf	ADC_ISR@adc_result+1,c
  9658                           
  9659                           ; BSR set to: 62
  9660                           ;main.c: 94:     ADC_VOLTAGE_RESULT = (float)adc_result * 0.00122;
  9661  004C48  0060  F0AC  F002   	movff	ADC_ISR@adc_result,___xxtofl@val
  9662  004C4E  0060  F0B0  F003   	movff	ADC_ISR@adc_result+1,___xxtofl@val+1
  9663  004C54  0E00               	movlw	0
  9664  004C56  BE03               	btfsc	___xxtofl@val+1,7,c
  9665  004C58  0EFF               	movlw	-1
  9666  004C5A  6E04               	movwf	___xxtofl@val+2,c
  9667  004C5C  6E05               	movwf	___xxtofl@val+3,c
  9668  004C5E  0E01               	movlw	1
  9669  004C60  EC2F  F021         	call	___xxtofl
  9670  004C64  0060  F008  F010   	movff	?___xxtofl,i2___flmul@b
  9671  004C6A  0060  F00C  F011   	movff	?___xxtofl+1,i2___flmul@b+1
  9672  004C70  0060  F010  F012   	movff	?___xxtofl+2,i2___flmul@b+2
  9673  004C76  0060  F014  F013   	movff	?___xxtofl+3,i2___flmul@b+3
  9674  004C7C  0E68               	movlw	104
  9675  004C7E  6E14               	movwf	i2___flmul@a,c
  9676  004C80  0EE8               	movlw	232
  9677  004C82  6E15               	movwf	i2___flmul@a+1,c
  9678  004C84  0E9F               	movlw	159
  9679  004C86  6E16               	movwf	i2___flmul@a+2,c
  9680  004C88  0E3A               	movlw	58
  9681  004C8A  6E17               	movwf	i2___flmul@a+3,c
  9682  004C8C  ECD0  F017         	call	i2___flmul	;wreg free
  9683  004C90  0060  F040  F035   	movff	?i2___flmul,_ADC_VOLTAGE_RESULT
  9684  004C96  0060  F044  F036   	movff	?i2___flmul+1,_ADC_VOLTAGE_RESULT+1
  9685  004C9C  0060  F048  F037   	movff	?i2___flmul+2,_ADC_VOLTAGE_RESULT+2
  9686  004CA2  0060  F04C  F038   	movff	?i2___flmul+3,_ADC_VOLTAGE_RESULT+3
  9687                           
  9688                           ;main.c: 95:     PIR1bits.ADIF = 0;
  9689  004CA8  0139               	movlb	57	; () banked
  9690  004CAA  95A1               	bcf	161,2,b	;volatile
  9691                           
  9692                           ; BSR set to: 57
  9693  004CAC  0011               	retfie		f
  9694  004CAE                     __end_of_ADC_ISR:
  9695                           	opt callstack 0
  9696                           
  9697 ;; *************** function i2___flmul *****************
  9698 ;; Defined at:
  9699 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  b               4   15[COMRAM] void 
  9702 ;;  a               4   19[COMRAM] void 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  __flmul         4   34[COMRAM] struct .
  9705 ;;  __flmul         4   28[COMRAM] unsigned long 
  9706 ;;  __flmul         2   38[COMRAM] struct .
  9707 ;;  __flmul         1   33[COMRAM] unsigned char 
  9708 ;;  __flmul         1   32[COMRAM] unsigned char 
  9709 ;;  __flmul         1   27[COMRAM] unsigned char 
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  4   15[COMRAM] unsigned char 
  9712 ;; Registers used:
  9713 ;;		wreg, status,2, status,0, prodl, prodh
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9719 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9720 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9721 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9722 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9723 ;;Total ram usage:       25 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; This function calls:
  9726 ;;		Nothing
  9727 ;; This function is called by:
  9728 ;;		_ADC_ISR
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text44
  9733  002FA0                     __ptext44:
  9734                           	opt callstack 0
  9735  002FA0                     i2___flmul:
  9736                           	opt callstack 20
  9737                           
  9738                           ; BSR set to: 57
  9739                           ;incstack = 0
  9740  002FA0  5013               	movf	i2___flmul@b+3,w,c
  9741  002FA2  0B80               	andlw	128
  9742  002FA4  6E1C               	movwf	i2___flmul@sign,c
  9743  002FA6  5013               	movf	i2___flmul@b+3,w,c
  9744  002FA8  2413               	addwf	i2___flmul@b+3,w,c
  9745  002FAA  6E22               	movwf	i2___flmul@bexp,c
  9746  002FAC  BE12               	btfsc	i2___flmul@b+2,7,c
  9747  002FAE  8022               	bsf	i2___flmul@bexp,0,c
  9748  002FB0  5022               	movf	i2___flmul@bexp,w,c
  9749  002FB2  B4D8               	btfsc	status,2,c
  9750  002FB4  D00D               	goto	i2l4968
  9751  002FB6  2822               	incf	i2___flmul@bexp,w,c
  9752  002FB8  A4D8               	btfss	status,2,c
  9753  002FBA  D008               	goto	i2l4966
  9754  002FBC  0E00               	movlw	0
  9755  002FBE  6E10               	movwf	i2___flmul@b,c
  9756  002FC0  0E00               	movlw	0
  9757  002FC2  6E11               	movwf	i2___flmul@b+1,c
  9758  002FC4  0E00               	movlw	0
  9759  002FC6  6E12               	movwf	i2___flmul@b+2,c
  9760  002FC8  0E00               	movlw	0
  9761  002FCA  6E13               	movwf	i2___flmul@b+3,c
  9762  002FCC                     i2l4966:
  9763  002FCC  8E12               	bsf	i2___flmul@b+2,7,c
  9764  002FCE  D008               	goto	i2l4970
  9765  002FD0                     i2l4968:
  9766  002FD0  0E00               	movlw	0
  9767  002FD2  6E10               	movwf	i2___flmul@b,c
  9768  002FD4  0E00               	movlw	0
  9769  002FD6  6E11               	movwf	i2___flmul@b+1,c
  9770  002FD8  0E00               	movlw	0
  9771  002FDA  6E12               	movwf	i2___flmul@b+2,c
  9772  002FDC  0E00               	movlw	0
  9773  002FDE  6E13               	movwf	i2___flmul@b+3,c
  9774  002FE0                     i2l4970:
  9775  002FE0  5017               	movf	i2___flmul@a+3,w,c
  9776  002FE2  0B80               	andlw	128
  9777  002FE4  1A1C               	xorwf	i2___flmul@sign,f,c
  9778  002FE6  5017               	movf	i2___flmul@a+3,w,c
  9779  002FE8  2417               	addwf	i2___flmul@a+3,w,c
  9780  002FEA  6E21               	movwf	i2___flmul@aexp,c
  9781  002FEC  BE16               	btfsc	i2___flmul@a+2,7,c
  9782  002FEE  8021               	bsf	i2___flmul@aexp,0,c
  9783  002FF0  5021               	movf	i2___flmul@aexp,w,c
  9784  002FF2  B4D8               	btfsc	status,2,c
  9785  002FF4  D00D               	goto	i2l4986
  9786  002FF6  2821               	incf	i2___flmul@aexp,w,c
  9787  002FF8  A4D8               	btfss	status,2,c
  9788  002FFA  D008               	goto	i2l4984
  9789  002FFC  0E00               	movlw	0
  9790  002FFE  6E14               	movwf	i2___flmul@a,c
  9791  003000  0E00               	movlw	0
  9792  003002  6E15               	movwf	i2___flmul@a+1,c
  9793  003004  0E00               	movlw	0
  9794  003006  6E16               	movwf	i2___flmul@a+2,c
  9795  003008  0E00               	movlw	0
  9796  00300A  6E17               	movwf	i2___flmul@a+3,c
  9797  00300C                     i2l4984:
  9798  00300C  8E16               	bsf	i2___flmul@a+2,7,c
  9799  00300E  D008               	goto	i2l1241
  9800  003010                     i2l4986:
  9801  003010  0E00               	movlw	0
  9802  003012  6E14               	movwf	i2___flmul@a,c
  9803  003014  0E00               	movlw	0
  9804  003016  6E15               	movwf	i2___flmul@a+1,c
  9805  003018  0E00               	movlw	0
  9806  00301A  6E16               	movwf	i2___flmul@a+2,c
  9807  00301C  0E00               	movlw	0
  9808  00301E  6E17               	movwf	i2___flmul@a+3,c
  9809  003020                     i2l1241:
  9810  003020  5021               	movf	i2___flmul@aexp,w,c
  9811  003022  B4D8               	btfsc	status,2,c
  9812  003024  D003               	goto	i2u617_40
  9813  003026  5022               	movf	i2___flmul@bexp,w,c
  9814  003028  A4D8               	btfss	status,2,c
  9815  00302A  D009               	goto	i2l4994
  9816  00302C                     i2u617_40:
  9817  00302C  0E00               	movlw	0
  9818  00302E  6E10               	movwf	?i2___flmul,c
  9819  003030  0E00               	movlw	0
  9820  003032  6E11               	movwf	?i2___flmul+1,c
  9821  003034  0E00               	movlw	0
  9822  003036  6E12               	movwf	?i2___flmul+2,c
  9823  003038  0E00               	movlw	0
  9824  00303A  6E13               	movwf	?i2___flmul+3,c
  9825  00303C  0012               	return	
  9826  00303E                     i2l4994:
  9827  00303E  5016               	movf	i2___flmul@a+2,w,c
  9828  003040  0210               	mulwf	i2___flmul@b,c
  9829  003042  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9830  003048  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9831  00304E  5027               	movf	i2___flmul@temp,w,c
  9832  003050  6E1D               	movwf	i2___flmul@grs,c
  9833  003052  6A1E               	clrf	i2___flmul@grs+1,c
  9834  003054  6A1F               	clrf	i2___flmul@grs+2,c
  9835  003056  6A20               	clrf	i2___flmul@grs+3,c
  9836  003058  5028               	movf	i2___flmul@temp+1,w,c
  9837  00305A  6E23               	movwf	i2___flmul@prod,c
  9838  00305C  6A24               	clrf	i2___flmul@prod+1,c
  9839  00305E  6A25               	clrf	i2___flmul@prod+2,c
  9840  003060  6A26               	clrf	i2___flmul@prod+3,c
  9841  003062  5015               	movf	i2___flmul@a+1,w,c
  9842  003064  0211               	mulwf	i2___flmul@b+1,c
  9843  003066  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9844  00306C  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9845  003072  5027               	movf	i2___flmul@temp,w,c
  9846  003074  261D               	addwf	i2___flmul@grs,f,c
  9847  003076  0E00               	movlw	0
  9848  003078  221E               	addwfc	i2___flmul@grs+1,f,c
  9849  00307A  221F               	addwfc	i2___flmul@grs+2,f,c
  9850  00307C  2220               	addwfc	i2___flmul@grs+3,f,c
  9851  00307E  5028               	movf	i2___flmul@temp+1,w,c
  9852  003080  2623               	addwf	i2___flmul@prod,f,c
  9853  003082  0E00               	movlw	0
  9854  003084  2224               	addwfc	i2___flmul@prod+1,f,c
  9855  003086  2225               	addwfc	i2___flmul@prod+2,f,c
  9856  003088  2226               	addwfc	i2___flmul@prod+3,f,c
  9857  00308A  5014               	movf	i2___flmul@a,w,c
  9858  00308C  0212               	mulwf	i2___flmul@b+2,c
  9859  00308E  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9860  003094  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9861  00309A  5027               	movf	i2___flmul@temp,w,c
  9862  00309C  261D               	addwf	i2___flmul@grs,f,c
  9863  00309E  0E00               	movlw	0
  9864  0030A0  221E               	addwfc	i2___flmul@grs+1,f,c
  9865  0030A2  221F               	addwfc	i2___flmul@grs+2,f,c
  9866  0030A4  2220               	addwfc	i2___flmul@grs+3,f,c
  9867  0030A6  5028               	movf	i2___flmul@temp+1,w,c
  9868  0030A8  2623               	addwf	i2___flmul@prod,f,c
  9869  0030AA  0E00               	movlw	0
  9870  0030AC  2224               	addwfc	i2___flmul@prod+1,f,c
  9871  0030AE  2225               	addwfc	i2___flmul@prod+2,f,c
  9872  0030B0  2226               	addwfc	i2___flmul@prod+3,f,c
  9873  0030B2  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
  9874  0030B8  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
  9875  0030BE  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
  9876  0030C4  6A1D               	clrf	i2___flmul@grs,c
  9877  0030C6  5014               	movf	i2___flmul@a,w,c
  9878  0030C8  0211               	mulwf	i2___flmul@b+1,c
  9879  0030CA  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9880  0030D0  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9881  0030D6  5027               	movf	i2___flmul@temp,w,c
  9882  0030D8  261D               	addwf	i2___flmul@grs,f,c
  9883  0030DA  5028               	movf	i2___flmul@temp+1,w,c
  9884  0030DC  221E               	addwfc	i2___flmul@grs+1,f,c
  9885  0030DE  0E00               	movlw	0
  9886  0030E0  221F               	addwfc	i2___flmul@grs+2,f,c
  9887  0030E2  0E00               	movlw	0
  9888  0030E4  2220               	addwfc	i2___flmul@grs+3,f,c
  9889  0030E6  5015               	movf	i2___flmul@a+1,w,c
  9890  0030E8  0210               	mulwf	i2___flmul@b,c
  9891  0030EA  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9892  0030F0  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9893  0030F6  5027               	movf	i2___flmul@temp,w,c
  9894  0030F8  261D               	addwf	i2___flmul@grs,f,c
  9895  0030FA  5028               	movf	i2___flmul@temp+1,w,c
  9896  0030FC  221E               	addwfc	i2___flmul@grs+1,f,c
  9897  0030FE  0E00               	movlw	0
  9898  003100  221F               	addwfc	i2___flmul@grs+2,f,c
  9899  003102  0E00               	movlw	0
  9900  003104  2220               	addwfc	i2___flmul@grs+3,f,c
  9901  003106  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
  9902  00310C  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
  9903  003112  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
  9904  003118  6A1D               	clrf	i2___flmul@grs,c
  9905  00311A  5014               	movf	i2___flmul@a,w,c
  9906  00311C  0210               	mulwf	i2___flmul@b,c
  9907  00311E  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9908  003124  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9909  00312A  5027               	movf	i2___flmul@temp,w,c
  9910  00312C  261D               	addwf	i2___flmul@grs,f,c
  9911  00312E  5028               	movf	i2___flmul@temp+1,w,c
  9912  003130  221E               	addwfc	i2___flmul@grs+1,f,c
  9913  003132  0E00               	movlw	0
  9914  003134  221F               	addwfc	i2___flmul@grs+2,f,c
  9915  003136  0E00               	movlw	0
  9916  003138  2220               	addwfc	i2___flmul@grs+3,f,c
  9917  00313A  5016               	movf	i2___flmul@a+2,w,c
  9918  00313C  0211               	mulwf	i2___flmul@b+1,c
  9919  00313E  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9920  003144  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9921  00314A  5027               	movf	i2___flmul@temp,w,c
  9922  00314C  2623               	addwf	i2___flmul@prod,f,c
  9923  00314E  5028               	movf	i2___flmul@temp+1,w,c
  9924  003150  2224               	addwfc	i2___flmul@prod+1,f,c
  9925  003152  0E00               	movlw	0
  9926  003154  2225               	addwfc	i2___flmul@prod+2,f,c
  9927  003156  0E00               	movlw	0
  9928  003158  2226               	addwfc	i2___flmul@prod+3,f,c
  9929  00315A  5015               	movf	i2___flmul@a+1,w,c
  9930  00315C  0212               	mulwf	i2___flmul@b+2,c
  9931  00315E  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9932  003164  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9933  00316A  5027               	movf	i2___flmul@temp,w,c
  9934  00316C  2623               	addwf	i2___flmul@prod,f,c
  9935  00316E  5028               	movf	i2___flmul@temp+1,w,c
  9936  003170  2224               	addwfc	i2___flmul@prod+1,f,c
  9937  003172  0E00               	movlw	0
  9938  003174  2225               	addwfc	i2___flmul@prod+2,f,c
  9939  003176  0E00               	movlw	0
  9940  003178  2226               	addwfc	i2___flmul@prod+3,f,c
  9941  00317A  5016               	movf	i2___flmul@a+2,w,c
  9942  00317C  0212               	mulwf	i2___flmul@b+2,c
  9943  00317E  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9944  003184  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9945  00318A  5027               	movf	i2___flmul@temp,w,c
  9946  00318C  6E18               	movwf	??i2___flmul& (0+255),c
  9947  00318E  5028               	movf	i2___flmul@temp+1,w,c
  9948  003190  6E19               	movwf	(??i2___flmul+1)& (0+255),c
  9949  003192  6A1A               	clrf	(??i2___flmul+2)& (0+255),c
  9950  003194  6A1B               	clrf	(??i2___flmul+3)& (0+255),c
  9951  003196  0060  F068  F01B   	movff	??i2___flmul+2,??i2___flmul+3
  9952  00319C  0060  F064  F01A   	movff	??i2___flmul+1,??i2___flmul+2
  9953  0031A2  0060  F060  F019   	movff	??i2___flmul,??i2___flmul+1
  9954  0031A8  6A18               	clrf	??i2___flmul,c
  9955  0031AA  5018               	movf	??i2___flmul,w,c
  9956  0031AC  2623               	addwf	i2___flmul@prod,f,c
  9957  0031AE  5019               	movf	??i2___flmul+1,w,c
  9958  0031B0  2224               	addwfc	i2___flmul@prod+1,f,c
  9959  0031B2  501A               	movf	??i2___flmul+2,w,c
  9960  0031B4  2225               	addwfc	i2___flmul@prod+2,f,c
  9961  0031B6  501B               	movf	??i2___flmul+3,w,c
  9962  0031B8  2226               	addwfc	i2___flmul@prod+3,f,c
  9963  0031BA  0060  F074  F018   	movff	i2___flmul@grs,??i2___flmul
  9964  0031C0  0060  F078  F019   	movff	i2___flmul@grs+1,??i2___flmul+1
  9965  0031C6  0060  F07C  F01A   	movff	i2___flmul@grs+2,??i2___flmul+2
  9966  0031CC  0060  F080  F01B   	movff	i2___flmul@grs+3,??i2___flmul+3
  9967  0031D2  0E19               	movlw	25
  9968  0031D4  D005               	goto	i2u618_40
  9969  0031D6                     i2u618_45:
  9970  0031D6  90D8               	bcf	status,0,c
  9971  0031D8  321B               	rrcf	??i2___flmul+3,f,c
  9972  0031DA  321A               	rrcf	??i2___flmul+2,f,c
  9973  0031DC  3219               	rrcf	??i2___flmul+1,f,c
  9974  0031DE  3218               	rrcf	??i2___flmul,f,c
  9975  0031E0                     i2u618_40:
  9976  0031E0  2EE8               	decfsz	wreg,f,c
  9977  0031E2  D7F9               	goto	i2u618_45
  9978  0031E4  5018               	movf	??i2___flmul,w,c
  9979  0031E6  2623               	addwf	i2___flmul@prod,f,c
  9980  0031E8  5019               	movf	??i2___flmul+1,w,c
  9981  0031EA  2224               	addwfc	i2___flmul@prod+1,f,c
  9982  0031EC  501A               	movf	??i2___flmul+2,w,c
  9983  0031EE  2225               	addwfc	i2___flmul@prod+2,f,c
  9984  0031F0  501B               	movf	??i2___flmul+3,w,c
  9985  0031F2  2226               	addwfc	i2___flmul@prod+3,f,c
  9986  0031F4  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
  9987  0031FA  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
  9988  003200  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
  9989  003206  6A1D               	clrf	i2___flmul@grs,c
  9990  003208  5021               	movf	i2___flmul@aexp,w,c
  9991  00320A  0060  F088  F018   	movff	i2___flmul@bexp,??i2___flmul
  9992  003210  6A19               	clrf	(??i2___flmul+1)& (0+255),c
  9993  003212  2618               	addwf	??i2___flmul,f,c
  9994  003214  0E00               	movlw	0
  9995  003216  2219               	addwfc	??i2___flmul+1,f,c
  9996  003218  0E82               	movlw	130
  9997  00321A  2418               	addwf	??i2___flmul,w,c
  9998  00321C  6E27               	movwf	i2___flmul@temp,c
  9999  00321E  0EFF               	movlw	255
 10000  003220  2019               	addwfc	??i2___flmul+1,w,c
 10001  003222  6E28               	movwf	i2___flmul@temp+1,c
 10002  003224  D00F               	goto	i2l5042
 10003  003226                     i2l5036:
 10004  003226  90D8               	bcf	status,0,c
 10005  003228  3623               	rlcf	i2___flmul@prod,f,c
 10006  00322A  3624               	rlcf	i2___flmul@prod+1,f,c
 10007  00322C  3625               	rlcf	i2___flmul@prod+2,f,c
 10008  00322E  3626               	rlcf	i2___flmul@prod+3,f,c
 10009  003230  BE20               	btfsc	i2___flmul@grs+3,7,c
 10010  003232  8023               	bsf	i2___flmul@prod,0,c
 10011  003234  90D8               	bcf	status,0,c
 10012  003236  361D               	rlcf	i2___flmul@grs,f,c
 10013  003238  361E               	rlcf	i2___flmul@grs+1,f,c
 10014  00323A  361F               	rlcf	i2___flmul@grs+2,f,c
 10015  00323C  3620               	rlcf	i2___flmul@grs+3,f,c
 10016  00323E  0627               	decf	i2___flmul@temp,f,c
 10017  003240  A0D8               	btfss	status,0,c
 10018  003242  0628               	decf	i2___flmul@temp+1,f,c
 10019  003244                     i2l5042:
 10020  003244  AE25               	btfss	i2___flmul@prod+2,7,c
 10021  003246  D7EF               	goto	i2l5036
 10022  003248  0E00               	movlw	0
 10023  00324A  6E21               	movwf	i2___flmul@aexp,c
 10024  00324C  AE20               	btfss	i2___flmul@grs+3,7,c
 10025  00324E  D017               	goto	i2l1250
 10026  003250  0EFF               	movlw	255
 10027  003252  141D               	andwf	i2___flmul@grs,w,c
 10028  003254  6E18               	movwf	??i2___flmul& (0+255),c
 10029  003256  0EFF               	movlw	255
 10030  003258  141E               	andwf	i2___flmul@grs+1,w,c
 10031  00325A  6E19               	movwf	(??i2___flmul+1)& (0+255),c
 10032  00325C  0EFF               	movlw	255
 10033  00325E  141F               	andwf	i2___flmul@grs+2,w,c
 10034  003260  6E1A               	movwf	(??i2___flmul+2)& (0+255),c
 10035  003262  0E7F               	movlw	127
 10036  003264  1420               	andwf	i2___flmul@grs+3,w,c
 10037  003266  6E1B               	movwf	(??i2___flmul+3)& (0+255),c
 10038  003268  5018               	movf	??i2___flmul,w,c
 10039  00326A  1019               	iorwf	??i2___flmul+1,w,c
 10040  00326C  101A               	iorwf	??i2___flmul+2,w,c
 10041  00326E  101B               	iorwf	??i2___flmul+3,w,c
 10042  003270  B4D8               	btfsc	status,2,c
 10043  003272  D003               	goto	i2l1251
 10044  003274                     i2u622_40:
 10045  003274  0E01               	movlw	1
 10046  003276  6E21               	movwf	i2___flmul@aexp,c
 10047  003278  D002               	goto	i2l1250
 10048  00327A                     i2l1251:
 10049  00327A  B023               	btfsc	i2___flmul@prod,0,c
 10050  00327C  D7FB               	goto	i2u622_40
 10051  00327E                     i2l1250:
 10052  00327E  5021               	movf	i2___flmul@aexp,w,c
 10053  003280  B4D8               	btfsc	status,2,c
 10054  003282  D027               	goto	i2l5062
 10055  003284  0E01               	movlw	1
 10056  003286  2623               	addwf	i2___flmul@prod,f,c
 10057  003288  0E00               	movlw	0
 10058  00328A  2224               	addwfc	i2___flmul@prod+1,f,c
 10059  00328C  2225               	addwfc	i2___flmul@prod+2,f,c
 10060  00328E  2226               	addwfc	i2___flmul@prod+3,f,c
 10061  003290  A026               	btfss	i2___flmul@prod+3,0,c
 10062  003292  D01F               	goto	i2l5062
 10063  003294  0060  F08C  F018   	movff	i2___flmul@prod,??i2___flmul
 10064  00329A  0060  F090  F019   	movff	i2___flmul@prod+1,??i2___flmul+1
 10065  0032A0  0060  F094  F01A   	movff	i2___flmul@prod+2,??i2___flmul+2
 10066  0032A6  0060  F098  F01B   	movff	i2___flmul@prod+3,??i2___flmul+3
 10067  0032AC  341B               	rlcf	??i2___flmul+3,w,c
 10068  0032AE  321B               	rrcf	??i2___flmul+3,f,c
 10069  0032B0  321A               	rrcf	??i2___flmul+2,f,c
 10070  0032B2  3219               	rrcf	??i2___flmul+1,f,c
 10071  0032B4  3218               	rrcf	??i2___flmul,f,c
 10072  0032B6  0060  F060  F023   	movff	??i2___flmul,i2___flmul@prod
 10073  0032BC  0060  F064  F024   	movff	??i2___flmul+1,i2___flmul@prod+1
 10074  0032C2  0060  F068  F025   	movff	??i2___flmul+2,i2___flmul@prod+2
 10075  0032C8  0060  F06C  F026   	movff	??i2___flmul+3,i2___flmul@prod+3
 10076  0032CE  4A27               	infsnz	i2___flmul@temp,f,c
 10077  0032D0  2A28               	incf	i2___flmul@temp+1,f,c
 10078  0032D2                     i2l5062:
 10079  0032D2  BE28               	btfsc	i2___flmul@temp+1,7,c
 10080  0032D4  D00D               	goto	i2l5066
 10081  0032D6  5028               	movf	i2___flmul@temp+1,w,c
 10082  0032D8  E103               	bnz	i2u626_40
 10083  0032DA  2827               	incf	i2___flmul@temp,w,c
 10084  0032DC  A0D8               	btfss	status,0,c
 10085  0032DE  D008               	goto	i2l5066
 10086  0032E0                     i2u626_40:
 10087  0032E0  0E00               	movlw	0
 10088  0032E2  6E23               	movwf	i2___flmul@prod,c
 10089  0032E4  0E00               	movlw	0
 10090  0032E6  6E24               	movwf	i2___flmul@prod+1,c
 10091  0032E8  0E80               	movlw	128
 10092  0032EA  6E25               	movwf	i2___flmul@prod+2,c
 10093  0032EC  0E7F               	movlw	127
 10094  0032EE  D021               	goto	L14
 10095  0032F0                     i2l5066:
 10096  0032F0  BE28               	btfsc	i2___flmul@temp+1,7,c
 10097  0032F2  D005               	goto	i2u627_40
 10098  0032F4  5028               	movf	i2___flmul@temp+1,w,c
 10099  0032F6  E10E               	bnz	i2l1258
 10100  0032F8  0427               	decf	i2___flmul@temp,w,c
 10101  0032FA  B0D8               	btfsc	status,0,c
 10102  0032FC  D00B               	goto	i2l1258
 10103  0032FE                     i2u627_40:
 10104  0032FE  0E00               	movlw	0
 10105  003300  6E23               	movwf	i2___flmul@prod,c
 10106  003302  0E00               	movlw	0
 10107  003304  6E24               	movwf	i2___flmul@prod+1,c
 10108  003306  0E00               	movlw	0
 10109  003308  6E25               	movwf	i2___flmul@prod+2,c
 10110  00330A  0E00               	movlw	0
 10111  00330C  6E26               	movwf	i2___flmul@prod+3,c
 10112  00330E  0E00               	movlw	0
 10113  003310  6E1C               	movwf	i2___flmul@sign,c
 10114  003312  D010               	goto	i2l5078
 10115  003314                     i2l1258:
 10116  003314  0060  F09C  F022   	movff	i2___flmul@temp,i2___flmul@bexp
 10117  00331A  0EFF               	movlw	255
 10118  00331C  1623               	andwf	i2___flmul@prod,f,c
 10119  00331E  0EFF               	movlw	255
 10120  003320  1624               	andwf	i2___flmul@prod+1,f,c
 10121  003322  0E7F               	movlw	127
 10122  003324  1625               	andwf	i2___flmul@prod+2,f,c
 10123  003326  0E00               	movlw	0
 10124  003328  1626               	andwf	i2___flmul@prod+3,f,c
 10125  00332A  B022               	btfsc	i2___flmul@bexp,0,c
 10126  00332C  8E25               	bsf	i2___flmul@prod+2,7,c
 10127  00332E  90D8               	bcf	status,0,c
 10128  003330  3022               	rrcf	i2___flmul@bexp,w,c
 10129  003332                     L14:
 10130  003332  6E26               	movwf	i2___flmul@prod+3,c
 10131  003334                     i2l5078:
 10132  003334  501C               	movf	i2___flmul@sign,w,c
 10133  003336  1226               	iorwf	i2___flmul@prod+3,f,c
 10134  003338  0060  F08C  F010   	movff	i2___flmul@prod,?i2___flmul
 10135  00333E  0060  F090  F011   	movff	i2___flmul@prod+1,?i2___flmul+1
 10136  003344  0060  F094  F012   	movff	i2___flmul@prod+2,?i2___flmul+2
 10137  00334A  0060  F098  F013   	movff	i2___flmul@prod+3,?i2___flmul+3
 10138  003350  0012               	return		;funcret
 10139  003352                     __end_ofi2___flmul:
 10140                           	opt callstack 0
 10141                           
 10142 ;; *************** function ___xxtofl *****************
 10143 ;; Defined at:
 10144 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;  sign            1    wreg     unsigned char 
 10147 ;;  val             4    1[COMRAM] long 
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;  sign            1    9[COMRAM] unsigned char 
 10150 ;;  arg             4   11[COMRAM] unsigned long 
 10151 ;;  exp             1   10[COMRAM] unsigned char 
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  4    1[COMRAM] unsigned char 
 10154 ;; Registers used:
 10155 ;;		wreg, status,2, status,0
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10162 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10164 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10165 ;;Total ram usage:       14 bytes
 10166 ;; Hardware stack levels used:    1
 10167 ;; This function calls:
 10168 ;;		Nothing
 10169 ;; This function is called by:
 10170 ;;		_ADC_ISR
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           	psect	text45
 10175  00425E                     __ptext45:
 10176                           	opt callstack 0
 10177  00425E                     ___xxtofl:
 10178                           	opt callstack 20
 10179                           
 10180                           ;incstack = 0
 10181                           ;___xxtofl@sign stored from wreg
 10182  00425E  6E0A               	movwf	___xxtofl@sign,c
 10183  004260  500A               	movf	___xxtofl@sign,w,c
 10184  004262  A4D8               	btfss	status,2,c
 10185  004264  AE05               	btfss	___xxtofl@val+3,7,c
 10186  004266  D022               	goto	i2l1282
 10187  004268  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 10188  00426E  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 10189  004274  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 10190  00427A  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 10191  004280  1E06               	comf	??___xxtofl,f,c
 10192  004282  1E07               	comf	??___xxtofl+1,f,c
 10193  004284  1E08               	comf	??___xxtofl+2,f,c
 10194  004286  1E09               	comf	??___xxtofl+3,f,c
 10195  004288  2A06               	incf	??___xxtofl,f,c
 10196  00428A  0E00               	movlw	0
 10197  00428C  2207               	addwfc	??___xxtofl+1,f,c
 10198  00428E  2208               	addwfc	??___xxtofl+2,f,c
 10199  004290  2209               	addwfc	??___xxtofl+3,f,c
 10200  004292  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 10201  004298  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 10202  00429E  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 10203  0042A4  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 10204  0042AA  D00C               	goto	i2l4914
 10205  0042AC                     i2l1282:
 10206  0042AC  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 10207  0042B2  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 10208  0042B8  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 10209  0042BE  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 10210  0042C4                     i2l4914:
 10211  0042C4  5002               	movf	___xxtofl@val,w,c
 10212  0042C6  1003               	iorwf	___xxtofl@val+1,w,c
 10213  0042C8  1004               	iorwf	___xxtofl@val+2,w,c
 10214  0042CA  1005               	iorwf	___xxtofl@val+3,w,c
 10215  0042CC  A4D8               	btfss	status,2,c
 10216  0042CE  D009               	goto	i2l4920
 10217  0042D0  0E00               	movlw	0
 10218  0042D2  6E02               	movwf	?___xxtofl,c
 10219  0042D4  0E00               	movlw	0
 10220  0042D6  6E03               	movwf	?___xxtofl+1,c
 10221  0042D8  0E00               	movlw	0
 10222  0042DA  6E04               	movwf	?___xxtofl+2,c
 10223  0042DC  0E00               	movlw	0
 10224  0042DE  6E05               	movwf	?___xxtofl+3,c
 10225  0042E0  0012               	return	
 10226  0042E2                     i2l4920:
 10227  0042E2  0E96               	movlw	150
 10228  0042E4  6E0B               	movwf	___xxtofl@exp,c
 10229  0042E6  D006               	goto	i2l4924
 10230  0042E8                     i2l4922:
 10231  0042E8  2A0B               	incf	___xxtofl@exp,f,c
 10232  0042EA  90D8               	bcf	status,0,c
 10233  0042EC  320F               	rrcf	___xxtofl@arg+3,f,c
 10234  0042EE  320E               	rrcf	___xxtofl@arg+2,f,c
 10235  0042F0  320D               	rrcf	___xxtofl@arg+1,f,c
 10236  0042F2  320C               	rrcf	___xxtofl@arg,f,c
 10237  0042F4                     i2l4924:
 10238  0042F4  0E00               	movlw	0
 10239  0042F6  140C               	andwf	___xxtofl@arg,w,c
 10240  0042F8  6E06               	movwf	??___xxtofl& (0+255),c
 10241  0042FA  0E00               	movlw	0
 10242  0042FC  140D               	andwf	___xxtofl@arg+1,w,c
 10243  0042FE  6E07               	movwf	(??___xxtofl+1)& (0+255),c
 10244  004300  0E00               	movlw	0
 10245  004302  140E               	andwf	___xxtofl@arg+2,w,c
 10246  004304  6E08               	movwf	(??___xxtofl+2)& (0+255),c
 10247  004306  0EFE               	movlw	254
 10248  004308  140F               	andwf	___xxtofl@arg+3,w,c
 10249  00430A  6E09               	movwf	(??___xxtofl+3)& (0+255),c
 10250  00430C  5006               	movf	??___xxtofl,w,c
 10251  00430E  1007               	iorwf	??___xxtofl+1,w,c
 10252  004310  1008               	iorwf	??___xxtofl+2,w,c
 10253  004312  1009               	iorwf	??___xxtofl+3,w,c
 10254  004314  B4D8               	btfsc	status,2,c
 10255  004316  D00D               	goto	i2l1289
 10256  004318  D7E7               	goto	i2l4922
 10257  00431A                     i2l4926:
 10258  00431A  2A0B               	incf	___xxtofl@exp,f,c
 10259  00431C  0E01               	movlw	1
 10260  00431E  260C               	addwf	___xxtofl@arg,f,c
 10261  004320  0E00               	movlw	0
 10262  004322  220D               	addwfc	___xxtofl@arg+1,f,c
 10263  004324  220E               	addwfc	___xxtofl@arg+2,f,c
 10264  004326  220F               	addwfc	___xxtofl@arg+3,f,c
 10265  004328  90D8               	bcf	status,0,c
 10266  00432A  320F               	rrcf	___xxtofl@arg+3,f,c
 10267  00432C  320E               	rrcf	___xxtofl@arg+2,f,c
 10268  00432E  320D               	rrcf	___xxtofl@arg+1,f,c
 10269  004330  320C               	rrcf	___xxtofl@arg,f,c
 10270  004332                     i2l1289:
 10271  004332  0E00               	movlw	0
 10272  004334  140C               	andwf	___xxtofl@arg,w,c
 10273  004336  6E06               	movwf	??___xxtofl& (0+255),c
 10274  004338  0E00               	movlw	0
 10275  00433A  140D               	andwf	___xxtofl@arg+1,w,c
 10276  00433C  6E07               	movwf	(??___xxtofl+1)& (0+255),c
 10277  00433E  0E00               	movlw	0
 10278  004340  140E               	andwf	___xxtofl@arg+2,w,c
 10279  004342  6E08               	movwf	(??___xxtofl+2)& (0+255),c
 10280  004344  0EFF               	movlw	255
 10281  004346  140F               	andwf	___xxtofl@arg+3,w,c
 10282  004348  6E09               	movwf	(??___xxtofl+3)& (0+255),c
 10283  00434A  5006               	movf	??___xxtofl,w,c
 10284  00434C  1007               	iorwf	??___xxtofl+1,w,c
 10285  00434E  1008               	iorwf	??___xxtofl+2,w,c
 10286  004350  1009               	iorwf	??___xxtofl+3,w,c
 10287  004352  B4D8               	btfsc	status,2,c
 10288  004354  D007               	goto	i2l4934
 10289  004356  D7E1               	goto	i2l4926
 10290  004358                     i2l4932:
 10291  004358  060B               	decf	___xxtofl@exp,f,c
 10292  00435A  90D8               	bcf	status,0,c
 10293  00435C  360C               	rlcf	___xxtofl@arg,f,c
 10294  00435E  360D               	rlcf	___xxtofl@arg+1,f,c
 10295  004360  360E               	rlcf	___xxtofl@arg+2,f,c
 10296  004362  360F               	rlcf	___xxtofl@arg+3,f,c
 10297  004364                     i2l4934:
 10298  004364  BE0E               	btfsc	___xxtofl@arg+2,7,c
 10299  004366  D003               	goto	i2u606_40
 10300  004368  0E02               	movlw	2
 10301  00436A  600B               	cpfslt	___xxtofl@exp,c
 10302  00436C  D7F5               	goto	i2l4932
 10303  00436E                     i2u606_40:
 10304  00436E  A00B               	btfss	___xxtofl@exp,0,c
 10305  004370  9E0E               	bcf	___xxtofl@arg+2,7,c
 10306  004372  90D8               	bcf	status,0,c
 10307  004374  320B               	rrcf	___xxtofl@exp,f,c
 10308  004376  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 10309  00437C  6A07               	clrf	(??___xxtofl+1)& (0+255),c
 10310  00437E  6A08               	clrf	(??___xxtofl+2)& (0+255),c
 10311  004380  6A09               	clrf	(??___xxtofl+3)& (0+255),c
 10312  004382  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 10313  004388  6A08               	clrf	??___xxtofl+2,c
 10314  00438A  6A07               	clrf	??___xxtofl+1,c
 10315  00438C  6A06               	clrf	??___xxtofl,c
 10316  00438E  5006               	movf	??___xxtofl,w,c
 10317  004390  120C               	iorwf	___xxtofl@arg,f,c
 10318  004392  5007               	movf	??___xxtofl+1,w,c
 10319  004394  120D               	iorwf	___xxtofl@arg+1,f,c
 10320  004396  5008               	movf	??___xxtofl+2,w,c
 10321  004398  120E               	iorwf	___xxtofl@arg+2,f,c
 10322  00439A  5009               	movf	??___xxtofl+3,w,c
 10323  00439C  120F               	iorwf	___xxtofl@arg+3,f,c
 10324  00439E  500A               	movf	___xxtofl@sign,w,c
 10325  0043A0  A4D8               	btfss	status,2,c
 10326  0043A2  AE05               	btfss	___xxtofl@val+3,7,c
 10327  0043A4  D001               	goto	i2l4950
 10328  0043A6  8E0F               	bsf	___xxtofl@arg+3,7,c
 10329  0043A8                     i2l4950:
 10330  0043A8  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 10331  0043AE  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 10332  0043B4  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 10333  0043BA  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 10334  0043C0  0012               	return		;funcret
 10335  0043C2                     __end_of___xxtofl:
 10336                           	opt callstack 0
 10337                           
 10338 ;; *************** function _I2C_TX_ISR *****************
 10339 ;; Defined at:
 10340 ;;		line 98 in file "main.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;		None
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;		None
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  1    wreg      void 
 10347 ;; Registers used:
 10348 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10358 ;;Total ram usage:        0 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		Interrupt level 2
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           	psect	text46
 10368  005240                     __ptext46:
 10369                           	opt callstack 0
 10370  005240                     _I2C_TX_ISR:
 10371                           	opt callstack 21
 10372                           
 10373                           ;main.c: 99:     I2C1TXB = I2C_TX_BUFFER[I2C_TX_COUNTER];
 10374                           
 10375                           ;incstack = 0
 10376  005240  0E2A               	movlw	low _I2C_TX_BUFFER
 10377  005242  2447               	addwf	_I2C_TX_COUNTER,w,c
 10378  005244  6ED9               	movwf	fsr2l,c
 10379  005246  6ADA               	clrf	fsr2h,c
 10380  005248  0E01               	movlw	high _I2C_TX_BUFFER
 10381  00524A  22DA               	addwfc	fsr2h,f,c
 10382  00524C  50DF               	movf	indf2,w,c
 10383  00524E  013D               	movlb	61	; () banked
 10384  005250  6F6B               	movwf	107,b	;volatile
 10385                           
 10386                           ; BSR set to: 61
 10387                           ;main.c: 100:     I2C_TX_COUNTER ++;
 10388  005252  2A47               	incf	_I2C_TX_COUNTER,f,c
 10389                           
 10390                           ; BSR set to: 61
 10391  005254  0011               	retfie		f
 10392  005256                     __end_of_I2C_TX_ISR:
 10393                           	opt callstack 0
 10394                           
 10395 ;; *************** function _I2C_RX_ISR *****************
 10396 ;; Defined at:
 10397 ;;		line 102 in file "main.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;		None
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;		None
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  1    wreg      void 
 10404 ;; Registers used:
 10405 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10406 ;; Tracked objects:
 10407 ;;		On entry : 0/0
 10408 ;;		On exit  : 0/0
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10415 ;;Total ram usage:        0 bytes
 10416 ;; Hardware stack levels used:    1
 10417 ;; This function calls:
 10418 ;;		Nothing
 10419 ;; This function is called by:
 10420 ;;		Interrupt level 2
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           	psect	text47
 10425  005258                     __ptext47:
 10426                           	opt callstack 0
 10427  005258                     _I2C_RX_ISR:
 10428                           	opt callstack 21
 10429                           
 10430                           ;main.c: 103:     I2C_RX_BUFFER[I2C_RX_COUNTER] = I2C1RXB;
 10431                           
 10432                           ; BSR set to: 61
 10433                           ;incstack = 0
 10434  005258  0E20               	movlw	low _I2C_RX_BUFFER
 10435  00525A  2446               	addwf	_I2C_RX_COUNTER,w,c
 10436  00525C  6ED9               	movwf	fsr2l,c
 10437  00525E  6ADA               	clrf	fsr2h,c
 10438  005260  0E01               	movlw	high _I2C_RX_BUFFER
 10439  005262  22DA               	addwfc	fsr2h,f,c
 10440  005264  006F F5AB FFDF     	movff	15722,indf2	;volatile
 10441                           
 10442                           ;main.c: 104:     I2C_RX_COUNTER ++;
 10443  00526A  2A46               	incf	_I2C_RX_COUNTER,f,c
 10444  00526C  0011               	retfie		f
 10445  00526E                     __end_of_I2C_RX_ISR:
 10446                           	opt callstack 0
 10447                           
 10448 ;; *************** function _I2C_GENERAL_ISR *****************
 10449 ;; Defined at:
 10450 ;;		line 107 in file "main.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;		None
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  1    wreg      void 
 10457 ;; Registers used:
 10458 ;;		wreg, status,2
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10468 ;;Total ram usage:        0 bytes
 10469 ;; Hardware stack levels used:    1
 10470 ;; This function calls:
 10471 ;;		Nothing
 10472 ;; This function is called by:
 10473 ;;		Interrupt level 2
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text48
 10478  005280                     __ptext48:
 10479                           	opt callstack 0
 10480  005280                     _I2C_GENERAL_ISR:
 10481                           	opt callstack 21
 10482                           
 10483                           ;main.c: 108:     if(I2C1PIRbits.PC1IF)
 10484                           
 10485                           ;incstack = 0
 10486  005280  013D               	movlb	61	; () banked
 10487  005282  A579               	btfss	121,2,b	;volatile
 10488  005284  D002               	goto	i2l301
 10489                           
 10490                           ; BSR set to: 61
 10491                           ;main.c: 109:         I2C_STOP_DETECTED = 1;
 10492  005286  0E01               	movlw	1
 10493  005288  6E45               	movwf	_I2C_STOP_DETECTED,c
 10494  00528A                     i2l301:
 10495                           
 10496                           ; BSR set to: 61
 10497                           ;main.c: 110:     I2C1PIR = 0x00;
 10498  00528A  0E00               	movlw	0
 10499  00528C  6F79               	movwf	121,b	;volatile
 10500                           
 10501                           ; BSR set to: 61
 10502  00528E  0011               	retfie		f
 10503  005290                     __end_of_I2C_GENERAL_ISR:
 10504                           	opt callstack 0
 10505                           
 10506 ;; *************** function _DEFAULT_ISR *****************
 10507 ;; Defined at:
 10508 ;;		line 113 in file "main.c"
 10509 ;; Parameters:    Size  Location     Type
 10510 ;;		None
 10511 ;; Auto vars:     Size  Location     Type
 10512 ;;		None
 10513 ;; Return value:  Size  Location     Type
 10514 ;;                  1    wreg      void 
 10515 ;; Registers used:
 10516 ;;		None
 10517 ;; Tracked objects:
 10518 ;;		On entry : 0/0
 10519 ;;		On exit  : 0/0
 10520 ;;		Unchanged: 0/0
 10521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10526 ;;Total ram usage:        0 bytes
 10527 ;; Hardware stack levels used:    1
 10528 ;; This function calls:
 10529 ;;		Nothing
 10530 ;; This function is called by:
 10531 ;;		Interrupt level 2
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           	psect	text49
 10536  0052A0                     __ptext49:
 10537                           	opt callstack 0
 10538  0052A0                     _DEFAULT_ISR:
 10539                           	opt callstack 21
 10540                           
 10541                           ; BSR set to: 61
 10542                           ;incstack = 0
 10543  0052A0  0011               	retfie		f
 10544  0052A2                     __end_of_DEFAULT_ISR:
 10545                           	opt callstack 0
 10546                           
 10547                           ;
 10548                           ; Interrupt Vector Table @ 0x8
 10549                           ;
 10550                           
 10551                           	psect	ivt0x8
 10552  000008                     __pivt0x8:
 10553                           	opt callstack 0
 10554  000008                     ivt0x8_base:
 10555                           	opt callstack 0
 10556                           
 10557                           ; Vector 0 : SWINT
 10558  000008  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10559                           
 10560                           ; Vector 1 : HLVD
 10561  00000A  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10562                           
 10563                           ; Vector 2 : OSF
 10564  00000C  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10565                           
 10566                           ; Vector 3 : CSW
 10567  00000E  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10568                           
 10569                           ; Vector 4 : NVM
 10570  000010  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10571                           
 10572                           ; Vector 5 : SCAN
 10573  000012  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10574                           
 10575                           ; Vector 6 : CRC
 10576  000014  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10577                           
 10578                           ; Vector 7 : IOC
 10579  000016  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10580                           
 10581                           ; Vector 8 : INT0
 10582  000018  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10583                           
 10584                           ; Vector 9 : ZCD
 10585  00001A  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10586                           
 10587                           ; Vector 10 : AD
 10588  00001C  130B               	dw	_ADC_ISR shr (0+2)
 10589                           
 10590                           ; Vector 11 : ADT
 10591  00001E  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10592                           
 10593                           ; Vector 12 : CMP1
 10594  000020  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10595                           
 10596                           ; Vector 13 : SMT1
 10597  000022  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10598                           
 10599                           ; Vector 14 : SMT1PRA
 10600  000024  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10601                           
 10602                           ; Vector 15 : SMT1PRW
 10603  000026  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10604                           
 10605                           ; Vector 16 : DMA1SCNT
 10606  000028  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10607                           
 10608                           ; Vector 17 : DMA1DCNT
 10609  00002A  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10610                           
 10611                           ; Vector 18 : DMA1OR
 10612  00002C  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10613                           
 10614                           ; Vector 19 : DMA1A
 10615  00002E  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10616                           
 10617                           ; Vector 20 : SPI1RX
 10618  000030  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10619                           
 10620                           ; Vector 21 : SPI1TX
 10621  000032  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10622                           
 10623                           ; Vector 22 : SPI1
 10624  000034  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10625                           
 10626                           ; Vector 23 : I2C1RX
 10627  000036  1496               	dw	_I2C_RX_ISR shr (0+2)
 10628                           
 10629                           ; Vector 24 : I2C1TX
 10630  000038  1490               	dw	_I2C_TX_ISR shr (0+2)
 10631                           
 10632                           ; Vector 25 : I2C1
 10633  00003A  14A0               	dw	_I2C_GENERAL_ISR shr (0+2)
 10634                           
 10635                           ; Vector 26 : I2C1E
 10636  00003C  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10637                           
 10638                           ; Vector 27 : U1RX
 10639  00003E  148A               	dw	_UART1_RX_ISR shr (0+2)
 10640                           
 10641                           ; Vector 28 : U1TX
 10642  000040  14A4               	dw	_UART1_TX_ISR shr (0+2)
 10643                           
 10644                           ; Vector 29 : U1E
 10645  000042  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10646                           
 10647                           ; Vector 30 : U1
 10648  000044  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10649                           
 10650                           ; Vector 31 : TMR0
 10651  000046  143E               	dw	_TIMER0_ISR shr (0+2)
 10652                           
 10653                           ; Vector 32 : TMR1
 10654  000048  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10655                           
 10656                           ; Vector 33 : TMR1G
 10657  00004A  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10658                           
 10659                           ; Vector 34 : TMR2
 10660  00004C  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10661                           
 10662                           ; Vector 35 : CCP1
 10663  00004E  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10664                           
 10665                           ; Vector 36 : Undefined
 10666  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10667                           
 10668                           ; Vector 37 : NCO1
 10669  000052  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10670                           
 10671                           ; Vector 38 : CWG1
 10672  000054  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10673                           
 10674                           ; Vector 39 : CLC1
 10675  000056  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10676                           
 10677                           ; Vector 40 : INT1
 10678  000058  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10679                           
 10680                           ; Vector 41 : CMP2
 10681  00005A  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10682                           
 10683                           ; Vector 42 : DMA2SCNT
 10684  00005C  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10685                           
 10686                           ; Vector 43 : DMA2DCNT
 10687  00005E  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10688                           
 10689                           ; Vector 44 : DMA2OR
 10690  000060  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10691                           
 10692                           ; Vector 45 : DMA2A
 10693  000062  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10694                           
 10695                           ; Vector 46 : I2C2RX
 10696  000064  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10697                           
 10698                           ; Vector 47 : I2C2TX
 10699  000066  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10700                           
 10701                           ; Vector 48 : I2C2
 10702  000068  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10703                           
 10704                           ; Vector 49 : I2C2E
 10705  00006A  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10706                           
 10707                           ; Vector 50 : U2RX
 10708  00006C  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10709                           
 10710                           ; Vector 51 : U2TX
 10711  00006E  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10712                           
 10713                           ; Vector 52 : U2E
 10714  000070  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10715                           
 10716                           ; Vector 53 : U2
 10717  000072  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10718                           
 10719                           ; Vector 54 : TMR3
 10720  000074  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10721                           
 10722                           ; Vector 55 : TMR3G
 10723  000076  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10724                           
 10725                           ; Vector 56 : TMR4
 10726  000078  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10727                           
 10728                           ; Vector 57 : CCP2
 10729  00007A  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10730                           
 10731                           ; Vector 58 : Undefined
 10732  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10733                           
 10734                           ; Vector 59 : CWG2
 10735  00007E  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10736                           
 10737                           ; Vector 60 : CLC2
 10738  000080  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10739                           
 10740                           ; Vector 61 : INT2
 10741  000082  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10742                           
 10743                           ; Vector 62 : Undefined
 10744  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10745                           
 10746                           ; Vector 63 : Undefined
 10747  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10748                           
 10749                           ; Vector 64 : Undefined
 10750  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10751                           
 10752                           ; Vector 65 : Undefined
 10753  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10754                           
 10755                           ; Vector 66 : Undefined
 10756  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10757                           
 10758                           ; Vector 67 : Undefined
 10759  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10760                           
 10761                           ; Vector 68 : Undefined
 10762  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10763                           
 10764                           ; Vector 69 : Undefined
 10765  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10766                           
 10767                           ; Vector 70 : TMR5
 10768  000094  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10769                           
 10770                           ; Vector 71 : TMR5G
 10771  000096  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10772                           
 10773                           ; Vector 72 : TMR6
 10774  000098  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10775                           
 10776                           ; Vector 73 : CCP3
 10777  00009A  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10778                           
 10779                           ; Vector 74 : CWG3
 10780  00009C  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10781                           
 10782                           ; Vector 75 : CLC3
 10783  00009E  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10784                           
 10785                           ; Vector 76 : Undefined
 10786  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10787                           
 10788                           ; Vector 77 : Undefined
 10789  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10790                           
 10791                           ; Vector 78 : Undefined
 10792  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10793                           
 10794                           ; Vector 79 : Undefined
 10795  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10796                           
 10797                           ; Vector 80 : CCP4
 10798  0000A8  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10799                           
 10800                           ; Vector 81 : CLC4
 10801  0000AA  14A8               	dw	_DEFAULT_ISR shr (0+2)
 10802  0000AC                     ivt0x8_undefint:
 10803                           	opt callstack 0
 10804  0000AC  00FF               	reset	
 10805                           
 10806                           	psect	param0
 10807  0000                     tosu	equ	0x3FFF
 10808                           tosh	equ	0x3FFE
 10809                           tosl	equ	0x3FFD
 10810                           stkptr	equ	0x3FFC
 10811                           pclatu	equ	0x3FFB
 10812                           pclath	equ	0x3FFA
 10813                           pcl	equ	0x3FF9
 10814                           tblptru	equ	0x3FF8
 10815                           tblptrh	equ	0x3FF7
 10816                           tblptrl	equ	0x3FF6
 10817                           tablat	equ	0x3FF5
 10818                           prodh	equ	0x3FF4
 10819                           prodl	equ	0x3FF3
 10820                           indf0	equ	0x3FEF
 10821                           postinc0	equ	0x3FEE
 10822                           postdec0	equ	0x3FED
 10823                           preinc0	equ	0x3FEC
 10824                           plusw0	equ	0x3FEB
 10825                           fsr0h	equ	0x3FEA
 10826                           fsr0l	equ	0x3FE9
 10827                           wreg	equ	0x3FE8
 10828                           indf1	equ	0x3FE7
 10829                           postinc1	equ	0x3FE6
 10830                           postdec1	equ	0x3FE5
 10831                           preinc1	equ	0x3FE4
 10832                           plusw1	equ	0x3FE3
 10833                           fsr1h	equ	0x3FE2
 10834                           fsr1l	equ	0x3FE1
 10835                           bsr	equ	0x3FE0
 10836                           indf2	equ	0x3FDF
 10837                           postinc2	equ	0x3FDE
 10838                           postdec2	equ	0x3FDD
 10839                           preinc2	equ	0x3FDC
 10840                           plusw2	equ	0x3FDB
 10841                           fsr2h	equ	0x3FDA
 10842                           fsr2l	equ	0x3FD9
 10843                           status	equ	0x3FD8


Data Sizes:
    Strings     142
    Constant    0
    Data        2
    BSS         197
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      79
    BANK0           160    160     160
    BANK1           256      4     168
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_8(CODE[24]), STR_7(CODE[19]), STR_6(CODE[13]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[24]), STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S2166_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_8(CODE[24]), STR_7(CODE[19]), STR_6(CODE[13]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[24]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_8(CODE[24]), STR_7(CODE[19]), STR_6(CODE[13]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[24]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    I2C_Transmit@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> AD5272_COMMANDS(COMRAM[2]), 

    memset@st	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    USART1_SendString@str	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER0_ISR in COMRAM

    _TIMER0_ISR->_ADC_Start

Critical Paths under _UART1_TX_ISR in COMRAM

    None.

Critical Paths under _UART1_RX_ISR in COMRAM

    None.

Critical Paths under _ADC_ISR in COMRAM

    _ADC_ISR->i2___flmul
    i2___flmul->___xxtofl

Critical Paths under _I2C_TX_ISR in COMRAM

    None.

Critical Paths under _I2C_RX_ISR in COMRAM

    None.

Critical Paths under _I2C_GENERAL_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _USART_handler->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _USART1_SendString->_GetStringSize
    _I2C_handler->_I2C_Transmit
    _USART1_ReceiveCommand->___wmul

Critical Paths under _TIMER0_ISR in BANK0

    None.

Critical Paths under _UART1_TX_ISR in BANK0

    None.

Critical Paths under _UART1_RX_ISR in BANK0

    None.

Critical Paths under _ADC_ISR in BANK0

    None.

Critical Paths under _I2C_TX_ISR in BANK0

    None.

Critical Paths under _I2C_RX_ISR in BANK0

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK0

    None.

Critical Paths under _DEFAULT_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_USART_handler

Critical Paths under _TIMER0_ISR in BANK1

    None.

Critical Paths under _UART1_TX_ISR in BANK1

    None.

Critical Paths under _UART1_RX_ISR in BANK1

    None.

Critical Paths under _ADC_ISR in BANK1

    None.

Critical Paths under _I2C_TX_ISR in BANK1

    None.

Critical Paths under _I2C_RX_ISR in BANK1

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK1

    None.

Critical Paths under _DEFAULT_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0_ISR in BANK2

    None.

Critical Paths under _UART1_TX_ISR in BANK2

    None.

Critical Paths under _UART1_RX_ISR in BANK2

    None.

Critical Paths under _ADC_ISR in BANK2

    None.

Critical Paths under _I2C_TX_ISR in BANK2

    None.

Critical Paths under _I2C_RX_ISR in BANK2

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK2

    None.

Critical Paths under _DEFAULT_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0_ISR in BANK3

    None.

Critical Paths under _UART1_TX_ISR in BANK3

    None.

Critical Paths under _UART1_RX_ISR in BANK3

    None.

Critical Paths under _ADC_ISR in BANK3

    None.

Critical Paths under _I2C_TX_ISR in BANK3

    None.

Critical Paths under _I2C_RX_ISR in BANK3

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK3

    None.

Critical Paths under _DEFAULT_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0_ISR in BANK4

    None.

Critical Paths under _UART1_TX_ISR in BANK4

    None.

Critical Paths under _UART1_RX_ISR in BANK4

    None.

Critical Paths under _ADC_ISR in BANK4

    None.

Critical Paths under _I2C_TX_ISR in BANK4

    None.

Critical Paths under _I2C_RX_ISR in BANK4

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK4

    None.

Critical Paths under _DEFAULT_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0_ISR in BANK5

    None.

Critical Paths under _UART1_TX_ISR in BANK5

    None.

Critical Paths under _UART1_RX_ISR in BANK5

    None.

Critical Paths under _ADC_ISR in BANK5

    None.

Critical Paths under _I2C_TX_ISR in BANK5

    None.

Critical Paths under _I2C_RX_ISR in BANK5

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0_ISR in BANK6

    None.

Critical Paths under _UART1_TX_ISR in BANK6

    None.

Critical Paths under _UART1_RX_ISR in BANK6

    None.

Critical Paths under _ADC_ISR in BANK6

    None.

Critical Paths under _I2C_TX_ISR in BANK6

    None.

Critical Paths under _I2C_RX_ISR in BANK6

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0_ISR in BANK7

    None.

Critical Paths under _UART1_TX_ISR in BANK7

    None.

Critical Paths under _UART1_RX_ISR in BANK7

    None.

Critical Paths under _ADC_ISR in BANK7

    None.

Critical Paths under _I2C_TX_ISR in BANK7

    None.

Critical Paths under _I2C_RX_ISR in BANK7

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TIMER0_ISR in BANK8

    None.

Critical Paths under _UART1_TX_ISR in BANK8

    None.

Critical Paths under _UART1_RX_ISR in BANK8

    None.

Critical Paths under _ADC_ISR in BANK8

    None.

Critical Paths under _I2C_TX_ISR in BANK8

    None.

Critical Paths under _I2C_RX_ISR in BANK8

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TIMER0_ISR in BANK9

    None.

Critical Paths under _UART1_TX_ISR in BANK9

    None.

Critical Paths under _UART1_RX_ISR in BANK9

    None.

Critical Paths under _ADC_ISR in BANK9

    None.

Critical Paths under _I2C_TX_ISR in BANK9

    None.

Critical Paths under _I2C_RX_ISR in BANK9

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TIMER0_ISR in BANK10

    None.

Critical Paths under _UART1_TX_ISR in BANK10

    None.

Critical Paths under _UART1_RX_ISR in BANK10

    None.

Critical Paths under _ADC_ISR in BANK10

    None.

Critical Paths under _I2C_TX_ISR in BANK10

    None.

Critical Paths under _I2C_RX_ISR in BANK10

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TIMER0_ISR in BANK11

    None.

Critical Paths under _UART1_TX_ISR in BANK11

    None.

Critical Paths under _UART1_RX_ISR in BANK11

    None.

Critical Paths under _ADC_ISR in BANK11

    None.

Critical Paths under _I2C_TX_ISR in BANK11

    None.

Critical Paths under _I2C_RX_ISR in BANK11

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TIMER0_ISR in BANK12

    None.

Critical Paths under _UART1_TX_ISR in BANK12

    None.

Critical Paths under _UART1_RX_ISR in BANK12

    None.

Critical Paths under _ADC_ISR in BANK12

    None.

Critical Paths under _I2C_TX_ISR in BANK12

    None.

Critical Paths under _I2C_RX_ISR in BANK12

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TIMER0_ISR in BANK13

    None.

Critical Paths under _UART1_TX_ISR in BANK13

    None.

Critical Paths under _UART1_RX_ISR in BANK13

    None.

Critical Paths under _ADC_ISR in BANK13

    None.

Critical Paths under _I2C_TX_ISR in BANK13

    None.

Critical Paths under _I2C_RX_ISR in BANK13

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TIMER0_ISR in BANK14

    None.

Critical Paths under _UART1_TX_ISR in BANK14

    None.

Critical Paths under _UART1_RX_ISR in BANK14

    None.

Critical Paths under _ADC_ISR in BANK14

    None.

Critical Paths under _I2C_TX_ISR in BANK14

    None.

Critical Paths under _I2C_RX_ISR in BANK14

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TIMER0_ISR in BANK15

    None.

Critical Paths under _UART1_TX_ISR in BANK15

    None.

Critical Paths under _UART1_RX_ISR in BANK15

    None.

Critical Paths under _ADC_ISR in BANK15

    None.

Critical Paths under _I2C_TX_ISR in BANK15

    None.

Critical Paths under _I2C_RX_ISR in BANK15

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TIMER0_ISR in BANK16

    None.

Critical Paths under _UART1_TX_ISR in BANK16

    None.

Critical Paths under _UART1_RX_ISR in BANK16

    None.

Critical Paths under _ADC_ISR in BANK16

    None.

Critical Paths under _I2C_TX_ISR in BANK16

    None.

Critical Paths under _I2C_RX_ISR in BANK16

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TIMER0_ISR in BANK17

    None.

Critical Paths under _UART1_TX_ISR in BANK17

    None.

Critical Paths under _UART1_RX_ISR in BANK17

    None.

Critical Paths under _ADC_ISR in BANK17

    None.

Critical Paths under _I2C_TX_ISR in BANK17

    None.

Critical Paths under _I2C_RX_ISR in BANK17

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TIMER0_ISR in BANK18

    None.

Critical Paths under _UART1_TX_ISR in BANK18

    None.

Critical Paths under _UART1_RX_ISR in BANK18

    None.

Critical Paths under _ADC_ISR in BANK18

    None.

Critical Paths under _I2C_TX_ISR in BANK18

    None.

Critical Paths under _I2C_RX_ISR in BANK18

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TIMER0_ISR in BANK19

    None.

Critical Paths under _UART1_TX_ISR in BANK19

    None.

Critical Paths under _UART1_RX_ISR in BANK19

    None.

Critical Paths under _ADC_ISR in BANK19

    None.

Critical Paths under _I2C_TX_ISR in BANK19

    None.

Critical Paths under _I2C_RX_ISR in BANK19

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TIMER0_ISR in BANK20

    None.

Critical Paths under _UART1_TX_ISR in BANK20

    None.

Critical Paths under _UART1_RX_ISR in BANK20

    None.

Critical Paths under _ADC_ISR in BANK20

    None.

Critical Paths under _I2C_TX_ISR in BANK20

    None.

Critical Paths under _I2C_RX_ISR in BANK20

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TIMER0_ISR in BANK21

    None.

Critical Paths under _UART1_TX_ISR in BANK21

    None.

Critical Paths under _UART1_RX_ISR in BANK21

    None.

Critical Paths under _ADC_ISR in BANK21

    None.

Critical Paths under _I2C_TX_ISR in BANK21

    None.

Critical Paths under _I2C_RX_ISR in BANK21

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TIMER0_ISR in BANK22

    None.

Critical Paths under _UART1_TX_ISR in BANK22

    None.

Critical Paths under _UART1_RX_ISR in BANK22

    None.

Critical Paths under _ADC_ISR in BANK22

    None.

Critical Paths under _I2C_TX_ISR in BANK22

    None.

Critical Paths under _I2C_RX_ISR in BANK22

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TIMER0_ISR in BANK23

    None.

Critical Paths under _UART1_TX_ISR in BANK23

    None.

Critical Paths under _UART1_RX_ISR in BANK23

    None.

Critical Paths under _ADC_ISR in BANK23

    None.

Critical Paths under _I2C_TX_ISR in BANK23

    None.

Critical Paths under _I2C_RX_ISR in BANK23

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TIMER0_ISR in BANK24

    None.

Critical Paths under _UART1_TX_ISR in BANK24

    None.

Critical Paths under _UART1_RX_ISR in BANK24

    None.

Critical Paths under _ADC_ISR in BANK24

    None.

Critical Paths under _I2C_TX_ISR in BANK24

    None.

Critical Paths under _I2C_RX_ISR in BANK24

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TIMER0_ISR in BANK25

    None.

Critical Paths under _UART1_TX_ISR in BANK25

    None.

Critical Paths under _UART1_RX_ISR in BANK25

    None.

Critical Paths under _ADC_ISR in BANK25

    None.

Critical Paths under _I2C_TX_ISR in BANK25

    None.

Critical Paths under _I2C_RX_ISR in BANK25

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TIMER0_ISR in BANK26

    None.

Critical Paths under _UART1_TX_ISR in BANK26

    None.

Critical Paths under _UART1_RX_ISR in BANK26

    None.

Critical Paths under _ADC_ISR in BANK26

    None.

Critical Paths under _I2C_TX_ISR in BANK26

    None.

Critical Paths under _I2C_RX_ISR in BANK26

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TIMER0_ISR in BANK27

    None.

Critical Paths under _UART1_TX_ISR in BANK27

    None.

Critical Paths under _UART1_RX_ISR in BANK27

    None.

Critical Paths under _ADC_ISR in BANK27

    None.

Critical Paths under _I2C_TX_ISR in BANK27

    None.

Critical Paths under _I2C_RX_ISR in BANK27

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TIMER0_ISR in BANK28

    None.

Critical Paths under _UART1_TX_ISR in BANK28

    None.

Critical Paths under _UART1_RX_ISR in BANK28

    None.

Critical Paths under _ADC_ISR in BANK28

    None.

Critical Paths under _I2C_TX_ISR in BANK28

    None.

Critical Paths under _I2C_RX_ISR in BANK28

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TIMER0_ISR in BANK29

    None.

Critical Paths under _UART1_TX_ISR in BANK29

    None.

Critical Paths under _UART1_RX_ISR in BANK29

    None.

Critical Paths under _ADC_ISR in BANK29

    None.

Critical Paths under _I2C_TX_ISR in BANK29

    None.

Critical Paths under _I2C_RX_ISR in BANK29

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TIMER0_ISR in BANK30

    None.

Critical Paths under _UART1_TX_ISR in BANK30

    None.

Critical Paths under _UART1_RX_ISR in BANK30

    None.

Critical Paths under _ADC_ISR in BANK30

    None.

Critical Paths under _I2C_TX_ISR in BANK30

    None.

Critical Paths under _I2C_RX_ISR in BANK30

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TIMER0_ISR in BANK31

    None.

Critical Paths under _UART1_TX_ISR in BANK31

    None.

Critical Paths under _UART1_RX_ISR in BANK31

    None.

Critical Paths under _ADC_ISR in BANK31

    None.

Critical Paths under _I2C_TX_ISR in BANK31

    None.

Critical Paths under _I2C_RX_ISR in BANK31

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   40007
                                            159 BANK0      1     1      0
                                              2 BANK1      2     2      0
                           _ADC_Init
                           _I2C_Init
                       _I2C_Transmit
                        _USART1_Init
              _USART1_ReceiveCommand
                      _USART_handler
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_handler                                        2     2      0   38196
                                              0 BANK1      2     2      0
                      _GetStringSize
                        _I2C_handler
                  _USART1_SendString
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   35579
                                            141 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   33821
                                            133 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   33327
                                            113 BANK0     20    14      6
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   28630
                                             45 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3957
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3343
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     638
                                             25 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     3      5     431
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _USART1_SendString                                    8     4      4     449
                                              4 BANK0      8     4      4
                      _GetStringSize (ARG)
                    _USART1_SendByte
 ---------------------------------------------------------------------------------
 (3) _USART1_SendByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_handler                                          3     1      2    1607
                                             12 BANK0      3     1      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C_Transmit                                        12     8      4    1334
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (2) _GetStringSize                                        4     2      2     130
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _USART1_ReceiveCommand                                2     2      0     412
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _USART1_Init                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _TIMER0_ISR                                          0     0      0      15
                          _ADC_Start
 ---------------------------------------------------------------------------------
 (11) _ADC_Start                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ADC_ISR                                             4     4      0    1962
                                             40 COMRAM     4     4      0
                           ___xxtofl
                          i2___flmul
 ---------------------------------------------------------------------------------
 (11) i2___flmul                                          25    17      8    1518
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) ___xxtofl                                           14    10      4     398
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_TX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_RX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_GENERAL_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Init
   _I2C_Transmit
   _USART1_Init
   _USART1_ReceiveCommand
     ___wmul
   _USART_handler
     _GetStringSize
     _I2C_handler
       _I2C_Transmit
     _USART1_SendString
       _GetStringSize (ARG)
       _USART1_SendByte (ARG)
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isupper
           _strncmp
           _tolower
             _isupper
   _timer0_init

 _TIMER0_ISR (ROOT)
   _ADC_Start

 _UART1_TX_ISR (ROOT)

 _UART1_RX_ISR (ROOT)

 _ADC_ISR (ROOT)
   ___xxtofl
   i2___flmul
     ___xxtofl (ARG)

 _I2C_TX_ISR (ROOT)

 _I2C_RX_ISR (ROOT)

 _I2C_GENERAL_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      A8       7       65.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      4F       1       83.2%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     197      58        0.0%
DATA                 0      0     197       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu May  2 13:05:50 2019

         USART1_SendString@size 0066                    ___fldiv@aexp 0078                    ___fldiv@bexp 0077  
           __size_of_I2C_RX_ISR 0016                    ___fldiv@sign 0070             __size_of_I2C_TX_ISR 0016  
                   __CFG_CP$OFF 000000                    ___awdiv@sign 0065              __size_of_ADC_Start 0012  
           ___wmul@multiplicand 0062                             l312 472C                             l507 4822  
                           l548 2460                             l574 2812                             l892 4546  
                           _pad 47E6                 __end_of_ADC_ISR 4CAE                    ___awmod@sign 0065  
                           wreg 003FE8                     i2___flmul@a 0014                     i2___flmul@b 0010  
                  ___flmul@aexp 006D                    ___flmul@bexp 0072                    ___flmul@sign 006C  
                  ___flmul@temp 0077                    ___flmul@prod 0073                   __CFG_BBEN$OFF 000000  
          __size_of_DEFAULT_ISR 0002                    __CFG_LVP$OFF 000000                    __CFG_ZCD$OFF 000000  
                  ___fltol@exp1 0069                            l1211 3BB8                            l1222 3C26  
                          l1223 3C22                            l1241 2C6E                            l1250 2ECC  
                          l1251 2EC8                            l1172 3920                            l1156 384E  
                          l1181 3988                            l1157 382C                            l1182 3984  
                          l1318 3E2C                            l1258 2F62                            l1384 4F68  
                          l4042 451A                            l4052 457E                            l4046 4530  
                          l4038 44E6                            l6010 21D2                            l5300 371A  
                          l6100 251A                            l6006 21B0                            l6014 2206  
                          l5400 3898                            l5320 375E                            l6024 227A  
                          l6032 2294                            l6008 21C8                            l3642 3D7A  
                          l6106 2554                            l6114 26B0                            l6042 232A  
                          l5332 3782                            l5324 3762                            l3660 3EC2  
                          l3652 3E4E                            l5500 484A                            l6060 2448  
                          l6044 2392                            l5254 48B8                            l6214 2AB0  
                          l6150 28DA                            l6070 2474                            l6038 22E0  
                          l6310 34E4                            l6302 3462                            ?_pad 0070  
                          l5408 38AA                            l5520 445E                            l3656 3E94  
                          l5264 5012                            l5272 5174                            l5504 487E  
                          l6216 2ABA                            l6136 280A                            l6128 278E  
                          l6080 24C4                            l6064 246E                            l6048 23DE  
                          l6402 4988                            l6410 499E                            l5602 3B0E  
                          l5426 3944                            l5442 3964                            l5418 3910  
                          l5362 37DC                            l5274 517A                            l6226 2B1E  
                          l6162 290A                            l6170 292A                            l6138 282C  
                          l6090 24E6                            l6330 3626                            l6314 3520  
                          l5620 3B90                            l5612 3B68                            l5436 395A  
                          l5516 4454                            l5268 5030                            l5532 4DAA  
                          l6252 2BAC                            l6236 2B4A                            l6340 3682  
                          l6414 49B2                            l5470 3A04                            l5462 39DE  
                          l5390 3872                            l5374 383A                            l5526 44A6  
                          l6078 24C0                            l6270 45B6                            l6600 3FCA  
                          l6512 3EE6                            l6424 50CA                            l5632 3BCE  
                          l5560 3A64                            l5712 2C5A                            l5376 383E  
                          l5296 3716                            l6096 250A                            l6272 45C4  
                          l6336 3676                            l6450 4FA4                            l6362 5224  
                          l6418 49D0                            l5626 3BB6                            l5722 2C8C  
                          l5714 2C5E                            l5474 3A0C                            l5490 4806  
                          l6178 294E                            l6186 2A20                            l6346 369E  
                          l6540 3F34                            l6524 3F04                            l6460 5052  
                          l6452 4FB8                            l6428 50E0                            l5580 3AA4  
                          l5556 3A60                            l5476 3A0E                            l6614 3FF0  
                          l6534 3F24                            l6374 4A0E                            l5662 3C9E  
                          l5638 3BEC                            l5910 4B18                            l5902 4AC6  
                          l5806 2F82                            l5398 3894                            l5494 481A  
                          l6198 2A62                            l6480 4BC8                            l6608 3FE0  
                          l5840 4B60                            l5832 4B42                            l5672 3CD6  
                          l5576 3AA0                            l5496 482C                            l6392 4D3A  
                          l6482 4BD2                            l6490 4C00                            l6562 3F6A  
                          l6378 4A3A                            l5850 4B80                            l5826 4B32  
                          l5674 3CD8                            l5666 3CC8                            l5658 3C7A  
                          l5594 3AF6                            l5906 4AFA                            l5770 2E92  
                          l6394 4D6A                            l6722 40D0                            l6730 4148  
                          l5588 3AD8                            l5764 2E74                            l6732 4168  
                          l6724 4100                            l6478 4BBE                            l6398 4962  
                          l5838 4B58                            l5854 4B8A                            l5870 4CC4  
                          l5790 2F20                            l5694 2C1A                            l5918 50A4  
                          l6742 41D6                            l6726 4130                            l6750 4218  
                          l6488 4BDE                            l6592 3FB4                            l6584 3F9E  
                          l6576 3F88                            l6568 3F72                            l5880 4CE6  
                          l5696 2C1E                            l5944 46C4                            l5928 4672  
                          l6736 4194                            l6752 423E                            l6832 47C8  
                          l5858 4B98                            l5890 4D08                            l5874 4CD0  
                          l5794 2F3E                            l5698 2C2E                            l5962 4704  
                          l5954 46DC                            l6746 4200                            l6738 41AC  
                          l5956 46E8                            l5948 46D4                            l6836 47D2  
                          l6828 47AC                            l5894 4D16                            l5886 4CFE  
                          l5878 4CDE                            l5976 20F2                            l5988 2124  
                          l5996 213C                            STR_1 206F                            STR_2 2062  
                          STR_3 2001                            STR_4 202E                            STR_5 2019  
                          STR_6 2055                            STR_7 2042                            STR_8 2001  
                          STR_9 207C                            u3900 3E0C                            u3920 3E74  
                          u6400 515E                            u3905 3E02                            u7130 3C1C  
                          u3850 3D40                            u6410 5160                            u3860 3D60  
                          u3925 3E6A                            u6510 3800                            u6350 48B0  
                          u8110 2B96                            u8030 2A44                            u3855 3D36  
                          u7320 2EC2                            u6520 3810                            u8120 2B98  
                          u7170 3C88                            u6530 3812                            u6370 48F8  
                          _PIR3 0039A3                            u7420 4B64                            u7180 3CAC  
                          u3885 3D94                            u7270 2C7A                            u6710 397E  
                          u3886 3D9A                            u3887 3DA8                            u7360 2F2E  
                          u7280 2E2E                            u6560 3856                            u7600 46EE  
                          u8240 35C2                            u7530 4B14                            u7370 2F4C  
                          u8090 2B34                            u8250 35C4                            u6900 449E  
                          u8180 4622                            u7285 2E24                            u9037 4780  
                          u7550 4660                            u6910 44A0                            u7710 2252  
                          u7480 4CEA                            u7560 4698                            u6920 4DF2  
                          u7720 2254                            u7640 2114                            u8450 5078  
                          u6770 39EA                            u6690 3968                            u6850 441A  
                          u8460 3EE2                            u8380 49D0                            u6940 4F4E  
                          u7820 248C                            u7565 468E                            u6950 4F50  
                          u7670 2188                            u6855 440E                            u6927 4DE4  
                          u7760 2418                            u7680 218A                            u8490 3EFE  
                          u7930 277E                            u7860 24E2                            u7790 2456  
                          u6895 4480                            u8940 4172                            u8950 4174  
                          u8990 4734                            _dbuf 0134            __size_of_I2C_handler 004A  
                          _main 471E                            _prec 003D                __end_of_I2C_Init 4E66  
                          _nout 0039                            pad@i 0077                            pad@p 0074  
                          fsr1h 003FE2                            fsr2h 003FDA                            indf1 003FE7  
                          indf2 003FDF                            fsr1l 003FE1                            pad@w 0079  
                          fsr2l 003FD9                __end_of_ADC_Init 51EE                   ___fpclassifyf 43C2  
                          prodh 003FF4                            prodl 003FF3                            start 00AE  
               ___fldiv@new_exp 0071                  ?_USART_handler 0001                    _tolower$2238 006C  
                  ___param_bank 000000                     ?_TIMER0_ISR 0001                           ??_pad 0076  
         __size_of_I2C_Transmit 00A0                   ___fltol@sign1 0068                 __end_of___fladd 3A32  
                         ?_main 0001                           _ADPCH 003EF1                 __end_of___fldiv 3CE0  
                         _ADREF 003EFD                 __end_of___awdiv 4BA6                 __end_of___flneg 50BE  
                         STR_10 2084                           STR_13 2080                           STR_14 2088  
                         STR_17 208C                   __CFG_WDTE$OFF 000000                           STR_19 208C  
               __end_of___awmod 4D24                 __end_of___flmul 2FA0                 __end_of___flsub 4EC6  
               __end_of___fltol 471E                 ___awdiv@divisor 0062                  __CFG_DEBUG$OFF 000000  
                         _U1UIR 003DF8                           _U1RXB 003DE8                           _U1TXB 003DEA  
                         i2l301 528A                           i2l268 511A                 ___awdiv@counter 0064  
                         _OSCEN 0039DD                    vfpfcnvrt@fmt 00D3                           _TMR0H 003FB7  
                         _TMR0L 003FB6          _AD5272_VOLTAGE_ADDRESS 004F                I2C_handler@value 006C  
                __CFG_FCMEN$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                           _flags 003F                           _fputc 489E  
                         _fputs 5006              __CFG_MCLRE$EXTMCLR 000000                           pad@fp 0070  
                         _width 003B                           _putch 529E                 __end_of_isupper 5166  
                         tablat 003FF5               __end_of_ADC_Start 5280                           status 003FD8  
               __end_of_sprintf 4F20                  ?___fpclassifyf 0060                 __end_of_tolower 4F76  
             _USART1_SendString 494E                   i2___flmul@grs 001D                 __end_of_strncmp 4652  
            USART1_SendString@i 0068              __size_ofi2___flmul 03B2                    _I2C_Transmit 49F0  
            ?_USART1_SendString 0064                  __CFG_CSWEN$OFF 000000         I2C_Transmit@buffer_size 0062  
      __size_of_USART1_SendByte 001A                 __initialization 4FC0                    __end_of_main 47E6  
                __CFG_SAFEN$OFF 000000             ??_USART1_SendString 0068                       ??_ADC_ISR 0029  
                 _I2C_RX_BUFFER 0120                          ??_main 01A6                  __CFG_PR1WAY$ON 000000  
                 __activetblptr 000003                   _I2C_TX_BUFFER 012A                  __CFG_MVECEN$ON 000000  
                  ??_I2C_RX_ISR 0060                    ??_I2C_TX_ISR 0060                          _ADCON0 003EF8  
                        _ADCON1 003EF9                          _ADCON2 003EFA                          ?_fputc 0060  
                        ?_fputs 0069                          _ADRESH 003EF0                          _ADRESL 003EEF  
              ___awdiv@dividend 0060                          ?_putch 0001                          _T0CON0 003FB8  
                        _T0CON1 003FB9                          _RB1I2C 003A5A                          _U1CON0 003DF2  
                        _U1CON1 003DF3                          _U1BRGH 003DF6                          _U1BRGL 003DF5  
                        _U2CON2 003DDC                          _RB0PPS 003A08              __CFG_PWRTS$PWRT_64 000000  
                        _RB1PPS 003A09       __end_of_USART1_SendString 49F0                          _RC7PPS 003A17  
                        i2l1241 3020                          i2l1250 327E                          i2l1251 327A  
                __CFG_WDTCCS$SC 000000                          i2l1282 42AC                          i2l1258 3314  
                        i2l1289 4332                          i2l3148 5108                          i2l5042 3244  
                        i2l5036 3226                          i2l5062 32D2             USART1_SendByte@byte 0060  
                        i2l5066 32F0                          i2l5078 3334             __size_of_TIMER0_ISR 0038  
                        i2l4920 42E2                          i2l4922 42E8                          i2l4914 42C4  
                        i2l4932 4358                          i2l4924 42F4                          i2l4950 43A8  
                        i2l4934 4364                          i2l4926 431A                          i2l4970 2FE0  
                        i2l4966 2FCC                          i2l4984 300C                          i2l4968 2FD0  
                        i2l4994 303E                          i2l4986 3010                 _I2C_GENERAL_ISR 5280  
                        _OSCFRQ 0039DF                 ??_USART_handler 01A4                __end_of___xxtofl 43C2  
                __CFG_XINST$OFF 000000               _I2C_STOP_DETECTED 0045                    vfprintf@cfmt 00EB  
                        ___flge 44B0                          ___fleq 4A90                       ??___fladd 0068  
                        ___wmul 519C                       ??___fldiv 0068                       ??___awdiv 0064  
                     ??___flneg 0064                  __CFG_STVREN$ON 000000                       ??___awmod 0064  
                     ??___flmul 0068                       ??___flsub 0081                       ??___fltol 0064  
                  ?_timer0_init 0001        I2C_handler@ad5272_select 006E                          _efgtoa 2090  
            __end_of_I2C_RX_ISR 526E              __end_of_I2C_TX_ISR 5256                          _floorf 3CE0  
                        _memset 50BE                          clear_0 4FE2                          clear_1 4FEE  
              ___awdiv@quotient 0066                 ___awmod@divisor 0062                 ___awmod@counter 0064  
                        pad@buf 0072                          _strcpy 4D92                          _strlen 5166  
                        fputc@c 0060                          fputs@c 006D                          fputs@i 006E  
                  __pdataCOMRAM 004E                          fputs@s 0069                       ?_I2C_Init 0001  
             __end_ofi2___flmul 3352                 ___fpclassifyf@e 0068                       ?_ADC_Init 0001  
               ___fpclassifyf@u 006A                 ___fpclassifyf@x 0060                    __mediumconst 0000  
__size_of_USART1_ReceiveCommand 01D2   __end_of_USART1_ReceiveCommand 40AE                          tblptrh 003FF7  
                     ??_isupper 0062                          tblptrl 003FF6                          tblptru 003FF8  
                  ?_USART1_Init 0001                          putch@c 0001                __end_of_vfprintf 4D92  
                     ??_sprintf 00F5                       ??_tolower 0068           __end_of_GetStringSize 5086  
                i2___flmul@aexp 0021                  i2___flmul@bexp 0022                       ??_strncmp 0066  
                i2___flmul@sign 001C                  i2___flmul@temp 0027                  i2___flmul@prod 0023  
                    ___flge@ff1 0079                      ___flge@ff2 007D                 ??___fpclassifyf 0064  
                  ___xxtofl@arg 000C                    ___xxtofl@exp 000B                    ___xxtofl@val 0002  
                    ___fleq@ff1 0060                      ___fleq@ff2 0064                      __accesstop 0060  
       __end_of__initialization 5000                      ___flneg@f1 0060                   ___rparam_used 000000  
                    ___fltol@f1 0060                  __pcstackCOMRAM 0001                  ivt0x8_undefint 00AC  
                 __end_of_fputc 494E                   __end_of_fputs 5048                   __end_of_putch 52A0  
             ??_USART1_SendByte 0060                   ?_UART1_RX_ISR 0001                   ?_UART1_TX_ISR 0001  
        _AD5272_CURRENT_ADDRESS 004E                      ??_I2C_Init 0060                      ??_ADC_Init 0060  
       __end_of_I2C_GENERAL_ISR 5290                  _I2C_RX_COUNTER 0046                         ??_fputc 0064  
                       ??_fputs 006D                 __CFG_IVT1WAY$ON 000000                         ??_putch 0060  
                    __pbssBANK1 0100      __size_of_USART1_SendString 00A2                  _I2C_TX_COUNTER 0047  
                       IVTBASEH 003FD6                         IVTBASEL 003FD5                         IVTBASEU 003FD7  
                       ?___flge 0079                         ?___fleq 0060                         _I2C1CLK 003D7B  
                       _I2C1CNT 003D6C                         _I2C1ERR 003D76                         ?___wmul 0060  
                       _I2C1PIR 003D79                         _I2C1RXB 003D6A                         _I2C1TXB 003D6B  
               __CFG_PPS1WAY$ON 000000                    ??_TIMER0_ISR 0002                         ?_efgtoa 008D  
                _counter_timer0 0044                         ?_floorf 0079                         _ADC_ISR 4C2C  
                       ?_memset 0060                  ??_UART1_RX_ISR 0002                  ??_UART1_TX_ISR 0002  
                       _COMMAND 0048                         ?_strcpy 0060                         ?_strlen 0060  
                       _U1ERRIE 003DFA                   ??_DEFAULT_ISR 0060                         _U1RXPPS 003AE5  
                     ?___xxtofl 0002                         _IVTLOCK 003FD4              __size_of_vfpfcnvrt 0396  
                       _OSCTUNE 0039DE                         _WDTCON0 00395B                         _WDTCON1 00395C  
                    _led_enable 0043                   ??_I2C_handler 006E              _ADC_VOLTAGE_RESULT 0035  
            __end_of_TIMER0_ISR 5130                  GetStringSize@i 0062                       _ADC_Start 526E  
                       __Hparam 0000                         __Lparam 0000      __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
               __size_of___flge 00D2                 __size_of___fleq 008C                         ___fladd 36E8  
                       ___fldiv 3A32                         ___awdiv 4B1C                         ___flneg 5086  
                       ___awmod 4CAE                         ___flmul 2BEC                         ___flsub 4E66  
                       ___fltol 4652                 __size_of___wmul 0030                       ?_vfprintf 00E5  
                  __psmallconst 2000                 __size_of_efgtoa 0B5C                 __size_of_floorf 01FC  
                       __pcinit 4FC0                 __size_of_memset 0038                         __ramtop 2000  
          __size_of_timer0_init 0020                         __ptext0 471E                         __ptext1 51EE  
                       __ptext2 40AE                         __ptext3 4EC6                         __ptext4 4D24  
                       __ptext5 3352                         __ptext6 4582                         __ptext7 2090  
                       __ptext8 4F20                         __ptext9 5130                 __CFG_WRTAPP$OFF 000000  
               __size_of_strcpy 006A                 __size_of_strlen 0036                    __size_of_pad 00B8  
                    ??___xxtofl 0006                ___awmod@dividend 0060                     _I2C1PIEbits 003D7A  
               __CFG_WRTSAF$OFF 000000                         _isupper 5130                         efgtoa@c 0093  
                       efgtoa@d 00B1                         efgtoa@e 00C9                         efgtoa@f 008F  
                       efgtoa@g 00C5                         efgtoa@h 00BB                         efgtoa@i 00C3  
              ?_I2C_GENERAL_ISR 0001                         efgtoa@l 00BF                         efgtoa@m 00AD  
                       efgtoa@n 00CB                         efgtoa@p 00B5                         efgtoa@t 00A9  
                       efgtoa@u 00CD                         efgtoa@w 00B8                     _I2C1PIRbits 003D79  
                       _sprintf 4EC6                         _tolower 4F20                         _tx_byte 004A  
                       _strncmp 4582             __end_of_DEFAULT_ISR 52A2            end_of_initialization 5000  
          __size_of_USART1_Init 0086                         floorf@e 0087                         floorf@m 0083  
                       floorf@u 0089                         floorf@x 0079                         fputc@fp 0062  
              __CFG_BOREN$NOSLP 000000                         memset@i 0066                         memset@x 0062  
                       fputs@fp 006B                    ADC_Start@pin 0001             __end_of_I2C_handler 4FC0  
                    ?_ADC_Start 0001               __end_of_vfpfcnvrt 36E8                      efgtoa@mode 00BA  
                    efgtoa@sign 00B3                         postdec2 003FDD                         postinc0 003FEE  
                       postinc1 003FE6                         postinc2 003FDE                      ??_vfprintf 00EB  
         __CFG_WDTCPS$WDTCPS_31 000000                         strcpy@d 0068                         strlen@a 0062  
                       strcpy@s 0066                         strlen@s 0060                     ___fladd@grs 006F  
                 ___xxtofl@sign 000A                       _TRISAbits 003FC2                       _TRISBbits 003FC3  
                     _TRISCbits 003FC4            USART1_SendString@str 0064               __size_of_I2C_Init 006A  
                   ___fldiv@grs 0073                     ___fldiv@rem 006C                      _rx_counter 004B  
             __size_of_ADC_Init 0022                       i2___flmul 2FA0                __CFG_FEXTOSC$OFF 000000  
                   ___flmul@grs 006E            __end_of_UART1_RX_ISR 523E            __end_of_UART1_TX_ISR 529C  
         __end_of_USART_handler 425E                 _USART1_SendByte 520E                  __end_of___flge 4582  
                __end_of___fleq 4B1C                     vfpfcnvrt@ap 00D5                     vfpfcnvrt@ct 00E1  
                   vfpfcnvrt@fp 00D1                  __end_of___wmul 51CC                   __pidataCOMRAM 529C  
                __end_of_efgtoa 2BEC                  __end_of_floorf 3EDC                      floorf@F524 002D  
                __end_of_memset 50F6                     _DEFAULT_ISR 52A0                  __end_of_strcpy 4DFC  
                __end_of_strlen 519C             start_initialization 4FC0               ADC_ISR@adc_result 002B  
                   __end_of_pad 489E                      ?i2___flmul 0010           _USART1_ReceiveCommand 3EDC  
                    ivt0x8_base 0008                     _I2C_handler 4F76           __end_of___fpclassifyf 44B0  
                   ??_ADC_Start 0001            USART1_Init@baud_rate 0062                __CFG_LPBOREN$OFF 000000  
                   vfprintf@fmt 00E7                        ??___flge 0081                        ??___fleq 0068  
                      ??___wmul 0064                        ??_efgtoa 0094                        ??_floorf 007D  
          _COMMAND_WRITE_NUMBER 0041          __size_of_GetStringSize 003E                        ?_ADC_ISR 0001  
                      ??_memset 0065                 _AD5272_COMMANDS 004C                      memset@size 0063  
                      ??_strcpy 0064                        ??_strlen 0062                       ___fladd@a 0064  
                     ___fladd@b 0060                       ___fldiv@a 0064                       ___fldiv@b 0060  
                     ___flmul@a 0064                       ___flmul@b 0060                     __pbssCOMRAM 002D  
                     ___flsub@a 007D                       ___flsub@b 0079                   __pcstackBANK0 0060  
                 __pcstackBANK1 01A4               __size_of___xxtofl 0164       USART1_SendString@attempts 006A  
       __end_of_USART1_SendByte 5228                   ?_I2C_Transmit 0060                     _efgtoa$1660 00A1  
                   _efgtoa$1654 009D                     _efgtoa$1655 009F                     _efgtoa$1664 00A3  
                   _efgtoa$1665 00A5                     _efgtoa$1666 00A7                        ?___fladd 0060  
                      ?___fldiv 0060                        ?___awdiv 0060                        ?___flneg 0060  
                      ?___awmod 0060                        ?___flmul 0060                        ?___flsub 0079  
                      ?___fltol 0060                        _I2C1ADB1 003D6E                        _I2C1CON0 003D73  
                      _I2C1CON1 003D74                        _I2C1CON2 003D75             main@receive_command 00FF  
             __size_of_vfprintf 006E          __CFG_BBSIZE$BBSIZE_512 000000                     __smallconst 2000  
                      _I2C_Init 4DFC                        _ADC_Init 51CC                        ?_isupper 0060  
        ?_USART1_ReceiveCommand 0001           __size_of_UART1_RX_ISR 0016           __size_of_UART1_TX_ISR 000C  
                      ?_sprintf 00ED                        ?_tolower 0066                     ??i2___flmul 0018  
                __size_of_fputc 00B0                  __size_of_fputs 0042                        ?_strncmp 0060  
                __size_of_putch 0002                   _GetStringSize 5048                      _I2C1SDAPPS 003AE2  
                    _I2C1SCLPPS 003AE1                  ___wmul@product 0064                        _LATAbits 003FBA  
                      _LATBbits 003FBB                  ??_I2C_Transmit 0064                        _IPR1bits 003981  
                      _IPR2bits 003982                        _IPR3bits 003983                        _PIE1bits 003991  
                      _PIE2bits 003992                        _PIE3bits 003993             __CFG_BORV$VBOR_2P85 000000  
                 _I2C1STAT0bits 003D77                        _PIR1bits 0039A1                        _PIR2bits 0039A2  
                      _PIR3bits 0039A3                        i2u606_40 436E                        i2u622_40 3274  
                      i2u617_40 302C                        i2u626_40 32E0                        i2u618_40 31E0  
                      i2u618_45 31D6                        i2u627_40 32FE                   ??_timer0_init 0060  
                     _vfpfcnvrt 3352                       _rx_buffer 0100                __size_of_ADC_ISR 0082  
                    _ADCON0bits 003EF8               ___wmul@multiplier 0060                    _UART1_RX_ISR 5228  
                  _UART1_TX_ISR 5290                       _tx_buffer 0184                   ??_USART1_Init 0060  
                    _I2C_RX_ISR 5258                      _I2C_TX_ISR 5240                      vfpfcnvrt@c 00E4  
                    vfpfcnvrt@f 00DD                     _INTCON0bits 003FD2                  ?_GetStringSize 0060  
                 I2C_Transmit@i 006B                ?_USART1_SendByte 0001        __size_of_I2C_GENERAL_ISR 0010  
                      __Hparam0 0000                        __Lparam0 0000                      vfprintf@ap 00E9  
                    vfprintf@fp 00E5                __size_of___fladd 034A                __size_of___fldiv 02AE  
              __size_of___awdiv 008A                __size_of___flneg 0038                __size_of___awmod 0076  
              __size_of___flmul 03B4                __size_of___flsub 0060                __size_of___fltol 00CC  
                    ?_vfpfcnvrt 00D1                      _ANSELAbits 003A40                      _ANSELBbits 003A50  
                    _ANSELCbits 003A60              ___fpclassifyf@F463 0031             __end_of_timer0_init 520E  
                  ?_DEFAULT_ISR 0001                      sprintf@fmt 00EF                        ___xxtofl 425E  
                    _T0CON0bits 003FB8                      _COMMAND_WR 0049                    _I2C1CON0bits 003D73  
                      __pivt0x8 0008                        __ptext10 4D92                        __ptext11 47E6  
                      __ptext20 36E8                        __ptext12 5166                        __ptext21 5086  
                      __ptext13 5006                        __ptext30 520E                        __ptext22 2BEC  
                      __ptext14 489E                        __ptext31 4F76                        __ptext23 44B0  
                      __ptext15 529E                        __ptext40 526E                        __ptext32 49F0  
                      __ptext24 4A90                        __ptext16 3CE0                        __ptext41 5290  
                      __ptext33 5048                        __ptext25 3A32                        __ptext17 43C2  
                      __ptext42 5228                        __ptext34 3EDC                        __ptext26 4CAE  
                      __ptext18 4652                        __ptext43 4C2C                        __ptext35 519C  
                      __ptext27 4B1C                        __ptext19 4E66                        __ptext44 2FA0  
                      __ptext36 4BA6                        __ptext28 50BE                        __ptext45 425E  
                      __ptext37 4DFC                        __ptext29 494E                        __ptext46 5240  
                      __ptext38 51CC                        __ptext47 5258                        __ptext39 50F8  
                      __ptext48 5280                        __ptext49 52A0                __size_of_isupper 0036  
                    _U1CON1bits 003DF3                    ?_I2C_handler 006C                __size_of_sprintf 005A  
              __size_of_tolower 0056                      strcpy@dest 0060                __size_of_strncmp 00D0  
           __end_of_USART1_Init 4C2C                   __size_of_main 00C8            __CFG_WDTCWS$WDTCWS_7 000000  
                      efgtoa@fp 008D                        efgtoa@ne 00AF                        efgtoa@pp 00AB  
                      efgtoa@ou 0099             I2C_Transmit@address 0063                      _ODCONBbits 003A52  
                      _vfprintf 4D24                     _OSCSTATbits 0039DC            __end_of_I2C_Transmit 4A90  
                _vfpfcnvrt$1683 00DB          __size_of_USART_handler 01B0                 ??_GetStringSize 0062  
                   ?_I2C_RX_ISR 0001                     ?_I2C_TX_ISR 0001                        memset@st 0060  
                      intlevel2 0000                       sprintf@ap 00F7               __CFG_CLKOUTEN$OFF 000000  
                   _SLRCONBbits 003A53                       strcpy@src 0062                     _PPSLOCKbits 003ABF  
                      isupper@c 0060                       strncmp@_l 0060                       strncmp@_r 0062  
             ??_I2C_GENERAL_ISR 0060                     efgtoa@nmode 00B7              I2C_Transmit@buffer 0060  
                   _timer0_init 51EE                      _TIMER0_ISR 50F8                     ??_vfpfcnvrt 00D7  
                      sprintf@f 00F9                        tolower@c 0066                        sprintf@s 00ED  
       ??_USART1_ReceiveCommand 0066          __size_of___fpclassifyf 00EE                        strncmp@l 0067  
                      strncmp@n 0064                        strncmp@r 0069                     _USART1_Init 4BA6  
                 ___fladd@signs 006C                    ___fladd@aexp 006D                    ___fladd@bexp 006E  
                 _USART_handler 40AE  
