

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu May  2 15:50:24 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=4,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=4,class=CODE,delta=1
    56                           	psect	text42,global,reloc=4,class=CODE,delta=1
    57                           	psect	text43,global,reloc=4,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=4,class=CODE,delta=1
    61                           	psect	text47,global,reloc=4,class=CODE,delta=1
    62                           	psect	text48,global,reloc=4,class=CODE,delta=1
    63                           	psect	text49,global,reloc=4,class=CODE,delta=1
    64                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    67  0000                     
    68                           ; Version 2.05
    69                           ; Generated 20/12/2018 GMT
    70                           ; 
    71                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F27K42 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataCOMRAM
   104  005334                     __pidataCOMRAM:
   105                           	opt callstack 0
   106                           
   107                           ;initializer for _measur_vol_or_cur
   108  005334  01                 	db	1
   109                           
   110                           ;initializer for _AD5272_CURRENT_ADDRESS
   111  005335  58                 	db	88
   112                           
   113                           ;initializer for _AD5272_VOLTAGE_ADDRESS
   114  005336  5E                 	db	94
   115  0000                     _PIE2bits	set	14738
   116  0000                     _PIR2bits	set	14754
   117  0000                     _IPR2bits	set	14722
   118  0000                     _PIE1bits	set	14737
   119  0000                     _IPR1bits	set	14721
   120  0000                     _WDTCON0	set	14683
   121  0000                     _WDTCON1	set	14684
   122  0000                     _OSCSTATbits	set	14812
   123  0000                     _OSCEN	set	14813
   124  0000                     _OSCTUNE	set	14814
   125  0000                     _OSCFRQ	set	14815
   126  0000                     _PIR1bits	set	14753
   127  0000                     _PIR3bits	set	14755
   128  0000                     _PIR3	set	14755
   129  0000                     _IPR3bits	set	14723
   130  0000                     _PIE3bits	set	14739
   131  0000                     _RB0PPS	set	14856
   132  0000                     _RB1PPS	set	14857
   133  0000                     _I2C1SDAPPS	set	15074
   134  0000                     _I2C1SCLPPS	set	15073
   135  0000                     _SLRCONBbits	set	14931
   136  0000                     _RB1I2C	set	14938
   137  0000                     _ODCONBbits	set	14930
   138  0000                     _ANSELBbits	set	14928
   139  0000                     _ANSELAbits	set	14912
   140  0000                     _PPSLOCKbits	set	15039
   141  0000                     _RC7PPS	set	14871
   142  0000                     _U1RXPPS	set	15077
   143  0000                     _ANSELCbits	set	14944
   144  0000                     _I2C1ADB1	set	15726
   145  0000                     _I2C1CNT	set	15724
   146  0000                     _I2C1STAT0bits	set	15735
   147  0000                     _I2C1CON0bits	set	15731
   148  0000                     _I2C1PIEbits	set	15738
   149  0000                     _I2C1ERR	set	15734
   150  0000                     _I2C1CLK	set	15739
   151  0000                     _I2C1CON2	set	15733
   152  0000                     _I2C1CON1	set	15732
   153  0000                     _I2C1CON0	set	15731
   154  0000                     _I2C1PIR	set	15737
   155  0000                     _I2C1PIRbits	set	15737
   156  0000                     _I2C1RXB	set	15722
   157  0000                     _I2C1TXB	set	15723
   158  0000                     _U1RXB	set	15848
   159  0000                     _U1TXB	set	15850
   160  0000                     _U1CON1bits	set	15859
   161  0000                     _U1UIR	set	15864
   162  0000                     _U1ERRIE	set	15866
   163  0000                     _U2CON2	set	15836
   164  0000                     _U1CON1	set	15859
   165  0000                     _U1CON0	set	15858
   166  0000                     _U1BRGL	set	15861
   167  0000                     _U1BRGH	set	15862
   168  0000                     _ADCON0bits	set	16120
   169  0000                     _ADREF	set	16125
   170  0000                     _ADCON2	set	16122
   171  0000                     _ADCON1	set	16121
   172  0000                     _ADCON0	set	16120
   173  0000                     _ADPCH	set	16113
   174  0000                     _ADRESH	set	16112
   175  0000                     _ADRESL	set	16111
   176  0000                     _T0CON1	set	16313
   177  0000                     _T0CON0	set	16312
   178  0000                     _LATBbits	set	16315
   179  0000                     _TRISBbits	set	16323
   180  0000                     _TRISAbits	set	16322
   181  0000                     _INTCON0bits	set	16338
   182  0000                     _IVTLOCK	set	16340
   183  0000                     _TMR0H	set	16311
   184  0000                     _TMR0L	set	16310
   185  0000                     _LATAbits	set	16314
   186  0000                     _T0CON0bits	set	16312
   187  0000                     _TRISCbits	set	16324
   188                           
   189                           	psect	smallconst
   190  002000                     __psmallconst:
   191                           	opt callstack 0
   192  002000  00                 	db	0
   193  002001                     STR_3:
   194  002001  43                 	db	67	;'C'
   195  002002  6F                 	db	111	;'o'
   196  002003  6D                 	db	109	;'m'
   197  002004  6D                 	db	109	;'m'
   198  002005  61                 	db	97	;'a'
   199  002006  6E                 	db	110	;'n'
   200  002007  64                 	db	100	;'d'
   201  002008  20                 	db	32
   202  002009  6E                 	db	110	;'n'
   203  00200A  6F                 	db	111	;'o'
   204  00200B  74                 	db	116	;'t'
   205  00200C  20                 	db	32
   206  00200D  72                 	db	114	;'r'
   207  00200E  65                 	db	101	;'e'
   208  00200F  63                 	db	99	;'c'
   209  002010  6F                 	db	111	;'o'
   210  002011  67                 	db	103	;'g'
   211  002012  6E                 	db	110	;'n'
   212  002013  69                 	db	105	;'i'
   213  002014  7A                 	db	122	;'z'
   214  002015  65                 	db	101	;'e'
   215  002016  64                 	db	100	;'d'
   216  002017  21                 	db	33
   217  002018  00                 	db	0
   218  002019                     STR_5:
   219  002019  42                 	db	66	;'B'
   220  00201A  6C                 	db	108	;'l'
   221  00201B  69                 	db	105	;'i'
   222  00201C  6E                 	db	110	;'n'
   223  00201D  6B                 	db	107	;'k'
   224  00201E  69                 	db	105	;'i'
   225  00201F  6E                 	db	110	;'n'
   226  002020  67                 	db	103	;'g'
   227  002021  20                 	db	32
   228  002022  4C                 	db	76	;'L'
   229  002023  45                 	db	69	;'E'
   230  002024  44                 	db	68	;'D'
   231  002025  20                 	db	32
   232  002026  69                 	db	105	;'i'
   233  002027  73                 	db	115	;'s'
   234  002028  20                 	db	32
   235  002029  4F                 	db	79	;'O'
   236  00202A  46                 	db	70	;'F'
   237  00202B  46                 	db	70	;'F'
   238  00202C  21                 	db	33
   239  00202D  00                 	db	0
   240  00202E                     STR_4:
   241  00202E  42                 	db	66	;'B'
   242  00202F  6C                 	db	108	;'l'
   243  002030  69                 	db	105	;'i'
   244  002031  6E                 	db	110	;'n'
   245  002032  6B                 	db	107	;'k'
   246  002033  69                 	db	105	;'i'
   247  002034  6E                 	db	110	;'n'
   248  002035  67                 	db	103	;'g'
   249  002036  20                 	db	32
   250  002037  4C                 	db	76	;'L'
   251  002038  45                 	db	69	;'E'
   252  002039  44                 	db	68	;'D'
   253  00203A  20                 	db	32
   254  00203B  69                 	db	105	;'i'
   255  00203C  73                 	db	115	;'s'
   256  00203D  20                 	db	32
   257  00203E  4F                 	db	79	;'O'
   258  00203F  4E                 	db	78	;'N'
   259  002040  21                 	db	33
   260  002041  00                 	db	0
   261  002042                     STR_7:
   262  002042  43                 	db	67	;'C'
   263  002043  75                 	db	117	;'u'
   264  002044  72                 	db	114	;'r'
   265  002045  72                 	db	114	;'r'
   266  002046  65                 	db	101	;'e'
   267  002047  6E                 	db	110	;'n'
   268  002048  74                 	db	116	;'t'
   269  002049  20                 	db	32
   270  00204A  4C                 	db	76	;'L'
   271  00204B  69                 	db	105	;'i'
   272  00204C  6D                 	db	109	;'m'
   273  00204D  69                 	db	105	;'i'
   274  00204E  74                 	db	116	;'t'
   275  00204F  20                 	db	32
   276  002050  73                 	db	115	;'s'
   277  002051  65                 	db	101	;'e'
   278  002052  74                 	db	116	;'t'
   279  002053  21                 	db	33
   280  002054  00                 	db	0
   281  002055                     STR_6:
   282  002055  56                 	db	86	;'V'
   283  002056  6F                 	db	111	;'o'
   284  002057  6C                 	db	108	;'l'
   285  002058  74                 	db	116	;'t'
   286  002059  61                 	db	97	;'a'
   287  00205A  67                 	db	103	;'g'
   288  00205B  65                 	db	101	;'e'
   289  00205C  20                 	db	32
   290  00205D  73                 	db	115	;'s'
   291  00205E  65                 	db	101	;'e'
   292  00205F  74                 	db	116	;'t'
   293  002060  21                 	db	33
   294  002061  00                 	db	0
   295  002062                     STR_2:
   296  002062  43                 	db	67	;'C'
   297  002063  75                 	db	117	;'u'
   298  002064  72                 	db	114	;'r'
   299  002065  72                 	db	114	;'r'
   300  002066  65                 	db	101	;'e'
   301  002067  6E                 	db	110	;'n'
   302  002068  74                 	db	116	;'t'
   303  002069  3A                 	db	58	;':'
   304  00206A  25                 	db	37
   305  00206B  66                 	db	102	;'f'
   306  00206C  20                 	db	32
   307  00206D  41                 	db	65	;'A'
   308  00206E  00                 	db	0
   309  00206F                     STR_1:
   310  00206F  56                 	db	86	;'V'
   311  002070  6F                 	db	111	;'o'
   312  002071  6C                 	db	108	;'l'
   313  002072  74                 	db	116	;'t'
   314  002073  61                 	db	97	;'a'
   315  002074  67                 	db	103	;'g'
   316  002075  65                 	db	101	;'e'
   317  002076  3A                 	db	58	;':'
   318  002077  25                 	db	37
   319  002078  66                 	db	102	;'f'
   320  002079  20                 	db	32
   321  00207A  56                 	db	86	;'V'
   322  00207B  00                 	db	0
   323  00207C                     STR_9:
   324  00207C  49                 	db	73	;'I'
   325  00207D  4E                 	db	78	;'N'
   326  00207E  46                 	db	70	;'F'
   327  00207F  00                 	db	0
   328  002080                     STR_13:
   329  002080  4E                 	db	78	;'N'
   330  002081  41                 	db	65	;'A'
   331  002082  4E                 	db	78	;'N'
   332  002083  00                 	db	0
   333  002084                     STR_10:
   334  002084  69                 	db	105	;'i'
   335  002085  6E                 	db	110	;'n'
   336  002086  66                 	db	102	;'f'
   337  002087  00                 	db	0
   338  002088                     STR_14:
   339  002088  6E                 	db	110	;'n'
   340  002089  61                 	db	97	;'a'
   341  00208A  6E                 	db	110	;'n'
   342  00208B  00                 	db	0
   343  00208C                     STR_17:
   344  00208C  6C                 	db	108	;'l'
   345  00208D  66                 	db	102	;'f'
   346  00208E  00                 	db	0
   347  0000                     
   348                           ; #config settings
   349  00208F  00                 	db	0	; dummy byte at the end
   350  0000                     
   351                           	psect	cinit
   352  005040                     __pcinit:
   353                           	opt callstack 0
   354  005040                     start_initialization:
   355                           	opt callstack 0
   356  005040                     __initialization:
   357                           	opt callstack 0
   358                           
   359                           ; Initialize objects allocated to COMRAM (3 bytes)
   360                           ; load TBLPTR registers with __pidataCOMRAM
   361  005040  0E34               	movlw	low __pidataCOMRAM
   362  005042  6EF6               	movwf	tblptrl,c
   363  005044  0E53               	movlw	high __pidataCOMRAM
   364  005046  6EF7               	movwf	tblptrh,c
   365  005048  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   366  00504A  6EF8               	movwf	tblptru,c
   367  00504C  0009               	tblrd		*+	;fetch initializer
   368  00504E  006F FFD4  F052    	movff	tablat,__pdataCOMRAM
   369  005054  0009               	tblrd		*+	;fetch initializer
   370  005056  006F FFD4  F053    	movff	tablat,__pdataCOMRAM+1
   371  00505C  0009               	tblrd		*+	;fetch initializer
   372  00505E  006F FFD4  F054    	movff	tablat,__pdataCOMRAM+2
   373                           
   374                           ; Clear objects allocated to BANK1 (164 bytes)
   375  005064  EE00  F100         	lfsr	0,__pbssBANK1
   376  005068  0EA4               	movlw	164
   377  00506A                     clear_0:
   378  00506A  6AEE               	clrf	postinc0,c
   379  00506C  06E8               	decf	wreg,f,c
   380  00506E  E1FD               	bnz	clear_0
   381                           
   382                           ; Clear objects allocated to COMRAM (37 bytes)
   383  005070  EE00  F02D         	lfsr	0,__pbssCOMRAM
   384  005074  0E25               	movlw	37
   385  005076                     clear_1:
   386  005076  6AEE               	clrf	postinc0,c
   387  005078  06E8               	decf	wreg,f,c
   388  00507A  E1FD               	bnz	clear_1
   389                           
   390                           ;
   391                           ; Setup IVTBASE
   392                           ;
   393  00507C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   394  00507E  6ED5               	movwf	213,c
   395  005080  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   396  005082  6ED6               	movwf	214,c
   397  005084  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   398  005086  6ED7               	movwf	215,c
   399  005088                     end_of_initialization:
   400                           	opt callstack 0
   401  005088                     __end_of__initialization:
   402                           	opt callstack 0
   403  005088  0100               	movlb	0
   404  00508A  EF0A  F024         	goto	_main	;jump to C main() function
   405                           
   406                           	psect	bssCOMRAM
   407  00002D                     __pbssCOMRAM:
   408                           	opt callstack 0
   409  00002D                     floorf@F524:
   410                           	opt callstack 0
   411  00002D                     	ds	4
   412  000031                     ___fpclassifyf@F463:
   413                           	opt callstack 0
   414  000031                     	ds	4
   415  000035                     _ADC_CURRENT_RESULT:
   416                           	opt callstack 0
   417  000035                     	ds	4
   418  000039                     _ADC_VOLTAGE_RESULT:
   419                           	opt callstack 0
   420  000039                     	ds	4
   421  00003D                     _nout:
   422                           	opt callstack 0
   423  00003D                     	ds	2
   424  00003F                     _width:
   425                           	opt callstack 0
   426  00003F                     	ds	2
   427  000041                     _prec:
   428                           	opt callstack 0
   429  000041                     	ds	2
   430  000043                     _flags:
   431                           	opt callstack 0
   432  000043                     	ds	2
   433  000045                     _COMMAND_WRITE_NUMBER:
   434                           	opt callstack 0
   435  000045                     	ds	2
   436  000047                     _led_enable:
   437                           	opt callstack 0
   438  000047                     	ds	1
   439  000048                     _counter_timer0:
   440                           	opt callstack 0
   441  000048                     	ds	1
   442  000049                     _I2C_STOP_DETECTED:
   443                           	opt callstack 0
   444  000049                     	ds	1
   445  00004A                     _I2C_RX_COUNTER:
   446                           	opt callstack 0
   447  00004A                     	ds	1
   448  00004B                     _I2C_TX_COUNTER:
   449                           	opt callstack 0
   450  00004B                     	ds	1
   451  00004C                     _COMMAND:
   452                           	opt callstack 0
   453  00004C                     	ds	1
   454  00004D                     _COMMAND_WR:
   455                           	opt callstack 0
   456  00004D                     	ds	1
   457  00004E                     _tx_byte:
   458                           	opt callstack 0
   459  00004E                     	ds	1
   460  00004F                     _rx_counter:
   461                           	opt callstack 0
   462  00004F                     	ds	1
   463  000050                     _AD5272_COMMANDS:
   464                           	opt callstack 0
   465  000050                     	ds	2
   466                           
   467                           	psect	dataCOMRAM
   468  000052                     __pdataCOMRAM:
   469                           	opt callstack 0
   470  000052                     _measur_vol_or_cur:
   471                           	opt callstack 0
   472  000052                     	ds	1
   473  000053                     _AD5272_CURRENT_ADDRESS:
   474                           	opt callstack 0
   475  000053                     	ds	1
   476  000054                     _AD5272_VOLTAGE_ADDRESS:
   477                           	opt callstack 0
   478  000054                     	ds	1
   479                           
   480                           	psect	bssBANK1
   481  000100                     __pbssBANK1:
   482                           	opt callstack 0
   483  000100                     _rx_buffer:
   484                           	opt callstack 0
   485  000100                     	ds	32
   486  000120                     _I2C_RX_BUFFER:
   487                           	opt callstack 0
   488  000120                     	ds	10
   489  00012A                     _I2C_TX_BUFFER:
   490                           	opt callstack 0
   491  00012A                     	ds	10
   492  000134                     _dbuf:
   493                           	opt callstack 0
   494  000134                     	ds	80
   495  000184                     _tx_buffer:
   496                           	opt callstack 0
   497  000184                     	ds	32
   498                           
   499                           	psect	cstackBANK1
   500  0001A4                     __pcstackBANK1:
   501                           	opt callstack 0
   502  0001A4                     ??_USART_handler:
   503                           
   504                           ; 1 bytes @ 0x0
   505  0001A4                     	ds	2
   506  0001A6                     ??_main:
   507                           
   508                           ; 1 bytes @ 0x2
   509  0001A6                     	ds	2
   510                           
   511                           	psect	cstackBANK0
   512  000060                     __pcstackBANK0:
   513                           	opt callstack 0
   514  000060                     ??_USART1_Init:
   515  000060                     ?_GetStringSize:
   516                           	opt callstack 0
   517  000060                     ?_strlen:
   518                           	opt callstack 0
   519  000060                     ?___fpclassifyf:
   520                           	opt callstack 0
   521  000060                     ?_isupper:
   522                           	opt callstack 0
   523  000060                     ?_strncmp:
   524                           	opt callstack 0
   525  000060                     ?___wmul:
   526                           	opt callstack 0
   527  000060                     ?___awdiv:
   528                           	opt callstack 0
   529  000060                     ?___awmod:
   530                           	opt callstack 0
   531  000060                     ?___fladd:
   532                           	opt callstack 0
   533  000060                     ?___fldiv:
   534                           	opt callstack 0
   535  000060                     ?___flmul:
   536                           	opt callstack 0
   537  000060                     ?___flneg:
   538                           	opt callstack 0
   539  000060                     ?___fltol:
   540                           	opt callstack 0
   541  000060                     USART1_SendByte@byte:
   542                           	opt callstack 0
   543  000060                     memset@st:
   544                           	opt callstack 0
   545  000060                     I2C_Transmit@buffer:
   546                           	opt callstack 0
   547  000060                     ___wmul@multiplier:
   548                           	opt callstack 0
   549  000060                     ___awdiv@dividend:
   550                           	opt callstack 0
   551  000060                     ___awmod@dividend:
   552                           	opt callstack 0
   553  000060                     isupper@c:
   554                           	opt callstack 0
   555  000060                     fputc@c:
   556                           	opt callstack 0
   557  000060                     strcpy@dest:
   558                           	opt callstack 0
   559  000060                     strlen@s:
   560                           	opt callstack 0
   561  000060                     strncmp@_l:
   562                           	opt callstack 0
   563  000060                     ___fleq@ff1:
   564                           	opt callstack 0
   565  000060                     ___flneg@f1:
   566                           	opt callstack 0
   567  000060                     ___fltol@f1:
   568                           	opt callstack 0
   569  000060                     ___fladd@b:
   570                           	opt callstack 0
   571  000060                     ___fldiv@b:
   572                           	opt callstack 0
   573  000060                     ___flmul@b:
   574                           	opt callstack 0
   575  000060                     ___fpclassifyf@x:
   576                           	opt callstack 0
   577                           
   578                           ; 4 bytes @ 0x0
   579  000060                     	ds	2
   580  000062                     ??_isupper:
   581  000062                     USART1_Init@baud_rate:
   582                           	opt callstack 0
   583  000062                     memset@x:
   584                           	opt callstack 0
   585  000062                     I2C_Transmit@buffer_size:
   586                           	opt callstack 0
   587  000062                     GetStringSize@i:
   588                           	opt callstack 0
   589  000062                     ___wmul@multiplicand:
   590                           	opt callstack 0
   591  000062                     ___awdiv@divisor:
   592                           	opt callstack 0
   593  000062                     ___awmod@divisor:
   594                           	opt callstack 0
   595  000062                     fputc@fp:
   596                           	opt callstack 0
   597  000062                     strcpy@src:
   598                           	opt callstack 0
   599  000062                     strlen@a:
   600                           	opt callstack 0
   601  000062                     strncmp@_r:
   602                           	opt callstack 0
   603                           
   604                           ; 2 bytes @ 0x2
   605  000062                     	ds	1
   606  000063                     I2C_Transmit@address:
   607                           	opt callstack 0
   608  000063                     memset@size:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x3
   612  000063                     	ds	1
   613  000064                     ??_I2C_Transmit:
   614  000064                     ??_fputc:
   615  000064                     ??___fpclassifyf:
   616  000064                     ??_strcpy:
   617  000064                     ??___fltol:
   618  000064                     ___awdiv@counter:
   619                           	opt callstack 0
   620  000064                     ___awmod@counter:
   621                           	opt callstack 0
   622  000064                     USART1_SendString@str:
   623                           	opt callstack 0
   624  000064                     ___wmul@product:
   625                           	opt callstack 0
   626  000064                     strncmp@n:
   627                           	opt callstack 0
   628  000064                     ___fleq@ff2:
   629                           	opt callstack 0
   630  000064                     ___fladd@a:
   631                           	opt callstack 0
   632  000064                     ___fldiv@a:
   633                           	opt callstack 0
   634  000064                     ___flmul@a:
   635                           	opt callstack 0
   636                           
   637                           ; 4 bytes @ 0x4
   638  000064                     	ds	1
   639  000065                     ??_memset:
   640  000065                     ___awdiv@sign:
   641                           	opt callstack 0
   642  000065                     ___awmod@sign:
   643                           	opt callstack 0
   644                           
   645                           ; 1 bytes @ 0x5
   646  000065                     	ds	1
   647  000066                     ??_strncmp:
   648  000066                     ??_USART1_ReceiveCommand:
   649  000066                     ?_tolower:
   650                           	opt callstack 0
   651  000066                     USART1_SendString@size:
   652                           	opt callstack 0
   653  000066                     memset@i:
   654                           	opt callstack 0
   655  000066                     ___awdiv@quotient:
   656                           	opt callstack 0
   657  000066                     strcpy@s:
   658                           	opt callstack 0
   659  000066                     tolower@c:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0x6
   663  000066                     	ds	1
   664  000067                     strncmp@l:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x7
   668  000067                     	ds	1
   669  000068                     ??_tolower:
   670  000068                     ??___fladd:
   671  000068                     ??___fldiv:
   672  000068                     ??___flmul:
   673  000068                     ??___fleq:
   674  000068                     ___fltol@sign1:
   675                           	opt callstack 0
   676  000068                     USART1_SendString@i:
   677                           	opt callstack 0
   678  000068                     ___fpclassifyf@e:
   679                           	opt callstack 0
   680  000068                     strcpy@d:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x8
   684  000068                     	ds	1
   685  000069                     ___fltol@exp1:
   686                           	opt callstack 0
   687  000069                     fputs@s:
   688                           	opt callstack 0
   689  000069                     strncmp@r:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x9
   693  000069                     	ds	1
   694  00006A                     USART1_SendString@attempts:
   695                           	opt callstack 0
   696  00006A                     ___fpclassifyf@u:
   697                           	opt callstack 0
   698                           
   699                           ; 4 bytes @ 0xA
   700  00006A                     	ds	1
   701  00006B                     I2C_Transmit@i:
   702                           	opt callstack 0
   703  00006B                     fputs@fp:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0xB
   707  00006B                     	ds	1
   708  00006C                     ___fladd@signs:
   709                           	opt callstack 0
   710  00006C                     ___flmul@sign:
   711                           	opt callstack 0
   712  00006C                     I2C_handler@value:
   713                           	opt callstack 0
   714  00006C                     _tolower$2240:
   715                           	opt callstack 0
   716  00006C                     ___fldiv@rem:
   717                           	opt callstack 0
   718                           
   719                           ; 4 bytes @ 0xC
   720  00006C                     	ds	1
   721  00006D                     ___fladd@aexp:
   722                           	opt callstack 0
   723  00006D                     ___flmul@aexp:
   724                           	opt callstack 0
   725  00006D                     fputs@c:
   726                           	opt callstack 0
   727                           
   728                           ; 1 bytes @ 0xD
   729  00006D                     	ds	1
   730  00006E                     I2C_handler@ad5272_select:
   731                           	opt callstack 0
   732  00006E                     ___fladd@bexp:
   733                           	opt callstack 0
   734  00006E                     fputs@i:
   735                           	opt callstack 0
   736  00006E                     ___flmul@grs:
   737                           	opt callstack 0
   738                           
   739                           ; 4 bytes @ 0xE
   740  00006E                     	ds	1
   741  00006F                     ___fladd@grs:
   742                           	opt callstack 0
   743                           
   744                           ; 1 bytes @ 0xF
   745  00006F                     	ds	1
   746  000070                     ?_pad:
   747                           	opt callstack 0
   748  000070                     ___fldiv@sign:
   749                           	opt callstack 0
   750  000070                     pad@fp:
   751                           	opt callstack 0
   752                           
   753                           ; 2 bytes @ 0x10
   754  000070                     	ds	1
   755  000071                     ___fldiv@new_exp:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x11
   759  000071                     	ds	1
   760  000072                     ___flmul@bexp:
   761                           	opt callstack 0
   762  000072                     pad@buf:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x12
   766  000072                     	ds	1
   767  000073                     ___fldiv@grs:
   768                           	opt callstack 0
   769  000073                     ___flmul@prod:
   770                           	opt callstack 0
   771                           
   772                           ; 4 bytes @ 0x13
   773  000073                     	ds	1
   774  000074                     pad@p:
   775                           	opt callstack 0
   776                           
   777                           ; 2 bytes @ 0x14
   778  000074                     	ds	2
   779  000076                     ??_pad:
   780                           
   781                           ; 1 bytes @ 0x16
   782  000076                     	ds	1
   783  000077                     ___fldiv@bexp:
   784                           	opt callstack 0
   785  000077                     pad@i:
   786                           	opt callstack 0
   787  000077                     ___flmul@temp:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0x17
   791  000077                     	ds	1
   792  000078                     ___fldiv@aexp:
   793                           	opt callstack 0
   794                           
   795                           ; 1 bytes @ 0x18
   796  000078                     	ds	1
   797  000079                     ?_floorf:
   798                           	opt callstack 0
   799  000079                     ?___flsub:
   800                           	opt callstack 0
   801  000079                     pad@w:
   802                           	opt callstack 0
   803  000079                     ___flge@ff1:
   804                           	opt callstack 0
   805  000079                     ___flsub@b:
   806                           	opt callstack 0
   807  000079                     floorf@x:
   808                           	opt callstack 0
   809                           
   810                           ; 4 bytes @ 0x19
   811  000079                     	ds	4
   812  00007D                     ??_floorf:
   813  00007D                     ___flge@ff2:
   814                           	opt callstack 0
   815  00007D                     ___flsub@a:
   816                           	opt callstack 0
   817                           
   818                           ; 4 bytes @ 0x1D
   819  00007D                     	ds	4
   820  000081                     ??___flge:
   821                           
   822                           ; 1 bytes @ 0x21
   823  000081                     	ds	2
   824  000083                     floorf@m:
   825                           	opt callstack 0
   826                           
   827                           ; 4 bytes @ 0x23
   828  000083                     	ds	4
   829  000087                     floorf@e:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x27
   833  000087                     	ds	2
   834  000089                     floorf@u:
   835                           	opt callstack 0
   836                           
   837                           ; 4 bytes @ 0x29
   838  000089                     	ds	4
   839  00008D                     ?_efgtoa:
   840                           	opt callstack 0
   841  00008D                     efgtoa@fp:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x2D
   845  00008D                     	ds	2
   846  00008F                     efgtoa@f:
   847                           	opt callstack 0
   848                           
   849                           ; 4 bytes @ 0x2F
   850  00008F                     	ds	4
   851  000093                     efgtoa@c:
   852                           	opt callstack 0
   853                           
   854                           ; 1 bytes @ 0x33
   855  000093                     	ds	1
   856  000094                     ??_efgtoa:
   857                           
   858                           ; 1 bytes @ 0x34
   859  000094                     	ds	5
   860  000099                     efgtoa@ou:
   861                           	opt callstack 0
   862                           
   863                           ; 4 bytes @ 0x39
   864  000099                     	ds	4
   865  00009D                     _efgtoa$1656:
   866                           	opt callstack 0
   867                           
   868                           ; 2 bytes @ 0x3D
   869  00009D                     	ds	2
   870  00009F                     _efgtoa$1657:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x3F
   874  00009F                     	ds	2
   875  0000A1                     _efgtoa$1662:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x41
   879  0000A1                     	ds	2
   880  0000A3                     _efgtoa$1666:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x43
   884  0000A3                     	ds	2
   885  0000A5                     _efgtoa$1667:
   886                           	opt callstack 0
   887                           
   888                           ; 2 bytes @ 0x45
   889  0000A5                     	ds	2
   890  0000A7                     _efgtoa$1668:
   891                           	opt callstack 0
   892                           
   893                           ; 2 bytes @ 0x47
   894  0000A7                     	ds	2
   895  0000A9                     efgtoa@t:
   896                           	opt callstack 0
   897                           
   898                           ; 2 bytes @ 0x49
   899  0000A9                     	ds	2
   900  0000AB                     efgtoa@pp:
   901                           	opt callstack 0
   902                           
   903                           ; 2 bytes @ 0x4B
   904  0000AB                     	ds	2
   905  0000AD                     efgtoa@m:
   906                           	opt callstack 0
   907                           
   908                           ; 2 bytes @ 0x4D
   909  0000AD                     	ds	2
   910  0000AF                     efgtoa@ne:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0x4F
   914  0000AF                     	ds	2
   915  0000B1                     efgtoa@d:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x51
   919  0000B1                     	ds	2
   920  0000B3                     efgtoa@sign:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x53
   924  0000B3                     	ds	2
   925  0000B5                     efgtoa@p:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x55
   929  0000B5                     	ds	2
   930  0000B7                     efgtoa@nmode:
   931                           	opt callstack 0
   932                           
   933                           ; 1 bytes @ 0x57
   934  0000B7                     	ds	1
   935  0000B8                     efgtoa@w:
   936                           	opt callstack 0
   937                           
   938                           ; 2 bytes @ 0x58
   939  0000B8                     	ds	2
   940  0000BA                     efgtoa@mode:
   941                           	opt callstack 0
   942                           
   943                           ; 1 bytes @ 0x5A
   944  0000BA                     	ds	1
   945  0000BB                     efgtoa@h:
   946                           	opt callstack 0
   947                           
   948                           ; 4 bytes @ 0x5B
   949  0000BB                     	ds	4
   950  0000BF                     efgtoa@l:
   951                           	opt callstack 0
   952                           
   953                           ; 4 bytes @ 0x5F
   954  0000BF                     	ds	4
   955  0000C3                     efgtoa@i:
   956                           	opt callstack 0
   957                           
   958                           ; 2 bytes @ 0x63
   959  0000C3                     	ds	2
   960  0000C5                     efgtoa@g:
   961                           	opt callstack 0
   962                           
   963                           ; 4 bytes @ 0x65
   964  0000C5                     	ds	4
   965  0000C9                     efgtoa@e:
   966                           	opt callstack 0
   967                           
   968                           ; 2 bytes @ 0x69
   969  0000C9                     	ds	2
   970  0000CB                     efgtoa@n:
   971                           	opt callstack 0
   972                           
   973                           ; 2 bytes @ 0x6B
   974  0000CB                     	ds	2
   975  0000CD                     efgtoa@u:
   976                           	opt callstack 0
   977                           
   978                           ; 4 bytes @ 0x6D
   979  0000CD                     	ds	4
   980  0000D1                     ?_vfpfcnvrt:
   981                           	opt callstack 0
   982  0000D1                     vfpfcnvrt@fp:
   983                           	opt callstack 0
   984                           
   985                           ; 2 bytes @ 0x71
   986  0000D1                     	ds	2
   987  0000D3                     vfpfcnvrt@fmt:
   988                           	opt callstack 0
   989                           
   990                           ; 2 bytes @ 0x73
   991  0000D3                     	ds	2
   992  0000D5                     vfpfcnvrt@ap:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0x75
   996  0000D5                     	ds	2
   997  0000D7                     ??_vfpfcnvrt:
   998                           
   999                           ; 1 bytes @ 0x77
  1000  0000D7                     	ds	4
  1001  0000DB                     _vfpfcnvrt$1685:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x7B
  1005  0000DB                     	ds	2
  1006  0000DD                     vfpfcnvrt@f:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x7D
  1010  0000DD                     	ds	4
  1011  0000E1                     vfpfcnvrt@ct:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 3 bytes @ 0x81
  1015  0000E1                     	ds	3
  1016  0000E4                     vfpfcnvrt@c:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x84
  1020  0000E4                     	ds	1
  1021  0000E5                     ?_vfprintf:
  1022                           	opt callstack 0
  1023  0000E5                     vfprintf@fp:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x85
  1027  0000E5                     	ds	2
  1028  0000E7                     vfprintf@fmt:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x87
  1032  0000E7                     	ds	2
  1033  0000E9                     vfprintf@ap:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x89
  1037  0000E9                     	ds	2
  1038  0000EB                     vfprintf@cfmt:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x8B
  1042  0000EB                     	ds	2
  1043  0000ED                     ?_sprintf:
  1044                           	opt callstack 0
  1045  0000ED                     sprintf@s:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x8D
  1049  0000ED                     	ds	2
  1050  0000EF                     sprintf@fmt:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x8F
  1054  0000EF                     	ds	6
  1055  0000F5                     
  1056                           ; 1 bytes @ 0x95
  1057  0000F5                     	ds	2
  1058  0000F7                     sprintf@ap:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x97
  1062  0000F7                     	ds	2
  1063  0000F9                     sprintf@f:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 6 bytes @ 0x99
  1067  0000F9                     	ds	6
  1068  0000FF                     main@receive_command:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x9F
  1072  0000FF                     	ds	1
  1073                           
  1074                           	psect	cstackCOMRAM
  1075  000001                     __pcstackCOMRAM:
  1076                           	opt callstack 0
  1077  000001                     ADC_Start@pin:
  1078                           	opt callstack 0
  1079  000001                     
  1080                           ; 1 bytes @ 0x0
  1081  000001                     	ds	1
  1082  000002                     ?___xxtofl:
  1083                           	opt callstack 0
  1084  000002                     ___xxtofl@val:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x1
  1088  000002                     	ds	4
  1089  000006                     ??___xxtofl:
  1090                           
  1091                           ; 1 bytes @ 0x5
  1092  000006                     	ds	4
  1093  00000A                     ___xxtofl@sign:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 1 bytes @ 0x9
  1097  00000A                     	ds	1
  1098  00000B                     ___xxtofl@exp:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 1 bytes @ 0xA
  1102  00000B                     	ds	1
  1103  00000C                     ___xxtofl@arg:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 4 bytes @ 0xB
  1107  00000C                     	ds	4
  1108  000010                     ?i2___flmul:
  1109                           	opt callstack 0
  1110  000010                     i2___flmul@b:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 4 bytes @ 0xF
  1114  000010                     	ds	4
  1115  000014                     i2___flmul@a:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 4 bytes @ 0x13
  1119  000014                     	ds	4
  1120  000018                     ??i2___flmul:
  1121                           
  1122                           ; 1 bytes @ 0x17
  1123  000018                     	ds	4
  1124  00001C                     i2___flmul@sign:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x1B
  1128  00001C                     	ds	1
  1129  00001D                     i2___flmul@grs:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x1C
  1133  00001D                     	ds	4
  1134  000021                     i2___flmul@aexp:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x20
  1138  000021                     	ds	1
  1139  000022                     i2___flmul@bexp:
  1140                           	opt callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x21
  1143  000022                     	ds	1
  1144  000023                     i2___flmul@prod:
  1145                           	opt callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x22
  1148  000023                     	ds	4
  1149  000027                     i2___flmul@temp:
  1150                           	opt callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x26
  1153  000027                     	ds	2
  1154  000029                     ??_ADC_ISR:
  1155                           
  1156                           ; 1 bytes @ 0x28
  1157  000029                     	ds	2
  1158  00002B                     ADC_ISR@adc_result:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x2A
  1162  00002B                     	ds	2
  1163                           
  1164 ;;
  1165 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1166 ;;
  1167 ;; *************** function _main *****************
  1168 ;; Defined at:
  1169 ;;		line 128 in file "main.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  receive_comm    1  159[BANK0 ] unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1184 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1185 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1186 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1187 ;;Total ram usage:        3 bytes
  1188 ;; Hardware stack levels required when called:   11
  1189 ;; This function calls:
  1190 ;;		_ADC_Init
  1191 ;;		_I2C_Init
  1192 ;;		_I2C_Transmit
  1193 ;;		_USART1_Init
  1194 ;;		_USART1_ReceiveCommand
  1195 ;;		_USART_handler
  1196 ;;		_timer0_init
  1197 ;; This function is called by:
  1198 ;;		Startup code after reset
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text0
  1203  004814                     __ptext0:
  1204                           	opt callstack 0
  1205  004814                     _main:
  1206                           	opt callstack 20
  1207                           
  1208                           ;main.c: 129:     OSCFRQ = 0x08;
  1209                           
  1210                           ;incstack = 0
  1211  004814  0E08               	movlw	8
  1212  004816  0139               	movlb	57	; () banked
  1213  004818  6FDF               	movwf	223,b	;volatile
  1214                           
  1215                           ;main.c: 130:     OSCTUNE = 0x00;
  1216  00481A  0E00               	movlw	0
  1217  00481C  6FDE               	movwf	222,b	;volatile
  1218                           
  1219                           ;main.c: 131:     OSCEN = 0x40;
  1220  00481E  0E40               	movlw	64
  1221  004820  6FDD               	movwf	221,b	;volatile
  1222  004822                     l321:
  1223                           
  1224                           ; BSR set to: 57
  1225  004822  BDDC               	btfsc	220,6,b	;volatile
  1226  004824  D002               	goto	u9060
  1227                           
  1228                           ; BSR set to: 57
  1229  004826  A5DC               	btfss	220,2,b	;volatile
  1230  004828  D7FC               	goto	l321
  1231  00482A                     u9060:
  1232                           
  1233                           ; BSR set to: 57
  1234                           ;main.c: 138:     IVTLOCK = 0x01;
  1235  00482A  0E01               	movlw	1
  1236  00482C  6ED4               	movwf	16340,c	;volatile
  1237                           
  1238                           ;main.c: 141:     WDTCON1 = 0x07;
  1239  00482E  0E07               	movlw	7
  1240  004830  6F5C               	movwf	92,b	;volatile
  1241                           
  1242                           ;main.c: 142:     WDTCON0 = 0x3F;
  1243  004832  0E3F               	movlw	63
  1244  004834  6F5B               	movwf	91,b	;volatile
  1245                           
  1246                           ; BSR set to: 57
  1247                           ;main.c: 145:     PPSLOCKbits.PPSLOCKED = 0;
  1248  004836  013A               	movlb	58	; () banked
  1249  004838  91BF               	bcf	191,0,b	;volsfr
  1250                           
  1251                           ; BSR set to: 58
  1252                           ;main.c: 148:     timer0_init();
  1253  00483A  EC43  F029         	call	_timer0_init	;wreg free
  1254                           
  1255                           ;main.c: 149:     USART1_Init(1);
  1256  00483E  0E01               	movlw	1
  1257  004840  EC4E  F026         	call	_USART1_Init
  1258                           
  1259                           ;main.c: 150:     ADC_Init();
  1260  004844  EC32  F029         	call	_ADC_Init	;wreg free
  1261                           
  1262                           ;main.c: 151:     I2C_Init();
  1263  004848  EC38  F027         	call	_I2C_Init	;wreg free
  1264                           
  1265                           ;main.c: 153:     INTCON0bits.GIEH = 1;
  1266  00484C  8ED2               	bsf	16338,7,c	;volatile
  1267                           
  1268                           ;main.c: 154:     INTCON0bits.GIEL = 1;
  1269  00484E  8CD2               	bsf	16338,6,c	;volatile
  1270                           
  1271                           ;main.c: 155:     INTCON0bits.IPEN = 1;
  1272  004850  8AD2               	bsf	16338,5,c	;volatile
  1273                           
  1274                           ;main.c: 158:     TRISAbits.TRISA0 = 0;
  1275  004852  90C2               	bcf	16322,0,c	;volatile
  1276                           
  1277                           ;main.c: 159:     ANSELAbits.ANSELA0 = 1;
  1278  004854  013A               	movlb	58	; () banked
  1279  004856  8140               	bsf	64,0,b	;volatile
  1280                           
  1281                           ; BSR set to: 58
  1282                           ;main.c: 160:     led_enable = 1;
  1283  004858  0E01               	movlw	1
  1284  00485A  6E47               	movwf	_led_enable,c
  1285                           
  1286                           ; BSR set to: 58
  1287                           ;main.c: 162:     TRISAbits.TRISA1 = 0;
  1288  00485C  92C2               	bcf	16322,1,c	;volatile
  1289                           
  1290                           ; BSR set to: 58
  1291                           ;main.c: 163:     ANSELAbits.ANSELA1 = 1;
  1292  00485E  8340               	bsf	64,1,b	;volatile
  1293                           
  1294                           ; BSR set to: 58
  1295                           ;main.c: 164:     LATAbits.LA1 = 0;
  1296  004860  92BA               	bcf	16314,1,c	;volatile
  1297                           
  1298                           ; BSR set to: 58
  1299                           ;main.c: 166:     TRISBbits.TRISB2 = 0;
  1300  004862  94C3               	bcf	16323,2,c	;volatile
  1301                           
  1302                           ; BSR set to: 58
  1303                           ;main.c: 167:     TRISBbits.TRISB3 = 0;
  1304  004864  96C3               	bcf	16323,3,c	;volatile
  1305                           
  1306                           ; BSR set to: 58
  1307                           ;main.c: 168:     LATBbits.LB2 = 1;
  1308  004866  84BB               	bsf	16315,2,c	;volatile
  1309                           
  1310                           ; BSR set to: 58
  1311                           ;main.c: 169:     LATBbits.LB3 = 1;
  1312  004868  86BB               	bsf	16315,3,c	;volatile
  1313                           
  1314                           ; BSR set to: 58
  1315                           ;main.c: 171:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1316  00486A  0EA3               	movlw	163
  1317  00486C  0101               	movlb	1	; () banked
  1318  00486E  6FA7               	movwf	(??_main+1)& (0+255),b
  1319  004870  0E57               	movlw	87
  1320  004872  6FA6               	movwf	??_main& (0+255),b
  1321  004874  0E02               	movlw	2
  1322  004876                     u9107:
  1323  004876  2EE8               	decfsz	wreg,f,c
  1324  004878  D7FE               	bra	u9107
  1325  00487A  2FA6               	decfsz	??_main& (0+255),f,b
  1326  00487C  D7FC               	bra	u9107
  1327  00487E  2FA7               	decfsz	(??_main+1)& (0+255),f,b
  1328  004880  D7FA               	bra	u9107
  1329  004882  F000               	nop	
  1330                           
  1331                           ;main.c: 173:     AD5272_COMMANDS[0] = 0x1C;
  1332  004884  0E1C               	movlw	28
  1333  004886  6E50               	movwf	_AD5272_COMMANDS,c
  1334                           
  1335                           ;main.c: 174:     AD5272_COMMANDS[1] = 0x02;
  1336  004888  0E02               	movlw	2
  1337  00488A  6E51               	movwf	_AD5272_COMMANDS+1,c
  1338  00488C  0E50               	movlw	low _AD5272_COMMANDS
  1339  00488E  0100               	movlb	0	; () banked
  1340  004890  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  1341  004892  0E00               	movlw	high _AD5272_COMMANDS
  1342  004894  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  1343  004896  0E02               	movlw	2
  1344  004898  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  1345  00489A  0E5E               	movlw	94
  1346  00489C  6F63               	movwf	I2C_Transmit@address& (0+255),b
  1347  00489E  EC73  F025         	call	_I2C_Transmit	;wreg free
  1348  0048A2                     l6849:
  1349  0048A2  5049               	movf	_I2C_STOP_DETECTED,w,c
  1350  0048A4  B4D8               	btfsc	status,2,c
  1351  0048A6  D7FD               	goto	l6849
  1352  0048A8  0E50               	movlw	low _AD5272_COMMANDS
  1353  0048AA  0100               	movlb	0	; () banked
  1354  0048AC  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  1355  0048AE  0E00               	movlw	high _AD5272_COMMANDS
  1356  0048B0  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  1357  0048B2  0E02               	movlw	2
  1358  0048B4  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  1359  0048B6  0E58               	movlw	88
  1360  0048B8  6F63               	movwf	I2C_Transmit@address& (0+255),b
  1361  0048BA  EC73  F025         	call	_I2C_Transmit	;wreg free
  1362  0048BE                     l6853:
  1363  0048BE  5049               	movf	_I2C_STOP_DETECTED,w,c
  1364  0048C0  B4D8               	btfsc	status,2,c
  1365  0048C2  D7FD               	goto	l6853
  1366                           
  1367                           ;main.c: 179:     AD5272_COMMANDS[0] = 0x04;
  1368  0048C4  0E04               	movlw	4
  1369  0048C6  6E50               	movwf	_AD5272_COMMANDS,c
  1370  0048C8                     l6857:
  1371                           
  1372                           ;main.c: 184:         receive_command = USART1_ReceiveCommand();
  1373  0048C8  EC6E  F01F         	call	_USART1_ReceiveCommand	;wreg free
  1374  0048CC  0100               	movlb	0	; () banked
  1375  0048CE  6FFF               	movwf	main@receive_command& (0+255),b
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;main.c: 185:         if(receive_command)
  1379  0048D0  51FF               	movf	main@receive_command& (0+255),w,b
  1380  0048D2  B4D8               	btfsc	status,2,c
  1381  0048D4  D7F9               	goto	l6857
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;main.c: 186:             USART_handler();
  1385  0048D6  EC57  F020         	call	_USART_handler	;wreg free
  1386  0048DA  D7F6               	goto	l6857
  1387  0048DC                     __end_of_main:
  1388                           	opt callstack 0
  1389                           
  1390 ;; *************** function _timer0_init *****************
  1391 ;; Defined at:
  1392 ;;		line 233 in file "main.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1410 ;;Total ram usage:        0 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    2
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text1
  1421  005286                     __ptext1:
  1422                           	opt callstack 0
  1423  005286                     _timer0_init:
  1424                           	opt callstack 28
  1425                           
  1426                           ;main.c: 234:     T0CON0 = 0x10;
  1427                           
  1428                           ;incstack = 0
  1429  005286  0E10               	movlw	16
  1430  005288  6EB8               	movwf	16312,c	;volatile
  1431                           
  1432                           ;main.c: 235:     T0CON1 = 0x75;
  1433  00528A  0E75               	movlw	117
  1434  00528C  6EB9               	movwf	16313,c	;volatile
  1435                           
  1436                           ;main.c: 236:     TMR0L = 0xB0;
  1437  00528E  0EB0               	movlw	176
  1438  005290  6EB6               	movwf	16310,c	;volatile
  1439                           
  1440                           ;main.c: 237:     TMR0H = 0x3C;
  1441  005292  0E3C               	movlw	60
  1442  005294  6EB7               	movwf	16311,c	;volatile
  1443                           
  1444                           ;main.c: 238:     counter_timer0 = 0;
  1445  005296  0E00               	movlw	0
  1446  005298  6E48               	movwf	_counter_timer0,c
  1447                           
  1448                           ;main.c: 239:     IPR3bits.TMR0IP = 0;
  1449  00529A  0139               	movlb	57	; () banked
  1450  00529C  9F83               	bcf	131,7,b	;volatile
  1451                           
  1452                           ; BSR set to: 57
  1453                           ;main.c: 240:     PIR3bits.TMR0IF = 0;
  1454  00529E  9FA3               	bcf	163,7,b	;volatile
  1455                           
  1456                           ; BSR set to: 57
  1457                           ;main.c: 241:     PIE3bits.TMR0IE = 1;
  1458  0052A0  8F93               	bsf	147,7,b	;volatile
  1459                           
  1460                           ; BSR set to: 57
  1461                           ;main.c: 242:     T0CON0bits.EN = 1;
  1462  0052A2  8EB8               	bsf	16312,7,c	;volatile
  1463                           
  1464                           ; BSR set to: 57
  1465  0052A4  0012               	return		;funcret
  1466  0052A6                     __end_of_timer0_init:
  1467                           	opt callstack 0
  1468                           
  1469 ;; *************** function _USART_handler *****************
  1470 ;; Defined at:
  1471 ;;		line 192 in file "main.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1487 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1488 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1489 ;;Total ram usage:        2 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:   10
  1492 ;; This function calls:
  1493 ;;		_GetStringSize
  1494 ;;		_I2C_handler
  1495 ;;		_USART1_SendString
  1496 ;;		_memset
  1497 ;;		_sprintf
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text2
  1504  0040AE                     __ptext2:
  1505                           	opt callstack 0
  1506  0040AE                     _USART_handler:
  1507                           	opt callstack 20
  1508                           
  1509                           ;main.c: 193:     memset(tx_buffer,0,32);
  1510                           
  1511                           ; BSR set to: 57
  1512                           ;incstack = 0
  1513  0040AE  0E84               	movlw	low _tx_buffer
  1514  0040B0  0100               	movlb	0	; () banked
  1515  0040B2  6F60               	movwf	memset@st& (0+255),b
  1516  0040B4  0E01               	movlw	high _tx_buffer
  1517  0040B6  6F61               	movwf	(memset@st+1)& (0+255),b
  1518  0040B8  0E00               	movlw	0
  1519  0040BA  6F62               	movwf	memset@x& (0+255),b
  1520  0040BC  0E00               	movlw	0
  1521  0040BE  6F64               	movwf	(memset@size+1)& (0+255),b
  1522  0040C0  0E20               	movlw	32
  1523  0040C2  6F63               	movwf	memset@size& (0+255),b
  1524  0040C4  ECC8  F028         	call	_memset	;wreg free
  1525                           
  1526                           ;main.c: 194:     if(COMMAND_WR){
  1527  0040C8  504D               	movf	_COMMAND_WR,w,c
  1528  0040CA  A4D8               	btfss	status,2,c
  1529  0040CC  D03D               	goto	l6751
  1530  0040CE  D0A4               	goto	l6771
  1531  0040D0                     l6743:
  1532                           
  1533                           ; BSR set to: 1
  1534                           ;main.c: 197:                 sprintf(tx_buffer,"Voltage:%f V",ADC_VOLTAGE_RESULT);
  1535  0040D0  0E84               	movlw	low _tx_buffer
  1536  0040D2  0100               	movlb	0	; () banked
  1537  0040D4  6FED               	movwf	sprintf@s& (0+255),b
  1538  0040D6  0E01               	movlw	high _tx_buffer
  1539  0040D8  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1540  0040DA  0E6F               	movlw	low STR_1
  1541  0040DC  6FEF               	movwf	sprintf@fmt& (0+255),b
  1542  0040DE  0E20               	movlw	high STR_1
  1543  0040E0  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1544  0040E2  0060  F0E4  F0F1   	movff	_ADC_VOLTAGE_RESULT,?_sprintf+4
  1545  0040E8  0060  F0E8  F0F2   	movff	_ADC_VOLTAGE_RESULT+1,?_sprintf+5
  1546  0040EE  0060  F0EC  F0F3   	movff	_ADC_VOLTAGE_RESULT+2,?_sprintf+6
  1547  0040F4  0060  F0F0  F0F4   	movff	_ADC_VOLTAGE_RESULT+3,?_sprintf+7
  1548  0040FA  EC9D  F027         	call	_sprintf	;wreg free
  1549                           
  1550                           ;main.c: 198:                 break;
  1551  0040FE  D09F               	goto	l6773
  1552  004100                     l6745:
  1553                           
  1554                           ; BSR set to: 1
  1555                           ;main.c: 200:                 sprintf(tx_buffer,"Current:%f A",ADC_CURRENT_RESULT);
  1556  004100  0E84               	movlw	low _tx_buffer
  1557  004102  0100               	movlb	0	; () banked
  1558  004104  6FED               	movwf	sprintf@s& (0+255),b
  1559  004106  0E01               	movlw	high _tx_buffer
  1560  004108  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1561  00410A  0E62               	movlw	low STR_2
  1562  00410C  6FEF               	movwf	sprintf@fmt& (0+255),b
  1563  00410E  0E20               	movlw	high STR_2
  1564  004110  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1565  004112  0060  F0D4  F0F1   	movff	_ADC_CURRENT_RESULT,?_sprintf+4
  1566  004118  0060  F0D8  F0F2   	movff	_ADC_CURRENT_RESULT+1,?_sprintf+5
  1567  00411E  0060  F0DC  F0F3   	movff	_ADC_CURRENT_RESULT+2,?_sprintf+6
  1568  004124  0060  F0E0  F0F4   	movff	_ADC_CURRENT_RESULT+3,?_sprintf+7
  1569  00412A  EC9D  F027         	call	_sprintf	;wreg free
  1570                           
  1571                           ;main.c: 201:                 break;
  1572  00412E  D087               	goto	l6773
  1573  004130                     l6747:
  1574                           
  1575                           ; BSR set to: 1
  1576                           ;main.c: 203:                 sprintf(tx_buffer,"Command not recognized!");
  1577  004130  0E84               	movlw	low _tx_buffer
  1578  004132  0100               	movlb	0	; () banked
  1579  004134  6FED               	movwf	sprintf@s& (0+255),b
  1580  004136  0E01               	movlw	high _tx_buffer
  1581  004138  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1582  00413A  0E01               	movlw	low STR_3
  1583  00413C  6FEF               	movwf	sprintf@fmt& (0+255),b
  1584  00413E  0E20               	movlw	high STR_3
  1585  004140  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1586  004142  EC9D  F027         	call	_sprintf	;wreg free
  1587                           
  1588                           ;main.c: 204:                 break;
  1589  004146  D07B               	goto	l6773
  1590  004148                     l6751:
  1591  004148  504C               	movf	_COMMAND,w,c
  1592  00414A  0101               	movlb	1	; () banked
  1593  00414C  6FA4               	movwf	??_USART_handler& (0+255),b
  1594  00414E  6BA5               	clrf	(??_USART_handler+1)& (0+255),b
  1595                           
  1596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1597                           ; Switch size 1, requested type "simple"
  1598                           ; Number of cases is 1, Range of values is 0 to 0
  1599                           ; switch strategies available:
  1600                           ; Name         Instructions Cycles
  1601                           ; simple_byte            4     3 (average)
  1602                           ;	Chosen strategy is simple_byte
  1603  004150  51A5               	movf	(??_USART_handler+1)& (0+255),w,b
  1604  004152  0A00               	xorlw	0	; case 0
  1605  004154  A4D8               	btfss	status,2,c
  1606  004156  D7EC               	goto	l6747
  1607                           
  1608                           ; BSR set to: 1
  1609                           ; Switch size 1, requested type "simple"
  1610                           ; Number of cases is 2, Range of values is 0 to 1
  1611                           ; switch strategies available:
  1612                           ; Name         Instructions Cycles
  1613                           ; simple_byte            7     4 (average)
  1614                           ;	Chosen strategy is simple_byte
  1615  004158  51A4               	movf	??_USART_handler& (0+255),w,b
  1616  00415A  0A00               	xorlw	0	; case 0
  1617  00415C  B4D8               	btfsc	status,2,c
  1618  00415E  D7B8               	goto	l6743
  1619  004160  0A01               	xorlw	1	; case 1
  1620  004162  B4D8               	btfsc	status,2,c
  1621  004164  D7CD               	goto	l6745
  1622  004166  D7E4               	goto	l6747
  1623  004168                     l6753:
  1624                           
  1625                           ; BSR set to: 1
  1626                           ;main.c: 209:                 led_enable = !led_enable;
  1627  004168  5047               	movf	_led_enable,w,c
  1628  00416A  A4D8               	btfss	status,2,c
  1629  00416C  D002               	goto	u9010
  1630  00416E  0E01               	movlw	1
  1631  004170  D001               	goto	u9020
  1632  004172                     u9010:
  1633  004172  0E00               	movlw	0
  1634  004174                     u9020:
  1635  004174  6E47               	movwf	_led_enable,c
  1636                           
  1637                           ;main.c: 210:                 if(led_enable)
  1638  004176  5047               	movf	_led_enable,w,c
  1639  004178  B4D8               	btfsc	status,2,c
  1640  00417A  D00C               	goto	l6757
  1641                           
  1642                           ; BSR set to: 1
  1643                           ;main.c: 211:                     sprintf(tx_buffer,"Blinking LED is ON!");
  1644  00417C  0E84               	movlw	low _tx_buffer
  1645  00417E  0100               	movlb	0	; () banked
  1646  004180  6FED               	movwf	sprintf@s& (0+255),b
  1647  004182  0E01               	movlw	high _tx_buffer
  1648  004184  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1649  004186  0E2E               	movlw	low STR_4
  1650  004188  6FEF               	movwf	sprintf@fmt& (0+255),b
  1651  00418A  0E20               	movlw	high STR_4
  1652  00418C  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1653  00418E  EC9D  F027         	call	_sprintf	;wreg free
  1654  004192  D055               	goto	l6773
  1655  004194                     l6757:
  1656                           
  1657                           ; BSR set to: 1
  1658                           ;main.c: 213:                     sprintf(tx_buffer,"Blinking LED is OFF!");
  1659  004194  0E84               	movlw	low _tx_buffer
  1660  004196  0100               	movlb	0	; () banked
  1661  004198  6FED               	movwf	sprintf@s& (0+255),b
  1662  00419A  0E01               	movlw	high _tx_buffer
  1663  00419C  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1664  00419E  0E19               	movlw	low STR_5
  1665  0041A0  6FEF               	movwf	sprintf@fmt& (0+255),b
  1666  0041A2  0E20               	movlw	high STR_5
  1667  0041A4  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1668  0041A6  EC9D  F027         	call	_sprintf	;wreg free
  1669  0041AA  D049               	goto	l6773
  1670  0041AC                     l6759:
  1671                           
  1672                           ; BSR set to: 1
  1673                           ;main.c: 216:                 I2C_handler(0,COMMAND_WRITE_NUMBER);
  1674  0041AC  0060  F114  F06C   	movff	_COMMAND_WRITE_NUMBER,I2C_handler@value
  1675  0041B2  0060  F118  F06D   	movff	_COMMAND_WRITE_NUMBER+1,I2C_handler@value+1
  1676  0041B8  0E00               	movlw	0
  1677  0041BA  EC47  F028         	call	_I2C_handler
  1678                           
  1679                           ;main.c: 217:                 sprintf(tx_buffer,"Voltage set!");
  1680  0041BE  0E84               	movlw	low _tx_buffer
  1681  0041C0  0100               	movlb	0	; () banked
  1682  0041C2  6FED               	movwf	sprintf@s& (0+255),b
  1683  0041C4  0E01               	movlw	high _tx_buffer
  1684  0041C6  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1685  0041C8  0E55               	movlw	low STR_6
  1686  0041CA  6FEF               	movwf	sprintf@fmt& (0+255),b
  1687  0041CC  0E20               	movlw	high STR_6
  1688  0041CE  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1689  0041D0  EC9D  F027         	call	_sprintf	;wreg free
  1690                           
  1691                           ;main.c: 218:                 break;
  1692  0041D4  D034               	goto	l6773
  1693  0041D6                     l6763:
  1694                           
  1695                           ; BSR set to: 1
  1696                           ;main.c: 220:                 I2C_handler(1,COMMAND_WRITE_NUMBER);
  1697  0041D6  0060  F114  F06C   	movff	_COMMAND_WRITE_NUMBER,I2C_handler@value
  1698  0041DC  0060  F118  F06D   	movff	_COMMAND_WRITE_NUMBER+1,I2C_handler@value+1
  1699  0041E2  0E01               	movlw	1
  1700  0041E4  EC47  F028         	call	_I2C_handler
  1701                           
  1702                           ;main.c: 221:                 sprintf(tx_buffer,"Current Limit set!");
  1703  0041E8  0E84               	movlw	low _tx_buffer
  1704  0041EA  0100               	movlb	0	; () banked
  1705  0041EC  6FED               	movwf	sprintf@s& (0+255),b
  1706  0041EE  0E01               	movlw	high _tx_buffer
  1707  0041F0  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1708  0041F2  0E42               	movlw	low STR_7
  1709  0041F4  6FEF               	movwf	sprintf@fmt& (0+255),b
  1710  0041F6  0E20               	movlw	high STR_7
  1711  0041F8  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1712  0041FA  EC9D  F027         	call	_sprintf	;wreg free
  1713                           
  1714                           ;main.c: 222:                 break;
  1715  0041FE  D01F               	goto	l6773
  1716  004200                     l6767:
  1717                           
  1718                           ; BSR set to: 1
  1719                           ;main.c: 224:                 sprintf(tx_buffer,"Command not recognized!");
  1720  004200  0E84               	movlw	low _tx_buffer
  1721  004202  0100               	movlb	0	; () banked
  1722  004204  6FED               	movwf	sprintf@s& (0+255),b
  1723  004206  0E01               	movlw	high _tx_buffer
  1724  004208  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1725  00420A  0E01               	movlw	low STR_3
  1726  00420C  6FEF               	movwf	sprintf@fmt& (0+255),b
  1727  00420E  0E20               	movlw	high STR_3
  1728  004210  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1729  004212  EC9D  F027         	call	_sprintf	;wreg free
  1730                           
  1731                           ;main.c: 225:                 break;
  1732  004216  D013               	goto	l6773
  1733  004218                     l6771:
  1734  004218  504C               	movf	_COMMAND,w,c
  1735  00421A  0101               	movlb	1	; () banked
  1736  00421C  6FA4               	movwf	??_USART_handler& (0+255),b
  1737  00421E  6BA5               	clrf	(??_USART_handler+1)& (0+255),b
  1738                           
  1739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1740                           ; Switch size 1, requested type "simple"
  1741                           ; Number of cases is 1, Range of values is 0 to 0
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte            4     3 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746  004220  51A5               	movf	(??_USART_handler+1)& (0+255),w,b
  1747  004222  0A00               	xorlw	0	; case 0
  1748  004224  A4D8               	btfss	status,2,c
  1749  004226  D7EC               	goto	l6767
  1750                           
  1751                           ; BSR set to: 1
  1752                           ; Switch size 1, requested type "simple"
  1753                           ; Number of cases is 3, Range of values is 0 to 2
  1754                           ; switch strategies available:
  1755                           ; Name         Instructions Cycles
  1756                           ; simple_byte           10     6 (average)
  1757                           ;	Chosen strategy is simple_byte
  1758  004228  51A4               	movf	??_USART_handler& (0+255),w,b
  1759  00422A  0A00               	xorlw	0	; case 0
  1760  00422C  B4D8               	btfsc	status,2,c
  1761  00422E  D79C               	goto	l6753
  1762  004230  0A01               	xorlw	1	; case 1
  1763  004232  B4D8               	btfsc	status,2,c
  1764  004234  D7BB               	goto	l6759
  1765  004236  0A03               	xorlw	3	; case 2
  1766  004238  B4D8               	btfsc	status,2,c
  1767  00423A  D7CD               	goto	l6763
  1768  00423C  D7E1               	goto	l6767
  1769  00423E                     l6773:
  1770                           
  1771                           ;main.c: 228:     USART1_SendString(tx_buffer,GetStringSize());
  1772  00423E  0E84               	movlw	low _tx_buffer
  1773  004240  0100               	movlb	0	; () banked
  1774  004242  6F64               	movwf	USART1_SendString@str& (0+255),b
  1775  004244  0E01               	movlw	high _tx_buffer
  1776  004246  6F65               	movwf	(USART1_SendString@str+1)& (0+255),b
  1777  004248  EC8D  F028         	call	_GetStringSize	;wreg free
  1778  00424C  0060  F180  F066   	movff	?_GetStringSize,USART1_SendString@size
  1779  004252  0060  F184  F067   	movff	?_GetStringSize+1,USART1_SendString@size+1
  1780  004258  EC22  F025         	call	_USART1_SendString	;wreg free
  1781  00425C  0012               	return		;funcret
  1782  00425E                     __end_of_USART_handler:
  1783                           	opt callstack 0
  1784                           
  1785 ;; *************** function _sprintf *****************
  1786 ;; Defined at:
  1787 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  s               2  141[BANK0 ] PTR unsigned char 
  1790 ;;		 -> tx_buffer(32), 
  1791 ;;  fmt             2  143[BANK0 ] PTR const unsigned char 
  1792 ;;		 -> STR_8(24), STR_7(19), STR_6(13), STR_5(21), 
  1793 ;;		 -> STR_4(20), STR_3(24), STR_2(13), STR_1(13), 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  f               6  153[BANK0 ] struct _IO_FILE
  1796 ;;  ap              2  151[BANK0 ] PTR void [1]
  1797 ;;		 -> ?_sprintf(2), 
  1798 ;;  ret             2    0        int 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2  141[BANK0 ] int 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1808 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1809 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1811 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1812 ;;Total ram usage:       18 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    9
  1815 ;; This function calls:
  1816 ;;		_vfprintf
  1817 ;; This function is called by:
  1818 ;;		_USART_handler
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text3
  1823  004F3A                     __ptext3:
  1824                           	opt callstack 0
  1825  004F3A                     _sprintf:
  1826                           	opt callstack 20
  1827                           
  1828                           ;incstack = 0
  1829  004F3A  0EF1               	movlw	low (?_sprintf+4)
  1830  004F3C  0100               	movlb	0	; () banked
  1831  004F3E  6FF7               	movwf	sprintf@ap& (0+255),b
  1832  004F40  0E00               	movlw	high (?_sprintf+4)
  1833  004F42  6FF8               	movwf	(sprintf@ap+1)& (0+255),b
  1834  004F44  0060  F3B4  F0F9   	movff	sprintf@s,sprintf@f
  1835  004F4A  0060  F3B8  F0FA   	movff	sprintf@s+1,sprintf@f+1
  1836                           
  1837                           ; BSR set to: 0
  1838  004F50  0E00               	movlw	0
  1839  004F52  6FFC               	movwf	(sprintf@f+3)& (0+255),b
  1840  004F54  0E00               	movlw	0
  1841  004F56  6FFB               	movwf	(sprintf@f+2)& (0+255),b
  1842                           
  1843                           ; BSR set to: 0
  1844  004F58  0E00               	movlw	0
  1845  004F5A  6FFE               	movwf	(sprintf@f+5)& (0+255),b
  1846  004F5C  0E00               	movlw	0
  1847  004F5E  6FFD               	movwf	(sprintf@f+4)& (0+255),b
  1848                           
  1849                           ; BSR set to: 0
  1850  004F60  0EF9               	movlw	low sprintf@f
  1851  004F62  6FE5               	movwf	vfprintf@fp& (0+255),b
  1852  004F64  0E00               	movlw	high sprintf@f
  1853  004F66  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  1854  004F68  0060  F3BC  F0E7   	movff	sprintf@fmt,vfprintf@fmt
  1855  004F6E  0060  F3C0  F0E8   	movff	sprintf@fmt+1,vfprintf@fmt+1
  1856  004F74  0EF7               	movlw	low sprintf@ap
  1857  004F76  6FE9               	movwf	vfprintf@ap& (0+255),b
  1858  004F78  0E00               	movlw	high sprintf@ap
  1859  004F7A  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  1860  004F7C  ECCC  F026         	call	_vfprintf	;wreg free
  1861  004F80  0100               	movlb	0	; () banked
  1862  004F82  51FB               	movf	(sprintf@f+2)& (0+255),w,b
  1863  004F84  25ED               	addwf	sprintf@s& (0+255),w,b
  1864  004F86  6ED9               	movwf	fsr2l,c
  1865  004F88  51FC               	movf	(sprintf@f+3)& (0+255),w,b
  1866  004F8A  21EE               	addwfc	(sprintf@s+1)& (0+255),w,b
  1867  004F8C  6EDA               	movwf	fsr2h,c
  1868  004F8E  0E00               	movlw	0
  1869  004F90  6EDF               	movwf	indf2,c
  1870                           
  1871                           ; BSR set to: 0
  1872  004F92  0012               	return		;funcret
  1873  004F94                     __end_of_sprintf:
  1874                           	opt callstack 0
  1875                           
  1876 ;; *************** function _vfprintf *****************
  1877 ;; Defined at:
  1878 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  fp              2  133[BANK0 ] PTR struct _IO_FILE
  1881 ;;		 -> sprintf@f(6), 
  1882 ;;  fmt             2  135[BANK0 ] PTR const unsigned char 
  1883 ;;		 -> STR_8(24), STR_7(19), STR_6(13), STR_5(21), 
  1884 ;;		 -> STR_4(20), STR_3(24), STR_2(13), STR_1(13), 
  1885 ;;  ap              2  137[BANK0 ] PTR PTR void 
  1886 ;;		 -> sprintf@ap(2), 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  cfmt            2  139[BANK0 ] PTR unsigned char 
  1889 ;;		 -> STR_8(24), STR_7(19), STR_6(13), STR_5(21), 
  1890 ;;		 -> STR_4(20), STR_3(24), STR_2(13), STR_1(13), 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  2  133[BANK0 ] int 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1900 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1901 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1903 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1904 ;;Total ram usage:        8 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    8
  1907 ;; This function calls:
  1908 ;;		_vfpfcnvrt
  1909 ;; This function is called by:
  1910 ;;		_sprintf
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text4
  1915  004D98                     __ptext4:
  1916                           	opt callstack 0
  1917  004D98                     _vfprintf:
  1918                           	opt callstack 20
  1919                           
  1920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;incstack = 0
  1924  004D98  0060  F39C  F0EB   	movff	vfprintf@fmt,vfprintf@cfmt
  1925  004D9E  0060  F3A0  F0EC   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1926                           
  1927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1928  004DA4  0E00               	movlw	0
  1929  004DA6  6E3E               	movwf	_nout+1,c
  1930  004DA8  0E00               	movlw	0
  1931  004DAA  6E3D               	movwf	_nout,c
  1932                           
  1933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1934  004DAC  D018               	goto	l6415
  1935  004DAE                     l6413:
  1936                           
  1937                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1938  004DAE  0060  F394  F0D1   	movff	vfprintf@fp,vfpfcnvrt@fp
  1939  004DB4  0060  F398  F0D2   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1940  004DBA  0EEB               	movlw	low vfprintf@cfmt
  1941  004DBC  0100               	movlb	0	; () banked
  1942  004DBE  6FD3               	movwf	vfpfcnvrt@fmt& (0+255),b
  1943  004DC0  0E00               	movlw	high vfprintf@cfmt
  1944  004DC2  6FD4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1945  004DC4  0060  F3A4  F0D5   	movff	vfprintf@ap,vfpfcnvrt@ap
  1946  004DCA  0060  F3A8  F0D6   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1947  004DD0  ECA9  F019         	call	_vfpfcnvrt	;wreg free
  1948  004DD4  0100               	movlb	0	; () banked
  1949  004DD6  51D1               	movf	?_vfpfcnvrt& (0+255),w,b
  1950  004DD8  263D               	addwf	_nout,f,c
  1951  004DDA  51D2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1952  004DDC  223E               	addwfc	_nout+1,f,c
  1953  004DDE                     l6415:
  1954                           
  1955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1956  004DDE  0060  F3AF  FFF6   	movff	vfprintf@cfmt,tblptrl
  1957  004DE4  0060  F3B3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  1958  004DEA                     	if	0	;tblptru may be non-zero
  1959  004DEA                     	endif
  1960  004DEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1961  004DEA  0E00               	movlw	low (__mediumconst shr (0+16))
  1962  004DEC  6EF8               	movwf	tblptru,c
  1963  004DEE                     	endif
  1964  004DEE  0008               	tblrd		*
  1965  004DF0  50F5               	movf	tablat,w,c
  1966  004DF2  0900               	iorlw	0
  1967  004DF4  A4D8               	btfss	status,2,c
  1968  004DF6  D7DB               	goto	l6413
  1969                           
  1970                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1971  004DF8  0060  F0F4  F0E5   	movff	_nout,?_vfprintf
  1972  004DFE  0060  F0F8  F0E6   	movff	_nout+1,?_vfprintf+1
  1973  004E04  0012               	return		;funcret
  1974  004E06                     __end_of_vfprintf:
  1975                           	opt callstack 0
  1976                           
  1977 ;; *************** function _vfpfcnvrt *****************
  1978 ;; Defined at:
  1979 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  fp              2  113[BANK0 ] PTR struct _IO_FILE
  1982 ;;		 -> sprintf@f(6), 
  1983 ;;  fmt             2  115[BANK0 ] PTR PTR unsigned char 
  1984 ;;		 -> vfprintf@cfmt(2), 
  1985 ;;  ap              2  117[BANK0 ] PTR PTR void 
  1986 ;;		 -> sprintf@ap(2), 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  llu             8    0        unsigned long long 
  1989 ;;  ll              8    0        long long 
  1990 ;;  f               4  125[BANK0 ] long long 
  1991 ;;  ct              3  129[BANK0 ] unsigned char [3]
  1992 ;;  vp              3    0        PTR void 
  1993 ;;  cp              3    0        PTR unsigned char 
  1994 ;;  i               2    0        int 
  1995 ;;  done            2    0        int 
  1996 ;;  c               1  132[BANK0 ] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  2  113[BANK0 ] int 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2006 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2007 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2008 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2009 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2010 ;;Total ram usage:       20 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    7
  2013 ;; This function calls:
  2014 ;;		_efgtoa
  2015 ;;		_fputc
  2016 ;;		_isupper
  2017 ;;		_strncmp
  2018 ;;		_tolower
  2019 ;; This function is called by:
  2020 ;;		_vfprintf
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text5
  2025  003352                     __ptext5:
  2026                           	opt callstack 0
  2027  003352                     _vfpfcnvrt:
  2028                           	opt callstack 20
  2029                           
  2030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2031                           
  2032                           ;incstack = 0
  2033  003352  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2034  003358  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2035  00335E  006F FF7B FFF6     	movff	postinc2,tblptrl
  2036  003364  006F FF77 FFF7     	movff	postdec2,tblptrh
  2037  00336A                     	if	0	;tblptru may be non-zero
  2038  00336A                     	endif
  2039  00336A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2040  00336A  0E00               	movlw	low (__mediumconst shr (0+16))
  2041  00336C  6EF8               	movwf	tblptru,c
  2042  00336E                     	endif
  2043  00336E  0008               	tblrd		*
  2044  003370  50F5               	movf	tablat,w,c
  2045  003372  0A25               	xorlw	37
  2046  003374  A4D8               	btfss	status,2,c
  2047  003376  D193               	goto	l6367
  2048                           
  2049                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2050  003378  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2051  00337E  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2052  003384  2ADE               	incf	postinc2,f,c
  2053  003386  0E00               	movlw	0
  2054  003388  22DD               	addwfc	postdec2,f,c
  2055                           
  2056                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2057  00338A  0E00               	movlw	0
  2058  00338C  6E40               	movwf	_width+1,c
  2059  00338E  0E00               	movlw	0
  2060  003390  6E3F               	movwf	_width,c
  2061  003392  0060  F0FC  F043   	movff	_width,_flags
  2062  003398  0060  F100  F044   	movff	_width+1,_flags+1
  2063                           
  2064                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2065  00339E  6841               	setf	_prec,c
  2066  0033A0  6842               	setf	_prec+1,c
  2067                           
  2068                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  2069  0033A2  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2070  0033A8  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2071  0033AE  006F FF7B FFF6     	movff	postinc2,tblptrl
  2072  0033B4  006F FF77 FFF7     	movff	postdec2,tblptrh
  2073  0033BA                     	if	0	;tblptru may be non-zero
  2074  0033BA                     	endif
  2075  0033BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2076  0033BA  0E00               	movlw	low (__mediumconst shr (0+16))
  2077  0033BC  6EF8               	movwf	tblptru,c
  2078  0033BE                     	endif
  2079  0033BE  0008               	tblrd		*
  2080  0033C0  50F5               	movf	tablat,w,c
  2081  0033C2  0100               	movlb	0	; () banked
  2082  0033C4  6F66               	movwf	tolower@c& (0+255),b
  2083  0033C6  6B67               	clrf	(tolower@c+1)& (0+255),b
  2084  0033C8  ECCA  F027         	call	_tolower	;wreg free
  2085  0033CC  0100               	movlb	0	; () banked
  2086  0033CE  5166               	movf	?_tolower& (0+255),w,b
  2087  0033D0  6FE1               	movwf	vfpfcnvrt@ct& (0+255),b
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  2091  0033D2  51E1               	movf	vfpfcnvrt@ct& (0+255),w,b
  2092  0033D4  B4D8               	btfsc	status,2,c
  2093  0033D6  D045               	goto	l6323
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  2097  0033D8  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2098  0033DE  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2099  0033E4  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2100  0033EA  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2101  0033F0  0E01               	movlw	1
  2102  0033F2  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2103  0033F4  0E00               	movlw	0
  2104  0033F6  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2105  0033F8  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2106  0033FE  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2107  003404                     	if	0	;tblptru may be non-zero
  2108  003404                     	endif
  2109  003404                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2110  003404  0E00               	movlw	low (__mediumconst shr (0+16))
  2111  003406  6EF8               	movwf	tblptru,c
  2112  003408                     	endif
  2113  003408  0008               	tblrd		*
  2114  00340A  50F5               	movf	tablat,w,c
  2115  00340C  6F66               	movwf	tolower@c& (0+255),b
  2116  00340E  6B67               	clrf	(tolower@c+1)& (0+255),b
  2117  003410  ECCA  F027         	call	_tolower	;wreg free
  2118  003414  0100               	movlb	0	; () banked
  2119  003416  5166               	movf	?_tolower& (0+255),w,b
  2120  003418  6FE2               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  2124  00341A  51E2               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2125  00341C  B4D8               	btfsc	status,2,c
  2126  00341E  D021               	goto	l6323
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  2130  003420  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2131  003426  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2132  00342C  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2133  003432  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2134  003438  0E02               	movlw	2
  2135  00343A  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2136  00343C  0E00               	movlw	0
  2137  00343E  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2138  003440  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2139  003446  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2140  00344C                     	if	0	;tblptru may be non-zero
  2141  00344C                     	endif
  2142  00344C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2143  00344C  0E00               	movlw	low (__mediumconst shr (0+16))
  2144  00344E  6EF8               	movwf	tblptru,c
  2145  003450                     	endif
  2146  003450  0008               	tblrd		*
  2147  003452  50F5               	movf	tablat,w,c
  2148  003454  6F66               	movwf	tolower@c& (0+255),b
  2149  003456  6B67               	clrf	(tolower@c+1)& (0+255),b
  2150  003458  ECCA  F027         	call	_tolower	;wreg free
  2151  00345C  0100               	movlb	0	; () banked
  2152  00345E  5166               	movf	?_tolower& (0+255),w,b
  2153  003460  6FE3               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2154  003462                     l6323:
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  2158  003462  0E66               	movlw	102
  2159  003464  19E1               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2160  003466  A4D8               	btfss	status,2,c
  2161  003468  D05B               	goto	l6335
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  2165  00346A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2166  003470  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2167  003476  006F FF7B FFF6     	movff	postinc2,tblptrl
  2168  00347C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2169  003482                     	if	0	;tblptru may be non-zero
  2170  003482                     	endif
  2171  003482                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2172  003482  0E00               	movlw	low (__mediumconst shr (0+16))
  2173  003484  6EF8               	movwf	tblptru,c
  2174  003486                     	endif
  2175  003486  0008               	tblrd		*
  2176  003488  006F FFD4  F0E4    	movff	tablat,vfpfcnvrt@c
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  2180  00348E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2181  003494  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2182  00349A  2ADE               	incf	postinc2,f,c
  2183  00349C  0E00               	movlw	0
  2184  00349E  22DD               	addwfc	postdec2,f,c
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  2188  0034A0  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2189  0034A6  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2190  0034AC  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  2191  0034B2  0E04               	movlw	4
  2192  0034B4  26DE               	addwf	postinc2,f,c
  2193  0034B6  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  2194  0034BC  0E00               	movlw	0
  2195  0034BE  22DD               	addwfc	postdec2,f,c
  2196  0034C0  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2197  0034C6  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2198  0034CC  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f
  2199  0034D2  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+1
  2200  0034D8  006F FF78  F0DF    	movff	postinc2,vfpfcnvrt@f+2
  2201  0034DE  006F FF78  F0E0    	movff	postinc2,vfpfcnvrt@f+3
  2202  0034E4                     l6331:
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  2206  0034E4  0060  F344  F08D   	movff	vfpfcnvrt@fp,efgtoa@fp
  2207  0034EA  0060  F348  F08E   	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2208  0034F0  0060  F374  F08F   	movff	vfpfcnvrt@f,efgtoa@f
  2209  0034F6  0060  F378  F090   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2210  0034FC  0060  F37C  F091   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2211  003502  0060  F380  F092   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2212  003508  0060  F390  F093   	movff	vfpfcnvrt@c,efgtoa@c
  2213  00350E  EC48  F010         	call	_efgtoa	;wreg free
  2214  003512  0060  F234  F0D1   	movff	?_efgtoa,?_vfpfcnvrt
  2215  003518  0060  F238  F0D2   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2216  00351E  0012               	return	
  2217  003520                     l6335:
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2221  003520  0EE1               	movlw	low vfpfcnvrt@ct
  2222  003522  6F60               	movwf	strncmp@_l& (0+255),b
  2223  003524  0E00               	movlw	high vfpfcnvrt@ct
  2224  003526  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2225  003528  0E8C               	movlw	low STR_17
  2226  00352A  6F62               	movwf	strncmp@_r& (0+255),b
  2227  00352C  0E20               	movlw	high STR_17
  2228  00352E  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2229  003530  0E00               	movlw	0
  2230  003532  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2231  003534  0E02               	movlw	2
  2232  003536  6F64               	movwf	strncmp@n& (0+255),b
  2233  003538  EC3C  F023         	call	_strncmp	;wreg free
  2234  00353C  0100               	movlb	0	; () banked
  2235  00353E  5160               	movf	?_strncmp& (0+255),w,b
  2236  003540  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2237  003542  A4D8               	btfss	status,2,c
  2238  003544  D070               	goto	l6351
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2242  003546  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2243  00354C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2244  003552  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2245  003558  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2246  00355E  0E01               	movlw	1
  2247  003560  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2248  003562  0E00               	movlw	0
  2249  003564  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2250  003566  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2251  00356C  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2252  003572                     	if	0	;tblptru may be non-zero
  2253  003572                     	endif
  2254  003572                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2255  003572  0E00               	movlw	low (__mediumconst shr (0+16))
  2256  003574  6EF8               	movwf	tblptru,c
  2257  003576                     	endif
  2258  003576  0008               	tblrd		*
  2259  003578  006F FFD4  F0E4    	movff	tablat,vfpfcnvrt@c
  2260  00357E  0EBF               	movlw	191
  2261  003580  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  2262  003582  0EFF               	movlw	255
  2263  003584  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2264  003586  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2265  00358C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2266  003592  006F FF7B FFF6     	movff	postinc2,tblptrl
  2267  003598  006F FF77 FFF7     	movff	postdec2,tblptrh
  2268  00359E                     	if	0	;tblptru may be non-zero
  2269  00359E                     	endif
  2270  00359E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2271  00359E  0E00               	movlw	low (__mediumconst shr (0+16))
  2272  0035A0  6EF8               	movwf	tblptru,c
  2273  0035A2                     	endif
  2274  0035A2  0008               	tblrd		*
  2275  0035A4  50F5               	movf	tablat,w,c
  2276  0035A6  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2277  0035A8  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2278  0035AA  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  2279  0035AC  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2280  0035AE  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2281  0035B0  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2282  0035B2  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2283  0035B4  E106               	bnz	u8310
  2284  0035B6  0E1A               	movlw	26
  2285  0035B8  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2286  0035BA  B0D8               	btfsc	status,0,c
  2287  0035BC  D002               	goto	u8310
  2288  0035BE  0E01               	movlw	1
  2289  0035C0  D001               	goto	u8320
  2290  0035C2                     u8310:
  2291  0035C2  0E00               	movlw	0
  2292  0035C4                     u8320:
  2293  0035C4  6FDB               	movwf	_vfpfcnvrt$1685& (0+255),b
  2294  0035C6  6BDC               	clrf	(_vfpfcnvrt$1685+1)& (0+255),b
  2295                           
  2296                           ; BSR set to: 0
  2297  0035C8  51DB               	movf	_vfpfcnvrt$1685& (0+255),w,b
  2298  0035CA  11DC               	iorwf	(_vfpfcnvrt$1685+1)& (0+255),w,b
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2302                           
  2303                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  2307  0035CC  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2308  0035D2  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2309  0035D8  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  2310  0035DE  0E04               	movlw	4
  2311  0035E0  26DE               	addwf	postinc2,f,c
  2312  0035E2  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  2313  0035E8  0E00               	movlw	0
  2314  0035EA  22DD               	addwfc	postdec2,f,c
  2315  0035EC  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2316  0035F2  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2317  0035F8  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f
  2318  0035FE  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+1
  2319  003604  006F FF78  F0DF    	movff	postinc2,vfpfcnvrt@f+2
  2320  00360A  006F FF78  F0E0    	movff	postinc2,vfpfcnvrt@f+3
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  2324                           
  2325                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  2326  003610  0E02               	movlw	2
  2327  003612  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2328  003618  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2329  00361E  26DE               	addwf	postinc2,f,c
  2330  003620  0E00               	movlw	0
  2331  003622  22DD               	addwfc	postdec2,f,c
  2332  003624  D75F               	goto	l6331
  2333  003626                     l6351:
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2337  003626  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2338  00362C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2339  003632  006F FF7B FFF6     	movff	postinc2,tblptrl
  2340  003638  006F FF77 FFF7     	movff	postdec2,tblptrh
  2341  00363E                     	if	0	;tblptru may be non-zero
  2342  00363E                     	endif
  2343  00363E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2344  00363E  0E00               	movlw	low (__mediumconst shr (0+16))
  2345  003640  6EF8               	movwf	tblptru,c
  2346  003642                     	endif
  2347  003642  0008               	tblrd		*
  2348  003644  50F5               	movf	tablat,w,c
  2349  003646  0A25               	xorlw	37
  2350  003648  A4D8               	btfss	status,2,c
  2351  00364A  D01B               	goto	l6361
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2355  00364C  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2356  003652  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2357  003658  2ADE               	incf	postinc2,f,c
  2358  00365A  0E00               	movlw	0
  2359  00365C  22DD               	addwfc	postdec2,f,c
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2363  00365E  0E00               	movlw	0
  2364  003660  6F61               	movwf	(fputc@c+1)& (0+255),b
  2365  003662  0E25               	movlw	37
  2366  003664  6F60               	movwf	fputc@c& (0+255),b
  2367  003666  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  2368  00366C  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2369  003672  ECCA  F024         	call	_fputc	;wreg free
  2370  003676                     l6357:
  2371                           
  2372                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2373  003676  0E00               	movlw	0
  2374  003678  0100               	movlb	0	; () banked
  2375  00367A  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2376  00367C  0E01               	movlw	1
  2377  00367E  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  2378  003680  0012               	return	
  2379  003682                     l6361:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2383  003682  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2384  003688  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2385  00368E  2ADE               	incf	postinc2,f,c
  2386  003690  0E00               	movlw	0
  2387  003692  22DD               	addwfc	postdec2,f,c
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2391  003694  0E00               	movlw	0
  2392  003696  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2393  003698  0E00               	movlw	0
  2394  00369A  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  2395  00369C  0012               	return	
  2396  00369E                     l6367:
  2397                           
  2398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  2399  00369E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2400  0036A4  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2401  0036AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  2402  0036B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  2403  0036B6                     	if	0	;tblptru may be non-zero
  2404  0036B6                     	endif
  2405  0036B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2406  0036B6  0E00               	movlw	low (__mediumconst shr (0+16))
  2407  0036B8  6EF8               	movwf	tblptru,c
  2408  0036BA                     	endif
  2409  0036BA  0008               	tblrd		*
  2410  0036BC  50F5               	movf	tablat,w,c
  2411  0036BE  0100               	movlb	0	; () banked
  2412  0036C0  6F60               	movwf	fputc@c& (0+255),b
  2413  0036C2  6B61               	clrf	(fputc@c+1)& (0+255),b
  2414  0036C4  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  2415  0036CA  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2416  0036D0  ECCA  F024         	call	_fputc	;wreg free
  2417                           
  2418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2419  0036D4  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2420  0036DA  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2421  0036E0  2ADE               	incf	postinc2,f,c
  2422  0036E2  0E00               	movlw	0
  2423  0036E4  22DD               	addwfc	postdec2,f,c
  2424  0036E6  D7C7               	goto	l6357
  2425  0036E8                     __end_of_vfpfcnvrt:
  2426                           	opt callstack 0
  2427                           
  2428 ;; *************** function _strncmp *****************
  2429 ;; Defined at:
  2430 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  2433 ;;		 -> vfpfcnvrt@ct(3), 
  2434 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  2435 ;;		 -> STR_19(3), 
  2436 ;;  n               2    4[BANK0 ] unsigned int 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  2439 ;;		 -> STR_19(3), 
  2440 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  2441 ;;		 -> vfpfcnvrt@ct(3), 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  2    0[BANK0 ] int 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2451 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2452 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2453 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2454 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2455 ;;Total ram usage:       11 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    2
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_vfpfcnvrt
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text6
  2466  004678                     __ptext6:
  2467                           	opt callstack 0
  2468  004678                     _strncmp:
  2469                           	opt callstack 24
  2470                           
  2471                           ;incstack = 0
  2472  004678  0060  F180  F067   	movff	strncmp@_l,strncmp@l
  2473  00467E  0060  F184  F068   	movff	strncmp@_l+1,strncmp@l+1
  2474  004684  0060  F188  F069   	movff	strncmp@_r,strncmp@r
  2475  00468A  0060  F18C  F06A   	movff	strncmp@_r+1,strncmp@r+1
  2476  004690  0100               	movlb	0	; () banked
  2477  004692  0764               	decf	strncmp@n& (0+255),f,b
  2478  004694  A0D8               	btfss	status,0,c
  2479  004696  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2480  004698  2964               	incf	strncmp@n& (0+255),w,b
  2481  00469A  E10F               	bnz	l6293
  2482  00469C  2965               	incf	(strncmp@n+1)& (0+255),w,b
  2483  00469E  A4D8               	btfss	status,2,c
  2484  0046A0  D00C               	goto	l6293
  2485                           
  2486                           ; BSR set to: 0
  2487  0046A2  0E00               	movlw	0
  2488  0046A4  6F61               	movwf	(?_strncmp+1)& (0+255),b
  2489  0046A6  0E00               	movlw	0
  2490  0046A8  6F60               	movwf	?_strncmp& (0+255),b
  2491  0046AA  0012               	return	
  2492  0046AC                     l6291:
  2493                           
  2494                           ; BSR set to: 0
  2495  0046AC  4B67               	infsnz	strncmp@l& (0+255),f,b
  2496  0046AE  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  2497  0046B0  4B69               	infsnz	strncmp@r& (0+255),f,b
  2498  0046B2  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  2499  0046B4  0764               	decf	strncmp@n& (0+255),f,b
  2500  0046B6  A0D8               	btfss	status,0,c
  2501  0046B8  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2502  0046BA                     l6293:
  2503                           
  2504                           ; BSR set to: 0
  2505  0046BA  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2506  0046C0  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2507  0046C6  50DF               	movf	indf2,w,c
  2508  0046C8  B4D8               	btfsc	status,2,c
  2509  0046CA  D026               	goto	u8250
  2510                           
  2511                           ; BSR set to: 0
  2512  0046CC  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2513  0046D2  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2514  0046D8                     	if	0	;tblptru may be non-zero
  2515  0046D8                     	endif
  2516  0046D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2517  0046D8  0E00               	movlw	low (__mediumconst shr (0+16))
  2518  0046DA  6EF8               	movwf	tblptru,c
  2519  0046DC                     	endif
  2520  0046DC  0008               	tblrd		*
  2521  0046DE  50F5               	movf	tablat,w,c
  2522  0046E0  0900               	iorlw	0
  2523  0046E2  B4D8               	btfsc	status,2,c
  2524  0046E4  D019               	goto	u8250
  2525                           
  2526                           ; BSR set to: 0
  2527  0046E6  5164               	movf	strncmp@n& (0+255),w,b
  2528  0046E8  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  2529  0046EA  B4D8               	btfsc	status,2,c
  2530  0046EC  D015               	goto	u8250
  2531                           
  2532                           ; BSR set to: 0
  2533  0046EE  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2534  0046F4  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2535  0046FA  50DF               	movf	indf2,w,c
  2536  0046FC  6F66               	movwf	??_strncmp& (0+255),b
  2537  0046FE  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2538  004704  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2539  00470A                     	if	0	;tblptru may be non-zero
  2540  00470A                     	endif
  2541  00470A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2542  00470A  0E00               	movlw	low (__mediumconst shr (0+16))
  2543  00470C  6EF8               	movwf	tblptru,c
  2544  00470E                     	endif
  2545  00470E  0008               	tblrd		*
  2546  004710  50F5               	movf	tablat,w,c
  2547  004712  1966               	xorwf	??_strncmp& (0+255),w,b
  2548  004714  B4D8               	btfsc	status,2,c
  2549  004716  D7CA               	goto	l6291
  2550  004718                     u8250:
  2551                           
  2552                           ; BSR set to: 0
  2553  004718  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2554  00471E  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2555  004724  50DF               	movf	indf2,w,c
  2556  004726  6F66               	movwf	??_strncmp& (0+255),b
  2557  004728  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2558  00472E  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2559  004734                     	if	0	;tblptru may be non-zero
  2560  004734                     	endif
  2561  004734                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2562  004734  0E00               	movlw	low (__mediumconst shr (0+16))
  2563  004736  6EF8               	movwf	tblptru,c
  2564  004738                     	endif
  2565  004738  0008               	tblrd		*
  2566  00473A  50F5               	movf	tablat,w,c
  2567  00473C  5D66               	subwf	??_strncmp& (0+255),w,b
  2568  00473E  6F60               	movwf	?_strncmp& (0+255),b
  2569  004740  6B61               	clrf	(?_strncmp+1)& (0+255),b
  2570  004742  A0D8               	btfss	status,0,c
  2571  004744  0761               	decf	(?_strncmp+1)& (0+255),f,b
  2572                           
  2573                           ; BSR set to: 0
  2574  004746  0012               	return		;funcret
  2575  004748                     __end_of_strncmp:
  2576                           	opt callstack 0
  2577                           
  2578 ;; *************** function _efgtoa *****************
  2579 ;; Defined at:
  2580 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  2583 ;;		 -> sprintf@f(6), 
  2584 ;;  f               4   47[BANK0 ] PTR struct _IO_FILE
  2585 ;;  c               1   51[BANK0 ] unsigned char 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  u               4  109[BANK0 ] unsigned char 
  2588 ;;  g               4  101[BANK0 ] unsigned char 
  2589 ;;  l               4   95[BANK0 ] unsigned char 
  2590 ;;  h               4   91[BANK0 ] unsigned char 
  2591 ;;  ou              4   57[BANK0 ] unsigned char 
  2592 ;;  n               2  107[BANK0 ] int 
  2593 ;;  e               2  105[BANK0 ] int 
  2594 ;;  i               2   99[BANK0 ] int 
  2595 ;;  w               2   88[BANK0 ] int 
  2596 ;;  p               2   85[BANK0 ] int 
  2597 ;;  sign            2   83[BANK0 ] int 
  2598 ;;  d               2   81[BANK0 ] int 
  2599 ;;  ne              2   79[BANK0 ] int 
  2600 ;;  m               2   77[BANK0 ] int 
  2601 ;;  pp              2   75[BANK0 ] int 
  2602 ;;  t               2   73[BANK0 ] int 
  2603 ;;  mode            1   90[BANK0 ] unsigned char 
  2604 ;;  nmode           1   87[BANK0 ] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  2   45[BANK0 ] int 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2614 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2615 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2616 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2617 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2618 ;;Total ram usage:       68 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    6
  2621 ;; This function calls:
  2622 ;;		___awdiv
  2623 ;;		___awmod
  2624 ;;		___fladd
  2625 ;;		___fldiv
  2626 ;;		___fleq
  2627 ;;		___flge
  2628 ;;		___flmul
  2629 ;;		___flneg
  2630 ;;		___flsub
  2631 ;;		___fltol
  2632 ;;		___fpclassifyf
  2633 ;;		_floorf
  2634 ;;		_isupper
  2635 ;;		_pad
  2636 ;;		_strcpy
  2637 ;;		_tolower
  2638 ;; This function is called by:
  2639 ;;		_vfpfcnvrt
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text7
  2644  002090                     __ptext7:
  2645                           	opt callstack 0
  2646  002090                     _efgtoa:
  2647                           	opt callstack 20
  2648                           
  2649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;incstack = 0
  2653  002090  0E00               	movlw	0
  2654  002092  0100               	movlb	0	; () banked
  2655  002094  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  2656  002096  0E00               	movlw	0
  2657  002098  6FB3               	movwf	efgtoa@sign& (0+255),b
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  2661  00209A  0060  F23C  F0C5   	movff	efgtoa@f,efgtoa@g
  2662  0020A0  0060  F240  F0C6   	movff	efgtoa@f+1,efgtoa@g+1
  2663  0020A6  0060  F244  F0C7   	movff	efgtoa@f+2,efgtoa@g+2
  2664  0020AC  0060  F248  F0C8   	movff	efgtoa@f+3,efgtoa@g+3
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  2668  0020B2  AFC8               	btfss	(efgtoa@g+3)& (0+255),7,b
  2669  0020B4  D01E               	goto	l5997
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  2673  0020B6  0E00               	movlw	0
  2674  0020B8  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  2675  0020BA  0E01               	movlw	1
  2676  0020BC  6FB3               	movwf	efgtoa@sign& (0+255),b
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  2680  0020BE  0060  F314  F060   	movff	efgtoa@g,___flneg@f1
  2681  0020C4  0060  F318  F061   	movff	efgtoa@g+1,___flneg@f1+1
  2682  0020CA  0060  F31C  F062   	movff	efgtoa@g+2,___flneg@f1+2
  2683  0020D0  0060  F320  F063   	movff	efgtoa@g+3,___flneg@f1+3
  2684  0020D6  ECAC  F028         	call	___flneg	;wreg free
  2685  0020DA  0060  F180  F0C5   	movff	?___flneg,efgtoa@g
  2686  0020E0  0060  F184  F0C6   	movff	?___flneg+1,efgtoa@g+1
  2687  0020E6  0060  F188  F0C7   	movff	?___flneg+2,efgtoa@g+2
  2688  0020EC  0060  F18C  F0C8   	movff	?___flneg+3,efgtoa@g+3
  2689  0020F2                     l5997:
  2690                           
  2691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  2692  0020F2  0E00               	movlw	0
  2693  0020F4  0100               	movlb	0	; () banked
  2694  0020F6  6FCC               	movwf	(efgtoa@n+1)& (0+255),b
  2695  0020F8  0E00               	movlw	0
  2696  0020FA  6FCB               	movwf	efgtoa@n& (0+255),b
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  2700  0020FC  0060  F0FC  F0B8   	movff	_width,efgtoa@w
  2701  002102  0060  F100  F0B9   	movff	_width+1,efgtoa@w+1
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  2705  002108  51B3               	movf	efgtoa@sign& (0+255),w,b
  2706  00210A  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2707  00210C  A4D8               	btfss	status,2,c
  2708  00210E  D002               	goto	u7710
  2709                           
  2710                           ; BSR set to: 0
  2711  002110  A443               	btfss	_flags,2,c
  2712  002112  D014               	goto	l6017
  2713  002114                     u7710:
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  2717  002114  51B3               	movf	efgtoa@sign& (0+255),w,b
  2718  002116  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2719  002118  A4D8               	btfss	status,2,c
  2720  00211A  D004               	goto	l6009
  2721                           
  2722                           ; BSR set to: 0
  2723  00211C  0E00               	movlw	0
  2724  00211E  6F9E               	movwf	(_efgtoa$1656+1)& (0+255),b
  2725  002120  0E2B               	movlw	43
  2726  002122  D003               	goto	L1
  2727  002124                     l6009:
  2728                           
  2729                           ; BSR set to: 0
  2730  002124  0E00               	movlw	0
  2731  002126  6F9E               	movwf	(_efgtoa$1656+1)& (0+255),b
  2732  002128  0E2D               	movlw	45
  2733  00212A                     L1:
  2734  00212A  6F9D               	movwf	_efgtoa$1656& (0+255),b
  2735                           
  2736                           ; BSR set to: 0
  2737  00212C  0060  F274  F134   	movff	_efgtoa$1656,_dbuf
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  2741  002132  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  2742  002134  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  2746  002136  07B8               	decf	efgtoa@w& (0+255),f,b
  2747  002138  A0D8               	btfss	status,0,c
  2748  00213A  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  2749  00213C                     l6017:
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2753  00213C  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  2754  002142  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  2755  002148  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  2756  00214E  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  2757  002154  EC5C  F022         	call	___fpclassifyf	;wreg free
  2758  002158  0100               	movlb	0	; () banked
  2759  00215A  0560               	decf	?___fpclassifyf& (0+255),w,b
  2760  00215C  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2761  00215E  A4D8               	btfss	status,2,c
  2762  002160  D052               	goto	l6035
  2763                           
  2764                           ; BSR set to: 0
  2765  002162  0EBF               	movlw	191
  2766  002164  6F94               	movwf	??_efgtoa& (0+255),b
  2767  002166  0EFF               	movlw	255
  2768  002168  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  2769  00216A  5193               	movf	efgtoa@c& (0+255),w,b
  2770  00216C  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  2771  00216E  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  2772  002170  5194               	movf	??_efgtoa& (0+255),w,b
  2773  002172  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  2774  002174  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  2775  002176  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2776  002178  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  2777  00217A  E106               	bnz	u7740
  2778  00217C  0E1A               	movlw	26
  2779  00217E  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  2780  002180  B0D8               	btfsc	status,0,c
  2781  002182  D002               	goto	u7740
  2782  002184  0E01               	movlw	1
  2783  002186  D001               	goto	u7750
  2784  002188                     u7740:
  2785  002188  0E00               	movlw	0
  2786  00218A                     u7750:
  2787  00218A  6F9F               	movwf	_efgtoa$1657& (0+255),b
  2788  00218C  6BA0               	clrf	(_efgtoa$1657+1)& (0+255),b
  2789                           
  2790                           ; BSR set to: 0
  2791  00218E  519F               	movf	_efgtoa$1657& (0+255),w,b
  2792  002190  11A0               	iorwf	(_efgtoa$1657+1)& (0+255),w,b
  2793  002192  B4D8               	btfsc	status,2,c
  2794  002194  D00D               	goto	l6027
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  2798  002196  0E34               	movlw	low _dbuf
  2799  002198  25CB               	addwf	efgtoa@n& (0+255),w,b
  2800  00219A  6F60               	movwf	strcpy@dest& (0+255),b
  2801  00219C  0E01               	movlw	high _dbuf
  2802  00219E  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2803  0021A0  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2804  0021A2  0E7C               	movlw	low STR_9
  2805  0021A4  6F62               	movwf	strcpy@src& (0+255),b
  2806  0021A6  0E20               	movlw	high STR_9
  2807  0021A8  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2808  0021AA  EC03  F027         	call	_strcpy	;wreg free
  2809                           
  2810                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  2811  0021AE  D00C               	goto	l6029
  2812  0021B0                     l6027:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  2816  0021B0  0E34               	movlw	low _dbuf
  2817  0021B2  25CB               	addwf	efgtoa@n& (0+255),w,b
  2818  0021B4  6F60               	movwf	strcpy@dest& (0+255),b
  2819  0021B6  0E01               	movlw	high _dbuf
  2820  0021B8  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2821  0021BA  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2822  0021BC  0E84               	movlw	low STR_10
  2823  0021BE  6F62               	movwf	strcpy@src& (0+255),b
  2824  0021C0  0E20               	movlw	high STR_10
  2825  0021C2  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2826  0021C4  EC03  F027         	call	_strcpy	;wreg free
  2827  0021C8                     l6029:
  2828                           
  2829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  2830  0021C8  0100               	movlb	0	; () banked
  2831  0021CA  0EFD               	movlw	253
  2832  0021CC  27B8               	addwf	efgtoa@w& (0+255),f,b
  2833  0021CE  0EFF               	movlw	255
  2834  0021D0  23B9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2835  0021D2                     l6031:
  2836                           
  2837                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  2838  0021D2  0060  F234  F070   	movff	efgtoa@fp,pad@fp
  2839  0021D8  0060  F238  F071   	movff	efgtoa@fp+1,pad@fp+1
  2840  0021DE  0E34               	movlw	low _dbuf
  2841  0021E0  0100               	movlb	0	; () banked
  2842  0021E2  6F72               	movwf	pad@buf& (0+255),b
  2843  0021E4  0E01               	movlw	high _dbuf
  2844  0021E6  6F73               	movwf	(pad@buf+1)& (0+255),b
  2845  0021E8  0060  F2E0  F074   	movff	efgtoa@w,pad@p
  2846  0021EE  0060  F2E4  F075   	movff	efgtoa@w+1,pad@p+1
  2847  0021F4  EC6E  F024         	call	_pad	;wreg free
  2848  0021F8  0060  F1C0  F08D   	movff	?_pad,?_efgtoa
  2849  0021FE  0060  F1C4  F08E   	movff	?_pad+1,?_efgtoa+1
  2850  002204  0012               	return	
  2851  002206                     l6035:
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2855  002206  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  2856  00220C  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  2857  002212  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  2858  002218  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  2859  00221E  EC5C  F022         	call	___fpclassifyf	;wreg free
  2860  002222  0100               	movlb	0	; () banked
  2861  002224  5160               	movf	?___fpclassifyf& (0+255),w,b
  2862  002226  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2863  002228  A4D8               	btfss	status,2,c
  2864  00222A  D034               	goto	l6053
  2865                           
  2866                           ; BSR set to: 0
  2867  00222C  0EBF               	movlw	191
  2868  00222E  6F94               	movwf	??_efgtoa& (0+255),b
  2869  002230  0EFF               	movlw	255
  2870  002232  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  2871  002234  5193               	movf	efgtoa@c& (0+255),w,b
  2872  002236  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  2873  002238  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  2874  00223A  5194               	movf	??_efgtoa& (0+255),w,b
  2875  00223C  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  2876  00223E  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  2877  002240  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2878  002242  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  2879  002244  E106               	bnz	u7780
  2880  002246  0E1A               	movlw	26
  2881  002248  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  2882  00224A  B0D8               	btfsc	status,0,c
  2883  00224C  D002               	goto	u7780
  2884  00224E  0E01               	movlw	1
  2885  002250  D001               	goto	u7790
  2886  002252                     u7780:
  2887  002252  0E00               	movlw	0
  2888  002254                     u7790:
  2889  002254  6FA1               	movwf	_efgtoa$1662& (0+255),b
  2890  002256  6BA2               	clrf	(_efgtoa$1662+1)& (0+255),b
  2891                           
  2892                           ; BSR set to: 0
  2893  002258  51A1               	movf	_efgtoa$1662& (0+255),w,b
  2894  00225A  11A2               	iorwf	(_efgtoa$1662+1)& (0+255),w,b
  2895  00225C  B4D8               	btfsc	status,2,c
  2896  00225E  D00D               	goto	l6045
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  2900  002260  0E34               	movlw	low _dbuf
  2901  002262  25CB               	addwf	efgtoa@n& (0+255),w,b
  2902  002264  6F60               	movwf	strcpy@dest& (0+255),b
  2903  002266  0E01               	movlw	high _dbuf
  2904  002268  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2905  00226A  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2906  00226C  0E80               	movlw	low STR_13
  2907  00226E  6F62               	movwf	strcpy@src& (0+255),b
  2908  002270  0E20               	movlw	high STR_13
  2909  002272  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2910  002274  EC03  F027         	call	_strcpy	;wreg free
  2911                           
  2912                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  2913  002278  D7A7               	goto	l6029
  2914  00227A                     l6045:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  2918  00227A  0E34               	movlw	low _dbuf
  2919  00227C  25CB               	addwf	efgtoa@n& (0+255),w,b
  2920  00227E  6F60               	movwf	strcpy@dest& (0+255),b
  2921  002280  0E01               	movlw	high _dbuf
  2922  002282  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2923  002284  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2924  002286  0E88               	movlw	low STR_14
  2925  002288  6F62               	movwf	strcpy@src& (0+255),b
  2926  00228A  0E20               	movlw	high STR_14
  2927  00228C  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2928  00228E  EC03  F027         	call	_strcpy	;wreg free
  2929  002292  D79A               	goto	l6029
  2930  002294                     l6053:
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  2934  002294  0E00               	movlw	0
  2935  002296  6FCD               	movwf	efgtoa@u& (0+255),b
  2936  002298  0E00               	movlw	0
  2937  00229A  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  2938  00229C  0E80               	movlw	128
  2939  00229E  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  2940  0022A0  0E3F               	movlw	63
  2941  0022A2  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  2942                           
  2943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  2944  0022A4  0E00               	movlw	0
  2945  0022A6  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  2946  0022A8  0E00               	movlw	0
  2947  0022AA  6FC9               	movwf	efgtoa@e& (0+255),b
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  2951  0022AC  0060  F314  F060   	movff	efgtoa@g,___fleq@ff1
  2952  0022B2  0060  F318  F061   	movff	efgtoa@g+1,___fleq@ff1+1
  2953  0022B8  0060  F31C  F062   	movff	efgtoa@g+2,___fleq@ff1+2
  2954  0022BE  0060  F320  F063   	movff	efgtoa@g+3,___fleq@ff1+3
  2955  0022C4  0E00               	movlw	0
  2956  0022C6  6F64               	movwf	___fleq@ff2& (0+255),b
  2957  0022C8  0E00               	movlw	0
  2958  0022CA  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  2959  0022CC  0E00               	movlw	0
  2960  0022CE  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  2961  0022D0  0E00               	movlw	0
  2962  0022D2  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  2963  0022D4  ECC3  F025         	call	___fleq	;wreg free
  2964  0022D8  0100               	movlb	0	; () banked
  2965  0022DA  A0D8               	btfss	status,0,c
  2966  0022DC  D026               	goto	l6063
  2967  0022DE  D09C               	goto	u7830
  2968  0022E0                     l6059:
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  2972  0022E0  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  2973  0022E6  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  2974  0022EC  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  2975  0022F2  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  2976  0022F8  0E00               	movlw	0
  2977  0022FA  6F64               	movwf	___flmul@a& (0+255),b
  2978  0022FC  0E00               	movlw	0
  2979  0022FE  6F65               	movwf	(___flmul@a+1)& (0+255),b
  2980  002300  0E20               	movlw	32
  2981  002302  6F66               	movwf	(___flmul@a+2)& (0+255),b
  2982  002304  0E41               	movlw	65
  2983  002306  6F67               	movwf	(___flmul@a+3)& (0+255),b
  2984  002308  ECF6  F015         	call	___flmul	;wreg free
  2985  00230C  0060  F180  F0CD   	movff	?___flmul,efgtoa@u
  2986  002312  0060  F184  F0CE   	movff	?___flmul+1,efgtoa@u+1
  2987  002318  0060  F188  F0CF   	movff	?___flmul+2,efgtoa@u+2
  2988  00231E  0060  F18C  F0D0   	movff	?___flmul+3,efgtoa@u+3
  2989                           
  2990                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  2991  002324  0100               	movlb	0	; () banked
  2992  002326  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  2993  002328  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  2994  00232A                     l6063:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  2998  00232A  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  2999  002330  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  3000  002336  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  3001  00233C  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  3002  002342  0E00               	movlw	0
  3003  002344  6F64               	movwf	___flmul@a& (0+255),b
  3004  002346  0E00               	movlw	0
  3005  002348  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3006  00234A  0E20               	movlw	32
  3007  00234C  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3008  00234E  0E41               	movlw	65
  3009  002350  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3010  002352  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  3011  002358  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  3012  00235E  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  3013  002364  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  3014  00236A  ECF6  F015         	call	___flmul	;wreg free
  3015  00236E  0060  F180  F07D   	movff	?___flmul,___flge@ff2
  3016  002374  0060  F184  F07E   	movff	?___flmul+1,___flge@ff2+1
  3017  00237A  0060  F188  F07F   	movff	?___flmul+2,___flge@ff2+2
  3018  002380  0060  F18C  F080   	movff	?___flmul+3,___flge@ff2+3
  3019  002386  ECD3  F022         	call	___flge	;wreg free
  3020  00238A  0100               	movlb	0	; () banked
  3021  00238C  A0D8               	btfss	status,0,c
  3022  00238E  D027               	goto	l6069
  3023  002390  D7A7               	goto	l6059
  3024  002392                     l6065:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  3028  002392  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3029  002398  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3030  00239E  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3031  0023A4  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3032  0023AA  0E00               	movlw	0
  3033  0023AC  6F64               	movwf	___fldiv@a& (0+255),b
  3034  0023AE  0E00               	movlw	0
  3035  0023B0  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3036  0023B2  0E20               	movlw	32
  3037  0023B4  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3038  0023B6  0E41               	movlw	65
  3039  0023B8  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3040  0023BA  EC19  F01D         	call	___fldiv	;wreg free
  3041  0023BE  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3042  0023C4  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3043  0023CA  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3044  0023D0  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3045                           
  3046                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  3047  0023D6  0100               	movlb	0	; () banked
  3048  0023D8  07C9               	decf	efgtoa@e& (0+255),f,b
  3049  0023DA  A0D8               	btfss	status,0,c
  3050  0023DC  07CA               	decf	(efgtoa@e+1)& (0+255),f,b
  3051  0023DE                     l6069:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  3055  0023DE  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  3056  0023E4  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  3057  0023EA  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  3058  0023F0  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  3059  0023F6  0060  F334  F07D   	movff	efgtoa@u,___flge@ff2
  3060  0023FC  0060  F338  F07E   	movff	efgtoa@u+1,___flge@ff2+1
  3061  002402  0060  F33C  F07F   	movff	efgtoa@u+2,___flge@ff2+2
  3062  002408  0060  F340  F080   	movff	efgtoa@u+3,___flge@ff2+3
  3063  00240E  ECD3  F022         	call	___flge	;wreg free
  3064  002412  0100               	movlb	0	; () banked
  3065  002414  A0D8               	btfss	status,0,c
  3066  002416  D7BD               	goto	l6065
  3067  002418                     u7830:
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  3071  002418  0060  F24C  F066   	movff	efgtoa@c,tolower@c
  3072  00241E  6B67               	clrf	(tolower@c+1)& (0+255),b
  3073  002420  ECCA  F027         	call	_tolower	;wreg free
  3074  002424  0100               	movlb	0	; () banked
  3075  002426  5166               	movf	?_tolower& (0+255),w,b
  3076  002428  6FBA               	movwf	efgtoa@mode& (0+255),b
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  3080  00242A  0060  F2E8  F0B7   	movff	efgtoa@mode,efgtoa@nmode
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  3084  002430  0E67               	movlw	103
  3085  002432  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3086  002434  A4D8               	btfss	status,2,c
  3087  002436  D01B               	goto	l6085
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  3091  002438  5041               	movf	_prec,w,c
  3092  00243A  1042               	iorwf	_prec+1,w,c
  3093  00243C  A4D8               	btfss	status,2,c
  3094  00243E  D004               	goto	l6081
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  3098  002440  0E00               	movlw	0
  3099  002442  6E42               	movwf	_prec+1,c
  3100  002444  0E01               	movlw	1
  3101  002446  6E41               	movwf	_prec,c
  3102  002448                     l6081:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  3106  002448  BE42               	btfsc	_prec+1,7,c
  3107  00244A  D005               	goto	u7860
  3108  00244C  5042               	movf	_prec+1,w,c
  3109  00244E  E108               	bnz	l557
  3110  002450  0441               	decf	_prec,w,c
  3111  002452  B0D8               	btfsc	status,0,c
  3112  002454  D005               	goto	l557
  3113  002456                     u7860:
  3114                           
  3115                           ; BSR set to: 0
  3116  002456  0E00               	movlw	0
  3117  002458  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  3118  00245A  0E06               	movlw	6
  3119  00245C  6FB5               	movwf	efgtoa@p& (0+255),b
  3120  00245E  D00A               	goto	l6091
  3121  002460                     l557:
  3122                           
  3123                           ; BSR set to: 0
  3124  002460  0060  F104  F0B5   	movff	_prec,efgtoa@p
  3125  002466  0060  F108  F0B6   	movff	_prec+1,efgtoa@p+1
  3126  00246C  D003               	goto	l6091
  3127  00246E                     l6085:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  3131  00246E  AE42               	btfss	_prec+1,7,c
  3132  002470  D7F7               	goto	l557
  3133  002472  D7F1               	goto	u7860
  3134  002474                     l6091:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  3138  002474  0E67               	movlw	103
  3139  002476  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3140  002478  A4D8               	btfss	status,2,c
  3141  00247A  D024               	goto	l6101
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  3145  00247C  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3146  00247E  D006               	goto	u7890
  3147  002480  0EFC               	movlw	252
  3148  002482  5DC9               	subwf	efgtoa@e& (0+255),w,b
  3149  002484  0EFF               	movlw	255
  3150  002486  59CA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3151  002488  A0D8               	btfss	status,0,c
  3152  00248A  D01A               	goto	l6099
  3153  00248C                     u7890:
  3154                           
  3155                           ; BSR set to: 0
  3156  00248C  0EFF               	movlw	255
  3157  00248E  6F94               	movwf	??_efgtoa& (0+255),b
  3158  002490  0EFF               	movlw	255
  3159  002492  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  3160  002494  0060  F2D4  F096   	movff	efgtoa@p,??_efgtoa+2
  3161  00249A  0060  F2D8  F097   	movff	efgtoa@p+1,??_efgtoa+3
  3162  0024A0  5194               	movf	??_efgtoa& (0+255),w,b
  3163  0024A2  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  3164  0024A4  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  3165  0024A6  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3166  0024A8  51C9               	movf	efgtoa@e& (0+255),w,b
  3167  0024AA  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  3168  0024AC  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  3169  0024AE  0A80               	xorlw	128
  3170  0024B0  6F98               	movwf	(??_efgtoa+4)& (0+255),b
  3171  0024B2  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  3172  0024B4  0A80               	xorlw	128
  3173  0024B6  5998               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3174  0024B8  A0D8               	btfss	status,0,c
  3175  0024BA  D002               	goto	l6099
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  3179  0024BC  0E66               	movlw	102
  3180  0024BE  D001               	goto	L2
  3181  0024C0                     l6099:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  3185  0024C0  0E65               	movlw	101
  3186  0024C2                     L2:
  3187  0024C2  6FB7               	movwf	efgtoa@nmode& (0+255),b
  3188  0024C4                     l6101:
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  3192  0024C4  0060  F2D4  F0AD   	movff	efgtoa@p,efgtoa@m
  3193  0024CA  0060  F2D8  F0AE   	movff	efgtoa@p+1,efgtoa@m+1
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  3197  0024D0  0E67               	movlw	103
  3198  0024D2  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3199  0024D4  A4D8               	btfss	status,2,c
  3200  0024D6  D005               	goto	u7930
  3201                           
  3202                           ; BSR set to: 0
  3203  0024D8  0E66               	movlw	102
  3204  0024DA  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3205  0024DC  B4D8               	btfsc	status,2,c
  3206                           
  3207                           ; BSR set to: 0
  3208  0024DE  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3209  0024E0  D002               	goto	l6111
  3210  0024E2                     u7930:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  3214  0024E2  4BAD               	infsnz	efgtoa@m& (0+255),f,b
  3215  0024E4  2BAE               	incf	(efgtoa@m+1)& (0+255),f,b
  3216  0024E6                     l6111:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  3220  0024E6  0E66               	movlw	102
  3221  0024E8  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3222  0024EA  A4D8               	btfss	status,2,c
  3223  0024EC  D016               	goto	l6121
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  3227  0024EE  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3228  0024F0  D00C               	goto	l6117
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  3232  0024F2  0E00               	movlw	0
  3233  0024F4  6FCD               	movwf	efgtoa@u& (0+255),b
  3234  0024F6  0E00               	movlw	0
  3235  0024F8  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  3236  0024FA  0E80               	movlw	128
  3237  0024FC  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  3238  0024FE  0E3F               	movlw	63
  3239  002500  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  3240                           
  3241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  3242  002502  0E00               	movlw	0
  3243  002504  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  3244  002506  0E00               	movlw	0
  3245  002508  6FC9               	movwf	efgtoa@e& (0+255),b
  3246  00250A                     l6117:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  3250  00250A  0E67               	movlw	103
  3251  00250C  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3252  00250E  B4D8               	btfsc	status,2,c
  3253  002510  D004               	goto	l6121
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  3257  002512  51C9               	movf	efgtoa@e& (0+255),w,b
  3258  002514  27AD               	addwf	efgtoa@m& (0+255),f,b
  3259  002516  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  3260  002518  23AE               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3261  00251A                     l6121:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  3265  00251A  0E00               	movlw	0
  3266  00251C  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3267  00251E  0E00               	movlw	0
  3268  002520  6FC3               	movwf	efgtoa@i& (0+255),b
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  3272  002522  0060  F314  F0BB   	movff	efgtoa@g,efgtoa@h
  3273  002528  0060  F318  F0BC   	movff	efgtoa@g+1,efgtoa@h+1
  3274  00252E  0060  F31C  F0BD   	movff	efgtoa@g+2,efgtoa@h+2
  3275  002534  0060  F320  F0BE   	movff	efgtoa@g+3,efgtoa@h+3
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  3279  00253A  0060  F334  F099   	movff	efgtoa@u,efgtoa@ou
  3280  002540  0060  F338  F09A   	movff	efgtoa@u+1,efgtoa@ou+1
  3281  002546  0060  F33C  F09B   	movff	efgtoa@u+2,efgtoa@ou+2
  3282  00254C  0060  F340  F09C   	movff	efgtoa@u+3,efgtoa@ou+3
  3283                           
  3284                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3285  002552  D0AE               	goto	l6135
  3286  002554                     l6127:
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  3290  002554  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  3291  00255A  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  3292  002560  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  3293  002566  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  3294  00256C  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  3295  002572  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  3296  002578  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  3297  00257E  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  3298  002584  EC19  F01D         	call	___fldiv	;wreg free
  3299  002588  0060  F180  F079   	movff	?___fldiv,floorf@x
  3300  00258E  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  3301  002594  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  3302  00259A  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  3303  0025A0  EC70  F01E         	call	_floorf	;wreg free
  3304  0025A4  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  3305  0025AA  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  3306  0025B0  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  3307  0025B6  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  3308                           
  3309                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  3310  0025BC  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  3311  0025C2  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  3312  0025C8  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  3313  0025CE  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  3314  0025D4  ECA4  F023         	call	___fltol	;wreg free
  3315  0025D8  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  3316  0025DE  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  3317                           
  3318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  3319  0025E4  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  3320  0025EA  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  3321  0025F0  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  3322  0025F6  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  3323  0025FC  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  3324  002602  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  3325  002608  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  3326  00260E  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  3327  002614  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  3328  00261A  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  3329  002620  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  3330  002626  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  3331  00262C  ECF6  F015         	call	___flmul	;wreg free
  3332  002630  0060  F180  F07D   	movff	?___flmul,___flsub@a
  3333  002636  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  3334  00263C  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  3335  002642  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  3336  002648  EC6D  F027         	call	___flsub	;wreg free
  3337  00264C  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  3338  002652  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  3339  002658  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  3340  00265E  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  3341                           
  3342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  3343  002664  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3344  00266A  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3345  002670  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3346  002676  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3347  00267C  0E00               	movlw	0
  3348  00267E  0100               	movlb	0	; () banked
  3349  002680  6F64               	movwf	___fldiv@a& (0+255),b
  3350  002682  0E00               	movlw	0
  3351  002684  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3352  002686  0E20               	movlw	32
  3353  002688  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3354  00268A  0E41               	movlw	65
  3355  00268C  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3356  00268E  EC19  F01D         	call	___fldiv	;wreg free
  3357  002692  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3358  002698  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3359  00269E  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3360  0026A4  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3361                           
  3362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  3363  0026AA  0100               	movlb	0	; () banked
  3364  0026AC  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  3365  0026AE  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  3366  0026B0                     l6135:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3370  0026B0  51AD               	movf	efgtoa@m& (0+255),w,b
  3371  0026B2  5DC3               	subwf	efgtoa@i& (0+255),w,b
  3372  0026B4  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  3373  0026B6  0A80               	xorlw	128
  3374  0026B8  6F94               	movwf	??_efgtoa& (0+255),b
  3375  0026BA  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  3376  0026BC  0A80               	xorlw	128
  3377  0026BE  5994               	subwfb	??_efgtoa& (0+255),w,b
  3378  0026C0  A0D8               	btfss	status,0,c
  3379  0026C2  D748               	goto	l6127
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  3383  0026C4  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  3384  0026CA  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  3385  0026D0  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  3386  0026D6  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  3387  0026DC  0E00               	movlw	0
  3388  0026DE  6F64               	movwf	___flmul@a& (0+255),b
  3389  0026E0  0E00               	movlw	0
  3390  0026E2  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3391  0026E4  0EA0               	movlw	160
  3392  0026E6  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3393  0026E8  0E40               	movlw	64
  3394  0026EA  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3395  0026EC  ECF6  F015         	call	___flmul	;wreg free
  3396  0026F0  0060  F180  F0BF   	movff	?___flmul,efgtoa@l
  3397  0026F6  0060  F184  F0C0   	movff	?___flmul+1,efgtoa@l+1
  3398  0026FC  0060  F188  F0C1   	movff	?___flmul+2,efgtoa@l+2
  3399  002702  0060  F18C  F0C2   	movff	?___flmul+3,efgtoa@l+3
  3400                           
  3401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  3402  002708  0060  F2EC  F079   	movff	efgtoa@h,___flge@ff1
  3403  00270E  0060  F2F0  F07A   	movff	efgtoa@h+1,___flge@ff1+1
  3404  002714  0060  F2F4  F07B   	movff	efgtoa@h+2,___flge@ff1+2
  3405  00271A  0060  F2F8  F07C   	movff	efgtoa@h+3,___flge@ff1+3
  3406  002720  0060  F2FC  F07D   	movff	efgtoa@l,___flge@ff2
  3407  002726  0060  F300  F07E   	movff	efgtoa@l+1,___flge@ff2+1
  3408  00272C  0060  F304  F07F   	movff	efgtoa@l+2,___flge@ff2+2
  3409  002732  0060  F308  F080   	movff	efgtoa@l+3,___flge@ff2+3
  3410  002738  ECD3  F022         	call	___flge	;wreg free
  3411  00273C  0100               	movlb	0	; () banked
  3412  00273E  A0D8               	btfss	status,0,c
  3413  002740  D01E               	goto	u8000
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  3417                           
  3418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 430:     } else {
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  3422  002742  0060  F2EC  F060   	movff	efgtoa@h,___fleq@ff1
  3423  002748  0060  F2F0  F061   	movff	efgtoa@h+1,___fleq@ff1+1
  3424  00274E  0060  F2F4  F062   	movff	efgtoa@h+2,___fleq@ff1+2
  3425  002754  0060  F2F8  F063   	movff	efgtoa@h+3,___fleq@ff1+3
  3426  00275A  0060  F2FC  F064   	movff	efgtoa@l,___fleq@ff2
  3427  002760  0060  F300  F065   	movff	efgtoa@l+1,___fleq@ff2+1
  3428  002766  0060  F304  F066   	movff	efgtoa@l+2,___fleq@ff2+2
  3429  00276C  0060  F308  F067   	movff	efgtoa@l+3,___fleq@ff2+3
  3430  002772  ECC3  F025         	call	___fleq	;wreg free
  3431  002776  0100               	movlb	0	; () banked
  3432  002778  B0D8               	btfsc	status,0,c
  3433                           
  3434                           ; BSR set to: 0
  3435  00277A  B1B1               	btfsc	efgtoa@d& (0+255),0,b
  3436  00277C  D008               	goto	l6149
  3437  00277E                     u8000:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  3441  00277E  0E00               	movlw	0
  3442  002780  6FBF               	movwf	efgtoa@l& (0+255),b
  3443  002782  0E00               	movlw	0
  3444  002784  6FC0               	movwf	(efgtoa@l+1)& (0+255),b
  3445  002786  0E00               	movlw	0
  3446  002788  6FC1               	movwf	(efgtoa@l+2)& (0+255),b
  3447  00278A  0E00               	movlw	0
  3448  00278C  6FC2               	movwf	(efgtoa@l+3)& (0+255),b
  3449  00278E                     l6149:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  3453  00278E  0060  F314  F060   	movff	efgtoa@g,___fladd@b
  3454  002794  0060  F318  F061   	movff	efgtoa@g+1,___fladd@b+1
  3455  00279A  0060  F31C  F062   	movff	efgtoa@g+2,___fladd@b+2
  3456  0027A0  0060  F320  F063   	movff	efgtoa@g+3,___fladd@b+3
  3457  0027A6  0060  F2FC  F064   	movff	efgtoa@l,___fladd@a
  3458  0027AC  0060  F300  F065   	movff	efgtoa@l+1,___fladd@a+1
  3459  0027B2  0060  F304  F066   	movff	efgtoa@l+2,___fladd@a+2
  3460  0027B8  0060  F308  F067   	movff	efgtoa@l+3,___fladd@a+3
  3461  0027BE  EC74  F01B         	call	___fladd	;wreg free
  3462  0027C2  0060  F180  F0BB   	movff	?___fladd,efgtoa@h
  3463  0027C8  0060  F184  F0BC   	movff	?___fladd+1,efgtoa@h+1
  3464  0027CE  0060  F188  F0BD   	movff	?___fladd+2,efgtoa@h+2
  3465  0027D4  0060  F18C  F0BE   	movff	?___fladd+3,efgtoa@h+3
  3466                           
  3467                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  3468  0027DA  0060  F264  F0CD   	movff	efgtoa@ou,efgtoa@u
  3469  0027E0  0060  F268  F0CE   	movff	efgtoa@ou+1,efgtoa@u+1
  3470  0027E6  0060  F26C  F0CF   	movff	efgtoa@ou+2,efgtoa@u+2
  3471  0027EC  0060  F270  F0D0   	movff	efgtoa@ou+3,efgtoa@u+3
  3472                           
  3473                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  3474  0027F2  0E65               	movlw	101
  3475  0027F4  0100               	movlb	0	; () banked
  3476  0027F6  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3477  0027F8  B4D8               	btfsc	status,2,c
  3478  0027FA  D007               	goto	l6157
  3479                           
  3480                           ; BSR set to: 0
  3481  0027FC  0060  F324  F0AF   	movff	efgtoa@e,efgtoa@ne
  3482  002802  0060  F328  F0B0   	movff	efgtoa@e+1,efgtoa@ne+1
  3483  002808  D004               	goto	l583
  3484  00280A                     l6157:
  3485                           
  3486                           ; BSR set to: 0
  3487  00280A  0E00               	movlw	0
  3488  00280C  6FB0               	movwf	(efgtoa@ne+1)& (0+255),b
  3489  00280E  0E00               	movlw	0
  3490  002810  6FAF               	movwf	efgtoa@ne& (0+255),b
  3491  002812                     l583:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  3495  002812  0E00               	movlw	0
  3496  002814  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  3497  002816  0E00               	movlw	0
  3498  002818  6FAB               	movwf	efgtoa@pp& (0+255),b
  3499                           
  3500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  3501  00281A  0E00               	movlw	0
  3502  00281C  6FAA               	movwf	(efgtoa@t+1)& (0+255),b
  3503  00281E  0E00               	movlw	0
  3504  002820  6FA9               	movwf	efgtoa@t& (0+255),b
  3505                           
  3506                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  3507  002822  0E00               	movlw	0
  3508  002824  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3509  002826  0E00               	movlw	0
  3510  002828  6FC3               	movwf	efgtoa@i& (0+255),b
  3511                           
  3512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3513  00282A  D0FA               	goto	l6207
  3514  00282C                     l6159:
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  3518  00282C  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  3519  002832  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  3520  002838  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  3521  00283E  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  3522  002844  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  3523  00284A  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  3524  002850  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  3525  002856  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  3526  00285C  EC19  F01D         	call	___fldiv	;wreg free
  3527  002860  0060  F180  F079   	movff	?___fldiv,floorf@x
  3528  002866  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  3529  00286C  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  3530  002872  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  3531  002878  EC70  F01E         	call	_floorf	;wreg free
  3532  00287C  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  3533  002882  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  3534  002888  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  3535  00288E  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  3536                           
  3537                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  3538  002894  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  3539  00289A  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  3540  0028A0  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  3541  0028A6  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  3542  0028AC  ECA4  F023         	call	___fltol	;wreg free
  3543  0028B0  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  3544  0028B6  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  3545                           
  3546                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3547  0028BC  B843               	btfsc	_flags,4,c
  3548  0028BE  D00D               	goto	l6171
  3549  0028C0  0100               	movlb	0	; () banked
  3550  0028C2  51B1               	movf	efgtoa@d& (0+255),w,b
  3551  0028C4  11B2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3552  0028C6  A4D8               	btfss	status,2,c
  3553  0028C8  D008               	goto	l6171
  3554                           
  3555                           ; BSR set to: 0
  3556  0028CA  0E67               	movlw	103
  3557  0028CC  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3558  0028CE  B4D8               	btfsc	status,2,c
  3559                           
  3560                           ; BSR set to: 0
  3561  0028D0  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3562  0028D2  D003               	goto	l6171
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  3566  0028D4  4BA9               	infsnz	efgtoa@t& (0+255),f,b
  3567  0028D6  2BAA               	incf	(efgtoa@t+1)& (0+255),f,b
  3568                           
  3569                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  3570  0028D8  D03A               	goto	l6199
  3571  0028DA                     l6171:
  3572                           
  3573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  3574  0028DA  0100               	movlb	0	; () banked
  3575  0028DC  51AB               	movf	efgtoa@pp& (0+255),w,b
  3576  0028DE  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3577  0028E0  B4D8               	btfsc	status,2,c
  3578                           
  3579                           ; BSR set to: 0
  3580  0028E2  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3581  0028E4  D022               	goto	l6191
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  3585  0028E6  0E34               	movlw	low _dbuf
  3586  0028E8  25CB               	addwf	efgtoa@n& (0+255),w,b
  3587  0028EA  6ED9               	movwf	fsr2l,c
  3588  0028EC  0E01               	movlw	high _dbuf
  3589  0028EE  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3590  0028F0  6EDA               	movwf	fsr2h,c
  3591  0028F2  0E2E               	movlw	46
  3592  0028F4  6EDF               	movwf	indf2,c
  3593                           
  3594                           ; BSR set to: 0
  3595  0028F6  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3596  0028F8  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  3600  0028FA  07B8               	decf	efgtoa@w& (0+255),f,b
  3601  0028FC  A0D8               	btfss	status,0,c
  3602  0028FE  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  3606  002900  0E00               	movlw	0
  3607  002902  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  3608  002904  0E01               	movlw	1
  3609  002906  6FAB               	movwf	efgtoa@pp& (0+255),b
  3610  002908  D010               	goto	l6191
  3611  00290A                     l6183:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  3615  00290A  0E34               	movlw	low _dbuf
  3616  00290C  25CB               	addwf	efgtoa@n& (0+255),w,b
  3617  00290E  6ED9               	movwf	fsr2l,c
  3618  002910  0E01               	movlw	high _dbuf
  3619  002912  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3620  002914  6EDA               	movwf	fsr2h,c
  3621  002916  0E30               	movlw	48
  3622  002918  6EDF               	movwf	indf2,c
  3623                           
  3624                           ; BSR set to: 0
  3625  00291A  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3626  00291C  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  3630  00291E  07B8               	decf	efgtoa@w& (0+255),f,b
  3631  002920  A0D8               	btfss	status,0,c
  3632  002922  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  3636  002924  07A9               	decf	efgtoa@t& (0+255),f,b
  3637  002926  A0D8               	btfss	status,0,c
  3638  002928  07AA               	decf	(efgtoa@t+1)& (0+255),f,b
  3639  00292A                     l6191:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  3643  00292A  51A9               	movf	efgtoa@t& (0+255),w,b
  3644  00292C  11AA               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3645  00292E  A4D8               	btfss	status,2,c
  3646  002930  D7EC               	goto	l6183
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  3650  002932  0E34               	movlw	low _dbuf
  3651  002934  25CB               	addwf	efgtoa@n& (0+255),w,b
  3652  002936  6ED9               	movwf	fsr2l,c
  3653  002938  0E01               	movlw	high _dbuf
  3654  00293A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3655  00293C  6EDA               	movwf	fsr2h,c
  3656  00293E  51B1               	movf	efgtoa@d& (0+255),w,b
  3657  002940  0F30               	addlw	48
  3658  002942  6EDF               	movwf	indf2,c
  3659                           
  3660                           ; BSR set to: 0
  3661  002944  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3662  002946  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  3666  002948  07B8               	decf	efgtoa@w& (0+255),f,b
  3667  00294A  A0D8               	btfss	status,0,c
  3668  00294C  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3669  00294E                     l6199:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  3673  00294E  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  3674  002954  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  3675  00295A  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  3676  002960  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  3677  002966  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  3678  00296C  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  3679  002972  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  3680  002978  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  3681  00297E  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  3682  002984  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  3683  00298A  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  3684  002990  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  3685  002996  ECF6  F015         	call	___flmul	;wreg free
  3686  00299A  0060  F180  F07D   	movff	?___flmul,___flsub@a
  3687  0029A0  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  3688  0029A6  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  3689  0029AC  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  3690  0029B2  EC6D  F027         	call	___flsub	;wreg free
  3691  0029B6  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  3692  0029BC  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  3693  0029C2  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  3694  0029C8  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  3695                           
  3696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  3697  0029CE  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3698  0029D4  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3699  0029DA  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3700  0029E0  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3701  0029E6  0E00               	movlw	0
  3702  0029E8  0100               	movlb	0	; () banked
  3703  0029EA  6F64               	movwf	___fldiv@a& (0+255),b
  3704  0029EC  0E00               	movlw	0
  3705  0029EE  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3706  0029F0  0E20               	movlw	32
  3707  0029F2  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3708  0029F4  0E41               	movlw	65
  3709  0029F6  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3710  0029F8  EC19  F01D         	call	___fldiv	;wreg free
  3711  0029FC  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3712  002A02  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3713  002A08  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3714  002A0E  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3715                           
  3716                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  3717  002A14  0100               	movlb	0	; () banked
  3718  002A16  07AF               	decf	efgtoa@ne& (0+255),f,b
  3719  002A18  A0D8               	btfss	status,0,c
  3720  002A1A  07B0               	decf	(efgtoa@ne+1)& (0+255),f,b
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  3724  002A1C  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  3725  002A1E  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  3726  002A20                     l6207:
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3730  002A20  51AD               	movf	efgtoa@m& (0+255),w,b
  3731  002A22  5DC3               	subwf	efgtoa@i& (0+255),w,b
  3732  002A24  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  3733  002A26  0A80               	xorlw	128
  3734  002A28  6F94               	movwf	??_efgtoa& (0+255),b
  3735  002A2A  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  3736  002A2C  0A80               	xorlw	128
  3737  002A2E  5994               	subwfb	??_efgtoa& (0+255),w,b
  3738  002A30  B0D8               	btfsc	status,0,c
  3739  002A32  D008               	goto	u8100
  3740                           
  3741                           ; BSR set to: 0
  3742  002A34  BFCC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3743  002A36  D6FA               	goto	l6159
  3744  002A38  51CC               	movf	(efgtoa@n+1)& (0+255),w,b
  3745  002A3A  E104               	bnz	u8100
  3746  002A3C  0E4B               	movlw	75
  3747  002A3E  5DCB               	subwf	efgtoa@n& (0+255),w,b
  3748  002A40  A0D8               	btfss	status,0,c
  3749  002A42  D6F4               	goto	l6159
  3750  002A44                     u8100:
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  3754  002A44  51AB               	movf	efgtoa@pp& (0+255),w,b
  3755  002A46  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3756  002A48  B4D8               	btfsc	status,2,c
  3757                           
  3758                           ; BSR set to: 0
  3759  002A4A  A843               	btfss	_flags,4,c
  3760  002A4C  D00A               	goto	l6219
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  3764  002A4E  0E34               	movlw	low _dbuf
  3765  002A50  25CB               	addwf	efgtoa@n& (0+255),w,b
  3766  002A52  6ED9               	movwf	fsr2l,c
  3767  002A54  0E01               	movlw	high _dbuf
  3768  002A56  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3769  002A58  6EDA               	movwf	fsr2h,c
  3770  002A5A  0E2E               	movlw	46
  3771  002A5C  6EDF               	movwf	indf2,c
  3772                           
  3773                           ; BSR set to: 0
  3774  002A5E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3775  002A60  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3776  002A62                     l6219:
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  3780  002A62  0E34               	movlw	low _dbuf
  3781  002A64  25CB               	addwf	efgtoa@n& (0+255),w,b
  3782  002A66  6ED9               	movwf	fsr2l,c
  3783  002A68  0E01               	movlw	high _dbuf
  3784  002A6A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3785  002A6C  6EDA               	movwf	fsr2h,c
  3786  002A6E  0E00               	movlw	0
  3787  002A70  6EDF               	movwf	indf2,c
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  3791  002A72  0E65               	movlw	101
  3792  002A74  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3793  002A76  A4D8               	btfss	status,2,c
  3794  002A78  EFE9  F010         	goto	l6031
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  3798  002A7C  0E00               	movlw	0
  3799  002A7E  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3800  002A80  0E4F               	movlw	79
  3801  002A82  6FC3               	movwf	efgtoa@i& (0+255),b
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  3805  002A84  0E34               	movlw	low _dbuf
  3806  002A86  25C3               	addwf	efgtoa@i& (0+255),w,b
  3807  002A88  6ED9               	movwf	fsr2l,c
  3808  002A8A  0E01               	movlw	high _dbuf
  3809  002A8C  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3810  002A8E  6EDA               	movwf	fsr2h,c
  3811  002A90  0E00               	movlw	0
  3812  002A92  6EDF               	movwf	indf2,c
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  3816  002A94  0E00               	movlw	0
  3817  002A96  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3818  002A98  0E00               	movlw	0
  3819  002A9A  6FB3               	movwf	efgtoa@sign& (0+255),b
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  3823  002A9C  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3824  002A9E  D008               	goto	l6235
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  3828  002AA0  0E00               	movlw	0
  3829  002AA2  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3830  002AA4  0E01               	movlw	1
  3831  002AA6  6FB3               	movwf	efgtoa@sign& (0+255),b
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  3835  002AA8  6DC9               	negf	efgtoa@e& (0+255),b
  3836  002AAA  1FCA               	comf	(efgtoa@e+1)& (0+255),f,b
  3837  002AAC  B0D8               	btfsc	status,0,c
  3838  002AAE  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  3839  002AB0                     l6235:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  3843  002AB0  0E00               	movlw	0
  3844  002AB2  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  3845  002AB4  0E02               	movlw	2
  3846  002AB6  6FB5               	movwf	efgtoa@p& (0+255),b
  3847                           
  3848                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3849  002AB8  D032               	goto	l6247
  3850  002ABA                     l6237:
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  3854  002ABA  07C3               	decf	efgtoa@i& (0+255),f,b
  3855  002ABC  A0D8               	btfss	status,0,c
  3856  002ABE  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  3860  002AC0  0E34               	movlw	low _dbuf
  3861  002AC2  25C3               	addwf	efgtoa@i& (0+255),w,b
  3862  002AC4  6ED9               	movwf	fsr2l,c
  3863  002AC6  0E01               	movlw	high _dbuf
  3864  002AC8  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3865  002ACA  6EDA               	movwf	fsr2h,c
  3866  002ACC  0060  F324  F060   	movff	efgtoa@e,___awmod@dividend
  3867  002AD2  0060  F328  F061   	movff	efgtoa@e+1,___awmod@dividend+1
  3868  002AD8  0E00               	movlw	0
  3869  002ADA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3870  002ADC  0E0A               	movlw	10
  3871  002ADE  6F62               	movwf	___awmod@divisor& (0+255),b
  3872  002AE0  EC91  F026         	call	___awmod	;wreg free
  3873  002AE4  0100               	movlb	0	; () banked
  3874  002AE6  5160               	movf	?___awmod& (0+255),w,b
  3875  002AE8  0F30               	addlw	48
  3876  002AEA  6EDF               	movwf	indf2,c
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  3880  002AEC  0060  F324  F060   	movff	efgtoa@e,___awdiv@dividend
  3881  002AF2  0060  F328  F061   	movff	efgtoa@e+1,___awdiv@dividend+1
  3882  002AF8  0E00               	movlw	0
  3883  002AFA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3884  002AFC  0E0A               	movlw	10
  3885  002AFE  6F62               	movwf	___awdiv@divisor& (0+255),b
  3886  002B00  EC09  F026         	call	___awdiv	;wreg free
  3887  002B04  0060  F180  F0C9   	movff	?___awdiv,efgtoa@e
  3888  002B0A  0060  F184  F0CA   	movff	?___awdiv+1,efgtoa@e+1
  3889                           
  3890                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  3891  002B10  0100               	movlb	0	; () banked
  3892  002B12  07B5               	decf	efgtoa@p& (0+255),f,b
  3893  002B14  A0D8               	btfss	status,0,c
  3894  002B16  07B6               	decf	(efgtoa@p+1)& (0+255),f,b
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  3898  002B18  07B8               	decf	efgtoa@w& (0+255),f,b
  3899  002B1A  A0D8               	btfss	status,0,c
  3900  002B1C  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3901  002B1E                     l6247:
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3905  002B1E  51C9               	movf	efgtoa@e& (0+255),w,b
  3906  002B20  11CA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3907  002B22  A4D8               	btfss	status,2,c
  3908  002B24  D7CA               	goto	l6237
  3909                           
  3910                           ; BSR set to: 0
  3911  002B26  BFB6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3912  002B28  D005               	goto	u8160
  3913  002B2A  51B6               	movf	(efgtoa@p+1)& (0+255),w,b
  3914  002B2C  E1C6               	bnz	l6237
  3915  002B2E  05B5               	decf	efgtoa@p& (0+255),w,b
  3916  002B30  B0D8               	btfsc	status,0,c
  3917  002B32  D7C3               	goto	l6237
  3918  002B34                     u8160:
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  3922  002B34  07C3               	decf	efgtoa@i& (0+255),f,b
  3923  002B36  A0D8               	btfss	status,0,c
  3924  002B38  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  3928  002B3A  51B3               	movf	efgtoa@sign& (0+255),w,b
  3929  002B3C  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3930  002B3E  A4D8               	btfss	status,2,c
  3931  002B40  D004               	goto	l6257
  3932                           
  3933                           ; BSR set to: 0
  3934  002B42  0E00               	movlw	0
  3935  002B44  6FA4               	movwf	(_efgtoa$1666+1)& (0+255),b
  3936  002B46  0E2B               	movlw	43
  3937  002B48  D003               	goto	L3
  3938  002B4A                     l6257:
  3939                           
  3940                           ; BSR set to: 0
  3941  002B4A  0E00               	movlw	0
  3942  002B4C  6FA4               	movwf	(_efgtoa$1666+1)& (0+255),b
  3943  002B4E  0E2D               	movlw	45
  3944  002B50                     L3:
  3945  002B50  6FA3               	movwf	_efgtoa$1666& (0+255),b
  3946                           
  3947                           ; BSR set to: 0
  3948  002B52  0E34               	movlw	low _dbuf
  3949  002B54  25C3               	addwf	efgtoa@i& (0+255),w,b
  3950  002B56  6ED9               	movwf	fsr2l,c
  3951  002B58  0E01               	movlw	high _dbuf
  3952  002B5A  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3953  002B5C  6EDA               	movwf	fsr2h,c
  3954  002B5E  0060  F28F  FFDF   	movff	_efgtoa$1666,indf2
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  3958  002B64  07B8               	decf	efgtoa@w& (0+255),f,b
  3959  002B66  A0D8               	btfss	status,0,c
  3960  002B68  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3964  002B6A  07C3               	decf	efgtoa@i& (0+255),f,b
  3965  002B6C  A0D8               	btfss	status,0,c
  3966  002B6E  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3967                           
  3968                           ; BSR set to: 0
  3969  002B70  0EBF               	movlw	191
  3970  002B72  6F94               	movwf	??_efgtoa& (0+255),b
  3971  002B74  0EFF               	movlw	255
  3972  002B76  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  3973  002B78  5193               	movf	efgtoa@c& (0+255),w,b
  3974  002B7A  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  3975  002B7C  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  3976  002B7E  5194               	movf	??_efgtoa& (0+255),w,b
  3977  002B80  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  3978  002B82  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  3979  002B84  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3980  002B86  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  3981  002B88  E106               	bnz	u8180
  3982  002B8A  0E1A               	movlw	26
  3983  002B8C  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  3984  002B8E  B0D8               	btfsc	status,0,c
  3985  002B90  D002               	goto	u8180
  3986  002B92  0E01               	movlw	1
  3987  002B94  D001               	goto	u8190
  3988  002B96                     u8180:
  3989  002B96  0E00               	movlw	0
  3990  002B98                     u8190:
  3991  002B98  6FA7               	movwf	_efgtoa$1668& (0+255),b
  3992  002B9A  6BA8               	clrf	(_efgtoa$1668+1)& (0+255),b
  3993                           
  3994                           ; BSR set to: 0
  3995  002B9C  51A7               	movf	_efgtoa$1668& (0+255),w,b
  3996  002B9E  11A8               	iorwf	(_efgtoa$1668+1)& (0+255),w,b
  3997  002BA0  A4D8               	btfss	status,2,c
  3998  002BA2  D004               	goto	l6273
  3999                           
  4000                           ; BSR set to: 0
  4001  002BA4  0E00               	movlw	0
  4002  002BA6  6FA6               	movwf	(_efgtoa$1667+1)& (0+255),b
  4003  002BA8  0E65               	movlw	101
  4004  002BAA  D003               	goto	L4
  4005  002BAC                     l6273:
  4006                           
  4007                           ; BSR set to: 0
  4008  002BAC  0E00               	movlw	0
  4009  002BAE  6FA6               	movwf	(_efgtoa$1667+1)& (0+255),b
  4010  002BB0  0E45               	movlw	69
  4011  002BB2                     L4:
  4012  002BB2  6FA5               	movwf	_efgtoa$1667& (0+255),b
  4013                           
  4014                           ; BSR set to: 0
  4015  002BB4  0E34               	movlw	low _dbuf
  4016  002BB6  25C3               	addwf	efgtoa@i& (0+255),w,b
  4017  002BB8  6ED9               	movwf	fsr2l,c
  4018  002BBA  0E01               	movlw	high _dbuf
  4019  002BBC  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4020  002BBE  6EDA               	movwf	fsr2h,c
  4021  002BC0  0060  F297  FFDF   	movff	_efgtoa$1667,indf2
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  4025  002BC6  07B8               	decf	efgtoa@w& (0+255),f,b
  4026  002BC8  A0D8               	btfss	status,0,c
  4027  002BCA  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  4031  002BCC  0E34               	movlw	low _dbuf
  4032  002BCE  25CB               	addwf	efgtoa@n& (0+255),w,b
  4033  002BD0  6F60               	movwf	strcpy@dest& (0+255),b
  4034  002BD2  0E01               	movlw	high _dbuf
  4035  002BD4  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4036  002BD6  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4037  002BD8  0E34               	movlw	low _dbuf
  4038  002BDA  25C3               	addwf	efgtoa@i& (0+255),w,b
  4039  002BDC  6F62               	movwf	strcpy@src& (0+255),b
  4040  002BDE  0E01               	movlw	high _dbuf
  4041  002BE0  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4042  002BE2  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4043  002BE4  EC03  F027         	call	_strcpy	;wreg free
  4044  002BE8  EFE9  F010         	goto	l6031
  4045  002BEC                     __end_of_efgtoa:
  4046                           	opt callstack 0
  4047                           
  4048 ;; *************** function _tolower *****************
  4049 ;; Defined at:
  4050 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  c               2    6[BANK0 ] int 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;		None
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  2    6[BANK0 ] int 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4065 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4066 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4067 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4068 ;;Total ram usage:        8 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    3
  4071 ;; This function calls:
  4072 ;;		_isupper
  4073 ;; This function is called by:
  4074 ;;		_efgtoa
  4075 ;;		_vfpfcnvrt
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text8
  4080  004F94                     __ptext8:
  4081                           	opt callstack 0
  4082  004F94                     _tolower:
  4083                           	opt callstack 23
  4084                           
  4085                           ;incstack = 0
  4086  004F94  0EBF               	movlw	191
  4087  004F96  0100               	movlb	0	; () banked
  4088  004F98  6F68               	movwf	??_tolower& (0+255),b
  4089  004F9A  0EFF               	movlw	255
  4090  004F9C  6F69               	movwf	(??_tolower+1)& (0+255),b
  4091  004F9E  0060  F198  F06A   	movff	tolower@c,??_tolower+2
  4092  004FA4  0060  F19C  F06B   	movff	tolower@c+1,??_tolower+3
  4093  004FAA  5168               	movf	??_tolower& (0+255),w,b
  4094  004FAC  276A               	addwf	(??_tolower+2)& (0+255),f,b
  4095  004FAE  5169               	movf	(??_tolower+1)& (0+255),w,b
  4096  004FB0  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  4097  004FB2  516B               	movf	(??_tolower+3)& (0+255),w,b
  4098  004FB4  E106               	bnz	u7010
  4099  004FB6  0E1A               	movlw	26
  4100  004FB8  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  4101  004FBA  B0D8               	btfsc	status,0,c
  4102  004FBC  D002               	goto	u7010
  4103  004FBE  0E01               	movlw	1
  4104  004FC0  D001               	goto	u7020
  4105  004FC2                     u7010:
  4106  004FC2  0E00               	movlw	0
  4107  004FC4                     u7020:
  4108  004FC4  6F6C               	movwf	_tolower$2240& (0+255),b
  4109  004FC6  6B6D               	clrf	(_tolower$2240+1)& (0+255),b
  4110                           
  4111                           ; BSR set to: 0
  4112  004FC8  516C               	movf	_tolower$2240& (0+255),w,b
  4113  004FCA  116D               	iorwf	(_tolower$2240+1)& (0+255),w,b
  4114  004FCC  B4D8               	btfsc	status,2,c
  4115  004FCE  D006               	goto	l1393
  4116                           
  4117                           ; BSR set to: 0
  4118  004FD0  0E20               	movlw	32
  4119  004FD2  1166               	iorwf	tolower@c& (0+255),w,b
  4120  004FD4  6F66               	movwf	?_tolower& (0+255),b
  4121  004FD6  5167               	movf	(tolower@c+1)& (0+255),w,b
  4122  004FD8  6F67               	movwf	(?_tolower+1)& (0+255),b
  4123  004FDA  0012               	return	
  4124  004FDC                     l1393:
  4125                           
  4126                           ; BSR set to: 0
  4127  004FDC  0060  F198  F066   	movff	tolower@c,?_tolower
  4128  004FE2  0060  F19C  F067   	movff	tolower@c+1,?_tolower+1
  4129                           
  4130                           ; BSR set to: 0
  4131  004FE8  0012               	return		;funcret
  4132  004FEA                     __end_of_tolower:
  4133                           	opt callstack 0
  4134                           
  4135 ;; *************** function _isupper *****************
  4136 ;; Defined at:
  4137 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  c               2    0[BANK0 ] int 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;		None
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  2    0[BANK0 ] int 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4151 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4153 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4154 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4155 ;;Total ram usage:        6 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    2
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_efgtoa
  4162 ;;		_vfpfcnvrt
  4163 ;;		_tolower
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text9
  4168  0051C8                     __ptext9:
  4169                           	opt callstack 0
  4170  0051C8                     _isupper:
  4171                           	opt callstack 23
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;incstack = 0
  4175  0051C8  0EBF               	movlw	191
  4176  0051CA  0100               	movlb	0	; () banked
  4177  0051CC  6F62               	movwf	??_isupper& (0+255),b
  4178  0051CE  0EFF               	movlw	255
  4179  0051D0  6F63               	movwf	(??_isupper+1)& (0+255),b
  4180  0051D2  0060  F180  F064   	movff	isupper@c,??_isupper+2
  4181  0051D8  0060  F184  F065   	movff	isupper@c+1,??_isupper+3
  4182  0051DE  5162               	movf	??_isupper& (0+255),w,b
  4183  0051E0  2764               	addwf	(??_isupper+2)& (0+255),f,b
  4184  0051E2  5163               	movf	(??_isupper+1)& (0+255),w,b
  4185  0051E4  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  4186  0051E6  5165               	movf	(??_isupper+3)& (0+255),w,b
  4187  0051E8  E106               	bnz	u6470
  4188  0051EA  0E1A               	movlw	26
  4189  0051EC  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  4190  0051EE  B0D8               	btfsc	status,0,c
  4191  0051F0  D002               	goto	u6470
  4192  0051F2  0E01               	movlw	1
  4193  0051F4  D001               	goto	u6480
  4194  0051F6                     u6470:
  4195  0051F6  0E00               	movlw	0
  4196  0051F8                     u6480:
  4197  0051F8  6F60               	movwf	?_isupper& (0+255),b
  4198  0051FA  6B61               	clrf	(?_isupper+1)& (0+255),b
  4199                           
  4200                           ; BSR set to: 0
  4201  0051FC  0012               	return		;funcret
  4202  0051FE                     __end_of_isupper:
  4203                           	opt callstack 0
  4204                           
  4205 ;; *************** function _strcpy *****************
  4206 ;; Defined at:
  4207 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  4210 ;;		 -> dbuf(80), 
  4211 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  4212 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4213 ;;		 -> dbuf(80), 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  d               2    8[BANK0 ] PTR unsigned char 
  4216 ;;		 -> dbuf(80), 
  4217 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  4218 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4219 ;;		 -> dbuf(80), 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  2    0[BANK0 ] PTR unsigned char 
  4222 ;; Registers used:
  4223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4230 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4232 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4233 ;;Total ram usage:       10 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    2
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		_efgtoa
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text10
  4244  004E06                     __ptext10:
  4245                           	opt callstack 0
  4246  004E06                     _strcpy:
  4247                           	opt callstack 23
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;incstack = 0
  4251  004E06  0060  F188  F066   	movff	strcpy@src,strcpy@s
  4252  004E0C  0060  F18C  F067   	movff	strcpy@src+1,strcpy@s+1
  4253  004E12  0060  F180  F068   	movff	strcpy@dest,strcpy@d
  4254  004E18  0060  F184  F069   	movff	strcpy@dest+1,strcpy@d+1
  4255  004E1E                     l5553:
  4256  004E1E  0100               	movlb	0	; () banked
  4257  004E20  5166               	movf	strcpy@s& (0+255),w,b
  4258  004E22  6F64               	movwf	??_strcpy& (0+255),b
  4259  004E24  5167               	movf	(strcpy@s+1)& (0+255),w,b
  4260  004E26  6F65               	movwf	(??_strcpy+1)& (0+255),b
  4261  004E28  4B66               	infsnz	strcpy@s& (0+255),f,b
  4262  004E2A  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  4263  004E2C  0060  F193  FFF6   	movff	??_strcpy,tblptrl
  4264  004E32  0060  F197  FFF7   	movff	??_strcpy+1,tblptrh
  4265  004E38  0E00               	movlw	low (__smallconst shr (0+16))
  4266  004E3A  6EF8               	movwf	tblptru,c
  4267  004E3C  0060  F1A3  FFD9   	movff	strcpy@d,fsr2l
  4268  004E42  0060  F1A7  FFDA   	movff	strcpy@d+1,fsr2h
  4269  004E48  4B68               	infsnz	strcpy@d& (0+255),f,b
  4270  004E4A  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  4271  004E4C  0E1F               	movlw	(high __ramtop+-1)
  4272  004E4E  64F7               	cpfsgt	tblptrh,c
  4273  004E50  D003               	bra	u6997
  4274  004E52  0008               	tblrd		*
  4275  004E54  50F5               	movf	tablat,w,c
  4276  004E56  D007               	bra	u6990
  4277  004E58                     u6997:
  4278  004E58  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4279  004E5E  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4280  004E64  50E7               	movf	indf1,w,c
  4281  004E66                     u6990:
  4282  004E66  6EDF               	movwf	indf2,c
  4283  004E68  50DF               	movf	indf2,w,c
  4284  004E6A  B4D8               	btfsc	status,2,c
  4285  004E6C  0012               	return	
  4286  004E6E  D7D7               	goto	l5553
  4287  004E70                     __end_of_strcpy:
  4288                           	opt callstack 0
  4289                           
  4290 ;; *************** function _pad *****************
  4291 ;; Defined at:
  4292 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  4295 ;;		 -> sprintf@f(6), 
  4296 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  4297 ;;		 -> dbuf(80), 
  4298 ;;  p               2   20[BANK0 ] int 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  w               2   25[BANK0 ] int 
  4301 ;;  i               2   23[BANK0 ] int 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  2   16[BANK0 ] int 
  4304 ;; Registers used:
  4305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4311 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4312 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4314 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4315 ;;Total ram usage:       11 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    5
  4318 ;; This function calls:
  4319 ;;		_fputc
  4320 ;;		_fputs
  4321 ;;		_strlen
  4322 ;; This function is called by:
  4323 ;;		_efgtoa
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text11
  4328  0048DC                     __ptext11:
  4329                           	opt callstack 0
  4330  0048DC                     _pad:
  4331                           	opt callstack 20
  4332                           
  4333                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  4334                           
  4335                           ;incstack = 0
  4336  0048DC  A043               	btfss	_flags,0,c
  4337  0048DE  D00E               	goto	l5511
  4338                           
  4339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  4340  0048E0  0060  F1C8  F069   	movff	pad@buf,fputs@s
  4341  0048E6  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
  4342  0048EC  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
  4343  0048F2  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
  4344  0048F8  EC6C  F028         	call	_fputs	;wreg free
  4345  0048FC                     l5511:
  4346                           
  4347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4348  0048FC  0100               	movlb	0	; () banked
  4349  0048FE  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  4350  004900  D007               	goto	l5515
  4351                           
  4352                           ; BSR set to: 0
  4353  004902  0060  F1D0  F079   	movff	pad@p,pad@w
  4354  004908  0060  F1D4  F07A   	movff	pad@p+1,pad@w+1
  4355  00490E  D004               	goto	l516
  4356  004910                     l5515:
  4357                           
  4358                           ; BSR set to: 0
  4359  004910  0E00               	movlw	0
  4360  004912  6F7A               	movwf	(pad@w+1)& (0+255),b
  4361  004914  0E00               	movlw	0
  4362  004916  6F79               	movwf	pad@w& (0+255),b
  4363  004918                     l516:
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4367  004918  0E00               	movlw	0
  4368  00491A  6F78               	movwf	(pad@i+1)& (0+255),b
  4369  00491C  0E00               	movlw	0
  4370  00491E  6F77               	movwf	pad@i& (0+255),b
  4371                           
  4372                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4373  004920  D00F               	goto	l5521
  4374  004922                     l5517:
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4378  004922  0E00               	movlw	0
  4379  004924  6F61               	movwf	(fputc@c+1)& (0+255),b
  4380  004926  0E20               	movlw	32
  4381  004928  6F60               	movwf	fputc@c& (0+255),b
  4382  00492A  0060  F1C0  F062   	movff	pad@fp,fputc@fp
  4383  004930  0060  F1C4  F063   	movff	pad@fp+1,fputc@fp+1
  4384  004936  ECCA  F024         	call	_fputc	;wreg free
  4385                           
  4386                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4387  00493A  0100               	movlb	0	; () banked
  4388  00493C  4B77               	infsnz	pad@i& (0+255),f,b
  4389  00493E  2B78               	incf	(pad@i+1)& (0+255),f,b
  4390  004940                     l5521:
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4394  004940  5179               	movf	pad@w& (0+255),w,b
  4395  004942  5D77               	subwf	pad@i& (0+255),w,b
  4396  004944  5178               	movf	(pad@i+1)& (0+255),w,b
  4397  004946  0A80               	xorlw	128
  4398  004948  6F76               	movwf	??_pad& (0+255),b
  4399  00494A  517A               	movf	(pad@w+1)& (0+255),w,b
  4400  00494C  0A80               	xorlw	128
  4401  00494E  5976               	subwfb	??_pad& (0+255),w,b
  4402  004950  A0D8               	btfss	status,0,c
  4403  004952  D7E7               	goto	l5517
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4407  004954  B043               	btfsc	_flags,0,c
  4408  004956  D00E               	goto	l5525
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4412  004958  0060  F1C8  F069   	movff	pad@buf,fputs@s
  4413  00495E  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
  4414  004964  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
  4415  00496A  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
  4416  004970  EC6C  F028         	call	_fputs	;wreg free
  4417  004974                     l5525:
  4418                           
  4419                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  4420  004974  0060  F1C8  F060   	movff	pad@buf,strlen@s
  4421  00497A  0060  F1CC  F061   	movff	pad@buf+1,strlen@s+1
  4422  004980  ECFF  F028         	call	_strlen	;wreg free
  4423  004984  0100               	movlb	0	; () banked
  4424  004986  5179               	movf	pad@w& (0+255),w,b
  4425  004988  2560               	addwf	?_strlen& (0+255),w,b
  4426  00498A  6F70               	movwf	?_pad& (0+255),b
  4427  00498C  517A               	movf	(pad@w+1)& (0+255),w,b
  4428  00498E  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  4429  004990  6F71               	movwf	(?_pad+1)& (0+255),b
  4430                           
  4431                           ; BSR set to: 0
  4432  004992  0012               	return		;funcret
  4433  004994                     __end_of_pad:
  4434                           	opt callstack 0
  4435                           
  4436 ;; *************** function _strlen *****************
  4437 ;; Defined at:
  4438 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4441 ;;		 -> dbuf(80), 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  4444 ;;		 -> dbuf(80), 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  2    0[BANK0 ] unsigned int 
  4447 ;; Registers used:
  4448 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4454 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4455 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4457 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4458 ;;Total ram usage:        4 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    2
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		_pad
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text12
  4469  0051FE                     __ptext12:
  4470                           	opt callstack 0
  4471  0051FE                     _strlen:
  4472                           	opt callstack 22
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;incstack = 0
  4476  0051FE  0060  F180  F062   	movff	strlen@s,strlen@a
  4477  005204  0060  F184  F063   	movff	strlen@s+1,strlen@a+1
  4478  00520A  D003               	goto	l5295
  4479  00520C                     l5293:
  4480  00520C  0100               	movlb	0	; () banked
  4481  00520E  4B60               	infsnz	strlen@s& (0+255),f,b
  4482  005210  2B61               	incf	(strlen@s+1)& (0+255),f,b
  4483  005212                     l5295:
  4484  005212  0060  F183  FFD9   	movff	strlen@s,fsr2l
  4485  005218  0060  F187  FFDA   	movff	strlen@s+1,fsr2h
  4486  00521E  50DF               	movf	indf2,w,c
  4487  005220  A4D8               	btfss	status,2,c
  4488  005222  D7F4               	goto	l5293
  4489  005224  0100               	movlb	0	; () banked
  4490  005226  5162               	movf	strlen@a& (0+255),w,b
  4491  005228  5D60               	subwf	strlen@s& (0+255),w,b
  4492  00522A  6F60               	movwf	?_strlen& (0+255),b
  4493  00522C  5163               	movf	(strlen@a+1)& (0+255),w,b
  4494  00522E  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  4495  005230  6F61               	movwf	(?_strlen+1)& (0+255),b
  4496                           
  4497                           ; BSR set to: 0
  4498  005232  0012               	return		;funcret
  4499  005234                     __end_of_strlen:
  4500                           	opt callstack 0
  4501                           
  4502 ;; *************** function _fputs *****************
  4503 ;; Defined at:
  4504 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4507 ;;		 -> dbuf(80), 
  4508 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4509 ;;		 -> sprintf@f(6), 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  i               2   14[BANK0 ] int 
  4512 ;;  c               1   13[BANK0 ] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  2    9[BANK0 ] int 
  4515 ;; Registers used:
  4516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4522 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4523 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4525 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4526 ;;Total ram usage:        7 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    4
  4529 ;; This function calls:
  4530 ;;		_fputc
  4531 ;; This function is called by:
  4532 ;;		_pad
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text13
  4537  0050D8                     __ptext13:
  4538                           	opt callstack 0
  4539  0050D8                     _fputs:
  4540                           	opt callstack 20
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;incstack = 0
  4544  0050D8  0E00               	movlw	0
  4545  0050DA  0100               	movlb	0	; () banked
  4546  0050DC  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4547  0050DE  0E00               	movlw	0
  4548  0050E0  6F6E               	movwf	fputs@i& (0+255),b
  4549  0050E2  D00F               	goto	l5289
  4550  0050E4                     l5285:
  4551                           
  4552                           ; BSR set to: 0
  4553  0050E4  0060  F1B4  F060   	movff	fputs@c,fputc@c
  4554  0050EA  6B61               	clrf	(fputc@c+1)& (0+255),b
  4555  0050EC  0060  F1AC  F062   	movff	fputs@fp,fputc@fp
  4556  0050F2  0060  F1B0  F063   	movff	fputs@fp+1,fputc@fp+1
  4557  0050F8  ECCA  F024         	call	_fputc	;wreg free
  4558  0050FC  0100               	movlb	0	; () banked
  4559  0050FE  4B6E               	infsnz	fputs@i& (0+255),f,b
  4560  005100  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4561  005102                     l5289:
  4562                           
  4563                           ; BSR set to: 0
  4564  005102  516E               	movf	fputs@i& (0+255),w,b
  4565  005104  2569               	addwf	fputs@s& (0+255),w,b
  4566  005106  6ED9               	movwf	fsr2l,c
  4567  005108  516F               	movf	(fputs@i+1)& (0+255),w,b
  4568  00510A  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4569  00510C  6EDA               	movwf	fsr2h,c
  4570  00510E  50DF               	movf	indf2,w,c
  4571  005110  6F6D               	movwf	fputs@c& (0+255),b
  4572  005112  516D               	movf	fputs@c& (0+255),w,b
  4573  005114  B4D8               	btfsc	status,2,c
  4574  005116  0012               	return	
  4575  005118  D7E5               	goto	l5285
  4576  00511A                     __end_of_fputs:
  4577                           	opt callstack 0
  4578                           
  4579 ;; *************** function _fputc *****************
  4580 ;; Defined at:
  4581 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  c               2    0[BANK0 ] int 
  4584 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4585 ;;		 -> sprintf@f(6), 
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  2    0[BANK0 ] int 
  4590 ;; Registers used:
  4591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4597 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4599 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4600 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4601 ;;Total ram usage:        9 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    3
  4604 ;; This function calls:
  4605 ;;		_putch
  4606 ;; This function is called by:
  4607 ;;		_pad
  4608 ;;		_vfpfcnvrt
  4609 ;;		_fputs
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text14
  4614  004994                     __ptext14:
  4615                           	opt callstack 0
  4616  004994                     _fputc:
  4617                           	opt callstack 23
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;incstack = 0
  4621  004994  0100               	movlb	0	; () banked
  4622  004996  5162               	movf	fputc@fp& (0+255),w,b
  4623  004998  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4624  00499A  B4D8               	btfsc	status,2,c
  4625  00499C  D004               	goto	u6420
  4626                           
  4627                           ; BSR set to: 0
  4628  00499E  5162               	movf	fputc@fp& (0+255),w,b
  4629  0049A0  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4630  0049A2  A4D8               	btfss	status,2,c
  4631  0049A4  D004               	goto	l5275
  4632  0049A6                     u6420:
  4633                           
  4634                           ; BSR set to: 0
  4635  0049A6  5160               	movf	fputc@c& (0+255),w,b
  4636  0049A8  EC9C  F029         	call	_putch
  4637  0049AC  0012               	return	
  4638  0049AE                     l5275:
  4639                           
  4640                           ; BSR set to: 0
  4641  0049AE  EE20 F004          	lfsr	2,4
  4642  0049B2  5162               	movf	fputc@fp& (0+255),w,b
  4643  0049B4  26D9               	addwf	fsr2l,f,c
  4644  0049B6  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4645  0049B8  22DA               	addwfc	fsr2h,f,c
  4646  0049BA  50DE               	movf	postinc2,w,c
  4647  0049BC  10DE               	iorwf	postinc2,w,c
  4648  0049BE  B4D8               	btfsc	status,2,c
  4649  0049C0  D016               	goto	u6440
  4650                           
  4651                           ; BSR set to: 0
  4652  0049C2  EE20 F004          	lfsr	2,4
  4653  0049C6  5162               	movf	fputc@fp& (0+255),w,b
  4654  0049C8  26D9               	addwf	fsr2l,f,c
  4655  0049CA  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4656  0049CC  22DA               	addwfc	fsr2h,f,c
  4657  0049CE  EE10 F002          	lfsr	1,2
  4658  0049D2  5162               	movf	fputc@fp& (0+255),w,b
  4659  0049D4  26E1               	addwf	fsr1l,f,c
  4660  0049D6  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4661  0049D8  22E2               	addwfc	fsr1h,f,c
  4662  0049DA  50DE               	movf	postinc2,w,c
  4663  0049DC  5CE6               	subwf	postinc1,w,c
  4664  0049DE  50E6               	movf	postinc1,w,c
  4665  0049E0  0A80               	xorlw	128
  4666  0049E2  6F68               	movwf	(??_fputc+4)& (0+255),b
  4667  0049E4  50DE               	movf	postinc2,w,c
  4668  0049E6  0A80               	xorlw	128
  4669  0049E8  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4670  0049EA  B0D8               	btfsc	status,0,c
  4671  0049EC  0012               	return	
  4672  0049EE                     u6440:
  4673                           
  4674                           ; BSR set to: 0
  4675  0049EE  EE20 F002          	lfsr	2,2
  4676  0049F2  5162               	movf	fputc@fp& (0+255),w,b
  4677  0049F4  26D9               	addwf	fsr2l,f,c
  4678  0049F6  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4679  0049F8  22DA               	addwfc	fsr2h,f,c
  4680  0049FA  006F FF78  F064    	movff	postinc2,??_fputc
  4681  004A00  006F FF74  F065    	movff	postdec2,??_fputc+1
  4682  004A06  0060  F18B  FFD9   	movff	fputc@fp,fsr2l
  4683  004A0C  0060  F18F  FFDA   	movff	fputc@fp+1,fsr2h
  4684  004A12  006F FF78  F066    	movff	postinc2,??_fputc+2
  4685  004A18  006F FF74  F067    	movff	postdec2,??_fputc+3
  4686  004A1E  5164               	movf	??_fputc& (0+255),w,b
  4687  004A20  2566               	addwf	(??_fputc+2)& (0+255),w,b
  4688  004A22  6ED9               	movwf	fsr2l,c
  4689  004A24  5165               	movf	(??_fputc+1)& (0+255),w,b
  4690  004A26  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  4691  004A28  6EDA               	movwf	fsr2h,c
  4692  004A2A  0060  F183  FFDF   	movff	fputc@c,indf2
  4693  004A30  EE20 F002          	lfsr	2,2
  4694  004A34  5162               	movf	fputc@fp& (0+255),w,b
  4695  004A36  26D9               	addwf	fsr2l,f,c
  4696  004A38  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4697  004A3A  22DA               	addwfc	fsr2h,f,c
  4698  004A3C  2ADE               	incf	postinc2,f,c
  4699  004A3E  0E00               	movlw	0
  4700  004A40  22DD               	addwfc	postdec2,f,c
  4701  004A42  0012               	return		;funcret
  4702  004A44                     __end_of_fputc:
  4703                           	opt callstack 0
  4704                           
  4705 ;; *************** function _putch *****************
  4706 ;; Defined at:
  4707 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  c               1    wreg     unsigned char 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  c               1    0[COMRAM] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    2
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_fputc
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text15
  4736  005338                     __ptext15:
  4737                           	opt callstack 0
  4738  005338                     _putch:
  4739                           	opt callstack 23
  4740                           
  4741                           ;incstack = 0
  4742  005338  0012               	return		;funcret
  4743  00533A                     __end_of_putch:
  4744                           	opt callstack 0
  4745                           
  4746 ;; *************** function _floorf *****************
  4747 ;; Defined at:
  4748 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  x               4   25[BANK0 ] float 
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;  u               4   41[BANK0 ] struct .
  4753 ;;  m               4   35[BANK0 ] unsigned long 
  4754 ;;  e               2   39[BANK0 ] int 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  4   25[BANK0 ] float 
  4757 ;; Registers used:
  4758 ;;		wreg, status,2, status,0
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4764 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4765 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4766 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4767 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4768 ;;Total ram usage:       20 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    2
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_efgtoa
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text16
  4779  003CE0                     __ptext16:
  4780                           	opt callstack 0
  4781  003CE0                     _floorf:
  4782                           	opt callstack 23
  4783                           
  4784                           ;incstack = 0
  4785  003CE0  0060  F0B4  F089   	movff	floorf@F524,floorf@u
  4786  003CE6  0060  F0B8  F08A   	movff	floorf@F524+1,floorf@u+1
  4787  003CEC  0060  F0BC  F08B   	movff	floorf@F524+2,floorf@u+2
  4788  003CF2  0060  F0C0  F08C   	movff	floorf@F524+3,floorf@u+3
  4789  003CF8  0060  F1E4  F089   	movff	floorf@x,floorf@u
  4790  003CFE  0060  F1E8  F08A   	movff	floorf@x+1,floorf@u+1
  4791  003D04  0060  F1EC  F08B   	movff	floorf@x+2,floorf@u+2
  4792  003D0A  0060  F1F0  F08C   	movff	floorf@x+3,floorf@u+3
  4793  003D10  0E81               	movlw	129
  4794  003D12  0100               	movlb	0	; () banked
  4795  003D14  6F7D               	movwf	??_floorf& (0+255),b
  4796  003D16  0EFF               	movlw	255
  4797  003D18  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4798  003D1A  0060  F224  F07F   	movff	floorf@u,??_floorf+2
  4799  003D20  0060  F228  F080   	movff	floorf@u+1,??_floorf+3
  4800  003D26  0060  F22C  F081   	movff	floorf@u+2,??_floorf+4
  4801  003D2C  0060  F230  F082   	movff	floorf@u+3,??_floorf+5
  4802  003D32  0E18               	movlw	24
  4803  003D34  D005               	goto	u3900
  4804  003D36                     u3905:
  4805  003D36  90D8               	bcf	status,0,c
  4806  003D38  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  4807  003D3A  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4808  003D3C  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4809  003D3E  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4810  003D40                     u3900:
  4811  003D40  2EE8               	decfsz	wreg,f,c
  4812  003D42  D7F9               	goto	u3905
  4813  003D44  517F               	movf	(??_floorf+2)& (0+255),w,b
  4814  003D46  257D               	addwf	??_floorf& (0+255),w,b
  4815  003D48  6F87               	movwf	floorf@e& (0+255),b
  4816  003D4A  0E00               	movlw	0
  4817  003D4C  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  4818  003D4E  6F88               	movwf	(floorf@e+1)& (0+255),b
  4819  003D50  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4820  003D52  D013               	goto	l3659
  4821  003D54  5188               	movf	(floorf@e+1)& (0+255),w,b
  4822  003D56  E104               	bnz	u3910
  4823  003D58  0E17               	movlw	23
  4824  003D5A  5D87               	subwf	floorf@e& (0+255),w,b
  4825  003D5C  A0D8               	btfss	status,0,c
  4826  003D5E  D00D               	goto	l3659
  4827  003D60                     u3910:
  4828                           
  4829                           ; BSR set to: 0
  4830  003D60  0060  F1E4  F079   	movff	floorf@x,?_floorf
  4831  003D66  0060  F1E8  F07A   	movff	floorf@x+1,?_floorf+1
  4832  003D6C  0060  F1EC  F07B   	movff	floorf@x+2,?_floorf+2
  4833  003D72  0060  F1F0  F07C   	movff	floorf@x+3,?_floorf+3
  4834  003D78  0012               	return	
  4835  003D7A                     l3659:
  4836                           
  4837                           ; BSR set to: 0
  4838  003D7A  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4839  003D7C  D068               	goto	l3669
  4840                           
  4841                           ; BSR set to: 0
  4842  003D7E  0060  F21C  F07D   	movff	floorf@e,??_floorf
  4843  003D84  0EFF               	movlw	255
  4844  003D86  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4845  003D88  0EFF               	movlw	255
  4846  003D8A  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4847  003D8C  0E7F               	movlw	127
  4848  003D8E  6F80               	movwf	(??_floorf+3)& (0+255),b
  4849  003D90  0E00               	movlw	0
  4850  003D92  6F81               	movwf	(??_floorf+4)& (0+255),b
  4851  003D94                     u3935:
  4852  003D94  677D               	tstfsz	??_floorf& (0+255),b
  4853  003D96  D001               	goto	u3936
  4854  003D98  D007               	goto	u3937
  4855  003D9A                     u3936:
  4856  003D9A  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  4857  003D9C  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4858  003D9E  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4859  003DA0  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4860  003DA2  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4861  003DA4  2F7D               	decfsz	??_floorf& (0+255),f,b
  4862  003DA6  D7F6               	goto	u3935
  4863  003DA8                     u3937:
  4864  003DA8  0060  F1F8  F083   	movff	??_floorf+1,floorf@m
  4865  003DAE  0060  F1FC  F084   	movff	??_floorf+2,floorf@m+1
  4866  003DB4  0060  F200  F085   	movff	??_floorf+3,floorf@m+2
  4867  003DBA  0060  F204  F086   	movff	??_floorf+4,floorf@m+3
  4868  003DC0  0100               	movlb	0	; () banked
  4869  003DC2  5183               	movf	floorf@m& (0+255),w,b
  4870  003DC4  1589               	andwf	floorf@u& (0+255),w,b
  4871  003DC6  6F7D               	movwf	??_floorf& (0+255),b
  4872  003DC8  5184               	movf	(floorf@m+1)& (0+255),w,b
  4873  003DCA  158A               	andwf	(floorf@u+1)& (0+255),w,b
  4874  003DCC  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4875  003DCE  5185               	movf	(floorf@m+2)& (0+255),w,b
  4876  003DD0  158B               	andwf	(floorf@u+2)& (0+255),w,b
  4877  003DD2  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4878  003DD4  5186               	movf	(floorf@m+3)& (0+255),w,b
  4879  003DD6  158C               	andwf	(floorf@u+3)& (0+255),w,b
  4880  003DD8  6F80               	movwf	(??_floorf+3)& (0+255),b
  4881  003DDA  517D               	movf	??_floorf& (0+255),w,b
  4882  003DDC  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4883  003DDE  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4884  003DE0  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4885  003DE2  B4D8               	btfsc	status,2,c
  4886  003DE4  D7BD               	goto	u3910
  4887                           
  4888                           ; BSR set to: 0
  4889  003DE6  0060  F224  F07D   	movff	floorf@u,??_floorf
  4890  003DEC  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  4891  003DF2  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  4892  003DF8  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  4893  003DFE  0E20               	movlw	32
  4894  003E00  D005               	goto	u3950
  4895  003E02                     u3955:
  4896  003E02  90D8               	bcf	status,0,c
  4897  003E04  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4898  003E06  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4899  003E08  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4900  003E0A  337D               	rrcf	??_floorf& (0+255),f,b
  4901  003E0C                     u3950:
  4902  003E0C  2EE8               	decfsz	wreg,f,c
  4903  003E0E  D7F9               	goto	u3955
  4904  003E10  517D               	movf	??_floorf& (0+255),w,b
  4905  003E12  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4906  003E14  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4907  003E16  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4908  003E18  B4D8               	btfsc	status,2,c
  4909  003E1A  D008               	goto	l1327
  4910                           
  4911                           ; BSR set to: 0
  4912  003E1C  5183               	movf	floorf@m& (0+255),w,b
  4913  003E1E  2789               	addwf	floorf@u& (0+255),f,b
  4914  003E20  5184               	movf	(floorf@m+1)& (0+255),w,b
  4915  003E22  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  4916  003E24  5185               	movf	(floorf@m+2)& (0+255),w,b
  4917  003E26  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  4918  003E28  5186               	movf	(floorf@m+3)& (0+255),w,b
  4919  003E2A  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  4920  003E2C                     l1327:
  4921                           
  4922                           ; BSR set to: 0
  4923  003E2C  1D83               	comf	floorf@m& (0+255),w,b
  4924  003E2E  6F7D               	movwf	??_floorf& (0+255),b
  4925  003E30  1D84               	comf	(floorf@m+1)& (0+255),w,b
  4926  003E32  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4927  003E34  1D85               	comf	(floorf@m+2)& (0+255),w,b
  4928  003E36  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4929  003E38  1D86               	comf	(floorf@m+3)& (0+255),w,b
  4930  003E3A  6F80               	movwf	(??_floorf+3)& (0+255),b
  4931  003E3C  517D               	movf	??_floorf& (0+255),w,b
  4932  003E3E  1789               	andwf	floorf@u& (0+255),f,b
  4933  003E40  517E               	movf	(??_floorf+1)& (0+255),w,b
  4934  003E42  178A               	andwf	(floorf@u+1)& (0+255),f,b
  4935  003E44  517F               	movf	(??_floorf+2)& (0+255),w,b
  4936  003E46  178B               	andwf	(floorf@u+2)& (0+255),f,b
  4937  003E48  5180               	movf	(??_floorf+3)& (0+255),w,b
  4938  003E4A  178C               	andwf	(floorf@u+3)& (0+255),f,b
  4939  003E4C  D03A               	goto	l3677
  4940  003E4E                     l3669:
  4941                           
  4942                           ; BSR set to: 0
  4943  003E4E  0060  F224  F07D   	movff	floorf@u,??_floorf
  4944  003E54  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  4945  003E5A  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  4946  003E60  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  4947  003E66  0E20               	movlw	32
  4948  003E68  D005               	goto	u3970
  4949  003E6A                     u3975:
  4950  003E6A  90D8               	bcf	status,0,c
  4951  003E6C  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4952  003E6E  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4953  003E70  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4954  003E72  337D               	rrcf	??_floorf& (0+255),f,b
  4955  003E74                     u3970:
  4956  003E74  2EE8               	decfsz	wreg,f,c
  4957  003E76  D7F9               	goto	u3975
  4958  003E78  517D               	movf	??_floorf& (0+255),w,b
  4959  003E7A  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4960  003E7C  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4961  003E7E  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4962  003E80  A4D8               	btfss	status,2,c
  4963  003E82  D008               	goto	l3673
  4964                           
  4965                           ; BSR set to: 0
  4966  003E84  0E00               	movlw	0
  4967  003E86  6F89               	movwf	floorf@u& (0+255),b
  4968  003E88  0E00               	movlw	0
  4969  003E8A  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4970  003E8C  0E00               	movlw	0
  4971  003E8E  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4972  003E90  0E00               	movlw	0
  4973  003E92  D016               	goto	L5
  4974  003E94                     l3673:
  4975                           
  4976                           ; BSR set to: 0
  4977  003E94  90D8               	bcf	status,0,c
  4978  003E96  3589               	rlcf	floorf@u& (0+255),w,b
  4979  003E98  6F7D               	movwf	??_floorf& (0+255),b
  4980  003E9A  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  4981  003E9C  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4982  003E9E  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  4983  003EA0  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4984  003EA2  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  4985  003EA4  6F80               	movwf	(??_floorf+3)& (0+255),b
  4986  003EA6  517D               	movf	??_floorf& (0+255),w,b
  4987  003EA8  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4988  003EAA  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4989  003EAC  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4990  003EAE  B4D8               	btfsc	status,2,c
  4991  003EB0  D008               	goto	l3677
  4992                           
  4993                           ; BSR set to: 0
  4994  003EB2  0E00               	movlw	0
  4995  003EB4  6F89               	movwf	floorf@u& (0+255),b
  4996  003EB6  0E00               	movlw	0
  4997  003EB8  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4998  003EBA  0E80               	movlw	128
  4999  003EBC  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5000  003EBE  0EBF               	movlw	191
  5001  003EC0                     L5:
  5002  003EC0  6F8C               	movwf	(floorf@u+3)& (0+255),b
  5003  003EC2                     l3677:
  5004                           
  5005                           ; BSR set to: 0
  5006  003EC2  0060  F224  F079   	movff	floorf@u,?_floorf
  5007  003EC8  0060  F228  F07A   	movff	floorf@u+1,?_floorf+1
  5008  003ECE  0060  F22C  F07B   	movff	floorf@u+2,?_floorf+2
  5009  003ED4  0060  F230  F07C   	movff	floorf@u+3,?_floorf+3
  5010                           
  5011                           ; BSR set to: 0
  5012  003EDA  0012               	return		;funcret
  5013  003EDC                     __end_of_floorf:
  5014                           	opt callstack 0
  5015                           
  5016 ;; *************** function ___fpclassifyf *****************
  5017 ;; Defined at:
  5018 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  x               4    0[BANK0 ] float 
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;  u               4   10[BANK0 ] struct .
  5023 ;;  e               2    8[BANK0 ] int 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  2    0[BANK0 ] int 
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5034 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5035 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5036 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5037 ;;Total ram usage:       14 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:    2
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_efgtoa
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text17
  5048  0044B8                     __ptext17:
  5049                           	opt callstack 0
  5050  0044B8                     ___fpclassifyf:
  5051                           	opt callstack 23
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;incstack = 0
  5055  0044B8  0060  F0C4  F06A   	movff	___fpclassifyf@F463,___fpclassifyf@u
  5056  0044BE  0060  F0C8  F06B   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5057  0044C4  0060  F0CC  F06C   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5058  0044CA  0060  F0D0  F06D   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5059  0044D0  0060  F180  F06A   	movff	___fpclassifyf@x,___fpclassifyf@u
  5060  0044D6  0060  F184  F06B   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5061  0044DC  0060  F188  F06C   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5062  0044E2  0060  F18C  F06D   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5063  0044E8  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  5064  0044EE  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5065  0044F4  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5066  0044FA  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5067  004500  0E18               	movlw	24
  5068  004502  D006               	goto	u6920
  5069  004504                     u6925:
  5070  004504  0100               	movlb	0	; () banked
  5071  004506  90D8               	bcf	status,0,c
  5072  004508  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5073  00450A  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5074  00450C  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5075  00450E  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5076  004510                     u6920:
  5077  004510  2EE8               	decfsz	wreg,f,c
  5078  004512  D7F8               	goto	u6925
  5079  004514  5164               	movf	??___fpclassifyf& (0+255),w,b
  5080  004516  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5081  004518  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5082  00451A  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5083  00451C  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5084  00451E  A4D8               	btfss	status,2,c
  5085  004520  D019               	goto	l5541
  5086                           
  5087                           ; BSR set to: 0
  5088  004522  90D8               	bcf	status,0,c
  5089  004524  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5090  004526  6F64               	movwf	??___fpclassifyf& (0+255),b
  5091  004528  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5092  00452A  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5093  00452C  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5094  00452E  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5095  004530  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5096  004532  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5097  004534  5164               	movf	??___fpclassifyf& (0+255),w,b
  5098  004536  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5099  004538  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5100  00453A  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5101  00453C  A4D8               	btfss	status,2,c
  5102  00453E  D005               	goto	l5537
  5103                           
  5104                           ; BSR set to: 0
  5105  004540  0E00               	movlw	0
  5106  004542  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5107  004544  0E02               	movlw	2
  5108  004546  6F60               	movwf	?___fpclassifyf& (0+255),b
  5109  004548  0012               	return	
  5110  00454A                     l5537:
  5111                           
  5112                           ; BSR set to: 0
  5113  00454A  0E00               	movlw	0
  5114  00454C  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5115  00454E  0E03               	movlw	3
  5116  004550  6F60               	movwf	?___fpclassifyf& (0+255),b
  5117  004552  0012               	return	
  5118  004554                     l5541:
  5119                           
  5120                           ; BSR set to: 0
  5121  004554  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5122  004556  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5123  004558  A4D8               	btfss	status,2,c
  5124  00455A  D020               	goto	l5547
  5125                           
  5126                           ; BSR set to: 0
  5127  00455C  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  5128  004562  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5129  004568  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5130  00456E  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5131  004574  0E09               	movlw	9
  5132  004576                     u6965:
  5133  004576  90D8               	bcf	status,0,c
  5134  004578  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5135  00457A  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5136  00457C  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5137  00457E  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5138  004580  2EE8               	decfsz	wreg,f,c
  5139  004582  D7F9               	goto	u6965
  5140  004584  5164               	movf	??___fpclassifyf& (0+255),w,b
  5141  004586  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5142  004588  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5143  00458A  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5144  00458C  A4D8               	btfss	status,2,c
  5145  00458E  D002               	goto	u6970
  5146  004590  0E01               	movlw	1
  5147  004592  D001               	goto	u6980
  5148  004594                     u6970:
  5149  004594  0E00               	movlw	0
  5150  004596                     u6980:
  5151  004596  6F60               	movwf	?___fpclassifyf& (0+255),b
  5152  004598  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5153  00459A  0012               	return	
  5154  00459C                     l5547:
  5155                           
  5156                           ; BSR set to: 0
  5157  00459C  0E00               	movlw	0
  5158  00459E  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5159  0045A0  0E04               	movlw	4
  5160  0045A2  6F60               	movwf	?___fpclassifyf& (0+255),b
  5161                           
  5162                           ; BSR set to: 0
  5163  0045A4  0012               	return		;funcret
  5164  0045A6                     __end_of___fpclassifyf:
  5165                           	opt callstack 0
  5166                           
  5167 ;; *************** function ___fltol *****************
  5168 ;; Defined at:
  5169 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;  f1              4    0[BANK0 ] int 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  exp1            1    9[BANK0 ] unsigned char 
  5174 ;;  sign1           1    8[BANK0 ] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  4    0[BANK0 ] long 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5184 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5186 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5187 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5188 ;;Total ram usage:       10 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    2
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_efgtoa
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text18
  5199  004748                     __ptext18:
  5200                           	opt callstack 0
  5201  004748                     ___fltol:
  5202                           	opt callstack 23
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;incstack = 0
  5206  004748  0100               	movlb	0	; () banked
  5207  00474A  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5208  00474C  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5209  00474E  6F69               	movwf	___fltol@exp1& (0+255),b
  5210  004750  5169               	movf	___fltol@exp1& (0+255),w,b
  5211  004752  A4D8               	btfss	status,2,c
  5212  004754  D009               	goto	l5949
  5213  004756                     u7620:
  5214                           
  5215                           ; BSR set to: 0
  5216  004756  0E00               	movlw	0
  5217  004758  6F60               	movwf	?___fltol& (0+255),b
  5218  00475A  0E00               	movlw	0
  5219  00475C  6F61               	movwf	(?___fltol+1)& (0+255),b
  5220  00475E  0E00               	movlw	0
  5221  004760  6F62               	movwf	(?___fltol+2)& (0+255),b
  5222  004762  0E00               	movlw	0
  5223  004764  6F63               	movwf	(?___fltol+3)& (0+255),b
  5224  004766  0012               	return	
  5225  004768                     l5949:
  5226                           
  5227                           ; BSR set to: 0
  5228  004768  0060  F180  F064   	movff	___fltol@f1,??___fltol
  5229  00476E  0060  F184  F065   	movff	___fltol@f1+1,??___fltol+1
  5230  004774  0060  F188  F066   	movff	___fltol@f1+2,??___fltol+2
  5231  00477A  0060  F18C  F067   	movff	___fltol@f1+3,??___fltol+3
  5232  004780  0E20               	movlw	32
  5233  004782  D005               	goto	u7630
  5234  004784                     u7635:
  5235  004784  90D8               	bcf	status,0,c
  5236  004786  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  5237  004788  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  5238  00478A  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  5239  00478C  3364               	rrcf	??___fltol& (0+255),f,b
  5240  00478E                     u7630:
  5241  00478E  2EE8               	decfsz	wreg,f,c
  5242  004790  D7F9               	goto	u7635
  5243  004792  5164               	movf	??___fltol& (0+255),w,b
  5244  004794  6F68               	movwf	___fltol@sign1& (0+255),b
  5245                           
  5246                           ; BSR set to: 0
  5247  004796  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  5248                           
  5249                           ; BSR set to: 0
  5250  004798  0EFF               	movlw	255
  5251  00479A  1760               	andwf	___fltol@f1& (0+255),f,b
  5252  00479C  0EFF               	movlw	255
  5253  00479E  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  5254  0047A0  0EFF               	movlw	255
  5255  0047A2  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  5256  0047A4  0E00               	movlw	0
  5257  0047A6  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  5258                           
  5259                           ; BSR set to: 0
  5260  0047A8  0E96               	movlw	150
  5261  0047AA  5F69               	subwf	___fltol@exp1& (0+255),f,b
  5262                           
  5263                           ; BSR set to: 0
  5264  0047AC  AF69               	btfss	___fltol@exp1& (0+255),7,b
  5265  0047AE  D00D               	goto	l5969
  5266                           
  5267                           ; BSR set to: 0
  5268  0047B0  5169               	movf	___fltol@exp1& (0+255),w,b
  5269  0047B2  0A80               	xorlw	128
  5270  0047B4  0F97               	addlw	151
  5271  0047B6  A0D8               	btfss	status,0,c
  5272  0047B8  D7CE               	goto	u7620
  5273  0047BA                     l5965:
  5274                           
  5275                           ; BSR set to: 0
  5276  0047BA  90D8               	bcf	status,0,c
  5277  0047BC  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5278  0047BE  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5279  0047C0  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5280  0047C2  3360               	rrcf	___fltol@f1& (0+255),f,b
  5281                           
  5282                           ; BSR set to: 0
  5283  0047C4  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  5284  0047C6  D7F9               	goto	l5965
  5285  0047C8  D00D               	goto	u7670
  5286  0047CA                     l5969:
  5287                           
  5288                           ; BSR set to: 0
  5289  0047CA  0E1F               	movlw	31
  5290  0047CC  6569               	cpfsgt	___fltol@exp1& (0+255),b
  5291  0047CE  D007               	goto	l5977
  5292  0047D0  D7C2               	goto	u7620
  5293  0047D2                     l5975:
  5294                           
  5295                           ; BSR set to: 0
  5296  0047D2  90D8               	bcf	status,0,c
  5297  0047D4  3760               	rlcf	___fltol@f1& (0+255),f,b
  5298  0047D6  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5299  0047D8  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5300  0047DA  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5301  0047DC  0769               	decf	___fltol@exp1& (0+255),f,b
  5302  0047DE                     l5977:
  5303                           
  5304                           ; BSR set to: 0
  5305  0047DE  5169               	movf	___fltol@exp1& (0+255),w,b
  5306  0047E0  A4D8               	btfss	status,2,c
  5307  0047E2  D7F7               	goto	l5975
  5308  0047E4                     u7670:
  5309                           
  5310                           ; BSR set to: 0
  5311  0047E4  5168               	movf	___fltol@sign1& (0+255),w,b
  5312  0047E6  B4D8               	btfsc	status,2,c
  5313  0047E8  D008               	goto	l5983
  5314                           
  5315                           ; BSR set to: 0
  5316  0047EA  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  5317  0047EC  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  5318  0047EE  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  5319  0047F0  6D60               	negf	___fltol@f1& (0+255),b
  5320  0047F2  0E00               	movlw	0
  5321  0047F4  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5322  0047F6  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5323  0047F8  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5324  0047FA                     l5983:
  5325                           
  5326                           ; BSR set to: 0
  5327  0047FA  0060  F180  F060   	movff	___fltol@f1,?___fltol
  5328  004800  0060  F184  F061   	movff	___fltol@f1+1,?___fltol+1
  5329  004806  0060  F188  F062   	movff	___fltol@f1+2,?___fltol+2
  5330  00480C  0060  F18C  F063   	movff	___fltol@f1+3,?___fltol+3
  5331                           
  5332                           ; BSR set to: 0
  5333  004812  0012               	return		;funcret
  5334  004814                     __end_of___fltol:
  5335                           	opt callstack 0
  5336                           
  5337 ;; *************** function ___flsub *****************
  5338 ;; Defined at:
  5339 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  b               4   25[BANK0 ] long 
  5342 ;;  a               4   29[BANK0 ] long 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  4   25[BANK0 ] long 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5354 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5357 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5358 ;;Total ram usage:        8 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    3
  5361 ;; This function calls:
  5362 ;;		___fladd
  5363 ;; This function is called by:
  5364 ;;		_efgtoa
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text19
  5369  004EDA                     __ptext19:
  5370                           	opt callstack 0
  5371  004EDA                     ___flsub:
  5372                           	opt callstack 22
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;incstack = 0
  5376  004EDA  0E00               	movlw	0
  5377  004EDC  0100               	movlb	0	; () banked
  5378  004EDE  1B7D               	xorwf	___flsub@a& (0+255),f,b
  5379  004EE0  0E00               	movlw	0
  5380  004EE2  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  5381  004EE4  0E00               	movlw	0
  5382  004EE6  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  5383  004EE8  0E80               	movlw	128
  5384  004EEA  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  5385                           
  5386                           ; BSR set to: 0
  5387  004EEC  0060  F1E4  F060   	movff	___flsub@b,___fladd@b
  5388  004EF2  0060  F1E8  F061   	movff	___flsub@b+1,___fladd@b+1
  5389  004EF8  0060  F1EC  F062   	movff	___flsub@b+2,___fladd@b+2
  5390  004EFE  0060  F1F0  F063   	movff	___flsub@b+3,___fladd@b+3
  5391  004F04  0060  F1F4  F064   	movff	___flsub@a,___fladd@a
  5392  004F0A  0060  F1F8  F065   	movff	___flsub@a+1,___fladd@a+1
  5393  004F10  0060  F1FC  F066   	movff	___flsub@a+2,___fladd@a+2
  5394  004F16  0060  F200  F067   	movff	___flsub@a+3,___fladd@a+3
  5395  004F1C  EC74  F01B         	call	___fladd	;wreg free
  5396  004F20  0060  F180  F079   	movff	?___fladd,?___flsub
  5397  004F26  0060  F184  F07A   	movff	?___fladd+1,?___flsub+1
  5398  004F2C  0060  F188  F07B   	movff	?___fladd+2,?___flsub+2
  5399  004F32  0060  F18C  F07C   	movff	?___fladd+3,?___flsub+3
  5400  004F38  0012               	return		;funcret
  5401  004F3A                     __end_of___flsub:
  5402                           	opt callstack 0
  5403                           
  5404 ;; *************** function ___fladd *****************
  5405 ;; Defined at:
  5406 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  b               4    0[BANK0 ] long 
  5409 ;;  a               4    4[BANK0 ] long 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  grs             1   15[BANK0 ] unsigned char 
  5412 ;;  bexp            1   14[BANK0 ] unsigned char 
  5413 ;;  aexp            1   13[BANK0 ] unsigned char 
  5414 ;;  signs           1   12[BANK0 ] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  4    0[BANK0 ] unsigned char 
  5417 ;; Registers used:
  5418 ;;		wreg, status,2, status,0
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5424 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5425 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5426 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5427 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5428 ;;Total ram usage:       16 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:    2
  5431 ;; This function calls:
  5432 ;;		Nothing
  5433 ;; This function is called by:
  5434 ;;		_efgtoa
  5435 ;;		___flsub
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text20
  5440  0036E8                     __ptext20:
  5441                           	opt callstack 0
  5442  0036E8                     ___fladd:
  5443                           	opt callstack 22
  5444                           
  5445                           ;incstack = 0
  5446  0036E8  0100               	movlb	0	; () banked
  5447  0036EA  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5448  0036EC  0B80               	andlw	128
  5449  0036EE  6F6C               	movwf	___fladd@signs& (0+255),b
  5450  0036F0  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5451  0036F2  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  5452  0036F4  6F6E               	movwf	___fladd@bexp& (0+255),b
  5453                           
  5454                           ; BSR set to: 0
  5455  0036F6  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
  5456                           
  5457                           ; BSR set to: 0
  5458  0036F8  816E               	bsf	___fladd@bexp& (0+255),0,b
  5459                           
  5460                           ; BSR set to: 0
  5461  0036FA  516E               	movf	___fladd@bexp& (0+255),w,b
  5462  0036FC  B4D8               	btfsc	status,2,c
  5463  0036FE  D00D               	goto	l5321
  5464                           
  5465                           ; BSR set to: 0
  5466  003700  296E               	incf	___fladd@bexp& (0+255),w,b
  5467  003702  A4D8               	btfss	status,2,c
  5468  003704  D008               	goto	l5317
  5469                           
  5470                           ; BSR set to: 0
  5471  003706  0E00               	movlw	0
  5472  003708  6F60               	movwf	___fladd@b& (0+255),b
  5473  00370A  0E00               	movlw	0
  5474  00370C  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5475  00370E  0E00               	movlw	0
  5476  003710  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5477  003712  0E00               	movlw	0
  5478  003714  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5479  003716                     l5317:
  5480                           
  5481                           ; BSR set to: 0
  5482  003716  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5483  003718  D006               	goto	L6
  5484  00371A                     l5321:
  5485                           
  5486                           ; BSR set to: 0
  5487  00371A  0E00               	movlw	0
  5488  00371C  6F60               	movwf	___fladd@b& (0+255),b
  5489  00371E  0E00               	movlw	0
  5490  003720  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5491  003722  0E00               	movlw	0
  5492  003724  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5493  003726                     L6:
  5494  003726  0E00               	movlw	0
  5495  003728  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5496                           
  5497                           ; BSR set to: 0
  5498  00372A  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5499  00372C  0B80               	andlw	128
  5500  00372E  6F6D               	movwf	___fladd@aexp& (0+255),b
  5501                           
  5502                           ; BSR set to: 0
  5503  003730  516C               	movf	___fladd@signs& (0+255),w,b
  5504  003732  196D               	xorwf	___fladd@aexp& (0+255),w,b
  5505  003734  A4D8               	btfss	status,2,c
  5506                           
  5507                           ; BSR set to: 0
  5508  003736  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5509                           
  5510                           ; BSR set to: 0
  5511  003738  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5512  00373A  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5513  00373C  6F6D               	movwf	___fladd@aexp& (0+255),b
  5514                           
  5515                           ; BSR set to: 0
  5516  00373E  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
  5517                           
  5518                           ; BSR set to: 0
  5519  003740  816D               	bsf	___fladd@aexp& (0+255),0,b
  5520                           
  5521                           ; BSR set to: 0
  5522  003742  516D               	movf	___fladd@aexp& (0+255),w,b
  5523  003744  B4D8               	btfsc	status,2,c
  5524  003746  D00D               	goto	l5345
  5525                           
  5526                           ; BSR set to: 0
  5527  003748  296D               	incf	___fladd@aexp& (0+255),w,b
  5528  00374A  A4D8               	btfss	status,2,c
  5529  00374C  D008               	goto	l5341
  5530                           
  5531                           ; BSR set to: 0
  5532  00374E  0E00               	movlw	0
  5533  003750  6F64               	movwf	___fladd@a& (0+255),b
  5534  003752  0E00               	movlw	0
  5535  003754  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5536  003756  0E00               	movlw	0
  5537  003758  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5538  00375A  0E00               	movlw	0
  5539  00375C  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5540  00375E                     l5341:
  5541                           
  5542                           ; BSR set to: 0
  5543  00375E  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5544  003760  D006               	goto	L7
  5545  003762                     l5345:
  5546                           
  5547                           ; BSR set to: 0
  5548  003762  0E00               	movlw	0
  5549  003764  6F64               	movwf	___fladd@a& (0+255),b
  5550  003766  0E00               	movlw	0
  5551  003768  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5552  00376A  0E00               	movlw	0
  5553  00376C  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5554  00376E                     L7:
  5555  00376E  0E00               	movlw	0
  5556  003770  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5557                           
  5558                           ; BSR set to: 0
  5559  003772  516E               	movf	___fladd@bexp& (0+255),w,b
  5560  003774  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5561  003776  B0D8               	btfsc	status,0,c
  5562  003778  D031               	goto	l5383
  5563                           
  5564                           ; BSR set to: 0
  5565  00377A  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5566  00377C  D002               	goto	l5353
  5567                           
  5568                           ; BSR set to: 0
  5569  00377E  0E80               	movlw	128
  5570  003780  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5571  003782                     l5353:
  5572                           
  5573                           ; BSR set to: 0
  5574  003782  0060  F1B8  F06F   	movff	___fladd@bexp,___fladd@grs
  5575                           
  5576                           ; BSR set to: 0
  5577  003788  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  5578                           
  5579                           ; BSR set to: 0
  5580  00378E  0060  F1BC  F06D   	movff	___fladd@grs,___fladd@aexp
  5581                           
  5582                           ; BSR set to: 0
  5583  003794  0060  F180  F06F   	movff	___fladd@b,___fladd@grs
  5584                           
  5585                           ; BSR set to: 0
  5586  00379A  0060  F190  F060   	movff	___fladd@a,___fladd@b
  5587                           
  5588                           ; BSR set to: 0
  5589  0037A0  0060  F1BC  F064   	movff	___fladd@grs,___fladd@a
  5590                           
  5591                           ; BSR set to: 0
  5592  0037A6  0060  F184  F06F   	movff	___fladd@b+1,___fladd@grs
  5593                           
  5594                           ; BSR set to: 0
  5595  0037AC  0060  F194  F061   	movff	___fladd@a+1,___fladd@b+1
  5596                           
  5597                           ; BSR set to: 0
  5598  0037B2  0060  F1BC  F065   	movff	___fladd@grs,___fladd@a+1
  5599                           
  5600                           ; BSR set to: 0
  5601  0037B8  0060  F188  F06F   	movff	___fladd@b+2,___fladd@grs
  5602                           
  5603                           ; BSR set to: 0
  5604  0037BE  0060  F198  F062   	movff	___fladd@a+2,___fladd@b+2
  5605                           
  5606                           ; BSR set to: 0
  5607  0037C4  0060  F1BC  F066   	movff	___fladd@grs,___fladd@a+2
  5608                           
  5609                           ; BSR set to: 0
  5610  0037CA  0060  F18C  F06F   	movff	___fladd@b+3,___fladd@grs
  5611                           
  5612                           ; BSR set to: 0
  5613  0037D0  0060  F19C  F063   	movff	___fladd@a+3,___fladd@b+3
  5614                           
  5615                           ; BSR set to: 0
  5616  0037D6  0060  F1BC  F067   	movff	___fladd@grs,___fladd@a+3
  5617  0037DC                     l5383:
  5618                           
  5619                           ; BSR set to: 0
  5620  0037DC  0E00               	movlw	0
  5621  0037DE  6F6F               	movwf	___fladd@grs& (0+255),b
  5622                           
  5623                           ; BSR set to: 0
  5624  0037E0  516E               	movf	___fladd@bexp& (0+255),w,b
  5625  0037E2  0060  F1B4  F068   	movff	___fladd@aexp,??___fladd
  5626  0037E8  6B69               	clrf	(??___fladd+1)& (0+255),b
  5627  0037EA  5F68               	subwf	??___fladd& (0+255),f,b
  5628  0037EC  0E00               	movlw	0
  5629  0037EE  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5630  0037F0  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5631  0037F2  D02D               	goto	l1165
  5632  0037F4  5169               	movf	(??___fladd+1)& (0+255),w,b
  5633  0037F6  E104               	bnz	u6580
  5634  0037F8  0E1A               	movlw	26
  5635  0037FA  5D68               	subwf	??___fladd& (0+255),w,b
  5636  0037FC  A0D8               	btfss	status,0,c
  5637  0037FE  D027               	goto	l1165
  5638  003800                     u6580:
  5639                           
  5640                           ; BSR set to: 0
  5641  003800  5160               	movf	___fladd@b& (0+255),w,b
  5642  003802  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5643  003804  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5644  003806  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5645  003808  B4D8               	btfsc	status,2,c
  5646  00380A  D002               	goto	u6590
  5647  00380C  0E01               	movlw	1
  5648  00380E  D001               	goto	u6600
  5649  003810                     u6590:
  5650  003810  0E00               	movlw	0
  5651  003812                     u6600:
  5652  003812  6F6F               	movwf	___fladd@grs& (0+255),b
  5653                           
  5654                           ; BSR set to: 0
  5655  003814  0E00               	movlw	0
  5656  003816  6F60               	movwf	___fladd@b& (0+255),b
  5657  003818  0E00               	movlw	0
  5658  00381A  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5659  00381C  0E00               	movlw	0
  5660  00381E  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5661  003820  0E00               	movlw	0
  5662  003822  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5663                           
  5664                           ; BSR set to: 0
  5665  003824  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  5666  00382A  D015               	goto	u6630
  5667  00382C                     l1166:
  5668                           
  5669                           ; BSR set to: 0
  5670  00382C  A16F               	btfss	___fladd@grs& (0+255),0,b
  5671  00382E  D005               	goto	l5395
  5672                           
  5673                           ; BSR set to: 0
  5674  003830  90D8               	bcf	status,0,c
  5675  003832  316F               	rrcf	___fladd@grs& (0+255),w,b
  5676  003834  0901               	iorlw	1
  5677  003836  6F6F               	movwf	___fladd@grs& (0+255),b
  5678  003838  D002               	goto	l5397
  5679  00383A                     l5395:
  5680                           
  5681                           ; BSR set to: 0
  5682  00383A  90D8               	bcf	status,0,c
  5683  00383C  336F               	rrcf	___fladd@grs& (0+255),f,b
  5684  00383E                     l5397:
  5685                           
  5686                           ; BSR set to: 0
  5687  00383E  B160               	btfsc	___fladd@b& (0+255),0,b
  5688                           
  5689                           ; BSR set to: 0
  5690  003840  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5691                           
  5692                           ; BSR set to: 0
  5693  003842  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5694  003844  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5695  003846  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5696  003848  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5697  00384A  3360               	rrcf	___fladd@b& (0+255),f,b
  5698                           
  5699                           ; BSR set to: 0
  5700  00384C  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5701  00384E                     l1165:
  5702                           
  5703                           ; BSR set to: 0
  5704  00384E  516D               	movf	___fladd@aexp& (0+255),w,b
  5705  003850  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5706  003852  A0D8               	btfss	status,0,c
  5707  003854  D7EB               	goto	l1166
  5708  003856                     u6630:
  5709                           
  5710                           ; BSR set to: 0
  5711  003856  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5712  003858  D028               	goto	l5429
  5713                           
  5714                           ; BSR set to: 0
  5715  00385A  516E               	movf	___fladd@bexp& (0+255),w,b
  5716  00385C  A4D8               	btfss	status,2,c
  5717  00385E  D009               	goto	l5411
  5718                           
  5719                           ; BSR set to: 0
  5720  003860  0E00               	movlw	0
  5721  003862  6F60               	movwf	?___fladd& (0+255),b
  5722  003864  0E00               	movlw	0
  5723  003866  6F61               	movwf	(?___fladd+1)& (0+255),b
  5724  003868  0E00               	movlw	0
  5725  00386A  6F62               	movwf	(?___fladd+2)& (0+255),b
  5726  00386C  0E00               	movlw	0
  5727  00386E  6F63               	movwf	(?___fladd+3)& (0+255),b
  5728  003870  0012               	return	
  5729  003872                     l5411:
  5730                           
  5731                           ; BSR set to: 0
  5732  003872  5164               	movf	___fladd@a& (0+255),w,b
  5733  003874  2760               	addwf	___fladd@b& (0+255),f,b
  5734  003876  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5735  003878  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5736  00387A  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5737  00387C  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5738  00387E  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5739  003880  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5740                           
  5741                           ; BSR set to: 0
  5742  003882  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5743  003884  D071               	goto	u6760
  5744                           
  5745                           ; BSR set to: 0
  5746  003886  A16F               	btfss	___fladd@grs& (0+255),0,b
  5747  003888  D005               	goto	l5419
  5748                           
  5749                           ; BSR set to: 0
  5750  00388A  90D8               	bcf	status,0,c
  5751  00388C  316F               	rrcf	___fladd@grs& (0+255),w,b
  5752  00388E  0901               	iorlw	1
  5753  003890  6F6F               	movwf	___fladd@grs& (0+255),b
  5754  003892  D002               	goto	l5421
  5755  003894                     l5419:
  5756                           
  5757                           ; BSR set to: 0
  5758  003894  90D8               	bcf	status,0,c
  5759  003896  336F               	rrcf	___fladd@grs& (0+255),f,b
  5760  003898                     l5421:
  5761                           
  5762                           ; BSR set to: 0
  5763  003898  B160               	btfsc	___fladd@b& (0+255),0,b
  5764                           
  5765                           ; BSR set to: 0
  5766  00389A  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5767                           
  5768                           ; BSR set to: 0
  5769  00389C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5770  00389E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5771  0038A0  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5772  0038A2  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5773  0038A4  3360               	rrcf	___fladd@b& (0+255),f,b
  5774                           
  5775                           ; BSR set to: 0
  5776  0038A6  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5777  0038A8  D05F               	goto	u6760
  5778  0038AA                     l5429:
  5779                           
  5780                           ; BSR set to: 0
  5781  0038AA  5164               	movf	___fladd@a& (0+255),w,b
  5782  0038AC  5D60               	subwf	___fladd@b& (0+255),w,b
  5783  0038AE  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5784  0038B0  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5785  0038B2  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5786  0038B4  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5787  0038B6  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5788  0038B8  0A80               	xorlw	128
  5789  0038BA  6F68               	movwf	??___fladd& (0+255),b
  5790  0038BC  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5791  0038BE  0A80               	xorlw	128
  5792  0038C0  5968               	subwfb	??___fladd& (0+255),w,b
  5793  0038C2  B0D8               	btfsc	status,0,c
  5794  0038C4  D025               	goto	l5439
  5795                           
  5796                           ; BSR set to: 0
  5797  0038C6  5160               	movf	___fladd@b& (0+255),w,b
  5798  0038C8  5D64               	subwf	___fladd@a& (0+255),w,b
  5799  0038CA  6F68               	movwf	??___fladd& (0+255),b
  5800  0038CC  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5801  0038CE  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5802  0038D0  6F69               	movwf	(??___fladd+1)& (0+255),b
  5803  0038D2  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5804  0038D4  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5805  0038D6  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5806  0038D8  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5807  0038DA  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5808  0038DC  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5809  0038DE  0EFF               	movlw	255
  5810  0038E0  2568               	addwf	??___fladd& (0+255),w,b
  5811  0038E2  6F60               	movwf	___fladd@b& (0+255),b
  5812  0038E4  0EFF               	movlw	255
  5813  0038E6  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5814  0038E8  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5815  0038EA  0EFF               	movlw	255
  5816  0038EC  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5817  0038EE  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5818  0038F0  0EFF               	movlw	255
  5819  0038F2  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5820  0038F4  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5821  0038F6  0E80               	movlw	128
  5822  0038F8  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5823                           
  5824                           ; BSR set to: 0
  5825  0038FA  6D6F               	negf	___fladd@grs& (0+255),b
  5826                           
  5827                           ; BSR set to: 0
  5828  0038FC  516F               	movf	___fladd@grs& (0+255),w,b
  5829  0038FE  A4D8               	btfss	status,2,c
  5830  003900  D00F               	goto	l1181
  5831                           
  5832                           ; BSR set to: 0
  5833  003902  0E01               	movlw	1
  5834  003904  2760               	addwf	___fladd@b& (0+255),f,b
  5835  003906  0E00               	movlw	0
  5836  003908  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5837  00390A  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5838  00390C  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5839  00390E  D008               	goto	l1181
  5840  003910                     l5439:
  5841                           
  5842                           ; BSR set to: 0
  5843  003910  5164               	movf	___fladd@a& (0+255),w,b
  5844  003912  5F60               	subwf	___fladd@b& (0+255),f,b
  5845  003914  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5846  003916  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5847  003918  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5848  00391A  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5849  00391C  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5850  00391E  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5851  003920                     l1181:
  5852                           
  5853                           ; BSR set to: 0
  5854  003920  5160               	movf	___fladd@b& (0+255),w,b
  5855  003922  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5856  003924  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5857  003926  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5858  003928  A4D8               	btfss	status,2,c
  5859  00392A  D01C               	goto	l5463
  5860                           
  5861                           ; BSR set to: 0
  5862  00392C  516F               	movf	___fladd@grs& (0+255),w,b
  5863  00392E  A4D8               	btfss	status,2,c
  5864  003930  D019               	goto	l5463
  5865                           
  5866                           ; BSR set to: 0
  5867  003932  0E00               	movlw	0
  5868  003934  6F60               	movwf	?___fladd& (0+255),b
  5869  003936  0E00               	movlw	0
  5870  003938  6F61               	movwf	(?___fladd+1)& (0+255),b
  5871  00393A  0E00               	movlw	0
  5872  00393C  6F62               	movwf	(?___fladd+2)& (0+255),b
  5873  00393E  0E00               	movlw	0
  5874  003940  6F63               	movwf	(?___fladd+3)& (0+255),b
  5875  003942  0012               	return	
  5876  003944                     l5447:
  5877                           
  5878                           ; BSR set to: 0
  5879  003944  90D8               	bcf	status,0,c
  5880  003946  3760               	rlcf	___fladd@b& (0+255),f,b
  5881  003948  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5882  00394A  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5883  00394C  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5884                           
  5885                           ; BSR set to: 0
  5886  00394E  BF6F               	btfsc	___fladd@grs& (0+255),7,b
  5887                           
  5888                           ; BSR set to: 0
  5889  003950  8160               	bsf	___fladd@b& (0+255),0,b
  5890                           
  5891                           ; BSR set to: 0
  5892  003952  A16F               	btfss	___fladd@grs& (0+255),0,b
  5893  003954  D002               	goto	l5457
  5894                           
  5895                           ; BSR set to: 0
  5896  003956  80D8               	bsf	status,0,c
  5897  003958  D001               	goto	L8
  5898  00395A                     l5457:
  5899                           
  5900                           ; BSR set to: 0
  5901  00395A  90D8               	bcf	status,0,c
  5902  00395C                     L8:
  5903  00395C  376F               	rlcf	___fladd@grs& (0+255),f,b
  5904                           
  5905                           ; BSR set to: 0
  5906  00395E  516E               	movf	___fladd@bexp& (0+255),w,b
  5907  003960  A4D8               	btfss	status,2,c
  5908                           
  5909                           ; BSR set to: 0
  5910  003962  076E               	decf	___fladd@bexp& (0+255),f,b
  5911  003964                     l5463:
  5912                           
  5913                           ; BSR set to: 0
  5914  003964  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5915  003966  D7EE               	goto	l5447
  5916  003968                     u6760:
  5917                           
  5918                           ; BSR set to: 0
  5919  003968  0E00               	movlw	0
  5920  00396A  6F6D               	movwf	___fladd@aexp& (0+255),b
  5921                           
  5922                           ; BSR set to: 0
  5923  00396C  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5924  00396E  D00C               	goto	l1190
  5925                           
  5926                           ; BSR set to: 0
  5927  003970  0060  F1BC  F068   	movff	___fladd@grs,??___fladd
  5928  003976  0E7F               	movlw	127
  5929  003978  1768               	andwf	??___fladd& (0+255),f,b
  5930  00397A  B4D8               	btfsc	status,2,c
  5931  00397C  D003               	goto	l1191
  5932  00397E                     u6780:
  5933                           
  5934                           ; BSR set to: 0
  5935  00397E  0E01               	movlw	1
  5936  003980  6F6D               	movwf	___fladd@aexp& (0+255),b
  5937  003982  D002               	goto	l1190
  5938  003984                     l1191:
  5939                           
  5940                           ; BSR set to: 0
  5941  003984  B160               	btfsc	___fladd@b& (0+255),0,b
  5942  003986  D7FB               	goto	u6780
  5943  003988                     l1190:
  5944                           
  5945                           ; BSR set to: 0
  5946  003988  516D               	movf	___fladd@aexp& (0+255),w,b
  5947  00398A  B4D8               	btfsc	status,2,c
  5948  00398C  D028               	goto	l5483
  5949                           
  5950                           ; BSR set to: 0
  5951  00398E  0E01               	movlw	1
  5952  003990  2760               	addwf	___fladd@b& (0+255),f,b
  5953  003992  0E00               	movlw	0
  5954  003994  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5955  003996  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5956  003998  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5957                           
  5958                           ; BSR set to: 0
  5959  00399A  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5960  00399C  D020               	goto	l5483
  5961                           
  5962                           ; BSR set to: 0
  5963  00399E  0060  F180  F068   	movff	___fladd@b,??___fladd
  5964  0039A4  0060  F184  F069   	movff	___fladd@b+1,??___fladd+1
  5965  0039AA  0060  F188  F06A   	movff	___fladd@b+2,??___fladd+2
  5966  0039B0  0060  F18C  F06B   	movff	___fladd@b+3,??___fladd+3
  5967  0039B6  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  5968  0039B8  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  5969  0039BA  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  5970  0039BC  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  5971  0039BE  3368               	rrcf	??___fladd& (0+255),f,b
  5972  0039C0  0060  F1A0  F060   	movff	??___fladd,___fladd@b
  5973  0039C6  0060  F1A4  F061   	movff	??___fladd+1,___fladd@b+1
  5974  0039CC  0060  F1A8  F062   	movff	??___fladd+2,___fladd@b+2
  5975  0039D2  0060  F1AC  F063   	movff	??___fladd+3,___fladd@b+3
  5976  0039D8  296E               	incf	___fladd@bexp& (0+255),w,b
  5977  0039DA  A4D8               	btfss	status,2,c
  5978                           
  5979                           ; BSR set to: 0
  5980  0039DC  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5981  0039DE                     l5483:
  5982                           
  5983                           ; BSR set to: 0
  5984  0039DE  296E               	incf	___fladd@bexp& (0+255),w,b
  5985  0039E0  B4D8               	btfsc	status,2,c
  5986  0039E2  D003               	goto	u6840
  5987                           
  5988                           ; BSR set to: 0
  5989  0039E4  516E               	movf	___fladd@bexp& (0+255),w,b
  5990  0039E6  A4D8               	btfss	status,2,c
  5991  0039E8  D00D               	goto	l5491
  5992  0039EA                     u6840:
  5993                           
  5994                           ; BSR set to: 0
  5995  0039EA  0E00               	movlw	0
  5996  0039EC  6F60               	movwf	___fladd@b& (0+255),b
  5997  0039EE  0E00               	movlw	0
  5998  0039F0  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5999  0039F2  0E00               	movlw	0
  6000  0039F4  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6001  0039F6  0E00               	movlw	0
  6002  0039F8  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6003  0039FA  516E               	movf	___fladd@bexp& (0+255),w,b
  6004  0039FC  A4D8               	btfss	status,2,c
  6005  0039FE  D002               	goto	l5491
  6006                           
  6007                           ; BSR set to: 0
  6008  003A00  0E00               	movlw	0
  6009  003A02  6F6C               	movwf	___fladd@signs& (0+255),b
  6010  003A04                     l5491:
  6011                           
  6012                           ; BSR set to: 0
  6013  003A04  A16E               	btfss	___fladd@bexp& (0+255),0,b
  6014  003A06  D002               	goto	l5495
  6015                           
  6016                           ; BSR set to: 0
  6017  003A08  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  6018  003A0A  D001               	goto	l5497
  6019  003A0C                     l5495:
  6020                           
  6021                           ; BSR set to: 0
  6022  003A0C  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  6023  003A0E                     l5497:
  6024                           
  6025                           ; BSR set to: 0
  6026  003A0E  90D8               	bcf	status,0,c
  6027  003A10  316E               	rrcf	___fladd@bexp& (0+255),w,b
  6028  003A12  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6029                           
  6030                           ; BSR set to: 0
  6031  003A14  BF6C               	btfsc	___fladd@signs& (0+255),7,b
  6032                           
  6033                           ; BSR set to: 0
  6034  003A16  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  6035                           
  6036                           ; BSR set to: 0
  6037  003A18  0060  F180  F060   	movff	___fladd@b,?___fladd
  6038  003A1E  0060  F184  F061   	movff	___fladd@b+1,?___fladd+1
  6039  003A24  0060  F188  F062   	movff	___fladd@b+2,?___fladd+2
  6040  003A2A  0060  F18C  F063   	movff	___fladd@b+3,?___fladd+3
  6041                           
  6042                           ; BSR set to: 0
  6043  003A30  0012               	return		;funcret
  6044  003A32                     __end_of___fladd:
  6045                           	opt callstack 0
  6046                           
  6047 ;; *************** function ___flneg *****************
  6048 ;; Defined at:
  6049 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  f1              4    0[BANK0 ] unsigned char 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;		None
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  4    0[BANK0 ] unsigned char 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2, status,0
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6066 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6067 ;;Total ram usage:        4 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; Hardware stack levels required when called:    2
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_efgtoa
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text21
  6078  005158                     __ptext21:
  6079                           	opt callstack 0
  6080  005158                     ___flneg:
  6081                           	opt callstack 23
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;incstack = 0
  6085  005158  0100               	movlb	0	; () banked
  6086  00515A  5160               	movf	___flneg@f1& (0+255),w,b
  6087  00515C  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6088  00515E  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6089  005160  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6090  005162  B4D8               	btfsc	status,2,c
  6091  005164  D008               	goto	l5939
  6092                           
  6093                           ; BSR set to: 0
  6094  005166  0E00               	movlw	0
  6095  005168  1B60               	xorwf	___flneg@f1& (0+255),f,b
  6096  00516A  0E00               	movlw	0
  6097  00516C  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6098  00516E  0E00               	movlw	0
  6099  005170  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6100  005172  0E80               	movlw	128
  6101  005174  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6102  005176                     l5939:
  6103                           
  6104                           ; BSR set to: 0
  6105  005176  0060  F180  F060   	movff	___flneg@f1,?___flneg
  6106  00517C  0060  F184  F061   	movff	___flneg@f1+1,?___flneg+1
  6107  005182  0060  F188  F062   	movff	___flneg@f1+2,?___flneg+2
  6108  005188  0060  F18C  F063   	movff	___flneg@f1+3,?___flneg+3
  6109                           
  6110                           ; BSR set to: 0
  6111  00518E  0012               	return		;funcret
  6112  005190                     __end_of___flneg:
  6113                           	opt callstack 0
  6114                           
  6115 ;; *************** function ___flmul *****************
  6116 ;; Defined at:
  6117 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  b               4    0[BANK0 ] unsigned char 
  6120 ;;  a               4    4[BANK0 ] unsigned char 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  prod            4   19[BANK0 ] struct .
  6123 ;;  grs             4   14[BANK0 ] unsigned long 
  6124 ;;  temp            2   23[BANK0 ] struct .
  6125 ;;  bexp            1   18[BANK0 ] unsigned char 
  6126 ;;  aexp            1   13[BANK0 ] unsigned char 
  6127 ;;  sign            1   12[BANK0 ] unsigned char 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  4    0[BANK0 ] unsigned char 
  6130 ;; Registers used:
  6131 ;;		wreg, status,2, status,0, prodl, prodh
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6137 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6138 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6139 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6140 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6141 ;;Total ram usage:       25 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    2
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_efgtoa
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text22
  6152  002BEC                     __ptext22:
  6153                           	opt callstack 0
  6154  002BEC                     ___flmul:
  6155                           	opt callstack 23
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;incstack = 0
  6159  002BEC  0100               	movlb	0	; () banked
  6160  002BEE  5163               	movf	(___flmul@b+3)& (0+255),w,b
  6161  002BF0  0B80               	andlw	128
  6162  002BF2  6F6C               	movwf	___flmul@sign& (0+255),b
  6163  002BF4  5163               	movf	(___flmul@b+3)& (0+255),w,b
  6164  002BF6  2563               	addwf	(___flmul@b+3)& (0+255),w,b
  6165  002BF8  6F72               	movwf	___flmul@bexp& (0+255),b
  6166                           
  6167                           ; BSR set to: 0
  6168  002BFA  BF62               	btfsc	(___flmul@b+2)& (0+255),7,b
  6169                           
  6170                           ; BSR set to: 0
  6171  002BFC  8172               	bsf	___flmul@bexp& (0+255),0,b
  6172                           
  6173                           ; BSR set to: 0
  6174  002BFE  5172               	movf	___flmul@bexp& (0+255),w,b
  6175  002C00  B4D8               	btfsc	status,2,c
  6176  002C02  D00D               	goto	l5717
  6177                           
  6178                           ; BSR set to: 0
  6179  002C04  2972               	incf	___flmul@bexp& (0+255),w,b
  6180  002C06  A4D8               	btfss	status,2,c
  6181  002C08  D008               	goto	l5715
  6182                           
  6183                           ; BSR set to: 0
  6184  002C0A  0E00               	movlw	0
  6185  002C0C  6F60               	movwf	___flmul@b& (0+255),b
  6186  002C0E  0E00               	movlw	0
  6187  002C10  6F61               	movwf	(___flmul@b+1)& (0+255),b
  6188  002C12  0E00               	movlw	0
  6189  002C14  6F62               	movwf	(___flmul@b+2)& (0+255),b
  6190  002C16  0E00               	movlw	0
  6191  002C18  6F63               	movwf	(___flmul@b+3)& (0+255),b
  6192  002C1A                     l5715:
  6193                           
  6194                           ; BSR set to: 0
  6195  002C1A  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
  6196  002C1C  D008               	goto	l5719
  6197  002C1E                     l5717:
  6198                           
  6199                           ; BSR set to: 0
  6200  002C1E  0E00               	movlw	0
  6201  002C20  6F60               	movwf	___flmul@b& (0+255),b
  6202  002C22  0E00               	movlw	0
  6203  002C24  6F61               	movwf	(___flmul@b+1)& (0+255),b
  6204  002C26  0E00               	movlw	0
  6205  002C28  6F62               	movwf	(___flmul@b+2)& (0+255),b
  6206  002C2A  0E00               	movlw	0
  6207  002C2C  6F63               	movwf	(___flmul@b+3)& (0+255),b
  6208  002C2E                     l5719:
  6209                           
  6210                           ; BSR set to: 0
  6211  002C2E  5167               	movf	(___flmul@a+3)& (0+255),w,b
  6212  002C30  0B80               	andlw	128
  6213  002C32  1B6C               	xorwf	___flmul@sign& (0+255),f,b
  6214                           
  6215                           ; BSR set to: 0
  6216  002C34  5167               	movf	(___flmul@a+3)& (0+255),w,b
  6217  002C36  2567               	addwf	(___flmul@a+3)& (0+255),w,b
  6218  002C38  6F6D               	movwf	___flmul@aexp& (0+255),b
  6219                           
  6220                           ; BSR set to: 0
  6221  002C3A  BF66               	btfsc	(___flmul@a+2)& (0+255),7,b
  6222                           
  6223                           ; BSR set to: 0
  6224  002C3C  816D               	bsf	___flmul@aexp& (0+255),0,b
  6225                           
  6226                           ; BSR set to: 0
  6227  002C3E  516D               	movf	___flmul@aexp& (0+255),w,b
  6228  002C40  B4D8               	btfsc	status,2,c
  6229  002C42  D00D               	goto	l5735
  6230                           
  6231                           ; BSR set to: 0
  6232  002C44  296D               	incf	___flmul@aexp& (0+255),w,b
  6233  002C46  A4D8               	btfss	status,2,c
  6234  002C48  D008               	goto	l5733
  6235                           
  6236                           ; BSR set to: 0
  6237  002C4A  0E00               	movlw	0
  6238  002C4C  6F64               	movwf	___flmul@a& (0+255),b
  6239  002C4E  0E00               	movlw	0
  6240  002C50  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6241  002C52  0E00               	movlw	0
  6242  002C54  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6243  002C56  0E00               	movlw	0
  6244  002C58  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6245  002C5A                     l5733:
  6246                           
  6247                           ; BSR set to: 0
  6248  002C5A  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
  6249  002C5C  D008               	goto	l1250
  6250  002C5E                     l5735:
  6251                           
  6252                           ; BSR set to: 0
  6253  002C5E  0E00               	movlw	0
  6254  002C60  6F64               	movwf	___flmul@a& (0+255),b
  6255  002C62  0E00               	movlw	0
  6256  002C64  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6257  002C66  0E00               	movlw	0
  6258  002C68  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6259  002C6A  0E00               	movlw	0
  6260  002C6C  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6261  002C6E                     l1250:
  6262                           
  6263                           ; BSR set to: 0
  6264  002C6E  516D               	movf	___flmul@aexp& (0+255),w,b
  6265  002C70  B4D8               	btfsc	status,2,c
  6266  002C72  D003               	goto	u7340
  6267                           
  6268                           ; BSR set to: 0
  6269  002C74  5172               	movf	___flmul@bexp& (0+255),w,b
  6270  002C76  A4D8               	btfss	status,2,c
  6271  002C78  D009               	goto	l5743
  6272  002C7A                     u7340:
  6273                           
  6274                           ; BSR set to: 0
  6275  002C7A  0E00               	movlw	0
  6276  002C7C  6F60               	movwf	?___flmul& (0+255),b
  6277  002C7E  0E00               	movlw	0
  6278  002C80  6F61               	movwf	(?___flmul+1)& (0+255),b
  6279  002C82  0E00               	movlw	0
  6280  002C84  6F62               	movwf	(?___flmul+2)& (0+255),b
  6281  002C86  0E00               	movlw	0
  6282  002C88  6F63               	movwf	(?___flmul+3)& (0+255),b
  6283  002C8A  0012               	return	
  6284  002C8C                     l5743:
  6285                           
  6286                           ; BSR set to: 0
  6287  002C8C  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6288  002C8E  0360               	mulwf	___flmul@b& (0+255),b
  6289  002C90  006F FFCC  F077    	movff	prodl,___flmul@temp
  6290  002C96  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6291                           
  6292                           ; BSR set to: 0
  6293  002C9C  5177               	movf	___flmul@temp& (0+255),w,b
  6294  002C9E  6F6E               	movwf	___flmul@grs& (0+255),b
  6295  002CA0  6B6F               	clrf	(___flmul@grs+1)& (0+255),b
  6296  002CA2  6B70               	clrf	(___flmul@grs+2)& (0+255),b
  6297  002CA4  6B71               	clrf	(___flmul@grs+3)& (0+255),b
  6298                           
  6299                           ; BSR set to: 0
  6300  002CA6  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6301  002CA8  6F73               	movwf	___flmul@prod& (0+255),b
  6302  002CAA  6B74               	clrf	(___flmul@prod+1)& (0+255),b
  6303  002CAC  6B75               	clrf	(___flmul@prod+2)& (0+255),b
  6304  002CAE  6B76               	clrf	(___flmul@prod+3)& (0+255),b
  6305  002CB0  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6306  002CB2  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6307  002CB4  006F FFCC  F077    	movff	prodl,___flmul@temp
  6308  002CBA  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6309                           
  6310                           ; BSR set to: 0
  6311  002CC0  5177               	movf	___flmul@temp& (0+255),w,b
  6312  002CC2  276E               	addwf	___flmul@grs& (0+255),f,b
  6313  002CC4  0E00               	movlw	0
  6314  002CC6  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6315  002CC8  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6316  002CCA  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6317                           
  6318                           ; BSR set to: 0
  6319  002CCC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6320  002CCE  2773               	addwf	___flmul@prod& (0+255),f,b
  6321  002CD0  0E00               	movlw	0
  6322  002CD2  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6323  002CD4  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6324  002CD6  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6325  002CD8  5164               	movf	___flmul@a& (0+255),w,b
  6326  002CDA  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6327  002CDC  006F FFCC  F077    	movff	prodl,___flmul@temp
  6328  002CE2  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6329                           
  6330                           ; BSR set to: 0
  6331  002CE8  5177               	movf	___flmul@temp& (0+255),w,b
  6332  002CEA  276E               	addwf	___flmul@grs& (0+255),f,b
  6333  002CEC  0E00               	movlw	0
  6334  002CEE  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6335  002CF0  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6336  002CF2  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6337                           
  6338                           ; BSR set to: 0
  6339  002CF4  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6340  002CF6  2773               	addwf	___flmul@prod& (0+255),f,b
  6341  002CF8  0E00               	movlw	0
  6342  002CFA  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6343  002CFC  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6344  002CFE  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6345                           
  6346                           ; BSR set to: 0
  6347  002D00  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6348  002D06  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6349  002D0C  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6350  002D12  6B6E               	clrf	___flmul@grs& (0+255),b
  6351                           
  6352                           ; BSR set to: 0
  6353  002D14  5164               	movf	___flmul@a& (0+255),w,b
  6354  002D16  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6355  002D18  006F FFCC  F077    	movff	prodl,___flmul@temp
  6356  002D1E  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6357                           
  6358                           ; BSR set to: 0
  6359  002D24  5177               	movf	___flmul@temp& (0+255),w,b
  6360  002D26  276E               	addwf	___flmul@grs& (0+255),f,b
  6361  002D28  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6362  002D2A  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6363  002D2C  0E00               	movlw	0
  6364  002D2E  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6365  002D30  0E00               	movlw	0
  6366  002D32  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6367                           
  6368                           ; BSR set to: 0
  6369  002D34  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6370  002D36  0360               	mulwf	___flmul@b& (0+255),b
  6371  002D38  006F FFCC  F077    	movff	prodl,___flmul@temp
  6372  002D3E  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6373                           
  6374                           ; BSR set to: 0
  6375  002D44  5177               	movf	___flmul@temp& (0+255),w,b
  6376  002D46  276E               	addwf	___flmul@grs& (0+255),f,b
  6377  002D48  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6378  002D4A  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6379  002D4C  0E00               	movlw	0
  6380  002D4E  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6381  002D50  0E00               	movlw	0
  6382  002D52  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6383                           
  6384                           ; BSR set to: 0
  6385  002D54  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6386  002D5A  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6387  002D60  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6388  002D66  6B6E               	clrf	___flmul@grs& (0+255),b
  6389  002D68  5164               	movf	___flmul@a& (0+255),w,b
  6390  002D6A  0360               	mulwf	___flmul@b& (0+255),b
  6391  002D6C  006F FFCC  F077    	movff	prodl,___flmul@temp
  6392  002D72  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6393                           
  6394                           ; BSR set to: 0
  6395  002D78  5177               	movf	___flmul@temp& (0+255),w,b
  6396  002D7A  276E               	addwf	___flmul@grs& (0+255),f,b
  6397  002D7C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6398  002D7E  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6399  002D80  0E00               	movlw	0
  6400  002D82  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6401  002D84  0E00               	movlw	0
  6402  002D86  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6403                           
  6404                           ; BSR set to: 0
  6405  002D88  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6406  002D8A  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6407  002D8C  006F FFCC  F077    	movff	prodl,___flmul@temp
  6408  002D92  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6409  002D98  5177               	movf	___flmul@temp& (0+255),w,b
  6410  002D9A  2773               	addwf	___flmul@prod& (0+255),f,b
  6411  002D9C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6412  002D9E  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6413  002DA0  0E00               	movlw	0
  6414  002DA2  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6415  002DA4  0E00               	movlw	0
  6416  002DA6  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6417                           
  6418                           ; BSR set to: 0
  6419  002DA8  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6420  002DAA  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6421  002DAC  006F FFCC  F077    	movff	prodl,___flmul@temp
  6422  002DB2  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6423                           
  6424                           ; BSR set to: 0
  6425  002DB8  5177               	movf	___flmul@temp& (0+255),w,b
  6426  002DBA  2773               	addwf	___flmul@prod& (0+255),f,b
  6427  002DBC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6428  002DBE  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6429  002DC0  0E00               	movlw	0
  6430  002DC2  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6431  002DC4  0E00               	movlw	0
  6432  002DC6  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6433  002DC8  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6434  002DCA  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6435  002DCC  006F FFCC  F077    	movff	prodl,___flmul@temp
  6436  002DD2  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6437                           
  6438                           ; BSR set to: 0
  6439  002DD8  5177               	movf	___flmul@temp& (0+255),w,b
  6440  002DDA  6F68               	movwf	??___flmul& (0+255),b
  6441  002DDC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6442  002DDE  6F69               	movwf	(??___flmul+1)& (0+255),b
  6443  002DE0  6B6A               	clrf	(??___flmul+2)& (0+255),b
  6444  002DE2  6B6B               	clrf	(??___flmul+3)& (0+255),b
  6445  002DE4  0060  F1A8  F06B   	movff	??___flmul+2,??___flmul+3
  6446  002DEA  0060  F1A4  F06A   	movff	??___flmul+1,??___flmul+2
  6447  002DF0  0060  F1A0  F069   	movff	??___flmul,??___flmul+1
  6448  002DF6  6B68               	clrf	??___flmul& (0+255),b
  6449  002DF8  5168               	movf	??___flmul& (0+255),w,b
  6450  002DFA  2773               	addwf	___flmul@prod& (0+255),f,b
  6451  002DFC  5169               	movf	(??___flmul+1)& (0+255),w,b
  6452  002DFE  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6453  002E00  516A               	movf	(??___flmul+2)& (0+255),w,b
  6454  002E02  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6455  002E04  516B               	movf	(??___flmul+3)& (0+255),w,b
  6456  002E06  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6457                           
  6458                           ; BSR set to: 0
  6459  002E08  0060  F1B8  F068   	movff	___flmul@grs,??___flmul
  6460  002E0E  0060  F1BC  F069   	movff	___flmul@grs+1,??___flmul+1
  6461  002E14  0060  F1C0  F06A   	movff	___flmul@grs+2,??___flmul+2
  6462  002E1A  0060  F1C4  F06B   	movff	___flmul@grs+3,??___flmul+3
  6463  002E20  0E19               	movlw	25
  6464  002E22  D005               	goto	u7350
  6465  002E24                     u7355:
  6466  002E24  90D8               	bcf	status,0,c
  6467  002E26  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  6468  002E28  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  6469  002E2A  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  6470  002E2C  3368               	rrcf	??___flmul& (0+255),f,b
  6471  002E2E                     u7350:
  6472  002E2E  2EE8               	decfsz	wreg,f,c
  6473  002E30  D7F9               	goto	u7355
  6474  002E32  5168               	movf	??___flmul& (0+255),w,b
  6475  002E34  2773               	addwf	___flmul@prod& (0+255),f,b
  6476  002E36  5169               	movf	(??___flmul+1)& (0+255),w,b
  6477  002E38  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6478  002E3A  516A               	movf	(??___flmul+2)& (0+255),w,b
  6479  002E3C  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6480  002E3E  516B               	movf	(??___flmul+3)& (0+255),w,b
  6481  002E40  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6482                           
  6483                           ; BSR set to: 0
  6484  002E42  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6485  002E48  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6486  002E4E  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6487  002E54  6B6E               	clrf	___flmul@grs& (0+255),b
  6488                           
  6489                           ; BSR set to: 0
  6490  002E56  516D               	movf	___flmul@aexp& (0+255),w,b
  6491  002E58  0060  F1C8  F068   	movff	___flmul@bexp,??___flmul
  6492  002E5E  6B69               	clrf	(??___flmul+1)& (0+255),b
  6493  002E60  2768               	addwf	??___flmul& (0+255),f,b
  6494  002E62  0E00               	movlw	0
  6495  002E64  2369               	addwfc	(??___flmul+1)& (0+255),f,b
  6496  002E66  0E82               	movlw	130
  6497  002E68  2568               	addwf	??___flmul& (0+255),w,b
  6498  002E6A  6F77               	movwf	___flmul@temp& (0+255),b
  6499  002E6C  0EFF               	movlw	255
  6500  002E6E  2169               	addwfc	(??___flmul+1)& (0+255),w,b
  6501  002E70  6F78               	movwf	(___flmul@temp+1)& (0+255),b
  6502  002E72  D00F               	goto	l5791
  6503  002E74                     l5785:
  6504                           
  6505                           ; BSR set to: 0
  6506  002E74  90D8               	bcf	status,0,c
  6507  002E76  3773               	rlcf	___flmul@prod& (0+255),f,b
  6508  002E78  3774               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6509  002E7A  3775               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6510  002E7C  3776               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6511                           
  6512                           ; BSR set to: 0
  6513  002E7E  BF71               	btfsc	(___flmul@grs+3)& (0+255),7,b
  6514                           
  6515                           ; BSR set to: 0
  6516  002E80  8173               	bsf	___flmul@prod& (0+255),0,b
  6517                           
  6518                           ; BSR set to: 0
  6519  002E82  90D8               	bcf	status,0,c
  6520  002E84  376E               	rlcf	___flmul@grs& (0+255),f,b
  6521  002E86  376F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6522  002E88  3770               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6523  002E8A  3771               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6524  002E8C  0777               	decf	___flmul@temp& (0+255),f,b
  6525  002E8E  A0D8               	btfss	status,0,c
  6526  002E90  0778               	decf	(___flmul@temp+1)& (0+255),f,b
  6527  002E92                     l5791:
  6528                           
  6529                           ; BSR set to: 0
  6530  002E92  AF75               	btfss	(___flmul@prod+2)& (0+255),7,b
  6531  002E94  D7EF               	goto	l5785
  6532                           
  6533                           ; BSR set to: 0
  6534  002E96  0E00               	movlw	0
  6535  002E98  6F6D               	movwf	___flmul@aexp& (0+255),b
  6536                           
  6537                           ; BSR set to: 0
  6538  002E9A  AF71               	btfss	(___flmul@grs+3)& (0+255),7,b
  6539  002E9C  D017               	goto	l1259
  6540                           
  6541                           ; BSR set to: 0
  6542  002E9E  0EFF               	movlw	255
  6543  002EA0  156E               	andwf	___flmul@grs& (0+255),w,b
  6544  002EA2  6F68               	movwf	??___flmul& (0+255),b
  6545  002EA4  0EFF               	movlw	255
  6546  002EA6  156F               	andwf	(___flmul@grs+1)& (0+255),w,b
  6547  002EA8  6F69               	movwf	(??___flmul+1)& (0+255),b
  6548  002EAA  0EFF               	movlw	255
  6549  002EAC  1570               	andwf	(___flmul@grs+2)& (0+255),w,b
  6550  002EAE  6F6A               	movwf	(??___flmul+2)& (0+255),b
  6551  002EB0  0E7F               	movlw	127
  6552  002EB2  1571               	andwf	(___flmul@grs+3)& (0+255),w,b
  6553  002EB4  6F6B               	movwf	(??___flmul+3)& (0+255),b
  6554  002EB6  5168               	movf	??___flmul& (0+255),w,b
  6555  002EB8  1169               	iorwf	(??___flmul+1)& (0+255),w,b
  6556  002EBA  116A               	iorwf	(??___flmul+2)& (0+255),w,b
  6557  002EBC  116B               	iorwf	(??___flmul+3)& (0+255),w,b
  6558  002EBE  B4D8               	btfsc	status,2,c
  6559  002EC0  D003               	goto	l1260
  6560  002EC2                     u7390:
  6561                           
  6562                           ; BSR set to: 0
  6563  002EC2  0E01               	movlw	1
  6564  002EC4  6F6D               	movwf	___flmul@aexp& (0+255),b
  6565  002EC6  D002               	goto	l1259
  6566  002EC8                     l1260:
  6567                           
  6568                           ; BSR set to: 0
  6569  002EC8  B173               	btfsc	___flmul@prod& (0+255),0,b
  6570  002ECA  D7FB               	goto	u7390
  6571  002ECC                     l1259:
  6572                           
  6573                           ; BSR set to: 0
  6574  002ECC  516D               	movf	___flmul@aexp& (0+255),w,b
  6575  002ECE  B4D8               	btfsc	status,2,c
  6576  002ED0  D027               	goto	l5811
  6577                           
  6578                           ; BSR set to: 0
  6579  002ED2  0E01               	movlw	1
  6580  002ED4  2773               	addwf	___flmul@prod& (0+255),f,b
  6581  002ED6  0E00               	movlw	0
  6582  002ED8  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6583  002EDA  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6584  002EDC  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6585                           
  6586                           ; BSR set to: 0
  6587  002EDE  A176               	btfss	(___flmul@prod+3)& (0+255),0,b
  6588  002EE0  D01F               	goto	l5811
  6589                           
  6590                           ; BSR set to: 0
  6591  002EE2  0060  F1CC  F068   	movff	___flmul@prod,??___flmul
  6592  002EE8  0060  F1D0  F069   	movff	___flmul@prod+1,??___flmul+1
  6593  002EEE  0060  F1D4  F06A   	movff	___flmul@prod+2,??___flmul+2
  6594  002EF4  0060  F1D8  F06B   	movff	___flmul@prod+3,??___flmul+3
  6595  002EFA  356B               	rlcf	(??___flmul+3)& (0+255),w,b
  6596  002EFC  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  6597  002EFE  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  6598  002F00  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  6599  002F02  3368               	rrcf	??___flmul& (0+255),f,b
  6600  002F04  0060  F1A0  F073   	movff	??___flmul,___flmul@prod
  6601  002F0A  0060  F1A4  F074   	movff	??___flmul+1,___flmul@prod+1
  6602  002F10  0060  F1A8  F075   	movff	??___flmul+2,___flmul@prod+2
  6603  002F16  0060  F1AC  F076   	movff	??___flmul+3,___flmul@prod+3
  6604                           
  6605                           ; BSR set to: 0
  6606  002F1C  4B77               	infsnz	___flmul@temp& (0+255),f,b
  6607  002F1E  2B78               	incf	(___flmul@temp+1)& (0+255),f,b
  6608  002F20                     l5811:
  6609                           
  6610                           ; BSR set to: 0
  6611  002F20  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6612  002F22  D00D               	goto	l5815
  6613  002F24  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6614  002F26  E103               	bnz	u7430
  6615  002F28  2977               	incf	___flmul@temp& (0+255),w,b
  6616  002F2A  A0D8               	btfss	status,0,c
  6617  002F2C  D008               	goto	l5815
  6618  002F2E                     u7430:
  6619                           
  6620                           ; BSR set to: 0
  6621  002F2E  0E00               	movlw	0
  6622  002F30  6F73               	movwf	___flmul@prod& (0+255),b
  6623  002F32  0E00               	movlw	0
  6624  002F34  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6625  002F36  0E80               	movlw	128
  6626  002F38  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6627  002F3A  0E7F               	movlw	127
  6628  002F3C  D021               	goto	L9
  6629  002F3E                     l5815:
  6630                           
  6631                           ; BSR set to: 0
  6632  002F3E  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6633  002F40  D005               	goto	u7440
  6634  002F42  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6635  002F44  E10E               	bnz	l1267
  6636  002F46  0577               	decf	___flmul@temp& (0+255),w,b
  6637  002F48  B0D8               	btfsc	status,0,c
  6638  002F4A  D00B               	goto	l1267
  6639  002F4C                     u7440:
  6640                           
  6641                           ; BSR set to: 0
  6642  002F4C  0E00               	movlw	0
  6643  002F4E  6F73               	movwf	___flmul@prod& (0+255),b
  6644  002F50  0E00               	movlw	0
  6645  002F52  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6646  002F54  0E00               	movlw	0
  6647  002F56  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6648  002F58  0E00               	movlw	0
  6649  002F5A  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6650  002F5C  0E00               	movlw	0
  6651  002F5E  6F6C               	movwf	___flmul@sign& (0+255),b
  6652  002F60  D010               	goto	l5827
  6653  002F62                     l1267:
  6654                           
  6655                           ; BSR set to: 0
  6656  002F62  0060  F1DC  F072   	movff	___flmul@temp,___flmul@bexp
  6657                           
  6658                           ; BSR set to: 0
  6659  002F68  0EFF               	movlw	255
  6660  002F6A  1773               	andwf	___flmul@prod& (0+255),f,b
  6661  002F6C  0EFF               	movlw	255
  6662  002F6E  1774               	andwf	(___flmul@prod+1)& (0+255),f,b
  6663  002F70  0E7F               	movlw	127
  6664  002F72  1775               	andwf	(___flmul@prod+2)& (0+255),f,b
  6665  002F74  0E00               	movlw	0
  6666  002F76  1776               	andwf	(___flmul@prod+3)& (0+255),f,b
  6667                           
  6668                           ; BSR set to: 0
  6669  002F78  B172               	btfsc	___flmul@bexp& (0+255),0,b
  6670                           
  6671                           ; BSR set to: 0
  6672  002F7A  8F75               	bsf	(___flmul@prod+2)& (0+255),7,b
  6673                           
  6674                           ; BSR set to: 0
  6675  002F7C  90D8               	bcf	status,0,c
  6676  002F7E  3172               	rrcf	___flmul@bexp& (0+255),w,b
  6677  002F80                     L9:
  6678  002F80  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6679  002F82                     l5827:
  6680                           
  6681                           ; BSR set to: 0
  6682  002F82  516C               	movf	___flmul@sign& (0+255),w,b
  6683  002F84  1376               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6684                           
  6685                           ; BSR set to: 0
  6686  002F86  0060  F1CC  F060   	movff	___flmul@prod,?___flmul
  6687  002F8C  0060  F1D0  F061   	movff	___flmul@prod+1,?___flmul+1
  6688  002F92  0060  F1D4  F062   	movff	___flmul@prod+2,?___flmul+2
  6689  002F98  0060  F1D8  F063   	movff	___flmul@prod+3,?___flmul+3
  6690                           
  6691                           ; BSR set to: 0
  6692  002F9E  0012               	return		;funcret
  6693  002FA0                     __end_of___flmul:
  6694                           	opt callstack 0
  6695                           
  6696 ;; *************** function ___flge *****************
  6697 ;; Defined at:
  6698 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  ff1             4   25[BANK0 ] unsigned char 
  6701 ;;  ff2             4   29[BANK0 ] unsigned char 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;		None               void
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6713 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6715 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6716 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6717 ;;Total ram usage:       12 bytes
  6718 ;; Hardware stack levels used:    1
  6719 ;; Hardware stack levels required when called:    2
  6720 ;; This function calls:
  6721 ;;		Nothing
  6722 ;; This function is called by:
  6723 ;;		_efgtoa
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text23
  6728  0045A6                     __ptext23:
  6729                           	opt callstack 0
  6730  0045A6                     ___flge:
  6731                           	opt callstack 23
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;incstack = 0
  6735  0045A6  0E00               	movlw	0
  6736  0045A8  0100               	movlb	0	; () banked
  6737  0045AA  1579               	andwf	___flge@ff1& (0+255),w,b
  6738  0045AC  6F81               	movwf	??___flge& (0+255),b
  6739  0045AE  0E00               	movlw	0
  6740  0045B0  157A               	andwf	(___flge@ff1+1)& (0+255),w,b
  6741  0045B2  6F82               	movwf	(??___flge+1)& (0+255),b
  6742  0045B4  0E80               	movlw	128
  6743  0045B6  157B               	andwf	(___flge@ff1+2)& (0+255),w,b
  6744  0045B8  6F83               	movwf	(??___flge+2)& (0+255),b
  6745  0045BA  0E7F               	movlw	127
  6746  0045BC  157C               	andwf	(___flge@ff1+3)& (0+255),w,b
  6747  0045BE  6F84               	movwf	(??___flge+3)& (0+255),b
  6748  0045C0  5181               	movf	??___flge& (0+255),w,b
  6749  0045C2  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6750  0045C4  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6751  0045C6  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6752  0045C8  A4D8               	btfss	status,2,c
  6753  0045CA  D008               	goto	l4055
  6754                           
  6755                           ; BSR set to: 0
  6756  0045CC  0E00               	movlw	0
  6757  0045CE  6F79               	movwf	___flge@ff1& (0+255),b
  6758  0045D0  0E00               	movlw	0
  6759  0045D2  6F7A               	movwf	(___flge@ff1+1)& (0+255),b
  6760  0045D4  0E00               	movlw	0
  6761  0045D6  6F7B               	movwf	(___flge@ff1+2)& (0+255),b
  6762  0045D8  0E00               	movlw	0
  6763  0045DA  6F7C               	movwf	(___flge@ff1+3)& (0+255),b
  6764  0045DC                     l4055:
  6765                           
  6766                           ; BSR set to: 0
  6767  0045DC  0E00               	movlw	0
  6768  0045DE  157D               	andwf	___flge@ff2& (0+255),w,b
  6769  0045E0  6F81               	movwf	??___flge& (0+255),b
  6770  0045E2  0E00               	movlw	0
  6771  0045E4  157E               	andwf	(___flge@ff2+1)& (0+255),w,b
  6772  0045E6  6F82               	movwf	(??___flge+1)& (0+255),b
  6773  0045E8  0E80               	movlw	128
  6774  0045EA  157F               	andwf	(___flge@ff2+2)& (0+255),w,b
  6775  0045EC  6F83               	movwf	(??___flge+2)& (0+255),b
  6776  0045EE  0E7F               	movlw	127
  6777  0045F0  1580               	andwf	(___flge@ff2+3)& (0+255),w,b
  6778  0045F2  6F84               	movwf	(??___flge+3)& (0+255),b
  6779  0045F4  5181               	movf	??___flge& (0+255),w,b
  6780  0045F6  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6781  0045F8  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6782  0045FA  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6783  0045FC  A4D8               	btfss	status,2,c
  6784  0045FE  D008               	goto	l4059
  6785                           
  6786                           ; BSR set to: 0
  6787  004600  0E00               	movlw	0
  6788  004602  6F7D               	movwf	___flge@ff2& (0+255),b
  6789  004604  0E00               	movlw	0
  6790  004606  6F7E               	movwf	(___flge@ff2+1)& (0+255),b
  6791  004608  0E00               	movlw	0
  6792  00460A  6F7F               	movwf	(___flge@ff2+2)& (0+255),b
  6793  00460C  0E00               	movlw	0
  6794  00460E  6F80               	movwf	(___flge@ff2+3)& (0+255),b
  6795  004610                     l4059:
  6796                           
  6797                           ; BSR set to: 0
  6798  004610  AF7C               	btfss	(___flge@ff1+3)& (0+255),7,b
  6799  004612  D009               	goto	l4063
  6800                           
  6801                           ; BSR set to: 0
  6802  004614  6D79               	negf	___flge@ff1& (0+255),b
  6803  004616  1F7A               	comf	(___flge@ff1+1)& (0+255),f,b
  6804  004618  B0D8               	btfsc	status,0,c
  6805  00461A  2B7A               	incf	(___flge@ff1+1)& (0+255),f,b
  6806  00461C  1F7B               	comf	(___flge@ff1+2)& (0+255),f,b
  6807  00461E  B0D8               	btfsc	status,0,c
  6808  004620  2B7B               	incf	(___flge@ff1+2)& (0+255),f,b
  6809  004622  0E80               	movlw	128
  6810  004624  577C               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6811  004626                     l4063:
  6812                           
  6813                           ; BSR set to: 0
  6814  004626  AF80               	btfss	(___flge@ff2+3)& (0+255),7,b
  6815  004628  D009               	goto	l901
  6816                           
  6817                           ; BSR set to: 0
  6818  00462A  6D7D               	negf	___flge@ff2& (0+255),b
  6819  00462C  1F7E               	comf	(___flge@ff2+1)& (0+255),f,b
  6820  00462E  B0D8               	btfsc	status,0,c
  6821  004630  2B7E               	incf	(___flge@ff2+1)& (0+255),f,b
  6822  004632  1F7F               	comf	(___flge@ff2+2)& (0+255),f,b
  6823  004634  B0D8               	btfsc	status,0,c
  6824  004636  2B7F               	incf	(___flge@ff2+2)& (0+255),f,b
  6825  004638  0E80               	movlw	128
  6826  00463A  5780               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6827  00463C                     l901:
  6828                           
  6829                           ; BSR set to: 0
  6830  00463C  0E00               	movlw	0
  6831  00463E  1B79               	xorwf	___flge@ff1& (0+255),f,b
  6832  004640  0E00               	movlw	0
  6833  004642  1B7A               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6834  004644  0E00               	movlw	0
  6835  004646  1B7B               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6836  004648  0E80               	movlw	128
  6837  00464A  1B7C               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6838  00464C  0E00               	movlw	0
  6839  00464E  1B7D               	xorwf	___flge@ff2& (0+255),f,b
  6840  004650  0E00               	movlw	0
  6841  004652  1B7E               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6842  004654  0E00               	movlw	0
  6843  004656  1B7F               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6844  004658  0E80               	movlw	128
  6845  00465A  1B80               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6846  00465C  517D               	movf	___flge@ff2& (0+255),w,b
  6847  00465E  5D79               	subwf	___flge@ff1& (0+255),w,b
  6848  004660  517E               	movf	(___flge@ff2+1)& (0+255),w,b
  6849  004662  597A               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6850  004664  517F               	movf	(___flge@ff2+2)& (0+255),w,b
  6851  004666  597B               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6852  004668  5180               	movf	(___flge@ff2+3)& (0+255),w,b
  6853  00466A  597C               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6854  00466C  B0D8               	btfsc	status,0,c
  6855  00466E  D002               	goto	l4069
  6856                           
  6857                           ; BSR set to: 0
  6858  004670  90D8               	bcf	status,0,c
  6859  004672  0012               	return	
  6860  004674                     l4069:
  6861                           
  6862                           ; BSR set to: 0
  6863  004674  80D8               	bsf	status,0,c
  6864                           
  6865                           ; BSR set to: 0
  6866  004676  0012               	return		;funcret
  6867  004678                     __end_of___flge:
  6868                           	opt callstack 0
  6869                           
  6870 ;; *************** function ___fleq *****************
  6871 ;; Defined at:
  6872 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;  ff1             4    0[BANK0 ] unsigned char 
  6875 ;;  ff2             4    4[BANK0 ] unsigned char 
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;		None               void
  6880 ;; Registers used:
  6881 ;;		wreg, status,2, status,0
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6887 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6889 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6890 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6891 ;;Total ram usage:       12 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:    2
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		_efgtoa
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           	psect	text24
  6902  004B86                     __ptext24:
  6903                           	opt callstack 0
  6904  004B86                     ___fleq:
  6905                           	opt callstack 23
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;incstack = 0
  6909  004B86  0E00               	movlw	0
  6910  004B88  0100               	movlb	0	; () banked
  6911  004B8A  1560               	andwf	___fleq@ff1& (0+255),w,b
  6912  004B8C  6F68               	movwf	??___fleq& (0+255),b
  6913  004B8E  0E00               	movlw	0
  6914  004B90  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6915  004B92  6F69               	movwf	(??___fleq+1)& (0+255),b
  6916  004B94  0E80               	movlw	128
  6917  004B96  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6918  004B98  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6919  004B9A  0E7F               	movlw	127
  6920  004B9C  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6921  004B9E  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6922  004BA0  5168               	movf	??___fleq& (0+255),w,b
  6923  004BA2  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6924  004BA4  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6925  004BA6  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6926  004BA8  A4D8               	btfss	status,2,c
  6927  004BAA  D008               	goto	l5923
  6928                           
  6929                           ; BSR set to: 0
  6930  004BAC  0E00               	movlw	0
  6931  004BAE  6F60               	movwf	___fleq@ff1& (0+255),b
  6932  004BB0  0E00               	movlw	0
  6933  004BB2  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6934  004BB4  0E00               	movlw	0
  6935  004BB6  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6936  004BB8  0E00               	movlw	0
  6937  004BBA  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6938  004BBC                     l5923:
  6939                           
  6940                           ; BSR set to: 0
  6941  004BBC  0E00               	movlw	0
  6942  004BBE  1564               	andwf	___fleq@ff2& (0+255),w,b
  6943  004BC0  6F68               	movwf	??___fleq& (0+255),b
  6944  004BC2  0E00               	movlw	0
  6945  004BC4  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6946  004BC6  6F69               	movwf	(??___fleq+1)& (0+255),b
  6947  004BC8  0E80               	movlw	128
  6948  004BCA  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6949  004BCC  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6950  004BCE  0E7F               	movlw	127
  6951  004BD0  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6952  004BD2  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6953  004BD4  5168               	movf	??___fleq& (0+255),w,b
  6954  004BD6  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6955  004BD8  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6956  004BDA  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6957  004BDC  A4D8               	btfss	status,2,c
  6958  004BDE  D008               	goto	l5927
  6959                           
  6960                           ; BSR set to: 0
  6961  004BE0  0E00               	movlw	0
  6962  004BE2  6F64               	movwf	___fleq@ff2& (0+255),b
  6963  004BE4  0E00               	movlw	0
  6964  004BE6  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6965  004BE8  0E00               	movlw	0
  6966  004BEA  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6967  004BEC  0E00               	movlw	0
  6968  004BEE  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6969  004BF0                     l5927:
  6970                           
  6971                           ; BSR set to: 0
  6972  004BF0  5164               	movf	___fleq@ff2& (0+255),w,b
  6973  004BF2  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6974  004BF4  E10A               	bnz	u7600
  6975  004BF6  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6976  004BF8  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6977  004BFA  E107               	bnz	u7600
  6978  004BFC  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6979  004BFE  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6980  004C00  E104               	bnz	u7600
  6981  004C02  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6982  004C04  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6983  004C06  B4D8               	btfsc	status,2,c
  6984  004C08  D002               	goto	l5931
  6985  004C0A                     u7600:
  6986                           
  6987                           ; BSR set to: 0
  6988  004C0A  90D8               	bcf	status,0,c
  6989  004C0C  0012               	return	
  6990  004C0E                     l5931:
  6991                           
  6992                           ; BSR set to: 0
  6993  004C0E  80D8               	bsf	status,0,c
  6994                           
  6995                           ; BSR set to: 0
  6996  004C10  0012               	return		;funcret
  6997  004C12                     __end_of___fleq:
  6998                           	opt callstack 0
  6999                           
  7000 ;; *************** function ___fldiv *****************
  7001 ;; Defined at:
  7002 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  b               4    0[BANK0 ] unsigned char 
  7005 ;;  a               4    4[BANK0 ] unsigned char 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  grs             4   19[BANK0 ] unsigned long 
  7008 ;;  rem             4   12[BANK0 ] unsigned long 
  7009 ;;  new_exp         2   17[BANK0 ] short 
  7010 ;;  aexp            1   24[BANK0 ] unsigned char 
  7011 ;;  bexp            1   23[BANK0 ] unsigned char 
  7012 ;;  sign            1   16[BANK0 ] unsigned char 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  4    0[BANK0 ] unsigned char 
  7015 ;; Registers used:
  7016 ;;		wreg, status,2, status,0
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7022 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7023 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7024 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7025 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7026 ;;Total ram usage:       25 bytes
  7027 ;; Hardware stack levels used:    1
  7028 ;; Hardware stack levels required when called:    2
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		_efgtoa
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text25
  7037  003A32                     __ptext25:
  7038                           	opt callstack 0
  7039  003A32                     ___fldiv:
  7040                           	opt callstack 23
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;incstack = 0
  7044  003A32  0100               	movlb	0	; () banked
  7045  003A34  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7046  003A36  0B80               	andlw	128
  7047  003A38  6F70               	movwf	___fldiv@sign& (0+255),b
  7048  003A3A  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7049  003A3C  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  7050  003A3E  6F77               	movwf	___fldiv@bexp& (0+255),b
  7051                           
  7052                           ; BSR set to: 0
  7053  003A40  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  7054                           
  7055                           ; BSR set to: 0
  7056  003A42  8177               	bsf	___fldiv@bexp& (0+255),0,b
  7057                           
  7058                           ; BSR set to: 0
  7059  003A44  5177               	movf	___fldiv@bexp& (0+255),w,b
  7060  003A46  B4D8               	btfsc	status,2,c
  7061  003A48  D00D               	goto	l5581
  7062                           
  7063                           ; BSR set to: 0
  7064  003A4A  2977               	incf	___fldiv@bexp& (0+255),w,b
  7065  003A4C  A4D8               	btfss	status,2,c
  7066  003A4E  D008               	goto	l5577
  7067                           
  7068                           ; BSR set to: 0
  7069  003A50  0E00               	movlw	0
  7070  003A52  6F60               	movwf	___fldiv@b& (0+255),b
  7071  003A54  0E00               	movlw	0
  7072  003A56  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7073  003A58  0E00               	movlw	0
  7074  003A5A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7075  003A5C  0E00               	movlw	0
  7076  003A5E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7077  003A60                     l5577:
  7078                           
  7079                           ; BSR set to: 0
  7080  003A60  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7081  003A62  D006               	goto	L10
  7082  003A64                     l5581:
  7083                           
  7084                           ; BSR set to: 0
  7085  003A64  0E00               	movlw	0
  7086  003A66  6F60               	movwf	___fldiv@b& (0+255),b
  7087  003A68  0E00               	movlw	0
  7088  003A6A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7089  003A6C  0E00               	movlw	0
  7090  003A6E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7091  003A70                     L10:
  7092  003A70  0E00               	movlw	0
  7093  003A72  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7094                           
  7095                           ; BSR set to: 0
  7096  003A74  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7097  003A76  0B80               	andlw	128
  7098  003A78  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  7099                           
  7100                           ; BSR set to: 0
  7101  003A7A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7102  003A7C  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  7103  003A7E  6F78               	movwf	___fldiv@aexp& (0+255),b
  7104                           
  7105                           ; BSR set to: 0
  7106  003A80  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  7107                           
  7108                           ; BSR set to: 0
  7109  003A82  8178               	bsf	___fldiv@aexp& (0+255),0,b
  7110                           
  7111                           ; BSR set to: 0
  7112  003A84  5178               	movf	___fldiv@aexp& (0+255),w,b
  7113  003A86  B4D8               	btfsc	status,2,c
  7114  003A88  D00D               	goto	l5601
  7115                           
  7116                           ; BSR set to: 0
  7117  003A8A  2978               	incf	___fldiv@aexp& (0+255),w,b
  7118  003A8C  A4D8               	btfss	status,2,c
  7119  003A8E  D008               	goto	l5597
  7120                           
  7121                           ; BSR set to: 0
  7122  003A90  0E00               	movlw	0
  7123  003A92  6F64               	movwf	___fldiv@a& (0+255),b
  7124  003A94  0E00               	movlw	0
  7125  003A96  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7126  003A98  0E00               	movlw	0
  7127  003A9A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7128  003A9C  0E00               	movlw	0
  7129  003A9E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7130  003AA0                     l5597:
  7131                           
  7132                           ; BSR set to: 0
  7133  003AA0  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  7134  003AA2  D006               	goto	L11
  7135  003AA4                     l5601:
  7136                           
  7137                           ; BSR set to: 0
  7138  003AA4  0E00               	movlw	0
  7139  003AA6  6F64               	movwf	___fldiv@a& (0+255),b
  7140  003AA8  0E00               	movlw	0
  7141  003AAA  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7142  003AAC  0E00               	movlw	0
  7143  003AAE  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7144  003AB0                     L11:
  7145  003AB0  0E00               	movlw	0
  7146  003AB2  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7147                           
  7148                           ; BSR set to: 0
  7149  003AB4  5164               	movf	___fldiv@a& (0+255),w,b
  7150  003AB6  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7151  003AB8  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7152  003ABA  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7153  003ABC  A4D8               	btfss	status,2,c
  7154  003ABE  D01B               	goto	l5615
  7155                           
  7156                           ; BSR set to: 0
  7157  003AC0  0E00               	movlw	0
  7158  003AC2  6F60               	movwf	___fldiv@b& (0+255),b
  7159  003AC4  0E00               	movlw	0
  7160  003AC6  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7161  003AC8  0E00               	movlw	0
  7162  003ACA  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7163  003ACC  0E00               	movlw	0
  7164  003ACE  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7165                           
  7166                           ; BSR set to: 0
  7167  003AD0  0E80               	movlw	128
  7168  003AD2  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7169  003AD4  0E7F               	movlw	127
  7170  003AD6  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7171  003AD8                     l5609:
  7172                           
  7173                           ; BSR set to: 0
  7174  003AD8  5170               	movf	___fldiv@sign& (0+255),w,b
  7175  003ADA  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7176                           
  7177                           ; BSR set to: 0
  7178  003ADC  0060  F180  F060   	movff	___fldiv@b,?___fldiv
  7179  003AE2  0060  F184  F061   	movff	___fldiv@b+1,?___fldiv+1
  7180  003AE8  0060  F188  F062   	movff	___fldiv@b+2,?___fldiv+2
  7181  003AEE  0060  F18C  F063   	movff	___fldiv@b+3,?___fldiv+3
  7182  003AF4  0012               	return	
  7183  003AF6                     l5615:
  7184                           
  7185                           ; BSR set to: 0
  7186  003AF6  5177               	movf	___fldiv@bexp& (0+255),w,b
  7187  003AF8  A4D8               	btfss	status,2,c
  7188  003AFA  D009               	goto	l5623
  7189                           
  7190                           ; BSR set to: 0
  7191                           
  7192                           ; BSR set to: 0
  7193  003AFC  0E00               	movlw	0
  7194  003AFE  6F60               	movwf	?___fldiv& (0+255),b
  7195  003B00  0E00               	movlw	0
  7196  003B02  6F61               	movwf	(?___fldiv+1)& (0+255),b
  7197  003B04  0E00               	movlw	0
  7198  003B06  6F62               	movwf	(?___fldiv+2)& (0+255),b
  7199  003B08  0E00               	movlw	0
  7200  003B0A  6F63               	movwf	(?___fldiv+3)& (0+255),b
  7201  003B0C  0012               	return	
  7202  003B0E                     l5623:
  7203                           
  7204                           ; BSR set to: 0
  7205  003B0E  5178               	movf	___fldiv@aexp& (0+255),w,b
  7206  003B10  0060  F1DC  F068   	movff	___fldiv@bexp,??___fldiv
  7207  003B16  6B69               	clrf	(??___fldiv+1)& (0+255),b
  7208  003B18  5F68               	subwf	??___fldiv& (0+255),f,b
  7209  003B1A  0E00               	movlw	0
  7210  003B1C  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  7211  003B1E  0E7F               	movlw	127
  7212  003B20  2568               	addwf	??___fldiv& (0+255),w,b
  7213  003B22  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7214  003B24  0E00               	movlw	0
  7215  003B26  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  7216  003B28  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7217                           
  7218                           ; BSR set to: 0
  7219  003B2A  0060  F180  F06C   	movff	___fldiv@b,___fldiv@rem
  7220  003B30  0060  F184  F06D   	movff	___fldiv@b+1,___fldiv@rem+1
  7221  003B36  0060  F188  F06E   	movff	___fldiv@b+2,___fldiv@rem+2
  7222  003B3C  0060  F18C  F06F   	movff	___fldiv@b+3,___fldiv@rem+3
  7223                           
  7224                           ; BSR set to: 0
  7225  003B42  0E00               	movlw	0
  7226  003B44  6F60               	movwf	___fldiv@b& (0+255),b
  7227  003B46  0E00               	movlw	0
  7228  003B48  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7229  003B4A  0E00               	movlw	0
  7230  003B4C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7231  003B4E  0E00               	movlw	0
  7232  003B50  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7233                           
  7234                           ; BSR set to: 0
  7235  003B52  0E00               	movlw	0
  7236  003B54  6F73               	movwf	___fldiv@grs& (0+255),b
  7237  003B56  0E00               	movlw	0
  7238  003B58  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  7239  003B5A  0E00               	movlw	0
  7240  003B5C  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  7241  003B5E  0E00               	movlw	0
  7242  003B60  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  7243                           
  7244                           ; BSR set to: 0
  7245  003B62  0E00               	movlw	0
  7246  003B64  6F78               	movwf	___fldiv@aexp& (0+255),b
  7247  003B66  D028               	goto	l1220
  7248  003B68                     l5633:
  7249                           
  7250                           ; BSR set to: 0
  7251  003B68  5178               	movf	___fldiv@aexp& (0+255),w,b
  7252  003B6A  B4D8               	btfsc	status,2,c
  7253  003B6C  D011               	goto	l5641
  7254                           
  7255                           ; BSR set to: 0
  7256  003B6E  90D8               	bcf	status,0,c
  7257  003B70  376C               	rlcf	___fldiv@rem& (0+255),f,b
  7258  003B72  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7259  003B74  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7260  003B76  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7261  003B78  90D8               	bcf	status,0,c
  7262  003B7A  3760               	rlcf	___fldiv@b& (0+255),f,b
  7263  003B7C  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7264  003B7E  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7265  003B80  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7266                           
  7267                           ; BSR set to: 0
  7268  003B82  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7269                           
  7270                           ; BSR set to: 0
  7271  003B84  8160               	bsf	___fldiv@b& (0+255),0,b
  7272                           
  7273                           ; BSR set to: 0
  7274  003B86  90D8               	bcf	status,0,c
  7275  003B88  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7276  003B8A  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7277  003B8C  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7278  003B8E  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7279  003B90                     l5641:
  7280                           
  7281                           ; BSR set to: 0
  7282  003B90  5164               	movf	___fldiv@a& (0+255),w,b
  7283  003B92  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  7284  003B94  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7285  003B96  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7286  003B98  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7287  003B9A  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7288  003B9C  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7289  003B9E  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7290  003BA0  A0D8               	btfss	status,0,c
  7291  003BA2  D009               	goto	l5647
  7292                           
  7293                           ; BSR set to: 0
  7294  003BA4  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7295                           
  7296                           ; BSR set to: 0
  7297  003BA6  5164               	movf	___fldiv@a& (0+255),w,b
  7298  003BA8  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  7299  003BAA  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7300  003BAC  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7301  003BAE  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7302  003BB0  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7303  003BB2  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7304  003BB4  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7305  003BB6                     l5647:
  7306                           
  7307                           ; BSR set to: 0
  7308  003BB6  2B78               	incf	___fldiv@aexp& (0+255),f,b
  7309  003BB8                     l1220:
  7310                           
  7311                           ; BSR set to: 0
  7312  003BB8  0E19               	movlw	25
  7313  003BBA  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  7314  003BBC  D7D5               	goto	l5633
  7315                           
  7316                           ; BSR set to: 0
  7317  003BBE  516C               	movf	___fldiv@rem& (0+255),w,b
  7318  003BC0  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7319  003BC2  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7320  003BC4  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7321  003BC6  B4D8               	btfsc	status,2,c
  7322  003BC8  D011               	goto	l5659
  7323                           
  7324                           ; BSR set to: 0
  7325  003BCA  8173               	bsf	___fldiv@grs& (0+255),0,b
  7326  003BCC  D00F               	goto	l5659
  7327  003BCE                     l5653:
  7328                           
  7329                           ; BSR set to: 0
  7330  003BCE  90D8               	bcf	status,0,c
  7331  003BD0  3760               	rlcf	___fldiv@b& (0+255),f,b
  7332  003BD2  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7333  003BD4  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7334  003BD6  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7335                           
  7336                           ; BSR set to: 0
  7337  003BD8  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7338                           
  7339                           ; BSR set to: 0
  7340  003BDA  8160               	bsf	___fldiv@b& (0+255),0,b
  7341                           
  7342                           ; BSR set to: 0
  7343  003BDC  90D8               	bcf	status,0,c
  7344  003BDE  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7345  003BE0  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7346  003BE2  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7347  003BE4  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7348  003BE6  0771               	decf	___fldiv@new_exp& (0+255),f,b
  7349  003BE8  A0D8               	btfss	status,0,c
  7350  003BEA  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7351  003BEC                     l5659:
  7352                           
  7353                           ; BSR set to: 0
  7354  003BEC  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  7355  003BEE  D7EF               	goto	l5653
  7356                           
  7357                           ; BSR set to: 0
  7358  003BF0  0E00               	movlw	0
  7359  003BF2  6F78               	movwf	___fldiv@aexp& (0+255),b
  7360                           
  7361                           ; BSR set to: 0
  7362  003BF4  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7363  003BF6  D017               	goto	l1231
  7364                           
  7365                           ; BSR set to: 0
  7366  003BF8  0EFF               	movlw	255
  7367  003BFA  1573               	andwf	___fldiv@grs& (0+255),w,b
  7368  003BFC  6F68               	movwf	??___fldiv& (0+255),b
  7369  003BFE  0EFF               	movlw	255
  7370  003C00  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7371  003C02  6F69               	movwf	(??___fldiv+1)& (0+255),b
  7372  003C04  0EFF               	movlw	255
  7373  003C06  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7374  003C08  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  7375  003C0A  0E7F               	movlw	127
  7376  003C0C  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7377  003C0E  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  7378  003C10  5168               	movf	??___fldiv& (0+255),w,b
  7379  003C12  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  7380  003C14  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  7381  003C16  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  7382  003C18  B4D8               	btfsc	status,2,c
  7383  003C1A  D003               	goto	l1232
  7384  003C1C                     u7200:
  7385                           
  7386                           ; BSR set to: 0
  7387  003C1C  0E01               	movlw	1
  7388  003C1E  6F78               	movwf	___fldiv@aexp& (0+255),b
  7389  003C20  D002               	goto	l1231
  7390  003C22                     l1232:
  7391                           
  7392                           ; BSR set to: 0
  7393  003C22  B160               	btfsc	___fldiv@b& (0+255),0,b
  7394  003C24  D7FB               	goto	u7200
  7395  003C26                     l1231:
  7396                           
  7397                           ; BSR set to: 0
  7398  003C26  5178               	movf	___fldiv@aexp& (0+255),w,b
  7399  003C28  B4D8               	btfsc	status,2,c
  7400  003C2A  D027               	goto	l5679
  7401                           
  7402                           ; BSR set to: 0
  7403  003C2C  0E01               	movlw	1
  7404  003C2E  2760               	addwf	___fldiv@b& (0+255),f,b
  7405  003C30  0E00               	movlw	0
  7406  003C32  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7407  003C34  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7408  003C36  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7409                           
  7410                           ; BSR set to: 0
  7411  003C38  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  7412  003C3A  D01F               	goto	l5679
  7413                           
  7414                           ; BSR set to: 0
  7415  003C3C  0060  F180  F068   	movff	___fldiv@b,??___fldiv
  7416  003C42  0060  F184  F069   	movff	___fldiv@b+1,??___fldiv+1
  7417  003C48  0060  F188  F06A   	movff	___fldiv@b+2,??___fldiv+2
  7418  003C4E  0060  F18C  F06B   	movff	___fldiv@b+3,??___fldiv+3
  7419  003C54  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  7420  003C56  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  7421  003C58  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  7422  003C5A  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  7423  003C5C  3368               	rrcf	??___fldiv& (0+255),f,b
  7424  003C5E  0060  F1A0  F060   	movff	??___fldiv,___fldiv@b
  7425  003C64  0060  F1A4  F061   	movff	??___fldiv+1,___fldiv@b+1
  7426  003C6A  0060  F1A8  F062   	movff	??___fldiv+2,___fldiv@b+2
  7427  003C70  0060  F1AC  F063   	movff	??___fldiv+3,___fldiv@b+3
  7428                           
  7429                           ; BSR set to: 0
  7430  003C76  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  7431  003C78  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7432  003C7A                     l5679:
  7433                           
  7434                           ; BSR set to: 0
  7435  003C7A  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7436  003C7C  D010               	goto	l5683
  7437  003C7E  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7438  003C80  E103               	bnz	u7240
  7439  003C82  2971               	incf	___fldiv@new_exp& (0+255),w,b
  7440  003C84  A0D8               	btfss	status,0,c
  7441  003C86  D00B               	goto	l5683
  7442  003C88                     u7240:
  7443                           
  7444                           ; BSR set to: 0
  7445  003C88  0E00               	movlw	0
  7446  003C8A  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7447  003C8C  6971               	setf	___fldiv@new_exp& (0+255),b
  7448  003C8E  0E00               	movlw	0
  7449  003C90  6F60               	movwf	___fldiv@b& (0+255),b
  7450  003C92  0E00               	movlw	0
  7451  003C94  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7452  003C96  0E00               	movlw	0
  7453  003C98  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7454  003C9A  0E00               	movlw	0
  7455  003C9C  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7456  003C9E                     l5683:
  7457                           
  7458                           ; BSR set to: 0
  7459  003C9E  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7460  003CA0  D005               	goto	u7250
  7461  003CA2  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7462  003CA4  E111               	bnz	l5687
  7463  003CA6  0571               	decf	___fldiv@new_exp& (0+255),w,b
  7464  003CA8  B0D8               	btfsc	status,0,c
  7465  003CAA  D00E               	goto	l5687
  7466  003CAC                     u7250:
  7467                           
  7468                           ; BSR set to: 0
  7469  003CAC  0E00               	movlw	0
  7470  003CAE  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7471  003CB0  0E00               	movlw	0
  7472  003CB2  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7473  003CB4  0E00               	movlw	0
  7474  003CB6  6F60               	movwf	___fldiv@b& (0+255),b
  7475  003CB8  0E00               	movlw	0
  7476  003CBA  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7477  003CBC  0E00               	movlw	0
  7478  003CBE  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7479  003CC0  0E00               	movlw	0
  7480  003CC2  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7481  003CC4  0E00               	movlw	0
  7482  003CC6  6F70               	movwf	___fldiv@sign& (0+255),b
  7483  003CC8                     l5687:
  7484                           
  7485                           ; BSR set to: 0
  7486  003CC8  0060  F1C4  F077   	movff	___fldiv@new_exp,___fldiv@bexp
  7487                           
  7488                           ; BSR set to: 0
  7489  003CCE  A177               	btfss	___fldiv@bexp& (0+255),0,b
  7490  003CD0  D002               	goto	l5693
  7491                           
  7492                           ; BSR set to: 0
  7493  003CD2  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7494  003CD4  D001               	goto	l5695
  7495  003CD6                     l5693:
  7496                           
  7497                           ; BSR set to: 0
  7498  003CD6  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  7499  003CD8                     l5695:
  7500                           
  7501                           ; BSR set to: 0
  7502  003CD8  90D8               	bcf	status,0,c
  7503  003CDA  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  7504  003CDC  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7505  003CDE  D6FC               	goto	l5609
  7506  003CE0                     __end_of___fldiv:
  7507                           	opt callstack 0
  7508                           
  7509 ;; *************** function ___awmod *****************
  7510 ;; Defined at:
  7511 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  dividend        2    0[BANK0 ] int 
  7514 ;;  divisor         2    2[BANK0 ] int 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;  sign            1    5[BANK0 ] unsigned char 
  7517 ;;  counter         1    4[BANK0 ] unsigned char 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  2    0[BANK0 ] int 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7527 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7528 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7530 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7531 ;;Total ram usage:        6 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    2
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_efgtoa
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text26
  7542  004D22                     __ptext26:
  7543                           	opt callstack 0
  7544  004D22                     ___awmod:
  7545                           	opt callstack 23
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;incstack = 0
  7549  004D22  0E00               	movlw	0
  7550  004D24  0100               	movlb	0	; () banked
  7551  004D26  6F65               	movwf	___awmod@sign& (0+255),b
  7552                           
  7553                           ; BSR set to: 0
  7554  004D28  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7555  004D2A  D006               	goto	l5891
  7556                           
  7557                           ; BSR set to: 0
  7558  004D2C  6D60               	negf	___awmod@dividend& (0+255),b
  7559  004D2E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7560  004D30  B0D8               	btfsc	status,0,c
  7561  004D32  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7562                           
  7563                           ; BSR set to: 0
  7564  004D34  0E01               	movlw	1
  7565  004D36  6F65               	movwf	___awmod@sign& (0+255),b
  7566  004D38                     l5891:
  7567                           
  7568                           ; BSR set to: 0
  7569  004D38  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7570  004D3A  D004               	goto	l5895
  7571                           
  7572                           ; BSR set to: 0
  7573  004D3C  6D62               	negf	___awmod@divisor& (0+255),b
  7574  004D3E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7575  004D40  B0D8               	btfsc	status,0,c
  7576  004D42  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7577  004D44                     l5895:
  7578                           
  7579                           ; BSR set to: 0
  7580  004D44  5162               	movf	___awmod@divisor& (0+255),w,b
  7581  004D46  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7582  004D48  B4D8               	btfsc	status,2,c
  7583  004D4A  D018               	goto	l5911
  7584                           
  7585                           ; BSR set to: 0
  7586  004D4C  0E01               	movlw	1
  7587  004D4E  6F64               	movwf	___awmod@counter& (0+255),b
  7588  004D50  D004               	goto	l5901
  7589  004D52                     l5899:
  7590                           
  7591                           ; BSR set to: 0
  7592  004D52  90D8               	bcf	status,0,c
  7593  004D54  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7594  004D56  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7595  004D58  2B64               	incf	___awmod@counter& (0+255),f,b
  7596  004D5A                     l5901:
  7597                           
  7598                           ; BSR set to: 0
  7599  004D5A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7600  004D5C  D7FA               	goto	l5899
  7601  004D5E                     u7550:
  7602                           
  7603                           ; BSR set to: 0
  7604  004D5E  5162               	movf	___awmod@divisor& (0+255),w,b
  7605  004D60  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7606  004D62  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7607  004D64  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7608  004D66  A0D8               	btfss	status,0,c
  7609  004D68  D004               	goto	l5907
  7610                           
  7611                           ; BSR set to: 0
  7612  004D6A  5162               	movf	___awmod@divisor& (0+255),w,b
  7613  004D6C  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7614  004D6E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7615  004D70  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7616  004D72                     l5907:
  7617                           
  7618                           ; BSR set to: 0
  7619  004D72  90D8               	bcf	status,0,c
  7620  004D74  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7621  004D76  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7622                           
  7623                           ; BSR set to: 0
  7624  004D78  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7625  004D7A  D7F1               	goto	u7550
  7626  004D7C                     l5911:
  7627                           
  7628                           ; BSR set to: 0
  7629  004D7C  5165               	movf	___awmod@sign& (0+255),w,b
  7630  004D7E  B4D8               	btfsc	status,2,c
  7631  004D80  D004               	goto	l5915
  7632                           
  7633                           ; BSR set to: 0
  7634  004D82  6D60               	negf	___awmod@dividend& (0+255),b
  7635  004D84  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7636  004D86  B0D8               	btfsc	status,0,c
  7637  004D88  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7638  004D8A                     l5915:
  7639                           
  7640                           ; BSR set to: 0
  7641  004D8A  0060  F180  F060   	movff	___awmod@dividend,?___awmod
  7642  004D90  0060  F184  F061   	movff	___awmod@dividend+1,?___awmod+1
  7643                           
  7644                           ; BSR set to: 0
  7645  004D96  0012               	return		;funcret
  7646  004D98                     __end_of___awmod:
  7647                           	opt callstack 0
  7648                           
  7649 ;; *************** function ___awdiv *****************
  7650 ;; Defined at:
  7651 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  dividend        2    0[BANK0 ] int 
  7654 ;;  divisor         2    2[BANK0 ] int 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;  quotient        2    6[BANK0 ] int 
  7657 ;;  sign            1    5[BANK0 ] unsigned char 
  7658 ;;  counter         1    4[BANK0 ] unsigned char 
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  2    0[BANK0 ] int 
  7661 ;; Registers used:
  7662 ;;		wreg, status,2, status,0
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7668 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7669 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7671 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7672 ;;Total ram usage:        8 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; Hardware stack levels required when called:    2
  7675 ;; This function calls:
  7676 ;;		Nothing
  7677 ;; This function is called by:
  7678 ;;		_efgtoa
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text27
  7683  004C12                     __ptext27:
  7684                           	opt callstack 0
  7685  004C12                     ___awdiv:
  7686                           	opt callstack 23
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;incstack = 0
  7690  004C12  0E00               	movlw	0
  7691  004C14  0100               	movlb	0	; () banked
  7692  004C16  6F65               	movwf	___awdiv@sign& (0+255),b
  7693                           
  7694                           ; BSR set to: 0
  7695  004C18  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7696  004C1A  D006               	goto	l5847
  7697                           
  7698                           ; BSR set to: 0
  7699  004C1C  6D62               	negf	___awdiv@divisor& (0+255),b
  7700  004C1E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7701  004C20  B0D8               	btfsc	status,0,c
  7702  004C22  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7703                           
  7704                           ; BSR set to: 0
  7705  004C24  0E01               	movlw	1
  7706  004C26  6F65               	movwf	___awdiv@sign& (0+255),b
  7707  004C28                     l5847:
  7708                           
  7709                           ; BSR set to: 0
  7710  004C28  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7711  004C2A  D006               	goto	l5853
  7712                           
  7713                           ; BSR set to: 0
  7714  004C2C  6D60               	negf	___awdiv@dividend& (0+255),b
  7715  004C2E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7716  004C30  B0D8               	btfsc	status,0,c
  7717  004C32  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7718                           
  7719                           ; BSR set to: 0
  7720  004C34  0E01               	movlw	1
  7721  004C36  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7722  004C38                     l5853:
  7723                           
  7724                           ; BSR set to: 0
  7725  004C38  0E00               	movlw	0
  7726  004C3A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7727  004C3C  0E00               	movlw	0
  7728  004C3E  6F66               	movwf	___awdiv@quotient& (0+255),b
  7729                           
  7730                           ; BSR set to: 0
  7731  004C40  5162               	movf	___awdiv@divisor& (0+255),w,b
  7732  004C42  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7733  004C44  B4D8               	btfsc	status,2,c
  7734  004C46  D01C               	goto	l5875
  7735                           
  7736                           ; BSR set to: 0
  7737  004C48  0E01               	movlw	1
  7738  004C4A  6F64               	movwf	___awdiv@counter& (0+255),b
  7739  004C4C  D004               	goto	l5861
  7740  004C4E                     l5859:
  7741                           
  7742                           ; BSR set to: 0
  7743  004C4E  90D8               	bcf	status,0,c
  7744  004C50  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7745  004C52  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7746  004C54  2B64               	incf	___awdiv@counter& (0+255),f,b
  7747  004C56                     l5861:
  7748                           
  7749                           ; BSR set to: 0
  7750  004C56  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7751  004C58  D7FA               	goto	l5859
  7752  004C5A                     u7490:
  7753                           
  7754                           ; BSR set to: 0
  7755  004C5A  90D8               	bcf	status,0,c
  7756  004C5C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7757  004C5E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7758                           
  7759                           ; BSR set to: 0
  7760  004C60  5162               	movf	___awdiv@divisor& (0+255),w,b
  7761  004C62  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7762  004C64  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7763  004C66  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7764  004C68  A0D8               	btfss	status,0,c
  7765  004C6A  D005               	goto	l5871
  7766                           
  7767                           ; BSR set to: 0
  7768  004C6C  5162               	movf	___awdiv@divisor& (0+255),w,b
  7769  004C6E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7770  004C70  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7771  004C72  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7772                           
  7773                           ; BSR set to: 0
  7774  004C74  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7775  004C76                     l5871:
  7776                           
  7777                           ; BSR set to: 0
  7778  004C76  90D8               	bcf	status,0,c
  7779  004C78  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7780  004C7A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7781                           
  7782                           ; BSR set to: 0
  7783  004C7C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7784  004C7E  D7ED               	goto	u7490
  7785  004C80                     l5875:
  7786                           
  7787                           ; BSR set to: 0
  7788  004C80  5165               	movf	___awdiv@sign& (0+255),w,b
  7789  004C82  B4D8               	btfsc	status,2,c
  7790  004C84  D004               	goto	l5879
  7791                           
  7792                           ; BSR set to: 0
  7793  004C86  6D66               	negf	___awdiv@quotient& (0+255),b
  7794  004C88  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7795  004C8A  B0D8               	btfsc	status,0,c
  7796  004C8C  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7797  004C8E                     l5879:
  7798                           
  7799                           ; BSR set to: 0
  7800  004C8E  0060  F198  F060   	movff	___awdiv@quotient,?___awdiv
  7801  004C94  0060  F19C  F061   	movff	___awdiv@quotient+1,?___awdiv+1
  7802                           
  7803                           ; BSR set to: 0
  7804  004C9A  0012               	return		;funcret
  7805  004C9C                     __end_of___awdiv:
  7806                           	opt callstack 0
  7807                           
  7808 ;; *************** function _memset *****************
  7809 ;; Defined at:
  7810 ;;		line 280 in file "main.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  st              2    0[BANK0 ] PTR unsigned char 
  7813 ;;		 -> tx_buffer(32), 
  7814 ;;  x               1    2[BANK0 ] unsigned char 
  7815 ;;  size            2    3[BANK0 ] int 
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;  i               2    6[BANK0 ] int 
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1    wreg      void 
  7820 ;; Registers used:
  7821 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7827 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7828 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7829 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7830 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7831 ;;Total ram usage:        8 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    2
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		_USART_handler
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text28
  7842  005190                     __ptext28:
  7843                           	opt callstack 0
  7844  005190                     _memset:
  7845                           	opt callstack 27
  7846                           
  7847                           ;main.c: 281:     for(int i=0;i<size;i++){
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;incstack = 0
  7851  005190  0E00               	movlw	0
  7852  005192  0100               	movlb	0	; () banked
  7853  005194  6F67               	movwf	(memset@i+1)& (0+255),b
  7854  005196  0E00               	movlw	0
  7855  005198  6F66               	movwf	memset@i& (0+255),b
  7856  00519A  D00B               	goto	l6449
  7857  00519C                     l6445:
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;main.c: 282:         st[i] = x;
  7861  00519C  5166               	movf	memset@i& (0+255),w,b
  7862  00519E  2560               	addwf	memset@st& (0+255),w,b
  7863  0051A0  6ED9               	movwf	fsr2l,c
  7864  0051A2  5167               	movf	(memset@i+1)& (0+255),w,b
  7865  0051A4  2161               	addwfc	(memset@st+1)& (0+255),w,b
  7866  0051A6  6EDA               	movwf	fsr2h,c
  7867  0051A8  0060  F18B  FFDF   	movff	memset@x,indf2
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;main.c: 283:     }
  7871  0051AE  4B66               	infsnz	memset@i& (0+255),f,b
  7872  0051B0  2B67               	incf	(memset@i+1)& (0+255),f,b
  7873  0051B2                     l6449:
  7874                           
  7875                           ; BSR set to: 0
  7876  0051B2  5163               	movf	memset@size& (0+255),w,b
  7877  0051B4  5D66               	subwf	memset@i& (0+255),w,b
  7878  0051B6  5167               	movf	(memset@i+1)& (0+255),w,b
  7879  0051B8  0A80               	xorlw	128
  7880  0051BA  6F65               	movwf	??_memset& (0+255),b
  7881  0051BC  5164               	movf	(memset@size+1)& (0+255),w,b
  7882  0051BE  0A80               	xorlw	128
  7883  0051C0  5965               	subwfb	??_memset& (0+255),w,b
  7884  0051C2  B0D8               	btfsc	status,0,c
  7885  0051C4  0012               	return	
  7886  0051C6  D7EA               	goto	l6445
  7887  0051C8                     __end_of_memset:
  7888                           	opt callstack 0
  7889                           
  7890 ;; *************** function _USART1_SendString *****************
  7891 ;; Defined at:
  7892 ;;		line 58 in file "USART1.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;  str             2    4[BANK0 ] PTR unsigned char 
  7895 ;;		 -> tx_buffer(32), 
  7896 ;;  size            2    6[BANK0 ] int 
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  attempts        2   10[BANK0 ] unsigned int 
  7899 ;;  i               2    8[BANK0 ] unsigned int 
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  1    wreg      unsigned char 
  7902 ;; Registers used:
  7903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7909 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7910 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7912 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7913 ;;Total ram usage:        8 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; Hardware stack levels required when called:    3
  7916 ;; This function calls:
  7917 ;;		_USART1_SendByte
  7918 ;; This function is called by:
  7919 ;;		_USART_handler
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text29
  7924  004A44                     __ptext29:
  7925                           	opt callstack 0
  7926  004A44                     _USART1_SendString:
  7927                           	opt callstack 26
  7928                           
  7929                           ;USART1.c: 59:     unsigned int attempts = 65000,i;
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;incstack = 0
  7933  004A44  0EFD               	movlw	253
  7934  004A46  0100               	movlb	0	; () banked
  7935  004A48  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  7936  004A4A  0EE8               	movlw	232
  7937  004A4C  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  7938                           
  7939                           ;USART1.c: 60:     for(i=0;i<size;i++){
  7940  004A4E  0E00               	movlw	0
  7941  004A50  6F69               	movwf	(USART1_SendString@i+1)& (0+255),b
  7942  004A52  0E00               	movlw	0
  7943  004A54  6F68               	movwf	USART1_SendString@i& (0+255),b
  7944  004A56  D01E               	goto	l6431
  7945  004A58                     l6419:
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;USART1.c: 61:         if(!USART1_SendByte(*(str + i))){
  7949  004A58  5168               	movf	USART1_SendString@i& (0+255),w,b
  7950  004A5A  2564               	addwf	USART1_SendString@str& (0+255),w,b
  7951  004A5C  6ED9               	movwf	fsr2l,c
  7952  004A5E  5169               	movf	(USART1_SendString@i+1)& (0+255),w,b
  7953  004A60  2165               	addwfc	(USART1_SendString@str+1)& (0+255),w,b
  7954  004A62  6EDA               	movwf	fsr2h,c
  7955  004A64  50DF               	movf	indf2,w,c
  7956  004A66  EC53  F029         	call	_USART1_SendByte
  7957  004A6A  0900               	iorlw	0
  7958  004A6C  A4D8               	btfss	status,2,c
  7959  004A6E  D007               	goto	l6423
  7960                           
  7961                           ;USART1.c: 62:             attempts --;
  7962  004A70  0100               	movlb	0	; () banked
  7963  004A72  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  7964  004A74  A0D8               	btfss	status,0,c
  7965  004A76  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  7966                           
  7967                           ;USART1.c: 63:             i --;
  7968  004A78  0768               	decf	USART1_SendString@i& (0+255),f,b
  7969  004A7A  A0D8               	btfss	status,0,c
  7970  004A7C  0769               	decf	(USART1_SendString@i+1)& (0+255),f,b
  7971  004A7E                     l6423:
  7972                           
  7973                           ;USART1.c: 65:         if(!attempts)
  7974  004A7E  0100               	movlb	0	; () banked
  7975  004A80  516A               	movf	USART1_SendString@attempts& (0+255),w,b
  7976  004A82  116B               	iorwf	(USART1_SendString@attempts+1)& (0+255),w,b
  7977  004A84  B4D8               	btfsc	status,2,c
  7978  004A86  0012               	return	
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;USART1.c: 67:         attempts = 65000;
  7982  004A88  0EFD               	movlw	253
  7983  004A8A  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  7984  004A8C  0EE8               	movlw	232
  7985  004A8E  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;USART1.c: 68:     }
  7989  004A90  4B68               	infsnz	USART1_SendString@i& (0+255),f,b
  7990  004A92  2B69               	incf	(USART1_SendString@i+1)& (0+255),f,b
  7991  004A94                     l6431:
  7992                           
  7993                           ; BSR set to: 0
  7994  004A94  5166               	movf	USART1_SendString@size& (0+255),w,b
  7995  004A96  5D68               	subwf	USART1_SendString@i& (0+255),w,b
  7996  004A98  5167               	movf	(USART1_SendString@size+1)& (0+255),w,b
  7997  004A9A  5969               	subwfb	(USART1_SendString@i+1)& (0+255),w,b
  7998  004A9C  A0D8               	btfss	status,0,c
  7999  004A9E  D7DC               	goto	l6419
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;USART1.c: 69:     attempts =65000;
  8003  004AA0  0EFD               	movlw	253
  8004  004AA2  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  8005  004AA4  0EE8               	movlw	232
  8006  004AA6  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  8007  004AA8                     l6435:
  8008                           
  8009                           ; BSR set to: 0
  8010  004AA8  0E0D               	movlw	13
  8011  004AAA  EC53  F029         	call	_USART1_SendByte
  8012  004AAE  0900               	iorlw	0
  8013  004AB0  A4D8               	btfss	status,2,c
  8014  004AB2  D009               	goto	u8450
  8015  004AB4  0100               	movlb	0	; () banked
  8016  004AB6  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  8017  004AB8  A0D8               	btfss	status,0,c
  8018  004ABA  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  8019  004ABC  296A               	incf	USART1_SendString@attempts& (0+255),w,b
  8020  004ABE  E1F4               	bnz	l6435
  8021  004AC0  296B               	incf	(USART1_SendString@attempts+1)& (0+255),w,b
  8022  004AC2  A4D8               	btfss	status,2,c
  8023  004AC4  D7F1               	goto	l6435
  8024  004AC6                     u8450:
  8025  004AC6                     l6439:
  8026  004AC6  0E0A               	movlw	10
  8027  004AC8  EC53  F029         	call	_USART1_SendByte
  8028  004ACC  0900               	iorlw	0
  8029  004ACE  A4D8               	btfss	status,2,c
  8030  004AD0  0012               	return	
  8031  004AD2  0100               	movlb	0	; () banked
  8032  004AD4  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  8033  004AD6  A0D8               	btfss	status,0,c
  8034  004AD8  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  8035  004ADA  296A               	incf	USART1_SendString@attempts& (0+255),w,b
  8036  004ADC  E1F4               	bnz	l6439
  8037  004ADE  296B               	incf	(USART1_SendString@attempts+1)& (0+255),w,b
  8038  004AE0  B4D8               	btfsc	status,2,c
  8039  004AE2  0012               	return	
  8040  004AE4  D7F0               	goto	u8450
  8041  004AE6                     __end_of_USART1_SendString:
  8042                           	opt callstack 0
  8043                           
  8044 ;; *************** function _USART1_SendByte *****************
  8045 ;; Defined at:
  8046 ;;		line 49 in file "USART1.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;  byte            1    wreg     unsigned char 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  byte            1    0[BANK0 ] unsigned char 
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  1    wreg      unsigned char 
  8053 ;; Registers used:
  8054 ;;		wreg
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8063 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8064 ;;Total ram usage:        1 bytes
  8065 ;; Hardware stack levels used:    1
  8066 ;; Hardware stack levels required when called:    2
  8067 ;; This function calls:
  8068 ;;		Nothing
  8069 ;; This function is called by:
  8070 ;;		_USART1_SendString
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           	psect	text30
  8075  0052A6                     __ptext30:
  8076                           	opt callstack 0
  8077  0052A6                     _USART1_SendByte:
  8078                           	opt callstack 26
  8079                           
  8080                           ;incstack = 0
  8081                           ;USART1_SendByte@byte stored from wreg
  8082  0052A6  0100               	movlb	0	; () banked
  8083  0052A8  6F60               	movwf	USART1_SendByte@byte& (0+255),b
  8084                           
  8085                           ;USART1.c: 50:     if(!PIE3bits.U1TXIE){
  8086  0052AA  0139               	movlb	57	; () banked
  8087  0052AC  B993               	btfsc	147,4,b	;volatile
  8088  0052AE  D006               	goto	l6383
  8089                           
  8090                           ; BSR set to: 57
  8091                           ;USART1.c: 51:         tx_byte = byte;
  8092  0052B0  0060  F180  F04E   	movff	USART1_SendByte@byte,_tx_byte
  8093                           
  8094                           ; BSR set to: 57
  8095                           ;USART1.c: 52:         PIE3bits.U1TXIE = 1;
  8096  0052B6  8993               	bsf	147,4,b	;volatile
  8097                           
  8098                           ;USART1.c: 53:         return 1;
  8099  0052B8  0E01               	movlw	1
  8100  0052BA  0012               	return	
  8101  0052BC                     l6383:
  8102                           
  8103                           ; BSR set to: 57
  8104                           ;USART1.c: 55:     return 0;
  8105  0052BC  0E00               	movlw	0
  8106                           
  8107                           ; BSR set to: 57
  8108  0052BE  0012               	return		;funcret
  8109  0052C0                     __end_of_USART1_SendByte:
  8110                           	opt callstack 0
  8111                           
  8112 ;; *************** function _I2C_handler *****************
  8113 ;; Defined at:
  8114 ;;		line 89 in file "I2C.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  ad5272_selec    1    wreg     unsigned char 
  8117 ;;  value           2   12[BANK0 ] int 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  ad5272_selec    1   14[BANK0 ] unsigned char 
  8120 ;; Return value:  Size  Location     Type
  8121 ;;                  1    wreg      void 
  8122 ;; Registers used:
  8123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8124 ;; Tracked objects:
  8125 ;;		On entry : 0/0
  8126 ;;		On exit  : 0/0
  8127 ;;		Unchanged: 0/0
  8128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8132 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8133 ;;Total ram usage:        3 bytes
  8134 ;; Hardware stack levels used:    1
  8135 ;; Hardware stack levels required when called:    3
  8136 ;; This function calls:
  8137 ;;		_I2C_Transmit
  8138 ;; This function is called by:
  8139 ;;		_USART_handler
  8140 ;; This function uses a non-reentrant model
  8141 ;;
  8142                           
  8143                           	psect	text31
  8144  00508E                     __ptext31:
  8145                           	opt callstack 0
  8146  00508E                     _I2C_handler:
  8147                           	opt callstack 26
  8148                           
  8149                           ; BSR set to: 57
  8150                           ;incstack = 0
  8151                           ;I2C_handler@ad5272_select stored from wreg
  8152  00508E  0100               	movlb	0	; () banked
  8153  005090  6F6E               	movwf	I2C_handler@ad5272_select& (0+255),b
  8154                           
  8155                           ;I2C.c: 90:     AD5272_COMMANDS[0] = (unsigned char)(AD5272_COMMANDS[0] | (value >> 8));
  8156  005092  0100               	movlb	0	; () banked
  8157  005094  516D               	movf	(I2C_handler@value+1)& (0+255),w,b
  8158  005096  1050               	iorwf	_AD5272_COMMANDS,w,c
  8159  005098  6E50               	movwf	_AD5272_COMMANDS,c
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;I2C.c: 91:     AD5272_COMMANDS[1] = (unsigned char)value;
  8163  00509A  0060  F1B0  F051   	movff	I2C_handler@value,_AD5272_COMMANDS+1
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;I2C.c: 92:     if(ad5272_select == 0){
  8167  0050A0  516E               	movf	I2C_handler@ad5272_select& (0+255),w,b
  8168  0050A2  A4D8               	btfss	status,2,c
  8169  0050A4  D00B               	goto	l6471
  8170                           
  8171                           ; BSR set to: 0
  8172  0050A6  0E50               	movlw	low _AD5272_COMMANDS
  8173  0050A8  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  8174  0050AA  0E00               	movlw	high _AD5272_COMMANDS
  8175  0050AC  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  8176  0050AE  0E02               	movlw	2
  8177  0050B0  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  8178  0050B2  0E5E               	movlw	94
  8179  0050B4  6F63               	movwf	I2C_Transmit@address& (0+255),b
  8180  0050B6  EC73  F025         	call	_I2C_Transmit	;wreg free
  8181                           
  8182                           ;I2C.c: 94:     }else{
  8183  0050BA  D00A               	goto	l6473
  8184  0050BC                     l6471:
  8185                           
  8186                           ; BSR set to: 0
  8187  0050BC  0E50               	movlw	low _AD5272_COMMANDS
  8188  0050BE  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  8189  0050C0  0E00               	movlw	high _AD5272_COMMANDS
  8190  0050C2  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  8191  0050C4  0E02               	movlw	2
  8192  0050C6  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  8193  0050C8  0E58               	movlw	88
  8194  0050CA  6F63               	movwf	I2C_Transmit@address& (0+255),b
  8195  0050CC  EC73  F025         	call	_I2C_Transmit	;wreg free
  8196  0050D0                     l6473:
  8197  0050D0  5049               	movf	_I2C_STOP_DETECTED,w,c
  8198  0050D2  A4D8               	btfss	status,2,c
  8199  0050D4  0012               	return	
  8200  0050D6  D7FC               	goto	l6473
  8201  0050D8                     __end_of_I2C_handler:
  8202                           	opt callstack 0
  8203                           
  8204 ;; *************** function _I2C_Transmit *****************
  8205 ;; Defined at:
  8206 ;;		line 49 in file "I2C.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  buffer          2    0[BANK0 ] PTR unsigned char 
  8209 ;;		 -> AD5272_COMMANDS(2), 
  8210 ;;  buffer_size     1    2[BANK0 ] unsigned char 
  8211 ;;  address         1    3[BANK0 ] unsigned char 
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;  i               1   11[BANK0 ] unsigned char 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      unsigned char 
  8216 ;; Registers used:
  8217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8223 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8225 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8226 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8227 ;;Total ram usage:       12 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; Hardware stack levels required when called:    2
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		_main
  8234 ;;		_I2C_handler
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           	psect	text32
  8239  004AE6                     __ptext32:
  8240                           	opt callstack 0
  8241  004AE6                     _I2C_Transmit:
  8242                           	opt callstack 26
  8243                           
  8244                           ;I2C.c: 50:     if(I2C_STOP_DETECTED && I2C1STAT0bits.BFRE && I2C1CNT == 0){
  8245                           
  8246                           ;incstack = 0
  8247  004AE6  5049               	movf	_I2C_STOP_DETECTED,w,c
  8248  004AE8  B4D8               	btfsc	status,2,c
  8249  004AEA  0012               	return	
  8250  004AEC  013D               	movlb	61	; () banked
  8251  004AEE  AF77               	btfss	119,7,b	;volatile
  8252  004AF0  0012               	return	
  8253                           
  8254                           ; BSR set to: 61
  8255  004AF2  516C               	movf	108,w,b	;volatile
  8256  004AF4  A4D8               	btfss	status,2,c
  8257  004AF6  0012               	return	
  8258                           
  8259                           ; BSR set to: 61
  8260                           ;I2C.c: 51:         I2C_STOP_DETECTED = 0;
  8261  004AF8  0E00               	movlw	0
  8262  004AFA  6E49               	movwf	_I2C_STOP_DETECTED,c
  8263                           
  8264                           ;I2C.c: 52:         for(unsigned char i=0;i<(buffer_size-1);i++){
  8265  004AFC  0E00               	movlw	0
  8266  004AFE  0100               	movlb	0	; () banked
  8267  004B00  6F6B               	movwf	I2C_Transmit@i& (0+255),b
  8268  004B02  D016               	goto	l6399
  8269  004B04                     l6395:
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;I2C.c: 53:             I2C_TX_BUFFER[i] = buffer[i+1];
  8273  004B04  516B               	movf	I2C_Transmit@i& (0+255),w,b
  8274  004B06  2560               	addwf	I2C_Transmit@buffer& (0+255),w,b
  8275  004B08  6F64               	movwf	??_I2C_Transmit& (0+255),b
  8276  004B0A  0E00               	movlw	0
  8277  004B0C  2161               	addwfc	(I2C_Transmit@buffer+1)& (0+255),w,b
  8278  004B0E  6F65               	movwf	(??_I2C_Transmit+1)& (0+255),b
  8279  004B10  0E01               	movlw	1
  8280  004B12  2564               	addwf	??_I2C_Transmit& (0+255),w,b
  8281  004B14  6ED9               	movwf	fsr2l,c
  8282  004B16  0E00               	movlw	0
  8283  004B18  2165               	addwfc	(??_I2C_Transmit+1)& (0+255),w,b
  8284  004B1A  6EDA               	movwf	fsr2h,c
  8285  004B1C  0E2A               	movlw	low _I2C_TX_BUFFER
  8286  004B1E  256B               	addwf	I2C_Transmit@i& (0+255),w,b
  8287  004B20  6EE1               	movwf	fsr1l,c
  8288  004B22  6AE2               	clrf	fsr1h,c
  8289  004B24  0E01               	movlw	high _I2C_TX_BUFFER
  8290  004B26  22E2               	addwfc	fsr1h,f,c
  8291  004B28  006F FF7F FFE7     	movff	indf2,indf1
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;I2C.c: 54:         }
  8295  004B2E  2B6B               	incf	I2C_Transmit@i& (0+255),f,b
  8296  004B30                     l6399:
  8297                           
  8298                           ; BSR set to: 0
  8299  004B30  0EFF               	movlw	255
  8300  004B32  6F64               	movwf	??_I2C_Transmit& (0+255),b
  8301  004B34  0EFF               	movlw	255
  8302  004B36  6F65               	movwf	(??_I2C_Transmit+1)& (0+255),b
  8303  004B38  5162               	movf	I2C_Transmit@buffer_size& (0+255),w,b
  8304  004B3A  6F66               	movwf	(??_I2C_Transmit+2)& (0+255),b
  8305  004B3C  6B67               	clrf	(??_I2C_Transmit+3)& (0+255),b
  8306  004B3E  5164               	movf	??_I2C_Transmit& (0+255),w,b
  8307  004B40  2766               	addwf	(??_I2C_Transmit+2)& (0+255),f,b
  8308  004B42  5165               	movf	(??_I2C_Transmit+1)& (0+255),w,b
  8309  004B44  2367               	addwfc	(??_I2C_Transmit+3)& (0+255),f,b
  8310  004B46  516B               	movf	I2C_Transmit@i& (0+255),w,b
  8311  004B48  6F68               	movwf	(??_I2C_Transmit+4)& (0+255),b
  8312  004B4A  6B69               	clrf	(??_I2C_Transmit+5)& (0+255),b
  8313  004B4C  5166               	movf	(??_I2C_Transmit+2)& (0+255),w,b
  8314  004B4E  5D68               	subwf	(??_I2C_Transmit+4)& (0+255),w,b
  8315  004B50  5169               	movf	(??_I2C_Transmit+5)& (0+255),w,b
  8316  004B52  0A80               	xorlw	128
  8317  004B54  6F6A               	movwf	(??_I2C_Transmit+6)& (0+255),b
  8318  004B56  5167               	movf	(??_I2C_Transmit+3)& (0+255),w,b
  8319  004B58  0A80               	xorlw	128
  8320  004B5A  596A               	subwfb	(??_I2C_Transmit+6)& (0+255),w,b
  8321  004B5C  A0D8               	btfss	status,0,c
  8322  004B5E  D7D2               	goto	l6395
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;I2C.c: 55:         I2C1ADB1 = address;
  8326  004B60  0060  F18F  FD6E   	movff	I2C_Transmit@address,15726	;volatile
  8327                           
  8328                           ;I2C.c: 56:         I2C1CNT = buffer_size;
  8329  004B66  0060  F18B  FD6C   	movff	I2C_Transmit@buffer_size,15724	;volatile
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;I2C.c: 57:         I2C1TXB = buffer[0];
  8333  004B6C  0060  F183  FFD9   	movff	I2C_Transmit@buffer,fsr2l
  8334  004B72  0060  F187  FFDA   	movff	I2C_Transmit@buffer+1,fsr2h
  8335  004B78  50DF               	movf	indf2,w,c
  8336  004B7A  013D               	movlb	61	; () banked
  8337  004B7C  6F6B               	movwf	107,b	;volatile
  8338                           
  8339                           ; BSR set to: 61
  8340                           ;I2C.c: 58:         I2C_TX_COUNTER = 0;
  8341  004B7E  0E00               	movlw	0
  8342  004B80  6E4B               	movwf	_I2C_TX_COUNTER,c
  8343                           
  8344                           ; BSR set to: 61
  8345                           ;I2C.c: 59:         I2C1CON0bits.S = 1;
  8346  004B82  8B73               	bsf	115,5,b	;volatile
  8347  004B84  0012               	return		;funcret
  8348  004B86                     __end_of_I2C_Transmit:
  8349                           	opt callstack 0
  8350                           
  8351 ;; *************** function _GetStringSize *****************
  8352 ;; Defined at:
  8353 ;;		line 270 in file "main.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;		None
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;  i               2    2[BANK0 ] int 
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  2    0[BANK0 ] int 
  8360 ;; Registers used:
  8361 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8367 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8368 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8370 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8371 ;;Total ram usage:        4 bytes
  8372 ;; Hardware stack levels used:    1
  8373 ;; Hardware stack levels required when called:    2
  8374 ;; This function calls:
  8375 ;;		Nothing
  8376 ;; This function is called by:
  8377 ;;		_USART_handler
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           	psect	text33
  8382  00511A                     __ptext33:
  8383                           	opt callstack 0
  8384  00511A                     _GetStringSize:
  8385                           	opt callstack 27
  8386                           
  8387                           ;main.c: 271:     int i;;main.c: 272:     for(i=0;i<32;i++){
  8388                           
  8389                           ;incstack = 0
  8390  00511A  0E00               	movlw	0
  8391  00511C  0100               	movlb	0	; () banked
  8392  00511E  6F63               	movwf	(GetStringSize@i+1)& (0+255),b
  8393  005120  0E00               	movlw	0
  8394  005122  6F62               	movwf	GetStringSize@i& (0+255),b
  8395  005124                     l6481:
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;main.c: 273:         if(tx_buffer[i] == 0){
  8399  005124  0E84               	movlw	low _tx_buffer
  8400  005126  2562               	addwf	GetStringSize@i& (0+255),w,b
  8401  005128  6ED9               	movwf	fsr2l,c
  8402  00512A  0E01               	movlw	high _tx_buffer
  8403  00512C  2163               	addwfc	(GetStringSize@i+1)& (0+255),w,b
  8404  00512E  6EDA               	movwf	fsr2h,c
  8405  005130  50DF               	movf	indf2,w,c
  8406  005132  B4D8               	btfsc	status,2,c
  8407  005134  D00A               	goto	u8520
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;main.c: 276:     }
  8411  005136  4B62               	infsnz	GetStringSize@i& (0+255),f,b
  8412  005138  2B63               	incf	(GetStringSize@i+1)& (0+255),f,b
  8413                           
  8414                           ; BSR set to: 0
  8415  00513A  BF63               	btfsc	(GetStringSize@i+1)& (0+255),7,b
  8416  00513C  D7F3               	goto	l6481
  8417  00513E  5163               	movf	(GetStringSize@i+1)& (0+255),w,b
  8418  005140  E104               	bnz	u8520
  8419  005142  0E20               	movlw	32
  8420  005144  5D62               	subwf	GetStringSize@i& (0+255),w,b
  8421  005146  A0D8               	btfss	status,0,c
  8422  005148  D7ED               	goto	l6481
  8423  00514A                     u8520:
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;main.c: 277:     return i;
  8427  00514A  0060  F188  F060   	movff	GetStringSize@i,?_GetStringSize
  8428  005150  0060  F18C  F061   	movff	GetStringSize@i+1,?_GetStringSize+1
  8429                           
  8430                           ; BSR set to: 0
  8431  005156  0012               	return		;funcret
  8432  005158                     __end_of_GetStringSize:
  8433                           	opt callstack 0
  8434                           
  8435 ;; *************** function _USART1_ReceiveCommand *****************
  8436 ;; Defined at:
  8437 ;;		line 84 in file "USART1.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;		None
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;		None
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      unsigned char 
  8444 ;; Registers used:
  8445 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8454 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8455 ;;Total ram usage:        2 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:    3
  8458 ;; This function calls:
  8459 ;;		___wmul
  8460 ;; This function is called by:
  8461 ;;		_main
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           	psect	text34
  8466  003EDC                     __ptext34:
  8467                           	opt callstack 0
  8468  003EDC                     _USART1_ReceiveCommand:
  8469                           	opt callstack 27
  8470                           
  8471                           ;USART1.c: 85:     if(rx_counter == 0)
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;incstack = 0
  8475  003EDC  504F               	movf	_rx_counter,w,c
  8476  003EDE  A4D8               	btfss	status,2,c
  8477  003EE0  D002               	goto	l6533
  8478  003EE2                     u8530:
  8479                           
  8480                           ;USART1.c: 86:         return 0;
  8481  003EE2  0E00               	movlw	0
  8482  003EE4  0012               	return	
  8483  003EE6                     l6533:
  8484                           
  8485                           ;USART1.c: 87:     if(rx_counter == 1 && rx_buffer[0] != 'W' && rx_buffer[0] != 'R'){
  8486  003EE6  044F               	decf	_rx_counter,w,c
  8487  003EE8  A4D8               	btfss	status,2,c
  8488  003EEA  D00C               	goto	l6545
  8489  003EEC  0E57               	movlw	87
  8490  003EEE  0101               	movlb	1	; () banked
  8491  003EF0  1900               	xorwf	_rx_buffer& (0+255),w,b
  8492  003EF2  B4D8               	btfsc	status,2,c
  8493  003EF4  D007               	goto	l6545
  8494                           
  8495                           ; BSR set to: 1
  8496  003EF6  0E52               	movlw	82
  8497  003EF8  1900               	xorwf	_rx_buffer& (0+255),w,b
  8498  003EFA  B4D8               	btfsc	status,2,c
  8499  003EFC  D003               	goto	l6545
  8500  003EFE                     u8560:
  8501                           
  8502                           ; BSR set to: 1
  8503                           ;USART1.c: 88:         rx_counter = 0;
  8504  003EFE  0E00               	movlw	0
  8505  003F00  6E4F               	movwf	_rx_counter,c
  8506  003F02  D7EF               	goto	u8530
  8507  003F04                     l6545:
  8508                           
  8509                           ;USART1.c: 91:     if(rx_buffer[0] == 'R') {
  8510  003F04  0E52               	movlw	82
  8511  003F06  0101               	movlb	1	; () banked
  8512  003F08  1900               	xorwf	_rx_buffer& (0+255),w,b
  8513  003F0A  A4D8               	btfss	status,2,c
  8514  003F0C  D032               	goto	l6589
  8515                           
  8516                           ; BSR set to: 1
  8517                           ;USART1.c: 92:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57)
      +                          )){
  8518  003F0E  0E02               	movlw	2
  8519  003F10  184F               	xorwf	_rx_counter,w,c
  8520  003F12  A4D8               	btfss	status,2,c
  8521  003F14  D007               	goto	l6555
  8522                           
  8523                           ; BSR set to: 1
  8524  003F16  0E2F               	movlw	47
  8525  003F18  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8526  003F1A  D7F1               	goto	u8560
  8527                           
  8528                           ; BSR set to: 1
  8529  003F1C  0E39               	movlw	57
  8530  003F1E  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8531  003F20  D001               	goto	l6555
  8532  003F22  D7ED               	goto	u8560
  8533  003F24                     l6555:
  8534                           
  8535                           ; BSR set to: 1
  8536  003F24  0E03               	movlw	3
  8537  003F26  184F               	xorwf	_rx_counter,w,c
  8538  003F28  A4D8               	btfss	status,2,c
  8539  003F2A  D004               	goto	l6561
  8540                           
  8541                           ; BSR set to: 1
  8542  003F2C  0E0D               	movlw	13
  8543  003F2E  1902               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8544  003F30  A4D8               	btfss	status,2,c
  8545  003F32  D7E5               	goto	u8560
  8546  003F34                     l6561:
  8547                           
  8548                           ; BSR set to: 1
  8549  003F34  0E04               	movlw	4
  8550  003F36  184F               	xorwf	_rx_counter,w,c
  8551  003F38  A4D8               	btfss	status,2,c
  8552  003F3A  D7D3               	goto	u8530
  8553                           
  8554                           ; BSR set to: 1
  8555                           ;USART1.c: 97:             if(rx_buffer[0] != 'R' || (rx_buffer[1] < 48) || (rx_buffer[1
      +                          ] > 57) || rx_buffer[2] != '\r' || rx_buffer[3] != '\n'){
  8556  003F3C  0E52               	movlw	82
  8557  003F3E  1900               	xorwf	_rx_buffer& (0+255),w,b
  8558  003F40  A4D8               	btfss	status,2,c
  8559  003F42  D7DD               	goto	u8560
  8560                           
  8561                           ; BSR set to: 1
  8562  003F44  0E2F               	movlw	47
  8563  003F46  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8564  003F48  D7DA               	goto	u8560
  8565                           
  8566                           ; BSR set to: 1
  8567  003F4A  0E3A               	movlw	58
  8568  003F4C  6101               	cpfslt	(_rx_buffer+1)& (0+255),b
  8569  003F4E  D7D7               	goto	u8560
  8570                           
  8571                           ; BSR set to: 1
  8572  003F50  0E0D               	movlw	13
  8573  003F52  1902               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8574  003F54  A4D8               	btfss	status,2,c
  8575  003F56  D7D3               	goto	u8560
  8576                           
  8577                           ; BSR set to: 1
  8578  003F58  0E0A               	movlw	10
  8579  003F5A  1903               	xorwf	(_rx_buffer+3)& (0+255),w,b
  8580  003F5C  A4D8               	btfss	status,2,c
  8581  003F5E  D7CF               	goto	u8560
  8582                           
  8583                           ; BSR set to: 1
  8584                           ;USART1.c: 101:             COMMAND_WR = 1;
  8585  003F60  0E01               	movlw	1
  8586  003F62  6E4D               	movwf	_COMMAND_WR,c
  8587                           
  8588                           ; BSR set to: 1
  8589                           ;USART1.c: 102:             COMMAND = rx_buffer[1]-48;
  8590  003F64  5101               	movf	(_rx_buffer+1)& (0+255),w,b
  8591  003F66  0FD0               	addlw	208
  8592  003F68  6E4C               	movwf	_COMMAND,c
  8593  003F6A                     l6583:
  8594                           
  8595                           ;USART1.c: 103:             rx_counter = 0;
  8596  003F6A  0E00               	movlw	0
  8597  003F6C  6E4F               	movwf	_rx_counter,c
  8598                           
  8599                           ;USART1.c: 104:             return 1;
  8600  003F6E  0E01               	movlw	1
  8601  003F70  0012               	return	
  8602  003F72                     l6589:
  8603                           
  8604                           ; BSR set to: 1
  8605                           ;USART1.c: 107:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57
      +                          ))){
  8606  003F72  0E02               	movlw	2
  8607  003F74  184F               	xorwf	_rx_counter,w,c
  8608  003F76  A4D8               	btfss	status,2,c
  8609  003F78  D007               	goto	l6597
  8610                           
  8611                           ; BSR set to: 1
  8612  003F7A  0E2F               	movlw	47
  8613  003F7C  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8614  003F7E  D7BF               	goto	u8560
  8615                           
  8616                           ; BSR set to: 1
  8617  003F80  0E39               	movlw	57
  8618  003F82  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8619  003F84  D001               	goto	l6597
  8620  003F86  D7BB               	goto	u8560
  8621  003F88                     l6597:
  8622                           
  8623                           ; BSR set to: 1
  8624  003F88  0E03               	movlw	3
  8625  003F8A  184F               	xorwf	_rx_counter,w,c
  8626  003F8C  A4D8               	btfss	status,2,c
  8627  003F8E  D007               	goto	l6605
  8628                           
  8629                           ; BSR set to: 1
  8630  003F90  0E2F               	movlw	47
  8631  003F92  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8632  003F94  D7B4               	goto	u8560
  8633                           
  8634                           ; BSR set to: 1
  8635  003F96  0E39               	movlw	57
  8636  003F98  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8637  003F9A  D001               	goto	l6605
  8638  003F9C  D7B0               	goto	u8560
  8639  003F9E                     l6605:
  8640                           
  8641                           ; BSR set to: 1
  8642  003F9E  0E04               	movlw	4
  8643  003FA0  184F               	xorwf	_rx_counter,w,c
  8644  003FA2  A4D8               	btfss	status,2,c
  8645  003FA4  D007               	goto	l6613
  8646                           
  8647                           ; BSR set to: 1
  8648  003FA6  0E2F               	movlw	47
  8649  003FA8  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8650  003FAA  D7A9               	goto	u8560
  8651                           
  8652                           ; BSR set to: 1
  8653  003FAC  0E39               	movlw	57
  8654  003FAE  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8655  003FB0  D001               	goto	l6613
  8656  003FB2  D7A5               	goto	u8560
  8657  003FB4                     l6613:
  8658                           
  8659                           ; BSR set to: 1
  8660  003FB4  0E05               	movlw	5
  8661  003FB6  184F               	xorwf	_rx_counter,w,c
  8662  003FB8  A4D8               	btfss	status,2,c
  8663  003FBA  D007               	goto	l6621
  8664                           
  8665                           ; BSR set to: 1
  8666  003FBC  0E2F               	movlw	47
  8667  003FBE  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8668  003FC0  D79E               	goto	u8560
  8669                           
  8670                           ; BSR set to: 1
  8671  003FC2  0E39               	movlw	57
  8672  003FC4  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8673  003FC6  D001               	goto	l6621
  8674  003FC8  D79A               	goto	u8560
  8675  003FCA                     l6621:
  8676                           
  8677                           ; BSR set to: 1
  8678  003FCA  0E06               	movlw	6
  8679  003FCC  184F               	xorwf	_rx_counter,w,c
  8680  003FCE  A4D8               	btfss	status,2,c
  8681  003FD0  D007               	goto	l6629
  8682                           
  8683                           ; BSR set to: 1
  8684  003FD2  0E2F               	movlw	47
  8685  003FD4  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8686  003FD6  D793               	goto	u8560
  8687                           
  8688                           ; BSR set to: 1
  8689  003FD8  0E39               	movlw	57
  8690  003FDA  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8691  003FDC  D001               	goto	l6629
  8692  003FDE  D78F               	goto	u8560
  8693  003FE0                     l6629:
  8694                           
  8695                           ; BSR set to: 1
  8696  003FE0  0E07               	movlw	7
  8697  003FE2  184F               	xorwf	_rx_counter,w,c
  8698  003FE4  A4D8               	btfss	status,2,c
  8699  003FE6  D004               	goto	l6635
  8700                           
  8701                           ; BSR set to: 1
  8702  003FE8  0E0D               	movlw	13
  8703  003FEA  1906               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8704  003FEC  A4D8               	btfss	status,2,c
  8705  003FEE  D787               	goto	u8560
  8706  003FF0                     l6635:
  8707                           
  8708                           ; BSR set to: 1
  8709  003FF0  0E08               	movlw	8
  8710  003FF2  184F               	xorwf	_rx_counter,w,c
  8711  003FF4  A4D8               	btfss	status,2,c
  8712  003FF6  D775               	goto	u8530
  8713                           
  8714                           ; BSR set to: 1
  8715                           ;USART1.c: 120:             if(rx_buffer[0] != 'W' || (rx_buffer[1] < 48) || (rx_buffer[
      +                          1] > 57) || (rx_buffer[2] < 48) || (rx_buffer[2] > 57) || (rx_buffer[3] < 48) || (rx_buf
      +                          fer[3] > 57) || (rx_buffer[4] < 48) || (rx_buffer[4] > 57) || (rx_buffer[5] < 48) || (rx
      +                          _buffer[5] > 57) || rx_buffer[6] != '\r' || rx_buffer[7] != '\n'){
  8716  003FF8  0E57               	movlw	87
  8717  003FFA  1900               	xorwf	_rx_buffer& (0+255),w,b
  8718  003FFC  A4D8               	btfss	status,2,c
  8719  003FFE  D77F               	goto	u8560
  8720                           
  8721                           ; BSR set to: 1
  8722  004000  0E2F               	movlw	47
  8723  004002  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8724  004004  D77C               	goto	u8560
  8725                           
  8726                           ; BSR set to: 1
  8727  004006  0E3A               	movlw	58
  8728  004008  6101               	cpfslt	(_rx_buffer+1)& (0+255),b
  8729  00400A  D779               	goto	u8560
  8730                           
  8731                           ; BSR set to: 1
  8732  00400C  0E2F               	movlw	47
  8733  00400E  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8734  004010  D776               	goto	u8560
  8735                           
  8736                           ; BSR set to: 1
  8737  004012  0E3A               	movlw	58
  8738  004014  6102               	cpfslt	(_rx_buffer+2)& (0+255),b
  8739  004016  D773               	goto	u8560
  8740                           
  8741                           ; BSR set to: 1
  8742  004018  0E2F               	movlw	47
  8743  00401A  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8744  00401C  D770               	goto	u8560
  8745                           
  8746                           ; BSR set to: 1
  8747  00401E  0E3A               	movlw	58
  8748  004020  6103               	cpfslt	(_rx_buffer+3)& (0+255),b
  8749  004022  D76D               	goto	u8560
  8750                           
  8751                           ; BSR set to: 1
  8752  004024  0E2F               	movlw	47
  8753  004026  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8754  004028  D76A               	goto	u8560
  8755                           
  8756                           ; BSR set to: 1
  8757  00402A  0E3A               	movlw	58
  8758  00402C  6104               	cpfslt	(_rx_buffer+4)& (0+255),b
  8759  00402E  D767               	goto	u8560
  8760                           
  8761                           ; BSR set to: 1
  8762  004030  0E2F               	movlw	47
  8763  004032  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8764  004034  D764               	goto	u8560
  8765                           
  8766                           ; BSR set to: 1
  8767  004036  0E3A               	movlw	58
  8768  004038  6105               	cpfslt	(_rx_buffer+5)& (0+255),b
  8769  00403A  D761               	goto	u8560
  8770                           
  8771                           ; BSR set to: 1
  8772  00403C  0E0D               	movlw	13
  8773  00403E  1906               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8774  004040  A4D8               	btfss	status,2,c
  8775  004042  D75D               	goto	u8560
  8776                           
  8777                           ; BSR set to: 1
  8778  004044  0E0A               	movlw	10
  8779  004046  1907               	xorwf	(_rx_buffer+7)& (0+255),w,b
  8780  004048  A4D8               	btfss	status,2,c
  8781  00404A  D759               	goto	u8560
  8782                           
  8783                           ; BSR set to: 1
  8784                           ;USART1.c: 124:             COMMAND_WR = 0;
  8785  00404C  0E00               	movlw	0
  8786  00404E  6E4D               	movwf	_COMMAND_WR,c
  8787                           
  8788                           ; BSR set to: 1
  8789                           ;USART1.c: 125:             COMMAND = rx_buffer[1]-48;
  8790  004050  5101               	movf	(_rx_buffer+1)& (0+255),w,b
  8791  004052  0FD0               	addlw	208
  8792  004054  6E4C               	movwf	_COMMAND,c
  8793                           
  8794                           ; BSR set to: 1
  8795                           ;USART1.c: 126:             COMMAND_WRITE_NUMBER = ((rx_buffer[2]-48) * 1000) + ((rx_buf
      +                          fer[3]-48) * 100) + ((rx_buffer[4]-48) * 10) + (rx_buffer[5]-48);
  8796  004056  0060  F408  F060   	movff	_rx_buffer+2,___wmul@multiplier
  8797  00405C  0100               	movlb	0	; () banked
  8798  00405E  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  8799  004060  0E03               	movlw	3
  8800  004062  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8801  004064  0EE8               	movlw	232
  8802  004066  6F62               	movwf	___wmul@multiplicand& (0+255),b
  8803  004068  EC1A  F029         	call	___wmul	;wreg free
  8804  00406C  0101               	movlb	1	; () banked
  8805  00406E  5103               	movf	(_rx_buffer+3)& (0+255),w,b
  8806  004070  0D64               	mullw	100
  8807  004072  006F FFCC  F066    	movff	prodl,??_USART1_ReceiveCommand
  8808  004078  006F FFD0  F067    	movff	prodh,??_USART1_ReceiveCommand+1
  8809  00407E  5104               	movf	(_rx_buffer+4)& (0+255),w,b
  8810  004080  0D0A               	mullw	10
  8811  004082  50F3               	movf	prodl,w,c
  8812  004084  0100               	movlb	0	; () banked
  8813  004086  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8814  004088  50F4               	movf	prodh,w,c
  8815  00408A  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8816  00408C  5160               	movf	?___wmul& (0+255),w,b
  8817  00408E  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8818  004090  5161               	movf	(?___wmul+1)& (0+255),w,b
  8819  004092  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8820  004094  0101               	movlb	1	; () banked
  8821  004096  5105               	movf	(_rx_buffer+5)& (0+255),w,b
  8822  004098  0100               	movlb	0	; () banked
  8823  00409A  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8824  00409C  0E00               	movlw	0
  8825  00409E  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8826  0040A0  0EB0               	movlw	176
  8827  0040A2  2566               	addwf	??_USART1_ReceiveCommand& (0+255),w,b
  8828  0040A4  6E45               	movwf	_COMMAND_WRITE_NUMBER,c
  8829  0040A6  0E2F               	movlw	47
  8830  0040A8  2167               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),w,b
  8831  0040AA  6E46               	movwf	_COMMAND_WRITE_NUMBER+1,c
  8832  0040AC  D75E               	goto	l6583
  8833  0040AE                     __end_of_USART1_ReceiveCommand:
  8834                           	opt callstack 0
  8835                           
  8836 ;; *************** function ___wmul *****************
  8837 ;; Defined at:
  8838 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8841 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;  product         2    4[BANK0 ] unsigned int 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  2    0[BANK0 ] unsigned int 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0, prodl, prodh
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8853 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8854 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8856 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8857 ;;Total ram usage:        6 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    2
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_USART1_ReceiveCommand
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text35
  8868  005234                     __ptext35:
  8869                           	opt callstack 0
  8870  005234                     ___wmul:
  8871                           	opt callstack 27
  8872                           
  8873                           ;incstack = 0
  8874  005234  0100               	movlb	0	; () banked
  8875  005236  5160               	movf	___wmul@multiplier& (0+255),w,b
  8876  005238  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8877  00523A  006F FFCC  F064    	movff	prodl,___wmul@product
  8878  005240  006F FFD0  F065    	movff	prodh,___wmul@product+1
  8879  005246  5160               	movf	___wmul@multiplier& (0+255),w,b
  8880  005248  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8881  00524A  50F3               	movf	prodl,w,c
  8882  00524C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8883  00524E  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8884  005250  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8885  005252  50F3               	movf	prodl,w,c
  8886  005254  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8887                           
  8888                           ; BSR set to: 0
  8889  005256  0060  F190  F060   	movff	___wmul@product,?___wmul
  8890  00525C  0060  F194  F061   	movff	___wmul@product+1,?___wmul+1
  8891                           
  8892                           ; BSR set to: 0
  8893  005262  0012               	return		;funcret
  8894  005264                     __end_of___wmul:
  8895                           	opt callstack 0
  8896                           
  8897 ;; *************** function _USART1_Init *****************
  8898 ;; Defined at:
  8899 ;;		line 5 in file "USART1.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;  baud_rate       1    wreg     unsigned char 
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;  baud_rate       1    2[BANK0 ] unsigned char 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg, status,2, status,0
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8916 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8917 ;;Total ram usage:        3 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    2
  8920 ;; This function calls:
  8921 ;;		Nothing
  8922 ;; This function is called by:
  8923 ;;		_main
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           	psect	text36
  8928  004C9C                     __ptext36:
  8929                           	opt callstack 0
  8930  004C9C                     _USART1_Init:
  8931                           	opt callstack 28
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;incstack = 0
  8935                           ;USART1_Init@baud_rate stored from wreg
  8936  004C9C  0100               	movlb	0	; () banked
  8937  004C9E  6F62               	movwf	USART1_Init@baud_rate& (0+255),b
  8938                           
  8939                           ;USART1.c: 7:     TRISCbits.TRISC6 = 1;
  8940  004CA0  8CC4               	bsf	16324,6,c	;volatile
  8941                           
  8942                           ;USART1.c: 8:     TRISCbits.TRISC7 = 0;
  8943  004CA2  9EC4               	bcf	16324,7,c	;volatile
  8944                           
  8945                           ;USART1.c: 9:     ANSELCbits.ANSELC6 = 0;
  8946  004CA4  013A               	movlb	58	; () banked
  8947  004CA6  9D60               	bcf	96,6,b	;volatile
  8948                           
  8949                           ;USART1.c: 10:     ANSELCbits.ANSELC7 = 0;
  8950  004CA8  9F60               	bcf	96,7,b	;volatile
  8951                           
  8952                           ; BSR set to: 58
  8953                           ;USART1.c: 11:     U1RXPPS = 0x16;
  8954  004CAA  0E16               	movlw	22
  8955  004CAC  6FE5               	movwf	229,b	;volatile
  8956                           
  8957                           ;USART1.c: 12:     RC7PPS = 0x13;
  8958  004CAE  0E13               	movlw	19
  8959  004CB0  6F17               	movwf	23,b	;volatile
  8960                           
  8961                           ;USART1.c: 15:     switch(baud_rate){
  8962  004CB2  D010               	goto	l6509
  8963  004CB4                     l6499:
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;USART1.c: 17:             U1BRGH = 0x03;
  8967  004CB4  0E03               	movlw	3
  8968  004CB6  013D               	movlb	61	; () banked
  8969  004CB8  6FF6               	movwf	246,b	;volatile
  8970                           
  8971                           ;USART1.c: 18:             U1BRGL = 0x40;
  8972  004CBA  0E40               	movlw	64
  8973  004CBC  D009               	goto	L13
  8974  004CBE                     l6501:
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;USART1.c: 21:             U1BRGH = 0x01;
  8978  004CBE  0E01               	movlw	1
  8979  004CC0  013D               	movlb	61	; () banked
  8980  004CC2  6FF6               	movwf	246,b	;volatile
  8981                           
  8982                           ;USART1.c: 22:             U1BRGL = 0x14;
  8983  004CC4  0E14               	movlw	20
  8984  004CC6  D004               	goto	L13
  8985  004CC8                     l6503:
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;USART1.c: 25:             U1BRGH = 0x00;
  8989  004CC8  0E00               	movlw	0
  8990  004CCA  013D               	movlb	61	; () banked
  8991  004CCC  6FF6               	movwf	246,b	;volatile
  8992                           
  8993                           ;USART1.c: 26:             U1BRGL = 0x89;
  8994  004CCE  0E89               	movlw	137
  8995  004CD0                     L13:
  8996  004CD0  6FF5               	movwf	245,b	;volatile
  8997                           
  8998                           ;USART1.c: 27:             break;
  8999  004CD2  D011               	goto	l6511
  9000  004CD4                     l6509:
  9001                           
  9002                           ; BSR set to: 58
  9003  004CD4  0100               	movlb	0	; () banked
  9004  004CD6  5162               	movf	USART1_Init@baud_rate& (0+255),w,b
  9005  004CD8  6F60               	movwf	??_USART1_Init& (0+255),b
  9006  004CDA  6B61               	clrf	(??_USART1_Init+1)& (0+255),b
  9007                           
  9008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9009                           ; Switch size 1, requested type "simple"
  9010                           ; Number of cases is 1, Range of values is 0 to 0
  9011                           ; switch strategies available:
  9012                           ; Name         Instructions Cycles
  9013                           ; simple_byte            4     3 (average)
  9014                           ;	Chosen strategy is simple_byte
  9015  004CDC  5161               	movf	(??_USART1_Init+1)& (0+255),w,b
  9016  004CDE  0A00               	xorlw	0	; case 0
  9017  004CE0  A4D8               	btfss	status,2,c
  9018  004CE2  D7F2               	goto	l6503
  9019                           
  9020                           ; BSR set to: 0
  9021                           ; Switch size 1, requested type "simple"
  9022                           ; Number of cases is 3, Range of values is 1 to 3
  9023                           ; switch strategies available:
  9024                           ; Name         Instructions Cycles
  9025                           ; simple_byte           10     6 (average)
  9026                           ;	Chosen strategy is simple_byte
  9027  004CE4  5160               	movf	??_USART1_Init& (0+255),w,b
  9028  004CE6  0A01               	xorlw	1	; case 1
  9029  004CE8  B4D8               	btfsc	status,2,c
  9030  004CEA  D7E4               	goto	l6499
  9031  004CEC  0A03               	xorlw	3	; case 2
  9032  004CEE  B4D8               	btfsc	status,2,c
  9033  004CF0  D7E6               	goto	l6501
  9034  004CF2  0A01               	xorlw	1	; case 3
  9035  004CF4  D7E9               	goto	l6503
  9036  004CF6                     l6511:
  9037                           
  9038                           ; BSR set to: 61
  9039                           ;USART1.c: 34:     rx_counter = 0;
  9040  004CF6  0E00               	movlw	0
  9041  004CF8  6E4F               	movwf	_rx_counter,c
  9042                           
  9043                           ;USART1.c: 36:     U1CON0 = 0xB0;
  9044  004CFA  0EB0               	movlw	176
  9045  004CFC  6FF2               	movwf	242,b	;volatile
  9046                           
  9047                           ;USART1.c: 37:     U1CON1 = 0x00;
  9048  004CFE  0E00               	movlw	0
  9049  004D00  6FF3               	movwf	243,b	;volatile
  9050                           
  9051                           ;USART1.c: 38:     U2CON2 = 0x80;
  9052  004D02  0E80               	movlw	128
  9053  004D04  6FDC               	movwf	220,b	;volatile
  9054                           
  9055                           ;USART1.c: 39:     U1ERRIE = 0x00;
  9056  004D06  0E00               	movlw	0
  9057  004D08  6FFA               	movwf	250,b	;volatile
  9058                           
  9059                           ;USART1.c: 40:     U1UIR = 0x00;
  9060  004D0A  0E00               	movlw	0
  9061  004D0C  6FF8               	movwf	248,b	;volatile
  9062                           
  9063                           ; BSR set to: 61
  9064                           ;USART1.c: 41:     PIE3bits.U1RXIE = 1;
  9065  004D0E  0139               	movlb	57	; () banked
  9066  004D10  8793               	bsf	147,3,b	;volatile
  9067                           
  9068                           ; BSR set to: 57
  9069                           ;USART1.c: 42:     PIE3bits.U1TXIE =1;
  9070  004D12  8993               	bsf	147,4,b	;volatile
  9071                           
  9072                           ; BSR set to: 57
  9073                           ;USART1.c: 43:     IPR3bits.U1RXIP = 1;
  9074  004D14  8783               	bsf	131,3,b	;volatile
  9075                           
  9076                           ; BSR set to: 57
  9077                           ;USART1.c: 44:     IPR3bits.U1TXIP = 1;
  9078  004D16  8983               	bsf	131,4,b	;volatile
  9079                           
  9080                           ;USART1.c: 45:     PIR3 = 0x00;
  9081  004D18  0E00               	movlw	0
  9082  004D1A  6FA3               	movwf	163,b	;volatile
  9083                           
  9084                           ; BSR set to: 57
  9085                           ;USART1.c: 46:     U1CON1bits.ON = 1;
  9086  004D1C  013D               	movlb	61	; () banked
  9087  004D1E  8FF3               	bsf	243,7,b	;volatile
  9088                           
  9089                           ; BSR set to: 61
  9090  004D20  0012               	return		;funcret
  9091  004D22                     __end_of_USART1_Init:
  9092                           	opt callstack 0
  9093                           
  9094 ;; *************** function _I2C_Init *****************
  9095 ;; Defined at:
  9096 ;;		line 4 in file "I2C.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;		None
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  1    wreg      void 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9114 ;;Total ram usage:        0 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    2
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_main
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text37
  9125  004E70                     __ptext37:
  9126                           	opt callstack 0
  9127  004E70                     _I2C_Init:
  9128                           	opt callstack 28
  9129                           
  9130                           ;I2C.c: 6:     TRISBbits.TRISB1 = 0;
  9131                           
  9132                           ; BSR set to: 61
  9133                           ;incstack = 0
  9134  004E70  92C3               	bcf	16323,1,c	;volatile
  9135                           
  9136                           ;I2C.c: 7:     TRISBbits.TRISB0 = 0;
  9137  004E72  90C3               	bcf	16323,0,c	;volatile
  9138                           
  9139                           ;I2C.c: 8:     LATBbits.LATB1 = 0;
  9140  004E74  92BB               	bcf	16315,1,c	;volatile
  9141                           
  9142                           ;I2C.c: 9:     LATBbits.LATB0 = 0;
  9143  004E76  90BB               	bcf	16315,0,c	;volatile
  9144                           
  9145                           ;I2C.c: 10:     ANSELBbits.ANSELB1 = 0;
  9146  004E78  013A               	movlb	58	; () banked
  9147  004E7A  9350               	bcf	80,1,b	;volatile
  9148                           
  9149                           ;I2C.c: 11:     ANSELBbits.ANSELB0 = 0;
  9150  004E7C  9150               	bcf	80,0,b	;volatile
  9151                           
  9152                           ;I2C.c: 12:     ODCONBbits.ODCB1 = 1;
  9153  004E7E  8352               	bsf	82,1,b	;volatile
  9154                           
  9155                           ;I2C.c: 13:     ODCONBbits.ODCB0 = 1;
  9156  004E80  8152               	bsf	82,0,b	;volatile
  9157                           
  9158                           ; BSR set to: 58
  9159                           ;I2C.c: 14:     RB1I2C = 0x01;
  9160  004E82  0E01               	movlw	1
  9161  004E84  6F5A               	movwf	90,b	;volatile
  9162                           
  9163                           ; BSR set to: 58
  9164                           ;I2C.c: 15:     SLRCONBbits.SLRB1 = 0;
  9165  004E86  9353               	bcf	83,1,b	;volatile
  9166                           
  9167                           ; BSR set to: 58
  9168                           ;I2C.c: 16:     SLRCONBbits.SLRB0 = 0;
  9169  004E88  9153               	bcf	83,0,b	;volatile
  9170                           
  9171                           ;I2C.c: 17:     I2C1SCLPPS = 0x09;
  9172  004E8A  0E09               	movlw	9
  9173  004E8C  6FE1               	movwf	225,b	;volatile
  9174                           
  9175                           ;I2C.c: 18:     I2C1SDAPPS = 0x08;
  9176  004E8E  0E08               	movlw	8
  9177  004E90  6FE2               	movwf	226,b	;volatile
  9178                           
  9179                           ;I2C.c: 19:     RB1PPS = 0x21;
  9180  004E92  0E21               	movlw	33
  9181  004E94  6F09               	movwf	9,b	;volatile
  9182                           
  9183                           ;I2C.c: 20:     RB0PPS = 0x22;
  9184  004E96  0E22               	movlw	34
  9185  004E98  6F08               	movwf	8,b	;volatile
  9186                           
  9187                           ;I2C.c: 22:     I2C1CON0 = 0x04;
  9188  004E9A  0E04               	movlw	4
  9189  004E9C  013D               	movlb	61	; () banked
  9190  004E9E  6F73               	movwf	115,b	;volatile
  9191                           
  9192                           ;I2C.c: 23:     I2C1CON1 = 0x80;
  9193  004EA0  0E80               	movlw	128
  9194  004EA2  6F74               	movwf	116,b	;volatile
  9195                           
  9196                           ;I2C.c: 24:     I2C1CON2 = 0x24;
  9197  004EA4  0E24               	movlw	36
  9198  004EA6  6F75               	movwf	117,b	;volatile
  9199                           
  9200                           ;I2C.c: 25:     I2C1CLK = 0x03;
  9201  004EA8  0E03               	movlw	3
  9202  004EAA  6F7B               	movwf	123,b	;volatile
  9203                           
  9204                           ;I2C.c: 27:     I2C1PIR = 0x00;
  9205  004EAC  0E00               	movlw	0
  9206  004EAE  6F79               	movwf	121,b	;volatile
  9207                           
  9208                           ;I2C.c: 28:     I2C1ERR = 0x00;
  9209  004EB0  0E00               	movlw	0
  9210  004EB2  6F76               	movwf	118,b	;volatile
  9211                           
  9212                           ;I2C.c: 30:     I2C_STOP_DETECTED = 1;
  9213  004EB4  0E01               	movlw	1
  9214  004EB6  6E49               	movwf	_I2C_STOP_DETECTED,c
  9215                           
  9216                           ; BSR set to: 61
  9217                           ;I2C.c: 32:     IPR3bits.I2C1TXIP = 0;
  9218  004EB8  0139               	movlb	57	; () banked
  9219  004EBA  9183               	bcf	131,0,b	;volatile
  9220                           
  9221                           ; BSR set to: 57
  9222                           ;I2C.c: 33:     IPR2bits.I2C1RXIP = 0;
  9223  004EBC  9F82               	bcf	130,7,b	;volatile
  9224                           
  9225                           ; BSR set to: 57
  9226                           ;I2C.c: 34:     PIR3bits.I2C1TXIF = 0;
  9227  004EBE  91A3               	bcf	163,0,b	;volatile
  9228                           
  9229                           ; BSR set to: 57
  9230                           ;I2C.c: 35:     PIR2bits.I2C1RXIF = 0;
  9231  004EC0  9FA2               	bcf	162,7,b	;volatile
  9232                           
  9233                           ; BSR set to: 57
  9234                           ;I2C.c: 36:     PIE3bits.I2C1TXIE = 1;
  9235  004EC2  8193               	bsf	147,0,b	;volatile
  9236                           
  9237                           ; BSR set to: 57
  9238                           ;I2C.c: 37:     PIE2bits.I2C1RXIE = 1;
  9239  004EC4  8F92               	bsf	146,7,b	;volatile
  9240                           
  9241                           ; BSR set to: 57
  9242                           ;I2C.c: 40:     I2C1PIRbits.PC1IF = 0;
  9243  004EC6  013D               	movlb	61	; () banked
  9244  004EC8  9579               	bcf	121,2,b	;volatile
  9245                           
  9246                           ; BSR set to: 61
  9247                           ;I2C.c: 41:     I2C1PIEbits.PC1IE = 1;
  9248  004ECA  857A               	bsf	122,2,b	;volatile
  9249                           
  9250                           ; BSR set to: 61
  9251                           ;I2C.c: 42:     IPR3bits.I2C1IP = 0;
  9252  004ECC  0139               	movlb	57	; () banked
  9253  004ECE  9383               	bcf	131,1,b	;volatile
  9254                           
  9255                           ; BSR set to: 57
  9256                           ;I2C.c: 43:     PIR3bits.I2C1IF = 0;
  9257  004ED0  93A3               	bcf	163,1,b	;volatile
  9258                           
  9259                           ; BSR set to: 57
  9260                           ;I2C.c: 44:     PIE3bits.I2C1IE = 1;
  9261  004ED2  8393               	bsf	147,1,b	;volatile
  9262                           
  9263                           ; BSR set to: 57
  9264                           ;I2C.c: 46:     I2C1CON0bits.EN = 1;
  9265  004ED4  013D               	movlb	61	; () banked
  9266  004ED6  8F73               	bsf	115,7,b	;volatile
  9267                           
  9268                           ; BSR set to: 61
  9269  004ED8  0012               	return		;funcret
  9270  004EDA                     __end_of_I2C_Init:
  9271                           	opt callstack 0
  9272                           
  9273 ;; *************** function _ADC_Init *****************
  9274 ;; Defined at:
  9275 ;;		line 246 in file "main.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;		None
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;		None
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1    wreg      void 
  9282 ;; Registers used:
  9283 ;;		wreg, status,2
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9293 ;;Total ram usage:        0 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:    2
  9296 ;; This function calls:
  9297 ;;		Nothing
  9298 ;; This function is called by:
  9299 ;;		_main
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text38
  9304  005264                     __ptext38:
  9305                           	opt callstack 0
  9306  005264                     _ADC_Init:
  9307                           	opt callstack 28
  9308                           
  9309                           ;main.c: 248:     TRISBbits.TRISB4 = 1;
  9310                           
  9311                           ; BSR set to: 61
  9312                           ;incstack = 0
  9313  005264  88C3               	bsf	16323,4,c	;volatile
  9314                           
  9315                           ;main.c: 249:     ANSELBbits.ANSELB4 = 1;
  9316  005266  013A               	movlb	58	; () banked
  9317  005268  8950               	bsf	80,4,b	;volatile
  9318                           
  9319                           ; BSR set to: 58
  9320                           ;main.c: 250:     ADCON0 = 0x94;
  9321  00526A  0E94               	movlw	148
  9322  00526C  013E               	movlb	62	; () banked
  9323  00526E  6FF8               	movwf	248,b	;volatile
  9324                           
  9325                           ;main.c: 251:     ADCON1 = 0x00;
  9326  005270  0E00               	movlw	0
  9327  005272  6FF9               	movwf	249,b	;volatile
  9328                           
  9329                           ;main.c: 252:     ADCON2 = 0x00;
  9330  005274  0E00               	movlw	0
  9331  005276  6FFA               	movwf	250,b	;volatile
  9332                           
  9333                           ;main.c: 253:     ADREF = 0x00;
  9334  005278  0E00               	movlw	0
  9335  00527A  6FFD               	movwf	253,b	;volatile
  9336                           
  9337                           ; BSR set to: 62
  9338                           ;main.c: 254:     IPR1bits.ADIP = 0;
  9339  00527C  0139               	movlb	57	; () banked
  9340  00527E  9581               	bcf	129,2,b	;volatile
  9341                           
  9342                           ; BSR set to: 57
  9343                           ;main.c: 255:     PIE1bits.ADIE = 1;
  9344  005280  8591               	bsf	145,2,b	;volatile
  9345                           
  9346                           ; BSR set to: 57
  9347                           ;main.c: 256:     PIR1bits.ADIF = 0;
  9348  005282  95A1               	bcf	161,2,b	;volatile
  9349                           
  9350                           ; BSR set to: 57
  9351  005284  0012               	return		;funcret
  9352  005286                     __end_of_ADC_Init:
  9353                           	opt callstack 0
  9354                           
  9355 ;; *************** function _TIMER0_ISR *****************
  9356 ;; Defined at:
  9357 ;;		line 65 in file "main.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;		None
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;		None
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  1    wreg      void 
  9364 ;; Registers used:
  9365 ;;		wreg, status,2, status,0, cstack
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9375 ;;Total ram usage:        0 bytes
  9376 ;; Hardware stack levels used:    1
  9377 ;; Hardware stack levels required when called:    1
  9378 ;; This function calls:
  9379 ;;		_ADC_Start
  9380 ;; This function is called by:
  9381 ;;		Interrupt level 2
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           	psect	text39
  9386  004FEC                     __ptext39:
  9387                           	opt callstack 0
  9388  004FEC                     _TIMER0_ISR:
  9389                           	opt callstack 20
  9390                           
  9391                           ;main.c: 66:     T0CON0bits.EN = 0;
  9392                           
  9393                           ; BSR set to: 57
  9394                           ;incstack = 0
  9395  004FEC  9EB8               	bcf	16312,7,c	;volatile
  9396                           
  9397                           ;main.c: 67:     counter_timer0 ++;
  9398  004FEE  2A48               	incf	_counter_timer0,f,c
  9399                           
  9400                           ;main.c: 68:     if(counter_timer0 == 2){
  9401  004FF0  0E02               	movlw	2
  9402  004FF2  1848               	xorwf	_counter_timer0,w,c
  9403  004FF4  A4D8               	btfss	status,2,c
  9404  004FF6  D002               	goto	i2l3157
  9405                           
  9406                           ;main.c: 69:         LATAbits.LA0 = 0;
  9407  004FF8  90BA               	bcf	16314,0,c	;volatile
  9408                           
  9409                           ;main.c: 70:     }else if(counter_timer0 == 40){
  9410  004FFA  D009               	goto	i2l272
  9411  004FFC                     i2l3157:
  9412  004FFC  0E28               	movlw	40
  9413  004FFE  1848               	xorwf	_counter_timer0,w,c
  9414  005000  A4D8               	btfss	status,2,c
  9415  005002  D005               	goto	i2l272
  9416                           
  9417                           ;main.c: 71:         if(led_enable)
  9418  005004  5047               	movf	_led_enable,w,c
  9419  005006  A4D8               	btfss	status,2,c
  9420                           
  9421                           ;main.c: 72:             LATAbits.LA0 = 1;
  9422  005008  80BA               	bsf	16314,0,c	;volatile
  9423                           
  9424                           ;main.c: 73:         counter_timer0 = 0;
  9425  00500A  0E00               	movlw	0
  9426  00500C  6E48               	movwf	_counter_timer0,c
  9427  00500E                     i2l272:
  9428                           
  9429                           ;main.c: 75:     TMR0L = 0xB0;
  9430  00500E  0EB0               	movlw	176
  9431  005010  6EB6               	movwf	16310,c	;volatile
  9432                           
  9433                           ;main.c: 76:     TMR0H = 0x3C;
  9434  005012  0E3C               	movlw	60
  9435  005014  6EB7               	movwf	16311,c	;volatile
  9436                           
  9437                           ;main.c: 77:     if(measur_vol_or_cur)
  9438  005016  5052               	movf	_measur_vol_or_cur,w,c
  9439  005018  B4D8               	btfsc	status,2,c
  9440  00501A  D004               	goto	i2l3167
  9441                           
  9442                           ;main.c: 78:         ADC_Start(12);
  9443  00501C  0E0C               	movlw	12
  9444  00501E  EC83  F029         	call	_ADC_Start
  9445  005022  D003               	goto	i2l3169
  9446  005024                     i2l3167:
  9447                           
  9448                           ;main.c: 80:         ADC_Start(13);
  9449  005024  0E0D               	movlw	13
  9450  005026  EC83  F029         	call	_ADC_Start
  9451  00502A                     i2l3169:
  9452                           
  9453                           ;main.c: 81:     measur_vol_or_cur = !measur_vol_or_cur;
  9454  00502A  5052               	movf	_measur_vol_or_cur,w,c
  9455  00502C  A4D8               	btfss	status,2,c
  9456  00502E  D002               	goto	i2u313_40
  9457  005030  0E01               	movlw	1
  9458  005032  D001               	goto	i2u314_40
  9459  005034                     i2u313_40:
  9460  005034  0E00               	movlw	0
  9461  005036                     i2u314_40:
  9462  005036  6E52               	movwf	_measur_vol_or_cur,c
  9463                           
  9464                           ;main.c: 82:     PIR3bits.TMR0IF = 0;
  9465  005038  0139               	movlb	57	; () banked
  9466  00503A  9FA3               	bcf	163,7,b	;volatile
  9467                           
  9468                           ; BSR set to: 57
  9469                           ;main.c: 83:     T0CON0bits.EN = 1;
  9470  00503C  8EB8               	bsf	16312,7,c	;volatile
  9471                           
  9472                           ; BSR set to: 57
  9473  00503E  0011               	retfie		f
  9474  005040                     __end_of_TIMER0_ISR:
  9475                           	opt callstack 0
  9476                           
  9477 ;; *************** function _ADC_Start *****************
  9478 ;; Defined at:
  9479 ;;		line 260 in file "main.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;  pin             1    wreg     unsigned char 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;  pin             1    0[COMRAM] unsigned char 
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      void 
  9486 ;; Registers used:
  9487 ;;		wreg
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9497 ;;Total ram usage:        1 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; This function calls:
  9500 ;;		Nothing
  9501 ;; This function is called by:
  9502 ;;		_TIMER0_ISR
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text40
  9507  005306                     __ptext40:
  9508                           	opt callstack 0
  9509  005306                     _ADC_Start:
  9510                           	opt callstack 20
  9511                           
  9512                           ; BSR set to: 57
  9513                           ;incstack = 0
  9514                           ;ADC_Start@pin stored from wreg
  9515  005306  6E01               	movwf	ADC_Start@pin,c
  9516                           
  9517                           ;main.c: 261:     if(!ADCON0bits.GO){
  9518  005308  013E               	movlb	62	; () banked
  9519  00530A  B1F8               	btfsc	248,0,b	;volatile
  9520  00530C  0012               	return	
  9521                           
  9522                           ; BSR set to: 62
  9523                           ;main.c: 262:         ADPCH = pin;
  9524  00530E  0060  F007  FEF1   	movff	ADC_Start@pin,16113	;volatile
  9525                           
  9526                           ; BSR set to: 62
  9527                           ;main.c: 263:         ADCON0bits.GO = 1;
  9528  005314  81F8               	bsf	248,0,b	;volatile
  9529                           
  9530                           ; BSR set to: 62
  9531  005316  0012               	return		;funcret
  9532  005318                     __end_of_ADC_Start:
  9533                           	opt callstack 0
  9534                           
  9535 ;; *************** function _UART1_TX_ISR *****************
  9536 ;; Defined at:
  9537 ;;		line 86 in file "main.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;		None
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;		None
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  1    wreg      void 
  9544 ;; Registers used:
  9545 ;;		None
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9555 ;;Total ram usage:        0 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; This function calls:
  9558 ;;		Nothing
  9559 ;; This function is called by:
  9560 ;;		Interrupt level 2
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text41
  9565  005328                     __ptext41:
  9566                           	opt callstack 0
  9567  005328                     _UART1_TX_ISR:
  9568                           	opt callstack 21
  9569                           
  9570                           ;main.c: 88:     U1TXB = tx_byte;
  9571                           
  9572                           ; BSR set to: 62
  9573                           ;incstack = 0
  9574  005328  0060  F13B  FDEA   	movff	_tx_byte,15850	;volatile
  9575                           
  9576                           ;main.c: 89:     PIE3bits.U1TXIE = 0;
  9577  00532E  0139               	movlb	57	; () banked
  9578  005330  9993               	bcf	147,4,b	;volatile
  9579                           
  9580                           ; BSR set to: 57
  9581  005332  0011               	retfie		f
  9582  005334                     __end_of_UART1_TX_ISR:
  9583                           	opt callstack 0
  9584                           
  9585 ;; *************** function _UART1_RX_ISR *****************
  9586 ;; Defined at:
  9587 ;;		line 92 in file "main.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;		None
  9590 ;; Auto vars:     Size  Location     Type
  9591 ;;		None
  9592 ;; Return value:  Size  Location     Type
  9593 ;;                  1    wreg      void 
  9594 ;; Registers used:
  9595 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9605 ;;Total ram usage:        0 bytes
  9606 ;; Hardware stack levels used:    1
  9607 ;; This function calls:
  9608 ;;		Nothing
  9609 ;; This function is called by:
  9610 ;;		Interrupt level 2
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           	psect	text42
  9615  0052C0                     __ptext42:
  9616                           	opt callstack 0
  9617  0052C0                     _UART1_RX_ISR:
  9618                           	opt callstack 21
  9619                           
  9620                           ;main.c: 93:     rx_buffer[rx_counter] = U1RXB;
  9621                           
  9622                           ; BSR set to: 57
  9623                           ;incstack = 0
  9624  0052C0  0E00               	movlw	low _rx_buffer
  9625  0052C2  244F               	addwf	_rx_counter,w,c
  9626  0052C4  6ED9               	movwf	fsr2l,c
  9627  0052C6  6ADA               	clrf	fsr2h,c
  9628  0052C8  0E01               	movlw	high _rx_buffer
  9629  0052CA  22DA               	addwfc	fsr2h,f,c
  9630  0052CC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9631                           
  9632                           ;main.c: 94:     rx_counter ++;
  9633  0052D2  2A4F               	incf	_rx_counter,f,c
  9634  0052D4  0011               	retfie		f
  9635  0052D6                     __end_of_UART1_RX_ISR:
  9636                           	opt callstack 0
  9637                           
  9638 ;; *************** function _ADC_ISR *****************
  9639 ;; Defined at:
  9640 ;;		line 97 in file "main.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;		None
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;  adc_result      2   42[COMRAM] int 
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      void 
  9647 ;; Registers used:
  9648 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9658 ;;Total ram usage:        4 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:    1
  9661 ;; This function calls:
  9662 ;;		___xxtofl
  9663 ;;		i2___flmul
  9664 ;; This function is called by:
  9665 ;;		Interrupt level 2
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           	psect	text43
  9670  0043C4                     __ptext43:
  9671                           	opt callstack 0
  9672  0043C4                     _ADC_ISR:
  9673                           	opt callstack 20
  9674                           
  9675                           ;main.c: 98:     int adc_result = ADRESL;
  9676                           
  9677                           ;incstack = 0
  9678  0043C4  006F FBBC  F02B    	movff	16111,ADC_ISR@adc_result	;volatile
  9679  0043CA  6A2C               	clrf	ADC_ISR@adc_result+1,c
  9680                           
  9681                           ;main.c: 99:     adc_result = adc_result | (ADRESH <<8);
  9682  0043CC  013E               	movlb	62	; () banked
  9683  0043CE  51F0               	movf	240,w,b	;volatile
  9684  0043D0  6E2A               	movwf	(??_ADC_ISR+1)& (0+255),c
  9685  0043D2  6A29               	clrf	??_ADC_ISR& (0+255),c
  9686  0043D4  502B               	movf	ADC_ISR@adc_result,w,c
  9687  0043D6  1029               	iorwf	??_ADC_ISR,w,c
  9688  0043D8  6E2B               	movwf	ADC_ISR@adc_result,c
  9689  0043DA  502C               	movf	ADC_ISR@adc_result+1,w,c
  9690  0043DC  102A               	iorwf	??_ADC_ISR+1,w,c
  9691  0043DE  6E2C               	movwf	ADC_ISR@adc_result+1,c
  9692                           
  9693                           ;main.c: 100:     if(ADPCH == 12)
  9694  0043E0  0E0C               	movlw	12
  9695  0043E2  19F1               	xorwf	241,w,b	;volatile
  9696  0043E4  A4D8               	btfss	status,2,c
  9697  0043E6  D031               	goto	i2l5111
  9698                           
  9699                           ; BSR set to: 62
  9700                           ;main.c: 101:         ADC_VOLTAGE_RESULT = (float)adc_result * 0.00122;
  9701  0043E8  0060  F0AC  F002   	movff	ADC_ISR@adc_result,___xxtofl@val
  9702  0043EE  0060  F0B0  F003   	movff	ADC_ISR@adc_result+1,___xxtofl@val+1
  9703  0043F4  0E00               	movlw	0
  9704  0043F6  BE03               	btfsc	___xxtofl@val+1,7,c
  9705  0043F8  0EFF               	movlw	-1
  9706  0043FA  6E04               	movwf	___xxtofl@val+2,c
  9707  0043FC  6E05               	movwf	___xxtofl@val+3,c
  9708  0043FE  0E01               	movlw	1
  9709  004400  EC2F  F021         	call	___xxtofl
  9710  004404  0060  F008  F010   	movff	?___xxtofl,i2___flmul@b
  9711  00440A  0060  F00C  F011   	movff	?___xxtofl+1,i2___flmul@b+1
  9712  004410  0060  F010  F012   	movff	?___xxtofl+2,i2___flmul@b+2
  9713  004416  0060  F014  F013   	movff	?___xxtofl+3,i2___flmul@b+3
  9714  00441C  0E68               	movlw	104
  9715  00441E  6E14               	movwf	i2___flmul@a,c
  9716  004420  0EE8               	movlw	232
  9717  004422  6E15               	movwf	i2___flmul@a+1,c
  9718  004424  0E9F               	movlw	159
  9719  004426  6E16               	movwf	i2___flmul@a+2,c
  9720  004428  0E3A               	movlw	58
  9721  00442A  6E17               	movwf	i2___flmul@a+3,c
  9722  00442C  ECD0  F017         	call	i2___flmul	;wreg free
  9723  004430  0060  F040  F039   	movff	?i2___flmul,_ADC_VOLTAGE_RESULT
  9724  004436  0060  F044  F03A   	movff	?i2___flmul+1,_ADC_VOLTAGE_RESULT+1
  9725  00443C  0060  F048  F03B   	movff	?i2___flmul+2,_ADC_VOLTAGE_RESULT+2
  9726  004442  0060  F04C  F03C   	movff	?i2___flmul+3,_ADC_VOLTAGE_RESULT+3
  9727  004448  D034               	goto	i2l5115
  9728  00444A                     i2l5111:
  9729                           
  9730                           ; BSR set to: 62
  9731  00444A  0E0D               	movlw	13
  9732  00444C  19F1               	xorwf	241,w,b	;volatile
  9733  00444E  A4D8               	btfss	status,2,c
  9734  004450  D030               	goto	i2l5115
  9735                           
  9736                           ; BSR set to: 62
  9737                           ;main.c: 103:         ADC_CURRENT_RESULT = (float)adc_result * 0.00122;
  9738  004452  0060  F0AC  F002   	movff	ADC_ISR@adc_result,___xxtofl@val
  9739  004458  0060  F0B0  F003   	movff	ADC_ISR@adc_result+1,___xxtofl@val+1
  9740  00445E  0E00               	movlw	0
  9741  004460  BE03               	btfsc	___xxtofl@val+1,7,c
  9742  004462  0EFF               	movlw	-1
  9743  004464  6E04               	movwf	___xxtofl@val+2,c
  9744  004466  6E05               	movwf	___xxtofl@val+3,c
  9745  004468  0E01               	movlw	1
  9746  00446A  EC2F  F021         	call	___xxtofl
  9747  00446E  0060  F008  F010   	movff	?___xxtofl,i2___flmul@b
  9748  004474  0060  F00C  F011   	movff	?___xxtofl+1,i2___flmul@b+1
  9749  00447A  0060  F010  F012   	movff	?___xxtofl+2,i2___flmul@b+2
  9750  004480  0060  F014  F013   	movff	?___xxtofl+3,i2___flmul@b+3
  9751  004486  0E68               	movlw	104
  9752  004488  6E14               	movwf	i2___flmul@a,c
  9753  00448A  0EE8               	movlw	232
  9754  00448C  6E15               	movwf	i2___flmul@a+1,c
  9755  00448E  0E9F               	movlw	159
  9756  004490  6E16               	movwf	i2___flmul@a+2,c
  9757  004492  0E3A               	movlw	58
  9758  004494  6E17               	movwf	i2___flmul@a+3,c
  9759  004496  ECD0  F017         	call	i2___flmul	;wreg free
  9760  00449A  0060  F040  F035   	movff	?i2___flmul,_ADC_CURRENT_RESULT
  9761  0044A0  0060  F044  F036   	movff	?i2___flmul+1,_ADC_CURRENT_RESULT+1
  9762  0044A6  0060  F048  F037   	movff	?i2___flmul+2,_ADC_CURRENT_RESULT+2
  9763  0044AC  0060  F04C  F038   	movff	?i2___flmul+3,_ADC_CURRENT_RESULT+3
  9764  0044B2                     i2l5115:
  9765                           
  9766                           ;main.c: 104:     PIR1bits.ADIF = 0;
  9767  0044B2  0139               	movlb	57	; () banked
  9768  0044B4  95A1               	bcf	161,2,b	;volatile
  9769                           
  9770                           ; BSR set to: 57
  9771  0044B6  0011               	retfie		f
  9772  0044B8                     __end_of_ADC_ISR:
  9773                           	opt callstack 0
  9774                           
  9775 ;; *************** function i2___flmul *****************
  9776 ;; Defined at:
  9777 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  b               4   15[COMRAM] void 
  9780 ;;  a               4   19[COMRAM] void 
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;  __flmul         4   34[COMRAM] struct .
  9783 ;;  __flmul         4   28[COMRAM] unsigned long 
  9784 ;;  __flmul         2   38[COMRAM] struct .
  9785 ;;  __flmul         1   33[COMRAM] unsigned char 
  9786 ;;  __flmul         1   32[COMRAM] unsigned char 
  9787 ;;  __flmul         1   27[COMRAM] unsigned char 
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  4   15[COMRAM] unsigned char 
  9790 ;; Registers used:
  9791 ;;		wreg, status,2, status,0, prodl, prodh
  9792 ;; Tracked objects:
  9793 ;;		On entry : 0/0
  9794 ;;		On exit  : 0/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9797 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9798 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9800 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9801 ;;Total ram usage:       25 bytes
  9802 ;; Hardware stack levels used:    1
  9803 ;; This function calls:
  9804 ;;		Nothing
  9805 ;; This function is called by:
  9806 ;;		_ADC_ISR
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           	psect	text44
  9811  002FA0                     __ptext44:
  9812                           	opt callstack 0
  9813  002FA0                     i2___flmul:
  9814                           	opt callstack 20
  9815                           
  9816                           ; BSR set to: 57
  9817                           ;incstack = 0
  9818  002FA0  5013               	movf	i2___flmul@b+3,w,c
  9819  002FA2  0B80               	andlw	128
  9820  002FA4  6E1C               	movwf	i2___flmul@sign,c
  9821  002FA6  5013               	movf	i2___flmul@b+3,w,c
  9822  002FA8  2413               	addwf	i2___flmul@b+3,w,c
  9823  002FAA  6E22               	movwf	i2___flmul@bexp,c
  9824  002FAC  BE12               	btfsc	i2___flmul@b+2,7,c
  9825  002FAE  8022               	bsf	i2___flmul@bexp,0,c
  9826  002FB0  5022               	movf	i2___flmul@bexp,w,c
  9827  002FB2  B4D8               	btfsc	status,2,c
  9828  002FB4  D00D               	goto	i2l4985
  9829  002FB6  2822               	incf	i2___flmul@bexp,w,c
  9830  002FB8  A4D8               	btfss	status,2,c
  9831  002FBA  D008               	goto	i2l4983
  9832  002FBC  0E00               	movlw	0
  9833  002FBE  6E10               	movwf	i2___flmul@b,c
  9834  002FC0  0E00               	movlw	0
  9835  002FC2  6E11               	movwf	i2___flmul@b+1,c
  9836  002FC4  0E00               	movlw	0
  9837  002FC6  6E12               	movwf	i2___flmul@b+2,c
  9838  002FC8  0E00               	movlw	0
  9839  002FCA  6E13               	movwf	i2___flmul@b+3,c
  9840  002FCC                     i2l4983:
  9841  002FCC  8E12               	bsf	i2___flmul@b+2,7,c
  9842  002FCE  D008               	goto	i2l4987
  9843  002FD0                     i2l4985:
  9844  002FD0  0E00               	movlw	0
  9845  002FD2  6E10               	movwf	i2___flmul@b,c
  9846  002FD4  0E00               	movlw	0
  9847  002FD6  6E11               	movwf	i2___flmul@b+1,c
  9848  002FD8  0E00               	movlw	0
  9849  002FDA  6E12               	movwf	i2___flmul@b+2,c
  9850  002FDC  0E00               	movlw	0
  9851  002FDE  6E13               	movwf	i2___flmul@b+3,c
  9852  002FE0                     i2l4987:
  9853  002FE0  5017               	movf	i2___flmul@a+3,w,c
  9854  002FE2  0B80               	andlw	128
  9855  002FE4  1A1C               	xorwf	i2___flmul@sign,f,c
  9856  002FE6  5017               	movf	i2___flmul@a+3,w,c
  9857  002FE8  2417               	addwf	i2___flmul@a+3,w,c
  9858  002FEA  6E21               	movwf	i2___flmul@aexp,c
  9859  002FEC  BE16               	btfsc	i2___flmul@a+2,7,c
  9860  002FEE  8021               	bsf	i2___flmul@aexp,0,c
  9861  002FF0  5021               	movf	i2___flmul@aexp,w,c
  9862  002FF2  B4D8               	btfsc	status,2,c
  9863  002FF4  D00D               	goto	i2l5003
  9864  002FF6  2821               	incf	i2___flmul@aexp,w,c
  9865  002FF8  A4D8               	btfss	status,2,c
  9866  002FFA  D008               	goto	i2l5001
  9867  002FFC  0E00               	movlw	0
  9868  002FFE  6E14               	movwf	i2___flmul@a,c
  9869  003000  0E00               	movlw	0
  9870  003002  6E15               	movwf	i2___flmul@a+1,c
  9871  003004  0E00               	movlw	0
  9872  003006  6E16               	movwf	i2___flmul@a+2,c
  9873  003008  0E00               	movlw	0
  9874  00300A  6E17               	movwf	i2___flmul@a+3,c
  9875  00300C                     i2l5001:
  9876  00300C  8E16               	bsf	i2___flmul@a+2,7,c
  9877  00300E  D008               	goto	i2l1250
  9878  003010                     i2l5003:
  9879  003010  0E00               	movlw	0
  9880  003012  6E14               	movwf	i2___flmul@a,c
  9881  003014  0E00               	movlw	0
  9882  003016  6E15               	movwf	i2___flmul@a+1,c
  9883  003018  0E00               	movlw	0
  9884  00301A  6E16               	movwf	i2___flmul@a+2,c
  9885  00301C  0E00               	movlw	0
  9886  00301E  6E17               	movwf	i2___flmul@a+3,c
  9887  003020                     i2l1250:
  9888  003020  5021               	movf	i2___flmul@aexp,w,c
  9889  003022  B4D8               	btfsc	status,2,c
  9890  003024  D003               	goto	i2u622_40
  9891  003026  5022               	movf	i2___flmul@bexp,w,c
  9892  003028  A4D8               	btfss	status,2,c
  9893  00302A  D009               	goto	i2l5011
  9894  00302C                     i2u622_40:
  9895  00302C  0E00               	movlw	0
  9896  00302E  6E10               	movwf	?i2___flmul,c
  9897  003030  0E00               	movlw	0
  9898  003032  6E11               	movwf	?i2___flmul+1,c
  9899  003034  0E00               	movlw	0
  9900  003036  6E12               	movwf	?i2___flmul+2,c
  9901  003038  0E00               	movlw	0
  9902  00303A  6E13               	movwf	?i2___flmul+3,c
  9903  00303C  0012               	return	
  9904  00303E                     i2l5011:
  9905  00303E  5016               	movf	i2___flmul@a+2,w,c
  9906  003040  0210               	mulwf	i2___flmul@b,c
  9907  003042  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9908  003048  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9909  00304E  5027               	movf	i2___flmul@temp,w,c
  9910  003050  6E1D               	movwf	i2___flmul@grs,c
  9911  003052  6A1E               	clrf	i2___flmul@grs+1,c
  9912  003054  6A1F               	clrf	i2___flmul@grs+2,c
  9913  003056  6A20               	clrf	i2___flmul@grs+3,c
  9914  003058  5028               	movf	i2___flmul@temp+1,w,c
  9915  00305A  6E23               	movwf	i2___flmul@prod,c
  9916  00305C  6A24               	clrf	i2___flmul@prod+1,c
  9917  00305E  6A25               	clrf	i2___flmul@prod+2,c
  9918  003060  6A26               	clrf	i2___flmul@prod+3,c
  9919  003062  5015               	movf	i2___flmul@a+1,w,c
  9920  003064  0211               	mulwf	i2___flmul@b+1,c
  9921  003066  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9922  00306C  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9923  003072  5027               	movf	i2___flmul@temp,w,c
  9924  003074  261D               	addwf	i2___flmul@grs,f,c
  9925  003076  0E00               	movlw	0
  9926  003078  221E               	addwfc	i2___flmul@grs+1,f,c
  9927  00307A  221F               	addwfc	i2___flmul@grs+2,f,c
  9928  00307C  2220               	addwfc	i2___flmul@grs+3,f,c
  9929  00307E  5028               	movf	i2___flmul@temp+1,w,c
  9930  003080  2623               	addwf	i2___flmul@prod,f,c
  9931  003082  0E00               	movlw	0
  9932  003084  2224               	addwfc	i2___flmul@prod+1,f,c
  9933  003086  2225               	addwfc	i2___flmul@prod+2,f,c
  9934  003088  2226               	addwfc	i2___flmul@prod+3,f,c
  9935  00308A  5014               	movf	i2___flmul@a,w,c
  9936  00308C  0212               	mulwf	i2___flmul@b+2,c
  9937  00308E  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9938  003094  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9939  00309A  5027               	movf	i2___flmul@temp,w,c
  9940  00309C  261D               	addwf	i2___flmul@grs,f,c
  9941  00309E  0E00               	movlw	0
  9942  0030A0  221E               	addwfc	i2___flmul@grs+1,f,c
  9943  0030A2  221F               	addwfc	i2___flmul@grs+2,f,c
  9944  0030A4  2220               	addwfc	i2___flmul@grs+3,f,c
  9945  0030A6  5028               	movf	i2___flmul@temp+1,w,c
  9946  0030A8  2623               	addwf	i2___flmul@prod,f,c
  9947  0030AA  0E00               	movlw	0
  9948  0030AC  2224               	addwfc	i2___flmul@prod+1,f,c
  9949  0030AE  2225               	addwfc	i2___flmul@prod+2,f,c
  9950  0030B0  2226               	addwfc	i2___flmul@prod+3,f,c
  9951  0030B2  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
  9952  0030B8  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
  9953  0030BE  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
  9954  0030C4  6A1D               	clrf	i2___flmul@grs,c
  9955  0030C6  5014               	movf	i2___flmul@a,w,c
  9956  0030C8  0211               	mulwf	i2___flmul@b+1,c
  9957  0030CA  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9958  0030D0  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9959  0030D6  5027               	movf	i2___flmul@temp,w,c
  9960  0030D8  261D               	addwf	i2___flmul@grs,f,c
  9961  0030DA  5028               	movf	i2___flmul@temp+1,w,c
  9962  0030DC  221E               	addwfc	i2___flmul@grs+1,f,c
  9963  0030DE  0E00               	movlw	0
  9964  0030E0  221F               	addwfc	i2___flmul@grs+2,f,c
  9965  0030E2  0E00               	movlw	0
  9966  0030E4  2220               	addwfc	i2___flmul@grs+3,f,c
  9967  0030E6  5015               	movf	i2___flmul@a+1,w,c
  9968  0030E8  0210               	mulwf	i2___flmul@b,c
  9969  0030EA  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9970  0030F0  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9971  0030F6  5027               	movf	i2___flmul@temp,w,c
  9972  0030F8  261D               	addwf	i2___flmul@grs,f,c
  9973  0030FA  5028               	movf	i2___flmul@temp+1,w,c
  9974  0030FC  221E               	addwfc	i2___flmul@grs+1,f,c
  9975  0030FE  0E00               	movlw	0
  9976  003100  221F               	addwfc	i2___flmul@grs+2,f,c
  9977  003102  0E00               	movlw	0
  9978  003104  2220               	addwfc	i2___flmul@grs+3,f,c
  9979  003106  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
  9980  00310C  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
  9981  003112  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
  9982  003118  6A1D               	clrf	i2___flmul@grs,c
  9983  00311A  5014               	movf	i2___flmul@a,w,c
  9984  00311C  0210               	mulwf	i2___flmul@b,c
  9985  00311E  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9986  003124  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9987  00312A  5027               	movf	i2___flmul@temp,w,c
  9988  00312C  261D               	addwf	i2___flmul@grs,f,c
  9989  00312E  5028               	movf	i2___flmul@temp+1,w,c
  9990  003130  221E               	addwfc	i2___flmul@grs+1,f,c
  9991  003132  0E00               	movlw	0
  9992  003134  221F               	addwfc	i2___flmul@grs+2,f,c
  9993  003136  0E00               	movlw	0
  9994  003138  2220               	addwfc	i2___flmul@grs+3,f,c
  9995  00313A  5016               	movf	i2___flmul@a+2,w,c
  9996  00313C  0211               	mulwf	i2___flmul@b+1,c
  9997  00313E  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9998  003144  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9999  00314A  5027               	movf	i2___flmul@temp,w,c
 10000  00314C  2623               	addwf	i2___flmul@prod,f,c
 10001  00314E  5028               	movf	i2___flmul@temp+1,w,c
 10002  003150  2224               	addwfc	i2___flmul@prod+1,f,c
 10003  003152  0E00               	movlw	0
 10004  003154  2225               	addwfc	i2___flmul@prod+2,f,c
 10005  003156  0E00               	movlw	0
 10006  003158  2226               	addwfc	i2___flmul@prod+3,f,c
 10007  00315A  5015               	movf	i2___flmul@a+1,w,c
 10008  00315C  0212               	mulwf	i2___flmul@b+2,c
 10009  00315E  006F FFCC  F027    	movff	prodl,i2___flmul@temp
 10010  003164  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
 10011  00316A  5027               	movf	i2___flmul@temp,w,c
 10012  00316C  2623               	addwf	i2___flmul@prod,f,c
 10013  00316E  5028               	movf	i2___flmul@temp+1,w,c
 10014  003170  2224               	addwfc	i2___flmul@prod+1,f,c
 10015  003172  0E00               	movlw	0
 10016  003174  2225               	addwfc	i2___flmul@prod+2,f,c
 10017  003176  0E00               	movlw	0
 10018  003178  2226               	addwfc	i2___flmul@prod+3,f,c
 10019  00317A  5016               	movf	i2___flmul@a+2,w,c
 10020  00317C  0212               	mulwf	i2___flmul@b+2,c
 10021  00317E  006F FFCC  F027    	movff	prodl,i2___flmul@temp
 10022  003184  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
 10023  00318A  5027               	movf	i2___flmul@temp,w,c
 10024  00318C  6E18               	movwf	??i2___flmul& (0+255),c
 10025  00318E  5028               	movf	i2___flmul@temp+1,w,c
 10026  003190  6E19               	movwf	(??i2___flmul+1)& (0+255),c
 10027  003192  6A1A               	clrf	(??i2___flmul+2)& (0+255),c
 10028  003194  6A1B               	clrf	(??i2___flmul+3)& (0+255),c
 10029  003196  0060  F068  F01B   	movff	??i2___flmul+2,??i2___flmul+3
 10030  00319C  0060  F064  F01A   	movff	??i2___flmul+1,??i2___flmul+2
 10031  0031A2  0060  F060  F019   	movff	??i2___flmul,??i2___flmul+1
 10032  0031A8  6A18               	clrf	??i2___flmul,c
 10033  0031AA  5018               	movf	??i2___flmul,w,c
 10034  0031AC  2623               	addwf	i2___flmul@prod,f,c
 10035  0031AE  5019               	movf	??i2___flmul+1,w,c
 10036  0031B0  2224               	addwfc	i2___flmul@prod+1,f,c
 10037  0031B2  501A               	movf	??i2___flmul+2,w,c
 10038  0031B4  2225               	addwfc	i2___flmul@prod+2,f,c
 10039  0031B6  501B               	movf	??i2___flmul+3,w,c
 10040  0031B8  2226               	addwfc	i2___flmul@prod+3,f,c
 10041  0031BA  0060  F074  F018   	movff	i2___flmul@grs,??i2___flmul
 10042  0031C0  0060  F078  F019   	movff	i2___flmul@grs+1,??i2___flmul+1
 10043  0031C6  0060  F07C  F01A   	movff	i2___flmul@grs+2,??i2___flmul+2
 10044  0031CC  0060  F080  F01B   	movff	i2___flmul@grs+3,??i2___flmul+3
 10045  0031D2  0E19               	movlw	25
 10046  0031D4  D005               	goto	i2u623_40
 10047  0031D6                     i2u623_45:
 10048  0031D6  90D8               	bcf	status,0,c
 10049  0031D8  321B               	rrcf	??i2___flmul+3,f,c
 10050  0031DA  321A               	rrcf	??i2___flmul+2,f,c
 10051  0031DC  3219               	rrcf	??i2___flmul+1,f,c
 10052  0031DE  3218               	rrcf	??i2___flmul,f,c
 10053  0031E0                     i2u623_40:
 10054  0031E0  2EE8               	decfsz	wreg,f,c
 10055  0031E2  D7F9               	goto	i2u623_45
 10056  0031E4  5018               	movf	??i2___flmul,w,c
 10057  0031E6  2623               	addwf	i2___flmul@prod,f,c
 10058  0031E8  5019               	movf	??i2___flmul+1,w,c
 10059  0031EA  2224               	addwfc	i2___flmul@prod+1,f,c
 10060  0031EC  501A               	movf	??i2___flmul+2,w,c
 10061  0031EE  2225               	addwfc	i2___flmul@prod+2,f,c
 10062  0031F0  501B               	movf	??i2___flmul+3,w,c
 10063  0031F2  2226               	addwfc	i2___flmul@prod+3,f,c
 10064  0031F4  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
 10065  0031FA  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
 10066  003200  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
 10067  003206  6A1D               	clrf	i2___flmul@grs,c
 10068  003208  5021               	movf	i2___flmul@aexp,w,c
 10069  00320A  0060  F088  F018   	movff	i2___flmul@bexp,??i2___flmul
 10070  003210  6A19               	clrf	(??i2___flmul+1)& (0+255),c
 10071  003212  2618               	addwf	??i2___flmul,f,c
 10072  003214  0E00               	movlw	0
 10073  003216  2219               	addwfc	??i2___flmul+1,f,c
 10074  003218  0E82               	movlw	130
 10075  00321A  2418               	addwf	??i2___flmul,w,c
 10076  00321C  6E27               	movwf	i2___flmul@temp,c
 10077  00321E  0EFF               	movlw	255
 10078  003220  2019               	addwfc	??i2___flmul+1,w,c
 10079  003222  6E28               	movwf	i2___flmul@temp+1,c
 10080  003224  D00F               	goto	i2l5059
 10081  003226                     i2l5053:
 10082  003226  90D8               	bcf	status,0,c
 10083  003228  3623               	rlcf	i2___flmul@prod,f,c
 10084  00322A  3624               	rlcf	i2___flmul@prod+1,f,c
 10085  00322C  3625               	rlcf	i2___flmul@prod+2,f,c
 10086  00322E  3626               	rlcf	i2___flmul@prod+3,f,c
 10087  003230  BE20               	btfsc	i2___flmul@grs+3,7,c
 10088  003232  8023               	bsf	i2___flmul@prod,0,c
 10089  003234  90D8               	bcf	status,0,c
 10090  003236  361D               	rlcf	i2___flmul@grs,f,c
 10091  003238  361E               	rlcf	i2___flmul@grs+1,f,c
 10092  00323A  361F               	rlcf	i2___flmul@grs+2,f,c
 10093  00323C  3620               	rlcf	i2___flmul@grs+3,f,c
 10094  00323E  0627               	decf	i2___flmul@temp,f,c
 10095  003240  A0D8               	btfss	status,0,c
 10096  003242  0628               	decf	i2___flmul@temp+1,f,c
 10097  003244                     i2l5059:
 10098  003244  AE25               	btfss	i2___flmul@prod+2,7,c
 10099  003246  D7EF               	goto	i2l5053
 10100  003248  0E00               	movlw	0
 10101  00324A  6E21               	movwf	i2___flmul@aexp,c
 10102  00324C  AE20               	btfss	i2___flmul@grs+3,7,c
 10103  00324E  D017               	goto	i2l1259
 10104  003250  0EFF               	movlw	255
 10105  003252  141D               	andwf	i2___flmul@grs,w,c
 10106  003254  6E18               	movwf	??i2___flmul& (0+255),c
 10107  003256  0EFF               	movlw	255
 10108  003258  141E               	andwf	i2___flmul@grs+1,w,c
 10109  00325A  6E19               	movwf	(??i2___flmul+1)& (0+255),c
 10110  00325C  0EFF               	movlw	255
 10111  00325E  141F               	andwf	i2___flmul@grs+2,w,c
 10112  003260  6E1A               	movwf	(??i2___flmul+2)& (0+255),c
 10113  003262  0E7F               	movlw	127
 10114  003264  1420               	andwf	i2___flmul@grs+3,w,c
 10115  003266  6E1B               	movwf	(??i2___flmul+3)& (0+255),c
 10116  003268  5018               	movf	??i2___flmul,w,c
 10117  00326A  1019               	iorwf	??i2___flmul+1,w,c
 10118  00326C  101A               	iorwf	??i2___flmul+2,w,c
 10119  00326E  101B               	iorwf	??i2___flmul+3,w,c
 10120  003270  B4D8               	btfsc	status,2,c
 10121  003272  D003               	goto	i2l1260
 10122  003274                     i2u627_40:
 10123  003274  0E01               	movlw	1
 10124  003276  6E21               	movwf	i2___flmul@aexp,c
 10125  003278  D002               	goto	i2l1259
 10126  00327A                     i2l1260:
 10127  00327A  B023               	btfsc	i2___flmul@prod,0,c
 10128  00327C  D7FB               	goto	i2u627_40
 10129  00327E                     i2l1259:
 10130  00327E  5021               	movf	i2___flmul@aexp,w,c
 10131  003280  B4D8               	btfsc	status,2,c
 10132  003282  D027               	goto	i2l5079
 10133  003284  0E01               	movlw	1
 10134  003286  2623               	addwf	i2___flmul@prod,f,c
 10135  003288  0E00               	movlw	0
 10136  00328A  2224               	addwfc	i2___flmul@prod+1,f,c
 10137  00328C  2225               	addwfc	i2___flmul@prod+2,f,c
 10138  00328E  2226               	addwfc	i2___flmul@prod+3,f,c
 10139  003290  A026               	btfss	i2___flmul@prod+3,0,c
 10140  003292  D01F               	goto	i2l5079
 10141  003294  0060  F08C  F018   	movff	i2___flmul@prod,??i2___flmul
 10142  00329A  0060  F090  F019   	movff	i2___flmul@prod+1,??i2___flmul+1
 10143  0032A0  0060  F094  F01A   	movff	i2___flmul@prod+2,??i2___flmul+2
 10144  0032A6  0060  F098  F01B   	movff	i2___flmul@prod+3,??i2___flmul+3
 10145  0032AC  341B               	rlcf	??i2___flmul+3,w,c
 10146  0032AE  321B               	rrcf	??i2___flmul+3,f,c
 10147  0032B0  321A               	rrcf	??i2___flmul+2,f,c
 10148  0032B2  3219               	rrcf	??i2___flmul+1,f,c
 10149  0032B4  3218               	rrcf	??i2___flmul,f,c
 10150  0032B6  0060  F060  F023   	movff	??i2___flmul,i2___flmul@prod
 10151  0032BC  0060  F064  F024   	movff	??i2___flmul+1,i2___flmul@prod+1
 10152  0032C2  0060  F068  F025   	movff	??i2___flmul+2,i2___flmul@prod+2
 10153  0032C8  0060  F06C  F026   	movff	??i2___flmul+3,i2___flmul@prod+3
 10154  0032CE  4A27               	infsnz	i2___flmul@temp,f,c
 10155  0032D0  2A28               	incf	i2___flmul@temp+1,f,c
 10156  0032D2                     i2l5079:
 10157  0032D2  BE28               	btfsc	i2___flmul@temp+1,7,c
 10158  0032D4  D00D               	goto	i2l5083
 10159  0032D6  5028               	movf	i2___flmul@temp+1,w,c
 10160  0032D8  E103               	bnz	i2u631_40
 10161  0032DA  2827               	incf	i2___flmul@temp,w,c
 10162  0032DC  A0D8               	btfss	status,0,c
 10163  0032DE  D008               	goto	i2l5083
 10164  0032E0                     i2u631_40:
 10165  0032E0  0E00               	movlw	0
 10166  0032E2  6E23               	movwf	i2___flmul@prod,c
 10167  0032E4  0E00               	movlw	0
 10168  0032E6  6E24               	movwf	i2___flmul@prod+1,c
 10169  0032E8  0E80               	movlw	128
 10170  0032EA  6E25               	movwf	i2___flmul@prod+2,c
 10171  0032EC  0E7F               	movlw	127
 10172  0032EE  D021               	goto	L14
 10173  0032F0                     i2l5083:
 10174  0032F0  BE28               	btfsc	i2___flmul@temp+1,7,c
 10175  0032F2  D005               	goto	i2u632_40
 10176  0032F4  5028               	movf	i2___flmul@temp+1,w,c
 10177  0032F6  E10E               	bnz	i2l1267
 10178  0032F8  0427               	decf	i2___flmul@temp,w,c
 10179  0032FA  B0D8               	btfsc	status,0,c
 10180  0032FC  D00B               	goto	i2l1267
 10181  0032FE                     i2u632_40:
 10182  0032FE  0E00               	movlw	0
 10183  003300  6E23               	movwf	i2___flmul@prod,c
 10184  003302  0E00               	movlw	0
 10185  003304  6E24               	movwf	i2___flmul@prod+1,c
 10186  003306  0E00               	movlw	0
 10187  003308  6E25               	movwf	i2___flmul@prod+2,c
 10188  00330A  0E00               	movlw	0
 10189  00330C  6E26               	movwf	i2___flmul@prod+3,c
 10190  00330E  0E00               	movlw	0
 10191  003310  6E1C               	movwf	i2___flmul@sign,c
 10192  003312  D010               	goto	i2l5095
 10193  003314                     i2l1267:
 10194  003314  0060  F09C  F022   	movff	i2___flmul@temp,i2___flmul@bexp
 10195  00331A  0EFF               	movlw	255
 10196  00331C  1623               	andwf	i2___flmul@prod,f,c
 10197  00331E  0EFF               	movlw	255
 10198  003320  1624               	andwf	i2___flmul@prod+1,f,c
 10199  003322  0E7F               	movlw	127
 10200  003324  1625               	andwf	i2___flmul@prod+2,f,c
 10201  003326  0E00               	movlw	0
 10202  003328  1626               	andwf	i2___flmul@prod+3,f,c
 10203  00332A  B022               	btfsc	i2___flmul@bexp,0,c
 10204  00332C  8E25               	bsf	i2___flmul@prod+2,7,c
 10205  00332E  90D8               	bcf	status,0,c
 10206  003330  3022               	rrcf	i2___flmul@bexp,w,c
 10207  003332                     L14:
 10208  003332  6E26               	movwf	i2___flmul@prod+3,c
 10209  003334                     i2l5095:
 10210  003334  501C               	movf	i2___flmul@sign,w,c
 10211  003336  1226               	iorwf	i2___flmul@prod+3,f,c
 10212  003338  0060  F08C  F010   	movff	i2___flmul@prod,?i2___flmul
 10213  00333E  0060  F090  F011   	movff	i2___flmul@prod+1,?i2___flmul+1
 10214  003344  0060  F094  F012   	movff	i2___flmul@prod+2,?i2___flmul+2
 10215  00334A  0060  F098  F013   	movff	i2___flmul@prod+3,?i2___flmul+3
 10216  003350  0012               	return		;funcret
 10217  003352                     __end_ofi2___flmul:
 10218                           	opt callstack 0
 10219                           
 10220 ;; *************** function ___xxtofl *****************
 10221 ;; Defined at:
 10222 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  sign            1    wreg     unsigned char 
 10225 ;;  val             4    1[COMRAM] long 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  sign            1    9[COMRAM] unsigned char 
 10228 ;;  arg             4   11[COMRAM] unsigned long 
 10229 ;;  exp             1   10[COMRAM] unsigned char 
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  4    1[COMRAM] unsigned char 
 10232 ;; Registers used:
 10233 ;;		wreg, status,2, status,0
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10240 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10241 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10242 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10243 ;;Total ram usage:       14 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_ADC_ISR
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text45
 10253  00425E                     __ptext45:
 10254                           	opt callstack 0
 10255  00425E                     ___xxtofl:
 10256                           	opt callstack 20
 10257                           
 10258                           ;incstack = 0
 10259                           ;___xxtofl@sign stored from wreg
 10260  00425E  6E0A               	movwf	___xxtofl@sign,c
 10261  004260  500A               	movf	___xxtofl@sign,w,c
 10262  004262  A4D8               	btfss	status,2,c
 10263  004264  AE05               	btfss	___xxtofl@val+3,7,c
 10264  004266  D022               	goto	i2l1291
 10265  004268  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 10266  00426E  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 10267  004274  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 10268  00427A  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 10269  004280  1E06               	comf	??___xxtofl,f,c
 10270  004282  1E07               	comf	??___xxtofl+1,f,c
 10271  004284  1E08               	comf	??___xxtofl+2,f,c
 10272  004286  1E09               	comf	??___xxtofl+3,f,c
 10273  004288  2A06               	incf	??___xxtofl,f,c
 10274  00428A  0E00               	movlw	0
 10275  00428C  2207               	addwfc	??___xxtofl+1,f,c
 10276  00428E  2208               	addwfc	??___xxtofl+2,f,c
 10277  004290  2209               	addwfc	??___xxtofl+3,f,c
 10278  004292  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 10279  004298  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 10280  00429E  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 10281  0042A4  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 10282  0042AA  D00C               	goto	i2l4931
 10283  0042AC                     i2l1291:
 10284  0042AC  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 10285  0042B2  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 10286  0042B8  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 10287  0042BE  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 10288  0042C4                     i2l4931:
 10289  0042C4  5002               	movf	___xxtofl@val,w,c
 10290  0042C6  1003               	iorwf	___xxtofl@val+1,w,c
 10291  0042C8  1004               	iorwf	___xxtofl@val+2,w,c
 10292  0042CA  1005               	iorwf	___xxtofl@val+3,w,c
 10293  0042CC  A4D8               	btfss	status,2,c
 10294  0042CE  D009               	goto	i2l4937
 10295  0042D0  0E00               	movlw	0
 10296  0042D2  6E02               	movwf	?___xxtofl,c
 10297  0042D4  0E00               	movlw	0
 10298  0042D6  6E03               	movwf	?___xxtofl+1,c
 10299  0042D8  0E00               	movlw	0
 10300  0042DA  6E04               	movwf	?___xxtofl+2,c
 10301  0042DC  0E00               	movlw	0
 10302  0042DE  6E05               	movwf	?___xxtofl+3,c
 10303  0042E0  0012               	return	
 10304  0042E2                     i2l4937:
 10305  0042E2  0E96               	movlw	150
 10306  0042E4  6E0B               	movwf	___xxtofl@exp,c
 10307  0042E6  D006               	goto	i2l4941
 10308  0042E8                     i2l4939:
 10309  0042E8  2A0B               	incf	___xxtofl@exp,f,c
 10310  0042EA  90D8               	bcf	status,0,c
 10311  0042EC  320F               	rrcf	___xxtofl@arg+3,f,c
 10312  0042EE  320E               	rrcf	___xxtofl@arg+2,f,c
 10313  0042F0  320D               	rrcf	___xxtofl@arg+1,f,c
 10314  0042F2  320C               	rrcf	___xxtofl@arg,f,c
 10315  0042F4                     i2l4941:
 10316  0042F4  0E00               	movlw	0
 10317  0042F6  140C               	andwf	___xxtofl@arg,w,c
 10318  0042F8  6E06               	movwf	??___xxtofl& (0+255),c
 10319  0042FA  0E00               	movlw	0
 10320  0042FC  140D               	andwf	___xxtofl@arg+1,w,c
 10321  0042FE  6E07               	movwf	(??___xxtofl+1)& (0+255),c
 10322  004300  0E00               	movlw	0
 10323  004302  140E               	andwf	___xxtofl@arg+2,w,c
 10324  004304  6E08               	movwf	(??___xxtofl+2)& (0+255),c
 10325  004306  0EFE               	movlw	254
 10326  004308  140F               	andwf	___xxtofl@arg+3,w,c
 10327  00430A  6E09               	movwf	(??___xxtofl+3)& (0+255),c
 10328  00430C  5006               	movf	??___xxtofl,w,c
 10329  00430E  1007               	iorwf	??___xxtofl+1,w,c
 10330  004310  1008               	iorwf	??___xxtofl+2,w,c
 10331  004312  1009               	iorwf	??___xxtofl+3,w,c
 10332  004314  B4D8               	btfsc	status,2,c
 10333  004316  D00D               	goto	i2l1298
 10334  004318  D7E7               	goto	i2l4939
 10335  00431A                     i2l4943:
 10336  00431A  2A0B               	incf	___xxtofl@exp,f,c
 10337  00431C  0E01               	movlw	1
 10338  00431E  260C               	addwf	___xxtofl@arg,f,c
 10339  004320  0E00               	movlw	0
 10340  004322  220D               	addwfc	___xxtofl@arg+1,f,c
 10341  004324  220E               	addwfc	___xxtofl@arg+2,f,c
 10342  004326  220F               	addwfc	___xxtofl@arg+3,f,c
 10343  004328  90D8               	bcf	status,0,c
 10344  00432A  320F               	rrcf	___xxtofl@arg+3,f,c
 10345  00432C  320E               	rrcf	___xxtofl@arg+2,f,c
 10346  00432E  320D               	rrcf	___xxtofl@arg+1,f,c
 10347  004330  320C               	rrcf	___xxtofl@arg,f,c
 10348  004332                     i2l1298:
 10349  004332  0E00               	movlw	0
 10350  004334  140C               	andwf	___xxtofl@arg,w,c
 10351  004336  6E06               	movwf	??___xxtofl& (0+255),c
 10352  004338  0E00               	movlw	0
 10353  00433A  140D               	andwf	___xxtofl@arg+1,w,c
 10354  00433C  6E07               	movwf	(??___xxtofl+1)& (0+255),c
 10355  00433E  0E00               	movlw	0
 10356  004340  140E               	andwf	___xxtofl@arg+2,w,c
 10357  004342  6E08               	movwf	(??___xxtofl+2)& (0+255),c
 10358  004344  0EFF               	movlw	255
 10359  004346  140F               	andwf	___xxtofl@arg+3,w,c
 10360  004348  6E09               	movwf	(??___xxtofl+3)& (0+255),c
 10361  00434A  5006               	movf	??___xxtofl,w,c
 10362  00434C  1007               	iorwf	??___xxtofl+1,w,c
 10363  00434E  1008               	iorwf	??___xxtofl+2,w,c
 10364  004350  1009               	iorwf	??___xxtofl+3,w,c
 10365  004352  B4D8               	btfsc	status,2,c
 10366  004354  D007               	goto	i2l4951
 10367  004356  D7E1               	goto	i2l4943
 10368  004358                     i2l4949:
 10369  004358  060B               	decf	___xxtofl@exp,f,c
 10370  00435A  90D8               	bcf	status,0,c
 10371  00435C  360C               	rlcf	___xxtofl@arg,f,c
 10372  00435E  360D               	rlcf	___xxtofl@arg+1,f,c
 10373  004360  360E               	rlcf	___xxtofl@arg+2,f,c
 10374  004362  360F               	rlcf	___xxtofl@arg+3,f,c
 10375  004364                     i2l4951:
 10376  004364  BE0E               	btfsc	___xxtofl@arg+2,7,c
 10377  004366  D003               	goto	i2u611_40
 10378  004368  0E02               	movlw	2
 10379  00436A  600B               	cpfslt	___xxtofl@exp,c
 10380  00436C  D7F5               	goto	i2l4949
 10381  00436E                     i2u611_40:
 10382  00436E  A00B               	btfss	___xxtofl@exp,0,c
 10383  004370  9E0E               	bcf	___xxtofl@arg+2,7,c
 10384  004372  90D8               	bcf	status,0,c
 10385  004374  320B               	rrcf	___xxtofl@exp,f,c
 10386  004376  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 10387  00437C  6A07               	clrf	(??___xxtofl+1)& (0+255),c
 10388  00437E  6A08               	clrf	(??___xxtofl+2)& (0+255),c
 10389  004380  6A09               	clrf	(??___xxtofl+3)& (0+255),c
 10390  004382  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 10391  004388  6A08               	clrf	??___xxtofl+2,c
 10392  00438A  6A07               	clrf	??___xxtofl+1,c
 10393  00438C  6A06               	clrf	??___xxtofl,c
 10394  00438E  5006               	movf	??___xxtofl,w,c
 10395  004390  120C               	iorwf	___xxtofl@arg,f,c
 10396  004392  5007               	movf	??___xxtofl+1,w,c
 10397  004394  120D               	iorwf	___xxtofl@arg+1,f,c
 10398  004396  5008               	movf	??___xxtofl+2,w,c
 10399  004398  120E               	iorwf	___xxtofl@arg+2,f,c
 10400  00439A  5009               	movf	??___xxtofl+3,w,c
 10401  00439C  120F               	iorwf	___xxtofl@arg+3,f,c
 10402  00439E  500A               	movf	___xxtofl@sign,w,c
 10403  0043A0  A4D8               	btfss	status,2,c
 10404  0043A2  AE05               	btfss	___xxtofl@val+3,7,c
 10405  0043A4  D001               	goto	i2l4967
 10406  0043A6  8E0F               	bsf	___xxtofl@arg+3,7,c
 10407  0043A8                     i2l4967:
 10408  0043A8  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 10409  0043AE  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 10410  0043B4  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 10411  0043BA  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 10412  0043C0  0012               	return		;funcret
 10413  0043C2                     __end_of___xxtofl:
 10414                           	opt callstack 0
 10415                           
 10416 ;; *************** function _I2C_TX_ISR *****************
 10417 ;; Defined at:
 10418 ;;		line 107 in file "main.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;		None
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;		None
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1    wreg      void 
 10425 ;; Registers used:
 10426 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10436 ;;Total ram usage:        0 bytes
 10437 ;; Hardware stack levels used:    1
 10438 ;; This function calls:
 10439 ;;		Nothing
 10440 ;; This function is called by:
 10441 ;;		Interrupt level 2
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           	psect	text46
 10446  0052D8                     __ptext46:
 10447                           	opt callstack 0
 10448  0052D8                     _I2C_TX_ISR:
 10449                           	opt callstack 21
 10450                           
 10451                           ;main.c: 108:     I2C1TXB = I2C_TX_BUFFER[I2C_TX_COUNTER];
 10452                           
 10453                           ;incstack = 0
 10454  0052D8  0E2A               	movlw	low _I2C_TX_BUFFER
 10455  0052DA  244B               	addwf	_I2C_TX_COUNTER,w,c
 10456  0052DC  6ED9               	movwf	fsr2l,c
 10457  0052DE  6ADA               	clrf	fsr2h,c
 10458  0052E0  0E01               	movlw	high _I2C_TX_BUFFER
 10459  0052E2  22DA               	addwfc	fsr2h,f,c
 10460  0052E4  50DF               	movf	indf2,w,c
 10461  0052E6  013D               	movlb	61	; () banked
 10462  0052E8  6F6B               	movwf	107,b	;volatile
 10463                           
 10464                           ; BSR set to: 61
 10465                           ;main.c: 109:     I2C_TX_COUNTER ++;
 10466  0052EA  2A4B               	incf	_I2C_TX_COUNTER,f,c
 10467                           
 10468                           ; BSR set to: 61
 10469  0052EC  0011               	retfie		f
 10470  0052EE                     __end_of_I2C_TX_ISR:
 10471                           	opt callstack 0
 10472                           
 10473 ;; *************** function _I2C_RX_ISR *****************
 10474 ;; Defined at:
 10475 ;;		line 111 in file "main.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;		None
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;		None
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1    wreg      void 
 10482 ;; Registers used:
 10483 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10493 ;;Total ram usage:        0 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; This function calls:
 10496 ;;		Nothing
 10497 ;; This function is called by:
 10498 ;;		Interrupt level 2
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text47
 10503  0052F0                     __ptext47:
 10504                           	opt callstack 0
 10505  0052F0                     _I2C_RX_ISR:
 10506                           	opt callstack 21
 10507                           
 10508                           ;main.c: 112:     I2C_RX_BUFFER[I2C_RX_COUNTER] = I2C1RXB;
 10509                           
 10510                           ; BSR set to: 61
 10511                           ;incstack = 0
 10512  0052F0  0E20               	movlw	low _I2C_RX_BUFFER
 10513  0052F2  244A               	addwf	_I2C_RX_COUNTER,w,c
 10514  0052F4  6ED9               	movwf	fsr2l,c
 10515  0052F6  6ADA               	clrf	fsr2h,c
 10516  0052F8  0E01               	movlw	high _I2C_RX_BUFFER
 10517  0052FA  22DA               	addwfc	fsr2h,f,c
 10518  0052FC  006F F5AB FFDF     	movff	15722,indf2	;volatile
 10519                           
 10520                           ;main.c: 113:     I2C_RX_COUNTER ++;
 10521  005302  2A4A               	incf	_I2C_RX_COUNTER,f,c
 10522  005304  0011               	retfie		f
 10523  005306                     __end_of_I2C_RX_ISR:
 10524                           	opt callstack 0
 10525                           
 10526 ;; *************** function _I2C_GENERAL_ISR *****************
 10527 ;; Defined at:
 10528 ;;		line 116 in file "main.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;		None
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;		None
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  1    wreg      void 
 10535 ;; Registers used:
 10536 ;;		wreg, status,2
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10546 ;;Total ram usage:        0 bytes
 10547 ;; Hardware stack levels used:    1
 10548 ;; This function calls:
 10549 ;;		Nothing
 10550 ;; This function is called by:
 10551 ;;		Interrupt level 2
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           	psect	text48
 10556  005318                     __ptext48:
 10557                           	opt callstack 0
 10558  005318                     _I2C_GENERAL_ISR:
 10559                           	opt callstack 21
 10560                           
 10561                           ;main.c: 117:     if(I2C1PIRbits.PC1IF)
 10562                           
 10563                           ;incstack = 0
 10564  005318  013D               	movlb	61	; () banked
 10565  00531A  A579               	btfss	121,2,b	;volatile
 10566  00531C  D002               	goto	i2l310
 10567                           
 10568                           ; BSR set to: 61
 10569                           ;main.c: 118:         I2C_STOP_DETECTED = 1;
 10570  00531E  0E01               	movlw	1
 10571  005320  6E49               	movwf	_I2C_STOP_DETECTED,c
 10572  005322                     i2l310:
 10573                           
 10574                           ; BSR set to: 61
 10575                           ;main.c: 119:     I2C1PIR = 0x00;
 10576  005322  0E00               	movlw	0
 10577  005324  6F79               	movwf	121,b	;volatile
 10578                           
 10579                           ; BSR set to: 61
 10580  005326  0011               	retfie		f
 10581  005328                     __end_of_I2C_GENERAL_ISR:
 10582                           	opt callstack 0
 10583                           
 10584 ;; *************** function _DEFAULT_ISR *****************
 10585 ;; Defined at:
 10586 ;;		line 122 in file "main.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;		None
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;		None
 10591 ;; Return value:  Size  Location     Type
 10592 ;;                  1    wreg      void 
 10593 ;; Registers used:
 10594 ;;		None
 10595 ;; Tracked objects:
 10596 ;;		On entry : 0/0
 10597 ;;		On exit  : 0/0
 10598 ;;		Unchanged: 0/0
 10599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10604 ;;Total ram usage:        0 bytes
 10605 ;; Hardware stack levels used:    1
 10606 ;; This function calls:
 10607 ;;		Nothing
 10608 ;; This function is called by:
 10609 ;;		Interrupt level 2
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           	psect	text49
 10614  00533C                     __ptext49:
 10615                           	opt callstack 0
 10616  00533C                     _DEFAULT_ISR:
 10617                           	opt callstack 21
 10618                           
 10619                           ; BSR set to: 61
 10620                           ;incstack = 0
 10621  00533C  0011               	retfie		f
 10622  00533E                     __end_of_DEFAULT_ISR:
 10623                           	opt callstack 0
 10624                           
 10625                           ;
 10626                           ; Interrupt Vector Table @ 0x8
 10627                           ;
 10628                           
 10629                           	psect	ivt0x8
 10630  000008                     __pivt0x8:
 10631                           	opt callstack 0
 10632  000008                     ivt0x8_base:
 10633                           	opt callstack 0
 10634                           
 10635                           ; Vector 0 : SWINT
 10636  000008  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10637                           
 10638                           ; Vector 1 : HLVD
 10639  00000A  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10640                           
 10641                           ; Vector 2 : OSF
 10642  00000C  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10643                           
 10644                           ; Vector 3 : CSW
 10645  00000E  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10646                           
 10647                           ; Vector 4 : NVM
 10648  000010  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10649                           
 10650                           ; Vector 5 : SCAN
 10651  000012  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10652                           
 10653                           ; Vector 6 : CRC
 10654  000014  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10655                           
 10656                           ; Vector 7 : IOC
 10657  000016  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10658                           
 10659                           ; Vector 8 : INT0
 10660  000018  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10661                           
 10662                           ; Vector 9 : ZCD
 10663  00001A  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10664                           
 10665                           ; Vector 10 : AD
 10666  00001C  10F1               	dw	_ADC_ISR shr (0+2)
 10667                           
 10668                           ; Vector 11 : ADT
 10669  00001E  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10670                           
 10671                           ; Vector 12 : CMP1
 10672  000020  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10673                           
 10674                           ; Vector 13 : SMT1
 10675  000022  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10676                           
 10677                           ; Vector 14 : SMT1PRA
 10678  000024  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10679                           
 10680                           ; Vector 15 : SMT1PRW
 10681  000026  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10682                           
 10683                           ; Vector 16 : DMA1SCNT
 10684  000028  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10685                           
 10686                           ; Vector 17 : DMA1DCNT
 10687  00002A  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10688                           
 10689                           ; Vector 18 : DMA1OR
 10690  00002C  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10691                           
 10692                           ; Vector 19 : DMA1A
 10693  00002E  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10694                           
 10695                           ; Vector 20 : SPI1RX
 10696  000030  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10697                           
 10698                           ; Vector 21 : SPI1TX
 10699  000032  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10700                           
 10701                           ; Vector 22 : SPI1
 10702  000034  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10703                           
 10704                           ; Vector 23 : I2C1RX
 10705  000036  14BC               	dw	_I2C_RX_ISR shr (0+2)
 10706                           
 10707                           ; Vector 24 : I2C1TX
 10708  000038  14B6               	dw	_I2C_TX_ISR shr (0+2)
 10709                           
 10710                           ; Vector 25 : I2C1
 10711  00003A  14C6               	dw	_I2C_GENERAL_ISR shr (0+2)
 10712                           
 10713                           ; Vector 26 : I2C1E
 10714  00003C  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10715                           
 10716                           ; Vector 27 : U1RX
 10717  00003E  14B0               	dw	_UART1_RX_ISR shr (0+2)
 10718                           
 10719                           ; Vector 28 : U1TX
 10720  000040  14CA               	dw	_UART1_TX_ISR shr (0+2)
 10721                           
 10722                           ; Vector 29 : U1E
 10723  000042  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10724                           
 10725                           ; Vector 30 : U1
 10726  000044  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10727                           
 10728                           ; Vector 31 : TMR0
 10729  000046  13FB               	dw	_TIMER0_ISR shr (0+2)
 10730                           
 10731                           ; Vector 32 : TMR1
 10732  000048  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10733                           
 10734                           ; Vector 33 : TMR1G
 10735  00004A  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10736                           
 10737                           ; Vector 34 : TMR2
 10738  00004C  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10739                           
 10740                           ; Vector 35 : CCP1
 10741  00004E  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10742                           
 10743                           ; Vector 36 : Undefined
 10744  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10745                           
 10746                           ; Vector 37 : NCO1
 10747  000052  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10748                           
 10749                           ; Vector 38 : CWG1
 10750  000054  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10751                           
 10752                           ; Vector 39 : CLC1
 10753  000056  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10754                           
 10755                           ; Vector 40 : INT1
 10756  000058  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10757                           
 10758                           ; Vector 41 : CMP2
 10759  00005A  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10760                           
 10761                           ; Vector 42 : DMA2SCNT
 10762  00005C  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10763                           
 10764                           ; Vector 43 : DMA2DCNT
 10765  00005E  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10766                           
 10767                           ; Vector 44 : DMA2OR
 10768  000060  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10769                           
 10770                           ; Vector 45 : DMA2A
 10771  000062  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10772                           
 10773                           ; Vector 46 : I2C2RX
 10774  000064  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10775                           
 10776                           ; Vector 47 : I2C2TX
 10777  000066  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10778                           
 10779                           ; Vector 48 : I2C2
 10780  000068  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10781                           
 10782                           ; Vector 49 : I2C2E
 10783  00006A  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10784                           
 10785                           ; Vector 50 : U2RX
 10786  00006C  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10787                           
 10788                           ; Vector 51 : U2TX
 10789  00006E  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10790                           
 10791                           ; Vector 52 : U2E
 10792  000070  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10793                           
 10794                           ; Vector 53 : U2
 10795  000072  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10796                           
 10797                           ; Vector 54 : TMR3
 10798  000074  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10799                           
 10800                           ; Vector 55 : TMR3G
 10801  000076  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10802                           
 10803                           ; Vector 56 : TMR4
 10804  000078  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10805                           
 10806                           ; Vector 57 : CCP2
 10807  00007A  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10808                           
 10809                           ; Vector 58 : Undefined
 10810  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10811                           
 10812                           ; Vector 59 : CWG2
 10813  00007E  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10814                           
 10815                           ; Vector 60 : CLC2
 10816  000080  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10817                           
 10818                           ; Vector 61 : INT2
 10819  000082  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10820                           
 10821                           ; Vector 62 : Undefined
 10822  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10823                           
 10824                           ; Vector 63 : Undefined
 10825  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10826                           
 10827                           ; Vector 64 : Undefined
 10828  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10829                           
 10830                           ; Vector 65 : Undefined
 10831  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10832                           
 10833                           ; Vector 66 : Undefined
 10834  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10835                           
 10836                           ; Vector 67 : Undefined
 10837  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10838                           
 10839                           ; Vector 68 : Undefined
 10840  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10841                           
 10842                           ; Vector 69 : Undefined
 10843  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10844                           
 10845                           ; Vector 70 : TMR5
 10846  000094  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10847                           
 10848                           ; Vector 71 : TMR5G
 10849  000096  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10850                           
 10851                           ; Vector 72 : TMR6
 10852  000098  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10853                           
 10854                           ; Vector 73 : CCP3
 10855  00009A  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10856                           
 10857                           ; Vector 74 : CWG3
 10858  00009C  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10859                           
 10860                           ; Vector 75 : CLC3
 10861  00009E  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10862                           
 10863                           ; Vector 76 : Undefined
 10864  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10865                           
 10866                           ; Vector 77 : Undefined
 10867  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10868                           
 10869                           ; Vector 78 : Undefined
 10870  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10871                           
 10872                           ; Vector 79 : Undefined
 10873  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10874                           
 10875                           ; Vector 80 : CCP4
 10876  0000A8  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10877                           
 10878                           ; Vector 81 : CLC4
 10879  0000AA  14CF               	dw	_DEFAULT_ISR shr (0+2)
 10880  0000AC                     ivt0x8_undefint:
 10881                           	opt callstack 0
 10882  0000AC  00FF               	reset	
 10883                           
 10884                           	psect	param0
 10885  0000                     tosu	equ	0x3FFF
 10886                           tosh	equ	0x3FFE
 10887                           tosl	equ	0x3FFD
 10888                           stkptr	equ	0x3FFC
 10889                           pclatu	equ	0x3FFB
 10890                           pclath	equ	0x3FFA
 10891                           pcl	equ	0x3FF9
 10892                           tblptru	equ	0x3FF8
 10893                           tblptrh	equ	0x3FF7
 10894                           tblptrl	equ	0x3FF6
 10895                           tablat	equ	0x3FF5
 10896                           prodh	equ	0x3FF4
 10897                           prodl	equ	0x3FF3
 10898                           indf0	equ	0x3FEF
 10899                           postinc0	equ	0x3FEE
 10900                           postdec0	equ	0x3FED
 10901                           preinc0	equ	0x3FEC
 10902                           plusw0	equ	0x3FEB
 10903                           fsr0h	equ	0x3FEA
 10904                           fsr0l	equ	0x3FE9
 10905                           wreg	equ	0x3FE8
 10906                           indf1	equ	0x3FE7
 10907                           postinc1	equ	0x3FE6
 10908                           postdec1	equ	0x3FE5
 10909                           preinc1	equ	0x3FE4
 10910                           plusw1	equ	0x3FE3
 10911                           fsr1h	equ	0x3FE2
 10912                           fsr1l	equ	0x3FE1
 10913                           bsr	equ	0x3FE0
 10914                           indf2	equ	0x3FDF
 10915                           postinc2	equ	0x3FDE
 10916                           postdec2	equ	0x3FDD
 10917                           preinc2	equ	0x3FDC
 10918                           plusw2	equ	0x3FDB
 10919                           fsr2h	equ	0x3FDA
 10920                           fsr2l	equ	0x3FD9
 10921                           status	equ	0x3FD8


Data Sizes:
    Strings     142
    Constant    0
    Data        3
    BSS         201
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      84
    BANK0           160    160     160
    BANK1           256      4     168
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_8(CODE[24]), STR_7(CODE[19]), STR_6(CODE[13]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[24]), STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S2168_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_8(CODE[24]), STR_7(CODE[19]), STR_6(CODE[13]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[24]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_8(CODE[24]), STR_7(CODE[19]), STR_6(CODE[13]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[24]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    I2C_Transmit@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> AD5272_COMMANDS(COMRAM[2]), 

    memset@st	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    USART1_SendString@str	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER0_ISR in COMRAM

    _TIMER0_ISR->_ADC_Start

Critical Paths under _UART1_TX_ISR in COMRAM

    None.

Critical Paths under _UART1_RX_ISR in COMRAM

    None.

Critical Paths under _ADC_ISR in COMRAM

    _ADC_ISR->i2___flmul
    i2___flmul->___xxtofl

Critical Paths under _I2C_TX_ISR in COMRAM

    None.

Critical Paths under _I2C_RX_ISR in COMRAM

    None.

Critical Paths under _I2C_GENERAL_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _USART_handler->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _USART1_SendString->_GetStringSize
    _I2C_handler->_I2C_Transmit
    _USART1_ReceiveCommand->___wmul

Critical Paths under _TIMER0_ISR in BANK0

    None.

Critical Paths under _UART1_TX_ISR in BANK0

    None.

Critical Paths under _UART1_RX_ISR in BANK0

    None.

Critical Paths under _ADC_ISR in BANK0

    None.

Critical Paths under _I2C_TX_ISR in BANK0

    None.

Critical Paths under _I2C_RX_ISR in BANK0

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK0

    None.

Critical Paths under _DEFAULT_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_USART_handler

Critical Paths under _TIMER0_ISR in BANK1

    None.

Critical Paths under _UART1_TX_ISR in BANK1

    None.

Critical Paths under _UART1_RX_ISR in BANK1

    None.

Critical Paths under _ADC_ISR in BANK1

    None.

Critical Paths under _I2C_TX_ISR in BANK1

    None.

Critical Paths under _I2C_RX_ISR in BANK1

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK1

    None.

Critical Paths under _DEFAULT_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0_ISR in BANK2

    None.

Critical Paths under _UART1_TX_ISR in BANK2

    None.

Critical Paths under _UART1_RX_ISR in BANK2

    None.

Critical Paths under _ADC_ISR in BANK2

    None.

Critical Paths under _I2C_TX_ISR in BANK2

    None.

Critical Paths under _I2C_RX_ISR in BANK2

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK2

    None.

Critical Paths under _DEFAULT_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0_ISR in BANK3

    None.

Critical Paths under _UART1_TX_ISR in BANK3

    None.

Critical Paths under _UART1_RX_ISR in BANK3

    None.

Critical Paths under _ADC_ISR in BANK3

    None.

Critical Paths under _I2C_TX_ISR in BANK3

    None.

Critical Paths under _I2C_RX_ISR in BANK3

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK3

    None.

Critical Paths under _DEFAULT_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0_ISR in BANK4

    None.

Critical Paths under _UART1_TX_ISR in BANK4

    None.

Critical Paths under _UART1_RX_ISR in BANK4

    None.

Critical Paths under _ADC_ISR in BANK4

    None.

Critical Paths under _I2C_TX_ISR in BANK4

    None.

Critical Paths under _I2C_RX_ISR in BANK4

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK4

    None.

Critical Paths under _DEFAULT_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0_ISR in BANK5

    None.

Critical Paths under _UART1_TX_ISR in BANK5

    None.

Critical Paths under _UART1_RX_ISR in BANK5

    None.

Critical Paths under _ADC_ISR in BANK5

    None.

Critical Paths under _I2C_TX_ISR in BANK5

    None.

Critical Paths under _I2C_RX_ISR in BANK5

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0_ISR in BANK6

    None.

Critical Paths under _UART1_TX_ISR in BANK6

    None.

Critical Paths under _UART1_RX_ISR in BANK6

    None.

Critical Paths under _ADC_ISR in BANK6

    None.

Critical Paths under _I2C_TX_ISR in BANK6

    None.

Critical Paths under _I2C_RX_ISR in BANK6

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0_ISR in BANK7

    None.

Critical Paths under _UART1_TX_ISR in BANK7

    None.

Critical Paths under _UART1_RX_ISR in BANK7

    None.

Critical Paths under _ADC_ISR in BANK7

    None.

Critical Paths under _I2C_TX_ISR in BANK7

    None.

Critical Paths under _I2C_RX_ISR in BANK7

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TIMER0_ISR in BANK8

    None.

Critical Paths under _UART1_TX_ISR in BANK8

    None.

Critical Paths under _UART1_RX_ISR in BANK8

    None.

Critical Paths under _ADC_ISR in BANK8

    None.

Critical Paths under _I2C_TX_ISR in BANK8

    None.

Critical Paths under _I2C_RX_ISR in BANK8

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TIMER0_ISR in BANK9

    None.

Critical Paths under _UART1_TX_ISR in BANK9

    None.

Critical Paths under _UART1_RX_ISR in BANK9

    None.

Critical Paths under _ADC_ISR in BANK9

    None.

Critical Paths under _I2C_TX_ISR in BANK9

    None.

Critical Paths under _I2C_RX_ISR in BANK9

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TIMER0_ISR in BANK10

    None.

Critical Paths under _UART1_TX_ISR in BANK10

    None.

Critical Paths under _UART1_RX_ISR in BANK10

    None.

Critical Paths under _ADC_ISR in BANK10

    None.

Critical Paths under _I2C_TX_ISR in BANK10

    None.

Critical Paths under _I2C_RX_ISR in BANK10

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TIMER0_ISR in BANK11

    None.

Critical Paths under _UART1_TX_ISR in BANK11

    None.

Critical Paths under _UART1_RX_ISR in BANK11

    None.

Critical Paths under _ADC_ISR in BANK11

    None.

Critical Paths under _I2C_TX_ISR in BANK11

    None.

Critical Paths under _I2C_RX_ISR in BANK11

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TIMER0_ISR in BANK12

    None.

Critical Paths under _UART1_TX_ISR in BANK12

    None.

Critical Paths under _UART1_RX_ISR in BANK12

    None.

Critical Paths under _ADC_ISR in BANK12

    None.

Critical Paths under _I2C_TX_ISR in BANK12

    None.

Critical Paths under _I2C_RX_ISR in BANK12

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TIMER0_ISR in BANK13

    None.

Critical Paths under _UART1_TX_ISR in BANK13

    None.

Critical Paths under _UART1_RX_ISR in BANK13

    None.

Critical Paths under _ADC_ISR in BANK13

    None.

Critical Paths under _I2C_TX_ISR in BANK13

    None.

Critical Paths under _I2C_RX_ISR in BANK13

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TIMER0_ISR in BANK14

    None.

Critical Paths under _UART1_TX_ISR in BANK14

    None.

Critical Paths under _UART1_RX_ISR in BANK14

    None.

Critical Paths under _ADC_ISR in BANK14

    None.

Critical Paths under _I2C_TX_ISR in BANK14

    None.

Critical Paths under _I2C_RX_ISR in BANK14

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TIMER0_ISR in BANK15

    None.

Critical Paths under _UART1_TX_ISR in BANK15

    None.

Critical Paths under _UART1_RX_ISR in BANK15

    None.

Critical Paths under _ADC_ISR in BANK15

    None.

Critical Paths under _I2C_TX_ISR in BANK15

    None.

Critical Paths under _I2C_RX_ISR in BANK15

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TIMER0_ISR in BANK16

    None.

Critical Paths under _UART1_TX_ISR in BANK16

    None.

Critical Paths under _UART1_RX_ISR in BANK16

    None.

Critical Paths under _ADC_ISR in BANK16

    None.

Critical Paths under _I2C_TX_ISR in BANK16

    None.

Critical Paths under _I2C_RX_ISR in BANK16

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TIMER0_ISR in BANK17

    None.

Critical Paths under _UART1_TX_ISR in BANK17

    None.

Critical Paths under _UART1_RX_ISR in BANK17

    None.

Critical Paths under _ADC_ISR in BANK17

    None.

Critical Paths under _I2C_TX_ISR in BANK17

    None.

Critical Paths under _I2C_RX_ISR in BANK17

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TIMER0_ISR in BANK18

    None.

Critical Paths under _UART1_TX_ISR in BANK18

    None.

Critical Paths under _UART1_RX_ISR in BANK18

    None.

Critical Paths under _ADC_ISR in BANK18

    None.

Critical Paths under _I2C_TX_ISR in BANK18

    None.

Critical Paths under _I2C_RX_ISR in BANK18

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TIMER0_ISR in BANK19

    None.

Critical Paths under _UART1_TX_ISR in BANK19

    None.

Critical Paths under _UART1_RX_ISR in BANK19

    None.

Critical Paths under _ADC_ISR in BANK19

    None.

Critical Paths under _I2C_TX_ISR in BANK19

    None.

Critical Paths under _I2C_RX_ISR in BANK19

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TIMER0_ISR in BANK20

    None.

Critical Paths under _UART1_TX_ISR in BANK20

    None.

Critical Paths under _UART1_RX_ISR in BANK20

    None.

Critical Paths under _ADC_ISR in BANK20

    None.

Critical Paths under _I2C_TX_ISR in BANK20

    None.

Critical Paths under _I2C_RX_ISR in BANK20

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TIMER0_ISR in BANK21

    None.

Critical Paths under _UART1_TX_ISR in BANK21

    None.

Critical Paths under _UART1_RX_ISR in BANK21

    None.

Critical Paths under _ADC_ISR in BANK21

    None.

Critical Paths under _I2C_TX_ISR in BANK21

    None.

Critical Paths under _I2C_RX_ISR in BANK21

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TIMER0_ISR in BANK22

    None.

Critical Paths under _UART1_TX_ISR in BANK22

    None.

Critical Paths under _UART1_RX_ISR in BANK22

    None.

Critical Paths under _ADC_ISR in BANK22

    None.

Critical Paths under _I2C_TX_ISR in BANK22

    None.

Critical Paths under _I2C_RX_ISR in BANK22

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TIMER0_ISR in BANK23

    None.

Critical Paths under _UART1_TX_ISR in BANK23

    None.

Critical Paths under _UART1_RX_ISR in BANK23

    None.

Critical Paths under _ADC_ISR in BANK23

    None.

Critical Paths under _I2C_TX_ISR in BANK23

    None.

Critical Paths under _I2C_RX_ISR in BANK23

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TIMER0_ISR in BANK24

    None.

Critical Paths under _UART1_TX_ISR in BANK24

    None.

Critical Paths under _UART1_RX_ISR in BANK24

    None.

Critical Paths under _ADC_ISR in BANK24

    None.

Critical Paths under _I2C_TX_ISR in BANK24

    None.

Critical Paths under _I2C_RX_ISR in BANK24

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TIMER0_ISR in BANK25

    None.

Critical Paths under _UART1_TX_ISR in BANK25

    None.

Critical Paths under _UART1_RX_ISR in BANK25

    None.

Critical Paths under _ADC_ISR in BANK25

    None.

Critical Paths under _I2C_TX_ISR in BANK25

    None.

Critical Paths under _I2C_RX_ISR in BANK25

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TIMER0_ISR in BANK26

    None.

Critical Paths under _UART1_TX_ISR in BANK26

    None.

Critical Paths under _UART1_RX_ISR in BANK26

    None.

Critical Paths under _ADC_ISR in BANK26

    None.

Critical Paths under _I2C_TX_ISR in BANK26

    None.

Critical Paths under _I2C_RX_ISR in BANK26

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TIMER0_ISR in BANK27

    None.

Critical Paths under _UART1_TX_ISR in BANK27

    None.

Critical Paths under _UART1_RX_ISR in BANK27

    None.

Critical Paths under _ADC_ISR in BANK27

    None.

Critical Paths under _I2C_TX_ISR in BANK27

    None.

Critical Paths under _I2C_RX_ISR in BANK27

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TIMER0_ISR in BANK28

    None.

Critical Paths under _UART1_TX_ISR in BANK28

    None.

Critical Paths under _UART1_RX_ISR in BANK28

    None.

Critical Paths under _ADC_ISR in BANK28

    None.

Critical Paths under _I2C_TX_ISR in BANK28

    None.

Critical Paths under _I2C_RX_ISR in BANK28

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TIMER0_ISR in BANK29

    None.

Critical Paths under _UART1_TX_ISR in BANK29

    None.

Critical Paths under _UART1_RX_ISR in BANK29

    None.

Critical Paths under _ADC_ISR in BANK29

    None.

Critical Paths under _I2C_TX_ISR in BANK29

    None.

Critical Paths under _I2C_RX_ISR in BANK29

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TIMER0_ISR in BANK30

    None.

Critical Paths under _UART1_TX_ISR in BANK30

    None.

Critical Paths under _UART1_RX_ISR in BANK30

    None.

Critical Paths under _ADC_ISR in BANK30

    None.

Critical Paths under _I2C_TX_ISR in BANK30

    None.

Critical Paths under _I2C_RX_ISR in BANK30

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TIMER0_ISR in BANK31

    None.

Critical Paths under _UART1_TX_ISR in BANK31

    None.

Critical Paths under _UART1_RX_ISR in BANK31

    None.

Critical Paths under _ADC_ISR in BANK31

    None.

Critical Paths under _I2C_TX_ISR in BANK31

    None.

Critical Paths under _I2C_RX_ISR in BANK31

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   40117
                                            159 BANK0      1     1      0
                                              2 BANK1      2     2      0
                           _ADC_Init
                           _I2C_Init
                       _I2C_Transmit
                        _USART1_Init
              _USART1_ReceiveCommand
                      _USART_handler
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_handler                                        2     2      0   38306
                                              0 BANK1      2     2      0
                      _GetStringSize
                        _I2C_handler
                  _USART1_SendString
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   35689
                                            141 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   33931
                                            133 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   33437
                                            113 BANK0     20    14      6
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   28740
                                             45 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3957
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3453
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     638
                                             25 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     3      5     431
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _USART1_SendString                                    8     4      4     449
                                              4 BANK0      8     4      4
                      _GetStringSize (ARG)
                    _USART1_SendByte
 ---------------------------------------------------------------------------------
 (3) _USART1_SendByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_handler                                          3     1      2    1607
                                             12 BANK0      3     1      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C_Transmit                                        12     8      4    1334
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (2) _GetStringSize                                        4     2      2     130
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _USART1_ReceiveCommand                                2     2      0     412
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _USART1_Init                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _TIMER0_ISR                                          0     0      0      15
                          _ADC_Start
 ---------------------------------------------------------------------------------
 (11) _ADC_Start                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ADC_ISR                                             4     4      0    2112
                                             40 COMRAM     4     4      0
                           ___xxtofl
                          i2___flmul
 ---------------------------------------------------------------------------------
 (11) i2___flmul                                          25    17      8    1570
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) ___xxtofl                                           14    10      4     474
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_TX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_RX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_GENERAL_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Init
   _I2C_Transmit
   _USART1_Init
   _USART1_ReceiveCommand
     ___wmul
   _USART_handler
     _GetStringSize
     _I2C_handler
       _I2C_Transmit
     _USART1_SendString
       _GetStringSize (ARG)
       _USART1_SendByte (ARG)
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isupper
           _strncmp
           _tolower
             _isupper
   _timer0_init

 _TIMER0_ISR (ROOT)
   _ADC_Start

 _UART1_TX_ISR (ROOT)

 _UART1_RX_ISR (ROOT)

 _ADC_ISR (ROOT)
   ___xxtofl
   i2___flmul
     ___xxtofl (ARG)

 _I2C_TX_ISR (ROOT)

 _I2C_RX_ISR (ROOT)

 _I2C_GENERAL_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      A8       7       65.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      54       1       88.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19C      58        0.0%
DATA                 0      0     19C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu May  2 15:50:24 2019

         USART1_SendString@size 0066                    ___fldiv@aexp 0078                    ___fldiv@bexp 0077  
           __size_of_I2C_RX_ISR 0016                    ___fldiv@sign 0070             __size_of_I2C_TX_ISR 0016  
                   __CFG_CP$OFF 000000                    ___awdiv@sign 0065              __size_of_ADC_Start 0012  
           ___wmul@multiplicand 0062                             l321 4822                             l516 4918  
                           l901 463C                             l557 2460                             l583 2812  
                           _pad 48DC                 __end_of_ADC_ISR 44B8                    ___awmod@sign 0065  
                           wreg 003FE8                     i2___flmul@a 0014                     i2___flmul@b 0010  
                  ___flmul@aexp 006D                    ___flmul@bexp 0072                    ___flmul@sign 006C  
                  ___flmul@temp 0077                    ___flmul@prod 0073                   __CFG_BBEN$OFF 000000  
          __size_of_DEFAULT_ISR 0002                    __CFG_LVP$OFF 000000                    __CFG_ZCD$OFF 000000  
                  ___fltol@exp1 0069                            l1220 3BB8                            l1231 3C26  
                          l1232 3C22                            l1250 2C6E                            l1260 2EC8  
                          l1181 3920                            l1165 384E                            l1190 3988  
                          l1166 382C                            l1191 3984                            l1327 3E2C  
                          l1267 2F62                            l1259 2ECC                            l1393 4FDC  
                          l4063 4626                            l4055 45DC                            l4059 4610  
                          l4069 4674                            l6101 24C4                            l6111 24E6  
                          l6031 21D2                            l5321 371A                            l6121 251A  
                          l6009 2124                            l6017 213C                            l5411 3872  
                          l6027 21B0                            l6035 2206                            l5421 3898  
                          l5341 375E                            l5317 3716                            l6117 250A  
                          l6045 227A                            l6053 2294                            l6029 21C8  
                          ?_pad 0070                            l5511 48FC                            l6207 2A20  
                          l6127 2554                            l6135 26B0                            l6063 232A  
                          l5601 3AA4                            l5353 3782                            l5345 3762  
                          l3673 3E94                            l5521 4940                            l6081 2448  
                          l6065 2392                            l5419 3894                            l3659 3D7A  
                          l5275 49AE                            l5515 4910                            l6235 2AB0  
                          l6219 2A62                            l6171 28DA                            l6091 2474  
                          l6059 22E0                            l6331 34E4                            l6323 3462  
                          l6501 4CBE                            l5429 38AA                            l5541 4554  
                          l3677 3EC2                            l3669 3E4E                            l5285 50E4  
                          l5293 520C                            l5525 4974                            l5517 4922  
                          l6237 2ABA                            l6157 280A                            l6149 278E  
                          l6085 246E                            l6069 23DE                            l6413 4DAE  
                          l6503 4CC8                            l6511 4CF6                            l6423 4A7E  
                          l6431 4A94                            l5623 3B0E                            l5615 3AF6  
                          l5447 3944                            l5463 3964                            l5439 3910  
                          l5383 37DC                            l5295 5212                            l6247 2B1E  
                          l6183 290A                            l6191 292A                            l6159 282C  
                          l6351 3626                            l6335 3520                            l6415 4DDE  
                          l5641 3B90                            l5633 3B68                            l5609 3AD8  
                          l5457 395A                            l5537 454A                            l5289 5102  
                          l5553 4E1E                            l6273 2BAC                            l6257 2B4A  
                          l6361 3682                            l6435 4AA8                            l6419 4A58  
                          l5811 2F20                            l5715 2C1A                            l5491 3A04  
                          l5483 39DE                            l5395 383A                            l5547 459C  
                          l6099 24C0                            l6291 46AC                            l6509 4CD4  
                          l6621 3FCA                            l6613 3FB4                            l6605 3F9E  
                          l6533 3EE6                            l6445 519C                            l5901 4D5A  
                          l5653 3BCE                            l5581 3A64                            l5733 2C5A  
                          l5717 2C1E                            l5397 383E                            l6293 46BA  
                          l6357 3676                            l6471 50BC                            l6383 52BC  
                          l6439 4AC6                            l5911 4D7C                            l5647 3BB6  
                          l5815 2F3E                            l5743 2C8C                            l5735 2C5E  
                          l5719 2C2E                            l5495 3A0C                            l6199 294E  
                          l6367 369E                            l6561 3F34                            l6545 3F04  
                          l6481 5124                            l6473 50D0                            l6449 51B2  
                          l5577 3A60                            l5497 3A0E                            l6635 3FF0  
                          l6555 3F24                            l6395 4B04                            l5915 4D8A  
                          l5907 4D72                            l5683 3C9E                            l5659 3BEC  
                          l5931 4C0E                            l5923 4BBC                            l5827 2F82  
                          l6629 3FE0                            l5861 4C56                            l5853 4C38  
                          l5693 3CD6                            l5597 3AA0                            l6583 3F6A  
                          l6399 4B30                            l5871 4C76                            l5847 4C28  
                          l5695 3CD8                            l5687 3CC8                            l5679 3C7A  
                          l5927 4BF0                            l5791 2E92                            l6743 40D0  
                          l6751 4148                            l5785 2E74                            l6753 4168  
                          l6745 4100                            l6499 4CB4                            l5859 4C4E  
                          l5875 4C80                            l5891 4D38                            l5939 5176  
                          l6763 41D6                            l6747 4130                            l6771 4218  
                          l6597 3F88                            l6589 3F72                            l5965 47BA  
                          l5949 4768                            l6757 4194                            l6773 423E  
                          l6853 48BE                            l5879 4C8E                            l5895 4D44  
                          l5983 47FA                            l5975 47D2                            l6767 4200  
                          l6759 41AC                            l5977 47DE                            l5969 47CA  
                          l6857 48C8                            l6849 48A2                            l5899 4D52  
                          l5997 20F2                            STR_1 206F                            STR_2 2062  
                          STR_3 2001                            STR_4 202E                            STR_5 2019  
                          STR_6 2055                            STR_7 2042                            STR_8 2001  
                          STR_9 207C                            u7010 4FC2                            u3900 3D40  
                          u7020 4FC4                            u3910 3D60                            u7200 3C1C  
                          u8000 277E                            u3905 3D36                            u6420 49A6  
                          u8100 2A44                            u3950 3E0C                            u3935 3D94  
                          u7240 3C88                            u6600 3812                            u3936 3D9A  
                          u6440 49EE                            u3937 3DA8                            u7250 3CAC  
                          u3970 3E74                            u9010 4172                            u3955 3E02  
                          _PIR3 0039A3                            u7340 2C7A                            u9020 4174  
                          u7430 2F2E                            u7350 2E2E                            u6630 3856  
                          u6470 51F6                            u8310 35C2                            u3975 3E6A  
                          u7600 4C0A                            u7440 2F4C                            u6480 51F8  
                          u8160 2B34                            u8320 35C4                            u8250 4718  
                          u7355 2E24                            u9107 4876                            u6580 3800  
                          u7620 4756                            u8180 2B96                            u9060 482A  
                          u7550 4D5E                            u7390 2EC2                            u6590 3810  
                          u7630 478E                            u8190 2B98                            u7710 2114  
                          u8520 514A                            u6840 39EA                            u6760 3968  
                          u6920 4510                            u8530 3EE2                            u8450 4AC6  
                          u7490 4C5A                            u7635 4784                            u6780 397E  
                          u7740 2188                            u6925 4504                            u7670 47E4  
                          u7830 2418                            u7750 218A                            u8560 3EFE  
                          u6970 4594                            u7930 24E2                            u6980 4596  
                          u7860 2456                            u7780 2252                            u6965 4576  
                          u6990 4E66                            u7790 2254                            u7890 248C  
                          u6997 4E58                            _dbuf 0134            __size_of_I2C_handler 004A  
                          _main 4814                            _prec 0041                __end_of_I2C_Init 4EDA  
                          _nout 003D                            pad@i 0077                            pad@p 0074  
                          fsr1h 003FE2                            fsr2h 003FDA                            indf1 003FE7  
                          indf2 003FDF                            fsr1l 003FE1                            pad@w 0079  
                          fsr2l 003FD9                __end_of_ADC_Init 5286                   ___fpclassifyf 44B8  
                          prodh 003FF4                            prodl 003FF3                            start 00AE  
               ___fldiv@new_exp 0071                  ?_USART_handler 0001                    _tolower$2240 006C  
                  ___param_bank 000000                     ?_TIMER0_ISR 0001                           ??_pad 0076  
         __size_of_I2C_Transmit 00A0                   ___fltol@sign1 0068                 __end_of___fladd 3A32  
                         ?_main 0001                           _ADPCH 003EF1                 __end_of___fldiv 3CE0  
                         _ADREF 003EFD                 __end_of___awdiv 4C9C                 __end_of___flneg 5190  
                         STR_10 2084                           STR_13 2080                           STR_14 2088  
                         STR_17 208C                   __CFG_WDTE$OFF 000000                           STR_19 208C  
               __end_of___awmod 4D98                 __end_of___flmul 2FA0                 __end_of___flsub 4F3A  
               __end_of___fltol 4814                 ___awdiv@divisor 0062                  __CFG_DEBUG$OFF 000000  
                         _U1UIR 003DF8                           _U1RXB 003DE8                           _U1TXB 003DEA  
                         i2l310 5322                           i2l272 500E                 ___awdiv@counter 0064  
                         _OSCEN 0039DD                    vfpfcnvrt@fmt 00D3                           _TMR0H 003FB7  
                         _TMR0L 003FB6          _AD5272_VOLTAGE_ADDRESS 0054                I2C_handler@value 006C  
                __CFG_FCMEN$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                           _flags 0043                           _fputc 4994  
                         _fputs 50D8              __CFG_MCLRE$EXTMCLR 000000                           pad@fp 0070  
                         _width 003F                           _putch 5338                 __end_of_isupper 51FE  
                         tablat 003FF5               __end_of_ADC_Start 5318                           status 003FD8  
               __end_of_sprintf 4F94                  ?___fpclassifyf 0060                 __end_of_tolower 4FEA  
             _USART1_SendString 4A44                   i2___flmul@grs 001D                 __end_of_strncmp 4748  
            USART1_SendString@i 0068              __size_ofi2___flmul 03B2                    _I2C_Transmit 4AE6  
            ?_USART1_SendString 0064                  __CFG_CSWEN$OFF 000000         I2C_Transmit@buffer_size 0062  
      __size_of_USART1_SendByte 001A                 __initialization 5040                    __end_of_main 48DC  
                __CFG_SAFEN$OFF 000000             ??_USART1_SendString 0068                       ??_ADC_ISR 0029  
                 _I2C_RX_BUFFER 0120                          ??_main 01A6                  __CFG_PR1WAY$ON 000000  
                 __activetblptr 000003                   _I2C_TX_BUFFER 012A                  __CFG_MVECEN$ON 000000  
                  ??_I2C_RX_ISR 0060                    ??_I2C_TX_ISR 0060                          _ADCON0 003EF8  
                        _ADCON1 003EF9                          _ADCON2 003EFA                          ?_fputc 0060  
                        ?_fputs 0069                          _ADRESH 003EF0                          _ADRESL 003EEF  
              ___awdiv@dividend 0060                          ?_putch 0001                          _T0CON0 003FB8  
                        _T0CON1 003FB9                          _RB1I2C 003A5A                          _U1CON0 003DF2  
                        _U1CON1 003DF3                          _U1BRGH 003DF6                          _U1BRGL 003DF5  
                        _U2CON2 003DDC                          _RB0PPS 003A08              __CFG_PWRTS$PWRT_64 000000  
                        _RB1PPS 003A09       __end_of_USART1_SendString 4AE6                          _RC7PPS 003A17  
                        i2l1250 3020                          i2l1260 327A                  __CFG_WDTCCS$SC 000000  
                        i2l1291 42AC                          i2l1267 3314                          i2l1259 327E  
                        i2l5001 300C                          i2l1298 4332                          i2l5011 303E  
                        i2l5003 3010                          i2l3157 4FFC                          i2l5111 444A  
                        i2l3167 5024                          i2l3169 502A                          i2l5115 44B2  
                        i2l5053 3226             USART1_SendByte@byte 0060                          i2l5083 32F0  
                        i2l5059 3244                          i2l5095 3334                          i2l5079 32D2  
           __size_of_TIMER0_ISR 0054                          i2l4931 42C4                          i2l4941 42F4  
                        i2l4951 4364                          i2l4943 431A                          i2l4937 42E2  
                        i2l4939 42E8                          i2l4949 4358                          i2l4967 43A8  
                        i2l4983 2FCC                          i2l4985 2FD0                          i2l4987 2FE0  
               _I2C_GENERAL_ISR 5318                          _OSCFRQ 0039DF                 ??_USART_handler 01A4  
              __end_of___xxtofl 43C2                  __CFG_XINST$OFF 000000               _I2C_STOP_DETECTED 0049  
                  vfprintf@cfmt 00EB                          ___flge 45A6                          ___fleq 4B86  
                     ??___fladd 0068                          ___wmul 5234                       ??___fldiv 0068  
                     ??___awdiv 0064                       ??___flneg 0064                  __CFG_STVREN$ON 000000  
                     ??___awmod 0064                       ??___flmul 0068                       ??___flsub 0081  
                     ??___fltol 0064                    ?_timer0_init 0001        I2C_handler@ad5272_select 006E  
                        _efgtoa 2090              __end_of_I2C_RX_ISR 5306              __end_of_I2C_TX_ISR 52EE  
                        _floorf 3CE0                          _memset 5190                          clear_0 506A  
                        clear_1 5076                ___awdiv@quotient 0066                 ___awmod@divisor 0062  
               ___awmod@counter 0064                          pad@buf 0072                          _strcpy 4E06  
                        _strlen 51FE                          fputc@c 0060                          fputs@c 006D  
                        fputs@i 006E                    __pdataCOMRAM 0052                          fputs@s 0069  
                     ?_I2C_Init 0001               __end_ofi2___flmul 3352                 ___fpclassifyf@e 0068  
                     ?_ADC_Init 0001                 ___fpclassifyf@u 006A                 ___fpclassifyf@x 0060  
                  __mediumconst 0000  __size_of_USART1_ReceiveCommand 01D2   __end_of_USART1_ReceiveCommand 40AE  
                        tblptrh 003FF7                       ??_isupper 0062                          tblptrl 003FF6  
                        tblptru 003FF8                    ?_USART1_Init 0001                          putch@c 0001  
              __end_of_vfprintf 4E06                       ??_sprintf 00F5                       ??_tolower 0068  
         __end_of_GetStringSize 5158                  i2___flmul@aexp 0021                  i2___flmul@bexp 0022  
                     ??_strncmp 0066                  i2___flmul@sign 001C                  i2___flmul@temp 0027  
                i2___flmul@prod 0023                      ___flge@ff1 0079                      ___flge@ff2 007D  
               ??___fpclassifyf 0064                    ___xxtofl@arg 000C                    ___xxtofl@exp 000B  
                  ___xxtofl@val 0002                      ___fleq@ff1 0060                      ___fleq@ff2 0064  
                    __accesstop 0060         __end_of__initialization 5088                      ___flneg@f1 0060  
                 ___rparam_used 000000                      ___fltol@f1 0060                  __pcstackCOMRAM 0001  
                ivt0x8_undefint 00AC                   __end_of_fputc 4A44                   __end_of_fputs 511A  
                 __end_of_putch 533A               ??_USART1_SendByte 0060                   ?_UART1_RX_ISR 0001  
                 ?_UART1_TX_ISR 0001          _AD5272_CURRENT_ADDRESS 0053                      ??_I2C_Init 0060  
                    ??_ADC_Init 0060         __end_of_I2C_GENERAL_ISR 5328                  _I2C_RX_COUNTER 004A  
                       ??_fputc 0064                         ??_fputs 006D                 __CFG_IVT1WAY$ON 000000  
                       ??_putch 0060                      __pbssBANK1 0100      __size_of_USART1_SendString 00A2  
                _I2C_TX_COUNTER 004B                         IVTBASEH 003FD6                         IVTBASEL 003FD5  
                       IVTBASEU 003FD7                         ?___flge 0079                         ?___fleq 0060  
                       _I2C1CLK 003D7B                         _I2C1CNT 003D6C                         _I2C1ERR 003D76  
                       ?___wmul 0060                         _I2C1PIR 003D79                         _I2C1RXB 003D6A  
                       _I2C1TXB 003D6B                 __CFG_PPS1WAY$ON 000000                    ??_TIMER0_ISR 0002  
                       ?_efgtoa 008D                  _counter_timer0 0048                         ?_floorf 0079  
                       _ADC_ISR 43C4                         ?_memset 0060                  ??_UART1_RX_ISR 0002  
                ??_UART1_TX_ISR 0002                         _COMMAND 004C                         ?_strcpy 0060  
                       ?_strlen 0060                         _U1ERRIE 003DFA                   ??_DEFAULT_ISR 0060  
                       _U1RXPPS 003AE5                       ?___xxtofl 0002                         _IVTLOCK 003FD4  
            __size_of_vfpfcnvrt 0396                         _OSCTUNE 0039DE                         _WDTCON0 00395B  
                       _WDTCON1 00395C                      _led_enable 0047                   ??_I2C_handler 006E  
            _ADC_VOLTAGE_RESULT 0039              __end_of_TIMER0_ISR 5040                  GetStringSize@i 0062  
                     _ADC_Start 5306                         __Hparam 0000                         __Lparam 0000  
    __CFG_RSTOSC$HFINTOSC_64MHZ 000000                 __size_of___flge 00D2                 __size_of___fleq 008C  
                       ___fladd 36E8                         ___fldiv 3A32                         ___awdiv 4C12  
                       ___flneg 5158                         ___awmod 4D22                         ___flmul 2BEC  
                       ___flsub 4EDA                         ___fltol 4748                 __size_of___wmul 0030  
                     ?_vfprintf 00E5                    __psmallconst 2000                 __size_of_efgtoa 0B5C  
               __size_of_floorf 01FC                         __pcinit 5040                 __size_of_memset 0038  
                       __ramtop 2000            __size_of_timer0_init 0020                         __ptext0 4814  
                       __ptext1 5286                         __ptext2 40AE                         __ptext3 4F3A  
                       __ptext4 4D98                         __ptext5 3352                         __ptext6 4678  
                       __ptext7 2090                         __ptext8 4F94                         __ptext9 51C8  
               __CFG_WRTAPP$OFF 000000                 __size_of_strcpy 006A                 __size_of_strlen 0036  
                  __size_of_pad 00B8                      ??___xxtofl 0006                ___awmod@dividend 0060  
                   _I2C1PIEbits 003D7A                 __CFG_WRTSAF$OFF 000000                         _isupper 51C8  
                       efgtoa@c 0093                         efgtoa@d 00B1                         efgtoa@e 00C9  
                       efgtoa@f 008F                         efgtoa@g 00C5                         efgtoa@h 00BB  
                       efgtoa@i 00C3                ?_I2C_GENERAL_ISR 0001                         efgtoa@l 00BF  
                       efgtoa@m 00AD                         efgtoa@n 00CB                         efgtoa@p 00B5  
                       efgtoa@t 00A9                         efgtoa@u 00CD                         efgtoa@w 00B8  
                   _I2C1PIRbits 003D79                         _sprintf 4F3A                         _tolower 4F94  
                       _tx_byte 004E                         _strncmp 4678             __end_of_DEFAULT_ISR 533E  
          end_of_initialization 5088            __size_of_USART1_Init 0086                         floorf@e 0087  
                       floorf@m 0083                         floorf@u 0089                         floorf@x 0079  
                       fputc@fp 0062                __CFG_BOREN$NOSLP 000000                         memset@i 0066  
                       memset@x 0062                         fputs@fp 006B                    ADC_Start@pin 0001  
           __end_of_I2C_handler 50D8                      ?_ADC_Start 0001               __end_of_vfpfcnvrt 36E8  
                    efgtoa@mode 00BA                      efgtoa@sign 00B3                         postdec2 003FDD  
                       postinc0 003FEE                         postinc1 003FE6                         postinc2 003FDE  
            _ADC_CURRENT_RESULT 0035                      ??_vfprintf 00EB           __CFG_WDTCPS$WDTCPS_31 000000  
                       strcpy@d 0068                         strlen@a 0062                         strcpy@s 0066  
                       strlen@s 0060                     ___fladd@grs 006F                   ___xxtofl@sign 000A  
                     _TRISAbits 003FC2                       _TRISBbits 003FC3                       _TRISCbits 003FC4  
          USART1_SendString@str 0064               __size_of_I2C_Init 006A                     ___fldiv@grs 0073  
                   ___fldiv@rem 006C                      _rx_counter 004F               __size_of_ADC_Init 0022  
                     i2___flmul 2FA0                __CFG_FEXTOSC$OFF 000000                     ___flmul@grs 006E  
          __end_of_UART1_RX_ISR 52D6            __end_of_UART1_TX_ISR 5334           __end_of_USART_handler 425E  
               _USART1_SendByte 52A6                  __end_of___flge 4678                  __end_of___fleq 4C12  
                   vfpfcnvrt@ap 00D5                     vfpfcnvrt@ct 00E1                     vfpfcnvrt@fp 00D1  
                __end_of___wmul 5264                   __pidataCOMRAM 5334                  __end_of_efgtoa 2BEC  
                __end_of_floorf 3EDC                      floorf@F524 002D                  __end_of_memset 51C8  
                   _DEFAULT_ISR 533C                  __end_of_strcpy 4E70                  __end_of_strlen 5234  
           start_initialization 5040               ADC_ISR@adc_result 002B                     __end_of_pad 4994  
                    ?i2___flmul 0010           _USART1_ReceiveCommand 3EDC                      ivt0x8_base 0008  
                   _I2C_handler 508E           __end_of___fpclassifyf 45A6                     ??_ADC_Start 0001  
          USART1_Init@baud_rate 0062                __CFG_LPBOREN$OFF 000000                     vfprintf@fmt 00E7  
                      ??___flge 0081                        ??___fleq 0068                        ??___wmul 0064  
                      ??_efgtoa 0094                        ??_floorf 007D            _COMMAND_WRITE_NUMBER 0045  
        __size_of_GetStringSize 003E                        ?_ADC_ISR 0001                        ??_memset 0065  
               _AD5272_COMMANDS 0050                      memset@size 0063                        ??_strcpy 0064  
                      ??_strlen 0062                       ___fladd@a 0064                       ___fladd@b 0060  
                     ___fldiv@a 0064                       ___fldiv@b 0060                       ___flmul@a 0064  
                     ___flmul@b 0060                     __pbssCOMRAM 002D                       ___flsub@a 007D  
                     ___flsub@b 0079                   __pcstackBANK0 0060                   __pcstackBANK1 01A4  
             __size_of___xxtofl 0164       USART1_SendString@attempts 006A         __end_of_USART1_SendByte 52C0  
                 ?_I2C_Transmit 0060                     _efgtoa$1662 00A1                     _efgtoa$1656 009D  
                   _efgtoa$1657 009F                     _efgtoa$1666 00A3                     _efgtoa$1667 00A5  
                   _efgtoa$1668 00A7                        ?___fladd 0060                        ?___fldiv 0060  
                      ?___awdiv 0060                        ?___flneg 0060                        ?___awmod 0060  
                      ?___flmul 0060                        ?___flsub 0079                        ?___fltol 0060  
                      _I2C1ADB1 003D6E                        _I2C1CON0 003D73                        _I2C1CON1 003D74  
                      _I2C1CON2 003D75             main@receive_command 00FF               __size_of_vfprintf 006E  
        __CFG_BBSIZE$BBSIZE_512 000000                     __smallconst 2000                        _I2C_Init 4E70  
                      _ADC_Init 5264                        ?_isupper 0060          ?_USART1_ReceiveCommand 0001  
         __size_of_UART1_RX_ISR 0016           __size_of_UART1_TX_ISR 000C                        ?_sprintf 00ED  
                      ?_tolower 0066                     ??i2___flmul 0018                  __size_of_fputc 00B0  
                __size_of_fputs 0042                        ?_strncmp 0060                  __size_of_putch 0002  
                 _GetStringSize 511A                      _I2C1SDAPPS 003AE2                      _I2C1SCLPPS 003AE1  
                ___wmul@product 0064                        _LATAbits 003FBA                        _LATBbits 003FBB  
                ??_I2C_Transmit 0064                        _IPR1bits 003981                        _IPR2bits 003982  
                      _IPR3bits 003983                        _PIE1bits 003991                        _PIE2bits 003992  
                      _PIE3bits 003993             __CFG_BORV$VBOR_2P85 000000                        i2u313_40 5034  
                      i2u314_40 5036                   _I2C1STAT0bits 003D77                        _PIR1bits 0039A1  
                      i2u611_40 436E                        _PIR2bits 0039A2                        _PIR3bits 0039A3  
                      i2u622_40 302C                        i2u631_40 32E0                        i2u623_40 31E0  
                      i2u623_45 31D6                        i2u632_40 32FE                        i2u627_40 3274  
                 ??_timer0_init 0060                       _vfpfcnvrt 3352                       _rx_buffer 0100  
              __size_of_ADC_ISR 00F4                      _ADCON0bits 003EF8               ___wmul@multiplier 0060  
                  _UART1_RX_ISR 52C0                    _UART1_TX_ISR 5328                       _tx_buffer 0184  
                 ??_USART1_Init 0060                      _I2C_RX_ISR 52F0                      _I2C_TX_ISR 52D8  
                    vfpfcnvrt@c 00E4                      vfpfcnvrt@f 00DD                     _INTCON0bits 003FD2  
                ?_GetStringSize 0060                   I2C_Transmit@i 006B                ?_USART1_SendByte 0001  
             _measur_vol_or_cur 0052        __size_of_I2C_GENERAL_ISR 0010                        __Hparam0 0000  
                      __Lparam0 0000                      vfprintf@ap 00E9                      vfprintf@fp 00E5  
              __size_of___fladd 034A                __size_of___fldiv 02AE                __size_of___awdiv 008A  
              __size_of___flneg 0038                __size_of___awmod 0076                __size_of___flmul 03B4  
              __size_of___flsub 0060                __size_of___fltol 00CC                      ?_vfpfcnvrt 00D1  
                    _ANSELAbits 003A40                      _ANSELBbits 003A50                      _ANSELCbits 003A60  
            ___fpclassifyf@F463 0031             __end_of_timer0_init 52A6                    ?_DEFAULT_ISR 0001  
                    sprintf@fmt 00EF                        ___xxtofl 425E                      _T0CON0bits 003FB8  
                    _COMMAND_WR 004D                    _I2C1CON0bits 003D73                        __pivt0x8 0008  
                      __ptext10 4E06                        __ptext11 48DC                        __ptext20 36E8  
                      __ptext12 51FE                        __ptext21 5158                        __ptext13 50D8  
                      __ptext30 52A6                        __ptext22 2BEC                        __ptext14 4994  
                      __ptext31 508E                        __ptext23 45A6                        __ptext15 5338  
                      __ptext40 5306                        __ptext32 4AE6                        __ptext24 4B86  
                      __ptext16 3CE0                        __ptext41 5328                        __ptext33 511A  
                      __ptext25 3A32                        __ptext17 44B8                        __ptext42 52C0  
                      __ptext34 3EDC                        __ptext26 4D22                        __ptext18 4748  
                      __ptext43 43C4                        __ptext35 5234                        __ptext27 4C12  
                      __ptext19 4EDA                        __ptext44 2FA0                        __ptext36 4C9C  
                      __ptext28 5190                        __ptext45 425E                        __ptext37 4E70  
                      __ptext29 4A44                        __ptext46 52D8                        __ptext38 5264  
                      __ptext47 52F0                        __ptext39 4FEC                        __ptext48 5318  
                      __ptext49 533C                __size_of_isupper 0036                      _U1CON1bits 003DF3  
                  ?_I2C_handler 006C                __size_of_sprintf 005A                __size_of_tolower 0056  
                    strcpy@dest 0060                __size_of_strncmp 00D0             __end_of_USART1_Init 4D22  
                 __size_of_main 00C8            __CFG_WDTCWS$WDTCWS_7 000000                        efgtoa@fp 008D  
                      efgtoa@ne 00AF                        efgtoa@pp 00AB                        efgtoa@ou 0099  
           I2C_Transmit@address 0063                      _ODCONBbits 003A52                        _vfprintf 4D98  
                   _OSCSTATbits 0039DC            __end_of_I2C_Transmit 4B86                  _vfpfcnvrt$1685 00DB  
        __size_of_USART_handler 01B0                 ??_GetStringSize 0062                     ?_I2C_RX_ISR 0001  
                   ?_I2C_TX_ISR 0001                        memset@st 0060                        intlevel2 0000  
                     sprintf@ap 00F7               __CFG_CLKOUTEN$OFF 000000                     _SLRCONBbits 003A53  
                     strcpy@src 0062                     _PPSLOCKbits 003ABF                        isupper@c 0060  
                     strncmp@_l 0060                       strncmp@_r 0062               ??_I2C_GENERAL_ISR 0060  
                   efgtoa@nmode 00B7              I2C_Transmit@buffer 0060                     _timer0_init 5286  
                    _TIMER0_ISR 4FEC                     ??_vfpfcnvrt 00D7                        sprintf@f 00F9  
                      tolower@c 0066                        sprintf@s 00ED         ??_USART1_ReceiveCommand 0066  
        __size_of___fpclassifyf 00EE                        strncmp@l 0067                        strncmp@n 0064  
                      strncmp@r 0069                     _USART1_Init 4C9C                   ___fladd@signs 006C  
                  ___fladd@aexp 006D                    ___fladd@bexp 006E                   _USART_handler 40AE  
