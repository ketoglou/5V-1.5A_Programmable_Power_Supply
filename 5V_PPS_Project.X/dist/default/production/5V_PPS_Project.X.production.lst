

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 01:00:03 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=4,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=4,class=CODE,delta=1
    57                           	psect	text42,global,reloc=4,class=CODE,delta=1
    58                           	psect	text43,global,reloc=4,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text46,global,reloc=4,class=CODE,delta=1
    62                           	psect	text47,global,reloc=4,class=CODE,delta=1
    63                           	psect	text48,global,reloc=4,class=CODE,delta=1
    64                           	psect	text49,global,reloc=4,class=CODE,delta=1
    65                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    68  0000                     
    69                           ; Version 2.05
    70                           ; Generated 20/12/2018 GMT
    71                           ; 
    72                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F27K42 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataCOMRAM
   105  0052A0                     __pidataCOMRAM:
   106                           	opt callstack 0
   107                           
   108                           ;initializer for _AD5272_CURRENT_ADDRESS
   109  0052A0  58                 	db	88
   110                           
   111                           ;initializer for _AD5272_VOLTAGE_ADDRESS
   112  0052A1  5E                 	db	94
   113  0000                     _PIE2bits	set	14738
   114  0000                     _PIR2bits	set	14754
   115  0000                     _IPR2bits	set	14722
   116  0000                     _PIE1bits	set	14737
   117  0000                     _IPR1bits	set	14721
   118  0000                     _WDTCON0	set	14683
   119  0000                     _WDTCON1	set	14684
   120  0000                     _OSCSTATbits	set	14812
   121  0000                     _OSCEN	set	14813
   122  0000                     _OSCTUNE	set	14814
   123  0000                     _OSCFRQ	set	14815
   124  0000                     _PIR1bits	set	14753
   125  0000                     _PIR3bits	set	14755
   126  0000                     _PIR3	set	14755
   127  0000                     _IPR3bits	set	14723
   128  0000                     _PIE3bits	set	14739
   129  0000                     _RB0PPS	set	14856
   130  0000                     _RB1PPS	set	14857
   131  0000                     _I2C1SDAPPS	set	15074
   132  0000                     _I2C1SCLPPS	set	15073
   133  0000                     _SLRCONBbits	set	14931
   134  0000                     _RB1I2C	set	14938
   135  0000                     _ODCONBbits	set	14930
   136  0000                     _ANSELBbits	set	14928
   137  0000                     _ANSELAbits	set	14912
   138  0000                     _PPSLOCKbits	set	15039
   139  0000                     _RC7PPS	set	14871
   140  0000                     _U1RXPPS	set	15077
   141  0000                     _ANSELCbits	set	14944
   142  0000                     _I2C1ADB1	set	15726
   143  0000                     _I2C1CNT	set	15724
   144  0000                     _I2C1STAT0bits	set	15735
   145  0000                     _I2C1CON0bits	set	15731
   146  0000                     _I2C1PIEbits	set	15738
   147  0000                     _I2C1ERR	set	15734
   148  0000                     _I2C1CLK	set	15739
   149  0000                     _I2C1CON2	set	15733
   150  0000                     _I2C1CON1	set	15732
   151  0000                     _I2C1CON0	set	15731
   152  0000                     _I2C1PIR	set	15737
   153  0000                     _I2C1PIRbits	set	15737
   154  0000                     _I2C1RXB	set	15722
   155  0000                     _I2C1TXB	set	15723
   156  0000                     _U1RXB	set	15848
   157  0000                     _U1TXB	set	15850
   158  0000                     _U1CON1bits	set	15859
   159  0000                     _U1UIR	set	15864
   160  0000                     _U1ERRIE	set	15866
   161  0000                     _U2CON2	set	15836
   162  0000                     _U1CON1	set	15859
   163  0000                     _U1CON0	set	15858
   164  0000                     _U1BRGL	set	15861
   165  0000                     _U1BRGH	set	15862
   166  0000                     _ADPCH	set	16113
   167  0000                     _ADCON0bits	set	16120
   168  0000                     _ADREF	set	16125
   169  0000                     _ADCON2	set	16122
   170  0000                     _ADCON1	set	16121
   171  0000                     _ADCON0	set	16120
   172  0000                     _ADRESH	set	16112
   173  0000                     _ADRESL	set	16111
   174  0000                     _T0CON1	set	16313
   175  0000                     _T0CON0	set	16312
   176  0000                     _LATBbits	set	16315
   177  0000                     _TRISBbits	set	16323
   178  0000                     _TRISAbits	set	16322
   179  0000                     _INTCON0bits	set	16338
   180  0000                     _IVTLOCK	set	16340
   181  0000                     _TMR0H	set	16311
   182  0000                     _TMR0L	set	16310
   183  0000                     _LATAbits	set	16314
   184  0000                     _T0CON0bits	set	16312
   185  0000                     _TRISCbits	set	16324
   186                           
   187                           	psect	smallconst
   188  002000                     __psmallconst:
   189                           	opt callstack 0
   190  002000  00                 	db	0
   191  002001                     STR_3:
   192  002001  43                 	db	67	;'C'
   193  002002  6F                 	db	111	;'o'
   194  002003  6D                 	db	109	;'m'
   195  002004  6D                 	db	109	;'m'
   196  002005  61                 	db	97	;'a'
   197  002006  6E                 	db	110	;'n'
   198  002007  64                 	db	100	;'d'
   199  002008  20                 	db	32
   200  002009  6E                 	db	110	;'n'
   201  00200A  6F                 	db	111	;'o'
   202  00200B  74                 	db	116	;'t'
   203  00200C  20                 	db	32
   204  00200D  72                 	db	114	;'r'
   205  00200E  65                 	db	101	;'e'
   206  00200F  63                 	db	99	;'c'
   207  002010  6F                 	db	111	;'o'
   208  002011  67                 	db	103	;'g'
   209  002012  6E                 	db	110	;'n'
   210  002013  69                 	db	105	;'i'
   211  002014  7A                 	db	122	;'z'
   212  002015  65                 	db	101	;'e'
   213  002016  64                 	db	100	;'d'
   214  002017  21                 	db	33
   215  002018  00                 	db	0
   216  002019                     STR_5:
   217  002019  42                 	db	66	;'B'
   218  00201A  6C                 	db	108	;'l'
   219  00201B  69                 	db	105	;'i'
   220  00201C  6E                 	db	110	;'n'
   221  00201D  6B                 	db	107	;'k'
   222  00201E  69                 	db	105	;'i'
   223  00201F  6E                 	db	110	;'n'
   224  002020  67                 	db	103	;'g'
   225  002021  20                 	db	32
   226  002022  4C                 	db	76	;'L'
   227  002023  45                 	db	69	;'E'
   228  002024  44                 	db	68	;'D'
   229  002025  20                 	db	32
   230  002026  69                 	db	105	;'i'
   231  002027  73                 	db	115	;'s'
   232  002028  20                 	db	32
   233  002029  4F                 	db	79	;'O'
   234  00202A  46                 	db	70	;'F'
   235  00202B  46                 	db	70	;'F'
   236  00202C  21                 	db	33
   237  00202D  00                 	db	0
   238  00202E                     STR_7:
   239  00202E  43                 	db	67	;'C'
   240  00202F  75                 	db	117	;'u'
   241  002030  72                 	db	114	;'r'
   242  002031  72                 	db	114	;'r'
   243  002032  65                 	db	101	;'e'
   244  002033  6E                 	db	110	;'n'
   245  002034  74                 	db	116	;'t'
   246  002035  20                 	db	32
   247  002036  4C                 	db	76	;'L'
   248  002037  69                 	db	105	;'i'
   249  002038  6D                 	db	109	;'m'
   250  002039  69                 	db	105	;'i'
   251  00203A  74                 	db	116	;'t'
   252  00203B  20                 	db	32
   253  00203C  73                 	db	115	;'s'
   254  00203D  65                 	db	101	;'e'
   255  00203E  74                 	db	116	;'t'
   256  00203F  65                 	db	101	;'e'
   257  002040  64                 	db	100	;'d'
   258  002041  21                 	db	33
   259  002042  00                 	db	0
   260  002043                     STR_4:
   261  002043  42                 	db	66	;'B'
   262  002044  6C                 	db	108	;'l'
   263  002045  69                 	db	105	;'i'
   264  002046  6E                 	db	110	;'n'
   265  002047  6B                 	db	107	;'k'
   266  002048  69                 	db	105	;'i'
   267  002049  6E                 	db	110	;'n'
   268  00204A  67                 	db	103	;'g'
   269  00204B  20                 	db	32
   270  00204C  4C                 	db	76	;'L'
   271  00204D  45                 	db	69	;'E'
   272  00204E  44                 	db	68	;'D'
   273  00204F  20                 	db	32
   274  002050  69                 	db	105	;'i'
   275  002051  73                 	db	115	;'s'
   276  002052  20                 	db	32
   277  002053  4F                 	db	79	;'O'
   278  002054  4E                 	db	78	;'N'
   279  002055  21                 	db	33
   280  002056  00                 	db	0
   281  002057                     STR_6:
   282  002057  56                 	db	86	;'V'
   283  002058  6F                 	db	111	;'o'
   284  002059  6C                 	db	108	;'l'
   285  00205A  74                 	db	116	;'t'
   286  00205B  61                 	db	97	;'a'
   287  00205C  67                 	db	103	;'g'
   288  00205D  65                 	db	101	;'e'
   289  00205E  20                 	db	32
   290  00205F  73                 	db	115	;'s'
   291  002060  65                 	db	101	;'e'
   292  002061  74                 	db	116	;'t'
   293  002062  65                 	db	101	;'e'
   294  002063  64                 	db	100	;'d'
   295  002064  21                 	db	33
   296  002065  00                 	db	0
   297  002066                     STR_2:
   298  002066  43                 	db	67	;'C'
   299  002067  75                 	db	117	;'u'
   300  002068  72                 	db	114	;'r'
   301  002069  72                 	db	114	;'r'
   302  00206A  65                 	db	101	;'e'
   303  00206B  6E                 	db	110	;'n'
   304  00206C  74                 	db	116	;'t'
   305  00206D  3A                 	db	58	;':'
   306  00206E  25                 	db	37
   307  00206F  66                 	db	102	;'f'
   308  002070  20                 	db	32
   309  002071  41                 	db	65	;'A'
   310  002072  00                 	db	0
   311  002073                     STR_1:
   312  002073  56                 	db	86	;'V'
   313  002074  6F                 	db	111	;'o'
   314  002075  6C                 	db	108	;'l'
   315  002076  74                 	db	116	;'t'
   316  002077  61                 	db	97	;'a'
   317  002078  67                 	db	103	;'g'
   318  002079  65                 	db	101	;'e'
   319  00207A  3A                 	db	58	;':'
   320  00207B  25                 	db	37
   321  00207C  66                 	db	102	;'f'
   322  00207D  20                 	db	32
   323  00207E  56                 	db	86	;'V'
   324  00207F  00                 	db	0
   325  002080                     STR_9:
   326  002080  49                 	db	73	;'I'
   327  002081  4E                 	db	78	;'N'
   328  002082  46                 	db	70	;'F'
   329  002083  00                 	db	0
   330  002084                     STR_13:
   331  002084  4E                 	db	78	;'N'
   332  002085  41                 	db	65	;'A'
   333  002086  4E                 	db	78	;'N'
   334  002087  00                 	db	0
   335  002088                     STR_10:
   336  002088  69                 	db	105	;'i'
   337  002089  6E                 	db	110	;'n'
   338  00208A  66                 	db	102	;'f'
   339  00208B  00                 	db	0
   340  00208C                     STR_14:
   341  00208C  6E                 	db	110	;'n'
   342  00208D  61                 	db	97	;'a'
   343  00208E  6E                 	db	110	;'n'
   344  00208F  00                 	db	0
   345  002090                     STR_17:
   346  002090  6C                 	db	108	;'l'
   347  002091  66                 	db	102	;'f'
   348  002092  00                 	db	0
   349  0000                     
   350                           ; #config settings
   351  002093  00                 	db	0	; dummy byte at the end
   352  0000                     
   353                           	psect	cinit
   354  004F68                     __pcinit:
   355                           	opt callstack 0
   356  004F68                     start_initialization:
   357                           	opt callstack 0
   358  004F68                     __initialization:
   359                           	opt callstack 0
   360                           
   361                           ; Initialize objects allocated to COMRAM (2 bytes)
   362                           ; load TBLPTR registers with __pidataCOMRAM
   363  004F68  0EA0               	movlw	low __pidataCOMRAM
   364  004F6A  6EF6               	movwf	tblptrl,c
   365  004F6C  0E52               	movlw	high __pidataCOMRAM
   366  004F6E  6EF7               	movwf	tblptrh,c
   367  004F70  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   368  004F72  6EF8               	movwf	tblptru,c
   369  004F74  0009               	tblrd		*+	;fetch initializer
   370  004F76  006F FFD4  F056    	movff	tablat,__pdataCOMRAM
   371  004F7C  0009               	tblrd		*+	;fetch initializer
   372  004F7E  006F FFD4  F057    	movff	tablat,__pdataCOMRAM+1
   373                           
   374                           ; Clear objects allocated to BANK1 (154 bytes)
   375  004F84  EE00  F100         	lfsr	0,__pbssBANK1
   376  004F88  0E9A               	movlw	154
   377  004F8A                     clear_0:
   378  004F8A  6AEE               	clrf	postinc0,c
   379  004F8C  06E8               	decf	wreg,f,c
   380  004F8E  E1FD               	bnz	clear_0
   381                           
   382                           ; Clear objects allocated to BANK0 (2 bytes)
   383  004F90  0100               	movlb	0
   384  004F92  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   385  004F94  6BF8               	clrf	__pbssBANK0& (0+255),b
   386                           
   387                           ; Clear objects allocated to COMRAM (41 bytes)
   388  004F96  EE00  F02D         	lfsr	0,__pbssCOMRAM
   389  004F9A  0E29               	movlw	41
   390  004F9C                     clear_1:
   391  004F9C  6AEE               	clrf	postinc0,c
   392  004F9E  06E8               	decf	wreg,f,c
   393  004FA0  E1FD               	bnz	clear_1
   394                           
   395                           ;
   396                           ; Setup IVTBASE
   397                           ;
   398  004FA2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   399  004FA4  6ED5               	movwf	213,c
   400  004FA6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   401  004FA8  6ED6               	movwf	214,c
   402  004FAA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   403  004FAC  6ED7               	movwf	215,c
   404  004FAE                     end_of_initialization:
   405                           	opt callstack 0
   406  004FAE                     __end_of__initialization:
   407                           	opt callstack 0
   408  004FAE  0100               	movlb	0
   409  004FB0  EFE7  F023         	goto	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMRAM
   412  00002D                     __pbssCOMRAM:
   413                           	opt callstack 0
   414  00002D                     _I2C_TX_BUFFER:
   415                           	opt callstack 0
   416  00002D                     	ds	10
   417  000037                     floorf@F524:
   418                           	opt callstack 0
   419  000037                     	ds	4
   420  00003B                     ___fpclassifyf@F463:
   421                           	opt callstack 0
   422  00003B                     	ds	4
   423  00003F                     _ADC_VOLTAGE_RESULT:
   424                           	opt callstack 0
   425  00003F                     	ds	4
   426  000043                     _nout:
   427                           	opt callstack 0
   428  000043                     	ds	2
   429  000045                     _width:
   430                           	opt callstack 0
   431  000045                     	ds	2
   432  000047                     _prec:
   433                           	opt callstack 0
   434  000047                     	ds	2
   435  000049                     _flags:
   436                           	opt callstack 0
   437  000049                     	ds	2
   438  00004B                     _COMMAND_WRITE_NUMBER:
   439                           	opt callstack 0
   440  00004B                     	ds	2
   441  00004D                     _counter_timer0:
   442                           	opt callstack 0
   443  00004D                     	ds	1
   444  00004E                     _I2C_RX_COUNTER:
   445                           	opt callstack 0
   446  00004E                     	ds	1
   447  00004F                     _I2C_TX_COUNTER:
   448                           	opt callstack 0
   449  00004F                     	ds	1
   450  000050                     _COMMAND:
   451                           	opt callstack 0
   452  000050                     	ds	1
   453  000051                     _COMMAND_WR:
   454                           	opt callstack 0
   455  000051                     	ds	1
   456  000052                     _tx_byte:
   457                           	opt callstack 0
   458  000052                     	ds	1
   459  000053                     _rx_counter:
   460                           	opt callstack 0
   461  000053                     	ds	1
   462  000054                     _AD5272_COMMANDS:
   463                           	opt callstack 0
   464  000054                     	ds	2
   465                           
   466                           	psect	dataCOMRAM
   467  000056                     __pdataCOMRAM:
   468                           	opt callstack 0
   469  000056                     _AD5272_CURRENT_ADDRESS:
   470                           	opt callstack 0
   471  000056                     	ds	1
   472  000057                     _AD5272_VOLTAGE_ADDRESS:
   473                           	opt callstack 0
   474  000057                     	ds	1
   475                           
   476                           	psect	bssBANK0
   477  0000F8                     __pbssBANK0:
   478                           	opt callstack 0
   479  0000F8                     _led_enable:
   480                           	opt callstack 0
   481  0000F8                     	ds	1
   482  0000F9                     _I2C_STOP_DETECTED:
   483                           	opt callstack 0
   484  0000F9                     	ds	1
   485                           
   486                           	psect	bssBANK1
   487  000100                     __pbssBANK1:
   488                           	opt callstack 0
   489  000100                     _rx_buffer:
   490                           	opt callstack 0
   491  000100                     	ds	32
   492  000120                     _I2C_RX_BUFFER:
   493                           	opt callstack 0
   494  000120                     	ds	10
   495  00012A                     _dbuf:
   496                           	opt callstack 0
   497  00012A                     	ds	80
   498  00017A                     _tx_buffer:
   499                           	opt callstack 0
   500  00017A                     	ds	32
   501                           
   502                           	psect	cstackBANK1
   503  00019A                     __pcstackBANK1:
   504                           	opt callstack 0
   505  00019A                     	ds	2
   506  00019C                     sprintf@ap:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x2
   510  00019C                     	ds	2
   511  00019E                     sprintf@f:
   512                           	opt callstack 0
   513                           
   514                           ; 6 bytes @ 0x4
   515  00019E                     	ds	6
   516                           
   517                           	psect	cstackBANK0
   518  000060                     __pcstackBANK0:
   519                           	opt callstack 0
   520  000060                     ??_USART1_Init:
   521  000060                     ?_GetStringSize:
   522                           	opt callstack 0
   523  000060                     ?_strlen:
   524                           	opt callstack 0
   525  000060                     ?___fpclassifyf:
   526                           	opt callstack 0
   527  000060                     ?_isupper:
   528                           	opt callstack 0
   529  000060                     ?_strncmp:
   530                           	opt callstack 0
   531  000060                     ?___wmul:
   532                           	opt callstack 0
   533  000060                     ?___awdiv:
   534                           	opt callstack 0
   535  000060                     ?___awmod:
   536                           	opt callstack 0
   537  000060                     ?___fladd:
   538                           	opt callstack 0
   539  000060                     ?___fldiv:
   540                           	opt callstack 0
   541  000060                     ?___flmul:
   542                           	opt callstack 0
   543  000060                     ?___flneg:
   544                           	opt callstack 0
   545  000060                     ?___fltol:
   546                           	opt callstack 0
   547  000060                     USART1_SendByte@byte:
   548                           	opt callstack 0
   549  000060                     memset@st:
   550                           	opt callstack 0
   551  000060                     I2C_Transmit@buffer:
   552                           	opt callstack 0
   553  000060                     ___wmul@multiplier:
   554                           	opt callstack 0
   555  000060                     ___awdiv@dividend:
   556                           	opt callstack 0
   557  000060                     ___awmod@dividend:
   558                           	opt callstack 0
   559  000060                     isupper@c:
   560                           	opt callstack 0
   561  000060                     fputc@c:
   562                           	opt callstack 0
   563  000060                     strcpy@dest:
   564                           	opt callstack 0
   565  000060                     strlen@s:
   566                           	opt callstack 0
   567  000060                     strncmp@_l:
   568                           	opt callstack 0
   569  000060                     ___fleq@ff1:
   570                           	opt callstack 0
   571  000060                     ___flneg@f1:
   572                           	opt callstack 0
   573  000060                     ___fltol@f1:
   574                           	opt callstack 0
   575  000060                     ___fladd@b:
   576                           	opt callstack 0
   577  000060                     ___fldiv@b:
   578                           	opt callstack 0
   579  000060                     ___flmul@b:
   580                           	opt callstack 0
   581  000060                     ___fpclassifyf@x:
   582                           	opt callstack 0
   583                           
   584                           ; 4 bytes @ 0x0
   585  000060                     	ds	2
   586  000062                     ??_isupper:
   587  000062                     USART1_Init@baud_rate:
   588                           	opt callstack 0
   589  000062                     memset@x:
   590                           	opt callstack 0
   591  000062                     I2C_Transmit@buffer_size:
   592                           	opt callstack 0
   593  000062                     GetStringSize@i:
   594                           	opt callstack 0
   595  000062                     ___wmul@multiplicand:
   596                           	opt callstack 0
   597  000062                     ___awdiv@divisor:
   598                           	opt callstack 0
   599  000062                     ___awmod@divisor:
   600                           	opt callstack 0
   601  000062                     fputc@fp:
   602                           	opt callstack 0
   603  000062                     strcpy@src:
   604                           	opt callstack 0
   605  000062                     strlen@a:
   606                           	opt callstack 0
   607  000062                     strncmp@_r:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x2
   611  000062                     	ds	1
   612  000063                     I2C_Transmit@address:
   613                           	opt callstack 0
   614  000063                     memset@size:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x3
   618  000063                     	ds	1
   619  000064                     ??_I2C_Transmit:
   620  000064                     ??_fputc:
   621  000064                     ??___fpclassifyf:
   622  000064                     ??_strcpy:
   623  000064                     ??___fltol:
   624  000064                     ___awdiv@counter:
   625                           	opt callstack 0
   626  000064                     ___awmod@counter:
   627                           	opt callstack 0
   628  000064                     USART1_SendString@str:
   629                           	opt callstack 0
   630  000064                     ___wmul@product:
   631                           	opt callstack 0
   632  000064                     strncmp@n:
   633                           	opt callstack 0
   634  000064                     ___fleq@ff2:
   635                           	opt callstack 0
   636  000064                     ___fladd@a:
   637                           	opt callstack 0
   638  000064                     ___fldiv@a:
   639                           	opt callstack 0
   640  000064                     ___flmul@a:
   641                           	opt callstack 0
   642                           
   643                           ; 4 bytes @ 0x4
   644  000064                     	ds	1
   645  000065                     ??_memset:
   646  000065                     ___awdiv@sign:
   647                           	opt callstack 0
   648  000065                     ___awmod@sign:
   649                           	opt callstack 0
   650                           
   651                           ; 1 bytes @ 0x5
   652  000065                     	ds	1
   653  000066                     ??_strncmp:
   654  000066                     ??_USART1_ReceiveCommand:
   655  000066                     ?_tolower:
   656                           	opt callstack 0
   657  000066                     USART1_SendString@size:
   658                           	opt callstack 0
   659  000066                     memset@i:
   660                           	opt callstack 0
   661  000066                     ___awdiv@quotient:
   662                           	opt callstack 0
   663  000066                     strcpy@s:
   664                           	opt callstack 0
   665  000066                     tolower@c:
   666                           	opt callstack 0
   667                           
   668                           ; 2 bytes @ 0x6
   669  000066                     	ds	1
   670  000067                     strncmp@l:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x7
   674  000067                     	ds	1
   675  000068                     ??_tolower:
   676  000068                     ??___fladd:
   677  000068                     ??___fldiv:
   678  000068                     ??___flmul:
   679  000068                     ??___fleq:
   680  000068                     ___fltol@sign1:
   681                           	opt callstack 0
   682  000068                     USART1_SendString@i:
   683                           	opt callstack 0
   684  000068                     ___fpclassifyf@e:
   685                           	opt callstack 0
   686  000068                     strcpy@d:
   687                           	opt callstack 0
   688                           
   689                           ; 2 bytes @ 0x8
   690  000068                     	ds	1
   691  000069                     ___fltol@exp1:
   692                           	opt callstack 0
   693  000069                     fputs@s:
   694                           	opt callstack 0
   695  000069                     strncmp@r:
   696                           	opt callstack 0
   697                           
   698                           ; 2 bytes @ 0x9
   699  000069                     	ds	1
   700  00006A                     USART1_SendString@attempts:
   701                           	opt callstack 0
   702  00006A                     ___fpclassifyf@u:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0xA
   706  00006A                     	ds	1
   707  00006B                     I2C_Transmit@i:
   708                           	opt callstack 0
   709  00006B                     fputs@fp:
   710                           	opt callstack 0
   711                           
   712                           ; 2 bytes @ 0xB
   713  00006B                     	ds	1
   714  00006C                     ___fladd@signs:
   715                           	opt callstack 0
   716  00006C                     ___flmul@sign:
   717                           	opt callstack 0
   718  00006C                     I2C_handler@value:
   719                           	opt callstack 0
   720  00006C                     _tolower$2232:
   721                           	opt callstack 0
   722  00006C                     ___fldiv@rem:
   723                           	opt callstack 0
   724                           
   725                           ; 4 bytes @ 0xC
   726  00006C                     	ds	1
   727  00006D                     ___fladd@aexp:
   728                           	opt callstack 0
   729  00006D                     ___flmul@aexp:
   730                           	opt callstack 0
   731  00006D                     fputs@c:
   732                           	opt callstack 0
   733                           
   734                           ; 1 bytes @ 0xD
   735  00006D                     	ds	1
   736  00006E                     I2C_handler@ad5272_select:
   737                           	opt callstack 0
   738  00006E                     ___fladd@bexp:
   739                           	opt callstack 0
   740  00006E                     fputs@i:
   741                           	opt callstack 0
   742  00006E                     ___flmul@grs:
   743                           	opt callstack 0
   744                           
   745                           ; 4 bytes @ 0xE
   746  00006E                     	ds	1
   747  00006F                     ___fladd@grs:
   748                           	opt callstack 0
   749                           
   750                           ; 1 bytes @ 0xF
   751  00006F                     	ds	1
   752  000070                     ?_pad:
   753                           	opt callstack 0
   754  000070                     ___fldiv@sign:
   755                           	opt callstack 0
   756  000070                     pad@fp:
   757                           	opt callstack 0
   758                           
   759                           ; 2 bytes @ 0x10
   760  000070                     	ds	1
   761  000071                     ___fldiv@new_exp:
   762                           	opt callstack 0
   763                           
   764                           ; 2 bytes @ 0x11
   765  000071                     	ds	1
   766  000072                     ___flmul@bexp:
   767                           	opt callstack 0
   768  000072                     pad@buf:
   769                           	opt callstack 0
   770                           
   771                           ; 2 bytes @ 0x12
   772  000072                     	ds	1
   773  000073                     ___fldiv@grs:
   774                           	opt callstack 0
   775  000073                     ___flmul@prod:
   776                           	opt callstack 0
   777                           
   778                           ; 4 bytes @ 0x13
   779  000073                     	ds	1
   780  000074                     pad@p:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x14
   784  000074                     	ds	2
   785  000076                     ??_pad:
   786                           
   787                           ; 1 bytes @ 0x16
   788  000076                     	ds	1
   789  000077                     ___fldiv@bexp:
   790                           	opt callstack 0
   791  000077                     pad@i:
   792                           	opt callstack 0
   793  000077                     ___flmul@temp:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0x17
   797  000077                     	ds	1
   798  000078                     ___fldiv@aexp:
   799                           	opt callstack 0
   800                           
   801                           ; 1 bytes @ 0x18
   802  000078                     	ds	1
   803  000079                     ?_floorf:
   804                           	opt callstack 0
   805  000079                     ?___flsub:
   806                           	opt callstack 0
   807  000079                     pad@w:
   808                           	opt callstack 0
   809  000079                     ___flge@ff1:
   810                           	opt callstack 0
   811  000079                     ___flsub@b:
   812                           	opt callstack 0
   813  000079                     floorf@x:
   814                           	opt callstack 0
   815                           
   816                           ; 4 bytes @ 0x19
   817  000079                     	ds	4
   818  00007D                     ??_floorf:
   819  00007D                     ___flge@ff2:
   820                           	opt callstack 0
   821  00007D                     ___flsub@a:
   822                           	opt callstack 0
   823                           
   824                           ; 4 bytes @ 0x1D
   825  00007D                     	ds	4
   826  000081                     ??___flge:
   827                           
   828                           ; 1 bytes @ 0x21
   829  000081                     	ds	2
   830  000083                     floorf@m:
   831                           	opt callstack 0
   832                           
   833                           ; 4 bytes @ 0x23
   834  000083                     	ds	4
   835  000087                     floorf@e:
   836                           	opt callstack 0
   837                           
   838                           ; 2 bytes @ 0x27
   839  000087                     	ds	2
   840  000089                     floorf@u:
   841                           	opt callstack 0
   842                           
   843                           ; 4 bytes @ 0x29
   844  000089                     	ds	4
   845  00008D                     ?_efgtoa:
   846                           	opt callstack 0
   847  00008D                     efgtoa@fp:
   848                           	opt callstack 0
   849                           
   850                           ; 2 bytes @ 0x2D
   851  00008D                     	ds	2
   852  00008F                     efgtoa@f:
   853                           	opt callstack 0
   854                           
   855                           ; 4 bytes @ 0x2F
   856  00008F                     	ds	4
   857  000093                     efgtoa@c:
   858                           	opt callstack 0
   859                           
   860                           ; 1 bytes @ 0x33
   861  000093                     	ds	1
   862  000094                     ??_efgtoa:
   863                           
   864                           ; 1 bytes @ 0x34
   865  000094                     	ds	5
   866  000099                     efgtoa@ou:
   867                           	opt callstack 0
   868                           
   869                           ; 4 bytes @ 0x39
   870  000099                     	ds	4
   871  00009D                     _efgtoa$1648:
   872                           	opt callstack 0
   873                           
   874                           ; 2 bytes @ 0x3D
   875  00009D                     	ds	2
   876  00009F                     _efgtoa$1649:
   877                           	opt callstack 0
   878                           
   879                           ; 2 bytes @ 0x3F
   880  00009F                     	ds	2
   881  0000A1                     _efgtoa$1654:
   882                           	opt callstack 0
   883                           
   884                           ; 2 bytes @ 0x41
   885  0000A1                     	ds	2
   886  0000A3                     _efgtoa$1658:
   887                           	opt callstack 0
   888                           
   889                           ; 2 bytes @ 0x43
   890  0000A3                     	ds	2
   891  0000A5                     _efgtoa$1659:
   892                           	opt callstack 0
   893                           
   894                           ; 2 bytes @ 0x45
   895  0000A5                     	ds	2
   896  0000A7                     _efgtoa$1660:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0x47
   900  0000A7                     	ds	2
   901  0000A9                     efgtoa@t:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x49
   905  0000A9                     	ds	2
   906  0000AB                     efgtoa@pp:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x4B
   910  0000AB                     	ds	2
   911  0000AD                     efgtoa@m:
   912                           	opt callstack 0
   913                           
   914                           ; 2 bytes @ 0x4D
   915  0000AD                     	ds	2
   916  0000AF                     efgtoa@ne:
   917                           	opt callstack 0
   918                           
   919                           ; 2 bytes @ 0x4F
   920  0000AF                     	ds	2
   921  0000B1                     efgtoa@d:
   922                           	opt callstack 0
   923                           
   924                           ; 2 bytes @ 0x51
   925  0000B1                     	ds	2
   926  0000B3                     efgtoa@sign:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0x53
   930  0000B3                     	ds	2
   931  0000B5                     efgtoa@p:
   932                           	opt callstack 0
   933                           
   934                           ; 2 bytes @ 0x55
   935  0000B5                     	ds	2
   936  0000B7                     efgtoa@nmode:
   937                           	opt callstack 0
   938                           
   939                           ; 1 bytes @ 0x57
   940  0000B7                     	ds	1
   941  0000B8                     efgtoa@w:
   942                           	opt callstack 0
   943                           
   944                           ; 2 bytes @ 0x58
   945  0000B8                     	ds	2
   946  0000BA                     efgtoa@mode:
   947                           	opt callstack 0
   948                           
   949                           ; 1 bytes @ 0x5A
   950  0000BA                     	ds	1
   951  0000BB                     efgtoa@h:
   952                           	opt callstack 0
   953                           
   954                           ; 4 bytes @ 0x5B
   955  0000BB                     	ds	4
   956  0000BF                     efgtoa@l:
   957                           	opt callstack 0
   958                           
   959                           ; 4 bytes @ 0x5F
   960  0000BF                     	ds	4
   961  0000C3                     efgtoa@i:
   962                           	opt callstack 0
   963                           
   964                           ; 2 bytes @ 0x63
   965  0000C3                     	ds	2
   966  0000C5                     efgtoa@g:
   967                           	opt callstack 0
   968                           
   969                           ; 4 bytes @ 0x65
   970  0000C5                     	ds	4
   971  0000C9                     efgtoa@e:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x69
   975  0000C9                     	ds	2
   976  0000CB                     efgtoa@n:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x6B
   980  0000CB                     	ds	2
   981  0000CD                     efgtoa@u:
   982                           	opt callstack 0
   983                           
   984                           ; 4 bytes @ 0x6D
   985  0000CD                     	ds	4
   986  0000D1                     ?_vfpfcnvrt:
   987                           	opt callstack 0
   988  0000D1                     vfpfcnvrt@fp:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x71
   992  0000D1                     	ds	2
   993  0000D3                     vfpfcnvrt@fmt:
   994                           	opt callstack 0
   995                           
   996                           ; 2 bytes @ 0x73
   997  0000D3                     	ds	2
   998  0000D5                     vfpfcnvrt@ap:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x75
  1002  0000D5                     	ds	2
  1003  0000D7                     ??_vfpfcnvrt:
  1004                           
  1005                           ; 1 bytes @ 0x77
  1006  0000D7                     	ds	4
  1007  0000DB                     _vfpfcnvrt$1677:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x7B
  1011  0000DB                     	ds	2
  1012  0000DD                     vfpfcnvrt@f:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x7D
  1016  0000DD                     	ds	4
  1017  0000E1                     vfpfcnvrt@ct:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 3 bytes @ 0x81
  1021  0000E1                     	ds	3
  1022  0000E4                     vfpfcnvrt@c:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x84
  1026  0000E4                     	ds	1
  1027  0000E5                     ?_vfprintf:
  1028                           	opt callstack 0
  1029  0000E5                     vfprintf@fp:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x85
  1033  0000E5                     	ds	2
  1034  0000E7                     vfprintf@fmt:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x87
  1038  0000E7                     	ds	2
  1039  0000E9                     vfprintf@ap:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x89
  1043  0000E9                     	ds	2
  1044  0000EB                     vfprintf@cfmt:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x8B
  1048  0000EB                     	ds	2
  1049  0000ED                     ?_sprintf:
  1050                           	opt callstack 0
  1051  0000ED                     sprintf@s:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x8D
  1055  0000ED                     	ds	2
  1056  0000EF                     sprintf@fmt:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x8F
  1060  0000EF                     	ds	6
  1061  0000F5                     ??_USART_handler:
  1062  0000F5                     
  1063                           ; 1 bytes @ 0x95
  1064  0000F5                     	ds	2
  1065  0000F7                     main@receive_command:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x97
  1069  0000F7                     	ds	1
  1070                           
  1071                           	psect	cstackCOMRAM
  1072  000001                     __pcstackCOMRAM:
  1073                           	opt callstack 0
  1074  000001                     ADC_Start@pin:
  1075                           	opt callstack 0
  1076  000001                     
  1077                           ; 1 bytes @ 0x0
  1078  000001                     	ds	1
  1079  000002                     ?___xxtofl:
  1080                           	opt callstack 0
  1081  000002                     ___xxtofl@val:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x1
  1085  000002                     	ds	4
  1086  000006                     ??___xxtofl:
  1087                           
  1088                           ; 1 bytes @ 0x5
  1089  000006                     	ds	4
  1090  00000A                     ___xxtofl@sign:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x9
  1094  00000A                     	ds	1
  1095  00000B                     ___xxtofl@exp:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 1 bytes @ 0xA
  1099  00000B                     	ds	1
  1100  00000C                     ___xxtofl@arg:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 4 bytes @ 0xB
  1104  00000C                     	ds	4
  1105  000010                     ?i2___flmul:
  1106                           	opt callstack 0
  1107  000010                     i2___flmul@b:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 4 bytes @ 0xF
  1111  000010                     	ds	4
  1112  000014                     i2___flmul@a:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x13
  1116  000014                     	ds	4
  1117  000018                     ??i2___flmul:
  1118                           
  1119                           ; 1 bytes @ 0x17
  1120  000018                     	ds	4
  1121  00001C                     i2___flmul@sign:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x1B
  1125  00001C                     	ds	1
  1126  00001D                     i2___flmul@grs:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x1C
  1130  00001D                     	ds	4
  1131  000021                     i2___flmul@aexp:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x20
  1135  000021                     	ds	1
  1136  000022                     i2___flmul@bexp:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x21
  1140  000022                     	ds	1
  1141  000023                     i2___flmul@prod:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x22
  1145  000023                     	ds	4
  1146  000027                     i2___flmul@temp:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x26
  1150  000027                     	ds	2
  1151  000029                     ??_ADC_ISR:
  1152                           
  1153                           ; 1 bytes @ 0x28
  1154  000029                     	ds	2
  1155  00002B                     ADC_ISR@adc_result:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x2A
  1159  00002B                     	ds	2
  1160                           
  1161 ;;
  1162 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1163 ;;
  1164 ;; *************** function _main *****************
  1165 ;; Defined at:
  1166 ;;		line 119 in file "main.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  receive_comm    1  151[BANK0 ] unsigned char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1183 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1184 ;;Total ram usage:        1 bytes
  1185 ;; Hardware stack levels required when called:   11
  1186 ;; This function calls:
  1187 ;;		_ADC_Init
  1188 ;;		_I2C_Init
  1189 ;;		_I2C_Transmit
  1190 ;;		_USART1_Init
  1191 ;;		_USART1_ReceiveCommand
  1192 ;;		_USART_handler
  1193 ;;		_timer0_init
  1194 ;; This function is called by:
  1195 ;;		Startup code after reset
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text0
  1200  0047CE                     __ptext0:
  1201                           	opt callstack 0
  1202  0047CE                     _main:
  1203                           	opt callstack 20
  1204                           
  1205                           ;main.c: 120:     OSCFRQ = 0x08;
  1206                           
  1207                           ;incstack = 0
  1208  0047CE  0E08               	movlw	8
  1209  0047D0  0139               	movlb	57	; () banked
  1210  0047D2  6FDF               	movwf	223,b	;volatile
  1211                           
  1212                           ;main.c: 121:     OSCTUNE = 0x00;
  1213  0047D4  0E00               	movlw	0
  1214  0047D6  6FDE               	movwf	222,b	;volatile
  1215                           
  1216                           ;main.c: 122:     OSCEN = 0x40;
  1217  0047D8  0E40               	movlw	64
  1218  0047DA  6FDD               	movwf	221,b	;volatile
  1219  0047DC                     l310:
  1220                           
  1221                           ; BSR set to: 57
  1222  0047DC  BDDC               	btfsc	220,6,b	;volatile
  1223  0047DE  D002               	goto	u9210
  1224                           
  1225                           ; BSR set to: 57
  1226  0047E0  A5DC               	btfss	220,2,b	;volatile
  1227  0047E2  D7FC               	goto	l310
  1228  0047E4                     u9210:
  1229                           
  1230                           ; BSR set to: 57
  1231                           ;main.c: 129:     IVTLOCK = 0x01;
  1232  0047E4  0E01               	movlw	1
  1233  0047E6  6ED4               	movwf	16340,c	;volatile
  1234                           
  1235                           ;main.c: 132:     WDTCON1 = 0x07;
  1236  0047E8  0E07               	movlw	7
  1237  0047EA  6F5C               	movwf	92,b	;volatile
  1238                           
  1239                           ;main.c: 133:     WDTCON0 = 0x3F;
  1240  0047EC  0E3F               	movlw	63
  1241  0047EE  6F5B               	movwf	91,b	;volatile
  1242                           
  1243                           ; BSR set to: 57
  1244                           ;main.c: 136:     PPSLOCKbits.PPSLOCKED = 0;
  1245  0047F0  013A               	movlb	58	; () banked
  1246  0047F2  91BF               	bcf	191,0,b	;volsfr
  1247                           
  1248                           ; BSR set to: 58
  1249                           ;main.c: 139:     timer0_init();
  1250  0047F4  ECF4  F028         	call	_timer0_init	;wreg free
  1251                           
  1252                           ;main.c: 140:     USART1_Init(1);
  1253  0047F8  0E01               	movlw	1
  1254  0047FA  ECC6  F025         	call	_USART1_Init
  1255                           
  1256                           ;main.c: 141:     ADC_Init();
  1257  0047FE  ECE3  F028         	call	_ADC_Init	;wreg free
  1258                           
  1259                           ;main.c: 142:     I2C_Init();
  1260  004802  ECBD  F026         	call	_I2C_Init	;wreg free
  1261                           
  1262                           ;main.c: 144:     INTCON0bits.GIEH = 1;
  1263  004806  8ED2               	bsf	16338,7,c	;volatile
  1264                           
  1265                           ;main.c: 145:     INTCON0bits.GIEL = 1;
  1266  004808  8CD2               	bsf	16338,6,c	;volatile
  1267                           
  1268                           ;main.c: 146:     INTCON0bits.IPEN = 1;
  1269  00480A  8AD2               	bsf	16338,5,c	;volatile
  1270                           
  1271                           ;main.c: 149:     AD5272_COMMANDS[0] = 0x1C;
  1272  00480C  0E1C               	movlw	28
  1273  00480E  6E54               	movwf	_AD5272_COMMANDS,c
  1274                           
  1275                           ;main.c: 150:     AD5272_COMMANDS[1] = 0x02;
  1276  004810  0E02               	movlw	2
  1277  004812  6E55               	movwf	_AD5272_COMMANDS+1,c
  1278  004814  0E54               	movlw	low _AD5272_COMMANDS
  1279  004816  0100               	movlb	0	; () banked
  1280  004818  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  1281  00481A  0E00               	movlw	high _AD5272_COMMANDS
  1282  00481C  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  1283  00481E  0E02               	movlw	2
  1284  004820  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  1285  004822  0E5E               	movlw	94
  1286  004824  6F63               	movwf	I2C_Transmit@address& (0+255),b
  1287  004826  ECEA  F024         	call	_I2C_Transmit	;wreg free
  1288  00482A                     l6862:
  1289  00482A  0100               	movlb	0	; () banked
  1290  00482C  51F9               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  1291  00482E  B4D8               	btfsc	status,2,c
  1292  004830  D7FC               	goto	l6862
  1293                           
  1294                           ; BSR set to: 0
  1295  004832  0E54               	movlw	low _AD5272_COMMANDS
  1296  004834  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  1297  004836  0E00               	movlw	high _AD5272_COMMANDS
  1298  004838  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  1299  00483A  0E02               	movlw	2
  1300  00483C  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  1301  00483E  0E58               	movlw	88
  1302  004840  6F63               	movwf	I2C_Transmit@address& (0+255),b
  1303  004842  ECEA  F024         	call	_I2C_Transmit	;wreg free
  1304  004846                     l6866:
  1305  004846  0100               	movlb	0	; () banked
  1306  004848  51F9               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  1307  00484A  B4D8               	btfsc	status,2,c
  1308  00484C  D7FC               	goto	l6866
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;main.c: 155:     AD5272_COMMANDS[0] = 0x04;
  1312  00484E  0E04               	movlw	4
  1313  004850  6E54               	movwf	_AD5272_COMMANDS,c
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;main.c: 158:     TRISAbits.TRISA0 = 0;
  1317  004852  90C2               	bcf	16322,0,c	;volatile
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;main.c: 159:     ANSELAbits.ANSELA0 = 1;
  1321  004854  013A               	movlb	58	; () banked
  1322  004856  8140               	bsf	64,0,b	;volatile
  1323                           
  1324                           ;main.c: 160:     led_enable = 1;
  1325  004858  0E01               	movlw	1
  1326  00485A  0100               	movlb	0	; () banked
  1327  00485C  6FF8               	movwf	_led_enable& (0+255),b
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;main.c: 162:     TRISAbits.TRISA1 = 0;
  1331  00485E  92C2               	bcf	16322,1,c	;volatile
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;main.c: 163:     ANSELAbits.ANSELA1 = 1;
  1335  004860  013A               	movlb	58	; () banked
  1336  004862  8340               	bsf	64,1,b	;volatile
  1337                           
  1338                           ; BSR set to: 58
  1339                           ;main.c: 164:     LATAbits.LA1 = 0;
  1340  004864  92BA               	bcf	16314,1,c	;volatile
  1341                           
  1342                           ; BSR set to: 58
  1343                           ;main.c: 166:     TRISBbits.TRISB2 = 0;
  1344  004866  94C3               	bcf	16323,2,c	;volatile
  1345                           
  1346                           ; BSR set to: 58
  1347                           ;main.c: 167:     TRISBbits.TRISB3 = 0;
  1348  004868  96C3               	bcf	16323,3,c	;volatile
  1349                           
  1350                           ; BSR set to: 58
  1351                           ;main.c: 168:     LATBbits.LB2 = 1;
  1352  00486A  84BB               	bsf	16315,2,c	;volatile
  1353                           
  1354                           ; BSR set to: 58
  1355                           ;main.c: 169:     LATBbits.LB3 = 1;
  1356  00486C  86BB               	bsf	16315,3,c	;volatile
  1357  00486E                     l6888:
  1358                           
  1359                           ;main.c: 174:         receive_command = USART1_ReceiveCommand();
  1360  00486E  EC70  F01F         	call	_USART1_ReceiveCommand	;wreg free
  1361  004872  0100               	movlb	0	; () banked
  1362  004874  6FF7               	movwf	main@receive_command& (0+255),b
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;main.c: 175:         if(receive_command)
  1366  004876  51F7               	movf	main@receive_command& (0+255),w,b
  1367  004878  B4D8               	btfsc	status,2,c
  1368  00487A  D7F9               	goto	l6888
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;main.c: 176:             USART_handler();
  1372  00487C  EC59  F020         	call	_USART_handler	;wreg free
  1373  004880  D7F6               	goto	l6888
  1374  004882                     __end_of_main:
  1375                           	opt callstack 0
  1376                           
  1377 ;; *************** function _timer0_init *****************
  1378 ;; Defined at:
  1379 ;;		line 223 in file "main.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    2
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text1
  1408  0051E8                     __ptext1:
  1409                           	opt callstack 0
  1410  0051E8                     _timer0_init:
  1411                           	opt callstack 28
  1412                           
  1413                           ;main.c: 224:     T0CON0 = 0x10;
  1414                           
  1415                           ;incstack = 0
  1416  0051E8  0E10               	movlw	16
  1417  0051EA  6EB8               	movwf	16312,c	;volatile
  1418                           
  1419                           ;main.c: 225:     T0CON1 = 0x75;
  1420  0051EC  0E75               	movlw	117
  1421  0051EE  6EB9               	movwf	16313,c	;volatile
  1422                           
  1423                           ;main.c: 226:     TMR0L = 0xB0;
  1424  0051F0  0EB0               	movlw	176
  1425  0051F2  6EB6               	movwf	16310,c	;volatile
  1426                           
  1427                           ;main.c: 227:     TMR0H = 0x3C;
  1428  0051F4  0E3C               	movlw	60
  1429  0051F6  6EB7               	movwf	16311,c	;volatile
  1430                           
  1431                           ;main.c: 228:     counter_timer0 = 0;
  1432  0051F8  0E00               	movlw	0
  1433  0051FA  6E4D               	movwf	_counter_timer0,c
  1434                           
  1435                           ;main.c: 229:     IPR3bits.TMR0IP = 0;
  1436  0051FC  0139               	movlb	57	; () banked
  1437  0051FE  9F83               	bcf	131,7,b	;volatile
  1438                           
  1439                           ; BSR set to: 57
  1440                           ;main.c: 230:     PIR3bits.TMR0IF = 0;
  1441  005200  9FA3               	bcf	163,7,b	;volatile
  1442                           
  1443                           ; BSR set to: 57
  1444                           ;main.c: 231:     PIE3bits.TMR0IE = 1;
  1445  005202  8F93               	bsf	147,7,b	;volatile
  1446                           
  1447                           ; BSR set to: 57
  1448                           ;main.c: 232:     T0CON0bits.EN = 1;
  1449  005204  8EB8               	bsf	16312,7,c	;volatile
  1450                           
  1451                           ; BSR set to: 57
  1452  005206  0012               	return		;funcret
  1453  005208                     __end_of_timer0_init:
  1454                           	opt callstack 0
  1455                           
  1456 ;; *************** function _USART_handler *****************
  1457 ;; Defined at:
  1458 ;;		line 182 in file "main.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1475 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1476 ;;Total ram usage:        2 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:   10
  1479 ;; This function calls:
  1480 ;;		_GetStringSize
  1481 ;;		_I2C_handler
  1482 ;;		_USART1_SendString
  1483 ;;		_memset
  1484 ;;		_sprintf
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text2
  1491  0040B2                     __ptext2:
  1492                           	opt callstack 0
  1493  0040B2                     _USART_handler:
  1494                           	opt callstack 20
  1495                           
  1496                           ;main.c: 183:     memset(tx_buffer,0,32);
  1497                           
  1498                           ; BSR set to: 57
  1499                           ;incstack = 0
  1500  0040B2  0E7A               	movlw	low _tx_buffer
  1501  0040B4  0100               	movlb	0	; () banked
  1502  0040B6  6F60               	movwf	memset@st& (0+255),b
  1503  0040B8  0E01               	movlw	high _tx_buffer
  1504  0040BA  6F61               	movwf	(memset@st+1)& (0+255),b
  1505  0040BC  0E00               	movlw	0
  1506  0040BE  6F62               	movwf	memset@x& (0+255),b
  1507  0040C0  0E00               	movlw	0
  1508  0040C2  6F64               	movwf	(memset@size+1)& (0+255),b
  1509  0040C4  0E20               	movlw	32
  1510  0040C6  6F63               	movwf	memset@size& (0+255),b
  1511  0040C8  EC79  F028         	call	_memset	;wreg free
  1512                           
  1513                           ;main.c: 184:     if(COMMAND_WR){
  1514  0040CC  5051               	movf	_COMMAND_WR,w,c
  1515  0040CE  A4D8               	btfss	status,2,c
  1516  0040D0  D03A               	goto	l6790
  1517  0040D2  D09E               	goto	l6810
  1518  0040D4                     l6782:
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;main.c: 187:                 sprintf(tx_buffer,"Voltage:%f V",ADC_VOLTAGE_RESULT);
  1522  0040D4  0E7A               	movlw	low _tx_buffer
  1523  0040D6  6FED               	movwf	sprintf@s& (0+255),b
  1524  0040D8  0E01               	movlw	high _tx_buffer
  1525  0040DA  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1526  0040DC  0E73               	movlw	low STR_1
  1527  0040DE  6FEF               	movwf	sprintf@fmt& (0+255),b
  1528  0040E0  0E20               	movlw	high STR_1
  1529  0040E2  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1530  0040E4  0060  F0FC  F0F1   	movff	_ADC_VOLTAGE_RESULT,?_sprintf+4
  1531  0040EA  0060  F100  F0F2   	movff	_ADC_VOLTAGE_RESULT+1,?_sprintf+5
  1532  0040F0  0060  F104  F0F3   	movff	_ADC_VOLTAGE_RESULT+2,?_sprintf+6
  1533  0040F6  0060  F108  F0F4   	movff	_ADC_VOLTAGE_RESULT+3,?_sprintf+7
  1534  0040FC  EC28  F027         	call	_sprintf	;wreg free
  1535                           
  1536                           ;main.c: 188:                 break;
  1537  004100  D09A               	goto	l6812
  1538  004102                     l6784:
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;main.c: 190:                 sprintf(tx_buffer,"Current:%f A",ADC_VOLTAGE_RESULT);
  1542  004102  0E7A               	movlw	low _tx_buffer
  1543  004104  6FED               	movwf	sprintf@s& (0+255),b
  1544  004106  0E01               	movlw	high _tx_buffer
  1545  004108  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1546  00410A  0E66               	movlw	low STR_2
  1547  00410C  6FEF               	movwf	sprintf@fmt& (0+255),b
  1548  00410E  0E20               	movlw	high STR_2
  1549  004110  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1550  004112  0060  F0FC  F0F1   	movff	_ADC_VOLTAGE_RESULT,?_sprintf+4
  1551  004118  0060  F100  F0F2   	movff	_ADC_VOLTAGE_RESULT+1,?_sprintf+5
  1552  00411E  0060  F104  F0F3   	movff	_ADC_VOLTAGE_RESULT+2,?_sprintf+6
  1553  004124  0060  F108  F0F4   	movff	_ADC_VOLTAGE_RESULT+3,?_sprintf+7
  1554  00412A  EC28  F027         	call	_sprintf	;wreg free
  1555                           
  1556                           ;main.c: 191:                 break;
  1557  00412E  D083               	goto	l6812
  1558  004130                     l6786:
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;main.c: 193:                 sprintf(tx_buffer,"Command not recognized!");
  1562  004130  0E7A               	movlw	low _tx_buffer
  1563  004132  6FED               	movwf	sprintf@s& (0+255),b
  1564  004134  0E01               	movlw	high _tx_buffer
  1565  004136  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1566  004138  0E01               	movlw	low STR_3
  1567  00413A  6FEF               	movwf	sprintf@fmt& (0+255),b
  1568  00413C  0E20               	movlw	high STR_3
  1569  00413E  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1570  004140  EC28  F027         	call	_sprintf	;wreg free
  1571                           
  1572                           ;main.c: 194:                 break;
  1573  004144  D078               	goto	l6812
  1574  004146                     l6790:
  1575  004146  5050               	movf	_COMMAND,w,c
  1576  004148  0100               	movlb	0	; () banked
  1577  00414A  6FF5               	movwf	??_USART_handler& (0+255),b
  1578  00414C  6BF6               	clrf	(??_USART_handler+1)& (0+255),b
  1579                           
  1580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1581                           ; Switch size 1, requested type "simple"
  1582                           ; Number of cases is 1, Range of values is 0 to 0
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte            4     3 (average)
  1586                           ;	Chosen strategy is simple_byte
  1587  00414E  51F6               	movf	(??_USART_handler+1)& (0+255),w,b
  1588  004150  0A00               	xorlw	0	; case 0
  1589  004152  A4D8               	btfss	status,2,c
  1590  004154  D7ED               	goto	l6786
  1591                           
  1592                           ; BSR set to: 0
  1593                           ; Switch size 1, requested type "simple"
  1594                           ; Number of cases is 2, Range of values is 0 to 1
  1595                           ; switch strategies available:
  1596                           ; Name         Instructions Cycles
  1597                           ; simple_byte            7     4 (average)
  1598                           ;	Chosen strategy is simple_byte
  1599  004156  51F5               	movf	??_USART_handler& (0+255),w,b
  1600  004158  0A00               	xorlw	0	; case 0
  1601  00415A  B4D8               	btfsc	status,2,c
  1602  00415C  D7BB               	goto	l6782
  1603  00415E  0A01               	xorlw	1	; case 1
  1604  004160  B4D8               	btfsc	status,2,c
  1605  004162  D7CF               	goto	l6784
  1606  004164  D7E5               	goto	l6786
  1607  004166                     l6792:
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;main.c: 199:                 led_enable = !led_enable;
  1611  004166  51F8               	movf	_led_enable& (0+255),w,b
  1612  004168  A4D8               	btfss	status,2,c
  1613  00416A  D002               	goto	u9160
  1614  00416C  0E01               	movlw	1
  1615  00416E  D001               	goto	u9170
  1616  004170                     u9160:
  1617  004170  0E00               	movlw	0
  1618  004172                     u9170:
  1619  004172  6FF8               	movwf	_led_enable& (0+255),b
  1620                           
  1621                           ;main.c: 200:                 if(led_enable)
  1622  004174  51F8               	movf	_led_enable& (0+255),w,b
  1623  004176  B4D8               	btfsc	status,2,c
  1624  004178  D00B               	goto	l6796
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 201:                     sprintf(tx_buffer,"Blinking LED is ON!");
  1628  00417A  0E7A               	movlw	low _tx_buffer
  1629  00417C  6FED               	movwf	sprintf@s& (0+255),b
  1630  00417E  0E01               	movlw	high _tx_buffer
  1631  004180  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1632  004182  0E43               	movlw	low STR_4
  1633  004184  6FEF               	movwf	sprintf@fmt& (0+255),b
  1634  004186  0E20               	movlw	high STR_4
  1635  004188  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1636  00418A  EC28  F027         	call	_sprintf	;wreg free
  1637  00418E  D053               	goto	l6812
  1638  004190                     l6796:
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;main.c: 203:                     sprintf(tx_buffer,"Blinking LED is OFF!");
  1642  004190  0E7A               	movlw	low _tx_buffer
  1643  004192  6FED               	movwf	sprintf@s& (0+255),b
  1644  004194  0E01               	movlw	high _tx_buffer
  1645  004196  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1646  004198  0E19               	movlw	low STR_5
  1647  00419A  6FEF               	movwf	sprintf@fmt& (0+255),b
  1648  00419C  0E20               	movlw	high STR_5
  1649  00419E  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1650  0041A0  EC28  F027         	call	_sprintf	;wreg free
  1651  0041A4  D048               	goto	l6812
  1652  0041A6                     l6798:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;main.c: 206:                 I2C_handler(0,COMMAND_WRITE_NUMBER);
  1656  0041A6  0060  F12C  F06C   	movff	_COMMAND_WRITE_NUMBER,I2C_handler@value
  1657  0041AC  0060  F130  F06D   	movff	_COMMAND_WRITE_NUMBER+1,I2C_handler@value+1
  1658  0041B2  0E00               	movlw	0
  1659  0041B4  ECDA  F027         	call	_I2C_handler
  1660                           
  1661                           ;main.c: 207:                 sprintf(tx_buffer,"Voltage seted!");
  1662  0041B8  0E7A               	movlw	low _tx_buffer
  1663  0041BA  0100               	movlb	0	; () banked
  1664  0041BC  6FED               	movwf	sprintf@s& (0+255),b
  1665  0041BE  0E01               	movlw	high _tx_buffer
  1666  0041C0  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1667  0041C2  0E57               	movlw	low STR_6
  1668  0041C4  6FEF               	movwf	sprintf@fmt& (0+255),b
  1669  0041C6  0E20               	movlw	high STR_6
  1670  0041C8  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1671  0041CA  EC28  F027         	call	_sprintf	;wreg free
  1672                           
  1673                           ;main.c: 208:                 break;
  1674  0041CE  D033               	goto	l6812
  1675  0041D0                     l6802:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;main.c: 210:                 I2C_handler(1,COMMAND_WRITE_NUMBER);
  1679  0041D0  0060  F12C  F06C   	movff	_COMMAND_WRITE_NUMBER,I2C_handler@value
  1680  0041D6  0060  F130  F06D   	movff	_COMMAND_WRITE_NUMBER+1,I2C_handler@value+1
  1681  0041DC  0E01               	movlw	1
  1682  0041DE  ECDA  F027         	call	_I2C_handler
  1683                           
  1684                           ;main.c: 211:                 sprintf(tx_buffer,"Current Limit seted!");
  1685  0041E2  0E7A               	movlw	low _tx_buffer
  1686  0041E4  0100               	movlb	0	; () banked
  1687  0041E6  6FED               	movwf	sprintf@s& (0+255),b
  1688  0041E8  0E01               	movlw	high _tx_buffer
  1689  0041EA  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1690  0041EC  0E2E               	movlw	low STR_7
  1691  0041EE  6FEF               	movwf	sprintf@fmt& (0+255),b
  1692  0041F0  0E20               	movlw	high STR_7
  1693  0041F2  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1694  0041F4  EC28  F027         	call	_sprintf	;wreg free
  1695                           
  1696                           ;main.c: 212:                 break;
  1697  0041F8  D01E               	goto	l6812
  1698  0041FA                     l6806:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;main.c: 214:                 sprintf(tx_buffer,"Command not recognized!");
  1702  0041FA  0E7A               	movlw	low _tx_buffer
  1703  0041FC  6FED               	movwf	sprintf@s& (0+255),b
  1704  0041FE  0E01               	movlw	high _tx_buffer
  1705  004200  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1706  004202  0E01               	movlw	low STR_3
  1707  004204  6FEF               	movwf	sprintf@fmt& (0+255),b
  1708  004206  0E20               	movlw	high STR_3
  1709  004208  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1710  00420A  EC28  F027         	call	_sprintf	;wreg free
  1711                           
  1712                           ;main.c: 215:                 break;
  1713  00420E  D013               	goto	l6812
  1714  004210                     l6810:
  1715  004210  5050               	movf	_COMMAND,w,c
  1716  004212  0100               	movlb	0	; () banked
  1717  004214  6FF5               	movwf	??_USART_handler& (0+255),b
  1718  004216  6BF6               	clrf	(??_USART_handler+1)& (0+255),b
  1719                           
  1720                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1721                           ; Switch size 1, requested type "simple"
  1722                           ; Number of cases is 1, Range of values is 0 to 0
  1723                           ; switch strategies available:
  1724                           ; Name         Instructions Cycles
  1725                           ; simple_byte            4     3 (average)
  1726                           ;	Chosen strategy is simple_byte
  1727  004218  51F6               	movf	(??_USART_handler+1)& (0+255),w,b
  1728  00421A  0A00               	xorlw	0	; case 0
  1729  00421C  A4D8               	btfss	status,2,c
  1730  00421E  D7ED               	goto	l6806
  1731                           
  1732                           ; BSR set to: 0
  1733                           ; Switch size 1, requested type "simple"
  1734                           ; Number of cases is 3, Range of values is 0 to 2
  1735                           ; switch strategies available:
  1736                           ; Name         Instructions Cycles
  1737                           ; simple_byte           10     6 (average)
  1738                           ;	Chosen strategy is simple_byte
  1739  004220  51F5               	movf	??_USART_handler& (0+255),w,b
  1740  004222  0A00               	xorlw	0	; case 0
  1741  004224  B4D8               	btfsc	status,2,c
  1742  004226  D79F               	goto	l6792
  1743  004228  0A01               	xorlw	1	; case 1
  1744  00422A  B4D8               	btfsc	status,2,c
  1745  00422C  D7BC               	goto	l6798
  1746  00422E  0A03               	xorlw	3	; case 2
  1747  004230  B4D8               	btfsc	status,2,c
  1748  004232  D7CE               	goto	l6802
  1749  004234  D7E2               	goto	l6806
  1750  004236                     l6812:
  1751                           
  1752                           ;main.c: 218:     USART1_SendString(tx_buffer,GetStringSize());
  1753  004236  0E7A               	movlw	low _tx_buffer
  1754  004238  0100               	movlb	0	; () banked
  1755  00423A  6F64               	movwf	USART1_SendString@str& (0+255),b
  1756  00423C  0E01               	movlw	high _tx_buffer
  1757  00423E  6F65               	movwf	(USART1_SendString@str+1)& (0+255),b
  1758  004240  EC20  F028         	call	_GetStringSize	;wreg free
  1759  004244  0060  F180  F066   	movff	?_GetStringSize,USART1_SendString@size
  1760  00424A  0060  F184  F067   	movff	?_GetStringSize+1,USART1_SendString@size+1
  1761  004250  EC99  F024         	call	_USART1_SendString	;wreg free
  1762  004254  0012               	return		;funcret
  1763  004256                     __end_of_USART_handler:
  1764                           	opt callstack 0
  1765                           
  1766 ;; *************** function _sprintf *****************
  1767 ;; Defined at:
  1768 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  s               2  141[BANK0 ] PTR unsigned char 
  1771 ;;		 -> tx_buffer(32), 
  1772 ;;  fmt             2  143[BANK0 ] PTR const unsigned char 
  1773 ;;		 -> STR_8(24), STR_7(21), STR_6(15), STR_5(21), 
  1774 ;;		 -> STR_4(20), STR_3(24), STR_2(13), STR_1(13), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  f               6    4[BANK1 ] struct _IO_FILE
  1777 ;;  ap              2    2[BANK1 ] PTR void [1]
  1778 ;;		 -> ?_sprintf(2), 
  1779 ;;  ret             2    0        int 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  2  141[BANK0 ] int 
  1782 ;; Registers used:
  1783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1789 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1790 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1792 ;;      Totals:         0       8      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1793 ;;Total ram usage:       18 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    9
  1796 ;; This function calls:
  1797 ;;		_vfprintf
  1798 ;; This function is called by:
  1799 ;;		_USART_handler
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text3
  1804  004E50                     __ptext3:
  1805                           	opt callstack 0
  1806  004E50                     _sprintf:
  1807                           	opt callstack 20
  1808                           
  1809                           ;incstack = 0
  1810  004E50  0EF1               	movlw	low (?_sprintf+4)
  1811  004E52  0101               	movlb	1	; () banked
  1812  004E54  6F9C               	movwf	sprintf@ap& (0+255),b
  1813  004E56  0E00               	movlw	high (?_sprintf+4)
  1814  004E58  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
  1815  004E5A  0060  F3B4  F19E   	movff	sprintf@s,sprintf@f
  1816  004E60  0060  F3B8  F19F   	movff	sprintf@s+1,sprintf@f+1
  1817                           
  1818                           ; BSR set to: 1
  1819  004E66  0E00               	movlw	0
  1820  004E68  6FA1               	movwf	(sprintf@f+3)& (0+255),b
  1821  004E6A  0E00               	movlw	0
  1822  004E6C  6FA0               	movwf	(sprintf@f+2)& (0+255),b
  1823                           
  1824                           ; BSR set to: 1
  1825  004E6E  0E00               	movlw	0
  1826  004E70  6FA3               	movwf	(sprintf@f+5)& (0+255),b
  1827  004E72  0E00               	movlw	0
  1828  004E74  6FA2               	movwf	(sprintf@f+4)& (0+255),b
  1829                           
  1830                           ; BSR set to: 1
  1831  004E76  0E9E               	movlw	low sprintf@f
  1832  004E78  0100               	movlb	0	; () banked
  1833  004E7A  6FE5               	movwf	vfprintf@fp& (0+255),b
  1834  004E7C  0E01               	movlw	high sprintf@f
  1835  004E7E  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  1836  004E80  0060  F3BC  F0E7   	movff	sprintf@fmt,vfprintf@fmt
  1837  004E86  0060  F3C0  F0E8   	movff	sprintf@fmt+1,vfprintf@fmt+1
  1838  004E8C  0E9C               	movlw	low sprintf@ap
  1839  004E8E  6FE9               	movwf	vfprintf@ap& (0+255),b
  1840  004E90  0E01               	movlw	high sprintf@ap
  1841  004E92  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  1842  004E94  EC86  F026         	call	_vfprintf	;wreg free
  1843  004E98  0101               	movlb	1	; () banked
  1844  004E9A  51A0               	movf	(sprintf@f+2)& (0+255),w,b
  1845  004E9C  0100               	movlb	0	; () banked
  1846  004E9E  25ED               	addwf	sprintf@s& (0+255),w,b
  1847  004EA0  6ED9               	movwf	fsr2l,c
  1848  004EA2  0101               	movlb	1	; () banked
  1849  004EA4  51A1               	movf	(sprintf@f+3)& (0+255),w,b
  1850  004EA6  0100               	movlb	0	; () banked
  1851  004EA8  21EE               	addwfc	(sprintf@s+1)& (0+255),w,b
  1852  004EAA  6EDA               	movwf	fsr2h,c
  1853  004EAC  0E00               	movlw	0
  1854  004EAE  6EDF               	movwf	indf2,c
  1855                           
  1856                           ; BSR set to: 0
  1857  004EB0  0012               	return		;funcret
  1858  004EB2                     __end_of_sprintf:
  1859                           	opt callstack 0
  1860                           
  1861 ;; *************** function _vfprintf *****************
  1862 ;; Defined at:
  1863 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  fp              2  133[BANK0 ] PTR struct _IO_FILE
  1866 ;;		 -> sprintf@f(6), 
  1867 ;;  fmt             2  135[BANK0 ] PTR const unsigned char 
  1868 ;;		 -> STR_8(24), STR_7(21), STR_6(15), STR_5(21), 
  1869 ;;		 -> STR_4(20), STR_3(24), STR_2(13), STR_1(13), 
  1870 ;;  ap              2  137[BANK0 ] PTR PTR void 
  1871 ;;		 -> sprintf@ap(2), 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  cfmt            2  139[BANK0 ] PTR unsigned char 
  1874 ;;		 -> STR_8(24), STR_7(21), STR_6(15), STR_5(21), 
  1875 ;;		 -> STR_4(20), STR_3(24), STR_2(13), STR_1(13), 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2  133[BANK0 ] int 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1885 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1888 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1889 ;;Total ram usage:        8 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    8
  1892 ;; This function calls:
  1893 ;;		_vfpfcnvrt
  1894 ;; This function is called by:
  1895 ;;		_sprintf
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text4
  1900  004D0C                     __ptext4:
  1901                           	opt callstack 0
  1902  004D0C                     _vfprintf:
  1903                           	opt callstack 20
  1904                           
  1905                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;incstack = 0
  1909  004D0C  0060  F39C  F0EB   	movff	vfprintf@fmt,vfprintf@cfmt
  1910  004D12  0060  F3A0  F0EC   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1911                           
  1912                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1913  004D18  0E00               	movlw	0
  1914  004D1A  6E44               	movwf	_nout+1,c
  1915  004D1C  0E00               	movlw	0
  1916  004D1E  6E43               	movwf	_nout,c
  1917                           
  1918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1919  004D20  D018               	goto	l6454
  1920  004D22                     l6452:
  1921                           
  1922                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1923  004D22  0060  F394  F0D1   	movff	vfprintf@fp,vfpfcnvrt@fp
  1924  004D28  0060  F398  F0D2   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1925  004D2E  0EEB               	movlw	low vfprintf@cfmt
  1926  004D30  0100               	movlb	0	; () banked
  1927  004D32  6FD3               	movwf	vfpfcnvrt@fmt& (0+255),b
  1928  004D34  0E00               	movlw	high vfprintf@cfmt
  1929  004D36  6FD4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1930  004D38  0060  F3A4  F0D5   	movff	vfprintf@ap,vfpfcnvrt@ap
  1931  004D3E  0060  F3A8  F0D6   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1932  004D44  ECAB  F019         	call	_vfpfcnvrt	;wreg free
  1933  004D48  0100               	movlb	0	; () banked
  1934  004D4A  51D1               	movf	?_vfpfcnvrt& (0+255),w,b
  1935  004D4C  2643               	addwf	_nout,f,c
  1936  004D4E  51D2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1937  004D50  2244               	addwfc	_nout+1,f,c
  1938  004D52                     l6454:
  1939                           
  1940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1941  004D52  0060  F3AF  FFF6   	movff	vfprintf@cfmt,tblptrl
  1942  004D58  0060  F3B3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  1943  004D5E                     	if	0	;tblptru may be non-zero
  1944  004D5E                     	endif
  1945  004D5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1946  004D5E  0E00               	movlw	low (__mediumconst shr (0+16))
  1947  004D60  6EF8               	movwf	tblptru,c
  1948  004D62                     	endif
  1949  004D62  0008               	tblrd		*
  1950  004D64  50F5               	movf	tablat,w,c
  1951  004D66  0900               	iorlw	0
  1952  004D68  A4D8               	btfss	status,2,c
  1953  004D6A  D7DB               	goto	l6452
  1954                           
  1955                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1956  004D6C  0060  F10C  F0E5   	movff	_nout,?_vfprintf
  1957  004D72  0060  F110  F0E6   	movff	_nout+1,?_vfprintf+1
  1958  004D78  0012               	return		;funcret
  1959  004D7A                     __end_of_vfprintf:
  1960                           	opt callstack 0
  1961                           
  1962 ;; *************** function _vfpfcnvrt *****************
  1963 ;; Defined at:
  1964 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  fp              2  113[BANK0 ] PTR struct _IO_FILE
  1967 ;;		 -> sprintf@f(6), 
  1968 ;;  fmt             2  115[BANK0 ] PTR PTR unsigned char 
  1969 ;;		 -> vfprintf@cfmt(2), 
  1970 ;;  ap              2  117[BANK0 ] PTR PTR void 
  1971 ;;		 -> sprintf@ap(2), 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  llu             8    0        unsigned long long 
  1974 ;;  ll              8    0        long long 
  1975 ;;  f               4  125[BANK0 ] long long 
  1976 ;;  ct              3  129[BANK0 ] unsigned char [3]
  1977 ;;  vp              3    0        PTR void 
  1978 ;;  cp              3    0        PTR unsigned char 
  1979 ;;  i               2    0        int 
  1980 ;;  done            2    0        int 
  1981 ;;  c               1  132[BANK0 ] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2  113[BANK0 ] int 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1991 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1992 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1993 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1994 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1995 ;;Total ram usage:       20 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    7
  1998 ;; This function calls:
  1999 ;;		_efgtoa
  2000 ;;		_fputc
  2001 ;;		_isupper
  2002 ;;		_strncmp
  2003 ;;		_tolower
  2004 ;; This function is called by:
  2005 ;;		_vfprintf
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text5
  2010  003356                     __ptext5:
  2011                           	opt callstack 0
  2012  003356                     _vfpfcnvrt:
  2013                           	opt callstack 20
  2014                           
  2015                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2016                           
  2017                           ;incstack = 0
  2018  003356  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2019  00335C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2020  003362  006F FF7B FFF6     	movff	postinc2,tblptrl
  2021  003368  006F FF77 FFF7     	movff	postdec2,tblptrh
  2022  00336E                     	if	0	;tblptru may be non-zero
  2023  00336E                     	endif
  2024  00336E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2025  00336E  0E00               	movlw	low (__mediumconst shr (0+16))
  2026  003370  6EF8               	movwf	tblptru,c
  2027  003372                     	endif
  2028  003372  0008               	tblrd		*
  2029  003374  50F5               	movf	tablat,w,c
  2030  003376  0A25               	xorlw	37
  2031  003378  A4D8               	btfss	status,2,c
  2032  00337A  D193               	goto	l6406
  2033                           
  2034                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2035  00337C  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2036  003382  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2037  003388  2ADE               	incf	postinc2,f,c
  2038  00338A  0E00               	movlw	0
  2039  00338C  22DD               	addwfc	postdec2,f,c
  2040                           
  2041                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2042  00338E  0E00               	movlw	0
  2043  003390  6E46               	movwf	_width+1,c
  2044  003392  0E00               	movlw	0
  2045  003394  6E45               	movwf	_width,c
  2046  003396  0060  F114  F049   	movff	_width,_flags
  2047  00339C  0060  F118  F04A   	movff	_width+1,_flags+1
  2048                           
  2049                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2050  0033A2  6847               	setf	_prec,c
  2051  0033A4  6848               	setf	_prec+1,c
  2052                           
  2053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  2054  0033A6  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2055  0033AC  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2056  0033B2  006F FF7B FFF6     	movff	postinc2,tblptrl
  2057  0033B8  006F FF77 FFF7     	movff	postdec2,tblptrh
  2058  0033BE                     	if	0	;tblptru may be non-zero
  2059  0033BE                     	endif
  2060  0033BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2061  0033BE  0E00               	movlw	low (__mediumconst shr (0+16))
  2062  0033C0  6EF8               	movwf	tblptru,c
  2063  0033C2                     	endif
  2064  0033C2  0008               	tblrd		*
  2065  0033C4  50F5               	movf	tablat,w,c
  2066  0033C6  0100               	movlb	0	; () banked
  2067  0033C8  6F66               	movwf	tolower@c& (0+255),b
  2068  0033CA  6B67               	clrf	(tolower@c+1)& (0+255),b
  2069  0033CC  EC89  F027         	call	_tolower	;wreg free
  2070  0033D0  0100               	movlb	0	; () banked
  2071  0033D2  5166               	movf	?_tolower& (0+255),w,b
  2072  0033D4  6FE1               	movwf	vfpfcnvrt@ct& (0+255),b
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  2076  0033D6  51E1               	movf	vfpfcnvrt@ct& (0+255),w,b
  2077  0033D8  B4D8               	btfsc	status,2,c
  2078  0033DA  D045               	goto	l6362
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  2082  0033DC  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2083  0033E2  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2084  0033E8  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2085  0033EE  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2086  0033F4  0E01               	movlw	1
  2087  0033F6  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2088  0033F8  0E00               	movlw	0
  2089  0033FA  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2090  0033FC  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2091  003402  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2092  003408                     	if	0	;tblptru may be non-zero
  2093  003408                     	endif
  2094  003408                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2095  003408  0E00               	movlw	low (__mediumconst shr (0+16))
  2096  00340A  6EF8               	movwf	tblptru,c
  2097  00340C                     	endif
  2098  00340C  0008               	tblrd		*
  2099  00340E  50F5               	movf	tablat,w,c
  2100  003410  6F66               	movwf	tolower@c& (0+255),b
  2101  003412  6B67               	clrf	(tolower@c+1)& (0+255),b
  2102  003414  EC89  F027         	call	_tolower	;wreg free
  2103  003418  0100               	movlb	0	; () banked
  2104  00341A  5166               	movf	?_tolower& (0+255),w,b
  2105  00341C  6FE2               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  2109  00341E  51E2               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2110  003420  B4D8               	btfsc	status,2,c
  2111  003422  D021               	goto	l6362
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  2115  003424  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2116  00342A  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2117  003430  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2118  003436  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2119  00343C  0E02               	movlw	2
  2120  00343E  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2121  003440  0E00               	movlw	0
  2122  003442  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2123  003444  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2124  00344A  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2125  003450                     	if	0	;tblptru may be non-zero
  2126  003450                     	endif
  2127  003450                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2128  003450  0E00               	movlw	low (__mediumconst shr (0+16))
  2129  003452  6EF8               	movwf	tblptru,c
  2130  003454                     	endif
  2131  003454  0008               	tblrd		*
  2132  003456  50F5               	movf	tablat,w,c
  2133  003458  6F66               	movwf	tolower@c& (0+255),b
  2134  00345A  6B67               	clrf	(tolower@c+1)& (0+255),b
  2135  00345C  EC89  F027         	call	_tolower	;wreg free
  2136  003460  0100               	movlb	0	; () banked
  2137  003462  5166               	movf	?_tolower& (0+255),w,b
  2138  003464  6FE3               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2139  003466                     l6362:
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  2143  003466  0E66               	movlw	102
  2144  003468  19E1               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2145  00346A  A4D8               	btfss	status,2,c
  2146  00346C  D05B               	goto	l6374
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  2150  00346E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2151  003474  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2152  00347A  006F FF7B FFF6     	movff	postinc2,tblptrl
  2153  003480  006F FF77 FFF7     	movff	postdec2,tblptrh
  2154  003486                     	if	0	;tblptru may be non-zero
  2155  003486                     	endif
  2156  003486                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2157  003486  0E00               	movlw	low (__mediumconst shr (0+16))
  2158  003488  6EF8               	movwf	tblptru,c
  2159  00348A                     	endif
  2160  00348A  0008               	tblrd		*
  2161  00348C  006F FFD4  F0E4    	movff	tablat,vfpfcnvrt@c
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  2165  003492  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2166  003498  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2167  00349E  2ADE               	incf	postinc2,f,c
  2168  0034A0  0E00               	movlw	0
  2169  0034A2  22DD               	addwfc	postdec2,f,c
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  2173  0034A4  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2174  0034AA  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2175  0034B0  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  2176  0034B6  0E04               	movlw	4
  2177  0034B8  26DE               	addwf	postinc2,f,c
  2178  0034BA  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  2179  0034C0  0E00               	movlw	0
  2180  0034C2  22DD               	addwfc	postdec2,f,c
  2181  0034C4  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2182  0034CA  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2183  0034D0  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f
  2184  0034D6  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+1
  2185  0034DC  006F FF78  F0DF    	movff	postinc2,vfpfcnvrt@f+2
  2186  0034E2  006F FF78  F0E0    	movff	postinc2,vfpfcnvrt@f+3
  2187  0034E8                     l6370:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  2191  0034E8  0060  F344  F08D   	movff	vfpfcnvrt@fp,efgtoa@fp
  2192  0034EE  0060  F348  F08E   	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2193  0034F4  0060  F374  F08F   	movff	vfpfcnvrt@f,efgtoa@f
  2194  0034FA  0060  F378  F090   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2195  003500  0060  F37C  F091   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2196  003506  0060  F380  F092   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2197  00350C  0060  F390  F093   	movff	vfpfcnvrt@c,efgtoa@c
  2198  003512  EC4A  F010         	call	_efgtoa	;wreg free
  2199  003516  0060  F234  F0D1   	movff	?_efgtoa,?_vfpfcnvrt
  2200  00351C  0060  F238  F0D2   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2201  003522  0012               	return	
  2202  003524                     l6374:
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2206  003524  0EE1               	movlw	low vfpfcnvrt@ct
  2207  003526  6F60               	movwf	strncmp@_l& (0+255),b
  2208  003528  0E00               	movlw	high vfpfcnvrt@ct
  2209  00352A  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2210  00352C  0E90               	movlw	low STR_17
  2211  00352E  6F62               	movwf	strncmp@_r& (0+255),b
  2212  003530  0E20               	movlw	high STR_17
  2213  003532  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2214  003534  0E00               	movlw	0
  2215  003536  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2216  003538  0E02               	movlw	2
  2217  00353A  6F64               	movwf	strncmp@n& (0+255),b
  2218  00353C  ECBD  F022         	call	_strncmp	;wreg free
  2219  003540  0100               	movlb	0	; () banked
  2220  003542  5160               	movf	?_strncmp& (0+255),w,b
  2221  003544  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2222  003546  A4D8               	btfss	status,2,c
  2223  003548  D070               	goto	l6390
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2227  00354A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2228  003550  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2229  003556  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2230  00355C  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2231  003562  0E01               	movlw	1
  2232  003564  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2233  003566  0E00               	movlw	0
  2234  003568  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2235  00356A  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2236  003570  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2237  003576                     	if	0	;tblptru may be non-zero
  2238  003576                     	endif
  2239  003576                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2240  003576  0E00               	movlw	low (__mediumconst shr (0+16))
  2241  003578  6EF8               	movwf	tblptru,c
  2242  00357A                     	endif
  2243  00357A  0008               	tblrd		*
  2244  00357C  006F FFD4  F0E4    	movff	tablat,vfpfcnvrt@c
  2245  003582  0EBF               	movlw	191
  2246  003584  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  2247  003586  0EFF               	movlw	255
  2248  003588  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2249  00358A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2250  003590  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2251  003596  006F FF7B FFF6     	movff	postinc2,tblptrl
  2252  00359C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2253  0035A2                     	if	0	;tblptru may be non-zero
  2254  0035A2                     	endif
  2255  0035A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2256  0035A2  0E00               	movlw	low (__mediumconst shr (0+16))
  2257  0035A4  6EF8               	movwf	tblptru,c
  2258  0035A6                     	endif
  2259  0035A6  0008               	tblrd		*
  2260  0035A8  50F5               	movf	tablat,w,c
  2261  0035AA  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2262  0035AC  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2263  0035AE  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  2264  0035B0  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2265  0035B2  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2266  0035B4  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2267  0035B6  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2268  0035B8  E106               	bnz	u8460
  2269  0035BA  0E1A               	movlw	26
  2270  0035BC  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2271  0035BE  B0D8               	btfsc	status,0,c
  2272  0035C0  D002               	goto	u8460
  2273  0035C2  0E01               	movlw	1
  2274  0035C4  D001               	goto	u8470
  2275  0035C6                     u8460:
  2276  0035C6  0E00               	movlw	0
  2277  0035C8                     u8470:
  2278  0035C8  6FDB               	movwf	_vfpfcnvrt$1677& (0+255),b
  2279  0035CA  6BDC               	clrf	(_vfpfcnvrt$1677+1)& (0+255),b
  2280                           
  2281                           ; BSR set to: 0
  2282  0035CC  51DB               	movf	_vfpfcnvrt$1677& (0+255),w,b
  2283  0035CE  11DC               	iorwf	(_vfpfcnvrt$1677+1)& (0+255),w,b
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2287                           
  2288                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  2292  0035D0  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2293  0035D6  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2294  0035DC  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  2295  0035E2  0E04               	movlw	4
  2296  0035E4  26DE               	addwf	postinc2,f,c
  2297  0035E6  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  2298  0035EC  0E00               	movlw	0
  2299  0035EE  22DD               	addwfc	postdec2,f,c
  2300  0035F0  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2301  0035F6  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2302  0035FC  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f
  2303  003602  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+1
  2304  003608  006F FF78  F0DF    	movff	postinc2,vfpfcnvrt@f+2
  2305  00360E  006F FF78  F0E0    	movff	postinc2,vfpfcnvrt@f+3
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  2309                           
  2310                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  2311  003614  0E02               	movlw	2
  2312  003616  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2313  00361C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2314  003622  26DE               	addwf	postinc2,f,c
  2315  003624  0E00               	movlw	0
  2316  003626  22DD               	addwfc	postdec2,f,c
  2317  003628  D75F               	goto	l6370
  2318  00362A                     l6390:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2322  00362A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2323  003630  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2324  003636  006F FF7B FFF6     	movff	postinc2,tblptrl
  2325  00363C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2326  003642                     	if	0	;tblptru may be non-zero
  2327  003642                     	endif
  2328  003642                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2329  003642  0E00               	movlw	low (__mediumconst shr (0+16))
  2330  003644  6EF8               	movwf	tblptru,c
  2331  003646                     	endif
  2332  003646  0008               	tblrd		*
  2333  003648  50F5               	movf	tablat,w,c
  2334  00364A  0A25               	xorlw	37
  2335  00364C  A4D8               	btfss	status,2,c
  2336  00364E  D01B               	goto	l6400
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2340  003650  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2341  003656  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2342  00365C  2ADE               	incf	postinc2,f,c
  2343  00365E  0E00               	movlw	0
  2344  003660  22DD               	addwfc	postdec2,f,c
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2348  003662  0E00               	movlw	0
  2349  003664  6F61               	movwf	(fputc@c+1)& (0+255),b
  2350  003666  0E25               	movlw	37
  2351  003668  6F60               	movwf	fputc@c& (0+255),b
  2352  00366A  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  2353  003670  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2354  003676  EC41  F024         	call	_fputc	;wreg free
  2355  00367A                     l6396:
  2356                           
  2357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2358  00367A  0E00               	movlw	0
  2359  00367C  0100               	movlb	0	; () banked
  2360  00367E  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2361  003680  0E01               	movlw	1
  2362  003682  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  2363  003684  0012               	return	
  2364  003686                     l6400:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2368  003686  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2369  00368C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2370  003692  2ADE               	incf	postinc2,f,c
  2371  003694  0E00               	movlw	0
  2372  003696  22DD               	addwfc	postdec2,f,c
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2376  003698  0E00               	movlw	0
  2377  00369A  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2378  00369C  0E00               	movlw	0
  2379  00369E  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  2380  0036A0  0012               	return	
  2381  0036A2                     l6406:
  2382                           
  2383                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  2384  0036A2  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2385  0036A8  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2386  0036AE  006F FF7B FFF6     	movff	postinc2,tblptrl
  2387  0036B4  006F FF77 FFF7     	movff	postdec2,tblptrh
  2388  0036BA                     	if	0	;tblptru may be non-zero
  2389  0036BA                     	endif
  2390  0036BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2391  0036BA  0E00               	movlw	low (__mediumconst shr (0+16))
  2392  0036BC  6EF8               	movwf	tblptru,c
  2393  0036BE                     	endif
  2394  0036BE  0008               	tblrd		*
  2395  0036C0  50F5               	movf	tablat,w,c
  2396  0036C2  0100               	movlb	0	; () banked
  2397  0036C4  6F60               	movwf	fputc@c& (0+255),b
  2398  0036C6  6B61               	clrf	(fputc@c+1)& (0+255),b
  2399  0036C8  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  2400  0036CE  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2401  0036D4  EC41  F024         	call	_fputc	;wreg free
  2402                           
  2403                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2404  0036D8  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2405  0036DE  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2406  0036E4  2ADE               	incf	postinc2,f,c
  2407  0036E6  0E00               	movlw	0
  2408  0036E8  22DD               	addwfc	postdec2,f,c
  2409  0036EA  D7C7               	goto	l6396
  2410  0036EC                     __end_of_vfpfcnvrt:
  2411                           	opt callstack 0
  2412                           
  2413 ;; *************** function _strncmp *****************
  2414 ;; Defined at:
  2415 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  2418 ;;		 -> vfpfcnvrt@ct(3), 
  2419 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  2420 ;;		 -> STR_19(3), 
  2421 ;;  n               2    4[BANK0 ] unsigned int 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  2424 ;;		 -> STR_19(3), 
  2425 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  2426 ;;		 -> vfpfcnvrt@ct(3), 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  2    0[BANK0 ] int 
  2429 ;; Registers used:
  2430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2436 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2437 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2438 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2439 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2440 ;;Total ram usage:       11 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    2
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_vfpfcnvrt
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text6
  2451  00457A                     __ptext6:
  2452                           	opt callstack 0
  2453  00457A                     _strncmp:
  2454                           	opt callstack 24
  2455                           
  2456                           ;incstack = 0
  2457  00457A  0060  F180  F067   	movff	strncmp@_l,strncmp@l
  2458  004580  0060  F184  F068   	movff	strncmp@_l+1,strncmp@l+1
  2459  004586  0060  F188  F069   	movff	strncmp@_r,strncmp@r
  2460  00458C  0060  F18C  F06A   	movff	strncmp@_r+1,strncmp@r+1
  2461  004592  0100               	movlb	0	; () banked
  2462  004594  0764               	decf	strncmp@n& (0+255),f,b
  2463  004596  A0D8               	btfss	status,0,c
  2464  004598  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2465  00459A  2964               	incf	strncmp@n& (0+255),w,b
  2466  00459C  E10F               	bnz	l6332
  2467  00459E  2965               	incf	(strncmp@n+1)& (0+255),w,b
  2468  0045A0  A4D8               	btfss	status,2,c
  2469  0045A2  D00C               	goto	l6332
  2470                           
  2471                           ; BSR set to: 0
  2472  0045A4  0E00               	movlw	0
  2473  0045A6  6F61               	movwf	(?_strncmp+1)& (0+255),b
  2474  0045A8  0E00               	movlw	0
  2475  0045AA  6F60               	movwf	?_strncmp& (0+255),b
  2476  0045AC  0012               	return	
  2477  0045AE                     l6330:
  2478                           
  2479                           ; BSR set to: 0
  2480  0045AE  4B67               	infsnz	strncmp@l& (0+255),f,b
  2481  0045B0  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  2482  0045B2  4B69               	infsnz	strncmp@r& (0+255),f,b
  2483  0045B4  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  2484  0045B6  0764               	decf	strncmp@n& (0+255),f,b
  2485  0045B8  A0D8               	btfss	status,0,c
  2486  0045BA  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2487  0045BC                     l6332:
  2488                           
  2489                           ; BSR set to: 0
  2490  0045BC  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2491  0045C2  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2492  0045C8  50DF               	movf	indf2,w,c
  2493  0045CA  B4D8               	btfsc	status,2,c
  2494  0045CC  D026               	goto	u8400
  2495                           
  2496                           ; BSR set to: 0
  2497  0045CE  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2498  0045D4  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2499  0045DA                     	if	0	;tblptru may be non-zero
  2500  0045DA                     	endif
  2501  0045DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2502  0045DA  0E00               	movlw	low (__mediumconst shr (0+16))
  2503  0045DC  6EF8               	movwf	tblptru,c
  2504  0045DE                     	endif
  2505  0045DE  0008               	tblrd		*
  2506  0045E0  50F5               	movf	tablat,w,c
  2507  0045E2  0900               	iorlw	0
  2508  0045E4  B4D8               	btfsc	status,2,c
  2509  0045E6  D019               	goto	u8400
  2510                           
  2511                           ; BSR set to: 0
  2512  0045E8  5164               	movf	strncmp@n& (0+255),w,b
  2513  0045EA  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  2514  0045EC  B4D8               	btfsc	status,2,c
  2515  0045EE  D015               	goto	u8400
  2516                           
  2517                           ; BSR set to: 0
  2518  0045F0  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2519  0045F6  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2520  0045FC  50DF               	movf	indf2,w,c
  2521  0045FE  6F66               	movwf	??_strncmp& (0+255),b
  2522  004600  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2523  004606  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2524  00460C                     	if	0	;tblptru may be non-zero
  2525  00460C                     	endif
  2526  00460C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2527  00460C  0E00               	movlw	low (__mediumconst shr (0+16))
  2528  00460E  6EF8               	movwf	tblptru,c
  2529  004610                     	endif
  2530  004610  0008               	tblrd		*
  2531  004612  50F5               	movf	tablat,w,c
  2532  004614  1966               	xorwf	??_strncmp& (0+255),w,b
  2533  004616  B4D8               	btfsc	status,2,c
  2534  004618  D7CA               	goto	l6330
  2535  00461A                     u8400:
  2536                           
  2537                           ; BSR set to: 0
  2538  00461A  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2539  004620  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2540  004626  50DF               	movf	indf2,w,c
  2541  004628  6F66               	movwf	??_strncmp& (0+255),b
  2542  00462A  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2543  004630  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2544  004636                     	if	0	;tblptru may be non-zero
  2545  004636                     	endif
  2546  004636                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2547  004636  0E00               	movlw	low (__mediumconst shr (0+16))
  2548  004638  6EF8               	movwf	tblptru,c
  2549  00463A                     	endif
  2550  00463A  0008               	tblrd		*
  2551  00463C  50F5               	movf	tablat,w,c
  2552  00463E  5D66               	subwf	??_strncmp& (0+255),w,b
  2553  004640  6F60               	movwf	?_strncmp& (0+255),b
  2554  004642  6B61               	clrf	(?_strncmp+1)& (0+255),b
  2555  004644  A0D8               	btfss	status,0,c
  2556  004646  0761               	decf	(?_strncmp+1)& (0+255),f,b
  2557                           
  2558                           ; BSR set to: 0
  2559  004648  0012               	return		;funcret
  2560  00464A                     __end_of_strncmp:
  2561                           	opt callstack 0
  2562                           
  2563 ;; *************** function _efgtoa *****************
  2564 ;; Defined at:
  2565 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  2568 ;;		 -> sprintf@f(6), 
  2569 ;;  f               4   47[BANK0 ] PTR struct _IO_FILE
  2570 ;;  c               1   51[BANK0 ] unsigned char 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  u               4  109[BANK0 ] unsigned char 
  2573 ;;  g               4  101[BANK0 ] unsigned char 
  2574 ;;  l               4   95[BANK0 ] unsigned char 
  2575 ;;  h               4   91[BANK0 ] unsigned char 
  2576 ;;  ou              4   57[BANK0 ] unsigned char 
  2577 ;;  n               2  107[BANK0 ] int 
  2578 ;;  e               2  105[BANK0 ] int 
  2579 ;;  i               2   99[BANK0 ] int 
  2580 ;;  w               2   88[BANK0 ] int 
  2581 ;;  p               2   85[BANK0 ] int 
  2582 ;;  sign            2   83[BANK0 ] int 
  2583 ;;  d               2   81[BANK0 ] int 
  2584 ;;  ne              2   79[BANK0 ] int 
  2585 ;;  m               2   77[BANK0 ] int 
  2586 ;;  pp              2   75[BANK0 ] int 
  2587 ;;  t               2   73[BANK0 ] int 
  2588 ;;  mode            1   90[BANK0 ] unsigned char 
  2589 ;;  nmode           1   87[BANK0 ] unsigned char 
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  2   45[BANK0 ] int 
  2592 ;; Registers used:
  2593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2599 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2600 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2601 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2602 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2603 ;;Total ram usage:       68 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    6
  2606 ;; This function calls:
  2607 ;;		___awdiv
  2608 ;;		___awmod
  2609 ;;		___fladd
  2610 ;;		___fldiv
  2611 ;;		___fleq
  2612 ;;		___flge
  2613 ;;		___flmul
  2614 ;;		___flneg
  2615 ;;		___flsub
  2616 ;;		___fltol
  2617 ;;		___fpclassifyf
  2618 ;;		_floorf
  2619 ;;		_isupper
  2620 ;;		_pad
  2621 ;;		_strcpy
  2622 ;;		_tolower
  2623 ;; This function is called by:
  2624 ;;		_vfpfcnvrt
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text7
  2629  002094                     __ptext7:
  2630                           	opt callstack 0
  2631  002094                     _efgtoa:
  2632                           	opt callstack 20
  2633                           
  2634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;incstack = 0
  2638  002094  0E00               	movlw	0
  2639  002096  0100               	movlb	0	; () banked
  2640  002098  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  2641  00209A  0E00               	movlw	0
  2642  00209C  6FB3               	movwf	efgtoa@sign& (0+255),b
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  2646  00209E  0060  F23C  F0C5   	movff	efgtoa@f,efgtoa@g
  2647  0020A4  0060  F240  F0C6   	movff	efgtoa@f+1,efgtoa@g+1
  2648  0020AA  0060  F244  F0C7   	movff	efgtoa@f+2,efgtoa@g+2
  2649  0020B0  0060  F248  F0C8   	movff	efgtoa@f+3,efgtoa@g+3
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  2653  0020B6  AFC8               	btfss	(efgtoa@g+3)& (0+255),7,b
  2654  0020B8  D01E               	goto	l6036
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  2658  0020BA  0E00               	movlw	0
  2659  0020BC  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  2660  0020BE  0E01               	movlw	1
  2661  0020C0  6FB3               	movwf	efgtoa@sign& (0+255),b
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  2665  0020C2  0060  F314  F060   	movff	efgtoa@g,___flneg@f1
  2666  0020C8  0060  F318  F061   	movff	efgtoa@g+1,___flneg@f1+1
  2667  0020CE  0060  F31C  F062   	movff	efgtoa@g+2,___flneg@f1+2
  2668  0020D4  0060  F320  F063   	movff	efgtoa@g+3,___flneg@f1+3
  2669  0020DA  EC5D  F028         	call	___flneg	;wreg free
  2670  0020DE  0060  F180  F0C5   	movff	?___flneg,efgtoa@g
  2671  0020E4  0060  F184  F0C6   	movff	?___flneg+1,efgtoa@g+1
  2672  0020EA  0060  F188  F0C7   	movff	?___flneg+2,efgtoa@g+2
  2673  0020F0  0060  F18C  F0C8   	movff	?___flneg+3,efgtoa@g+3
  2674  0020F6                     l6036:
  2675                           
  2676                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  2677  0020F6  0E00               	movlw	0
  2678  0020F8  0100               	movlb	0	; () banked
  2679  0020FA  6FCC               	movwf	(efgtoa@n+1)& (0+255),b
  2680  0020FC  0E00               	movlw	0
  2681  0020FE  6FCB               	movwf	efgtoa@n& (0+255),b
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  2685  002100  0060  F114  F0B8   	movff	_width,efgtoa@w
  2686  002106  0060  F118  F0B9   	movff	_width+1,efgtoa@w+1
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  2690  00210C  51B3               	movf	efgtoa@sign& (0+255),w,b
  2691  00210E  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2692  002110  A4D8               	btfss	status,2,c
  2693  002112  D002               	goto	u7860
  2694                           
  2695                           ; BSR set to: 0
  2696  002114  A449               	btfss	_flags,2,c
  2697  002116  D014               	goto	l6056
  2698  002118                     u7860:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  2702  002118  51B3               	movf	efgtoa@sign& (0+255),w,b
  2703  00211A  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2704  00211C  A4D8               	btfss	status,2,c
  2705  00211E  D004               	goto	l6048
  2706                           
  2707                           ; BSR set to: 0
  2708  002120  0E00               	movlw	0
  2709  002122  6F9E               	movwf	(_efgtoa$1648+1)& (0+255),b
  2710  002124  0E2B               	movlw	43
  2711  002126  D003               	goto	L1
  2712  002128                     l6048:
  2713                           
  2714                           ; BSR set to: 0
  2715  002128  0E00               	movlw	0
  2716  00212A  6F9E               	movwf	(_efgtoa$1648+1)& (0+255),b
  2717  00212C  0E2D               	movlw	45
  2718  00212E                     L1:
  2719  00212E  6F9D               	movwf	_efgtoa$1648& (0+255),b
  2720                           
  2721                           ; BSR set to: 0
  2722  002130  0060  F274  F12A   	movff	_efgtoa$1648,_dbuf
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  2726  002136  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  2727  002138  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  2731  00213A  07B8               	decf	efgtoa@w& (0+255),f,b
  2732  00213C  A0D8               	btfss	status,0,c
  2733  00213E  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  2734  002140                     l6056:
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2738  002140  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  2739  002146  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  2740  00214C  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  2741  002152  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  2742  002158  ECDD  F021         	call	___fpclassifyf	;wreg free
  2743  00215C  0100               	movlb	0	; () banked
  2744  00215E  0560               	decf	?___fpclassifyf& (0+255),w,b
  2745  002160  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2746  002162  A4D8               	btfss	status,2,c
  2747  002164  D052               	goto	l6074
  2748                           
  2749                           ; BSR set to: 0
  2750  002166  0EBF               	movlw	191
  2751  002168  6F94               	movwf	??_efgtoa& (0+255),b
  2752  00216A  0EFF               	movlw	255
  2753  00216C  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  2754  00216E  5193               	movf	efgtoa@c& (0+255),w,b
  2755  002170  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  2756  002172  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  2757  002174  5194               	movf	??_efgtoa& (0+255),w,b
  2758  002176  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  2759  002178  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  2760  00217A  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2761  00217C  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  2762  00217E  E106               	bnz	u7890
  2763  002180  0E1A               	movlw	26
  2764  002182  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  2765  002184  B0D8               	btfsc	status,0,c
  2766  002186  D002               	goto	u7890
  2767  002188  0E01               	movlw	1
  2768  00218A  D001               	goto	u7900
  2769  00218C                     u7890:
  2770  00218C  0E00               	movlw	0
  2771  00218E                     u7900:
  2772  00218E  6F9F               	movwf	_efgtoa$1649& (0+255),b
  2773  002190  6BA0               	clrf	(_efgtoa$1649+1)& (0+255),b
  2774                           
  2775                           ; BSR set to: 0
  2776  002192  519F               	movf	_efgtoa$1649& (0+255),w,b
  2777  002194  11A0               	iorwf	(_efgtoa$1649+1)& (0+255),w,b
  2778  002196  B4D8               	btfsc	status,2,c
  2779  002198  D00D               	goto	l6066
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  2783  00219A  0E2A               	movlw	low _dbuf
  2784  00219C  25CB               	addwf	efgtoa@n& (0+255),w,b
  2785  00219E  6F60               	movwf	strcpy@dest& (0+255),b
  2786  0021A0  0E01               	movlw	high _dbuf
  2787  0021A2  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2788  0021A4  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2789  0021A6  0E80               	movlw	low STR_9
  2790  0021A8  6F62               	movwf	strcpy@src& (0+255),b
  2791  0021AA  0E20               	movlw	high STR_9
  2792  0021AC  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2793  0021AE  ECF3  F026         	call	_strcpy	;wreg free
  2794                           
  2795                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  2796  0021B2  D00C               	goto	l6068
  2797  0021B4                     l6066:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  2801  0021B4  0E2A               	movlw	low _dbuf
  2802  0021B6  25CB               	addwf	efgtoa@n& (0+255),w,b
  2803  0021B8  6F60               	movwf	strcpy@dest& (0+255),b
  2804  0021BA  0E01               	movlw	high _dbuf
  2805  0021BC  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2806  0021BE  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2807  0021C0  0E88               	movlw	low STR_10
  2808  0021C2  6F62               	movwf	strcpy@src& (0+255),b
  2809  0021C4  0E20               	movlw	high STR_10
  2810  0021C6  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2811  0021C8  ECF3  F026         	call	_strcpy	;wreg free
  2812  0021CC                     l6068:
  2813                           
  2814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  2815  0021CC  0100               	movlb	0	; () banked
  2816  0021CE  0EFD               	movlw	253
  2817  0021D0  27B8               	addwf	efgtoa@w& (0+255),f,b
  2818  0021D2  0EFF               	movlw	255
  2819  0021D4  23B9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2820  0021D6                     l6070:
  2821                           
  2822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  2823  0021D6  0060  F234  F070   	movff	efgtoa@fp,pad@fp
  2824  0021DC  0060  F238  F071   	movff	efgtoa@fp+1,pad@fp+1
  2825  0021E2  0E2A               	movlw	low _dbuf
  2826  0021E4  0100               	movlb	0	; () banked
  2827  0021E6  6F72               	movwf	pad@buf& (0+255),b
  2828  0021E8  0E01               	movlw	high _dbuf
  2829  0021EA  6F73               	movwf	(pad@buf+1)& (0+255),b
  2830  0021EC  0060  F2E0  F074   	movff	efgtoa@w,pad@p
  2831  0021F2  0060  F2E4  F075   	movff	efgtoa@w+1,pad@p+1
  2832  0021F8  EC8B  F023         	call	_pad	;wreg free
  2833  0021FC  0060  F1C0  F08D   	movff	?_pad,?_efgtoa
  2834  002202  0060  F1C4  F08E   	movff	?_pad+1,?_efgtoa+1
  2835  002208  0012               	return	
  2836  00220A                     l6074:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2840  00220A  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  2841  002210  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  2842  002216  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  2843  00221C  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  2844  002222  ECDD  F021         	call	___fpclassifyf	;wreg free
  2845  002226  0100               	movlb	0	; () banked
  2846  002228  5160               	movf	?___fpclassifyf& (0+255),w,b
  2847  00222A  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2848  00222C  A4D8               	btfss	status,2,c
  2849  00222E  D034               	goto	l6092
  2850                           
  2851                           ; BSR set to: 0
  2852  002230  0EBF               	movlw	191
  2853  002232  6F94               	movwf	??_efgtoa& (0+255),b
  2854  002234  0EFF               	movlw	255
  2855  002236  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  2856  002238  5193               	movf	efgtoa@c& (0+255),w,b
  2857  00223A  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  2858  00223C  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  2859  00223E  5194               	movf	??_efgtoa& (0+255),w,b
  2860  002240  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  2861  002242  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  2862  002244  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2863  002246  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  2864  002248  E106               	bnz	u7930
  2865  00224A  0E1A               	movlw	26
  2866  00224C  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  2867  00224E  B0D8               	btfsc	status,0,c
  2868  002250  D002               	goto	u7930
  2869  002252  0E01               	movlw	1
  2870  002254  D001               	goto	u7940
  2871  002256                     u7930:
  2872  002256  0E00               	movlw	0
  2873  002258                     u7940:
  2874  002258  6FA1               	movwf	_efgtoa$1654& (0+255),b
  2875  00225A  6BA2               	clrf	(_efgtoa$1654+1)& (0+255),b
  2876                           
  2877                           ; BSR set to: 0
  2878  00225C  51A1               	movf	_efgtoa$1654& (0+255),w,b
  2879  00225E  11A2               	iorwf	(_efgtoa$1654+1)& (0+255),w,b
  2880  002260  B4D8               	btfsc	status,2,c
  2881  002262  D00D               	goto	l6084
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  2885  002264  0E2A               	movlw	low _dbuf
  2886  002266  25CB               	addwf	efgtoa@n& (0+255),w,b
  2887  002268  6F60               	movwf	strcpy@dest& (0+255),b
  2888  00226A  0E01               	movlw	high _dbuf
  2889  00226C  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2890  00226E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2891  002270  0E84               	movlw	low STR_13
  2892  002272  6F62               	movwf	strcpy@src& (0+255),b
  2893  002274  0E20               	movlw	high STR_13
  2894  002276  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2895  002278  ECF3  F026         	call	_strcpy	;wreg free
  2896                           
  2897                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  2898  00227C  D7A7               	goto	l6068
  2899  00227E                     l6084:
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  2903  00227E  0E2A               	movlw	low _dbuf
  2904  002280  25CB               	addwf	efgtoa@n& (0+255),w,b
  2905  002282  6F60               	movwf	strcpy@dest& (0+255),b
  2906  002284  0E01               	movlw	high _dbuf
  2907  002286  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2908  002288  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2909  00228A  0E8C               	movlw	low STR_14
  2910  00228C  6F62               	movwf	strcpy@src& (0+255),b
  2911  00228E  0E20               	movlw	high STR_14
  2912  002290  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2913  002292  ECF3  F026         	call	_strcpy	;wreg free
  2914  002296  D79A               	goto	l6068
  2915  002298                     l6092:
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  2919  002298  0E00               	movlw	0
  2920  00229A  6FCD               	movwf	efgtoa@u& (0+255),b
  2921  00229C  0E00               	movlw	0
  2922  00229E  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  2923  0022A0  0E80               	movlw	128
  2924  0022A2  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  2925  0022A4  0E3F               	movlw	63
  2926  0022A6  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  2927                           
  2928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  2929  0022A8  0E00               	movlw	0
  2930  0022AA  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  2931  0022AC  0E00               	movlw	0
  2932  0022AE  6FC9               	movwf	efgtoa@e& (0+255),b
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  2936  0022B0  0060  F314  F060   	movff	efgtoa@g,___fleq@ff1
  2937  0022B6  0060  F318  F061   	movff	efgtoa@g+1,___fleq@ff1+1
  2938  0022BC  0060  F31C  F062   	movff	efgtoa@g+2,___fleq@ff1+2
  2939  0022C2  0060  F320  F063   	movff	efgtoa@g+3,___fleq@ff1+3
  2940  0022C8  0E00               	movlw	0
  2941  0022CA  6F64               	movwf	___fleq@ff2& (0+255),b
  2942  0022CC  0E00               	movlw	0
  2943  0022CE  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  2944  0022D0  0E00               	movlw	0
  2945  0022D2  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  2946  0022D4  0E00               	movlw	0
  2947  0022D6  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  2948  0022D8  EC3B  F025         	call	___fleq	;wreg free
  2949  0022DC  0100               	movlb	0	; () banked
  2950  0022DE  A0D8               	btfss	status,0,c
  2951  0022E0  D026               	goto	l6102
  2952  0022E2  D09C               	goto	u7980
  2953  0022E4                     l6098:
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  2957  0022E4  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  2958  0022EA  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  2959  0022F0  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  2960  0022F6  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  2961  0022FC  0E00               	movlw	0
  2962  0022FE  6F64               	movwf	___flmul@a& (0+255),b
  2963  002300  0E00               	movlw	0
  2964  002302  6F65               	movwf	(___flmul@a+1)& (0+255),b
  2965  002304  0E20               	movlw	32
  2966  002306  6F66               	movwf	(___flmul@a+2)& (0+255),b
  2967  002308  0E41               	movlw	65
  2968  00230A  6F67               	movwf	(___flmul@a+3)& (0+255),b
  2969  00230C  ECF8  F015         	call	___flmul	;wreg free
  2970  002310  0060  F180  F0CD   	movff	?___flmul,efgtoa@u
  2971  002316  0060  F184  F0CE   	movff	?___flmul+1,efgtoa@u+1
  2972  00231C  0060  F188  F0CF   	movff	?___flmul+2,efgtoa@u+2
  2973  002322  0060  F18C  F0D0   	movff	?___flmul+3,efgtoa@u+3
  2974                           
  2975                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  2976  002328  0100               	movlb	0	; () banked
  2977  00232A  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  2978  00232C  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  2979  00232E                     l6102:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  2983  00232E  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  2984  002334  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  2985  00233A  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  2986  002340  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  2987  002346  0E00               	movlw	0
  2988  002348  6F64               	movwf	___flmul@a& (0+255),b
  2989  00234A  0E00               	movlw	0
  2990  00234C  6F65               	movwf	(___flmul@a+1)& (0+255),b
  2991  00234E  0E20               	movlw	32
  2992  002350  6F66               	movwf	(___flmul@a+2)& (0+255),b
  2993  002352  0E41               	movlw	65
  2994  002354  6F67               	movwf	(___flmul@a+3)& (0+255),b
  2995  002356  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  2996  00235C  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  2997  002362  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  2998  002368  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  2999  00236E  ECF8  F015         	call	___flmul	;wreg free
  3000  002372  0060  F180  F07D   	movff	?___flmul,___flge@ff2
  3001  002378  0060  F184  F07E   	movff	?___flmul+1,___flge@ff2+1
  3002  00237E  0060  F188  F07F   	movff	?___flmul+2,___flge@ff2+2
  3003  002384  0060  F18C  F080   	movff	?___flmul+3,___flge@ff2+3
  3004  00238A  EC54  F022         	call	___flge	;wreg free
  3005  00238E  0100               	movlb	0	; () banked
  3006  002390  A0D8               	btfss	status,0,c
  3007  002392  D027               	goto	l6108
  3008  002394  D7A7               	goto	l6098
  3009  002396                     l6104:
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  3013  002396  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3014  00239C  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3015  0023A2  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3016  0023A8  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3017  0023AE  0E00               	movlw	0
  3018  0023B0  6F64               	movwf	___fldiv@a& (0+255),b
  3019  0023B2  0E00               	movlw	0
  3020  0023B4  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3021  0023B6  0E20               	movlw	32
  3022  0023B8  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3023  0023BA  0E41               	movlw	65
  3024  0023BC  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3025  0023BE  EC1B  F01D         	call	___fldiv	;wreg free
  3026  0023C2  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3027  0023C8  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3028  0023CE  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3029  0023D4  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3030                           
  3031                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  3032  0023DA  0100               	movlb	0	; () banked
  3033  0023DC  07C9               	decf	efgtoa@e& (0+255),f,b
  3034  0023DE  A0D8               	btfss	status,0,c
  3035  0023E0  07CA               	decf	(efgtoa@e+1)& (0+255),f,b
  3036  0023E2                     l6108:
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  3040  0023E2  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  3041  0023E8  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  3042  0023EE  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  3043  0023F4  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  3044  0023FA  0060  F334  F07D   	movff	efgtoa@u,___flge@ff2
  3045  002400  0060  F338  F07E   	movff	efgtoa@u+1,___flge@ff2+1
  3046  002406  0060  F33C  F07F   	movff	efgtoa@u+2,___flge@ff2+2
  3047  00240C  0060  F340  F080   	movff	efgtoa@u+3,___flge@ff2+3
  3048  002412  EC54  F022         	call	___flge	;wreg free
  3049  002416  0100               	movlb	0	; () banked
  3050  002418  A0D8               	btfss	status,0,c
  3051  00241A  D7BD               	goto	l6104
  3052  00241C                     u7980:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  3056  00241C  0060  F24C  F066   	movff	efgtoa@c,tolower@c
  3057  002422  6B67               	clrf	(tolower@c+1)& (0+255),b
  3058  002424  EC89  F027         	call	_tolower	;wreg free
  3059  002428  0100               	movlb	0	; () banked
  3060  00242A  5166               	movf	?_tolower& (0+255),w,b
  3061  00242C  6FBA               	movwf	efgtoa@mode& (0+255),b
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  3065  00242E  0060  F2E8  F0B7   	movff	efgtoa@mode,efgtoa@nmode
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  3069  002434  0E67               	movlw	103
  3070  002436  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3071  002438  A4D8               	btfss	status,2,c
  3072  00243A  D01B               	goto	l6124
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  3076  00243C  5047               	movf	_prec,w,c
  3077  00243E  1048               	iorwf	_prec+1,w,c
  3078  002440  A4D8               	btfss	status,2,c
  3079  002442  D004               	goto	l6120
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  3083  002444  0E00               	movlw	0
  3084  002446  6E48               	movwf	_prec+1,c
  3085  002448  0E01               	movlw	1
  3086  00244A  6E47               	movwf	_prec,c
  3087  00244C                     l6120:
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  3091  00244C  BE48               	btfsc	_prec+1,7,c
  3092  00244E  D005               	goto	u8010
  3093  002450  5048               	movf	_prec+1,w,c
  3094  002452  E108               	bnz	l546
  3095  002454  0447               	decf	_prec,w,c
  3096  002456  B0D8               	btfsc	status,0,c
  3097  002458  D005               	goto	l546
  3098  00245A                     u8010:
  3099                           
  3100                           ; BSR set to: 0
  3101  00245A  0E00               	movlw	0
  3102  00245C  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  3103  00245E  0E06               	movlw	6
  3104  002460  6FB5               	movwf	efgtoa@p& (0+255),b
  3105  002462  D00A               	goto	l6130
  3106  002464                     l546:
  3107                           
  3108                           ; BSR set to: 0
  3109  002464  0060  F11C  F0B5   	movff	_prec,efgtoa@p
  3110  00246A  0060  F120  F0B6   	movff	_prec+1,efgtoa@p+1
  3111  002470  D003               	goto	l6130
  3112  002472                     l6124:
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  3116  002472  AE48               	btfss	_prec+1,7,c
  3117  002474  D7F7               	goto	l546
  3118  002476  D7F1               	goto	u8010
  3119  002478                     l6130:
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  3123  002478  0E67               	movlw	103
  3124  00247A  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3125  00247C  A4D8               	btfss	status,2,c
  3126  00247E  D024               	goto	l6140
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  3130  002480  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3131  002482  D006               	goto	u8040
  3132  002484  0EFC               	movlw	252
  3133  002486  5DC9               	subwf	efgtoa@e& (0+255),w,b
  3134  002488  0EFF               	movlw	255
  3135  00248A  59CA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3136  00248C  A0D8               	btfss	status,0,c
  3137  00248E  D01A               	goto	l6138
  3138  002490                     u8040:
  3139                           
  3140                           ; BSR set to: 0
  3141  002490  0EFF               	movlw	255
  3142  002492  6F94               	movwf	??_efgtoa& (0+255),b
  3143  002494  0EFF               	movlw	255
  3144  002496  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  3145  002498  0060  F2D4  F096   	movff	efgtoa@p,??_efgtoa+2
  3146  00249E  0060  F2D8  F097   	movff	efgtoa@p+1,??_efgtoa+3
  3147  0024A4  5194               	movf	??_efgtoa& (0+255),w,b
  3148  0024A6  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  3149  0024A8  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  3150  0024AA  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3151  0024AC  51C9               	movf	efgtoa@e& (0+255),w,b
  3152  0024AE  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  3153  0024B0  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  3154  0024B2  0A80               	xorlw	128
  3155  0024B4  6F98               	movwf	(??_efgtoa+4)& (0+255),b
  3156  0024B6  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  3157  0024B8  0A80               	xorlw	128
  3158  0024BA  5998               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3159  0024BC  A0D8               	btfss	status,0,c
  3160  0024BE  D002               	goto	l6138
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  3164  0024C0  0E66               	movlw	102
  3165  0024C2  D001               	goto	L2
  3166  0024C4                     l6138:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  3170  0024C4  0E65               	movlw	101
  3171  0024C6                     L2:
  3172  0024C6  6FB7               	movwf	efgtoa@nmode& (0+255),b
  3173  0024C8                     l6140:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  3177  0024C8  0060  F2D4  F0AD   	movff	efgtoa@p,efgtoa@m
  3178  0024CE  0060  F2D8  F0AE   	movff	efgtoa@p+1,efgtoa@m+1
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  3182  0024D4  0E67               	movlw	103
  3183  0024D6  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3184  0024D8  A4D8               	btfss	status,2,c
  3185  0024DA  D005               	goto	u8080
  3186                           
  3187                           ; BSR set to: 0
  3188  0024DC  0E66               	movlw	102
  3189  0024DE  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3190  0024E0  B4D8               	btfsc	status,2,c
  3191                           
  3192                           ; BSR set to: 0
  3193  0024E2  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3194  0024E4  D002               	goto	l6150
  3195  0024E6                     u8080:
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  3199  0024E6  4BAD               	infsnz	efgtoa@m& (0+255),f,b
  3200  0024E8  2BAE               	incf	(efgtoa@m+1)& (0+255),f,b
  3201  0024EA                     l6150:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  3205  0024EA  0E66               	movlw	102
  3206  0024EC  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3207  0024EE  A4D8               	btfss	status,2,c
  3208  0024F0  D016               	goto	l6160
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  3212  0024F2  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3213  0024F4  D00C               	goto	l6156
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  3217  0024F6  0E00               	movlw	0
  3218  0024F8  6FCD               	movwf	efgtoa@u& (0+255),b
  3219  0024FA  0E00               	movlw	0
  3220  0024FC  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  3221  0024FE  0E80               	movlw	128
  3222  002500  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  3223  002502  0E3F               	movlw	63
  3224  002504  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  3225                           
  3226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  3227  002506  0E00               	movlw	0
  3228  002508  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  3229  00250A  0E00               	movlw	0
  3230  00250C  6FC9               	movwf	efgtoa@e& (0+255),b
  3231  00250E                     l6156:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  3235  00250E  0E67               	movlw	103
  3236  002510  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3237  002512  B4D8               	btfsc	status,2,c
  3238  002514  D004               	goto	l6160
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  3242  002516  51C9               	movf	efgtoa@e& (0+255),w,b
  3243  002518  27AD               	addwf	efgtoa@m& (0+255),f,b
  3244  00251A  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  3245  00251C  23AE               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3246  00251E                     l6160:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  3250  00251E  0E00               	movlw	0
  3251  002520  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3252  002522  0E00               	movlw	0
  3253  002524  6FC3               	movwf	efgtoa@i& (0+255),b
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  3257  002526  0060  F314  F0BB   	movff	efgtoa@g,efgtoa@h
  3258  00252C  0060  F318  F0BC   	movff	efgtoa@g+1,efgtoa@h+1
  3259  002532  0060  F31C  F0BD   	movff	efgtoa@g+2,efgtoa@h+2
  3260  002538  0060  F320  F0BE   	movff	efgtoa@g+3,efgtoa@h+3
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  3264  00253E  0060  F334  F099   	movff	efgtoa@u,efgtoa@ou
  3265  002544  0060  F338  F09A   	movff	efgtoa@u+1,efgtoa@ou+1
  3266  00254A  0060  F33C  F09B   	movff	efgtoa@u+2,efgtoa@ou+2
  3267  002550  0060  F340  F09C   	movff	efgtoa@u+3,efgtoa@ou+3
  3268                           
  3269                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3270  002556  D0AE               	goto	l6174
  3271  002558                     l6166:
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  3275  002558  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  3276  00255E  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  3277  002564  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  3278  00256A  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  3279  002570  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  3280  002576  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  3281  00257C  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  3282  002582  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  3283  002588  EC1B  F01D         	call	___fldiv	;wreg free
  3284  00258C  0060  F180  F079   	movff	?___fldiv,floorf@x
  3285  002592  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  3286  002598  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  3287  00259E  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  3288  0025A4  EC72  F01E         	call	_floorf	;wreg free
  3289  0025A8  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  3290  0025AE  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  3291  0025B4  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  3292  0025BA  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  3293                           
  3294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  3295  0025C0  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  3296  0025C6  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  3297  0025CC  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  3298  0025D2  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  3299  0025D8  EC25  F023         	call	___fltol	;wreg free
  3300  0025DC  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  3301  0025E2  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  3302                           
  3303                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  3304  0025E8  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  3305  0025EE  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  3306  0025F4  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  3307  0025FA  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  3308  002600  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  3309  002606  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  3310  00260C  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  3311  002612  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  3312  002618  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  3313  00261E  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  3314  002624  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  3315  00262A  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  3316  002630  ECF8  F015         	call	___flmul	;wreg free
  3317  002634  0060  F180  F07D   	movff	?___flmul,___flsub@a
  3318  00263A  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  3319  002640  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  3320  002646  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  3321  00264C  EC59  F027         	call	___flsub	;wreg free
  3322  002650  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  3323  002656  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  3324  00265C  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  3325  002662  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  3326                           
  3327                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  3328  002668  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3329  00266E  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3330  002674  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3331  00267A  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3332  002680  0E00               	movlw	0
  3333  002682  0100               	movlb	0	; () banked
  3334  002684  6F64               	movwf	___fldiv@a& (0+255),b
  3335  002686  0E00               	movlw	0
  3336  002688  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3337  00268A  0E20               	movlw	32
  3338  00268C  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3339  00268E  0E41               	movlw	65
  3340  002690  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3341  002692  EC1B  F01D         	call	___fldiv	;wreg free
  3342  002696  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3343  00269C  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3344  0026A2  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3345  0026A8  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3346                           
  3347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  3348  0026AE  0100               	movlb	0	; () banked
  3349  0026B0  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  3350  0026B2  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  3351  0026B4                     l6174:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3355  0026B4  51AD               	movf	efgtoa@m& (0+255),w,b
  3356  0026B6  5DC3               	subwf	efgtoa@i& (0+255),w,b
  3357  0026B8  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  3358  0026BA  0A80               	xorlw	128
  3359  0026BC  6F94               	movwf	??_efgtoa& (0+255),b
  3360  0026BE  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  3361  0026C0  0A80               	xorlw	128
  3362  0026C2  5994               	subwfb	??_efgtoa& (0+255),w,b
  3363  0026C4  A0D8               	btfss	status,0,c
  3364  0026C6  D748               	goto	l6166
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  3368  0026C8  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  3369  0026CE  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  3370  0026D4  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  3371  0026DA  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  3372  0026E0  0E00               	movlw	0
  3373  0026E2  6F64               	movwf	___flmul@a& (0+255),b
  3374  0026E4  0E00               	movlw	0
  3375  0026E6  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3376  0026E8  0EA0               	movlw	160
  3377  0026EA  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3378  0026EC  0E40               	movlw	64
  3379  0026EE  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3380  0026F0  ECF8  F015         	call	___flmul	;wreg free
  3381  0026F4  0060  F180  F0BF   	movff	?___flmul,efgtoa@l
  3382  0026FA  0060  F184  F0C0   	movff	?___flmul+1,efgtoa@l+1
  3383  002700  0060  F188  F0C1   	movff	?___flmul+2,efgtoa@l+2
  3384  002706  0060  F18C  F0C2   	movff	?___flmul+3,efgtoa@l+3
  3385                           
  3386                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  3387  00270C  0060  F2EC  F079   	movff	efgtoa@h,___flge@ff1
  3388  002712  0060  F2F0  F07A   	movff	efgtoa@h+1,___flge@ff1+1
  3389  002718  0060  F2F4  F07B   	movff	efgtoa@h+2,___flge@ff1+2
  3390  00271E  0060  F2F8  F07C   	movff	efgtoa@h+3,___flge@ff1+3
  3391  002724  0060  F2FC  F07D   	movff	efgtoa@l,___flge@ff2
  3392  00272A  0060  F300  F07E   	movff	efgtoa@l+1,___flge@ff2+1
  3393  002730  0060  F304  F07F   	movff	efgtoa@l+2,___flge@ff2+2
  3394  002736  0060  F308  F080   	movff	efgtoa@l+3,___flge@ff2+3
  3395  00273C  EC54  F022         	call	___flge	;wreg free
  3396  002740  0100               	movlb	0	; () banked
  3397  002742  A0D8               	btfss	status,0,c
  3398  002744  D01E               	goto	u8150
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  3402                           
  3403                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 430:     } else {
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  3407  002746  0060  F2EC  F060   	movff	efgtoa@h,___fleq@ff1
  3408  00274C  0060  F2F0  F061   	movff	efgtoa@h+1,___fleq@ff1+1
  3409  002752  0060  F2F4  F062   	movff	efgtoa@h+2,___fleq@ff1+2
  3410  002758  0060  F2F8  F063   	movff	efgtoa@h+3,___fleq@ff1+3
  3411  00275E  0060  F2FC  F064   	movff	efgtoa@l,___fleq@ff2
  3412  002764  0060  F300  F065   	movff	efgtoa@l+1,___fleq@ff2+1
  3413  00276A  0060  F304  F066   	movff	efgtoa@l+2,___fleq@ff2+2
  3414  002770  0060  F308  F067   	movff	efgtoa@l+3,___fleq@ff2+3
  3415  002776  EC3B  F025         	call	___fleq	;wreg free
  3416  00277A  0100               	movlb	0	; () banked
  3417  00277C  B0D8               	btfsc	status,0,c
  3418                           
  3419                           ; BSR set to: 0
  3420  00277E  B1B1               	btfsc	efgtoa@d& (0+255),0,b
  3421  002780  D008               	goto	l6188
  3422  002782                     u8150:
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  3426  002782  0E00               	movlw	0
  3427  002784  6FBF               	movwf	efgtoa@l& (0+255),b
  3428  002786  0E00               	movlw	0
  3429  002788  6FC0               	movwf	(efgtoa@l+1)& (0+255),b
  3430  00278A  0E00               	movlw	0
  3431  00278C  6FC1               	movwf	(efgtoa@l+2)& (0+255),b
  3432  00278E  0E00               	movlw	0
  3433  002790  6FC2               	movwf	(efgtoa@l+3)& (0+255),b
  3434  002792                     l6188:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  3438  002792  0060  F314  F060   	movff	efgtoa@g,___fladd@b
  3439  002798  0060  F318  F061   	movff	efgtoa@g+1,___fladd@b+1
  3440  00279E  0060  F31C  F062   	movff	efgtoa@g+2,___fladd@b+2
  3441  0027A4  0060  F320  F063   	movff	efgtoa@g+3,___fladd@b+3
  3442  0027AA  0060  F2FC  F064   	movff	efgtoa@l,___fladd@a
  3443  0027B0  0060  F300  F065   	movff	efgtoa@l+1,___fladd@a+1
  3444  0027B6  0060  F304  F066   	movff	efgtoa@l+2,___fladd@a+2
  3445  0027BC  0060  F308  F067   	movff	efgtoa@l+3,___fladd@a+3
  3446  0027C2  EC76  F01B         	call	___fladd	;wreg free
  3447  0027C6  0060  F180  F0BB   	movff	?___fladd,efgtoa@h
  3448  0027CC  0060  F184  F0BC   	movff	?___fladd+1,efgtoa@h+1
  3449  0027D2  0060  F188  F0BD   	movff	?___fladd+2,efgtoa@h+2
  3450  0027D8  0060  F18C  F0BE   	movff	?___fladd+3,efgtoa@h+3
  3451                           
  3452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  3453  0027DE  0060  F264  F0CD   	movff	efgtoa@ou,efgtoa@u
  3454  0027E4  0060  F268  F0CE   	movff	efgtoa@ou+1,efgtoa@u+1
  3455  0027EA  0060  F26C  F0CF   	movff	efgtoa@ou+2,efgtoa@u+2
  3456  0027F0  0060  F270  F0D0   	movff	efgtoa@ou+3,efgtoa@u+3
  3457                           
  3458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  3459  0027F6  0E65               	movlw	101
  3460  0027F8  0100               	movlb	0	; () banked
  3461  0027FA  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3462  0027FC  B4D8               	btfsc	status,2,c
  3463  0027FE  D007               	goto	l6196
  3464                           
  3465                           ; BSR set to: 0
  3466  002800  0060  F324  F0AF   	movff	efgtoa@e,efgtoa@ne
  3467  002806  0060  F328  F0B0   	movff	efgtoa@e+1,efgtoa@ne+1
  3468  00280C  D004               	goto	l572
  3469  00280E                     l6196:
  3470                           
  3471                           ; BSR set to: 0
  3472  00280E  0E00               	movlw	0
  3473  002810  6FB0               	movwf	(efgtoa@ne+1)& (0+255),b
  3474  002812  0E00               	movlw	0
  3475  002814  6FAF               	movwf	efgtoa@ne& (0+255),b
  3476  002816                     l572:
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  3480  002816  0E00               	movlw	0
  3481  002818  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  3482  00281A  0E00               	movlw	0
  3483  00281C  6FAB               	movwf	efgtoa@pp& (0+255),b
  3484                           
  3485                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  3486  00281E  0E00               	movlw	0
  3487  002820  6FAA               	movwf	(efgtoa@t+1)& (0+255),b
  3488  002822  0E00               	movlw	0
  3489  002824  6FA9               	movwf	efgtoa@t& (0+255),b
  3490                           
  3491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  3492  002826  0E00               	movlw	0
  3493  002828  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3494  00282A  0E00               	movlw	0
  3495  00282C  6FC3               	movwf	efgtoa@i& (0+255),b
  3496                           
  3497                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3498  00282E  D0FA               	goto	l6246
  3499  002830                     l6198:
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  3503  002830  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  3504  002836  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  3505  00283C  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  3506  002842  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  3507  002848  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  3508  00284E  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  3509  002854  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  3510  00285A  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  3511  002860  EC1B  F01D         	call	___fldiv	;wreg free
  3512  002864  0060  F180  F079   	movff	?___fldiv,floorf@x
  3513  00286A  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  3514  002870  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  3515  002876  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  3516  00287C  EC72  F01E         	call	_floorf	;wreg free
  3517  002880  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  3518  002886  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  3519  00288C  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  3520  002892  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  3521                           
  3522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  3523  002898  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  3524  00289E  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  3525  0028A4  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  3526  0028AA  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  3527  0028B0  EC25  F023         	call	___fltol	;wreg free
  3528  0028B4  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  3529  0028BA  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  3530                           
  3531                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3532  0028C0  B849               	btfsc	_flags,4,c
  3533  0028C2  D00D               	goto	l6210
  3534  0028C4  0100               	movlb	0	; () banked
  3535  0028C6  51B1               	movf	efgtoa@d& (0+255),w,b
  3536  0028C8  11B2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3537  0028CA  A4D8               	btfss	status,2,c
  3538  0028CC  D008               	goto	l6210
  3539                           
  3540                           ; BSR set to: 0
  3541  0028CE  0E67               	movlw	103
  3542  0028D0  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3543  0028D2  B4D8               	btfsc	status,2,c
  3544                           
  3545                           ; BSR set to: 0
  3546  0028D4  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3547  0028D6  D003               	goto	l6210
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  3551  0028D8  4BA9               	infsnz	efgtoa@t& (0+255),f,b
  3552  0028DA  2BAA               	incf	(efgtoa@t+1)& (0+255),f,b
  3553                           
  3554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  3555  0028DC  D03A               	goto	l6238
  3556  0028DE                     l6210:
  3557                           
  3558                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  3559  0028DE  0100               	movlb	0	; () banked
  3560  0028E0  51AB               	movf	efgtoa@pp& (0+255),w,b
  3561  0028E2  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3562  0028E4  B4D8               	btfsc	status,2,c
  3563                           
  3564                           ; BSR set to: 0
  3565  0028E6  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3566  0028E8  D022               	goto	l6230
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  3570  0028EA  0E2A               	movlw	low _dbuf
  3571  0028EC  25CB               	addwf	efgtoa@n& (0+255),w,b
  3572  0028EE  6ED9               	movwf	fsr2l,c
  3573  0028F0  0E01               	movlw	high _dbuf
  3574  0028F2  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3575  0028F4  6EDA               	movwf	fsr2h,c
  3576  0028F6  0E2E               	movlw	46
  3577  0028F8  6EDF               	movwf	indf2,c
  3578                           
  3579                           ; BSR set to: 0
  3580  0028FA  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3581  0028FC  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  3585  0028FE  07B8               	decf	efgtoa@w& (0+255),f,b
  3586  002900  A0D8               	btfss	status,0,c
  3587  002902  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  3591  002904  0E00               	movlw	0
  3592  002906  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  3593  002908  0E01               	movlw	1
  3594  00290A  6FAB               	movwf	efgtoa@pp& (0+255),b
  3595  00290C  D010               	goto	l6230
  3596  00290E                     l6222:
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  3600  00290E  0E2A               	movlw	low _dbuf
  3601  002910  25CB               	addwf	efgtoa@n& (0+255),w,b
  3602  002912  6ED9               	movwf	fsr2l,c
  3603  002914  0E01               	movlw	high _dbuf
  3604  002916  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3605  002918  6EDA               	movwf	fsr2h,c
  3606  00291A  0E30               	movlw	48
  3607  00291C  6EDF               	movwf	indf2,c
  3608                           
  3609                           ; BSR set to: 0
  3610  00291E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3611  002920  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  3615  002922  07B8               	decf	efgtoa@w& (0+255),f,b
  3616  002924  A0D8               	btfss	status,0,c
  3617  002926  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  3621  002928  07A9               	decf	efgtoa@t& (0+255),f,b
  3622  00292A  A0D8               	btfss	status,0,c
  3623  00292C  07AA               	decf	(efgtoa@t+1)& (0+255),f,b
  3624  00292E                     l6230:
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  3628  00292E  51A9               	movf	efgtoa@t& (0+255),w,b
  3629  002930  11AA               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3630  002932  A4D8               	btfss	status,2,c
  3631  002934  D7EC               	goto	l6222
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  3635  002936  0E2A               	movlw	low _dbuf
  3636  002938  25CB               	addwf	efgtoa@n& (0+255),w,b
  3637  00293A  6ED9               	movwf	fsr2l,c
  3638  00293C  0E01               	movlw	high _dbuf
  3639  00293E  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3640  002940  6EDA               	movwf	fsr2h,c
  3641  002942  51B1               	movf	efgtoa@d& (0+255),w,b
  3642  002944  0F30               	addlw	48
  3643  002946  6EDF               	movwf	indf2,c
  3644                           
  3645                           ; BSR set to: 0
  3646  002948  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3647  00294A  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  3651  00294C  07B8               	decf	efgtoa@w& (0+255),f,b
  3652  00294E  A0D8               	btfss	status,0,c
  3653  002950  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3654  002952                     l6238:
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  3658  002952  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  3659  002958  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  3660  00295E  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  3661  002964  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  3662  00296A  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  3663  002970  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  3664  002976  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  3665  00297C  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  3666  002982  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  3667  002988  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  3668  00298E  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  3669  002994  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  3670  00299A  ECF8  F015         	call	___flmul	;wreg free
  3671  00299E  0060  F180  F07D   	movff	?___flmul,___flsub@a
  3672  0029A4  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  3673  0029AA  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  3674  0029B0  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  3675  0029B6  EC59  F027         	call	___flsub	;wreg free
  3676  0029BA  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  3677  0029C0  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  3678  0029C6  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  3679  0029CC  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  3680                           
  3681                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  3682  0029D2  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3683  0029D8  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3684  0029DE  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3685  0029E4  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3686  0029EA  0E00               	movlw	0
  3687  0029EC  0100               	movlb	0	; () banked
  3688  0029EE  6F64               	movwf	___fldiv@a& (0+255),b
  3689  0029F0  0E00               	movlw	0
  3690  0029F2  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3691  0029F4  0E20               	movlw	32
  3692  0029F6  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3693  0029F8  0E41               	movlw	65
  3694  0029FA  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3695  0029FC  EC1B  F01D         	call	___fldiv	;wreg free
  3696  002A00  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3697  002A06  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3698  002A0C  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3699  002A12  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3700                           
  3701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  3702  002A18  0100               	movlb	0	; () banked
  3703  002A1A  07AF               	decf	efgtoa@ne& (0+255),f,b
  3704  002A1C  A0D8               	btfss	status,0,c
  3705  002A1E  07B0               	decf	(efgtoa@ne+1)& (0+255),f,b
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  3709  002A20  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  3710  002A22  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  3711  002A24                     l6246:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3715  002A24  51AD               	movf	efgtoa@m& (0+255),w,b
  3716  002A26  5DC3               	subwf	efgtoa@i& (0+255),w,b
  3717  002A28  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  3718  002A2A  0A80               	xorlw	128
  3719  002A2C  6F94               	movwf	??_efgtoa& (0+255),b
  3720  002A2E  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  3721  002A30  0A80               	xorlw	128
  3722  002A32  5994               	subwfb	??_efgtoa& (0+255),w,b
  3723  002A34  B0D8               	btfsc	status,0,c
  3724  002A36  D008               	goto	u8250
  3725                           
  3726                           ; BSR set to: 0
  3727  002A38  BFCC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3728  002A3A  D6FA               	goto	l6198
  3729  002A3C  51CC               	movf	(efgtoa@n+1)& (0+255),w,b
  3730  002A3E  E104               	bnz	u8250
  3731  002A40  0E4B               	movlw	75
  3732  002A42  5DCB               	subwf	efgtoa@n& (0+255),w,b
  3733  002A44  A0D8               	btfss	status,0,c
  3734  002A46  D6F4               	goto	l6198
  3735  002A48                     u8250:
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  3739  002A48  51AB               	movf	efgtoa@pp& (0+255),w,b
  3740  002A4A  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3741  002A4C  B4D8               	btfsc	status,2,c
  3742                           
  3743                           ; BSR set to: 0
  3744  002A4E  A849               	btfss	_flags,4,c
  3745  002A50  D00A               	goto	l6258
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  3749  002A52  0E2A               	movlw	low _dbuf
  3750  002A54  25CB               	addwf	efgtoa@n& (0+255),w,b
  3751  002A56  6ED9               	movwf	fsr2l,c
  3752  002A58  0E01               	movlw	high _dbuf
  3753  002A5A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3754  002A5C  6EDA               	movwf	fsr2h,c
  3755  002A5E  0E2E               	movlw	46
  3756  002A60  6EDF               	movwf	indf2,c
  3757                           
  3758                           ; BSR set to: 0
  3759  002A62  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3760  002A64  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3761  002A66                     l6258:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  3765  002A66  0E2A               	movlw	low _dbuf
  3766  002A68  25CB               	addwf	efgtoa@n& (0+255),w,b
  3767  002A6A  6ED9               	movwf	fsr2l,c
  3768  002A6C  0E01               	movlw	high _dbuf
  3769  002A6E  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3770  002A70  6EDA               	movwf	fsr2h,c
  3771  002A72  0E00               	movlw	0
  3772  002A74  6EDF               	movwf	indf2,c
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  3776  002A76  0E65               	movlw	101
  3777  002A78  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3778  002A7A  A4D8               	btfss	status,2,c
  3779  002A7C  EFEB  F010         	goto	l6070
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  3783  002A80  0E00               	movlw	0
  3784  002A82  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3785  002A84  0E4F               	movlw	79
  3786  002A86  6FC3               	movwf	efgtoa@i& (0+255),b
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  3790  002A88  0E2A               	movlw	low _dbuf
  3791  002A8A  25C3               	addwf	efgtoa@i& (0+255),w,b
  3792  002A8C  6ED9               	movwf	fsr2l,c
  3793  002A8E  0E01               	movlw	high _dbuf
  3794  002A90  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3795  002A92  6EDA               	movwf	fsr2h,c
  3796  002A94  0E00               	movlw	0
  3797  002A96  6EDF               	movwf	indf2,c
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  3801  002A98  0E00               	movlw	0
  3802  002A9A  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3803  002A9C  0E00               	movlw	0
  3804  002A9E  6FB3               	movwf	efgtoa@sign& (0+255),b
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  3808  002AA0  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3809  002AA2  D008               	goto	l6274
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  3813  002AA4  0E00               	movlw	0
  3814  002AA6  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3815  002AA8  0E01               	movlw	1
  3816  002AAA  6FB3               	movwf	efgtoa@sign& (0+255),b
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  3820  002AAC  6DC9               	negf	efgtoa@e& (0+255),b
  3821  002AAE  1FCA               	comf	(efgtoa@e+1)& (0+255),f,b
  3822  002AB0  B0D8               	btfsc	status,0,c
  3823  002AB2  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  3824  002AB4                     l6274:
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  3828  002AB4  0E00               	movlw	0
  3829  002AB6  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  3830  002AB8  0E02               	movlw	2
  3831  002ABA  6FB5               	movwf	efgtoa@p& (0+255),b
  3832                           
  3833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3834  002ABC  D032               	goto	l6286
  3835  002ABE                     l6276:
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  3839  002ABE  07C3               	decf	efgtoa@i& (0+255),f,b
  3840  002AC0  A0D8               	btfss	status,0,c
  3841  002AC2  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  3845  002AC4  0E2A               	movlw	low _dbuf
  3846  002AC6  25C3               	addwf	efgtoa@i& (0+255),w,b
  3847  002AC8  6ED9               	movwf	fsr2l,c
  3848  002ACA  0E01               	movlw	high _dbuf
  3849  002ACC  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3850  002ACE  6EDA               	movwf	fsr2h,c
  3851  002AD0  0060  F324  F060   	movff	efgtoa@e,___awmod@dividend
  3852  002AD6  0060  F328  F061   	movff	efgtoa@e+1,___awmod@dividend+1
  3853  002ADC  0E00               	movlw	0
  3854  002ADE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3855  002AE0  0E0A               	movlw	10
  3856  002AE2  6F62               	movwf	___awmod@divisor& (0+255),b
  3857  002AE4  EC4B  F026         	call	___awmod	;wreg free
  3858  002AE8  0100               	movlb	0	; () banked
  3859  002AEA  5160               	movf	?___awmod& (0+255),w,b
  3860  002AEC  0F30               	addlw	48
  3861  002AEE  6EDF               	movwf	indf2,c
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  3865  002AF0  0060  F324  F060   	movff	efgtoa@e,___awdiv@dividend
  3866  002AF6  0060  F328  F061   	movff	efgtoa@e+1,___awdiv@dividend+1
  3867  002AFC  0E00               	movlw	0
  3868  002AFE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3869  002B00  0E0A               	movlw	10
  3870  002B02  6F62               	movwf	___awdiv@divisor& (0+255),b
  3871  002B04  EC81  F025         	call	___awdiv	;wreg free
  3872  002B08  0060  F180  F0C9   	movff	?___awdiv,efgtoa@e
  3873  002B0E  0060  F184  F0CA   	movff	?___awdiv+1,efgtoa@e+1
  3874                           
  3875                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  3876  002B14  0100               	movlb	0	; () banked
  3877  002B16  07B5               	decf	efgtoa@p& (0+255),f,b
  3878  002B18  A0D8               	btfss	status,0,c
  3879  002B1A  07B6               	decf	(efgtoa@p+1)& (0+255),f,b
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  3883  002B1C  07B8               	decf	efgtoa@w& (0+255),f,b
  3884  002B1E  A0D8               	btfss	status,0,c
  3885  002B20  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3886  002B22                     l6286:
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3890  002B22  51C9               	movf	efgtoa@e& (0+255),w,b
  3891  002B24  11CA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3892  002B26  A4D8               	btfss	status,2,c
  3893  002B28  D7CA               	goto	l6276
  3894                           
  3895                           ; BSR set to: 0
  3896  002B2A  BFB6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3897  002B2C  D005               	goto	u8310
  3898  002B2E  51B6               	movf	(efgtoa@p+1)& (0+255),w,b
  3899  002B30  E1C6               	bnz	l6276
  3900  002B32  05B5               	decf	efgtoa@p& (0+255),w,b
  3901  002B34  B0D8               	btfsc	status,0,c
  3902  002B36  D7C3               	goto	l6276
  3903  002B38                     u8310:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  3907  002B38  07C3               	decf	efgtoa@i& (0+255),f,b
  3908  002B3A  A0D8               	btfss	status,0,c
  3909  002B3C  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  3913  002B3E  51B3               	movf	efgtoa@sign& (0+255),w,b
  3914  002B40  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3915  002B42  A4D8               	btfss	status,2,c
  3916  002B44  D004               	goto	l6296
  3917                           
  3918                           ; BSR set to: 0
  3919  002B46  0E00               	movlw	0
  3920  002B48  6FA4               	movwf	(_efgtoa$1658+1)& (0+255),b
  3921  002B4A  0E2B               	movlw	43
  3922  002B4C  D003               	goto	L3
  3923  002B4E                     l6296:
  3924                           
  3925                           ; BSR set to: 0
  3926  002B4E  0E00               	movlw	0
  3927  002B50  6FA4               	movwf	(_efgtoa$1658+1)& (0+255),b
  3928  002B52  0E2D               	movlw	45
  3929  002B54                     L3:
  3930  002B54  6FA3               	movwf	_efgtoa$1658& (0+255),b
  3931                           
  3932                           ; BSR set to: 0
  3933  002B56  0E2A               	movlw	low _dbuf
  3934  002B58  25C3               	addwf	efgtoa@i& (0+255),w,b
  3935  002B5A  6ED9               	movwf	fsr2l,c
  3936  002B5C  0E01               	movlw	high _dbuf
  3937  002B5E  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3938  002B60  6EDA               	movwf	fsr2h,c
  3939  002B62  0060  F28F  FFDF   	movff	_efgtoa$1658,indf2
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  3943  002B68  07B8               	decf	efgtoa@w& (0+255),f,b
  3944  002B6A  A0D8               	btfss	status,0,c
  3945  002B6C  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3949  002B6E  07C3               	decf	efgtoa@i& (0+255),f,b
  3950  002B70  A0D8               	btfss	status,0,c
  3951  002B72  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3952                           
  3953                           ; BSR set to: 0
  3954  002B74  0EBF               	movlw	191
  3955  002B76  6F94               	movwf	??_efgtoa& (0+255),b
  3956  002B78  0EFF               	movlw	255
  3957  002B7A  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  3958  002B7C  5193               	movf	efgtoa@c& (0+255),w,b
  3959  002B7E  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  3960  002B80  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  3961  002B82  5194               	movf	??_efgtoa& (0+255),w,b
  3962  002B84  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  3963  002B86  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  3964  002B88  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3965  002B8A  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  3966  002B8C  E106               	bnz	u8330
  3967  002B8E  0E1A               	movlw	26
  3968  002B90  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  3969  002B92  B0D8               	btfsc	status,0,c
  3970  002B94  D002               	goto	u8330
  3971  002B96  0E01               	movlw	1
  3972  002B98  D001               	goto	u8340
  3973  002B9A                     u8330:
  3974  002B9A  0E00               	movlw	0
  3975  002B9C                     u8340:
  3976  002B9C  6FA7               	movwf	_efgtoa$1660& (0+255),b
  3977  002B9E  6BA8               	clrf	(_efgtoa$1660+1)& (0+255),b
  3978                           
  3979                           ; BSR set to: 0
  3980  002BA0  51A7               	movf	_efgtoa$1660& (0+255),w,b
  3981  002BA2  11A8               	iorwf	(_efgtoa$1660+1)& (0+255),w,b
  3982  002BA4  A4D8               	btfss	status,2,c
  3983  002BA6  D004               	goto	l6312
  3984                           
  3985                           ; BSR set to: 0
  3986  002BA8  0E00               	movlw	0
  3987  002BAA  6FA6               	movwf	(_efgtoa$1659+1)& (0+255),b
  3988  002BAC  0E65               	movlw	101
  3989  002BAE  D003               	goto	L4
  3990  002BB0                     l6312:
  3991                           
  3992                           ; BSR set to: 0
  3993  002BB0  0E00               	movlw	0
  3994  002BB2  6FA6               	movwf	(_efgtoa$1659+1)& (0+255),b
  3995  002BB4  0E45               	movlw	69
  3996  002BB6                     L4:
  3997  002BB6  6FA5               	movwf	_efgtoa$1659& (0+255),b
  3998                           
  3999                           ; BSR set to: 0
  4000  002BB8  0E2A               	movlw	low _dbuf
  4001  002BBA  25C3               	addwf	efgtoa@i& (0+255),w,b
  4002  002BBC  6ED9               	movwf	fsr2l,c
  4003  002BBE  0E01               	movlw	high _dbuf
  4004  002BC0  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4005  002BC2  6EDA               	movwf	fsr2h,c
  4006  002BC4  0060  F297  FFDF   	movff	_efgtoa$1659,indf2
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  4010  002BCA  07B8               	decf	efgtoa@w& (0+255),f,b
  4011  002BCC  A0D8               	btfss	status,0,c
  4012  002BCE  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  4016  002BD0  0E2A               	movlw	low _dbuf
  4017  002BD2  25CB               	addwf	efgtoa@n& (0+255),w,b
  4018  002BD4  6F60               	movwf	strcpy@dest& (0+255),b
  4019  002BD6  0E01               	movlw	high _dbuf
  4020  002BD8  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4021  002BDA  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4022  002BDC  0E2A               	movlw	low _dbuf
  4023  002BDE  25C3               	addwf	efgtoa@i& (0+255),w,b
  4024  002BE0  6F62               	movwf	strcpy@src& (0+255),b
  4025  002BE2  0E01               	movlw	high _dbuf
  4026  002BE4  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4027  002BE6  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4028  002BE8  ECF3  F026         	call	_strcpy	;wreg free
  4029  002BEC  EFEB  F010         	goto	l6070
  4030  002BF0                     __end_of_efgtoa:
  4031                           	opt callstack 0
  4032                           
  4033 ;; *************** function _tolower *****************
  4034 ;; Defined at:
  4035 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  c               2    6[BANK0 ] int 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  2    6[BANK0 ] int 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4050 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4051 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4052 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4053 ;;Total ram usage:        8 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    3
  4056 ;; This function calls:
  4057 ;;		_isupper
  4058 ;; This function is called by:
  4059 ;;		_efgtoa
  4060 ;;		_vfpfcnvrt
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text8
  4065  004F12                     __ptext8:
  4066                           	opt callstack 0
  4067  004F12                     _tolower:
  4068                           	opt callstack 23
  4069                           
  4070                           ;incstack = 0
  4071  004F12  0EBF               	movlw	191
  4072  004F14  0100               	movlb	0	; () banked
  4073  004F16  6F68               	movwf	??_tolower& (0+255),b
  4074  004F18  0EFF               	movlw	255
  4075  004F1A  6F69               	movwf	(??_tolower+1)& (0+255),b
  4076  004F1C  0060  F198  F06A   	movff	tolower@c,??_tolower+2
  4077  004F22  0060  F19C  F06B   	movff	tolower@c+1,??_tolower+3
  4078  004F28  5168               	movf	??_tolower& (0+255),w,b
  4079  004F2A  276A               	addwf	(??_tolower+2)& (0+255),f,b
  4080  004F2C  5169               	movf	(??_tolower+1)& (0+255),w,b
  4081  004F2E  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  4082  004F30  516B               	movf	(??_tolower+3)& (0+255),w,b
  4083  004F32  E106               	bnz	u7010
  4084  004F34  0E1A               	movlw	26
  4085  004F36  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  4086  004F38  B0D8               	btfsc	status,0,c
  4087  004F3A  D002               	goto	u7010
  4088  004F3C  0E01               	movlw	1
  4089  004F3E  D001               	goto	u7020
  4090  004F40                     u7010:
  4091  004F40  0E00               	movlw	0
  4092  004F42                     u7020:
  4093  004F42  6F6C               	movwf	_tolower$2232& (0+255),b
  4094  004F44  6B6D               	clrf	(_tolower$2232+1)& (0+255),b
  4095                           
  4096                           ; BSR set to: 0
  4097  004F46  516C               	movf	_tolower$2232& (0+255),w,b
  4098  004F48  116D               	iorwf	(_tolower$2232+1)& (0+255),w,b
  4099  004F4A  B4D8               	btfsc	status,2,c
  4100  004F4C  D006               	goto	l1382
  4101                           
  4102                           ; BSR set to: 0
  4103  004F4E  0E20               	movlw	32
  4104  004F50  1166               	iorwf	tolower@c& (0+255),w,b
  4105  004F52  6F66               	movwf	?_tolower& (0+255),b
  4106  004F54  5167               	movf	(tolower@c+1)& (0+255),w,b
  4107  004F56  6F67               	movwf	(?_tolower+1)& (0+255),b
  4108  004F58  0012               	return	
  4109  004F5A                     l1382:
  4110                           
  4111                           ; BSR set to: 0
  4112  004F5A  0060  F198  F066   	movff	tolower@c,?_tolower
  4113  004F60  0060  F19C  F067   	movff	tolower@c+1,?_tolower+1
  4114                           
  4115                           ; BSR set to: 0
  4116  004F66  0012               	return		;funcret
  4117  004F68                     __end_of_tolower:
  4118                           	opt callstack 0
  4119                           
  4120 ;; *************** function _isupper *****************
  4121 ;; Defined at:
  4122 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  c               2    0[BANK0 ] int 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  2    0[BANK0 ] int 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2, status,0
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4138 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4139 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4140 ;;Total ram usage:        6 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    2
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_efgtoa
  4147 ;;		_vfpfcnvrt
  4148 ;;		_tolower
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text9
  4153  00512A                     __ptext9:
  4154                           	opt callstack 0
  4155  00512A                     _isupper:
  4156                           	opt callstack 23
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;incstack = 0
  4160  00512A  0EBF               	movlw	191
  4161  00512C  0100               	movlb	0	; () banked
  4162  00512E  6F62               	movwf	??_isupper& (0+255),b
  4163  005130  0EFF               	movlw	255
  4164  005132  6F63               	movwf	(??_isupper+1)& (0+255),b
  4165  005134  0060  F180  F064   	movff	isupper@c,??_isupper+2
  4166  00513A  0060  F184  F065   	movff	isupper@c+1,??_isupper+3
  4167  005140  5162               	movf	??_isupper& (0+255),w,b
  4168  005142  2764               	addwf	(??_isupper+2)& (0+255),f,b
  4169  005144  5163               	movf	(??_isupper+1)& (0+255),w,b
  4170  005146  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  4171  005148  5165               	movf	(??_isupper+3)& (0+255),w,b
  4172  00514A  E106               	bnz	u6470
  4173  00514C  0E1A               	movlw	26
  4174  00514E  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  4175  005150  B0D8               	btfsc	status,0,c
  4176  005152  D002               	goto	u6470
  4177  005154  0E01               	movlw	1
  4178  005156  D001               	goto	u6480
  4179  005158                     u6470:
  4180  005158  0E00               	movlw	0
  4181  00515A                     u6480:
  4182  00515A  6F60               	movwf	?_isupper& (0+255),b
  4183  00515C  6B61               	clrf	(?_isupper+1)& (0+255),b
  4184                           
  4185                           ; BSR set to: 0
  4186  00515E  0012               	return		;funcret
  4187  005160                     __end_of_isupper:
  4188                           	opt callstack 0
  4189                           
  4190 ;; *************** function _strcpy *****************
  4191 ;; Defined at:
  4192 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  4195 ;;		 -> dbuf(80), 
  4196 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  4197 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4198 ;;		 -> dbuf(80), 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  d               2    8[BANK0 ] PTR unsigned char 
  4201 ;;		 -> dbuf(80), 
  4202 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  4203 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4204 ;;		 -> dbuf(80), 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  2    0[BANK0 ] PTR unsigned char 
  4207 ;; Registers used:
  4208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4214 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4215 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4216 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4217 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4218 ;;Total ram usage:       10 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    2
  4221 ;; This function calls:
  4222 ;;		Nothing
  4223 ;; This function is called by:
  4224 ;;		_efgtoa
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text10
  4229  004DE6                     __ptext10:
  4230                           	opt callstack 0
  4231  004DE6                     _strcpy:
  4232                           	opt callstack 23
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;incstack = 0
  4236  004DE6  0060  F188  F066   	movff	strcpy@src,strcpy@s
  4237  004DEC  0060  F18C  F067   	movff	strcpy@src+1,strcpy@s+1
  4238  004DF2  0060  F180  F068   	movff	strcpy@dest,strcpy@d
  4239  004DF8  0060  F184  F069   	movff	strcpy@dest+1,strcpy@d+1
  4240  004DFE                     l5542:
  4241  004DFE  0100               	movlb	0	; () banked
  4242  004E00  5166               	movf	strcpy@s& (0+255),w,b
  4243  004E02  6F64               	movwf	??_strcpy& (0+255),b
  4244  004E04  5167               	movf	(strcpy@s+1)& (0+255),w,b
  4245  004E06  6F65               	movwf	(??_strcpy+1)& (0+255),b
  4246  004E08  4B66               	infsnz	strcpy@s& (0+255),f,b
  4247  004E0A  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  4248  004E0C  0060  F193  FFF6   	movff	??_strcpy,tblptrl
  4249  004E12  0060  F197  FFF7   	movff	??_strcpy+1,tblptrh
  4250  004E18  0E00               	movlw	low (__smallconst shr (0+16))
  4251  004E1A  6EF8               	movwf	tblptru,c
  4252  004E1C  0060  F1A3  FFD9   	movff	strcpy@d,fsr2l
  4253  004E22  0060  F1A7  FFDA   	movff	strcpy@d+1,fsr2h
  4254  004E28  4B68               	infsnz	strcpy@d& (0+255),f,b
  4255  004E2A  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  4256  004E2C  0E1F               	movlw	(high __ramtop+-1)
  4257  004E2E  64F7               	cpfsgt	tblptrh,c
  4258  004E30  D003               	bra	u6997
  4259  004E32  0008               	tblrd		*
  4260  004E34  50F5               	movf	tablat,w,c
  4261  004E36  D007               	bra	u6990
  4262  004E38                     u6997:
  4263  004E38  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4264  004E3E  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4265  004E44  50E7               	movf	indf1,w,c
  4266  004E46                     u6990:
  4267  004E46  6EDF               	movwf	indf2,c
  4268  004E48  50DF               	movf	indf2,w,c
  4269  004E4A  B4D8               	btfsc	status,2,c
  4270  004E4C  0012               	return	
  4271  004E4E  D7D7               	goto	l5542
  4272  004E50                     __end_of_strcpy:
  4273                           	opt callstack 0
  4274                           
  4275 ;; *************** function _pad *****************
  4276 ;; Defined at:
  4277 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  4280 ;;		 -> sprintf@f(6), 
  4281 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  4282 ;;		 -> dbuf(80), 
  4283 ;;  p               2   20[BANK0 ] int 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  w               2   25[BANK0 ] int 
  4286 ;;  i               2   23[BANK0 ] int 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2   16[BANK0 ] int 
  4289 ;; Registers used:
  4290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4296 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4297 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4298 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4299 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4300 ;;Total ram usage:       11 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    5
  4303 ;; This function calls:
  4304 ;;		_fputc
  4305 ;;		_fputs
  4306 ;;		_strlen
  4307 ;; This function is called by:
  4308 ;;		_efgtoa
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text11
  4313  004716                     __ptext11:
  4314                           	opt callstack 0
  4315  004716                     _pad:
  4316                           	opt callstack 20
  4317                           
  4318                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  4319                           
  4320                           ;incstack = 0
  4321  004716  A049               	btfss	_flags,0,c
  4322  004718  D00E               	goto	l5500
  4323                           
  4324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  4325  00471A  0060  F1C8  F069   	movff	pad@buf,fputs@s
  4326  004720  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
  4327  004726  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
  4328  00472C  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
  4329  004732  ECFF  F027         	call	_fputs	;wreg free
  4330  004736                     l5500:
  4331                           
  4332                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4333  004736  0100               	movlb	0	; () banked
  4334  004738  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  4335  00473A  D007               	goto	l5504
  4336                           
  4337                           ; BSR set to: 0
  4338  00473C  0060  F1D0  F079   	movff	pad@p,pad@w
  4339  004742  0060  F1D4  F07A   	movff	pad@p+1,pad@w+1
  4340  004748  D004               	goto	l505
  4341  00474A                     l5504:
  4342                           
  4343                           ; BSR set to: 0
  4344  00474A  0E00               	movlw	0
  4345  00474C  6F7A               	movwf	(pad@w+1)& (0+255),b
  4346  00474E  0E00               	movlw	0
  4347  004750  6F79               	movwf	pad@w& (0+255),b
  4348  004752                     l505:
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4352  004752  0E00               	movlw	0
  4353  004754  6F78               	movwf	(pad@i+1)& (0+255),b
  4354  004756  0E00               	movlw	0
  4355  004758  6F77               	movwf	pad@i& (0+255),b
  4356                           
  4357                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4358  00475A  D00F               	goto	l5510
  4359  00475C                     l5506:
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4363  00475C  0E00               	movlw	0
  4364  00475E  6F61               	movwf	(fputc@c+1)& (0+255),b
  4365  004760  0E20               	movlw	32
  4366  004762  6F60               	movwf	fputc@c& (0+255),b
  4367  004764  0060  F1C0  F062   	movff	pad@fp,fputc@fp
  4368  00476A  0060  F1C4  F063   	movff	pad@fp+1,fputc@fp+1
  4369  004770  EC41  F024         	call	_fputc	;wreg free
  4370                           
  4371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4372  004774  0100               	movlb	0	; () banked
  4373  004776  4B77               	infsnz	pad@i& (0+255),f,b
  4374  004778  2B78               	incf	(pad@i+1)& (0+255),f,b
  4375  00477A                     l5510:
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4379  00477A  5179               	movf	pad@w& (0+255),w,b
  4380  00477C  5D77               	subwf	pad@i& (0+255),w,b
  4381  00477E  5178               	movf	(pad@i+1)& (0+255),w,b
  4382  004780  0A80               	xorlw	128
  4383  004782  6F76               	movwf	??_pad& (0+255),b
  4384  004784  517A               	movf	(pad@w+1)& (0+255),w,b
  4385  004786  0A80               	xorlw	128
  4386  004788  5976               	subwfb	??_pad& (0+255),w,b
  4387  00478A  A0D8               	btfss	status,0,c
  4388  00478C  D7E7               	goto	l5506
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4392  00478E  B049               	btfsc	_flags,0,c
  4393  004790  D00E               	goto	l5514
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4397  004792  0060  F1C8  F069   	movff	pad@buf,fputs@s
  4398  004798  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
  4399  00479E  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
  4400  0047A4  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
  4401  0047AA  ECFF  F027         	call	_fputs	;wreg free
  4402  0047AE                     l5514:
  4403                           
  4404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  4405  0047AE  0060  F1C8  F060   	movff	pad@buf,strlen@s
  4406  0047B4  0060  F1CC  F061   	movff	pad@buf+1,strlen@s+1
  4407  0047BA  ECB0  F028         	call	_strlen	;wreg free
  4408  0047BE  0100               	movlb	0	; () banked
  4409  0047C0  5179               	movf	pad@w& (0+255),w,b
  4410  0047C2  2560               	addwf	?_strlen& (0+255),w,b
  4411  0047C4  6F70               	movwf	?_pad& (0+255),b
  4412  0047C6  517A               	movf	(pad@w+1)& (0+255),w,b
  4413  0047C8  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  4414  0047CA  6F71               	movwf	(?_pad+1)& (0+255),b
  4415                           
  4416                           ; BSR set to: 0
  4417  0047CC  0012               	return		;funcret
  4418  0047CE                     __end_of_pad:
  4419                           	opt callstack 0
  4420                           
  4421 ;; *************** function _strlen *****************
  4422 ;; Defined at:
  4423 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4426 ;;		 -> dbuf(80), 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  4429 ;;		 -> dbuf(80), 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  2    0[BANK0 ] unsigned int 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4439 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4440 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4442 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4443 ;;Total ram usage:        4 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    2
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_pad
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text12
  4454  005160                     __ptext12:
  4455                           	opt callstack 0
  4456  005160                     _strlen:
  4457                           	opt callstack 22
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;incstack = 0
  4461  005160  0060  F180  F062   	movff	strlen@s,strlen@a
  4462  005166  0060  F184  F063   	movff	strlen@s+1,strlen@a+1
  4463  00516C  D003               	goto	l5284
  4464  00516E                     l5282:
  4465  00516E  0100               	movlb	0	; () banked
  4466  005170  4B60               	infsnz	strlen@s& (0+255),f,b
  4467  005172  2B61               	incf	(strlen@s+1)& (0+255),f,b
  4468  005174                     l5284:
  4469  005174  0060  F183  FFD9   	movff	strlen@s,fsr2l
  4470  00517A  0060  F187  FFDA   	movff	strlen@s+1,fsr2h
  4471  005180  50DF               	movf	indf2,w,c
  4472  005182  A4D8               	btfss	status,2,c
  4473  005184  D7F4               	goto	l5282
  4474  005186  0100               	movlb	0	; () banked
  4475  005188  5162               	movf	strlen@a& (0+255),w,b
  4476  00518A  5D60               	subwf	strlen@s& (0+255),w,b
  4477  00518C  6F60               	movwf	?_strlen& (0+255),b
  4478  00518E  5163               	movf	(strlen@a+1)& (0+255),w,b
  4479  005190  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  4480  005192  6F61               	movwf	(?_strlen+1)& (0+255),b
  4481                           
  4482                           ; BSR set to: 0
  4483  005194  0012               	return		;funcret
  4484  005196                     __end_of_strlen:
  4485                           	opt callstack 0
  4486                           
  4487 ;; *************** function _fputs *****************
  4488 ;; Defined at:
  4489 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4492 ;;		 -> dbuf(80), 
  4493 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4494 ;;		 -> sprintf@f(6), 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  i               2   14[BANK0 ] int 
  4497 ;;  c               1   13[BANK0 ] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  2    9[BANK0 ] int 
  4500 ;; Registers used:
  4501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4507 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4508 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4510 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4511 ;;Total ram usage:        7 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    4
  4514 ;; This function calls:
  4515 ;;		_fputc
  4516 ;; This function is called by:
  4517 ;;		_pad
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text13
  4522  004FFE                     __ptext13:
  4523                           	opt callstack 0
  4524  004FFE                     _fputs:
  4525                           	opt callstack 20
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;incstack = 0
  4529  004FFE  0E00               	movlw	0
  4530  005000  0100               	movlb	0	; () banked
  4531  005002  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4532  005004  0E00               	movlw	0
  4533  005006  6F6E               	movwf	fputs@i& (0+255),b
  4534  005008  D00F               	goto	l5278
  4535  00500A                     l5274:
  4536                           
  4537                           ; BSR set to: 0
  4538  00500A  0060  F1B4  F060   	movff	fputs@c,fputc@c
  4539  005010  6B61               	clrf	(fputc@c+1)& (0+255),b
  4540  005012  0060  F1AC  F062   	movff	fputs@fp,fputc@fp
  4541  005018  0060  F1B0  F063   	movff	fputs@fp+1,fputc@fp+1
  4542  00501E  EC41  F024         	call	_fputc	;wreg free
  4543  005022  0100               	movlb	0	; () banked
  4544  005024  4B6E               	infsnz	fputs@i& (0+255),f,b
  4545  005026  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4546  005028                     l5278:
  4547                           
  4548                           ; BSR set to: 0
  4549  005028  516E               	movf	fputs@i& (0+255),w,b
  4550  00502A  2569               	addwf	fputs@s& (0+255),w,b
  4551  00502C  6ED9               	movwf	fsr2l,c
  4552  00502E  516F               	movf	(fputs@i+1)& (0+255),w,b
  4553  005030  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4554  005032  6EDA               	movwf	fsr2h,c
  4555  005034  50DF               	movf	indf2,w,c
  4556  005036  6F6D               	movwf	fputs@c& (0+255),b
  4557  005038  516D               	movf	fputs@c& (0+255),w,b
  4558  00503A  B4D8               	btfsc	status,2,c
  4559  00503C  0012               	return	
  4560  00503E  D7E5               	goto	l5274
  4561  005040                     __end_of_fputs:
  4562                           	opt callstack 0
  4563                           
  4564 ;; *************** function _fputc *****************
  4565 ;; Defined at:
  4566 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  c               2    0[BANK0 ] int 
  4569 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4570 ;;		 -> sprintf@f(6), 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  2    0[BANK0 ] int 
  4575 ;; Registers used:
  4576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4582 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4584 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4585 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4586 ;;Total ram usage:        9 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    3
  4589 ;; This function calls:
  4590 ;;		_putch
  4591 ;; This function is called by:
  4592 ;;		_pad
  4593 ;;		_vfpfcnvrt
  4594 ;;		_fputs
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text14
  4599  004882                     __ptext14:
  4600                           	opt callstack 0
  4601  004882                     _fputc:
  4602                           	opt callstack 23
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;incstack = 0
  4606  004882  0100               	movlb	0	; () banked
  4607  004884  5162               	movf	fputc@fp& (0+255),w,b
  4608  004886  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4609  004888  B4D8               	btfsc	status,2,c
  4610  00488A  D004               	goto	u6420
  4611                           
  4612                           ; BSR set to: 0
  4613  00488C  5162               	movf	fputc@fp& (0+255),w,b
  4614  00488E  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4615  004890  A4D8               	btfss	status,2,c
  4616  004892  D004               	goto	l5264
  4617  004894                     u6420:
  4618                           
  4619                           ; BSR set to: 0
  4620  004894  5160               	movf	fputc@c& (0+255),w,b
  4621  004896  EC51  F029         	call	_putch
  4622  00489A  0012               	return	
  4623  00489C                     l5264:
  4624                           
  4625                           ; BSR set to: 0
  4626  00489C  EE20 F004          	lfsr	2,4
  4627  0048A0  5162               	movf	fputc@fp& (0+255),w,b
  4628  0048A2  26D9               	addwf	fsr2l,f,c
  4629  0048A4  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4630  0048A6  22DA               	addwfc	fsr2h,f,c
  4631  0048A8  50DE               	movf	postinc2,w,c
  4632  0048AA  10DE               	iorwf	postinc2,w,c
  4633  0048AC  B4D8               	btfsc	status,2,c
  4634  0048AE  D016               	goto	u6440
  4635                           
  4636                           ; BSR set to: 0
  4637  0048B0  EE20 F004          	lfsr	2,4
  4638  0048B4  5162               	movf	fputc@fp& (0+255),w,b
  4639  0048B6  26D9               	addwf	fsr2l,f,c
  4640  0048B8  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4641  0048BA  22DA               	addwfc	fsr2h,f,c
  4642  0048BC  EE10 F002          	lfsr	1,2
  4643  0048C0  5162               	movf	fputc@fp& (0+255),w,b
  4644  0048C2  26E1               	addwf	fsr1l,f,c
  4645  0048C4  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4646  0048C6  22E2               	addwfc	fsr1h,f,c
  4647  0048C8  50DE               	movf	postinc2,w,c
  4648  0048CA  5CE6               	subwf	postinc1,w,c
  4649  0048CC  50E6               	movf	postinc1,w,c
  4650  0048CE  0A80               	xorlw	128
  4651  0048D0  6F68               	movwf	(??_fputc+4)& (0+255),b
  4652  0048D2  50DE               	movf	postinc2,w,c
  4653  0048D4  0A80               	xorlw	128
  4654  0048D6  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4655  0048D8  B0D8               	btfsc	status,0,c
  4656  0048DA  0012               	return	
  4657  0048DC                     u6440:
  4658                           
  4659                           ; BSR set to: 0
  4660  0048DC  EE20 F002          	lfsr	2,2
  4661  0048E0  5162               	movf	fputc@fp& (0+255),w,b
  4662  0048E2  26D9               	addwf	fsr2l,f,c
  4663  0048E4  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4664  0048E6  22DA               	addwfc	fsr2h,f,c
  4665  0048E8  006F FF78  F064    	movff	postinc2,??_fputc
  4666  0048EE  006F FF74  F065    	movff	postdec2,??_fputc+1
  4667  0048F4  0060  F18B  FFD9   	movff	fputc@fp,fsr2l
  4668  0048FA  0060  F18F  FFDA   	movff	fputc@fp+1,fsr2h
  4669  004900  006F FF78  F066    	movff	postinc2,??_fputc+2
  4670  004906  006F FF74  F067    	movff	postdec2,??_fputc+3
  4671  00490C  5164               	movf	??_fputc& (0+255),w,b
  4672  00490E  2566               	addwf	(??_fputc+2)& (0+255),w,b
  4673  004910  6ED9               	movwf	fsr2l,c
  4674  004912  5165               	movf	(??_fputc+1)& (0+255),w,b
  4675  004914  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  4676  004916  6EDA               	movwf	fsr2h,c
  4677  004918  0060  F183  FFDF   	movff	fputc@c,indf2
  4678  00491E  EE20 F002          	lfsr	2,2
  4679  004922  5162               	movf	fputc@fp& (0+255),w,b
  4680  004924  26D9               	addwf	fsr2l,f,c
  4681  004926  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4682  004928  22DA               	addwfc	fsr2h,f,c
  4683  00492A  2ADE               	incf	postinc2,f,c
  4684  00492C  0E00               	movlw	0
  4685  00492E  22DD               	addwfc	postdec2,f,c
  4686  004930  0012               	return		;funcret
  4687  004932                     __end_of_fputc:
  4688                           	opt callstack 0
  4689                           
  4690 ;; *************** function _putch *****************
  4691 ;; Defined at:
  4692 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  c               1    wreg     unsigned char 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  c               1    0[COMRAM] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4710 ;;Total ram usage:        0 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    2
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_fputc
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text15
  4721  0052A2                     __ptext15:
  4722                           	opt callstack 0
  4723  0052A2                     _putch:
  4724                           	opt callstack 23
  4725                           
  4726                           ;incstack = 0
  4727  0052A2  0012               	return		;funcret
  4728  0052A4                     __end_of_putch:
  4729                           	opt callstack 0
  4730                           
  4731 ;; *************** function _floorf *****************
  4732 ;; Defined at:
  4733 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  x               4   25[BANK0 ] float 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  u               4   41[BANK0 ] struct .
  4738 ;;  m               4   35[BANK0 ] unsigned long 
  4739 ;;  e               2   39[BANK0 ] int 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  4   25[BANK0 ] float 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4749 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4750 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4751 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4752 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4753 ;;Total ram usage:       20 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    2
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_efgtoa
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text16
  4764  003CE4                     __ptext16:
  4765                           	opt callstack 0
  4766  003CE4                     _floorf:
  4767                           	opt callstack 23
  4768                           
  4769                           ;incstack = 0
  4770  003CE4  0060  F0DC  F089   	movff	floorf@F524,floorf@u
  4771  003CEA  0060  F0E0  F08A   	movff	floorf@F524+1,floorf@u+1
  4772  003CF0  0060  F0E4  F08B   	movff	floorf@F524+2,floorf@u+2
  4773  003CF6  0060  F0E8  F08C   	movff	floorf@F524+3,floorf@u+3
  4774  003CFC  0060  F1E4  F089   	movff	floorf@x,floorf@u
  4775  003D02  0060  F1E8  F08A   	movff	floorf@x+1,floorf@u+1
  4776  003D08  0060  F1EC  F08B   	movff	floorf@x+2,floorf@u+2
  4777  003D0E  0060  F1F0  F08C   	movff	floorf@x+3,floorf@u+3
  4778  003D14  0E81               	movlw	129
  4779  003D16  0100               	movlb	0	; () banked
  4780  003D18  6F7D               	movwf	??_floorf& (0+255),b
  4781  003D1A  0EFF               	movlw	255
  4782  003D1C  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4783  003D1E  0060  F224  F07F   	movff	floorf@u,??_floorf+2
  4784  003D24  0060  F228  F080   	movff	floorf@u+1,??_floorf+3
  4785  003D2A  0060  F22C  F081   	movff	floorf@u+2,??_floorf+4
  4786  003D30  0060  F230  F082   	movff	floorf@u+3,??_floorf+5
  4787  003D36  0E18               	movlw	24
  4788  003D38  D005               	goto	u7040
  4789  003D3A                     u7045:
  4790  003D3A  90D8               	bcf	status,0,c
  4791  003D3C  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  4792  003D3E  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4793  003D40  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4794  003D42  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4795  003D44                     u7040:
  4796  003D44  2EE8               	decfsz	wreg,f,c
  4797  003D46  D7F9               	goto	u7045
  4798  003D48  517F               	movf	(??_floorf+2)& (0+255),w,b
  4799  003D4A  257D               	addwf	??_floorf& (0+255),w,b
  4800  003D4C  6F87               	movwf	floorf@e& (0+255),b
  4801  003D4E  0E00               	movlw	0
  4802  003D50  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  4803  003D52  6F88               	movwf	(floorf@e+1)& (0+255),b
  4804  003D54  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4805  003D56  D013               	goto	l5560
  4806  003D58  5188               	movf	(floorf@e+1)& (0+255),w,b
  4807  003D5A  E104               	bnz	u7050
  4808  003D5C  0E17               	movlw	23
  4809  003D5E  5D87               	subwf	floorf@e& (0+255),w,b
  4810  003D60  A0D8               	btfss	status,0,c
  4811  003D62  D00D               	goto	l5560
  4812  003D64                     u7050:
  4813                           
  4814                           ; BSR set to: 0
  4815  003D64  0060  F1E4  F079   	movff	floorf@x,?_floorf
  4816  003D6A  0060  F1E8  F07A   	movff	floorf@x+1,?_floorf+1
  4817  003D70  0060  F1EC  F07B   	movff	floorf@x+2,?_floorf+2
  4818  003D76  0060  F1F0  F07C   	movff	floorf@x+3,?_floorf+3
  4819  003D7C  0012               	return	
  4820  003D7E                     l5560:
  4821                           
  4822                           ; BSR set to: 0
  4823  003D7E  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4824  003D80  D068               	goto	l5570
  4825                           
  4826                           ; BSR set to: 0
  4827  003D82  0060  F21C  F07D   	movff	floorf@e,??_floorf
  4828  003D88  0EFF               	movlw	255
  4829  003D8A  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4830  003D8C  0EFF               	movlw	255
  4831  003D8E  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4832  003D90  0E7F               	movlw	127
  4833  003D92  6F80               	movwf	(??_floorf+3)& (0+255),b
  4834  003D94  0E00               	movlw	0
  4835  003D96  6F81               	movwf	(??_floorf+4)& (0+255),b
  4836  003D98                     u7075:
  4837  003D98  677D               	tstfsz	??_floorf& (0+255),b
  4838  003D9A  D001               	goto	u7076
  4839  003D9C  D007               	goto	u7077
  4840  003D9E                     u7076:
  4841  003D9E  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  4842  003DA0  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4843  003DA2  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4844  003DA4  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4845  003DA6  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4846  003DA8  2F7D               	decfsz	??_floorf& (0+255),f,b
  4847  003DAA  D7F6               	goto	u7075
  4848  003DAC                     u7077:
  4849  003DAC  0060  F1F8  F083   	movff	??_floorf+1,floorf@m
  4850  003DB2  0060  F1FC  F084   	movff	??_floorf+2,floorf@m+1
  4851  003DB8  0060  F200  F085   	movff	??_floorf+3,floorf@m+2
  4852  003DBE  0060  F204  F086   	movff	??_floorf+4,floorf@m+3
  4853  003DC4  0100               	movlb	0	; () banked
  4854  003DC6  5183               	movf	floorf@m& (0+255),w,b
  4855  003DC8  1589               	andwf	floorf@u& (0+255),w,b
  4856  003DCA  6F7D               	movwf	??_floorf& (0+255),b
  4857  003DCC  5184               	movf	(floorf@m+1)& (0+255),w,b
  4858  003DCE  158A               	andwf	(floorf@u+1)& (0+255),w,b
  4859  003DD0  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4860  003DD2  5185               	movf	(floorf@m+2)& (0+255),w,b
  4861  003DD4  158B               	andwf	(floorf@u+2)& (0+255),w,b
  4862  003DD6  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4863  003DD8  5186               	movf	(floorf@m+3)& (0+255),w,b
  4864  003DDA  158C               	andwf	(floorf@u+3)& (0+255),w,b
  4865  003DDC  6F80               	movwf	(??_floorf+3)& (0+255),b
  4866  003DDE  517D               	movf	??_floorf& (0+255),w,b
  4867  003DE0  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4868  003DE2  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4869  003DE4  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4870  003DE6  B4D8               	btfsc	status,2,c
  4871  003DE8  D7BD               	goto	u7050
  4872                           
  4873                           ; BSR set to: 0
  4874  003DEA  0060  F224  F07D   	movff	floorf@u,??_floorf
  4875  003DF0  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  4876  003DF6  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  4877  003DFC  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  4878  003E02  0E20               	movlw	32
  4879  003E04  D005               	goto	u7090
  4880  003E06                     u7095:
  4881  003E06  90D8               	bcf	status,0,c
  4882  003E08  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4883  003E0A  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4884  003E0C  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4885  003E0E  337D               	rrcf	??_floorf& (0+255),f,b
  4886  003E10                     u7090:
  4887  003E10  2EE8               	decfsz	wreg,f,c
  4888  003E12  D7F9               	goto	u7095
  4889  003E14  517D               	movf	??_floorf& (0+255),w,b
  4890  003E16  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4891  003E18  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4892  003E1A  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4893  003E1C  B4D8               	btfsc	status,2,c
  4894  003E1E  D008               	goto	l1316
  4895                           
  4896                           ; BSR set to: 0
  4897  003E20  5183               	movf	floorf@m& (0+255),w,b
  4898  003E22  2789               	addwf	floorf@u& (0+255),f,b
  4899  003E24  5184               	movf	(floorf@m+1)& (0+255),w,b
  4900  003E26  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  4901  003E28  5185               	movf	(floorf@m+2)& (0+255),w,b
  4902  003E2A  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  4903  003E2C  5186               	movf	(floorf@m+3)& (0+255),w,b
  4904  003E2E  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  4905  003E30                     l1316:
  4906                           
  4907                           ; BSR set to: 0
  4908  003E30  1D83               	comf	floorf@m& (0+255),w,b
  4909  003E32  6F7D               	movwf	??_floorf& (0+255),b
  4910  003E34  1D84               	comf	(floorf@m+1)& (0+255),w,b
  4911  003E36  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4912  003E38  1D85               	comf	(floorf@m+2)& (0+255),w,b
  4913  003E3A  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4914  003E3C  1D86               	comf	(floorf@m+3)& (0+255),w,b
  4915  003E3E  6F80               	movwf	(??_floorf+3)& (0+255),b
  4916  003E40  517D               	movf	??_floorf& (0+255),w,b
  4917  003E42  1789               	andwf	floorf@u& (0+255),f,b
  4918  003E44  517E               	movf	(??_floorf+1)& (0+255),w,b
  4919  003E46  178A               	andwf	(floorf@u+1)& (0+255),f,b
  4920  003E48  517F               	movf	(??_floorf+2)& (0+255),w,b
  4921  003E4A  178B               	andwf	(floorf@u+2)& (0+255),f,b
  4922  003E4C  5180               	movf	(??_floorf+3)& (0+255),w,b
  4923  003E4E  178C               	andwf	(floorf@u+3)& (0+255),f,b
  4924  003E50  D03A               	goto	l5578
  4925  003E52                     l5570:
  4926                           
  4927                           ; BSR set to: 0
  4928  003E52  0060  F224  F07D   	movff	floorf@u,??_floorf
  4929  003E58  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  4930  003E5E  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  4931  003E64  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  4932  003E6A  0E20               	movlw	32
  4933  003E6C  D005               	goto	u7110
  4934  003E6E                     u7115:
  4935  003E6E  90D8               	bcf	status,0,c
  4936  003E70  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4937  003E72  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4938  003E74  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4939  003E76  337D               	rrcf	??_floorf& (0+255),f,b
  4940  003E78                     u7110:
  4941  003E78  2EE8               	decfsz	wreg,f,c
  4942  003E7A  D7F9               	goto	u7115
  4943  003E7C  517D               	movf	??_floorf& (0+255),w,b
  4944  003E7E  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4945  003E80  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4946  003E82  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4947  003E84  A4D8               	btfss	status,2,c
  4948  003E86  D008               	goto	l5574
  4949                           
  4950                           ; BSR set to: 0
  4951  003E88  0E00               	movlw	0
  4952  003E8A  6F89               	movwf	floorf@u& (0+255),b
  4953  003E8C  0E00               	movlw	0
  4954  003E8E  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4955  003E90  0E00               	movlw	0
  4956  003E92  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4957  003E94  0E00               	movlw	0
  4958  003E96  D016               	goto	L5
  4959  003E98                     l5574:
  4960                           
  4961                           ; BSR set to: 0
  4962  003E98  90D8               	bcf	status,0,c
  4963  003E9A  3589               	rlcf	floorf@u& (0+255),w,b
  4964  003E9C  6F7D               	movwf	??_floorf& (0+255),b
  4965  003E9E  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  4966  003EA0  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4967  003EA2  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  4968  003EA4  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4969  003EA6  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  4970  003EA8  6F80               	movwf	(??_floorf+3)& (0+255),b
  4971  003EAA  517D               	movf	??_floorf& (0+255),w,b
  4972  003EAC  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4973  003EAE  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4974  003EB0  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4975  003EB2  B4D8               	btfsc	status,2,c
  4976  003EB4  D008               	goto	l5578
  4977                           
  4978                           ; BSR set to: 0
  4979  003EB6  0E00               	movlw	0
  4980  003EB8  6F89               	movwf	floorf@u& (0+255),b
  4981  003EBA  0E00               	movlw	0
  4982  003EBC  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4983  003EBE  0E80               	movlw	128
  4984  003EC0  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4985  003EC2  0EBF               	movlw	191
  4986  003EC4                     L5:
  4987  003EC4  6F8C               	movwf	(floorf@u+3)& (0+255),b
  4988  003EC6                     l5578:
  4989                           
  4990                           ; BSR set to: 0
  4991  003EC6  0060  F224  F079   	movff	floorf@u,?_floorf
  4992  003ECC  0060  F228  F07A   	movff	floorf@u+1,?_floorf+1
  4993  003ED2  0060  F22C  F07B   	movff	floorf@u+2,?_floorf+2
  4994  003ED8  0060  F230  F07C   	movff	floorf@u+3,?_floorf+3
  4995                           
  4996                           ; BSR set to: 0
  4997  003EDE  0012               	return		;funcret
  4998  003EE0                     __end_of_floorf:
  4999                           	opt callstack 0
  5000                           
  5001 ;; *************** function ___fpclassifyf *****************
  5002 ;; Defined at:
  5003 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  x               4    0[BANK0 ] float 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  u               4   10[BANK0 ] struct .
  5008 ;;  e               2    8[BANK0 ] int 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  2    0[BANK0 ] int 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5018 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5019 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5020 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5021 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5022 ;;Total ram usage:       14 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    2
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_efgtoa
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text17
  5033  0043BA                     __ptext17:
  5034                           	opt callstack 0
  5035  0043BA                     ___fpclassifyf:
  5036                           	opt callstack 23
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;incstack = 0
  5040  0043BA  0060  F0EC  F06A   	movff	___fpclassifyf@F463,___fpclassifyf@u
  5041  0043C0  0060  F0F0  F06B   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5042  0043C6  0060  F0F4  F06C   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5043  0043CC  0060  F0F8  F06D   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5044  0043D2  0060  F180  F06A   	movff	___fpclassifyf@x,___fpclassifyf@u
  5045  0043D8  0060  F184  F06B   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5046  0043DE  0060  F188  F06C   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5047  0043E4  0060  F18C  F06D   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5048  0043EA  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  5049  0043F0  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5050  0043F6  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5051  0043FC  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5052  004402  0E18               	movlw	24
  5053  004404  D006               	goto	u6920
  5054  004406                     u6925:
  5055  004406  0100               	movlb	0	; () banked
  5056  004408  90D8               	bcf	status,0,c
  5057  00440A  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5058  00440C  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5059  00440E  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5060  004410  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5061  004412                     u6920:
  5062  004412  2EE8               	decfsz	wreg,f,c
  5063  004414  D7F8               	goto	u6925
  5064  004416  5164               	movf	??___fpclassifyf& (0+255),w,b
  5065  004418  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5066  00441A  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5067  00441C  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5068  00441E  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5069  004420  A4D8               	btfss	status,2,c
  5070  004422  D019               	goto	l5530
  5071                           
  5072                           ; BSR set to: 0
  5073  004424  90D8               	bcf	status,0,c
  5074  004426  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5075  004428  6F64               	movwf	??___fpclassifyf& (0+255),b
  5076  00442A  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5077  00442C  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5078  00442E  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5079  004430  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5080  004432  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5081  004434  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5082  004436  5164               	movf	??___fpclassifyf& (0+255),w,b
  5083  004438  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5084  00443A  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5085  00443C  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5086  00443E  A4D8               	btfss	status,2,c
  5087  004440  D005               	goto	l5526
  5088                           
  5089                           ; BSR set to: 0
  5090  004442  0E00               	movlw	0
  5091  004444  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5092  004446  0E02               	movlw	2
  5093  004448  6F60               	movwf	?___fpclassifyf& (0+255),b
  5094  00444A  0012               	return	
  5095  00444C                     l5526:
  5096                           
  5097                           ; BSR set to: 0
  5098  00444C  0E00               	movlw	0
  5099  00444E  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5100  004450  0E03               	movlw	3
  5101  004452  6F60               	movwf	?___fpclassifyf& (0+255),b
  5102  004454  0012               	return	
  5103  004456                     l5530:
  5104                           
  5105                           ; BSR set to: 0
  5106  004456  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5107  004458  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5108  00445A  A4D8               	btfss	status,2,c
  5109  00445C  D020               	goto	l5536
  5110                           
  5111                           ; BSR set to: 0
  5112  00445E  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  5113  004464  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5114  00446A  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5115  004470  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5116  004476  0E09               	movlw	9
  5117  004478                     u6965:
  5118  004478  90D8               	bcf	status,0,c
  5119  00447A  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5120  00447C  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5121  00447E  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5122  004480  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5123  004482  2EE8               	decfsz	wreg,f,c
  5124  004484  D7F9               	goto	u6965
  5125  004486  5164               	movf	??___fpclassifyf& (0+255),w,b
  5126  004488  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5127  00448A  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5128  00448C  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5129  00448E  A4D8               	btfss	status,2,c
  5130  004490  D002               	goto	u6970
  5131  004492  0E01               	movlw	1
  5132  004494  D001               	goto	u6980
  5133  004496                     u6970:
  5134  004496  0E00               	movlw	0
  5135  004498                     u6980:
  5136  004498  6F60               	movwf	?___fpclassifyf& (0+255),b
  5137  00449A  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5138  00449C  0012               	return	
  5139  00449E                     l5536:
  5140                           
  5141                           ; BSR set to: 0
  5142  00449E  0E00               	movlw	0
  5143  0044A0  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5144  0044A2  0E04               	movlw	4
  5145  0044A4  6F60               	movwf	?___fpclassifyf& (0+255),b
  5146                           
  5147                           ; BSR set to: 0
  5148  0044A6  0012               	return		;funcret
  5149  0044A8                     __end_of___fpclassifyf:
  5150                           	opt callstack 0
  5151                           
  5152 ;; *************** function ___fltol *****************
  5153 ;; Defined at:
  5154 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  f1              4    0[BANK0 ] int 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  exp1            1    9[BANK0 ] unsigned char 
  5159 ;;  sign1           1    8[BANK0 ] unsigned char 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  4    0[BANK0 ] long 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5169 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5170 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5171 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5172 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5173 ;;Total ram usage:       10 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    2
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_efgtoa
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text18
  5184  00464A                     __ptext18:
  5185                           	opt callstack 0
  5186  00464A                     ___fltol:
  5187                           	opt callstack 23
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;incstack = 0
  5191  00464A  0100               	movlb	0	; () banked
  5192  00464C  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5193  00464E  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5194  004650  6F69               	movwf	___fltol@exp1& (0+255),b
  5195  004652  5169               	movf	___fltol@exp1& (0+255),w,b
  5196  004654  A4D8               	btfss	status,2,c
  5197  004656  D009               	goto	l5988
  5198  004658                     u7770:
  5199                           
  5200                           ; BSR set to: 0
  5201  004658  0E00               	movlw	0
  5202  00465A  6F60               	movwf	?___fltol& (0+255),b
  5203  00465C  0E00               	movlw	0
  5204  00465E  6F61               	movwf	(?___fltol+1)& (0+255),b
  5205  004660  0E00               	movlw	0
  5206  004662  6F62               	movwf	(?___fltol+2)& (0+255),b
  5207  004664  0E00               	movlw	0
  5208  004666  6F63               	movwf	(?___fltol+3)& (0+255),b
  5209  004668  0012               	return	
  5210  00466A                     l5988:
  5211                           
  5212                           ; BSR set to: 0
  5213  00466A  0060  F180  F064   	movff	___fltol@f1,??___fltol
  5214  004670  0060  F184  F065   	movff	___fltol@f1+1,??___fltol+1
  5215  004676  0060  F188  F066   	movff	___fltol@f1+2,??___fltol+2
  5216  00467C  0060  F18C  F067   	movff	___fltol@f1+3,??___fltol+3
  5217  004682  0E20               	movlw	32
  5218  004684  D005               	goto	u7780
  5219  004686                     u7785:
  5220  004686  90D8               	bcf	status,0,c
  5221  004688  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  5222  00468A  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  5223  00468C  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  5224  00468E  3364               	rrcf	??___fltol& (0+255),f,b
  5225  004690                     u7780:
  5226  004690  2EE8               	decfsz	wreg,f,c
  5227  004692  D7F9               	goto	u7785
  5228  004694  5164               	movf	??___fltol& (0+255),w,b
  5229  004696  6F68               	movwf	___fltol@sign1& (0+255),b
  5230                           
  5231                           ; BSR set to: 0
  5232  004698  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  5233                           
  5234                           ; BSR set to: 0
  5235  00469A  0EFF               	movlw	255
  5236  00469C  1760               	andwf	___fltol@f1& (0+255),f,b
  5237  00469E  0EFF               	movlw	255
  5238  0046A0  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  5239  0046A2  0EFF               	movlw	255
  5240  0046A4  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  5241  0046A6  0E00               	movlw	0
  5242  0046A8  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  5243                           
  5244                           ; BSR set to: 0
  5245  0046AA  0E96               	movlw	150
  5246  0046AC  5F69               	subwf	___fltol@exp1& (0+255),f,b
  5247                           
  5248                           ; BSR set to: 0
  5249  0046AE  AF69               	btfss	___fltol@exp1& (0+255),7,b
  5250  0046B0  D00D               	goto	l6008
  5251                           
  5252                           ; BSR set to: 0
  5253  0046B2  5169               	movf	___fltol@exp1& (0+255),w,b
  5254  0046B4  0A80               	xorlw	128
  5255  0046B6  0F97               	addlw	151
  5256  0046B8  A0D8               	btfss	status,0,c
  5257  0046BA  D7CE               	goto	u7770
  5258  0046BC                     l6004:
  5259                           
  5260                           ; BSR set to: 0
  5261  0046BC  90D8               	bcf	status,0,c
  5262  0046BE  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5263  0046C0  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5264  0046C2  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5265  0046C4  3360               	rrcf	___fltol@f1& (0+255),f,b
  5266                           
  5267                           ; BSR set to: 0
  5268  0046C6  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  5269  0046C8  D7F9               	goto	l6004
  5270  0046CA  D00D               	goto	u7820
  5271  0046CC                     l6008:
  5272                           
  5273                           ; BSR set to: 0
  5274  0046CC  0E1F               	movlw	31
  5275  0046CE  6569               	cpfsgt	___fltol@exp1& (0+255),b
  5276  0046D0  D007               	goto	l6016
  5277  0046D2  D7C2               	goto	u7770
  5278  0046D4                     l6014:
  5279                           
  5280                           ; BSR set to: 0
  5281  0046D4  90D8               	bcf	status,0,c
  5282  0046D6  3760               	rlcf	___fltol@f1& (0+255),f,b
  5283  0046D8  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5284  0046DA  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5285  0046DC  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5286  0046DE  0769               	decf	___fltol@exp1& (0+255),f,b
  5287  0046E0                     l6016:
  5288                           
  5289                           ; BSR set to: 0
  5290  0046E0  5169               	movf	___fltol@exp1& (0+255),w,b
  5291  0046E2  A4D8               	btfss	status,2,c
  5292  0046E4  D7F7               	goto	l6014
  5293  0046E6                     u7820:
  5294                           
  5295                           ; BSR set to: 0
  5296  0046E6  5168               	movf	___fltol@sign1& (0+255),w,b
  5297  0046E8  B4D8               	btfsc	status,2,c
  5298  0046EA  D008               	goto	l6022
  5299                           
  5300                           ; BSR set to: 0
  5301  0046EC  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  5302  0046EE  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  5303  0046F0  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  5304  0046F2  6D60               	negf	___fltol@f1& (0+255),b
  5305  0046F4  0E00               	movlw	0
  5306  0046F6  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5307  0046F8  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5308  0046FA  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5309  0046FC                     l6022:
  5310                           
  5311                           ; BSR set to: 0
  5312  0046FC  0060  F180  F060   	movff	___fltol@f1,?___fltol
  5313  004702  0060  F184  F061   	movff	___fltol@f1+1,?___fltol+1
  5314  004708  0060  F188  F062   	movff	___fltol@f1+2,?___fltol+2
  5315  00470E  0060  F18C  F063   	movff	___fltol@f1+3,?___fltol+3
  5316                           
  5317                           ; BSR set to: 0
  5318  004714  0012               	return		;funcret
  5319  004716                     __end_of___fltol:
  5320                           	opt callstack 0
  5321                           
  5322 ;; *************** function ___flsub *****************
  5323 ;; Defined at:
  5324 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;  b               4   25[BANK0 ] long 
  5327 ;;  a               4   29[BANK0 ] long 
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;		None
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  4   25[BANK0 ] long 
  5332 ;; Registers used:
  5333 ;;		wreg, status,2, status,0, cstack
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5339 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5342 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5343 ;;Total ram usage:        8 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; Hardware stack levels required when called:    3
  5346 ;; This function calls:
  5347 ;;		___fladd
  5348 ;; This function is called by:
  5349 ;;		_efgtoa
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text19
  5354  004EB2                     __ptext19:
  5355                           	opt callstack 0
  5356  004EB2                     ___flsub:
  5357                           	opt callstack 22
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;incstack = 0
  5361  004EB2  0E00               	movlw	0
  5362  004EB4  0100               	movlb	0	; () banked
  5363  004EB6  1B7D               	xorwf	___flsub@a& (0+255),f,b
  5364  004EB8  0E00               	movlw	0
  5365  004EBA  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  5366  004EBC  0E00               	movlw	0
  5367  004EBE  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  5368  004EC0  0E80               	movlw	128
  5369  004EC2  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  5370                           
  5371                           ; BSR set to: 0
  5372  004EC4  0060  F1E4  F060   	movff	___flsub@b,___fladd@b
  5373  004ECA  0060  F1E8  F061   	movff	___flsub@b+1,___fladd@b+1
  5374  004ED0  0060  F1EC  F062   	movff	___flsub@b+2,___fladd@b+2
  5375  004ED6  0060  F1F0  F063   	movff	___flsub@b+3,___fladd@b+3
  5376  004EDC  0060  F1F4  F064   	movff	___flsub@a,___fladd@a
  5377  004EE2  0060  F1F8  F065   	movff	___flsub@a+1,___fladd@a+1
  5378  004EE8  0060  F1FC  F066   	movff	___flsub@a+2,___fladd@a+2
  5379  004EEE  0060  F200  F067   	movff	___flsub@a+3,___fladd@a+3
  5380  004EF4  EC76  F01B         	call	___fladd	;wreg free
  5381  004EF8  0060  F180  F079   	movff	?___fladd,?___flsub
  5382  004EFE  0060  F184  F07A   	movff	?___fladd+1,?___flsub+1
  5383  004F04  0060  F188  F07B   	movff	?___fladd+2,?___flsub+2
  5384  004F0A  0060  F18C  F07C   	movff	?___fladd+3,?___flsub+3
  5385  004F10  0012               	return		;funcret
  5386  004F12                     __end_of___flsub:
  5387                           	opt callstack 0
  5388                           
  5389 ;; *************** function ___fladd *****************
  5390 ;; Defined at:
  5391 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  b               4    0[BANK0 ] long 
  5394 ;;  a               4    4[BANK0 ] long 
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  grs             1   15[BANK0 ] unsigned char 
  5397 ;;  bexp            1   14[BANK0 ] unsigned char 
  5398 ;;  aexp            1   13[BANK0 ] unsigned char 
  5399 ;;  signs           1   12[BANK0 ] unsigned char 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  4    0[BANK0 ] unsigned char 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5409 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5410 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5411 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5412 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5413 ;;Total ram usage:       16 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    2
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_efgtoa
  5420 ;;		___flsub
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text20
  5425  0036EC                     __ptext20:
  5426                           	opt callstack 0
  5427  0036EC                     ___fladd:
  5428                           	opt callstack 22
  5429                           
  5430                           ;incstack = 0
  5431  0036EC  0100               	movlb	0	; () banked
  5432  0036EE  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5433  0036F0  0B80               	andlw	128
  5434  0036F2  6F6C               	movwf	___fladd@signs& (0+255),b
  5435  0036F4  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5436  0036F6  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  5437  0036F8  6F6E               	movwf	___fladd@bexp& (0+255),b
  5438                           
  5439                           ; BSR set to: 0
  5440  0036FA  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
  5441                           
  5442                           ; BSR set to: 0
  5443  0036FC  816E               	bsf	___fladd@bexp& (0+255),0,b
  5444                           
  5445                           ; BSR set to: 0
  5446  0036FE  516E               	movf	___fladd@bexp& (0+255),w,b
  5447  003700  B4D8               	btfsc	status,2,c
  5448  003702  D00D               	goto	l5310
  5449                           
  5450                           ; BSR set to: 0
  5451  003704  296E               	incf	___fladd@bexp& (0+255),w,b
  5452  003706  A4D8               	btfss	status,2,c
  5453  003708  D008               	goto	l5306
  5454                           
  5455                           ; BSR set to: 0
  5456  00370A  0E00               	movlw	0
  5457  00370C  6F60               	movwf	___fladd@b& (0+255),b
  5458  00370E  0E00               	movlw	0
  5459  003710  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5460  003712  0E00               	movlw	0
  5461  003714  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5462  003716  0E00               	movlw	0
  5463  003718  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5464  00371A                     l5306:
  5465                           
  5466                           ; BSR set to: 0
  5467  00371A  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5468  00371C  D006               	goto	L6
  5469  00371E                     l5310:
  5470                           
  5471                           ; BSR set to: 0
  5472  00371E  0E00               	movlw	0
  5473  003720  6F60               	movwf	___fladd@b& (0+255),b
  5474  003722  0E00               	movlw	0
  5475  003724  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5476  003726  0E00               	movlw	0
  5477  003728  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5478  00372A                     L6:
  5479  00372A  0E00               	movlw	0
  5480  00372C  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5481                           
  5482                           ; BSR set to: 0
  5483  00372E  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5484  003730  0B80               	andlw	128
  5485  003732  6F6D               	movwf	___fladd@aexp& (0+255),b
  5486                           
  5487                           ; BSR set to: 0
  5488  003734  516C               	movf	___fladd@signs& (0+255),w,b
  5489  003736  196D               	xorwf	___fladd@aexp& (0+255),w,b
  5490  003738  A4D8               	btfss	status,2,c
  5491                           
  5492                           ; BSR set to: 0
  5493  00373A  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5494                           
  5495                           ; BSR set to: 0
  5496  00373C  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5497  00373E  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5498  003740  6F6D               	movwf	___fladd@aexp& (0+255),b
  5499                           
  5500                           ; BSR set to: 0
  5501  003742  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
  5502                           
  5503                           ; BSR set to: 0
  5504  003744  816D               	bsf	___fladd@aexp& (0+255),0,b
  5505                           
  5506                           ; BSR set to: 0
  5507  003746  516D               	movf	___fladd@aexp& (0+255),w,b
  5508  003748  B4D8               	btfsc	status,2,c
  5509  00374A  D00D               	goto	l5334
  5510                           
  5511                           ; BSR set to: 0
  5512  00374C  296D               	incf	___fladd@aexp& (0+255),w,b
  5513  00374E  A4D8               	btfss	status,2,c
  5514  003750  D008               	goto	l5330
  5515                           
  5516                           ; BSR set to: 0
  5517  003752  0E00               	movlw	0
  5518  003754  6F64               	movwf	___fladd@a& (0+255),b
  5519  003756  0E00               	movlw	0
  5520  003758  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5521  00375A  0E00               	movlw	0
  5522  00375C  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5523  00375E  0E00               	movlw	0
  5524  003760  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5525  003762                     l5330:
  5526                           
  5527                           ; BSR set to: 0
  5528  003762  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5529  003764  D006               	goto	L7
  5530  003766                     l5334:
  5531                           
  5532                           ; BSR set to: 0
  5533  003766  0E00               	movlw	0
  5534  003768  6F64               	movwf	___fladd@a& (0+255),b
  5535  00376A  0E00               	movlw	0
  5536  00376C  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5537  00376E  0E00               	movlw	0
  5538  003770  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5539  003772                     L7:
  5540  003772  0E00               	movlw	0
  5541  003774  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5542                           
  5543                           ; BSR set to: 0
  5544  003776  516E               	movf	___fladd@bexp& (0+255),w,b
  5545  003778  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5546  00377A  B0D8               	btfsc	status,0,c
  5547  00377C  D031               	goto	l5372
  5548                           
  5549                           ; BSR set to: 0
  5550  00377E  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5551  003780  D002               	goto	l5342
  5552                           
  5553                           ; BSR set to: 0
  5554  003782  0E80               	movlw	128
  5555  003784  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5556  003786                     l5342:
  5557                           
  5558                           ; BSR set to: 0
  5559  003786  0060  F1B8  F06F   	movff	___fladd@bexp,___fladd@grs
  5560                           
  5561                           ; BSR set to: 0
  5562  00378C  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  5563                           
  5564                           ; BSR set to: 0
  5565  003792  0060  F1BC  F06D   	movff	___fladd@grs,___fladd@aexp
  5566                           
  5567                           ; BSR set to: 0
  5568  003798  0060  F180  F06F   	movff	___fladd@b,___fladd@grs
  5569                           
  5570                           ; BSR set to: 0
  5571  00379E  0060  F190  F060   	movff	___fladd@a,___fladd@b
  5572                           
  5573                           ; BSR set to: 0
  5574  0037A4  0060  F1BC  F064   	movff	___fladd@grs,___fladd@a
  5575                           
  5576                           ; BSR set to: 0
  5577  0037AA  0060  F184  F06F   	movff	___fladd@b+1,___fladd@grs
  5578                           
  5579                           ; BSR set to: 0
  5580  0037B0  0060  F194  F061   	movff	___fladd@a+1,___fladd@b+1
  5581                           
  5582                           ; BSR set to: 0
  5583  0037B6  0060  F1BC  F065   	movff	___fladd@grs,___fladd@a+1
  5584                           
  5585                           ; BSR set to: 0
  5586  0037BC  0060  F188  F06F   	movff	___fladd@b+2,___fladd@grs
  5587                           
  5588                           ; BSR set to: 0
  5589  0037C2  0060  F198  F062   	movff	___fladd@a+2,___fladd@b+2
  5590                           
  5591                           ; BSR set to: 0
  5592  0037C8  0060  F1BC  F066   	movff	___fladd@grs,___fladd@a+2
  5593                           
  5594                           ; BSR set to: 0
  5595  0037CE  0060  F18C  F06F   	movff	___fladd@b+3,___fladd@grs
  5596                           
  5597                           ; BSR set to: 0
  5598  0037D4  0060  F19C  F063   	movff	___fladd@a+3,___fladd@b+3
  5599                           
  5600                           ; BSR set to: 0
  5601  0037DA  0060  F1BC  F067   	movff	___fladd@grs,___fladd@a+3
  5602  0037E0                     l5372:
  5603                           
  5604                           ; BSR set to: 0
  5605  0037E0  0E00               	movlw	0
  5606  0037E2  6F6F               	movwf	___fladd@grs& (0+255),b
  5607                           
  5608                           ; BSR set to: 0
  5609  0037E4  516E               	movf	___fladd@bexp& (0+255),w,b
  5610  0037E6  0060  F1B4  F068   	movff	___fladd@aexp,??___fladd
  5611  0037EC  6B69               	clrf	(??___fladd+1)& (0+255),b
  5612  0037EE  5F68               	subwf	??___fladd& (0+255),f,b
  5613  0037F0  0E00               	movlw	0
  5614  0037F2  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5615  0037F4  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5616  0037F6  D02D               	goto	l1154
  5617  0037F8  5169               	movf	(??___fladd+1)& (0+255),w,b
  5618  0037FA  E104               	bnz	u6580
  5619  0037FC  0E1A               	movlw	26
  5620  0037FE  5D68               	subwf	??___fladd& (0+255),w,b
  5621  003800  A0D8               	btfss	status,0,c
  5622  003802  D027               	goto	l1154
  5623  003804                     u6580:
  5624                           
  5625                           ; BSR set to: 0
  5626  003804  5160               	movf	___fladd@b& (0+255),w,b
  5627  003806  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5628  003808  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5629  00380A  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5630  00380C  B4D8               	btfsc	status,2,c
  5631  00380E  D002               	goto	u6590
  5632  003810  0E01               	movlw	1
  5633  003812  D001               	goto	u6600
  5634  003814                     u6590:
  5635  003814  0E00               	movlw	0
  5636  003816                     u6600:
  5637  003816  6F6F               	movwf	___fladd@grs& (0+255),b
  5638                           
  5639                           ; BSR set to: 0
  5640  003818  0E00               	movlw	0
  5641  00381A  6F60               	movwf	___fladd@b& (0+255),b
  5642  00381C  0E00               	movlw	0
  5643  00381E  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5644  003820  0E00               	movlw	0
  5645  003822  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5646  003824  0E00               	movlw	0
  5647  003826  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5648                           
  5649                           ; BSR set to: 0
  5650  003828  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  5651  00382E  D015               	goto	u6630
  5652  003830                     l1155:
  5653                           
  5654                           ; BSR set to: 0
  5655  003830  A16F               	btfss	___fladd@grs& (0+255),0,b
  5656  003832  D005               	goto	l5384
  5657                           
  5658                           ; BSR set to: 0
  5659  003834  90D8               	bcf	status,0,c
  5660  003836  316F               	rrcf	___fladd@grs& (0+255),w,b
  5661  003838  0901               	iorlw	1
  5662  00383A  6F6F               	movwf	___fladd@grs& (0+255),b
  5663  00383C  D002               	goto	l5386
  5664  00383E                     l5384:
  5665                           
  5666                           ; BSR set to: 0
  5667  00383E  90D8               	bcf	status,0,c
  5668  003840  336F               	rrcf	___fladd@grs& (0+255),f,b
  5669  003842                     l5386:
  5670                           
  5671                           ; BSR set to: 0
  5672  003842  B160               	btfsc	___fladd@b& (0+255),0,b
  5673                           
  5674                           ; BSR set to: 0
  5675  003844  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5676                           
  5677                           ; BSR set to: 0
  5678  003846  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5679  003848  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5680  00384A  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5681  00384C  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5682  00384E  3360               	rrcf	___fladd@b& (0+255),f,b
  5683                           
  5684                           ; BSR set to: 0
  5685  003850  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5686  003852                     l1154:
  5687                           
  5688                           ; BSR set to: 0
  5689  003852  516D               	movf	___fladd@aexp& (0+255),w,b
  5690  003854  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5691  003856  A0D8               	btfss	status,0,c
  5692  003858  D7EB               	goto	l1155
  5693  00385A                     u6630:
  5694                           
  5695                           ; BSR set to: 0
  5696  00385A  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5697  00385C  D028               	goto	l5418
  5698                           
  5699                           ; BSR set to: 0
  5700  00385E  516E               	movf	___fladd@bexp& (0+255),w,b
  5701  003860  A4D8               	btfss	status,2,c
  5702  003862  D009               	goto	l5400
  5703                           
  5704                           ; BSR set to: 0
  5705  003864  0E00               	movlw	0
  5706  003866  6F60               	movwf	?___fladd& (0+255),b
  5707  003868  0E00               	movlw	0
  5708  00386A  6F61               	movwf	(?___fladd+1)& (0+255),b
  5709  00386C  0E00               	movlw	0
  5710  00386E  6F62               	movwf	(?___fladd+2)& (0+255),b
  5711  003870  0E00               	movlw	0
  5712  003872  6F63               	movwf	(?___fladd+3)& (0+255),b
  5713  003874  0012               	return	
  5714  003876                     l5400:
  5715                           
  5716                           ; BSR set to: 0
  5717  003876  5164               	movf	___fladd@a& (0+255),w,b
  5718  003878  2760               	addwf	___fladd@b& (0+255),f,b
  5719  00387A  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5720  00387C  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5721  00387E  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5722  003880  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5723  003882  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5724  003884  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5725                           
  5726                           ; BSR set to: 0
  5727  003886  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5728  003888  D071               	goto	u6760
  5729                           
  5730                           ; BSR set to: 0
  5731  00388A  A16F               	btfss	___fladd@grs& (0+255),0,b
  5732  00388C  D005               	goto	l5408
  5733                           
  5734                           ; BSR set to: 0
  5735  00388E  90D8               	bcf	status,0,c
  5736  003890  316F               	rrcf	___fladd@grs& (0+255),w,b
  5737  003892  0901               	iorlw	1
  5738  003894  6F6F               	movwf	___fladd@grs& (0+255),b
  5739  003896  D002               	goto	l5410
  5740  003898                     l5408:
  5741                           
  5742                           ; BSR set to: 0
  5743  003898  90D8               	bcf	status,0,c
  5744  00389A  336F               	rrcf	___fladd@grs& (0+255),f,b
  5745  00389C                     l5410:
  5746                           
  5747                           ; BSR set to: 0
  5748  00389C  B160               	btfsc	___fladd@b& (0+255),0,b
  5749                           
  5750                           ; BSR set to: 0
  5751  00389E  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5752                           
  5753                           ; BSR set to: 0
  5754  0038A0  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5755  0038A2  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5756  0038A4  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5757  0038A6  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5758  0038A8  3360               	rrcf	___fladd@b& (0+255),f,b
  5759                           
  5760                           ; BSR set to: 0
  5761  0038AA  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5762  0038AC  D05F               	goto	u6760
  5763  0038AE                     l5418:
  5764                           
  5765                           ; BSR set to: 0
  5766  0038AE  5164               	movf	___fladd@a& (0+255),w,b
  5767  0038B0  5D60               	subwf	___fladd@b& (0+255),w,b
  5768  0038B2  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5769  0038B4  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5770  0038B6  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5771  0038B8  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5772  0038BA  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5773  0038BC  0A80               	xorlw	128
  5774  0038BE  6F68               	movwf	??___fladd& (0+255),b
  5775  0038C0  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5776  0038C2  0A80               	xorlw	128
  5777  0038C4  5968               	subwfb	??___fladd& (0+255),w,b
  5778  0038C6  B0D8               	btfsc	status,0,c
  5779  0038C8  D025               	goto	l5428
  5780                           
  5781                           ; BSR set to: 0
  5782  0038CA  5160               	movf	___fladd@b& (0+255),w,b
  5783  0038CC  5D64               	subwf	___fladd@a& (0+255),w,b
  5784  0038CE  6F68               	movwf	??___fladd& (0+255),b
  5785  0038D0  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5786  0038D2  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5787  0038D4  6F69               	movwf	(??___fladd+1)& (0+255),b
  5788  0038D6  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5789  0038D8  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5790  0038DA  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5791  0038DC  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5792  0038DE  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5793  0038E0  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5794  0038E2  0EFF               	movlw	255
  5795  0038E4  2568               	addwf	??___fladd& (0+255),w,b
  5796  0038E6  6F60               	movwf	___fladd@b& (0+255),b
  5797  0038E8  0EFF               	movlw	255
  5798  0038EA  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5799  0038EC  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5800  0038EE  0EFF               	movlw	255
  5801  0038F0  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5802  0038F2  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5803  0038F4  0EFF               	movlw	255
  5804  0038F6  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5805  0038F8  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5806  0038FA  0E80               	movlw	128
  5807  0038FC  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5808                           
  5809                           ; BSR set to: 0
  5810  0038FE  6D6F               	negf	___fladd@grs& (0+255),b
  5811                           
  5812                           ; BSR set to: 0
  5813  003900  516F               	movf	___fladd@grs& (0+255),w,b
  5814  003902  A4D8               	btfss	status,2,c
  5815  003904  D00F               	goto	l1170
  5816                           
  5817                           ; BSR set to: 0
  5818  003906  0E01               	movlw	1
  5819  003908  2760               	addwf	___fladd@b& (0+255),f,b
  5820  00390A  0E00               	movlw	0
  5821  00390C  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5822  00390E  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5823  003910  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5824  003912  D008               	goto	l1170
  5825  003914                     l5428:
  5826                           
  5827                           ; BSR set to: 0
  5828  003914  5164               	movf	___fladd@a& (0+255),w,b
  5829  003916  5F60               	subwf	___fladd@b& (0+255),f,b
  5830  003918  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5831  00391A  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5832  00391C  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5833  00391E  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5834  003920  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5835  003922  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5836  003924                     l1170:
  5837                           
  5838                           ; BSR set to: 0
  5839  003924  5160               	movf	___fladd@b& (0+255),w,b
  5840  003926  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5841  003928  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5842  00392A  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5843  00392C  A4D8               	btfss	status,2,c
  5844  00392E  D01C               	goto	l5452
  5845                           
  5846                           ; BSR set to: 0
  5847  003930  516F               	movf	___fladd@grs& (0+255),w,b
  5848  003932  A4D8               	btfss	status,2,c
  5849  003934  D019               	goto	l5452
  5850                           
  5851                           ; BSR set to: 0
  5852  003936  0E00               	movlw	0
  5853  003938  6F60               	movwf	?___fladd& (0+255),b
  5854  00393A  0E00               	movlw	0
  5855  00393C  6F61               	movwf	(?___fladd+1)& (0+255),b
  5856  00393E  0E00               	movlw	0
  5857  003940  6F62               	movwf	(?___fladd+2)& (0+255),b
  5858  003942  0E00               	movlw	0
  5859  003944  6F63               	movwf	(?___fladd+3)& (0+255),b
  5860  003946  0012               	return	
  5861  003948                     l5436:
  5862                           
  5863                           ; BSR set to: 0
  5864  003948  90D8               	bcf	status,0,c
  5865  00394A  3760               	rlcf	___fladd@b& (0+255),f,b
  5866  00394C  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5867  00394E  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5868  003950  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5869                           
  5870                           ; BSR set to: 0
  5871  003952  BF6F               	btfsc	___fladd@grs& (0+255),7,b
  5872                           
  5873                           ; BSR set to: 0
  5874  003954  8160               	bsf	___fladd@b& (0+255),0,b
  5875                           
  5876                           ; BSR set to: 0
  5877  003956  A16F               	btfss	___fladd@grs& (0+255),0,b
  5878  003958  D002               	goto	l5446
  5879                           
  5880                           ; BSR set to: 0
  5881  00395A  80D8               	bsf	status,0,c
  5882  00395C  D001               	goto	L8
  5883  00395E                     l5446:
  5884                           
  5885                           ; BSR set to: 0
  5886  00395E  90D8               	bcf	status,0,c
  5887  003960                     L8:
  5888  003960  376F               	rlcf	___fladd@grs& (0+255),f,b
  5889                           
  5890                           ; BSR set to: 0
  5891  003962  516E               	movf	___fladd@bexp& (0+255),w,b
  5892  003964  A4D8               	btfss	status,2,c
  5893                           
  5894                           ; BSR set to: 0
  5895  003966  076E               	decf	___fladd@bexp& (0+255),f,b
  5896  003968                     l5452:
  5897                           
  5898                           ; BSR set to: 0
  5899  003968  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5900  00396A  D7EE               	goto	l5436
  5901  00396C                     u6760:
  5902                           
  5903                           ; BSR set to: 0
  5904  00396C  0E00               	movlw	0
  5905  00396E  6F6D               	movwf	___fladd@aexp& (0+255),b
  5906                           
  5907                           ; BSR set to: 0
  5908  003970  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5909  003972  D00C               	goto	l1179
  5910                           
  5911                           ; BSR set to: 0
  5912  003974  0060  F1BC  F068   	movff	___fladd@grs,??___fladd
  5913  00397A  0E7F               	movlw	127
  5914  00397C  1768               	andwf	??___fladd& (0+255),f,b
  5915  00397E  B4D8               	btfsc	status,2,c
  5916  003980  D003               	goto	l1180
  5917  003982                     u6780:
  5918                           
  5919                           ; BSR set to: 0
  5920  003982  0E01               	movlw	1
  5921  003984  6F6D               	movwf	___fladd@aexp& (0+255),b
  5922  003986  D002               	goto	l1179
  5923  003988                     l1180:
  5924                           
  5925                           ; BSR set to: 0
  5926  003988  B160               	btfsc	___fladd@b& (0+255),0,b
  5927  00398A  D7FB               	goto	u6780
  5928  00398C                     l1179:
  5929                           
  5930                           ; BSR set to: 0
  5931  00398C  516D               	movf	___fladd@aexp& (0+255),w,b
  5932  00398E  B4D8               	btfsc	status,2,c
  5933  003990  D028               	goto	l5472
  5934                           
  5935                           ; BSR set to: 0
  5936  003992  0E01               	movlw	1
  5937  003994  2760               	addwf	___fladd@b& (0+255),f,b
  5938  003996  0E00               	movlw	0
  5939  003998  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5940  00399A  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5941  00399C  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5942                           
  5943                           ; BSR set to: 0
  5944  00399E  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5945  0039A0  D020               	goto	l5472
  5946                           
  5947                           ; BSR set to: 0
  5948  0039A2  0060  F180  F068   	movff	___fladd@b,??___fladd
  5949  0039A8  0060  F184  F069   	movff	___fladd@b+1,??___fladd+1
  5950  0039AE  0060  F188  F06A   	movff	___fladd@b+2,??___fladd+2
  5951  0039B4  0060  F18C  F06B   	movff	___fladd@b+3,??___fladd+3
  5952  0039BA  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  5953  0039BC  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  5954  0039BE  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  5955  0039C0  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  5956  0039C2  3368               	rrcf	??___fladd& (0+255),f,b
  5957  0039C4  0060  F1A0  F060   	movff	??___fladd,___fladd@b
  5958  0039CA  0060  F1A4  F061   	movff	??___fladd+1,___fladd@b+1
  5959  0039D0  0060  F1A8  F062   	movff	??___fladd+2,___fladd@b+2
  5960  0039D6  0060  F1AC  F063   	movff	??___fladd+3,___fladd@b+3
  5961  0039DC  296E               	incf	___fladd@bexp& (0+255),w,b
  5962  0039DE  A4D8               	btfss	status,2,c
  5963                           
  5964                           ; BSR set to: 0
  5965  0039E0  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5966  0039E2                     l5472:
  5967                           
  5968                           ; BSR set to: 0
  5969  0039E2  296E               	incf	___fladd@bexp& (0+255),w,b
  5970  0039E4  B4D8               	btfsc	status,2,c
  5971  0039E6  D003               	goto	u6840
  5972                           
  5973                           ; BSR set to: 0
  5974  0039E8  516E               	movf	___fladd@bexp& (0+255),w,b
  5975  0039EA  A4D8               	btfss	status,2,c
  5976  0039EC  D00D               	goto	l5480
  5977  0039EE                     u6840:
  5978                           
  5979                           ; BSR set to: 0
  5980  0039EE  0E00               	movlw	0
  5981  0039F0  6F60               	movwf	___fladd@b& (0+255),b
  5982  0039F2  0E00               	movlw	0
  5983  0039F4  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5984  0039F6  0E00               	movlw	0
  5985  0039F8  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5986  0039FA  0E00               	movlw	0
  5987  0039FC  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5988  0039FE  516E               	movf	___fladd@bexp& (0+255),w,b
  5989  003A00  A4D8               	btfss	status,2,c
  5990  003A02  D002               	goto	l5480
  5991                           
  5992                           ; BSR set to: 0
  5993  003A04  0E00               	movlw	0
  5994  003A06  6F6C               	movwf	___fladd@signs& (0+255),b
  5995  003A08                     l5480:
  5996                           
  5997                           ; BSR set to: 0
  5998  003A08  A16E               	btfss	___fladd@bexp& (0+255),0,b
  5999  003A0A  D002               	goto	l5484
  6000                           
  6001                           ; BSR set to: 0
  6002  003A0C  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  6003  003A0E  D001               	goto	l5486
  6004  003A10                     l5484:
  6005                           
  6006                           ; BSR set to: 0
  6007  003A10  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  6008  003A12                     l5486:
  6009                           
  6010                           ; BSR set to: 0
  6011  003A12  90D8               	bcf	status,0,c
  6012  003A14  316E               	rrcf	___fladd@bexp& (0+255),w,b
  6013  003A16  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6014                           
  6015                           ; BSR set to: 0
  6016  003A18  BF6C               	btfsc	___fladd@signs& (0+255),7,b
  6017                           
  6018                           ; BSR set to: 0
  6019  003A1A  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  6020                           
  6021                           ; BSR set to: 0
  6022  003A1C  0060  F180  F060   	movff	___fladd@b,?___fladd
  6023  003A22  0060  F184  F061   	movff	___fladd@b+1,?___fladd+1
  6024  003A28  0060  F188  F062   	movff	___fladd@b+2,?___fladd+2
  6025  003A2E  0060  F18C  F063   	movff	___fladd@b+3,?___fladd+3
  6026                           
  6027                           ; BSR set to: 0
  6028  003A34  0012               	return		;funcret
  6029  003A36                     __end_of___fladd:
  6030                           	opt callstack 0
  6031                           
  6032 ;; *************** function ___flneg *****************
  6033 ;; Defined at:
  6034 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  f1              4    0[BANK0 ] unsigned char 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;		None
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  4    0[BANK0 ] unsigned char 
  6041 ;; Registers used:
  6042 ;;		wreg, status,2, status,0
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6048 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6051 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6052 ;;Total ram usage:        4 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    2
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_efgtoa
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text21
  6063  0050BA                     __ptext21:
  6064                           	opt callstack 0
  6065  0050BA                     ___flneg:
  6066                           	opt callstack 23
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;incstack = 0
  6070  0050BA  0100               	movlb	0	; () banked
  6071  0050BC  5160               	movf	___flneg@f1& (0+255),w,b
  6072  0050BE  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6073  0050C0  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6074  0050C2  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6075  0050C4  B4D8               	btfsc	status,2,c
  6076  0050C6  D008               	goto	l5978
  6077                           
  6078                           ; BSR set to: 0
  6079  0050C8  0E00               	movlw	0
  6080  0050CA  1B60               	xorwf	___flneg@f1& (0+255),f,b
  6081  0050CC  0E00               	movlw	0
  6082  0050CE  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6083  0050D0  0E00               	movlw	0
  6084  0050D2  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6085  0050D4  0E80               	movlw	128
  6086  0050D6  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6087  0050D8                     l5978:
  6088                           
  6089                           ; BSR set to: 0
  6090  0050D8  0060  F180  F060   	movff	___flneg@f1,?___flneg
  6091  0050DE  0060  F184  F061   	movff	___flneg@f1+1,?___flneg+1
  6092  0050E4  0060  F188  F062   	movff	___flneg@f1+2,?___flneg+2
  6093  0050EA  0060  F18C  F063   	movff	___flneg@f1+3,?___flneg+3
  6094                           
  6095                           ; BSR set to: 0
  6096  0050F0  0012               	return		;funcret
  6097  0050F2                     __end_of___flneg:
  6098                           	opt callstack 0
  6099                           
  6100 ;; *************** function ___flmul *****************
  6101 ;; Defined at:
  6102 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  b               4    0[BANK0 ] unsigned char 
  6105 ;;  a               4    4[BANK0 ] unsigned char 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;  prod            4   19[BANK0 ] struct .
  6108 ;;  grs             4   14[BANK0 ] unsigned long 
  6109 ;;  temp            2   23[BANK0 ] struct .
  6110 ;;  bexp            1   18[BANK0 ] unsigned char 
  6111 ;;  aexp            1   13[BANK0 ] unsigned char 
  6112 ;;  sign            1   12[BANK0 ] unsigned char 
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  4    0[BANK0 ] unsigned char 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0, prodl, prodh
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6122 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6123 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6124 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6125 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6126 ;;Total ram usage:       25 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    2
  6129 ;; This function calls:
  6130 ;;		Nothing
  6131 ;; This function is called by:
  6132 ;;		_efgtoa
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           	psect	text22
  6137  002BF0                     __ptext22:
  6138                           	opt callstack 0
  6139  002BF0                     ___flmul:
  6140                           	opt callstack 23
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;incstack = 0
  6144  002BF0  0100               	movlb	0	; () banked
  6145  002BF2  5163               	movf	(___flmul@b+3)& (0+255),w,b
  6146  002BF4  0B80               	andlw	128
  6147  002BF6  6F6C               	movwf	___flmul@sign& (0+255),b
  6148  002BF8  5163               	movf	(___flmul@b+3)& (0+255),w,b
  6149  002BFA  2563               	addwf	(___flmul@b+3)& (0+255),w,b
  6150  002BFC  6F72               	movwf	___flmul@bexp& (0+255),b
  6151                           
  6152                           ; BSR set to: 0
  6153  002BFE  BF62               	btfsc	(___flmul@b+2)& (0+255),7,b
  6154                           
  6155                           ; BSR set to: 0
  6156  002C00  8172               	bsf	___flmul@bexp& (0+255),0,b
  6157                           
  6158                           ; BSR set to: 0
  6159  002C02  5172               	movf	___flmul@bexp& (0+255),w,b
  6160  002C04  B4D8               	btfsc	status,2,c
  6161  002C06  D00D               	goto	l5734
  6162                           
  6163                           ; BSR set to: 0
  6164  002C08  2972               	incf	___flmul@bexp& (0+255),w,b
  6165  002C0A  A4D8               	btfss	status,2,c
  6166  002C0C  D008               	goto	l5732
  6167                           
  6168                           ; BSR set to: 0
  6169  002C0E  0E00               	movlw	0
  6170  002C10  6F60               	movwf	___flmul@b& (0+255),b
  6171  002C12  0E00               	movlw	0
  6172  002C14  6F61               	movwf	(___flmul@b+1)& (0+255),b
  6173  002C16  0E00               	movlw	0
  6174  002C18  6F62               	movwf	(___flmul@b+2)& (0+255),b
  6175  002C1A  0E00               	movlw	0
  6176  002C1C  6F63               	movwf	(___flmul@b+3)& (0+255),b
  6177  002C1E                     l5732:
  6178                           
  6179                           ; BSR set to: 0
  6180  002C1E  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
  6181  002C20  D008               	goto	l5736
  6182  002C22                     l5734:
  6183                           
  6184                           ; BSR set to: 0
  6185  002C22  0E00               	movlw	0
  6186  002C24  6F60               	movwf	___flmul@b& (0+255),b
  6187  002C26  0E00               	movlw	0
  6188  002C28  6F61               	movwf	(___flmul@b+1)& (0+255),b
  6189  002C2A  0E00               	movlw	0
  6190  002C2C  6F62               	movwf	(___flmul@b+2)& (0+255),b
  6191  002C2E  0E00               	movlw	0
  6192  002C30  6F63               	movwf	(___flmul@b+3)& (0+255),b
  6193  002C32                     l5736:
  6194                           
  6195                           ; BSR set to: 0
  6196  002C32  5167               	movf	(___flmul@a+3)& (0+255),w,b
  6197  002C34  0B80               	andlw	128
  6198  002C36  1B6C               	xorwf	___flmul@sign& (0+255),f,b
  6199                           
  6200                           ; BSR set to: 0
  6201  002C38  5167               	movf	(___flmul@a+3)& (0+255),w,b
  6202  002C3A  2567               	addwf	(___flmul@a+3)& (0+255),w,b
  6203  002C3C  6F6D               	movwf	___flmul@aexp& (0+255),b
  6204                           
  6205                           ; BSR set to: 0
  6206  002C3E  BF66               	btfsc	(___flmul@a+2)& (0+255),7,b
  6207                           
  6208                           ; BSR set to: 0
  6209  002C40  816D               	bsf	___flmul@aexp& (0+255),0,b
  6210                           
  6211                           ; BSR set to: 0
  6212  002C42  516D               	movf	___flmul@aexp& (0+255),w,b
  6213  002C44  B4D8               	btfsc	status,2,c
  6214  002C46  D00D               	goto	l5752
  6215                           
  6216                           ; BSR set to: 0
  6217  002C48  296D               	incf	___flmul@aexp& (0+255),w,b
  6218  002C4A  A4D8               	btfss	status,2,c
  6219  002C4C  D008               	goto	l5750
  6220                           
  6221                           ; BSR set to: 0
  6222  002C4E  0E00               	movlw	0
  6223  002C50  6F64               	movwf	___flmul@a& (0+255),b
  6224  002C52  0E00               	movlw	0
  6225  002C54  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6226  002C56  0E00               	movlw	0
  6227  002C58  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6228  002C5A  0E00               	movlw	0
  6229  002C5C  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6230  002C5E                     l5750:
  6231                           
  6232                           ; BSR set to: 0
  6233  002C5E  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
  6234  002C60  D008               	goto	l1239
  6235  002C62                     l5752:
  6236                           
  6237                           ; BSR set to: 0
  6238  002C62  0E00               	movlw	0
  6239  002C64  6F64               	movwf	___flmul@a& (0+255),b
  6240  002C66  0E00               	movlw	0
  6241  002C68  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6242  002C6A  0E00               	movlw	0
  6243  002C6C  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6244  002C6E  0E00               	movlw	0
  6245  002C70  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6246  002C72                     l1239:
  6247                           
  6248                           ; BSR set to: 0
  6249  002C72  516D               	movf	___flmul@aexp& (0+255),w,b
  6250  002C74  B4D8               	btfsc	status,2,c
  6251  002C76  D003               	goto	u7440
  6252                           
  6253                           ; BSR set to: 0
  6254  002C78  5172               	movf	___flmul@bexp& (0+255),w,b
  6255  002C7A  A4D8               	btfss	status,2,c
  6256  002C7C  D009               	goto	l5760
  6257  002C7E                     u7440:
  6258                           
  6259                           ; BSR set to: 0
  6260  002C7E  0E00               	movlw	0
  6261  002C80  6F60               	movwf	?___flmul& (0+255),b
  6262  002C82  0E00               	movlw	0
  6263  002C84  6F61               	movwf	(?___flmul+1)& (0+255),b
  6264  002C86  0E00               	movlw	0
  6265  002C88  6F62               	movwf	(?___flmul+2)& (0+255),b
  6266  002C8A  0E00               	movlw	0
  6267  002C8C  6F63               	movwf	(?___flmul+3)& (0+255),b
  6268  002C8E  0012               	return	
  6269  002C90                     l5760:
  6270                           
  6271                           ; BSR set to: 0
  6272  002C90  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6273  002C92  0360               	mulwf	___flmul@b& (0+255),b
  6274  002C94  006F FFCC  F077    	movff	prodl,___flmul@temp
  6275  002C9A  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6276                           
  6277                           ; BSR set to: 0
  6278  002CA0  5177               	movf	___flmul@temp& (0+255),w,b
  6279  002CA2  6F6E               	movwf	___flmul@grs& (0+255),b
  6280  002CA4  6B6F               	clrf	(___flmul@grs+1)& (0+255),b
  6281  002CA6  6B70               	clrf	(___flmul@grs+2)& (0+255),b
  6282  002CA8  6B71               	clrf	(___flmul@grs+3)& (0+255),b
  6283                           
  6284                           ; BSR set to: 0
  6285  002CAA  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6286  002CAC  6F73               	movwf	___flmul@prod& (0+255),b
  6287  002CAE  6B74               	clrf	(___flmul@prod+1)& (0+255),b
  6288  002CB0  6B75               	clrf	(___flmul@prod+2)& (0+255),b
  6289  002CB2  6B76               	clrf	(___flmul@prod+3)& (0+255),b
  6290  002CB4  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6291  002CB6  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6292  002CB8  006F FFCC  F077    	movff	prodl,___flmul@temp
  6293  002CBE  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6294                           
  6295                           ; BSR set to: 0
  6296  002CC4  5177               	movf	___flmul@temp& (0+255),w,b
  6297  002CC6  276E               	addwf	___flmul@grs& (0+255),f,b
  6298  002CC8  0E00               	movlw	0
  6299  002CCA  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6300  002CCC  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6301  002CCE  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6302                           
  6303                           ; BSR set to: 0
  6304  002CD0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6305  002CD2  2773               	addwf	___flmul@prod& (0+255),f,b
  6306  002CD4  0E00               	movlw	0
  6307  002CD6  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6308  002CD8  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6309  002CDA  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6310  002CDC  5164               	movf	___flmul@a& (0+255),w,b
  6311  002CDE  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6312  002CE0  006F FFCC  F077    	movff	prodl,___flmul@temp
  6313  002CE6  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6314                           
  6315                           ; BSR set to: 0
  6316  002CEC  5177               	movf	___flmul@temp& (0+255),w,b
  6317  002CEE  276E               	addwf	___flmul@grs& (0+255),f,b
  6318  002CF0  0E00               	movlw	0
  6319  002CF2  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6320  002CF4  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6321  002CF6  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6322                           
  6323                           ; BSR set to: 0
  6324  002CF8  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6325  002CFA  2773               	addwf	___flmul@prod& (0+255),f,b
  6326  002CFC  0E00               	movlw	0
  6327  002CFE  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6328  002D00  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6329  002D02  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6330                           
  6331                           ; BSR set to: 0
  6332  002D04  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6333  002D0A  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6334  002D10  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6335  002D16  6B6E               	clrf	___flmul@grs& (0+255),b
  6336                           
  6337                           ; BSR set to: 0
  6338  002D18  5164               	movf	___flmul@a& (0+255),w,b
  6339  002D1A  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6340  002D1C  006F FFCC  F077    	movff	prodl,___flmul@temp
  6341  002D22  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6342                           
  6343                           ; BSR set to: 0
  6344  002D28  5177               	movf	___flmul@temp& (0+255),w,b
  6345  002D2A  276E               	addwf	___flmul@grs& (0+255),f,b
  6346  002D2C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6347  002D2E  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6348  002D30  0E00               	movlw	0
  6349  002D32  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6350  002D34  0E00               	movlw	0
  6351  002D36  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6352                           
  6353                           ; BSR set to: 0
  6354  002D38  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6355  002D3A  0360               	mulwf	___flmul@b& (0+255),b
  6356  002D3C  006F FFCC  F077    	movff	prodl,___flmul@temp
  6357  002D42  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6358                           
  6359                           ; BSR set to: 0
  6360  002D48  5177               	movf	___flmul@temp& (0+255),w,b
  6361  002D4A  276E               	addwf	___flmul@grs& (0+255),f,b
  6362  002D4C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6363  002D4E  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6364  002D50  0E00               	movlw	0
  6365  002D52  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6366  002D54  0E00               	movlw	0
  6367  002D56  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6368                           
  6369                           ; BSR set to: 0
  6370  002D58  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6371  002D5E  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6372  002D64  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6373  002D6A  6B6E               	clrf	___flmul@grs& (0+255),b
  6374  002D6C  5164               	movf	___flmul@a& (0+255),w,b
  6375  002D6E  0360               	mulwf	___flmul@b& (0+255),b
  6376  002D70  006F FFCC  F077    	movff	prodl,___flmul@temp
  6377  002D76  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6378                           
  6379                           ; BSR set to: 0
  6380  002D7C  5177               	movf	___flmul@temp& (0+255),w,b
  6381  002D7E  276E               	addwf	___flmul@grs& (0+255),f,b
  6382  002D80  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6383  002D82  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6384  002D84  0E00               	movlw	0
  6385  002D86  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6386  002D88  0E00               	movlw	0
  6387  002D8A  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6388                           
  6389                           ; BSR set to: 0
  6390  002D8C  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6391  002D8E  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6392  002D90  006F FFCC  F077    	movff	prodl,___flmul@temp
  6393  002D96  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6394  002D9C  5177               	movf	___flmul@temp& (0+255),w,b
  6395  002D9E  2773               	addwf	___flmul@prod& (0+255),f,b
  6396  002DA0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6397  002DA2  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6398  002DA4  0E00               	movlw	0
  6399  002DA6  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6400  002DA8  0E00               	movlw	0
  6401  002DAA  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6402                           
  6403                           ; BSR set to: 0
  6404  002DAC  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6405  002DAE  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6406  002DB0  006F FFCC  F077    	movff	prodl,___flmul@temp
  6407  002DB6  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6408                           
  6409                           ; BSR set to: 0
  6410  002DBC  5177               	movf	___flmul@temp& (0+255),w,b
  6411  002DBE  2773               	addwf	___flmul@prod& (0+255),f,b
  6412  002DC0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6413  002DC2  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6414  002DC4  0E00               	movlw	0
  6415  002DC6  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6416  002DC8  0E00               	movlw	0
  6417  002DCA  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6418  002DCC  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6419  002DCE  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6420  002DD0  006F FFCC  F077    	movff	prodl,___flmul@temp
  6421  002DD6  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6422                           
  6423                           ; BSR set to: 0
  6424  002DDC  5177               	movf	___flmul@temp& (0+255),w,b
  6425  002DDE  6F68               	movwf	??___flmul& (0+255),b
  6426  002DE0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6427  002DE2  6F69               	movwf	(??___flmul+1)& (0+255),b
  6428  002DE4  6B6A               	clrf	(??___flmul+2)& (0+255),b
  6429  002DE6  6B6B               	clrf	(??___flmul+3)& (0+255),b
  6430  002DE8  0060  F1A8  F06B   	movff	??___flmul+2,??___flmul+3
  6431  002DEE  0060  F1A4  F06A   	movff	??___flmul+1,??___flmul+2
  6432  002DF4  0060  F1A0  F069   	movff	??___flmul,??___flmul+1
  6433  002DFA  6B68               	clrf	??___flmul& (0+255),b
  6434  002DFC  5168               	movf	??___flmul& (0+255),w,b
  6435  002DFE  2773               	addwf	___flmul@prod& (0+255),f,b
  6436  002E00  5169               	movf	(??___flmul+1)& (0+255),w,b
  6437  002E02  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6438  002E04  516A               	movf	(??___flmul+2)& (0+255),w,b
  6439  002E06  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6440  002E08  516B               	movf	(??___flmul+3)& (0+255),w,b
  6441  002E0A  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6442                           
  6443                           ; BSR set to: 0
  6444  002E0C  0060  F1B8  F068   	movff	___flmul@grs,??___flmul
  6445  002E12  0060  F1BC  F069   	movff	___flmul@grs+1,??___flmul+1
  6446  002E18  0060  F1C0  F06A   	movff	___flmul@grs+2,??___flmul+2
  6447  002E1E  0060  F1C4  F06B   	movff	___flmul@grs+3,??___flmul+3
  6448  002E24  0E19               	movlw	25
  6449  002E26  D005               	goto	u7450
  6450  002E28                     u7455:
  6451  002E28  90D8               	bcf	status,0,c
  6452  002E2A  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  6453  002E2C  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  6454  002E2E  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  6455  002E30  3368               	rrcf	??___flmul& (0+255),f,b
  6456  002E32                     u7450:
  6457  002E32  2EE8               	decfsz	wreg,f,c
  6458  002E34  D7F9               	goto	u7455
  6459  002E36  5168               	movf	??___flmul& (0+255),w,b
  6460  002E38  2773               	addwf	___flmul@prod& (0+255),f,b
  6461  002E3A  5169               	movf	(??___flmul+1)& (0+255),w,b
  6462  002E3C  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6463  002E3E  516A               	movf	(??___flmul+2)& (0+255),w,b
  6464  002E40  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6465  002E42  516B               	movf	(??___flmul+3)& (0+255),w,b
  6466  002E44  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6467                           
  6468                           ; BSR set to: 0
  6469  002E46  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6470  002E4C  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6471  002E52  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6472  002E58  6B6E               	clrf	___flmul@grs& (0+255),b
  6473                           
  6474                           ; BSR set to: 0
  6475  002E5A  516D               	movf	___flmul@aexp& (0+255),w,b
  6476  002E5C  0060  F1C8  F068   	movff	___flmul@bexp,??___flmul
  6477  002E62  6B69               	clrf	(??___flmul+1)& (0+255),b
  6478  002E64  2768               	addwf	??___flmul& (0+255),f,b
  6479  002E66  0E00               	movlw	0
  6480  002E68  2369               	addwfc	(??___flmul+1)& (0+255),f,b
  6481  002E6A  0E82               	movlw	130
  6482  002E6C  2568               	addwf	??___flmul& (0+255),w,b
  6483  002E6E  6F77               	movwf	___flmul@temp& (0+255),b
  6484  002E70  0EFF               	movlw	255
  6485  002E72  2169               	addwfc	(??___flmul+1)& (0+255),w,b
  6486  002E74  6F78               	movwf	(___flmul@temp+1)& (0+255),b
  6487  002E76  D00F               	goto	l5808
  6488  002E78                     l5802:
  6489                           
  6490                           ; BSR set to: 0
  6491  002E78  90D8               	bcf	status,0,c
  6492  002E7A  3773               	rlcf	___flmul@prod& (0+255),f,b
  6493  002E7C  3774               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6494  002E7E  3775               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6495  002E80  3776               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6496                           
  6497                           ; BSR set to: 0
  6498  002E82  BF71               	btfsc	(___flmul@grs+3)& (0+255),7,b
  6499                           
  6500                           ; BSR set to: 0
  6501  002E84  8173               	bsf	___flmul@prod& (0+255),0,b
  6502                           
  6503                           ; BSR set to: 0
  6504  002E86  90D8               	bcf	status,0,c
  6505  002E88  376E               	rlcf	___flmul@grs& (0+255),f,b
  6506  002E8A  376F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6507  002E8C  3770               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6508  002E8E  3771               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6509  002E90  0777               	decf	___flmul@temp& (0+255),f,b
  6510  002E92  A0D8               	btfss	status,0,c
  6511  002E94  0778               	decf	(___flmul@temp+1)& (0+255),f,b
  6512  002E96                     l5808:
  6513                           
  6514                           ; BSR set to: 0
  6515  002E96  AF75               	btfss	(___flmul@prod+2)& (0+255),7,b
  6516  002E98  D7EF               	goto	l5802
  6517                           
  6518                           ; BSR set to: 0
  6519  002E9A  0E00               	movlw	0
  6520  002E9C  6F6D               	movwf	___flmul@aexp& (0+255),b
  6521                           
  6522                           ; BSR set to: 0
  6523  002E9E  AF71               	btfss	(___flmul@grs+3)& (0+255),7,b
  6524  002EA0  D017               	goto	l1248
  6525                           
  6526                           ; BSR set to: 0
  6527  002EA2  0EFF               	movlw	255
  6528  002EA4  156E               	andwf	___flmul@grs& (0+255),w,b
  6529  002EA6  6F68               	movwf	??___flmul& (0+255),b
  6530  002EA8  0EFF               	movlw	255
  6531  002EAA  156F               	andwf	(___flmul@grs+1)& (0+255),w,b
  6532  002EAC  6F69               	movwf	(??___flmul+1)& (0+255),b
  6533  002EAE  0EFF               	movlw	255
  6534  002EB0  1570               	andwf	(___flmul@grs+2)& (0+255),w,b
  6535  002EB2  6F6A               	movwf	(??___flmul+2)& (0+255),b
  6536  002EB4  0E7F               	movlw	127
  6537  002EB6  1571               	andwf	(___flmul@grs+3)& (0+255),w,b
  6538  002EB8  6F6B               	movwf	(??___flmul+3)& (0+255),b
  6539  002EBA  5168               	movf	??___flmul& (0+255),w,b
  6540  002EBC  1169               	iorwf	(??___flmul+1)& (0+255),w,b
  6541  002EBE  116A               	iorwf	(??___flmul+2)& (0+255),w,b
  6542  002EC0  116B               	iorwf	(??___flmul+3)& (0+255),w,b
  6543  002EC2  B4D8               	btfsc	status,2,c
  6544  002EC4  D003               	goto	l1249
  6545  002EC6                     u7490:
  6546                           
  6547                           ; BSR set to: 0
  6548  002EC6  0E01               	movlw	1
  6549  002EC8  6F6D               	movwf	___flmul@aexp& (0+255),b
  6550  002ECA  D002               	goto	l1248
  6551  002ECC                     l1249:
  6552                           
  6553                           ; BSR set to: 0
  6554  002ECC  B173               	btfsc	___flmul@prod& (0+255),0,b
  6555  002ECE  D7FB               	goto	u7490
  6556  002ED0                     l1248:
  6557                           
  6558                           ; BSR set to: 0
  6559  002ED0  516D               	movf	___flmul@aexp& (0+255),w,b
  6560  002ED2  B4D8               	btfsc	status,2,c
  6561  002ED4  D027               	goto	l5828
  6562                           
  6563                           ; BSR set to: 0
  6564  002ED6  0E01               	movlw	1
  6565  002ED8  2773               	addwf	___flmul@prod& (0+255),f,b
  6566  002EDA  0E00               	movlw	0
  6567  002EDC  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6568  002EDE  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6569  002EE0  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6570                           
  6571                           ; BSR set to: 0
  6572  002EE2  A176               	btfss	(___flmul@prod+3)& (0+255),0,b
  6573  002EE4  D01F               	goto	l5828
  6574                           
  6575                           ; BSR set to: 0
  6576  002EE6  0060  F1CC  F068   	movff	___flmul@prod,??___flmul
  6577  002EEC  0060  F1D0  F069   	movff	___flmul@prod+1,??___flmul+1
  6578  002EF2  0060  F1D4  F06A   	movff	___flmul@prod+2,??___flmul+2
  6579  002EF8  0060  F1D8  F06B   	movff	___flmul@prod+3,??___flmul+3
  6580  002EFE  356B               	rlcf	(??___flmul+3)& (0+255),w,b
  6581  002F00  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  6582  002F02  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  6583  002F04  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  6584  002F06  3368               	rrcf	??___flmul& (0+255),f,b
  6585  002F08  0060  F1A0  F073   	movff	??___flmul,___flmul@prod
  6586  002F0E  0060  F1A4  F074   	movff	??___flmul+1,___flmul@prod+1
  6587  002F14  0060  F1A8  F075   	movff	??___flmul+2,___flmul@prod+2
  6588  002F1A  0060  F1AC  F076   	movff	??___flmul+3,___flmul@prod+3
  6589                           
  6590                           ; BSR set to: 0
  6591  002F20  4B77               	infsnz	___flmul@temp& (0+255),f,b
  6592  002F22  2B78               	incf	(___flmul@temp+1)& (0+255),f,b
  6593  002F24                     l5828:
  6594                           
  6595                           ; BSR set to: 0
  6596  002F24  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6597  002F26  D00D               	goto	l5832
  6598  002F28  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6599  002F2A  E103               	bnz	u7530
  6600  002F2C  2977               	incf	___flmul@temp& (0+255),w,b
  6601  002F2E  A0D8               	btfss	status,0,c
  6602  002F30  D008               	goto	l5832
  6603  002F32                     u7530:
  6604                           
  6605                           ; BSR set to: 0
  6606  002F32  0E00               	movlw	0
  6607  002F34  6F73               	movwf	___flmul@prod& (0+255),b
  6608  002F36  0E00               	movlw	0
  6609  002F38  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6610  002F3A  0E80               	movlw	128
  6611  002F3C  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6612  002F3E  0E7F               	movlw	127
  6613  002F40  D021               	goto	L9
  6614  002F42                     l5832:
  6615                           
  6616                           ; BSR set to: 0
  6617  002F42  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6618  002F44  D005               	goto	u7540
  6619  002F46  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6620  002F48  E10E               	bnz	l1256
  6621  002F4A  0577               	decf	___flmul@temp& (0+255),w,b
  6622  002F4C  B0D8               	btfsc	status,0,c
  6623  002F4E  D00B               	goto	l1256
  6624  002F50                     u7540:
  6625                           
  6626                           ; BSR set to: 0
  6627  002F50  0E00               	movlw	0
  6628  002F52  6F73               	movwf	___flmul@prod& (0+255),b
  6629  002F54  0E00               	movlw	0
  6630  002F56  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6631  002F58  0E00               	movlw	0
  6632  002F5A  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6633  002F5C  0E00               	movlw	0
  6634  002F5E  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6635  002F60  0E00               	movlw	0
  6636  002F62  6F6C               	movwf	___flmul@sign& (0+255),b
  6637  002F64  D010               	goto	l5844
  6638  002F66                     l1256:
  6639                           
  6640                           ; BSR set to: 0
  6641  002F66  0060  F1DC  F072   	movff	___flmul@temp,___flmul@bexp
  6642                           
  6643                           ; BSR set to: 0
  6644  002F6C  0EFF               	movlw	255
  6645  002F6E  1773               	andwf	___flmul@prod& (0+255),f,b
  6646  002F70  0EFF               	movlw	255
  6647  002F72  1774               	andwf	(___flmul@prod+1)& (0+255),f,b
  6648  002F74  0E7F               	movlw	127
  6649  002F76  1775               	andwf	(___flmul@prod+2)& (0+255),f,b
  6650  002F78  0E00               	movlw	0
  6651  002F7A  1776               	andwf	(___flmul@prod+3)& (0+255),f,b
  6652                           
  6653                           ; BSR set to: 0
  6654  002F7C  B172               	btfsc	___flmul@bexp& (0+255),0,b
  6655                           
  6656                           ; BSR set to: 0
  6657  002F7E  8F75               	bsf	(___flmul@prod+2)& (0+255),7,b
  6658                           
  6659                           ; BSR set to: 0
  6660  002F80  90D8               	bcf	status,0,c
  6661  002F82  3172               	rrcf	___flmul@bexp& (0+255),w,b
  6662  002F84                     L9:
  6663  002F84  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6664  002F86                     l5844:
  6665                           
  6666                           ; BSR set to: 0
  6667  002F86  516C               	movf	___flmul@sign& (0+255),w,b
  6668  002F88  1376               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6669                           
  6670                           ; BSR set to: 0
  6671  002F8A  0060  F1CC  F060   	movff	___flmul@prod,?___flmul
  6672  002F90  0060  F1D0  F061   	movff	___flmul@prod+1,?___flmul+1
  6673  002F96  0060  F1D4  F062   	movff	___flmul@prod+2,?___flmul+2
  6674  002F9C  0060  F1D8  F063   	movff	___flmul@prod+3,?___flmul+3
  6675                           
  6676                           ; BSR set to: 0
  6677  002FA2  0012               	return		;funcret
  6678  002FA4                     __end_of___flmul:
  6679                           	opt callstack 0
  6680                           
  6681 ;; *************** function ___flge *****************
  6682 ;; Defined at:
  6683 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;  ff1             4   25[BANK0 ] unsigned char 
  6686 ;;  ff2             4   29[BANK0 ] unsigned char 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;		None               void
  6691 ;; Registers used:
  6692 ;;		wreg, status,2, status,0
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6698 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6701 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6702 ;;Total ram usage:       12 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    2
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		_efgtoa
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text23
  6713  0044A8                     __ptext23:
  6714                           	opt callstack 0
  6715  0044A8                     ___flge:
  6716                           	opt callstack 23
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;incstack = 0
  6720  0044A8  0E00               	movlw	0
  6721  0044AA  0100               	movlb	0	; () banked
  6722  0044AC  1579               	andwf	___flge@ff1& (0+255),w,b
  6723  0044AE  6F81               	movwf	??___flge& (0+255),b
  6724  0044B0  0E00               	movlw	0
  6725  0044B2  157A               	andwf	(___flge@ff1+1)& (0+255),w,b
  6726  0044B4  6F82               	movwf	(??___flge+1)& (0+255),b
  6727  0044B6  0E80               	movlw	128
  6728  0044B8  157B               	andwf	(___flge@ff1+2)& (0+255),w,b
  6729  0044BA  6F83               	movwf	(??___flge+2)& (0+255),b
  6730  0044BC  0E7F               	movlw	127
  6731  0044BE  157C               	andwf	(___flge@ff1+3)& (0+255),w,b
  6732  0044C0  6F84               	movwf	(??___flge+3)& (0+255),b
  6733  0044C2  5181               	movf	??___flge& (0+255),w,b
  6734  0044C4  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6735  0044C6  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6736  0044C8  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6737  0044CA  A4D8               	btfss	status,2,c
  6738  0044CC  D008               	goto	l5956
  6739                           
  6740                           ; BSR set to: 0
  6741  0044CE  0E00               	movlw	0
  6742  0044D0  6F79               	movwf	___flge@ff1& (0+255),b
  6743  0044D2  0E00               	movlw	0
  6744  0044D4  6F7A               	movwf	(___flge@ff1+1)& (0+255),b
  6745  0044D6  0E00               	movlw	0
  6746  0044D8  6F7B               	movwf	(___flge@ff1+2)& (0+255),b
  6747  0044DA  0E00               	movlw	0
  6748  0044DC  6F7C               	movwf	(___flge@ff1+3)& (0+255),b
  6749  0044DE                     l5956:
  6750                           
  6751                           ; BSR set to: 0
  6752  0044DE  0E00               	movlw	0
  6753  0044E0  157D               	andwf	___flge@ff2& (0+255),w,b
  6754  0044E2  6F81               	movwf	??___flge& (0+255),b
  6755  0044E4  0E00               	movlw	0
  6756  0044E6  157E               	andwf	(___flge@ff2+1)& (0+255),w,b
  6757  0044E8  6F82               	movwf	(??___flge+1)& (0+255),b
  6758  0044EA  0E80               	movlw	128
  6759  0044EC  157F               	andwf	(___flge@ff2+2)& (0+255),w,b
  6760  0044EE  6F83               	movwf	(??___flge+2)& (0+255),b
  6761  0044F0  0E7F               	movlw	127
  6762  0044F2  1580               	andwf	(___flge@ff2+3)& (0+255),w,b
  6763  0044F4  6F84               	movwf	(??___flge+3)& (0+255),b
  6764  0044F6  5181               	movf	??___flge& (0+255),w,b
  6765  0044F8  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6766  0044FA  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6767  0044FC  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6768  0044FE  A4D8               	btfss	status,2,c
  6769  004500  D008               	goto	l5960
  6770                           
  6771                           ; BSR set to: 0
  6772  004502  0E00               	movlw	0
  6773  004504  6F7D               	movwf	___flge@ff2& (0+255),b
  6774  004506  0E00               	movlw	0
  6775  004508  6F7E               	movwf	(___flge@ff2+1)& (0+255),b
  6776  00450A  0E00               	movlw	0
  6777  00450C  6F7F               	movwf	(___flge@ff2+2)& (0+255),b
  6778  00450E  0E00               	movlw	0
  6779  004510  6F80               	movwf	(___flge@ff2+3)& (0+255),b
  6780  004512                     l5960:
  6781                           
  6782                           ; BSR set to: 0
  6783  004512  AF7C               	btfss	(___flge@ff1+3)& (0+255),7,b
  6784  004514  D009               	goto	l5964
  6785                           
  6786                           ; BSR set to: 0
  6787  004516  6D79               	negf	___flge@ff1& (0+255),b
  6788  004518  1F7A               	comf	(___flge@ff1+1)& (0+255),f,b
  6789  00451A  B0D8               	btfsc	status,0,c
  6790  00451C  2B7A               	incf	(___flge@ff1+1)& (0+255),f,b
  6791  00451E  1F7B               	comf	(___flge@ff1+2)& (0+255),f,b
  6792  004520  B0D8               	btfsc	status,0,c
  6793  004522  2B7B               	incf	(___flge@ff1+2)& (0+255),f,b
  6794  004524  0E80               	movlw	128
  6795  004526  577C               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6796  004528                     l5964:
  6797                           
  6798                           ; BSR set to: 0
  6799  004528  AF80               	btfss	(___flge@ff2+3)& (0+255),7,b
  6800  00452A  D009               	goto	l890
  6801                           
  6802                           ; BSR set to: 0
  6803  00452C  6D7D               	negf	___flge@ff2& (0+255),b
  6804  00452E  1F7E               	comf	(___flge@ff2+1)& (0+255),f,b
  6805  004530  B0D8               	btfsc	status,0,c
  6806  004532  2B7E               	incf	(___flge@ff2+1)& (0+255),f,b
  6807  004534  1F7F               	comf	(___flge@ff2+2)& (0+255),f,b
  6808  004536  B0D8               	btfsc	status,0,c
  6809  004538  2B7F               	incf	(___flge@ff2+2)& (0+255),f,b
  6810  00453A  0E80               	movlw	128
  6811  00453C  5780               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6812  00453E                     l890:
  6813                           
  6814                           ; BSR set to: 0
  6815  00453E  0E00               	movlw	0
  6816  004540  1B79               	xorwf	___flge@ff1& (0+255),f,b
  6817  004542  0E00               	movlw	0
  6818  004544  1B7A               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6819  004546  0E00               	movlw	0
  6820  004548  1B7B               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6821  00454A  0E80               	movlw	128
  6822  00454C  1B7C               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6823  00454E  0E00               	movlw	0
  6824  004550  1B7D               	xorwf	___flge@ff2& (0+255),f,b
  6825  004552  0E00               	movlw	0
  6826  004554  1B7E               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6827  004556  0E00               	movlw	0
  6828  004558  1B7F               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6829  00455A  0E80               	movlw	128
  6830  00455C  1B80               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6831  00455E  517D               	movf	___flge@ff2& (0+255),w,b
  6832  004560  5D79               	subwf	___flge@ff1& (0+255),w,b
  6833  004562  517E               	movf	(___flge@ff2+1)& (0+255),w,b
  6834  004564  597A               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6835  004566  517F               	movf	(___flge@ff2+2)& (0+255),w,b
  6836  004568  597B               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6837  00456A  5180               	movf	(___flge@ff2+3)& (0+255),w,b
  6838  00456C  597C               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6839  00456E  B0D8               	btfsc	status,0,c
  6840  004570  D002               	goto	l5970
  6841                           
  6842                           ; BSR set to: 0
  6843  004572  90D8               	bcf	status,0,c
  6844  004574  0012               	return	
  6845  004576                     l5970:
  6846                           
  6847                           ; BSR set to: 0
  6848  004576  80D8               	bsf	status,0,c
  6849                           
  6850                           ; BSR set to: 0
  6851  004578  0012               	return		;funcret
  6852  00457A                     __end_of___flge:
  6853                           	opt callstack 0
  6854                           
  6855 ;; *************** function ___fleq *****************
  6856 ;; Defined at:
  6857 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  ff1             4    0[BANK0 ] unsigned char 
  6860 ;;  ff2             4    4[BANK0 ] unsigned char 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;		None
  6863 ;; Return value:  Size  Location     Type
  6864 ;;		None               void
  6865 ;; Registers used:
  6866 ;;		wreg, status,2, status,0
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6872 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6874 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6875 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6876 ;;Total ram usage:       12 bytes
  6877 ;; Hardware stack levels used:    1
  6878 ;; Hardware stack levels required when called:    2
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		_efgtoa
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text24
  6887  004A76                     __ptext24:
  6888                           	opt callstack 0
  6889  004A76                     ___fleq:
  6890                           	opt callstack 23
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;incstack = 0
  6894  004A76  0E00               	movlw	0
  6895  004A78  0100               	movlb	0	; () banked
  6896  004A7A  1560               	andwf	___fleq@ff1& (0+255),w,b
  6897  004A7C  6F68               	movwf	??___fleq& (0+255),b
  6898  004A7E  0E00               	movlw	0
  6899  004A80  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6900  004A82  6F69               	movwf	(??___fleq+1)& (0+255),b
  6901  004A84  0E80               	movlw	128
  6902  004A86  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6903  004A88  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6904  004A8A  0E7F               	movlw	127
  6905  004A8C  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6906  004A8E  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6907  004A90  5168               	movf	??___fleq& (0+255),w,b
  6908  004A92  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6909  004A94  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6910  004A96  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6911  004A98  A4D8               	btfss	status,2,c
  6912  004A9A  D008               	goto	l5940
  6913                           
  6914                           ; BSR set to: 0
  6915  004A9C  0E00               	movlw	0
  6916  004A9E  6F60               	movwf	___fleq@ff1& (0+255),b
  6917  004AA0  0E00               	movlw	0
  6918  004AA2  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6919  004AA4  0E00               	movlw	0
  6920  004AA6  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6921  004AA8  0E00               	movlw	0
  6922  004AAA  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6923  004AAC                     l5940:
  6924                           
  6925                           ; BSR set to: 0
  6926  004AAC  0E00               	movlw	0
  6927  004AAE  1564               	andwf	___fleq@ff2& (0+255),w,b
  6928  004AB0  6F68               	movwf	??___fleq& (0+255),b
  6929  004AB2  0E00               	movlw	0
  6930  004AB4  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6931  004AB6  6F69               	movwf	(??___fleq+1)& (0+255),b
  6932  004AB8  0E80               	movlw	128
  6933  004ABA  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6934  004ABC  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6935  004ABE  0E7F               	movlw	127
  6936  004AC0  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6937  004AC2  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6938  004AC4  5168               	movf	??___fleq& (0+255),w,b
  6939  004AC6  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6940  004AC8  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6941  004ACA  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6942  004ACC  A4D8               	btfss	status,2,c
  6943  004ACE  D008               	goto	l5944
  6944                           
  6945                           ; BSR set to: 0
  6946  004AD0  0E00               	movlw	0
  6947  004AD2  6F64               	movwf	___fleq@ff2& (0+255),b
  6948  004AD4  0E00               	movlw	0
  6949  004AD6  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6950  004AD8  0E00               	movlw	0
  6951  004ADA  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6952  004ADC  0E00               	movlw	0
  6953  004ADE  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6954  004AE0                     l5944:
  6955                           
  6956                           ; BSR set to: 0
  6957  004AE0  5164               	movf	___fleq@ff2& (0+255),w,b
  6958  004AE2  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6959  004AE4  E10A               	bnz	u7700
  6960  004AE6  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6961  004AE8  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6962  004AEA  E107               	bnz	u7700
  6963  004AEC  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6964  004AEE  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6965  004AF0  E104               	bnz	u7700
  6966  004AF2  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6967  004AF4  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6968  004AF6  B4D8               	btfsc	status,2,c
  6969  004AF8  D002               	goto	l5948
  6970  004AFA                     u7700:
  6971                           
  6972                           ; BSR set to: 0
  6973  004AFA  90D8               	bcf	status,0,c
  6974  004AFC  0012               	return	
  6975  004AFE                     l5948:
  6976                           
  6977                           ; BSR set to: 0
  6978  004AFE  80D8               	bsf	status,0,c
  6979                           
  6980                           ; BSR set to: 0
  6981  004B00  0012               	return		;funcret
  6982  004B02                     __end_of___fleq:
  6983                           	opt callstack 0
  6984                           
  6985 ;; *************** function ___fldiv *****************
  6986 ;; Defined at:
  6987 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  b               4    0[BANK0 ] unsigned char 
  6990 ;;  a               4    4[BANK0 ] unsigned char 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  grs             4   19[BANK0 ] unsigned long 
  6993 ;;  rem             4   12[BANK0 ] unsigned long 
  6994 ;;  new_exp         2   17[BANK0 ] short 
  6995 ;;  aexp            1   24[BANK0 ] unsigned char 
  6996 ;;  bexp            1   23[BANK0 ] unsigned char 
  6997 ;;  sign            1   16[BANK0 ] unsigned char 
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  4    0[BANK0 ] unsigned char 
  7000 ;; Registers used:
  7001 ;;		wreg, status,2, status,0
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7007 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7008 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7009 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7010 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7011 ;;Total ram usage:       25 bytes
  7012 ;; Hardware stack levels used:    1
  7013 ;; Hardware stack levels required when called:    2
  7014 ;; This function calls:
  7015 ;;		Nothing
  7016 ;; This function is called by:
  7017 ;;		_efgtoa
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           	psect	text25
  7022  003A36                     __ptext25:
  7023                           	opt callstack 0
  7024  003A36                     ___fldiv:
  7025                           	opt callstack 23
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;incstack = 0
  7029  003A36  0100               	movlb	0	; () banked
  7030  003A38  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7031  003A3A  0B80               	andlw	128
  7032  003A3C  6F70               	movwf	___fldiv@sign& (0+255),b
  7033  003A3E  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7034  003A40  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  7035  003A42  6F77               	movwf	___fldiv@bexp& (0+255),b
  7036                           
  7037                           ; BSR set to: 0
  7038  003A44  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  7039                           
  7040                           ; BSR set to: 0
  7041  003A46  8177               	bsf	___fldiv@bexp& (0+255),0,b
  7042                           
  7043                           ; BSR set to: 0
  7044  003A48  5177               	movf	___fldiv@bexp& (0+255),w,b
  7045  003A4A  B4D8               	btfsc	status,2,c
  7046  003A4C  D00D               	goto	l5598
  7047                           
  7048                           ; BSR set to: 0
  7049  003A4E  2977               	incf	___fldiv@bexp& (0+255),w,b
  7050  003A50  A4D8               	btfss	status,2,c
  7051  003A52  D008               	goto	l5594
  7052                           
  7053                           ; BSR set to: 0
  7054  003A54  0E00               	movlw	0
  7055  003A56  6F60               	movwf	___fldiv@b& (0+255),b
  7056  003A58  0E00               	movlw	0
  7057  003A5A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7058  003A5C  0E00               	movlw	0
  7059  003A5E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7060  003A60  0E00               	movlw	0
  7061  003A62  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7062  003A64                     l5594:
  7063                           
  7064                           ; BSR set to: 0
  7065  003A64  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7066  003A66  D006               	goto	L10
  7067  003A68                     l5598:
  7068                           
  7069                           ; BSR set to: 0
  7070  003A68  0E00               	movlw	0
  7071  003A6A  6F60               	movwf	___fldiv@b& (0+255),b
  7072  003A6C  0E00               	movlw	0
  7073  003A6E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7074  003A70  0E00               	movlw	0
  7075  003A72  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7076  003A74                     L10:
  7077  003A74  0E00               	movlw	0
  7078  003A76  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7079                           
  7080                           ; BSR set to: 0
  7081  003A78  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7082  003A7A  0B80               	andlw	128
  7083  003A7C  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  7084                           
  7085                           ; BSR set to: 0
  7086  003A7E  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7087  003A80  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  7088  003A82  6F78               	movwf	___fldiv@aexp& (0+255),b
  7089                           
  7090                           ; BSR set to: 0
  7091  003A84  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  7092                           
  7093                           ; BSR set to: 0
  7094  003A86  8178               	bsf	___fldiv@aexp& (0+255),0,b
  7095                           
  7096                           ; BSR set to: 0
  7097  003A88  5178               	movf	___fldiv@aexp& (0+255),w,b
  7098  003A8A  B4D8               	btfsc	status,2,c
  7099  003A8C  D00D               	goto	l5618
  7100                           
  7101                           ; BSR set to: 0
  7102  003A8E  2978               	incf	___fldiv@aexp& (0+255),w,b
  7103  003A90  A4D8               	btfss	status,2,c
  7104  003A92  D008               	goto	l5614
  7105                           
  7106                           ; BSR set to: 0
  7107  003A94  0E00               	movlw	0
  7108  003A96  6F64               	movwf	___fldiv@a& (0+255),b
  7109  003A98  0E00               	movlw	0
  7110  003A9A  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7111  003A9C  0E00               	movlw	0
  7112  003A9E  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7113  003AA0  0E00               	movlw	0
  7114  003AA2  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7115  003AA4                     l5614:
  7116                           
  7117                           ; BSR set to: 0
  7118  003AA4  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  7119  003AA6  D006               	goto	L11
  7120  003AA8                     l5618:
  7121                           
  7122                           ; BSR set to: 0
  7123  003AA8  0E00               	movlw	0
  7124  003AAA  6F64               	movwf	___fldiv@a& (0+255),b
  7125  003AAC  0E00               	movlw	0
  7126  003AAE  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7127  003AB0  0E00               	movlw	0
  7128  003AB2  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7129  003AB4                     L11:
  7130  003AB4  0E00               	movlw	0
  7131  003AB6  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7132                           
  7133                           ; BSR set to: 0
  7134  003AB8  5164               	movf	___fldiv@a& (0+255),w,b
  7135  003ABA  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7136  003ABC  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7137  003ABE  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7138  003AC0  A4D8               	btfss	status,2,c
  7139  003AC2  D01B               	goto	l5632
  7140                           
  7141                           ; BSR set to: 0
  7142  003AC4  0E00               	movlw	0
  7143  003AC6  6F60               	movwf	___fldiv@b& (0+255),b
  7144  003AC8  0E00               	movlw	0
  7145  003ACA  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7146  003ACC  0E00               	movlw	0
  7147  003ACE  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7148  003AD0  0E00               	movlw	0
  7149  003AD2  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7150                           
  7151                           ; BSR set to: 0
  7152  003AD4  0E80               	movlw	128
  7153  003AD6  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7154  003AD8  0E7F               	movlw	127
  7155  003ADA  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7156  003ADC                     l5626:
  7157                           
  7158                           ; BSR set to: 0
  7159  003ADC  5170               	movf	___fldiv@sign& (0+255),w,b
  7160  003ADE  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7161                           
  7162                           ; BSR set to: 0
  7163  003AE0  0060  F180  F060   	movff	___fldiv@b,?___fldiv
  7164  003AE6  0060  F184  F061   	movff	___fldiv@b+1,?___fldiv+1
  7165  003AEC  0060  F188  F062   	movff	___fldiv@b+2,?___fldiv+2
  7166  003AF2  0060  F18C  F063   	movff	___fldiv@b+3,?___fldiv+3
  7167  003AF8  0012               	return	
  7168  003AFA                     l5632:
  7169                           
  7170                           ; BSR set to: 0
  7171  003AFA  5177               	movf	___fldiv@bexp& (0+255),w,b
  7172  003AFC  A4D8               	btfss	status,2,c
  7173  003AFE  D009               	goto	l5640
  7174                           
  7175                           ; BSR set to: 0
  7176                           
  7177                           ; BSR set to: 0
  7178  003B00  0E00               	movlw	0
  7179  003B02  6F60               	movwf	?___fldiv& (0+255),b
  7180  003B04  0E00               	movlw	0
  7181  003B06  6F61               	movwf	(?___fldiv+1)& (0+255),b
  7182  003B08  0E00               	movlw	0
  7183  003B0A  6F62               	movwf	(?___fldiv+2)& (0+255),b
  7184  003B0C  0E00               	movlw	0
  7185  003B0E  6F63               	movwf	(?___fldiv+3)& (0+255),b
  7186  003B10  0012               	return	
  7187  003B12                     l5640:
  7188                           
  7189                           ; BSR set to: 0
  7190  003B12  5178               	movf	___fldiv@aexp& (0+255),w,b
  7191  003B14  0060  F1DC  F068   	movff	___fldiv@bexp,??___fldiv
  7192  003B1A  6B69               	clrf	(??___fldiv+1)& (0+255),b
  7193  003B1C  5F68               	subwf	??___fldiv& (0+255),f,b
  7194  003B1E  0E00               	movlw	0
  7195  003B20  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  7196  003B22  0E7F               	movlw	127
  7197  003B24  2568               	addwf	??___fldiv& (0+255),w,b
  7198  003B26  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7199  003B28  0E00               	movlw	0
  7200  003B2A  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  7201  003B2C  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7202                           
  7203                           ; BSR set to: 0
  7204  003B2E  0060  F180  F06C   	movff	___fldiv@b,___fldiv@rem
  7205  003B34  0060  F184  F06D   	movff	___fldiv@b+1,___fldiv@rem+1
  7206  003B3A  0060  F188  F06E   	movff	___fldiv@b+2,___fldiv@rem+2
  7207  003B40  0060  F18C  F06F   	movff	___fldiv@b+3,___fldiv@rem+3
  7208                           
  7209                           ; BSR set to: 0
  7210  003B46  0E00               	movlw	0
  7211  003B48  6F60               	movwf	___fldiv@b& (0+255),b
  7212  003B4A  0E00               	movlw	0
  7213  003B4C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7214  003B4E  0E00               	movlw	0
  7215  003B50  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7216  003B52  0E00               	movlw	0
  7217  003B54  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7218                           
  7219                           ; BSR set to: 0
  7220  003B56  0E00               	movlw	0
  7221  003B58  6F73               	movwf	___fldiv@grs& (0+255),b
  7222  003B5A  0E00               	movlw	0
  7223  003B5C  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  7224  003B5E  0E00               	movlw	0
  7225  003B60  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  7226  003B62  0E00               	movlw	0
  7227  003B64  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  7228                           
  7229                           ; BSR set to: 0
  7230  003B66  0E00               	movlw	0
  7231  003B68  6F78               	movwf	___fldiv@aexp& (0+255),b
  7232  003B6A  D028               	goto	l1209
  7233  003B6C                     l5650:
  7234                           
  7235                           ; BSR set to: 0
  7236  003B6C  5178               	movf	___fldiv@aexp& (0+255),w,b
  7237  003B6E  B4D8               	btfsc	status,2,c
  7238  003B70  D011               	goto	l5658
  7239                           
  7240                           ; BSR set to: 0
  7241  003B72  90D8               	bcf	status,0,c
  7242  003B74  376C               	rlcf	___fldiv@rem& (0+255),f,b
  7243  003B76  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7244  003B78  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7245  003B7A  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7246  003B7C  90D8               	bcf	status,0,c
  7247  003B7E  3760               	rlcf	___fldiv@b& (0+255),f,b
  7248  003B80  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7249  003B82  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7250  003B84  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7251                           
  7252                           ; BSR set to: 0
  7253  003B86  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7254                           
  7255                           ; BSR set to: 0
  7256  003B88  8160               	bsf	___fldiv@b& (0+255),0,b
  7257                           
  7258                           ; BSR set to: 0
  7259  003B8A  90D8               	bcf	status,0,c
  7260  003B8C  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7261  003B8E  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7262  003B90  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7263  003B92  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7264  003B94                     l5658:
  7265                           
  7266                           ; BSR set to: 0
  7267  003B94  5164               	movf	___fldiv@a& (0+255),w,b
  7268  003B96  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  7269  003B98  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7270  003B9A  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7271  003B9C  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7272  003B9E  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7273  003BA0  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7274  003BA2  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7275  003BA4  A0D8               	btfss	status,0,c
  7276  003BA6  D009               	goto	l5664
  7277                           
  7278                           ; BSR set to: 0
  7279  003BA8  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7280                           
  7281                           ; BSR set to: 0
  7282  003BAA  5164               	movf	___fldiv@a& (0+255),w,b
  7283  003BAC  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  7284  003BAE  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7285  003BB0  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7286  003BB2  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7287  003BB4  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7288  003BB6  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7289  003BB8  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7290  003BBA                     l5664:
  7291                           
  7292                           ; BSR set to: 0
  7293  003BBA  2B78               	incf	___fldiv@aexp& (0+255),f,b
  7294  003BBC                     l1209:
  7295                           
  7296                           ; BSR set to: 0
  7297  003BBC  0E19               	movlw	25
  7298  003BBE  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  7299  003BC0  D7D5               	goto	l5650
  7300                           
  7301                           ; BSR set to: 0
  7302  003BC2  516C               	movf	___fldiv@rem& (0+255),w,b
  7303  003BC4  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7304  003BC6  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7305  003BC8  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7306  003BCA  B4D8               	btfsc	status,2,c
  7307  003BCC  D011               	goto	l5676
  7308                           
  7309                           ; BSR set to: 0
  7310  003BCE  8173               	bsf	___fldiv@grs& (0+255),0,b
  7311  003BD0  D00F               	goto	l5676
  7312  003BD2                     l5670:
  7313                           
  7314                           ; BSR set to: 0
  7315  003BD2  90D8               	bcf	status,0,c
  7316  003BD4  3760               	rlcf	___fldiv@b& (0+255),f,b
  7317  003BD6  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7318  003BD8  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7319  003BDA  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7320                           
  7321                           ; BSR set to: 0
  7322  003BDC  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7323                           
  7324                           ; BSR set to: 0
  7325  003BDE  8160               	bsf	___fldiv@b& (0+255),0,b
  7326                           
  7327                           ; BSR set to: 0
  7328  003BE0  90D8               	bcf	status,0,c
  7329  003BE2  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7330  003BE4  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7331  003BE6  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7332  003BE8  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7333  003BEA  0771               	decf	___fldiv@new_exp& (0+255),f,b
  7334  003BEC  A0D8               	btfss	status,0,c
  7335  003BEE  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7336  003BF0                     l5676:
  7337                           
  7338                           ; BSR set to: 0
  7339  003BF0  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  7340  003BF2  D7EF               	goto	l5670
  7341                           
  7342                           ; BSR set to: 0
  7343  003BF4  0E00               	movlw	0
  7344  003BF6  6F78               	movwf	___fldiv@aexp& (0+255),b
  7345                           
  7346                           ; BSR set to: 0
  7347  003BF8  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7348  003BFA  D017               	goto	l1220
  7349                           
  7350                           ; BSR set to: 0
  7351  003BFC  0EFF               	movlw	255
  7352  003BFE  1573               	andwf	___fldiv@grs& (0+255),w,b
  7353  003C00  6F68               	movwf	??___fldiv& (0+255),b
  7354  003C02  0EFF               	movlw	255
  7355  003C04  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7356  003C06  6F69               	movwf	(??___fldiv+1)& (0+255),b
  7357  003C08  0EFF               	movlw	255
  7358  003C0A  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7359  003C0C  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  7360  003C0E  0E7F               	movlw	127
  7361  003C10  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7362  003C12  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  7363  003C14  5168               	movf	??___fldiv& (0+255),w,b
  7364  003C16  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  7365  003C18  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  7366  003C1A  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  7367  003C1C  B4D8               	btfsc	status,2,c
  7368  003C1E  D003               	goto	l1221
  7369  003C20                     u7300:
  7370                           
  7371                           ; BSR set to: 0
  7372  003C20  0E01               	movlw	1
  7373  003C22  6F78               	movwf	___fldiv@aexp& (0+255),b
  7374  003C24  D002               	goto	l1220
  7375  003C26                     l1221:
  7376                           
  7377                           ; BSR set to: 0
  7378  003C26  B160               	btfsc	___fldiv@b& (0+255),0,b
  7379  003C28  D7FB               	goto	u7300
  7380  003C2A                     l1220:
  7381                           
  7382                           ; BSR set to: 0
  7383  003C2A  5178               	movf	___fldiv@aexp& (0+255),w,b
  7384  003C2C  B4D8               	btfsc	status,2,c
  7385  003C2E  D027               	goto	l5696
  7386                           
  7387                           ; BSR set to: 0
  7388  003C30  0E01               	movlw	1
  7389  003C32  2760               	addwf	___fldiv@b& (0+255),f,b
  7390  003C34  0E00               	movlw	0
  7391  003C36  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7392  003C38  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7393  003C3A  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7394                           
  7395                           ; BSR set to: 0
  7396  003C3C  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  7397  003C3E  D01F               	goto	l5696
  7398                           
  7399                           ; BSR set to: 0
  7400  003C40  0060  F180  F068   	movff	___fldiv@b,??___fldiv
  7401  003C46  0060  F184  F069   	movff	___fldiv@b+1,??___fldiv+1
  7402  003C4C  0060  F188  F06A   	movff	___fldiv@b+2,??___fldiv+2
  7403  003C52  0060  F18C  F06B   	movff	___fldiv@b+3,??___fldiv+3
  7404  003C58  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  7405  003C5A  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  7406  003C5C  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  7407  003C5E  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  7408  003C60  3368               	rrcf	??___fldiv& (0+255),f,b
  7409  003C62  0060  F1A0  F060   	movff	??___fldiv,___fldiv@b
  7410  003C68  0060  F1A4  F061   	movff	??___fldiv+1,___fldiv@b+1
  7411  003C6E  0060  F1A8  F062   	movff	??___fldiv+2,___fldiv@b+2
  7412  003C74  0060  F1AC  F063   	movff	??___fldiv+3,___fldiv@b+3
  7413                           
  7414                           ; BSR set to: 0
  7415  003C7A  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  7416  003C7C  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7417  003C7E                     l5696:
  7418                           
  7419                           ; BSR set to: 0
  7420  003C7E  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7421  003C80  D010               	goto	l5700
  7422  003C82  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7423  003C84  E103               	bnz	u7340
  7424  003C86  2971               	incf	___fldiv@new_exp& (0+255),w,b
  7425  003C88  A0D8               	btfss	status,0,c
  7426  003C8A  D00B               	goto	l5700
  7427  003C8C                     u7340:
  7428                           
  7429                           ; BSR set to: 0
  7430  003C8C  0E00               	movlw	0
  7431  003C8E  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7432  003C90  6971               	setf	___fldiv@new_exp& (0+255),b
  7433  003C92  0E00               	movlw	0
  7434  003C94  6F60               	movwf	___fldiv@b& (0+255),b
  7435  003C96  0E00               	movlw	0
  7436  003C98  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7437  003C9A  0E00               	movlw	0
  7438  003C9C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7439  003C9E  0E00               	movlw	0
  7440  003CA0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7441  003CA2                     l5700:
  7442                           
  7443                           ; BSR set to: 0
  7444  003CA2  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7445  003CA4  D005               	goto	u7350
  7446  003CA6  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7447  003CA8  E111               	bnz	l5704
  7448  003CAA  0571               	decf	___fldiv@new_exp& (0+255),w,b
  7449  003CAC  B0D8               	btfsc	status,0,c
  7450  003CAE  D00E               	goto	l5704
  7451  003CB0                     u7350:
  7452                           
  7453                           ; BSR set to: 0
  7454  003CB0  0E00               	movlw	0
  7455  003CB2  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7456  003CB4  0E00               	movlw	0
  7457  003CB6  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7458  003CB8  0E00               	movlw	0
  7459  003CBA  6F60               	movwf	___fldiv@b& (0+255),b
  7460  003CBC  0E00               	movlw	0
  7461  003CBE  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7462  003CC0  0E00               	movlw	0
  7463  003CC2  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7464  003CC4  0E00               	movlw	0
  7465  003CC6  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7466  003CC8  0E00               	movlw	0
  7467  003CCA  6F70               	movwf	___fldiv@sign& (0+255),b
  7468  003CCC                     l5704:
  7469                           
  7470                           ; BSR set to: 0
  7471  003CCC  0060  F1C4  F077   	movff	___fldiv@new_exp,___fldiv@bexp
  7472                           
  7473                           ; BSR set to: 0
  7474  003CD2  A177               	btfss	___fldiv@bexp& (0+255),0,b
  7475  003CD4  D002               	goto	l5710
  7476                           
  7477                           ; BSR set to: 0
  7478  003CD6  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7479  003CD8  D001               	goto	l5712
  7480  003CDA                     l5710:
  7481                           
  7482                           ; BSR set to: 0
  7483  003CDA  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  7484  003CDC                     l5712:
  7485                           
  7486                           ; BSR set to: 0
  7487  003CDC  90D8               	bcf	status,0,c
  7488  003CDE  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  7489  003CE0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7490  003CE2  D6FC               	goto	l5626
  7491  003CE4                     __end_of___fldiv:
  7492                           	opt callstack 0
  7493                           
  7494 ;; *************** function ___awmod *****************
  7495 ;; Defined at:
  7496 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;  dividend        2    0[BANK0 ] int 
  7499 ;;  divisor         2    2[BANK0 ] int 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  sign            1    5[BANK0 ] unsigned char 
  7502 ;;  counter         1    4[BANK0 ] unsigned char 
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  2    0[BANK0 ] int 
  7505 ;; Registers used:
  7506 ;;		wreg, status,2, status,0
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7513 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7515 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7516 ;;Total ram usage:        6 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; Hardware stack levels required when called:    2
  7519 ;; This function calls:
  7520 ;;		Nothing
  7521 ;; This function is called by:
  7522 ;;		_efgtoa
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           	psect	text26
  7527  004C96                     __ptext26:
  7528                           	opt callstack 0
  7529  004C96                     ___awmod:
  7530                           	opt callstack 23
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;incstack = 0
  7534  004C96  0E00               	movlw	0
  7535  004C98  0100               	movlb	0	; () banked
  7536  004C9A  6F65               	movwf	___awmod@sign& (0+255),b
  7537                           
  7538                           ; BSR set to: 0
  7539  004C9C  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7540  004C9E  D006               	goto	l5908
  7541                           
  7542                           ; BSR set to: 0
  7543  004CA0  6D60               	negf	___awmod@dividend& (0+255),b
  7544  004CA2  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7545  004CA4  B0D8               	btfsc	status,0,c
  7546  004CA6  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7547                           
  7548                           ; BSR set to: 0
  7549  004CA8  0E01               	movlw	1
  7550  004CAA  6F65               	movwf	___awmod@sign& (0+255),b
  7551  004CAC                     l5908:
  7552                           
  7553                           ; BSR set to: 0
  7554  004CAC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7555  004CAE  D004               	goto	l5912
  7556                           
  7557                           ; BSR set to: 0
  7558  004CB0  6D62               	negf	___awmod@divisor& (0+255),b
  7559  004CB2  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7560  004CB4  B0D8               	btfsc	status,0,c
  7561  004CB6  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7562  004CB8                     l5912:
  7563                           
  7564                           ; BSR set to: 0
  7565  004CB8  5162               	movf	___awmod@divisor& (0+255),w,b
  7566  004CBA  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7567  004CBC  B4D8               	btfsc	status,2,c
  7568  004CBE  D018               	goto	l5928
  7569                           
  7570                           ; BSR set to: 0
  7571  004CC0  0E01               	movlw	1
  7572  004CC2  6F64               	movwf	___awmod@counter& (0+255),b
  7573  004CC4  D004               	goto	l5918
  7574  004CC6                     l5916:
  7575                           
  7576                           ; BSR set to: 0
  7577  004CC6  90D8               	bcf	status,0,c
  7578  004CC8  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7579  004CCA  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7580  004CCC  2B64               	incf	___awmod@counter& (0+255),f,b
  7581  004CCE                     l5918:
  7582                           
  7583                           ; BSR set to: 0
  7584  004CCE  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7585  004CD0  D7FA               	goto	l5916
  7586  004CD2                     u7650:
  7587                           
  7588                           ; BSR set to: 0
  7589  004CD2  5162               	movf	___awmod@divisor& (0+255),w,b
  7590  004CD4  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7591  004CD6  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7592  004CD8  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7593  004CDA  A0D8               	btfss	status,0,c
  7594  004CDC  D004               	goto	l5924
  7595                           
  7596                           ; BSR set to: 0
  7597  004CDE  5162               	movf	___awmod@divisor& (0+255),w,b
  7598  004CE0  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7599  004CE2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7600  004CE4  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7601  004CE6                     l5924:
  7602                           
  7603                           ; BSR set to: 0
  7604  004CE6  90D8               	bcf	status,0,c
  7605  004CE8  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7606  004CEA  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7607                           
  7608                           ; BSR set to: 0
  7609  004CEC  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7610  004CEE  D7F1               	goto	u7650
  7611  004CF0                     l5928:
  7612                           
  7613                           ; BSR set to: 0
  7614  004CF0  5165               	movf	___awmod@sign& (0+255),w,b
  7615  004CF2  B4D8               	btfsc	status,2,c
  7616  004CF4  D004               	goto	l5932
  7617                           
  7618                           ; BSR set to: 0
  7619  004CF6  6D60               	negf	___awmod@dividend& (0+255),b
  7620  004CF8  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7621  004CFA  B0D8               	btfsc	status,0,c
  7622  004CFC  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7623  004CFE                     l5932:
  7624                           
  7625                           ; BSR set to: 0
  7626  004CFE  0060  F180  F060   	movff	___awmod@dividend,?___awmod
  7627  004D04  0060  F184  F061   	movff	___awmod@dividend+1,?___awmod+1
  7628                           
  7629                           ; BSR set to: 0
  7630  004D0A  0012               	return		;funcret
  7631  004D0C                     __end_of___awmod:
  7632                           	opt callstack 0
  7633                           
  7634 ;; *************** function ___awdiv *****************
  7635 ;; Defined at:
  7636 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;  dividend        2    0[BANK0 ] int 
  7639 ;;  divisor         2    2[BANK0 ] int 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  quotient        2    6[BANK0 ] int 
  7642 ;;  sign            1    5[BANK0 ] unsigned char 
  7643 ;;  counter         1    4[BANK0 ] unsigned char 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  2    0[BANK0 ] int 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2, status,0
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7654 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7656 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7657 ;;Total ram usage:        8 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    2
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_efgtoa
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text27
  7668  004B02                     __ptext27:
  7669                           	opt callstack 0
  7670  004B02                     ___awdiv:
  7671                           	opt callstack 23
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;incstack = 0
  7675  004B02  0E00               	movlw	0
  7676  004B04  0100               	movlb	0	; () banked
  7677  004B06  6F65               	movwf	___awdiv@sign& (0+255),b
  7678                           
  7679                           ; BSR set to: 0
  7680  004B08  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7681  004B0A  D006               	goto	l5864
  7682                           
  7683                           ; BSR set to: 0
  7684  004B0C  6D62               	negf	___awdiv@divisor& (0+255),b
  7685  004B0E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7686  004B10  B0D8               	btfsc	status,0,c
  7687  004B12  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7688                           
  7689                           ; BSR set to: 0
  7690  004B14  0E01               	movlw	1
  7691  004B16  6F65               	movwf	___awdiv@sign& (0+255),b
  7692  004B18                     l5864:
  7693                           
  7694                           ; BSR set to: 0
  7695  004B18  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7696  004B1A  D006               	goto	l5870
  7697                           
  7698                           ; BSR set to: 0
  7699  004B1C  6D60               	negf	___awdiv@dividend& (0+255),b
  7700  004B1E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7701  004B20  B0D8               	btfsc	status,0,c
  7702  004B22  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7703                           
  7704                           ; BSR set to: 0
  7705  004B24  0E01               	movlw	1
  7706  004B26  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7707  004B28                     l5870:
  7708                           
  7709                           ; BSR set to: 0
  7710  004B28  0E00               	movlw	0
  7711  004B2A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7712  004B2C  0E00               	movlw	0
  7713  004B2E  6F66               	movwf	___awdiv@quotient& (0+255),b
  7714                           
  7715                           ; BSR set to: 0
  7716  004B30  5162               	movf	___awdiv@divisor& (0+255),w,b
  7717  004B32  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7718  004B34  B4D8               	btfsc	status,2,c
  7719  004B36  D01C               	goto	l5892
  7720                           
  7721                           ; BSR set to: 0
  7722  004B38  0E01               	movlw	1
  7723  004B3A  6F64               	movwf	___awdiv@counter& (0+255),b
  7724  004B3C  D004               	goto	l5878
  7725  004B3E                     l5876:
  7726                           
  7727                           ; BSR set to: 0
  7728  004B3E  90D8               	bcf	status,0,c
  7729  004B40  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7730  004B42  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7731  004B44  2B64               	incf	___awdiv@counter& (0+255),f,b
  7732  004B46                     l5878:
  7733                           
  7734                           ; BSR set to: 0
  7735  004B46  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7736  004B48  D7FA               	goto	l5876
  7737  004B4A                     u7590:
  7738                           
  7739                           ; BSR set to: 0
  7740  004B4A  90D8               	bcf	status,0,c
  7741  004B4C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7742  004B4E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7743                           
  7744                           ; BSR set to: 0
  7745  004B50  5162               	movf	___awdiv@divisor& (0+255),w,b
  7746  004B52  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7747  004B54  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7748  004B56  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7749  004B58  A0D8               	btfss	status,0,c
  7750  004B5A  D005               	goto	l5888
  7751                           
  7752                           ; BSR set to: 0
  7753  004B5C  5162               	movf	___awdiv@divisor& (0+255),w,b
  7754  004B5E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7755  004B60  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7756  004B62  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7757                           
  7758                           ; BSR set to: 0
  7759  004B64  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7760  004B66                     l5888:
  7761                           
  7762                           ; BSR set to: 0
  7763  004B66  90D8               	bcf	status,0,c
  7764  004B68  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7765  004B6A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7766                           
  7767                           ; BSR set to: 0
  7768  004B6C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7769  004B6E  D7ED               	goto	u7590
  7770  004B70                     l5892:
  7771                           
  7772                           ; BSR set to: 0
  7773  004B70  5165               	movf	___awdiv@sign& (0+255),w,b
  7774  004B72  B4D8               	btfsc	status,2,c
  7775  004B74  D004               	goto	l5896
  7776                           
  7777                           ; BSR set to: 0
  7778  004B76  6D66               	negf	___awdiv@quotient& (0+255),b
  7779  004B78  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7780  004B7A  B0D8               	btfsc	status,0,c
  7781  004B7C  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7782  004B7E                     l5896:
  7783                           
  7784                           ; BSR set to: 0
  7785  004B7E  0060  F198  F060   	movff	___awdiv@quotient,?___awdiv
  7786  004B84  0060  F19C  F061   	movff	___awdiv@quotient+1,?___awdiv+1
  7787                           
  7788                           ; BSR set to: 0
  7789  004B8A  0012               	return		;funcret
  7790  004B8C                     __end_of___awdiv:
  7791                           	opt callstack 0
  7792                           
  7793 ;; *************** function _memset *****************
  7794 ;; Defined at:
  7795 ;;		line 270 in file "main.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  st              2    0[BANK0 ] PTR unsigned char 
  7798 ;;		 -> tx_buffer(32), 
  7799 ;;  x               1    2[BANK0 ] unsigned char 
  7800 ;;  size            2    3[BANK0 ] int 
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;  i               2    6[BANK0 ] int 
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  1    wreg      void 
  7805 ;; Registers used:
  7806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7812 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7813 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7815 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7816 ;;Total ram usage:        8 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; Hardware stack levels required when called:    2
  7819 ;; This function calls:
  7820 ;;		Nothing
  7821 ;; This function is called by:
  7822 ;;		_USART_handler
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text28
  7827  0050F2                     __ptext28:
  7828                           	opt callstack 0
  7829  0050F2                     _memset:
  7830                           	opt callstack 27
  7831                           
  7832                           ;main.c: 271:     for(int i=0;i<size;i++){
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;incstack = 0
  7836  0050F2  0E00               	movlw	0
  7837  0050F4  0100               	movlb	0	; () banked
  7838  0050F6  6F67               	movwf	(memset@i+1)& (0+255),b
  7839  0050F8  0E00               	movlw	0
  7840  0050FA  6F66               	movwf	memset@i& (0+255),b
  7841  0050FC  D00B               	goto	l6488
  7842  0050FE                     l6484:
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;main.c: 272:         st[i] = x;
  7846  0050FE  5166               	movf	memset@i& (0+255),w,b
  7847  005100  2560               	addwf	memset@st& (0+255),w,b
  7848  005102  6ED9               	movwf	fsr2l,c
  7849  005104  5167               	movf	(memset@i+1)& (0+255),w,b
  7850  005106  2161               	addwfc	(memset@st+1)& (0+255),w,b
  7851  005108  6EDA               	movwf	fsr2h,c
  7852  00510A  0060  F18B  FFDF   	movff	memset@x,indf2
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;main.c: 273:     }
  7856  005110  4B66               	infsnz	memset@i& (0+255),f,b
  7857  005112  2B67               	incf	(memset@i+1)& (0+255),f,b
  7858  005114                     l6488:
  7859                           
  7860                           ; BSR set to: 0
  7861  005114  5163               	movf	memset@size& (0+255),w,b
  7862  005116  5D66               	subwf	memset@i& (0+255),w,b
  7863  005118  5167               	movf	(memset@i+1)& (0+255),w,b
  7864  00511A  0A80               	xorlw	128
  7865  00511C  6F65               	movwf	??_memset& (0+255),b
  7866  00511E  5164               	movf	(memset@size+1)& (0+255),w,b
  7867  005120  0A80               	xorlw	128
  7868  005122  5965               	subwfb	??_memset& (0+255),w,b
  7869  005124  B0D8               	btfsc	status,0,c
  7870  005126  0012               	return	
  7871  005128  D7EA               	goto	l6484
  7872  00512A                     __end_of_memset:
  7873                           	opt callstack 0
  7874                           
  7875 ;; *************** function _USART1_SendString *****************
  7876 ;; Defined at:
  7877 ;;		line 58 in file "USART1.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  str             2    4[BANK0 ] PTR unsigned char 
  7880 ;;		 -> tx_buffer(32), 
  7881 ;;  size            2    6[BANK0 ] int 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  attempts        2   10[BANK0 ] unsigned int 
  7884 ;;  i               2    8[BANK0 ] unsigned int 
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  1    wreg      unsigned char 
  7887 ;; Registers used:
  7888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7895 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7897 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7898 ;;Total ram usage:        8 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; Hardware stack levels required when called:    3
  7901 ;; This function calls:
  7902 ;;		_USART1_SendByte
  7903 ;; This function is called by:
  7904 ;;		_USART_handler
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text29
  7909  004932                     __ptext29:
  7910                           	opt callstack 0
  7911  004932                     _USART1_SendString:
  7912                           	opt callstack 26
  7913                           
  7914                           ;USART1.c: 59:     unsigned int attempts = 65000,i;
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;incstack = 0
  7918  004932  0EFD               	movlw	253
  7919  004934  0100               	movlb	0	; () banked
  7920  004936  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  7921  004938  0EE8               	movlw	232
  7922  00493A  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  7923                           
  7924                           ;USART1.c: 60:     for(i=0;i<size;i++){
  7925  00493C  0E00               	movlw	0
  7926  00493E  6F69               	movwf	(USART1_SendString@i+1)& (0+255),b
  7927  004940  0E00               	movlw	0
  7928  004942  6F68               	movwf	USART1_SendString@i& (0+255),b
  7929  004944  D01E               	goto	l6470
  7930  004946                     l6458:
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;USART1.c: 61:         if(!USART1_SendByte(*(str + i))){
  7934  004946  5168               	movf	USART1_SendString@i& (0+255),w,b
  7935  004948  2564               	addwf	USART1_SendString@str& (0+255),w,b
  7936  00494A  6ED9               	movwf	fsr2l,c
  7937  00494C  5169               	movf	(USART1_SendString@i+1)& (0+255),w,b
  7938  00494E  2165               	addwfc	(USART1_SendString@str+1)& (0+255),w,b
  7939  004950  6EDA               	movwf	fsr2h,c
  7940  004952  50DF               	movf	indf2,w,c
  7941  004954  EC04  F029         	call	_USART1_SendByte
  7942  004958  0900               	iorlw	0
  7943  00495A  A4D8               	btfss	status,2,c
  7944  00495C  D007               	goto	l6462
  7945                           
  7946                           ;USART1.c: 62:             attempts --;
  7947  00495E  0100               	movlb	0	; () banked
  7948  004960  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  7949  004962  A0D8               	btfss	status,0,c
  7950  004964  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  7951                           
  7952                           ;USART1.c: 63:             i --;
  7953  004966  0768               	decf	USART1_SendString@i& (0+255),f,b
  7954  004968  A0D8               	btfss	status,0,c
  7955  00496A  0769               	decf	(USART1_SendString@i+1)& (0+255),f,b
  7956  00496C                     l6462:
  7957                           
  7958                           ;USART1.c: 65:         if(!attempts)
  7959  00496C  0100               	movlb	0	; () banked
  7960  00496E  516A               	movf	USART1_SendString@attempts& (0+255),w,b
  7961  004970  116B               	iorwf	(USART1_SendString@attempts+1)& (0+255),w,b
  7962  004972  B4D8               	btfsc	status,2,c
  7963  004974  0012               	return	
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;USART1.c: 67:         attempts = 65000;
  7967  004976  0EFD               	movlw	253
  7968  004978  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  7969  00497A  0EE8               	movlw	232
  7970  00497C  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  7971                           
  7972                           ; BSR set to: 0
  7973                           ;USART1.c: 68:     }
  7974  00497E  4B68               	infsnz	USART1_SendString@i& (0+255),f,b
  7975  004980  2B69               	incf	(USART1_SendString@i+1)& (0+255),f,b
  7976  004982                     l6470:
  7977                           
  7978                           ; BSR set to: 0
  7979  004982  5166               	movf	USART1_SendString@size& (0+255),w,b
  7980  004984  5D68               	subwf	USART1_SendString@i& (0+255),w,b
  7981  004986  5167               	movf	(USART1_SendString@size+1)& (0+255),w,b
  7982  004988  5969               	subwfb	(USART1_SendString@i+1)& (0+255),w,b
  7983  00498A  A0D8               	btfss	status,0,c
  7984  00498C  D7DC               	goto	l6458
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;USART1.c: 69:     attempts =65000;
  7988  00498E  0EFD               	movlw	253
  7989  004990  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  7990  004992  0EE8               	movlw	232
  7991  004994  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  7992  004996                     l6474:
  7993                           
  7994                           ; BSR set to: 0
  7995  004996  0E0D               	movlw	13
  7996  004998  EC04  F029         	call	_USART1_SendByte
  7997  00499C  0900               	iorlw	0
  7998  00499E  A4D8               	btfss	status,2,c
  7999  0049A0  D009               	goto	u8600
  8000  0049A2  0100               	movlb	0	; () banked
  8001  0049A4  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  8002  0049A6  A0D8               	btfss	status,0,c
  8003  0049A8  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  8004  0049AA  296A               	incf	USART1_SendString@attempts& (0+255),w,b
  8005  0049AC  E1F4               	bnz	l6474
  8006  0049AE  296B               	incf	(USART1_SendString@attempts+1)& (0+255),w,b
  8007  0049B0  A4D8               	btfss	status,2,c
  8008  0049B2  D7F1               	goto	l6474
  8009  0049B4                     u8600:
  8010  0049B4                     l6478:
  8011  0049B4  0E0A               	movlw	10
  8012  0049B6  EC04  F029         	call	_USART1_SendByte
  8013  0049BA  0900               	iorlw	0
  8014  0049BC  A4D8               	btfss	status,2,c
  8015  0049BE  0012               	return	
  8016  0049C0  0100               	movlb	0	; () banked
  8017  0049C2  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  8018  0049C4  A0D8               	btfss	status,0,c
  8019  0049C6  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  8020  0049C8  296A               	incf	USART1_SendString@attempts& (0+255),w,b
  8021  0049CA  E1F4               	bnz	l6478
  8022  0049CC  296B               	incf	(USART1_SendString@attempts+1)& (0+255),w,b
  8023  0049CE  B4D8               	btfsc	status,2,c
  8024  0049D0  0012               	return	
  8025  0049D2  D7F0               	goto	u8600
  8026  0049D4                     __end_of_USART1_SendString:
  8027                           	opt callstack 0
  8028                           
  8029 ;; *************** function _USART1_SendByte *****************
  8030 ;; Defined at:
  8031 ;;		line 49 in file "USART1.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;  byte            1    wreg     unsigned char 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;  byte            1    0[BANK0 ] unsigned char 
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      unsigned char 
  8038 ;; Registers used:
  8039 ;;		wreg
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8046 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8048 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8049 ;;Total ram usage:        1 bytes
  8050 ;; Hardware stack levels used:    1
  8051 ;; Hardware stack levels required when called:    2
  8052 ;; This function calls:
  8053 ;;		Nothing
  8054 ;; This function is called by:
  8055 ;;		_USART1_SendString
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text30
  8060  005208                     __ptext30:
  8061                           	opt callstack 0
  8062  005208                     _USART1_SendByte:
  8063                           	opt callstack 26
  8064                           
  8065                           ;incstack = 0
  8066                           ;USART1_SendByte@byte stored from wreg
  8067  005208  0100               	movlb	0	; () banked
  8068  00520A  6F60               	movwf	USART1_SendByte@byte& (0+255),b
  8069                           
  8070                           ;USART1.c: 50:     if(!PIE3bits.U1TXIE){
  8071  00520C  0139               	movlb	57	; () banked
  8072  00520E  B993               	btfsc	147,4,b	;volatile
  8073  005210  D006               	goto	l6422
  8074                           
  8075                           ; BSR set to: 57
  8076                           ;USART1.c: 51:         tx_byte = byte;
  8077  005212  0060  F180  F052   	movff	USART1_SendByte@byte,_tx_byte
  8078                           
  8079                           ; BSR set to: 57
  8080                           ;USART1.c: 52:         PIE3bits.U1TXIE = 1;
  8081  005218  8993               	bsf	147,4,b	;volatile
  8082                           
  8083                           ;USART1.c: 53:         return 1;
  8084  00521A  0E01               	movlw	1
  8085  00521C  0012               	return	
  8086  00521E                     l6422:
  8087                           
  8088                           ; BSR set to: 57
  8089                           ;USART1.c: 55:     return 0;
  8090  00521E  0E00               	movlw	0
  8091                           
  8092                           ; BSR set to: 57
  8093  005220  0012               	return		;funcret
  8094  005222                     __end_of_USART1_SendByte:
  8095                           	opt callstack 0
  8096                           
  8097 ;; *************** function _I2C_handler *****************
  8098 ;; Defined at:
  8099 ;;		line 89 in file "I2C.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;  ad5272_selec    1    wreg     unsigned char 
  8102 ;;  value           2   12[BANK0 ] int 
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;  ad5272_selec    1   14[BANK0 ] unsigned char 
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  1    wreg      void 
  8107 ;; Registers used:
  8108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8117 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8118 ;;Total ram usage:        3 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; Hardware stack levels required when called:    3
  8121 ;; This function calls:
  8122 ;;		_I2C_Transmit
  8123 ;; This function is called by:
  8124 ;;		_USART_handler
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           	psect	text31
  8129  004FB4                     __ptext31:
  8130                           	opt callstack 0
  8131  004FB4                     _I2C_handler:
  8132                           	opt callstack 26
  8133                           
  8134                           ; BSR set to: 57
  8135                           ;incstack = 0
  8136                           ;I2C_handler@ad5272_select stored from wreg
  8137  004FB4  0100               	movlb	0	; () banked
  8138  004FB6  6F6E               	movwf	I2C_handler@ad5272_select& (0+255),b
  8139                           
  8140                           ;I2C.c: 90:     AD5272_COMMANDS[0] = (unsigned char)(AD5272_COMMANDS[0] | (value >> 8));
  8141  004FB8  0100               	movlb	0	; () banked
  8142  004FBA  516D               	movf	(I2C_handler@value+1)& (0+255),w,b
  8143  004FBC  1054               	iorwf	_AD5272_COMMANDS,w,c
  8144  004FBE  6E54               	movwf	_AD5272_COMMANDS,c
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;I2C.c: 91:     AD5272_COMMANDS[1] = (unsigned char)(value & 0x00);
  8148  004FC0  0E00               	movlw	0
  8149  004FC2  6E55               	movwf	_AD5272_COMMANDS+1,c
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;I2C.c: 92:     if(ad5272_select == 0){
  8153  004FC4  516E               	movf	I2C_handler@ad5272_select& (0+255),w,b
  8154  004FC6  A4D8               	btfss	status,2,c
  8155  004FC8  D00B               	goto	l6510
  8156                           
  8157                           ; BSR set to: 0
  8158  004FCA  0E54               	movlw	low _AD5272_COMMANDS
  8159  004FCC  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  8160  004FCE  0E00               	movlw	high _AD5272_COMMANDS
  8161  004FD0  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  8162  004FD2  0E02               	movlw	2
  8163  004FD4  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  8164  004FD6  0E5E               	movlw	94
  8165  004FD8  6F63               	movwf	I2C_Transmit@address& (0+255),b
  8166  004FDA  ECEA  F024         	call	_I2C_Transmit	;wreg free
  8167                           
  8168                           ;I2C.c: 94:     }else{
  8169  004FDE  D00A               	goto	l6512
  8170  004FE0                     l6510:
  8171                           
  8172                           ; BSR set to: 0
  8173  004FE0  0E54               	movlw	low _AD5272_COMMANDS
  8174  004FE2  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  8175  004FE4  0E00               	movlw	high _AD5272_COMMANDS
  8176  004FE6  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  8177  004FE8  0E02               	movlw	2
  8178  004FEA  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  8179  004FEC  0E58               	movlw	88
  8180  004FEE  6F63               	movwf	I2C_Transmit@address& (0+255),b
  8181  004FF0  ECEA  F024         	call	_I2C_Transmit	;wreg free
  8182  004FF4                     l6512:
  8183  004FF4  0100               	movlb	0	; () banked
  8184  004FF6  51F9               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  8185  004FF8  A4D8               	btfss	status,2,c
  8186  004FFA  0012               	return	
  8187  004FFC  D7FB               	goto	l6512
  8188  004FFE                     __end_of_I2C_handler:
  8189                           	opt callstack 0
  8190                           
  8191 ;; *************** function _I2C_Transmit *****************
  8192 ;; Defined at:
  8193 ;;		line 49 in file "I2C.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;  buffer          2    0[BANK0 ] PTR unsigned char 
  8196 ;;		 -> AD5272_COMMANDS(2), 
  8197 ;;  buffer_size     1    2[BANK0 ] unsigned char 
  8198 ;;  address         1    3[BANK0 ] unsigned char 
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;  i               1   11[BANK0 ] unsigned char 
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  1    wreg      unsigned char 
  8203 ;; Registers used:
  8204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8210 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8212 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8213 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8214 ;;Total ram usage:       12 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:    2
  8217 ;; This function calls:
  8218 ;;		Nothing
  8219 ;; This function is called by:
  8220 ;;		_main
  8221 ;;		_I2C_handler
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text32
  8226  0049D4                     __ptext32:
  8227                           	opt callstack 0
  8228  0049D4                     _I2C_Transmit:
  8229                           	opt callstack 26
  8230                           
  8231                           ;I2C.c: 50:     if(I2C_STOP_DETECTED && I2C1STAT0bits.BFRE && I2C1CNT == 0){
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;incstack = 0
  8235  0049D4  0100               	movlb	0	; () banked
  8236  0049D6  51F9               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  8237  0049D8  B4D8               	btfsc	status,2,c
  8238  0049DA  0012               	return	
  8239                           
  8240                           ; BSR set to: 0
  8241  0049DC  013D               	movlb	61	; () banked
  8242  0049DE  AF77               	btfss	119,7,b	;volatile
  8243  0049E0  0012               	return	
  8244                           
  8245                           ; BSR set to: 61
  8246  0049E2  516C               	movf	108,w,b	;volatile
  8247  0049E4  A4D8               	btfss	status,2,c
  8248  0049E6  0012               	return	
  8249                           
  8250                           ; BSR set to: 61
  8251                           ;I2C.c: 51:         I2C_STOP_DETECTED = 0;
  8252  0049E8  0E00               	movlw	0
  8253  0049EA  0100               	movlb	0	; () banked
  8254  0049EC  6FF9               	movwf	_I2C_STOP_DETECTED& (0+255),b
  8255                           
  8256                           ;I2C.c: 52:         for(unsigned char i=0;i<(buffer_size-1);i++){
  8257  0049EE  0E00               	movlw	0
  8258  0049F0  6F6B               	movwf	I2C_Transmit@i& (0+255),b
  8259  0049F2  D016               	goto	l6438
  8260  0049F4                     l6434:
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;I2C.c: 53:             I2C_TX_BUFFER[i] = buffer[i+1];
  8264  0049F4  516B               	movf	I2C_Transmit@i& (0+255),w,b
  8265  0049F6  2560               	addwf	I2C_Transmit@buffer& (0+255),w,b
  8266  0049F8  6F64               	movwf	??_I2C_Transmit& (0+255),b
  8267  0049FA  0E00               	movlw	0
  8268  0049FC  2161               	addwfc	(I2C_Transmit@buffer+1)& (0+255),w,b
  8269  0049FE  6F65               	movwf	(??_I2C_Transmit+1)& (0+255),b
  8270  004A00  0E01               	movlw	1
  8271  004A02  2564               	addwf	??_I2C_Transmit& (0+255),w,b
  8272  004A04  6ED9               	movwf	fsr2l,c
  8273  004A06  0E00               	movlw	0
  8274  004A08  2165               	addwfc	(??_I2C_Transmit+1)& (0+255),w,b
  8275  004A0A  6EDA               	movwf	fsr2h,c
  8276  004A0C  0E2D               	movlw	low _I2C_TX_BUFFER
  8277  004A0E  256B               	addwf	I2C_Transmit@i& (0+255),w,b
  8278  004A10  6EE1               	movwf	fsr1l,c
  8279  004A12  6AE2               	clrf	fsr1h,c
  8280  004A14  0E00               	movlw	high _I2C_TX_BUFFER
  8281  004A16  22E2               	addwfc	fsr1h,f,c
  8282  004A18  006F FF7F FFE7     	movff	indf2,indf1
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;I2C.c: 54:         }
  8286  004A1E  2B6B               	incf	I2C_Transmit@i& (0+255),f,b
  8287  004A20                     l6438:
  8288                           
  8289                           ; BSR set to: 0
  8290  004A20  0EFF               	movlw	255
  8291  004A22  6F64               	movwf	??_I2C_Transmit& (0+255),b
  8292  004A24  0EFF               	movlw	255
  8293  004A26  6F65               	movwf	(??_I2C_Transmit+1)& (0+255),b
  8294  004A28  5162               	movf	I2C_Transmit@buffer_size& (0+255),w,b
  8295  004A2A  6F66               	movwf	(??_I2C_Transmit+2)& (0+255),b
  8296  004A2C  6B67               	clrf	(??_I2C_Transmit+3)& (0+255),b
  8297  004A2E  5164               	movf	??_I2C_Transmit& (0+255),w,b
  8298  004A30  2766               	addwf	(??_I2C_Transmit+2)& (0+255),f,b
  8299  004A32  5165               	movf	(??_I2C_Transmit+1)& (0+255),w,b
  8300  004A34  2367               	addwfc	(??_I2C_Transmit+3)& (0+255),f,b
  8301  004A36  516B               	movf	I2C_Transmit@i& (0+255),w,b
  8302  004A38  6F68               	movwf	(??_I2C_Transmit+4)& (0+255),b
  8303  004A3A  6B69               	clrf	(??_I2C_Transmit+5)& (0+255),b
  8304  004A3C  5166               	movf	(??_I2C_Transmit+2)& (0+255),w,b
  8305  004A3E  5D68               	subwf	(??_I2C_Transmit+4)& (0+255),w,b
  8306  004A40  5169               	movf	(??_I2C_Transmit+5)& (0+255),w,b
  8307  004A42  0A80               	xorlw	128
  8308  004A44  6F6A               	movwf	(??_I2C_Transmit+6)& (0+255),b
  8309  004A46  5167               	movf	(??_I2C_Transmit+3)& (0+255),w,b
  8310  004A48  0A80               	xorlw	128
  8311  004A4A  596A               	subwfb	(??_I2C_Transmit+6)& (0+255),w,b
  8312  004A4C  A0D8               	btfss	status,0,c
  8313  004A4E  D7D2               	goto	l6434
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;I2C.c: 55:         I2C1ADB1 = address;
  8317  004A50  0060  F18F  FD6E   	movff	I2C_Transmit@address,15726	;volatile
  8318                           
  8319                           ;I2C.c: 56:         I2C1CNT = buffer_size;
  8320  004A56  0060  F18B  FD6C   	movff	I2C_Transmit@buffer_size,15724	;volatile
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;I2C.c: 57:         I2C1TXB = buffer[0];
  8324  004A5C  0060  F183  FFD9   	movff	I2C_Transmit@buffer,fsr2l
  8325  004A62  0060  F187  FFDA   	movff	I2C_Transmit@buffer+1,fsr2h
  8326  004A68  50DF               	movf	indf2,w,c
  8327  004A6A  013D               	movlb	61	; () banked
  8328  004A6C  6F6B               	movwf	107,b	;volatile
  8329                           
  8330                           ; BSR set to: 61
  8331                           ;I2C.c: 58:         I2C_TX_COUNTER = 0;
  8332  004A6E  0E00               	movlw	0
  8333  004A70  6E4F               	movwf	_I2C_TX_COUNTER,c
  8334                           
  8335                           ; BSR set to: 61
  8336                           ;I2C.c: 59:         I2C1CON0bits.S = 1;
  8337  004A72  8B73               	bsf	115,5,b	;volatile
  8338  004A74  0012               	return		;funcret
  8339  004A76                     __end_of_I2C_Transmit:
  8340                           	opt callstack 0
  8341                           
  8342 ;; *************** function _GetStringSize *****************
  8343 ;; Defined at:
  8344 ;;		line 260 in file "main.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;		None
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  i               2    2[BANK0 ] int 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  2    0[BANK0 ] int 
  8351 ;; Registers used:
  8352 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8358 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8361 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8362 ;;Total ram usage:        4 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; Hardware stack levels required when called:    2
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_USART_handler
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text33
  8373  005040                     __ptext33:
  8374                           	opt callstack 0
  8375  005040                     _GetStringSize:
  8376                           	opt callstack 27
  8377                           
  8378                           ;main.c: 261:     int i;;main.c: 262:     for(i=0;i<32;i++){
  8379                           
  8380                           ;incstack = 0
  8381  005040  0E00               	movlw	0
  8382  005042  0100               	movlb	0	; () banked
  8383  005044  6F63               	movwf	(GetStringSize@i+1)& (0+255),b
  8384  005046  0E00               	movlw	0
  8385  005048  6F62               	movwf	GetStringSize@i& (0+255),b
  8386  00504A                     l6520:
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;main.c: 263:         if(tx_buffer[i] == 0){
  8390  00504A  0E7A               	movlw	low _tx_buffer
  8391  00504C  2562               	addwf	GetStringSize@i& (0+255),w,b
  8392  00504E  6ED9               	movwf	fsr2l,c
  8393  005050  0E01               	movlw	high _tx_buffer
  8394  005052  2163               	addwfc	(GetStringSize@i+1)& (0+255),w,b
  8395  005054  6EDA               	movwf	fsr2h,c
  8396  005056  50DF               	movf	indf2,w,c
  8397  005058  B4D8               	btfsc	status,2,c
  8398  00505A  D00A               	goto	u8670
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;main.c: 266:     }
  8402  00505C  4B62               	infsnz	GetStringSize@i& (0+255),f,b
  8403  00505E  2B63               	incf	(GetStringSize@i+1)& (0+255),f,b
  8404                           
  8405                           ; BSR set to: 0
  8406  005060  BF63               	btfsc	(GetStringSize@i+1)& (0+255),7,b
  8407  005062  D7F3               	goto	l6520
  8408  005064  5163               	movf	(GetStringSize@i+1)& (0+255),w,b
  8409  005066  E104               	bnz	u8670
  8410  005068  0E20               	movlw	32
  8411  00506A  5D62               	subwf	GetStringSize@i& (0+255),w,b
  8412  00506C  A0D8               	btfss	status,0,c
  8413  00506E  D7ED               	goto	l6520
  8414  005070                     u8670:
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;main.c: 267:     return i;
  8418  005070  0060  F188  F060   	movff	GetStringSize@i,?_GetStringSize
  8419  005076  0060  F18C  F061   	movff	GetStringSize@i+1,?_GetStringSize+1
  8420                           
  8421                           ; BSR set to: 0
  8422  00507C  0012               	return		;funcret
  8423  00507E                     __end_of_GetStringSize:
  8424                           	opt callstack 0
  8425                           
  8426 ;; *************** function _USART1_ReceiveCommand *****************
  8427 ;; Defined at:
  8428 ;;		line 84 in file "USART1.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;		None
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      unsigned char 
  8435 ;; Registers used:
  8436 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8444 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8445 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8446 ;;Total ram usage:        2 bytes
  8447 ;; Hardware stack levels used:    1
  8448 ;; Hardware stack levels required when called:    3
  8449 ;; This function calls:
  8450 ;;		___wmul
  8451 ;; This function is called by:
  8452 ;;		_main
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text34
  8457  003EE0                     __ptext34:
  8458                           	opt callstack 0
  8459  003EE0                     _USART1_ReceiveCommand:
  8460                           	opt callstack 27
  8461                           
  8462                           ;USART1.c: 85:     if(rx_counter == 0)
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;incstack = 0
  8466  003EE0  5053               	movf	_rx_counter,w,c
  8467  003EE2  A4D8               	btfss	status,2,c
  8468  003EE4  D002               	goto	l6572
  8469  003EE6                     u8680:
  8470                           
  8471                           ;USART1.c: 86:         return 0;
  8472  003EE6  0E00               	movlw	0
  8473  003EE8  0012               	return	
  8474  003EEA                     l6572:
  8475                           
  8476                           ;USART1.c: 87:     if(rx_counter == 1 && rx_buffer[0] != 'W' && rx_buffer[0] != 'R'){
  8477  003EEA  0453               	decf	_rx_counter,w,c
  8478  003EEC  A4D8               	btfss	status,2,c
  8479  003EEE  D00C               	goto	l6584
  8480  003EF0  0E57               	movlw	87
  8481  003EF2  0101               	movlb	1	; () banked
  8482  003EF4  1900               	xorwf	_rx_buffer& (0+255),w,b
  8483  003EF6  B4D8               	btfsc	status,2,c
  8484  003EF8  D007               	goto	l6584
  8485                           
  8486                           ; BSR set to: 1
  8487  003EFA  0E52               	movlw	82
  8488  003EFC  1900               	xorwf	_rx_buffer& (0+255),w,b
  8489  003EFE  B4D8               	btfsc	status,2,c
  8490  003F00  D003               	goto	l6584
  8491  003F02                     u8710:
  8492                           
  8493                           ; BSR set to: 1
  8494                           ;USART1.c: 88:         rx_counter = 0;
  8495  003F02  0E00               	movlw	0
  8496  003F04  6E53               	movwf	_rx_counter,c
  8497  003F06  D7EF               	goto	u8680
  8498  003F08                     l6584:
  8499                           
  8500                           ;USART1.c: 91:     if(rx_buffer[0] == 'R') {
  8501  003F08  0E52               	movlw	82
  8502  003F0A  0101               	movlb	1	; () banked
  8503  003F0C  1900               	xorwf	_rx_buffer& (0+255),w,b
  8504  003F0E  A4D8               	btfss	status,2,c
  8505  003F10  D032               	goto	l6628
  8506                           
  8507                           ; BSR set to: 1
  8508                           ;USART1.c: 92:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57)
      +                          )){
  8509  003F12  0E02               	movlw	2
  8510  003F14  1853               	xorwf	_rx_counter,w,c
  8511  003F16  A4D8               	btfss	status,2,c
  8512  003F18  D007               	goto	l6594
  8513                           
  8514                           ; BSR set to: 1
  8515  003F1A  0E2F               	movlw	47
  8516  003F1C  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8517  003F1E  D7F1               	goto	u8710
  8518                           
  8519                           ; BSR set to: 1
  8520  003F20  0E39               	movlw	57
  8521  003F22  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8522  003F24  D001               	goto	l6594
  8523  003F26  D7ED               	goto	u8710
  8524  003F28                     l6594:
  8525                           
  8526                           ; BSR set to: 1
  8527  003F28  0E03               	movlw	3
  8528  003F2A  1853               	xorwf	_rx_counter,w,c
  8529  003F2C  A4D8               	btfss	status,2,c
  8530  003F2E  D004               	goto	l6600
  8531                           
  8532                           ; BSR set to: 1
  8533  003F30  0E0D               	movlw	13
  8534  003F32  1902               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8535  003F34  A4D8               	btfss	status,2,c
  8536  003F36  D7E5               	goto	u8710
  8537  003F38                     l6600:
  8538                           
  8539                           ; BSR set to: 1
  8540  003F38  0E04               	movlw	4
  8541  003F3A  1853               	xorwf	_rx_counter,w,c
  8542  003F3C  A4D8               	btfss	status,2,c
  8543  003F3E  D7D3               	goto	u8680
  8544                           
  8545                           ; BSR set to: 1
  8546                           ;USART1.c: 97:             if(rx_buffer[0] != 'R' || (rx_buffer[1] < 48) || (rx_buffer[1
      +                          ] > 57) || rx_buffer[2] != '\r' || rx_buffer[3] != '\n'){
  8547  003F40  0E52               	movlw	82
  8548  003F42  1900               	xorwf	_rx_buffer& (0+255),w,b
  8549  003F44  A4D8               	btfss	status,2,c
  8550  003F46  D7DD               	goto	u8710
  8551                           
  8552                           ; BSR set to: 1
  8553  003F48  0E2F               	movlw	47
  8554  003F4A  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8555  003F4C  D7DA               	goto	u8710
  8556                           
  8557                           ; BSR set to: 1
  8558  003F4E  0E3A               	movlw	58
  8559  003F50  6101               	cpfslt	(_rx_buffer+1)& (0+255),b
  8560  003F52  D7D7               	goto	u8710
  8561                           
  8562                           ; BSR set to: 1
  8563  003F54  0E0D               	movlw	13
  8564  003F56  1902               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8565  003F58  A4D8               	btfss	status,2,c
  8566  003F5A  D7D3               	goto	u8710
  8567                           
  8568                           ; BSR set to: 1
  8569  003F5C  0E0A               	movlw	10
  8570  003F5E  1903               	xorwf	(_rx_buffer+3)& (0+255),w,b
  8571  003F60  A4D8               	btfss	status,2,c
  8572  003F62  D7CF               	goto	u8710
  8573                           
  8574                           ; BSR set to: 1
  8575                           ;USART1.c: 101:             COMMAND_WR = 1;
  8576  003F64  0E01               	movlw	1
  8577  003F66  6E51               	movwf	_COMMAND_WR,c
  8578                           
  8579                           ; BSR set to: 1
  8580                           ;USART1.c: 102:             COMMAND = rx_buffer[1]-48;
  8581  003F68  5101               	movf	(_rx_buffer+1)& (0+255),w,b
  8582  003F6A  0FD0               	addlw	208
  8583  003F6C  6E50               	movwf	_COMMAND,c
  8584  003F6E                     l6622:
  8585                           
  8586                           ;USART1.c: 103:             rx_counter = 0;
  8587  003F6E  0E00               	movlw	0
  8588  003F70  6E53               	movwf	_rx_counter,c
  8589                           
  8590                           ;USART1.c: 104:             return 1;
  8591  003F72  0E01               	movlw	1
  8592  003F74  0012               	return	
  8593  003F76                     l6628:
  8594                           
  8595                           ; BSR set to: 1
  8596                           ;USART1.c: 107:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57
      +                          ))){
  8597  003F76  0E02               	movlw	2
  8598  003F78  1853               	xorwf	_rx_counter,w,c
  8599  003F7A  A4D8               	btfss	status,2,c
  8600  003F7C  D007               	goto	l6636
  8601                           
  8602                           ; BSR set to: 1
  8603  003F7E  0E2F               	movlw	47
  8604  003F80  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8605  003F82  D7BF               	goto	u8710
  8606                           
  8607                           ; BSR set to: 1
  8608  003F84  0E39               	movlw	57
  8609  003F86  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8610  003F88  D001               	goto	l6636
  8611  003F8A  D7BB               	goto	u8710
  8612  003F8C                     l6636:
  8613                           
  8614                           ; BSR set to: 1
  8615  003F8C  0E03               	movlw	3
  8616  003F8E  1853               	xorwf	_rx_counter,w,c
  8617  003F90  A4D8               	btfss	status,2,c
  8618  003F92  D007               	goto	l6644
  8619                           
  8620                           ; BSR set to: 1
  8621  003F94  0E2F               	movlw	47
  8622  003F96  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8623  003F98  D7B4               	goto	u8710
  8624                           
  8625                           ; BSR set to: 1
  8626  003F9A  0E39               	movlw	57
  8627  003F9C  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8628  003F9E  D001               	goto	l6644
  8629  003FA0  D7B0               	goto	u8710
  8630  003FA2                     l6644:
  8631                           
  8632                           ; BSR set to: 1
  8633  003FA2  0E04               	movlw	4
  8634  003FA4  1853               	xorwf	_rx_counter,w,c
  8635  003FA6  A4D8               	btfss	status,2,c
  8636  003FA8  D007               	goto	l6652
  8637                           
  8638                           ; BSR set to: 1
  8639  003FAA  0E2F               	movlw	47
  8640  003FAC  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8641  003FAE  D7A9               	goto	u8710
  8642                           
  8643                           ; BSR set to: 1
  8644  003FB0  0E39               	movlw	57
  8645  003FB2  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8646  003FB4  D001               	goto	l6652
  8647  003FB6  D7A5               	goto	u8710
  8648  003FB8                     l6652:
  8649                           
  8650                           ; BSR set to: 1
  8651  003FB8  0E05               	movlw	5
  8652  003FBA  1853               	xorwf	_rx_counter,w,c
  8653  003FBC  A4D8               	btfss	status,2,c
  8654  003FBE  D007               	goto	l6660
  8655                           
  8656                           ; BSR set to: 1
  8657  003FC0  0E2F               	movlw	47
  8658  003FC2  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8659  003FC4  D79E               	goto	u8710
  8660                           
  8661                           ; BSR set to: 1
  8662  003FC6  0E39               	movlw	57
  8663  003FC8  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8664  003FCA  D001               	goto	l6660
  8665  003FCC  D79A               	goto	u8710
  8666  003FCE                     l6660:
  8667                           
  8668                           ; BSR set to: 1
  8669  003FCE  0E06               	movlw	6
  8670  003FD0  1853               	xorwf	_rx_counter,w,c
  8671  003FD2  A4D8               	btfss	status,2,c
  8672  003FD4  D007               	goto	l6668
  8673                           
  8674                           ; BSR set to: 1
  8675  003FD6  0E2F               	movlw	47
  8676  003FD8  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8677  003FDA  D793               	goto	u8710
  8678                           
  8679                           ; BSR set to: 1
  8680  003FDC  0E39               	movlw	57
  8681  003FDE  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8682  003FE0  D001               	goto	l6668
  8683  003FE2  D78F               	goto	u8710
  8684  003FE4                     l6668:
  8685                           
  8686                           ; BSR set to: 1
  8687  003FE4  0E07               	movlw	7
  8688  003FE6  1853               	xorwf	_rx_counter,w,c
  8689  003FE8  A4D8               	btfss	status,2,c
  8690  003FEA  D004               	goto	l6674
  8691                           
  8692                           ; BSR set to: 1
  8693  003FEC  0E0D               	movlw	13
  8694  003FEE  1906               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8695  003FF0  A4D8               	btfss	status,2,c
  8696  003FF2  D787               	goto	u8710
  8697  003FF4                     l6674:
  8698                           
  8699                           ; BSR set to: 1
  8700  003FF4  0E08               	movlw	8
  8701  003FF6  1853               	xorwf	_rx_counter,w,c
  8702  003FF8  A4D8               	btfss	status,2,c
  8703  003FFA  D775               	goto	u8680
  8704                           
  8705                           ; BSR set to: 1
  8706                           ;USART1.c: 120:             if(rx_buffer[0] != 'W' || (rx_buffer[1] < 48) || (rx_buffer[
      +                          1] > 57) || (rx_buffer[2] < 48) || (rx_buffer[2] > 57) || (rx_buffer[3] < 48) || (rx_buf
      +                          fer[3] > 57) || (rx_buffer[4] < 48) || (rx_buffer[4] > 57) || (rx_buffer[5] < 48) || (rx
      +                          _buffer[5] > 57) || rx_buffer[6] != '\r' || rx_buffer[7] != '\n'){
  8707  003FFC  0E57               	movlw	87
  8708  003FFE  1900               	xorwf	_rx_buffer& (0+255),w,b
  8709  004000  A4D8               	btfss	status,2,c
  8710  004002  D77F               	goto	u8710
  8711                           
  8712                           ; BSR set to: 1
  8713  004004  0E2F               	movlw	47
  8714  004006  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8715  004008  D77C               	goto	u8710
  8716                           
  8717                           ; BSR set to: 1
  8718  00400A  0E3A               	movlw	58
  8719  00400C  6101               	cpfslt	(_rx_buffer+1)& (0+255),b
  8720  00400E  D779               	goto	u8710
  8721                           
  8722                           ; BSR set to: 1
  8723  004010  0E2F               	movlw	47
  8724  004012  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8725  004014  D776               	goto	u8710
  8726                           
  8727                           ; BSR set to: 1
  8728  004016  0E3A               	movlw	58
  8729  004018  6102               	cpfslt	(_rx_buffer+2)& (0+255),b
  8730  00401A  D773               	goto	u8710
  8731                           
  8732                           ; BSR set to: 1
  8733  00401C  0E2F               	movlw	47
  8734  00401E  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8735  004020  D770               	goto	u8710
  8736                           
  8737                           ; BSR set to: 1
  8738  004022  0E3A               	movlw	58
  8739  004024  6103               	cpfslt	(_rx_buffer+3)& (0+255),b
  8740  004026  D76D               	goto	u8710
  8741                           
  8742                           ; BSR set to: 1
  8743  004028  0E2F               	movlw	47
  8744  00402A  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8745  00402C  D76A               	goto	u8710
  8746                           
  8747                           ; BSR set to: 1
  8748  00402E  0E3A               	movlw	58
  8749  004030  6104               	cpfslt	(_rx_buffer+4)& (0+255),b
  8750  004032  D767               	goto	u8710
  8751                           
  8752                           ; BSR set to: 1
  8753  004034  0E2F               	movlw	47
  8754  004036  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8755  004038  D764               	goto	u8710
  8756                           
  8757                           ; BSR set to: 1
  8758  00403A  0E3A               	movlw	58
  8759  00403C  6105               	cpfslt	(_rx_buffer+5)& (0+255),b
  8760  00403E  D761               	goto	u8710
  8761                           
  8762                           ; BSR set to: 1
  8763  004040  0E0D               	movlw	13
  8764  004042  1906               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8765  004044  A4D8               	btfss	status,2,c
  8766  004046  D75D               	goto	u8710
  8767                           
  8768                           ; BSR set to: 1
  8769  004048  0E0A               	movlw	10
  8770  00404A  1907               	xorwf	(_rx_buffer+7)& (0+255),w,b
  8771  00404C  A4D8               	btfss	status,2,c
  8772  00404E  D759               	goto	u8710
  8773                           
  8774                           ; BSR set to: 1
  8775                           ;USART1.c: 124:             COMMAND_WR = 0;
  8776  004050  0E00               	movlw	0
  8777  004052  6E51               	movwf	_COMMAND_WR,c
  8778                           
  8779                           ; BSR set to: 1
  8780                           ;USART1.c: 125:             COMMAND = rx_buffer[1]-48;
  8781  004054  5101               	movf	(_rx_buffer+1)& (0+255),w,b
  8782  004056  0FD0               	addlw	208
  8783  004058  6E50               	movwf	_COMMAND,c
  8784                           
  8785                           ; BSR set to: 1
  8786                           ;USART1.c: 126:             COMMAND_WRITE_NUMBER = ((rx_buffer[2]-48) * 1000) + ((rx_buf
      +                          fer[3]-48) * 100) + ((rx_buffer[4]-48) * 10) + (rx_buffer[5]-48);
  8787  00405A  0060  F408  F060   	movff	_rx_buffer+2,___wmul@multiplier
  8788  004060  0100               	movlb	0	; () banked
  8789  004062  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  8790  004064  0E03               	movlw	3
  8791  004066  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8792  004068  0EE8               	movlw	232
  8793  00406A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  8794  00406C  ECCB  F028         	call	___wmul	;wreg free
  8795  004070  0101               	movlb	1	; () banked
  8796  004072  5103               	movf	(_rx_buffer+3)& (0+255),w,b
  8797  004074  0D64               	mullw	100
  8798  004076  006F FFCC  F066    	movff	prodl,??_USART1_ReceiveCommand
  8799  00407C  006F FFD0  F067    	movff	prodh,??_USART1_ReceiveCommand+1
  8800  004082  5104               	movf	(_rx_buffer+4)& (0+255),w,b
  8801  004084  0D0A               	mullw	10
  8802  004086  50F3               	movf	prodl,w,c
  8803  004088  0100               	movlb	0	; () banked
  8804  00408A  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8805  00408C  50F4               	movf	prodh,w,c
  8806  00408E  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8807  004090  5160               	movf	?___wmul& (0+255),w,b
  8808  004092  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8809  004094  5161               	movf	(?___wmul+1)& (0+255),w,b
  8810  004096  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8811  004098  0101               	movlb	1	; () banked
  8812  00409A  5105               	movf	(_rx_buffer+5)& (0+255),w,b
  8813  00409C  0100               	movlb	0	; () banked
  8814  00409E  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8815  0040A0  0E00               	movlw	0
  8816  0040A2  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8817  0040A4  0EB0               	movlw	176
  8818  0040A6  2566               	addwf	??_USART1_ReceiveCommand& (0+255),w,b
  8819  0040A8  6E4B               	movwf	_COMMAND_WRITE_NUMBER,c
  8820  0040AA  0E2F               	movlw	47
  8821  0040AC  2167               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),w,b
  8822  0040AE  6E4C               	movwf	_COMMAND_WRITE_NUMBER+1,c
  8823  0040B0  D75E               	goto	l6622
  8824  0040B2                     __end_of_USART1_ReceiveCommand:
  8825                           	opt callstack 0
  8826                           
  8827 ;; *************** function ___wmul *****************
  8828 ;; Defined at:
  8829 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8832 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8833 ;; Auto vars:     Size  Location     Type
  8834 ;;  product         2    4[BANK0 ] unsigned int 
  8835 ;; Return value:  Size  Location     Type
  8836 ;;                  2    0[BANK0 ] unsigned int 
  8837 ;; Registers used:
  8838 ;;		wreg, status,2, status,0, prodl, prodh
  8839 ;; Tracked objects:
  8840 ;;		On entry : 0/0
  8841 ;;		On exit  : 0/0
  8842 ;;		Unchanged: 0/0
  8843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8844 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8845 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8847 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8848 ;;Total ram usage:        6 bytes
  8849 ;; Hardware stack levels used:    1
  8850 ;; Hardware stack levels required when called:    2
  8851 ;; This function calls:
  8852 ;;		Nothing
  8853 ;; This function is called by:
  8854 ;;		_USART1_ReceiveCommand
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text35
  8859  005196                     __ptext35:
  8860                           	opt callstack 0
  8861  005196                     ___wmul:
  8862                           	opt callstack 27
  8863                           
  8864                           ;incstack = 0
  8865  005196  0100               	movlb	0	; () banked
  8866  005198  5160               	movf	___wmul@multiplier& (0+255),w,b
  8867  00519A  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8868  00519C  006F FFCC  F064    	movff	prodl,___wmul@product
  8869  0051A2  006F FFD0  F065    	movff	prodh,___wmul@product+1
  8870  0051A8  5160               	movf	___wmul@multiplier& (0+255),w,b
  8871  0051AA  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8872  0051AC  50F3               	movf	prodl,w,c
  8873  0051AE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8874  0051B0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8875  0051B2  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8876  0051B4  50F3               	movf	prodl,w,c
  8877  0051B6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8878                           
  8879                           ; BSR set to: 0
  8880  0051B8  0060  F190  F060   	movff	___wmul@product,?___wmul
  8881  0051BE  0060  F194  F061   	movff	___wmul@product+1,?___wmul+1
  8882                           
  8883                           ; BSR set to: 0
  8884  0051C4  0012               	return		;funcret
  8885  0051C6                     __end_of___wmul:
  8886                           	opt callstack 0
  8887                           
  8888 ;; *************** function _USART1_Init *****************
  8889 ;; Defined at:
  8890 ;;		line 5 in file "USART1.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;  baud_rate       1    wreg     unsigned char 
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;  baud_rate       1    2[BANK0 ] unsigned char 
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  1    wreg      void 
  8897 ;; Registers used:
  8898 ;;		wreg, status,2, status,0
  8899 ;; Tracked objects:
  8900 ;;		On entry : 0/0
  8901 ;;		On exit  : 0/0
  8902 ;;		Unchanged: 0/0
  8903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8907 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8908 ;;Total ram usage:        3 bytes
  8909 ;; Hardware stack levels used:    1
  8910 ;; Hardware stack levels required when called:    2
  8911 ;; This function calls:
  8912 ;;		Nothing
  8913 ;; This function is called by:
  8914 ;;		_main
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           	psect	text36
  8919  004B8C                     __ptext36:
  8920                           	opt callstack 0
  8921  004B8C                     _USART1_Init:
  8922                           	opt callstack 28
  8923                           
  8924                           ; BSR set to: 0
  8925                           ;incstack = 0
  8926                           ;USART1_Init@baud_rate stored from wreg
  8927  004B8C  0100               	movlb	0	; () banked
  8928  004B8E  6F62               	movwf	USART1_Init@baud_rate& (0+255),b
  8929                           
  8930                           ;USART1.c: 7:     TRISCbits.TRISC6 = 1;
  8931  004B90  8CC4               	bsf	16324,6,c	;volatile
  8932                           
  8933                           ;USART1.c: 8:     TRISCbits.TRISC7 = 0;
  8934  004B92  9EC4               	bcf	16324,7,c	;volatile
  8935                           
  8936                           ;USART1.c: 9:     ANSELCbits.ANSELC6 = 0;
  8937  004B94  013A               	movlb	58	; () banked
  8938  004B96  9D60               	bcf	96,6,b	;volatile
  8939                           
  8940                           ;USART1.c: 10:     ANSELCbits.ANSELC7 = 0;
  8941  004B98  9F60               	bcf	96,7,b	;volatile
  8942                           
  8943                           ; BSR set to: 58
  8944                           ;USART1.c: 11:     U1RXPPS = 0x16;
  8945  004B9A  0E16               	movlw	22
  8946  004B9C  6FE5               	movwf	229,b	;volatile
  8947                           
  8948                           ;USART1.c: 12:     RC7PPS = 0x13;
  8949  004B9E  0E13               	movlw	19
  8950  004BA0  6F17               	movwf	23,b	;volatile
  8951                           
  8952                           ;USART1.c: 15:     switch(baud_rate){
  8953  004BA2  D010               	goto	l6548
  8954  004BA4                     l6538:
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;USART1.c: 17:             U1BRGH = 0x03;
  8958  004BA4  0E03               	movlw	3
  8959  004BA6  013D               	movlb	61	; () banked
  8960  004BA8  6FF6               	movwf	246,b	;volatile
  8961                           
  8962                           ;USART1.c: 18:             U1BRGL = 0x40;
  8963  004BAA  0E40               	movlw	64
  8964  004BAC  D009               	goto	L13
  8965  004BAE                     l6540:
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;USART1.c: 21:             U1BRGH = 0x01;
  8969  004BAE  0E01               	movlw	1
  8970  004BB0  013D               	movlb	61	; () banked
  8971  004BB2  6FF6               	movwf	246,b	;volatile
  8972                           
  8973                           ;USART1.c: 22:             U1BRGL = 0x14;
  8974  004BB4  0E14               	movlw	20
  8975  004BB6  D004               	goto	L13
  8976  004BB8                     l6542:
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;USART1.c: 25:             U1BRGH = 0x00;
  8980  004BB8  0E00               	movlw	0
  8981  004BBA  013D               	movlb	61	; () banked
  8982  004BBC  6FF6               	movwf	246,b	;volatile
  8983                           
  8984                           ;USART1.c: 26:             U1BRGL = 0x89;
  8985  004BBE  0E89               	movlw	137
  8986  004BC0                     L13:
  8987  004BC0  6FF5               	movwf	245,b	;volatile
  8988                           
  8989                           ;USART1.c: 27:             break;
  8990  004BC2  D011               	goto	l6550
  8991  004BC4                     l6548:
  8992                           
  8993                           ; BSR set to: 58
  8994  004BC4  0100               	movlb	0	; () banked
  8995  004BC6  5162               	movf	USART1_Init@baud_rate& (0+255),w,b
  8996  004BC8  6F60               	movwf	??_USART1_Init& (0+255),b
  8997  004BCA  6B61               	clrf	(??_USART1_Init+1)& (0+255),b
  8998                           
  8999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9000                           ; Switch size 1, requested type "simple"
  9001                           ; Number of cases is 1, Range of values is 0 to 0
  9002                           ; switch strategies available:
  9003                           ; Name         Instructions Cycles
  9004                           ; simple_byte            4     3 (average)
  9005                           ;	Chosen strategy is simple_byte
  9006  004BCC  5161               	movf	(??_USART1_Init+1)& (0+255),w,b
  9007  004BCE  0A00               	xorlw	0	; case 0
  9008  004BD0  A4D8               	btfss	status,2,c
  9009  004BD2  D7F2               	goto	l6542
  9010                           
  9011                           ; BSR set to: 0
  9012                           ; Switch size 1, requested type "simple"
  9013                           ; Number of cases is 3, Range of values is 1 to 3
  9014                           ; switch strategies available:
  9015                           ; Name         Instructions Cycles
  9016                           ; simple_byte           10     6 (average)
  9017                           ;	Chosen strategy is simple_byte
  9018  004BD4  5160               	movf	??_USART1_Init& (0+255),w,b
  9019  004BD6  0A01               	xorlw	1	; case 1
  9020  004BD8  B4D8               	btfsc	status,2,c
  9021  004BDA  D7E4               	goto	l6538
  9022  004BDC  0A03               	xorlw	3	; case 2
  9023  004BDE  B4D8               	btfsc	status,2,c
  9024  004BE0  D7E6               	goto	l6540
  9025  004BE2  0A01               	xorlw	1	; case 3
  9026  004BE4  D7E9               	goto	l6542
  9027  004BE6                     l6550:
  9028                           
  9029                           ; BSR set to: 61
  9030                           ;USART1.c: 34:     rx_counter = 0;
  9031  004BE6  0E00               	movlw	0
  9032  004BE8  6E53               	movwf	_rx_counter,c
  9033                           
  9034                           ;USART1.c: 36:     U1CON0 = 0xB0;
  9035  004BEA  0EB0               	movlw	176
  9036  004BEC  6FF2               	movwf	242,b	;volatile
  9037                           
  9038                           ;USART1.c: 37:     U1CON1 = 0x00;
  9039  004BEE  0E00               	movlw	0
  9040  004BF0  6FF3               	movwf	243,b	;volatile
  9041                           
  9042                           ;USART1.c: 38:     U2CON2 = 0x80;
  9043  004BF2  0E80               	movlw	128
  9044  004BF4  6FDC               	movwf	220,b	;volatile
  9045                           
  9046                           ;USART1.c: 39:     U1ERRIE = 0x00;
  9047  004BF6  0E00               	movlw	0
  9048  004BF8  6FFA               	movwf	250,b	;volatile
  9049                           
  9050                           ;USART1.c: 40:     U1UIR = 0x00;
  9051  004BFA  0E00               	movlw	0
  9052  004BFC  6FF8               	movwf	248,b	;volatile
  9053                           
  9054                           ; BSR set to: 61
  9055                           ;USART1.c: 41:     PIE3bits.U1RXIE = 1;
  9056  004BFE  0139               	movlb	57	; () banked
  9057  004C00  8793               	bsf	147,3,b	;volatile
  9058                           
  9059                           ; BSR set to: 57
  9060                           ;USART1.c: 42:     PIE3bits.U1TXIE =1;
  9061  004C02  8993               	bsf	147,4,b	;volatile
  9062                           
  9063                           ; BSR set to: 57
  9064                           ;USART1.c: 43:     IPR3bits.U1RXIP = 1;
  9065  004C04  8783               	bsf	131,3,b	;volatile
  9066                           
  9067                           ; BSR set to: 57
  9068                           ;USART1.c: 44:     IPR3bits.U1TXIP = 1;
  9069  004C06  8983               	bsf	131,4,b	;volatile
  9070                           
  9071                           ;USART1.c: 45:     PIR3 = 0x00;
  9072  004C08  0E00               	movlw	0
  9073  004C0A  6FA3               	movwf	163,b	;volatile
  9074                           
  9075                           ; BSR set to: 57
  9076                           ;USART1.c: 46:     U1CON1bits.ON = 1;
  9077  004C0C  013D               	movlb	61	; () banked
  9078  004C0E  8FF3               	bsf	243,7,b	;volatile
  9079                           
  9080                           ; BSR set to: 61
  9081  004C10  0012               	return		;funcret
  9082  004C12                     __end_of_USART1_Init:
  9083                           	opt callstack 0
  9084                           
  9085 ;; *************** function _I2C_Init *****************
  9086 ;; Defined at:
  9087 ;;		line 4 in file "I2C.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;		None
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;		None
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  1    wreg      void 
  9094 ;; Registers used:
  9095 ;;		wreg, status,2
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9105 ;;Total ram usage:        0 bytes
  9106 ;; Hardware stack levels used:    1
  9107 ;; Hardware stack levels required when called:    2
  9108 ;; This function calls:
  9109 ;;		Nothing
  9110 ;; This function is called by:
  9111 ;;		_main
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           	psect	text37
  9116  004D7A                     __ptext37:
  9117                           	opt callstack 0
  9118  004D7A                     _I2C_Init:
  9119                           	opt callstack 28
  9120                           
  9121                           ;I2C.c: 6:     TRISBbits.TRISB1 = 0;
  9122                           
  9123                           ; BSR set to: 61
  9124                           ;incstack = 0
  9125  004D7A  92C3               	bcf	16323,1,c	;volatile
  9126                           
  9127                           ;I2C.c: 7:     TRISBbits.TRISB0 = 0;
  9128  004D7C  90C3               	bcf	16323,0,c	;volatile
  9129                           
  9130                           ;I2C.c: 8:     LATBbits.LATB1 = 0;
  9131  004D7E  92BB               	bcf	16315,1,c	;volatile
  9132                           
  9133                           ;I2C.c: 9:     LATBbits.LATB0 = 0;
  9134  004D80  90BB               	bcf	16315,0,c	;volatile
  9135                           
  9136                           ;I2C.c: 10:     ANSELBbits.ANSELB1 = 0;
  9137  004D82  013A               	movlb	58	; () banked
  9138  004D84  9350               	bcf	80,1,b	;volatile
  9139                           
  9140                           ;I2C.c: 11:     ANSELBbits.ANSELB0 = 0;
  9141  004D86  9150               	bcf	80,0,b	;volatile
  9142                           
  9143                           ;I2C.c: 12:     ODCONBbits.ODCB1 = 1;
  9144  004D88  8352               	bsf	82,1,b	;volatile
  9145                           
  9146                           ;I2C.c: 13:     ODCONBbits.ODCB0 = 1;
  9147  004D8A  8152               	bsf	82,0,b	;volatile
  9148                           
  9149                           ; BSR set to: 58
  9150                           ;I2C.c: 14:     RB1I2C = 0x01;
  9151  004D8C  0E01               	movlw	1
  9152  004D8E  6F5A               	movwf	90,b	;volatile
  9153                           
  9154                           ; BSR set to: 58
  9155                           ;I2C.c: 15:     SLRCONBbits.SLRB1 = 0;
  9156  004D90  9353               	bcf	83,1,b	;volatile
  9157                           
  9158                           ; BSR set to: 58
  9159                           ;I2C.c: 16:     SLRCONBbits.SLRB0 = 0;
  9160  004D92  9153               	bcf	83,0,b	;volatile
  9161                           
  9162                           ;I2C.c: 17:     I2C1SCLPPS = 0x09;
  9163  004D94  0E09               	movlw	9
  9164  004D96  6FE1               	movwf	225,b	;volatile
  9165                           
  9166                           ;I2C.c: 18:     I2C1SDAPPS = 0x08;
  9167  004D98  0E08               	movlw	8
  9168  004D9A  6FE2               	movwf	226,b	;volatile
  9169                           
  9170                           ;I2C.c: 19:     RB1PPS = 0x21;
  9171  004D9C  0E21               	movlw	33
  9172  004D9E  6F09               	movwf	9,b	;volatile
  9173                           
  9174                           ;I2C.c: 20:     RB0PPS = 0x22;
  9175  004DA0  0E22               	movlw	34
  9176  004DA2  6F08               	movwf	8,b	;volatile
  9177                           
  9178                           ;I2C.c: 22:     I2C1CON0 = 0x04;
  9179  004DA4  0E04               	movlw	4
  9180  004DA6  013D               	movlb	61	; () banked
  9181  004DA8  6F73               	movwf	115,b	;volatile
  9182                           
  9183                           ;I2C.c: 23:     I2C1CON1 = 0x80;
  9184  004DAA  0E80               	movlw	128
  9185  004DAC  6F74               	movwf	116,b	;volatile
  9186                           
  9187                           ;I2C.c: 24:     I2C1CON2 = 0x24;
  9188  004DAE  0E24               	movlw	36
  9189  004DB0  6F75               	movwf	117,b	;volatile
  9190                           
  9191                           ;I2C.c: 25:     I2C1CLK = 0x03;
  9192  004DB2  0E03               	movlw	3
  9193  004DB4  6F7B               	movwf	123,b	;volatile
  9194                           
  9195                           ;I2C.c: 27:     I2C1PIR = 0x00;
  9196  004DB6  0E00               	movlw	0
  9197  004DB8  6F79               	movwf	121,b	;volatile
  9198                           
  9199                           ;I2C.c: 28:     I2C1ERR = 0x00;
  9200  004DBA  0E00               	movlw	0
  9201  004DBC  6F76               	movwf	118,b	;volatile
  9202                           
  9203                           ;I2C.c: 30:     I2C_STOP_DETECTED = 1;
  9204  004DBE  0E01               	movlw	1
  9205  004DC0  0100               	movlb	0	; () banked
  9206  004DC2  6FF9               	movwf	_I2C_STOP_DETECTED& (0+255),b
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;I2C.c: 32:     IPR3bits.I2C1TXIP = 0;
  9210  004DC4  0139               	movlb	57	; () banked
  9211  004DC6  9183               	bcf	131,0,b	;volatile
  9212                           
  9213                           ; BSR set to: 57
  9214                           ;I2C.c: 33:     IPR2bits.I2C1RXIP = 0;
  9215  004DC8  9F82               	bcf	130,7,b	;volatile
  9216                           
  9217                           ; BSR set to: 57
  9218                           ;I2C.c: 34:     PIR3bits.I2C1TXIF = 0;
  9219  004DCA  91A3               	bcf	163,0,b	;volatile
  9220                           
  9221                           ; BSR set to: 57
  9222                           ;I2C.c: 35:     PIR2bits.I2C1RXIF = 0;
  9223  004DCC  9FA2               	bcf	162,7,b	;volatile
  9224                           
  9225                           ; BSR set to: 57
  9226                           ;I2C.c: 36:     PIE3bits.I2C1TXIE = 1;
  9227  004DCE  8193               	bsf	147,0,b	;volatile
  9228                           
  9229                           ; BSR set to: 57
  9230                           ;I2C.c: 37:     PIE2bits.I2C1RXIE = 1;
  9231  004DD0  8F92               	bsf	146,7,b	;volatile
  9232                           
  9233                           ; BSR set to: 57
  9234                           ;I2C.c: 40:     I2C1PIRbits.PC1IF = 0;
  9235  004DD2  013D               	movlb	61	; () banked
  9236  004DD4  9579               	bcf	121,2,b	;volatile
  9237                           
  9238                           ; BSR set to: 61
  9239                           ;I2C.c: 41:     I2C1PIEbits.PC1IE = 1;
  9240  004DD6  857A               	bsf	122,2,b	;volatile
  9241                           
  9242                           ; BSR set to: 61
  9243                           ;I2C.c: 42:     IPR3bits.I2C1IP = 0;
  9244  004DD8  0139               	movlb	57	; () banked
  9245  004DDA  9383               	bcf	131,1,b	;volatile
  9246                           
  9247                           ; BSR set to: 57
  9248                           ;I2C.c: 43:     PIR3bits.I2C1IF = 0;
  9249  004DDC  93A3               	bcf	163,1,b	;volatile
  9250                           
  9251                           ; BSR set to: 57
  9252                           ;I2C.c: 44:     PIE3bits.I2C1IE = 1;
  9253  004DDE  8393               	bsf	147,1,b	;volatile
  9254                           
  9255                           ; BSR set to: 57
  9256                           ;I2C.c: 46:     I2C1CON0bits.EN = 1;
  9257  004DE0  013D               	movlb	61	; () banked
  9258  004DE2  8F73               	bsf	115,7,b	;volatile
  9259                           
  9260                           ; BSR set to: 61
  9261  004DE4  0012               	return		;funcret
  9262  004DE6                     __end_of_I2C_Init:
  9263                           	opt callstack 0
  9264                           
  9265 ;; *************** function _ADC_Init *****************
  9266 ;; Defined at:
  9267 ;;		line 236 in file "main.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;		None
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;		None
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      void 
  9274 ;; Registers used:
  9275 ;;		wreg, status,2
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9285 ;;Total ram usage:        0 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    2
  9288 ;; This function calls:
  9289 ;;		Nothing
  9290 ;; This function is called by:
  9291 ;;		_main
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           	psect	text38
  9296  0051C6                     __ptext38:
  9297                           	opt callstack 0
  9298  0051C6                     _ADC_Init:
  9299                           	opt callstack 28
  9300                           
  9301                           ;main.c: 238:     TRISBbits.TRISB4 = 1;
  9302                           
  9303                           ; BSR set to: 61
  9304                           ;incstack = 0
  9305  0051C6  88C3               	bsf	16323,4,c	;volatile
  9306                           
  9307                           ;main.c: 239:     ANSELBbits.ANSELB4 = 1;
  9308  0051C8  013A               	movlb	58	; () banked
  9309  0051CA  8950               	bsf	80,4,b	;volatile
  9310                           
  9311                           ; BSR set to: 58
  9312                           ;main.c: 240:     ADCON0 = 0x94;
  9313  0051CC  0E94               	movlw	148
  9314  0051CE  013E               	movlb	62	; () banked
  9315  0051D0  6FF8               	movwf	248,b	;volatile
  9316                           
  9317                           ;main.c: 241:     ADCON1 = 0x00;
  9318  0051D2  0E00               	movlw	0
  9319  0051D4  6FF9               	movwf	249,b	;volatile
  9320                           
  9321                           ;main.c: 242:     ADCON2 = 0x00;
  9322  0051D6  0E00               	movlw	0
  9323  0051D8  6FFA               	movwf	250,b	;volatile
  9324                           
  9325                           ;main.c: 243:     ADREF = 0x00;
  9326  0051DA  0E00               	movlw	0
  9327  0051DC  6FFD               	movwf	253,b	;volatile
  9328                           
  9329                           ; BSR set to: 62
  9330                           ;main.c: 244:     IPR1bits.ADIP = 0;
  9331  0051DE  0139               	movlb	57	; () banked
  9332  0051E0  9581               	bcf	129,2,b	;volatile
  9333                           
  9334                           ; BSR set to: 57
  9335                           ;main.c: 245:     PIE1bits.ADIE = 1;
  9336  0051E2  8591               	bsf	145,2,b	;volatile
  9337                           
  9338                           ; BSR set to: 57
  9339                           ;main.c: 246:     PIR1bits.ADIF = 0;
  9340  0051E4  95A1               	bcf	161,2,b	;volatile
  9341                           
  9342                           ; BSR set to: 57
  9343  0051E6  0012               	return		;funcret
  9344  0051E8                     __end_of_ADC_Init:
  9345                           	opt callstack 0
  9346                           
  9347 ;; *************** function _TIMER0_ISR *****************
  9348 ;; Defined at:
  9349 ;;		line 63 in file "main.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;		None
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;		None
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      void 
  9356 ;; Registers used:
  9357 ;;		wreg, status,2, status,0, cstack
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9367 ;;Total ram usage:        0 bytes
  9368 ;; Hardware stack levels used:    1
  9369 ;; Hardware stack levels required when called:    1
  9370 ;; This function calls:
  9371 ;;		_ADC_Start
  9372 ;; This function is called by:
  9373 ;;		Interrupt level 2
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text39
  9378  005080                     __ptext39:
  9379                           	opt callstack 0
  9380  005080                     _TIMER0_ISR:
  9381                           	opt callstack 20
  9382                           
  9383                           ;main.c: 64:     T0CON0bits.EN = 0;
  9384                           
  9385                           ; BSR set to: 57
  9386                           ;incstack = 0
  9387  005080  9EB8               	bcf	16312,7,c	;volatile
  9388                           
  9389                           ;main.c: 65:     counter_timer0 ++;
  9390  005082  2A4D               	incf	_counter_timer0,f,c
  9391                           
  9392                           ;main.c: 66:     if(counter_timer0 == 2){
  9393  005084  0E02               	movlw	2
  9394  005086  184D               	xorwf	_counter_timer0,w,c
  9395  005088  A4D8               	btfss	status,2,c
  9396  00508A  D002               	goto	i2l5088
  9397                           
  9398                           ;main.c: 67:         LATAbits.LA0 = 0;
  9399  00508C  90BA               	bcf	16314,0,c	;volatile
  9400                           
  9401                           ;main.c: 68:     }else if(counter_timer0 == 40){
  9402  00508E  D00A               	goto	i2l266
  9403  005090                     i2l5088:
  9404  005090  0E28               	movlw	40
  9405  005092  184D               	xorwf	_counter_timer0,w,c
  9406  005094  A4D8               	btfss	status,2,c
  9407  005096  D006               	goto	i2l266
  9408                           
  9409                           ;main.c: 69:         if(led_enable)
  9410  005098  0100               	movlb	0	; () banked
  9411  00509A  51F8               	movf	_led_enable& (0+255),w,b
  9412  00509C  A4D8               	btfss	status,2,c
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;main.c: 70:             LATAbits.LA0 = 1;
  9416  00509E  80BA               	bsf	16314,0,c	;volatile
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;main.c: 71:         counter_timer0 = 0;
  9420  0050A0  0E00               	movlw	0
  9421  0050A2  6E4D               	movwf	_counter_timer0,c
  9422  0050A4                     i2l266:
  9423                           
  9424                           ;main.c: 73:     TMR0L = 0xB0;
  9425  0050A4  0EB0               	movlw	176
  9426  0050A6  6EB6               	movwf	16310,c	;volatile
  9427                           
  9428                           ;main.c: 74:     TMR0H = 0x3C;
  9429  0050A8  0E3C               	movlw	60
  9430  0050AA  6EB7               	movwf	16311,c	;volatile
  9431                           
  9432                           ;main.c: 75:     ADC_Start(12);
  9433  0050AC  0E0C               	movlw	12
  9434  0050AE  EC40  F029         	call	_ADC_Start
  9435                           
  9436                           ;main.c: 76:     PIR3bits.TMR0IF = 0;
  9437  0050B2  0139               	movlb	57	; () banked
  9438  0050B4  9FA3               	bcf	163,7,b	;volatile
  9439                           
  9440                           ; BSR set to: 57
  9441                           ;main.c: 77:     T0CON0bits.EN = 1;
  9442  0050B6  8EB8               	bsf	16312,7,c	;volatile
  9443                           
  9444                           ; BSR set to: 57
  9445  0050B8  0011               	retfie		f
  9446  0050BA                     __end_of_TIMER0_ISR:
  9447                           	opt callstack 0
  9448                           
  9449 ;; *************** function _ADC_Start *****************
  9450 ;; Defined at:
  9451 ;;		line 250 in file "main.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;  pin             1    wreg     unsigned char 
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;  pin             1    0[COMRAM] unsigned char 
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      void 
  9458 ;; Registers used:
  9459 ;;		wreg
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9469 ;;Total ram usage:        1 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; This function calls:
  9472 ;;		Nothing
  9473 ;; This function is called by:
  9474 ;;		_TIMER0_ISR
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text40
  9479  005280                     __ptext40:
  9480                           	opt callstack 0
  9481  005280                     _ADC_Start:
  9482                           	opt callstack 20
  9483                           
  9484                           ; BSR set to: 57
  9485                           ;incstack = 0
  9486                           ;ADC_Start@pin stored from wreg
  9487  005280  6E01               	movwf	ADC_Start@pin,c
  9488                           
  9489                           ;main.c: 251:     if(!ADCON0bits.GO){
  9490  005282  013E               	movlb	62	; () banked
  9491  005284  B1F8               	btfsc	248,0,b	;volatile
  9492  005286  0012               	return	
  9493                           
  9494                           ; BSR set to: 62
  9495                           ;main.c: 252:         ADPCH = pin;
  9496  005288  0060  F007  FEF1   	movff	ADC_Start@pin,16113	;volatile
  9497                           
  9498                           ; BSR set to: 62
  9499                           ;main.c: 253:         ADCON0bits.GO = 1;
  9500  00528E  81F8               	bsf	248,0,b	;volatile
  9501                           
  9502                           ; BSR set to: 62
  9503  005290  0012               	return		;funcret
  9504  005292                     __end_of_ADC_Start:
  9505                           	opt callstack 0
  9506                           
  9507 ;; *************** function _UART1_TX_ISR *****************
  9508 ;; Defined at:
  9509 ;;		line 80 in file "main.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;		None
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;		None
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  1    wreg      void 
  9516 ;; Registers used:
  9517 ;;		None
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9527 ;;Total ram usage:        0 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		Interrupt level 2
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text41
  9537  005294                     __ptext41:
  9538                           	opt callstack 0
  9539  005294                     _UART1_TX_ISR:
  9540                           	opt callstack 21
  9541                           
  9542                           ;main.c: 82:     U1TXB = tx_byte;
  9543                           
  9544                           ; BSR set to: 62
  9545                           ;incstack = 0
  9546  005294  0060  F14B  FDEA   	movff	_tx_byte,15850	;volatile
  9547                           
  9548                           ;main.c: 83:     PIE3bits.U1TXIE = 0;
  9549  00529A  0139               	movlb	57	; () banked
  9550  00529C  9993               	bcf	147,4,b	;volatile
  9551                           
  9552                           ; BSR set to: 57
  9553  00529E  0011               	retfie		f
  9554  0052A0                     __end_of_UART1_TX_ISR:
  9555                           	opt callstack 0
  9556                           
  9557 ;; *************** function _UART1_RX_ISR *****************
  9558 ;; Defined at:
  9559 ;;		line 86 in file "main.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;		None
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;		None
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  1    wreg      void 
  9566 ;; Registers used:
  9567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9577 ;;Total ram usage:        0 bytes
  9578 ;; Hardware stack levels used:    1
  9579 ;; This function calls:
  9580 ;;		Nothing
  9581 ;; This function is called by:
  9582 ;;		Interrupt level 2
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           	psect	text42
  9587  005224                     __ptext42:
  9588                           	opt callstack 0
  9589  005224                     _UART1_RX_ISR:
  9590                           	opt callstack 21
  9591                           
  9592                           ;main.c: 87:     rx_buffer[rx_counter] = U1RXB;
  9593                           
  9594                           ; BSR set to: 57
  9595                           ;incstack = 0
  9596  005224  0E00               	movlw	low _rx_buffer
  9597  005226  2453               	addwf	_rx_counter,w,c
  9598  005228  6ED9               	movwf	fsr2l,c
  9599  00522A  6ADA               	clrf	fsr2h,c
  9600  00522C  0E01               	movlw	high _rx_buffer
  9601  00522E  22DA               	addwfc	fsr2h,f,c
  9602  005230  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9603                           
  9604                           ;main.c: 88:     rx_counter ++;
  9605  005236  2A53               	incf	_rx_counter,f,c
  9606  005238  0011               	retfie		f
  9607  00523A                     __end_of_UART1_RX_ISR:
  9608                           	opt callstack 0
  9609                           
  9610 ;; *************** function _ADC_ISR *****************
  9611 ;; Defined at:
  9612 ;;		line 91 in file "main.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;		None
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;  adc_result      2   42[COMRAM] int 
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  1    wreg      void 
  9619 ;; Registers used:
  9620 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9629 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9630 ;;Total ram usage:        4 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; Hardware stack levels required when called:    1
  9633 ;; This function calls:
  9634 ;;		___xxtofl
  9635 ;;		i2___flmul
  9636 ;; This function is called by:
  9637 ;;		Interrupt level 2
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           	psect	text43
  9642  004C14                     __ptext43:
  9643                           	opt callstack 0
  9644  004C14                     _ADC_ISR:
  9645                           	opt callstack 20
  9646                           
  9647                           ;main.c: 92:     int adc_result = ADRESL;
  9648                           
  9649                           ;incstack = 0
  9650  004C14  006F FBBC  F02B    	movff	16111,ADC_ISR@adc_result	;volatile
  9651  004C1A  6A2C               	clrf	ADC_ISR@adc_result+1,c
  9652                           
  9653                           ;main.c: 93:     adc_result = adc_result | (ADRESH <<8);
  9654  004C1C  013E               	movlb	62	; () banked
  9655  004C1E  51F0               	movf	240,w,b	;volatile
  9656  004C20  6E2A               	movwf	(??_ADC_ISR+1)& (0+255),c
  9657  004C22  6A29               	clrf	??_ADC_ISR& (0+255),c
  9658  004C24  502B               	movf	ADC_ISR@adc_result,w,c
  9659  004C26  1029               	iorwf	??_ADC_ISR,w,c
  9660  004C28  6E2B               	movwf	ADC_ISR@adc_result,c
  9661  004C2A  502C               	movf	ADC_ISR@adc_result+1,w,c
  9662  004C2C  102A               	iorwf	??_ADC_ISR+1,w,c
  9663  004C2E  6E2C               	movwf	ADC_ISR@adc_result+1,c
  9664                           
  9665                           ; BSR set to: 62
  9666                           ;main.c: 94:     ADC_VOLTAGE_RESULT = (float)adc_result * 0.00122;
  9667  004C30  0060  F0AC  F002   	movff	ADC_ISR@adc_result,___xxtofl@val
  9668  004C36  0060  F0B0  F003   	movff	ADC_ISR@adc_result+1,___xxtofl@val+1
  9669  004C3C  0E00               	movlw	0
  9670  004C3E  BE03               	btfsc	___xxtofl@val+1,7,c
  9671  004C40  0EFF               	movlw	-1
  9672  004C42  6E04               	movwf	___xxtofl@val+2,c
  9673  004C44  6E05               	movwf	___xxtofl@val+3,c
  9674  004C46  0E01               	movlw	1
  9675  004C48  EC2B  F021         	call	___xxtofl
  9676  004C4C  0060  F008  F010   	movff	?___xxtofl,i2___flmul@b
  9677  004C52  0060  F00C  F011   	movff	?___xxtofl+1,i2___flmul@b+1
  9678  004C58  0060  F010  F012   	movff	?___xxtofl+2,i2___flmul@b+2
  9679  004C5E  0060  F014  F013   	movff	?___xxtofl+3,i2___flmul@b+3
  9680  004C64  0E68               	movlw	104
  9681  004C66  6E14               	movwf	i2___flmul@a,c
  9682  004C68  0EE8               	movlw	232
  9683  004C6A  6E15               	movwf	i2___flmul@a+1,c
  9684  004C6C  0E9F               	movlw	159
  9685  004C6E  6E16               	movwf	i2___flmul@a+2,c
  9686  004C70  0E3A               	movlw	58
  9687  004C72  6E17               	movwf	i2___flmul@a+3,c
  9688  004C74  ECD2  F017         	call	i2___flmul	;wreg free
  9689  004C78  0060  F040  F03F   	movff	?i2___flmul,_ADC_VOLTAGE_RESULT
  9690  004C7E  0060  F044  F040   	movff	?i2___flmul+1,_ADC_VOLTAGE_RESULT+1
  9691  004C84  0060  F048  F041   	movff	?i2___flmul+2,_ADC_VOLTAGE_RESULT+2
  9692  004C8A  0060  F04C  F042   	movff	?i2___flmul+3,_ADC_VOLTAGE_RESULT+3
  9693                           
  9694                           ;main.c: 95:     PIR1bits.ADIF = 0;
  9695  004C90  0139               	movlb	57	; () banked
  9696  004C92  95A1               	bcf	161,2,b	;volatile
  9697                           
  9698                           ; BSR set to: 57
  9699  004C94  0011               	retfie		f
  9700  004C96                     __end_of_ADC_ISR:
  9701                           	opt callstack 0
  9702                           
  9703 ;; *************** function i2___flmul *****************
  9704 ;; Defined at:
  9705 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  b               4   15[COMRAM] void 
  9708 ;;  a               4   19[COMRAM] void 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;  __flmul         4   34[COMRAM] struct .
  9711 ;;  __flmul         4   28[COMRAM] unsigned long 
  9712 ;;  __flmul         2   38[COMRAM] struct .
  9713 ;;  __flmul         1   33[COMRAM] unsigned char 
  9714 ;;  __flmul         1   32[COMRAM] unsigned char 
  9715 ;;  __flmul         1   27[COMRAM] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  4   15[COMRAM] unsigned char 
  9718 ;; Registers used:
  9719 ;;		wreg, status,2, status,0, prodl, prodh
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9725 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9726 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9727 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9728 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9729 ;;Total ram usage:       25 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; This function calls:
  9732 ;;		Nothing
  9733 ;; This function is called by:
  9734 ;;		_ADC_ISR
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text44
  9739  002FA4                     __ptext44:
  9740                           	opt callstack 0
  9741  002FA4                     i2___flmul:
  9742                           	opt callstack 20
  9743                           
  9744                           ; BSR set to: 57
  9745                           ;incstack = 0
  9746  002FA4  5013               	movf	i2___flmul@b+3,w,c
  9747  002FA6  0B80               	andlw	128
  9748  002FA8  6E1C               	movwf	i2___flmul@sign,c
  9749  002FAA  5013               	movf	i2___flmul@b+3,w,c
  9750  002FAC  2413               	addwf	i2___flmul@b+3,w,c
  9751  002FAE  6E22               	movwf	i2___flmul@bexp,c
  9752  002FB0  BE12               	btfsc	i2___flmul@b+2,7,c
  9753  002FB2  8022               	bsf	i2___flmul@bexp,0,c
  9754  002FB4  5022               	movf	i2___flmul@bexp,w,c
  9755  002FB6  B4D8               	btfsc	status,2,c
  9756  002FB8  D00D               	goto	i2l4964
  9757  002FBA  2822               	incf	i2___flmul@bexp,w,c
  9758  002FBC  A4D8               	btfss	status,2,c
  9759  002FBE  D008               	goto	i2l4962
  9760  002FC0  0E00               	movlw	0
  9761  002FC2  6E10               	movwf	i2___flmul@b,c
  9762  002FC4  0E00               	movlw	0
  9763  002FC6  6E11               	movwf	i2___flmul@b+1,c
  9764  002FC8  0E00               	movlw	0
  9765  002FCA  6E12               	movwf	i2___flmul@b+2,c
  9766  002FCC  0E00               	movlw	0
  9767  002FCE  6E13               	movwf	i2___flmul@b+3,c
  9768  002FD0                     i2l4962:
  9769  002FD0  8E12               	bsf	i2___flmul@b+2,7,c
  9770  002FD2  D008               	goto	i2l4966
  9771  002FD4                     i2l4964:
  9772  002FD4  0E00               	movlw	0
  9773  002FD6  6E10               	movwf	i2___flmul@b,c
  9774  002FD8  0E00               	movlw	0
  9775  002FDA  6E11               	movwf	i2___flmul@b+1,c
  9776  002FDC  0E00               	movlw	0
  9777  002FDE  6E12               	movwf	i2___flmul@b+2,c
  9778  002FE0  0E00               	movlw	0
  9779  002FE2  6E13               	movwf	i2___flmul@b+3,c
  9780  002FE4                     i2l4966:
  9781  002FE4  5017               	movf	i2___flmul@a+3,w,c
  9782  002FE6  0B80               	andlw	128
  9783  002FE8  1A1C               	xorwf	i2___flmul@sign,f,c
  9784  002FEA  5017               	movf	i2___flmul@a+3,w,c
  9785  002FEC  2417               	addwf	i2___flmul@a+3,w,c
  9786  002FEE  6E21               	movwf	i2___flmul@aexp,c
  9787  002FF0  BE16               	btfsc	i2___flmul@a+2,7,c
  9788  002FF2  8021               	bsf	i2___flmul@aexp,0,c
  9789  002FF4  5021               	movf	i2___flmul@aexp,w,c
  9790  002FF6  B4D8               	btfsc	status,2,c
  9791  002FF8  D00D               	goto	i2l4982
  9792  002FFA  2821               	incf	i2___flmul@aexp,w,c
  9793  002FFC  A4D8               	btfss	status,2,c
  9794  002FFE  D008               	goto	i2l4980
  9795  003000  0E00               	movlw	0
  9796  003002  6E14               	movwf	i2___flmul@a,c
  9797  003004  0E00               	movlw	0
  9798  003006  6E15               	movwf	i2___flmul@a+1,c
  9799  003008  0E00               	movlw	0
  9800  00300A  6E16               	movwf	i2___flmul@a+2,c
  9801  00300C  0E00               	movlw	0
  9802  00300E  6E17               	movwf	i2___flmul@a+3,c
  9803  003010                     i2l4980:
  9804  003010  8E16               	bsf	i2___flmul@a+2,7,c
  9805  003012  D008               	goto	i2l1239
  9806  003014                     i2l4982:
  9807  003014  0E00               	movlw	0
  9808  003016  6E14               	movwf	i2___flmul@a,c
  9809  003018  0E00               	movlw	0
  9810  00301A  6E15               	movwf	i2___flmul@a+1,c
  9811  00301C  0E00               	movlw	0
  9812  00301E  6E16               	movwf	i2___flmul@a+2,c
  9813  003020  0E00               	movlw	0
  9814  003022  6E17               	movwf	i2___flmul@a+3,c
  9815  003024                     i2l1239:
  9816  003024  5021               	movf	i2___flmul@aexp,w,c
  9817  003026  B4D8               	btfsc	status,2,c
  9818  003028  D003               	goto	i2u618_40
  9819  00302A  5022               	movf	i2___flmul@bexp,w,c
  9820  00302C  A4D8               	btfss	status,2,c
  9821  00302E  D009               	goto	i2l4990
  9822  003030                     i2u618_40:
  9823  003030  0E00               	movlw	0
  9824  003032  6E10               	movwf	?i2___flmul,c
  9825  003034  0E00               	movlw	0
  9826  003036  6E11               	movwf	?i2___flmul+1,c
  9827  003038  0E00               	movlw	0
  9828  00303A  6E12               	movwf	?i2___flmul+2,c
  9829  00303C  0E00               	movlw	0
  9830  00303E  6E13               	movwf	?i2___flmul+3,c
  9831  003040  0012               	return	
  9832  003042                     i2l4990:
  9833  003042  5016               	movf	i2___flmul@a+2,w,c
  9834  003044  0210               	mulwf	i2___flmul@b,c
  9835  003046  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9836  00304C  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9837  003052  5027               	movf	i2___flmul@temp,w,c
  9838  003054  6E1D               	movwf	i2___flmul@grs,c
  9839  003056  6A1E               	clrf	i2___flmul@grs+1,c
  9840  003058  6A1F               	clrf	i2___flmul@grs+2,c
  9841  00305A  6A20               	clrf	i2___flmul@grs+3,c
  9842  00305C  5028               	movf	i2___flmul@temp+1,w,c
  9843  00305E  6E23               	movwf	i2___flmul@prod,c
  9844  003060  6A24               	clrf	i2___flmul@prod+1,c
  9845  003062  6A25               	clrf	i2___flmul@prod+2,c
  9846  003064  6A26               	clrf	i2___flmul@prod+3,c
  9847  003066  5015               	movf	i2___flmul@a+1,w,c
  9848  003068  0211               	mulwf	i2___flmul@b+1,c
  9849  00306A  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9850  003070  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9851  003076  5027               	movf	i2___flmul@temp,w,c
  9852  003078  261D               	addwf	i2___flmul@grs,f,c
  9853  00307A  0E00               	movlw	0
  9854  00307C  221E               	addwfc	i2___flmul@grs+1,f,c
  9855  00307E  221F               	addwfc	i2___flmul@grs+2,f,c
  9856  003080  2220               	addwfc	i2___flmul@grs+3,f,c
  9857  003082  5028               	movf	i2___flmul@temp+1,w,c
  9858  003084  2623               	addwf	i2___flmul@prod,f,c
  9859  003086  0E00               	movlw	0
  9860  003088  2224               	addwfc	i2___flmul@prod+1,f,c
  9861  00308A  2225               	addwfc	i2___flmul@prod+2,f,c
  9862  00308C  2226               	addwfc	i2___flmul@prod+3,f,c
  9863  00308E  5014               	movf	i2___flmul@a,w,c
  9864  003090  0212               	mulwf	i2___flmul@b+2,c
  9865  003092  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9866  003098  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9867  00309E  5027               	movf	i2___flmul@temp,w,c
  9868  0030A0  261D               	addwf	i2___flmul@grs,f,c
  9869  0030A2  0E00               	movlw	0
  9870  0030A4  221E               	addwfc	i2___flmul@grs+1,f,c
  9871  0030A6  221F               	addwfc	i2___flmul@grs+2,f,c
  9872  0030A8  2220               	addwfc	i2___flmul@grs+3,f,c
  9873  0030AA  5028               	movf	i2___flmul@temp+1,w,c
  9874  0030AC  2623               	addwf	i2___flmul@prod,f,c
  9875  0030AE  0E00               	movlw	0
  9876  0030B0  2224               	addwfc	i2___flmul@prod+1,f,c
  9877  0030B2  2225               	addwfc	i2___flmul@prod+2,f,c
  9878  0030B4  2226               	addwfc	i2___flmul@prod+3,f,c
  9879  0030B6  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
  9880  0030BC  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
  9881  0030C2  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
  9882  0030C8  6A1D               	clrf	i2___flmul@grs,c
  9883  0030CA  5014               	movf	i2___flmul@a,w,c
  9884  0030CC  0211               	mulwf	i2___flmul@b+1,c
  9885  0030CE  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9886  0030D4  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9887  0030DA  5027               	movf	i2___flmul@temp,w,c
  9888  0030DC  261D               	addwf	i2___flmul@grs,f,c
  9889  0030DE  5028               	movf	i2___flmul@temp+1,w,c
  9890  0030E0  221E               	addwfc	i2___flmul@grs+1,f,c
  9891  0030E2  0E00               	movlw	0
  9892  0030E4  221F               	addwfc	i2___flmul@grs+2,f,c
  9893  0030E6  0E00               	movlw	0
  9894  0030E8  2220               	addwfc	i2___flmul@grs+3,f,c
  9895  0030EA  5015               	movf	i2___flmul@a+1,w,c
  9896  0030EC  0210               	mulwf	i2___flmul@b,c
  9897  0030EE  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9898  0030F4  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9899  0030FA  5027               	movf	i2___flmul@temp,w,c
  9900  0030FC  261D               	addwf	i2___flmul@grs,f,c
  9901  0030FE  5028               	movf	i2___flmul@temp+1,w,c
  9902  003100  221E               	addwfc	i2___flmul@grs+1,f,c
  9903  003102  0E00               	movlw	0
  9904  003104  221F               	addwfc	i2___flmul@grs+2,f,c
  9905  003106  0E00               	movlw	0
  9906  003108  2220               	addwfc	i2___flmul@grs+3,f,c
  9907  00310A  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
  9908  003110  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
  9909  003116  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
  9910  00311C  6A1D               	clrf	i2___flmul@grs,c
  9911  00311E  5014               	movf	i2___flmul@a,w,c
  9912  003120  0210               	mulwf	i2___flmul@b,c
  9913  003122  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9914  003128  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9915  00312E  5027               	movf	i2___flmul@temp,w,c
  9916  003130  261D               	addwf	i2___flmul@grs,f,c
  9917  003132  5028               	movf	i2___flmul@temp+1,w,c
  9918  003134  221E               	addwfc	i2___flmul@grs+1,f,c
  9919  003136  0E00               	movlw	0
  9920  003138  221F               	addwfc	i2___flmul@grs+2,f,c
  9921  00313A  0E00               	movlw	0
  9922  00313C  2220               	addwfc	i2___flmul@grs+3,f,c
  9923  00313E  5016               	movf	i2___flmul@a+2,w,c
  9924  003140  0211               	mulwf	i2___flmul@b+1,c
  9925  003142  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9926  003148  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9927  00314E  5027               	movf	i2___flmul@temp,w,c
  9928  003150  2623               	addwf	i2___flmul@prod,f,c
  9929  003152  5028               	movf	i2___flmul@temp+1,w,c
  9930  003154  2224               	addwfc	i2___flmul@prod+1,f,c
  9931  003156  0E00               	movlw	0
  9932  003158  2225               	addwfc	i2___flmul@prod+2,f,c
  9933  00315A  0E00               	movlw	0
  9934  00315C  2226               	addwfc	i2___flmul@prod+3,f,c
  9935  00315E  5015               	movf	i2___flmul@a+1,w,c
  9936  003160  0212               	mulwf	i2___flmul@b+2,c
  9937  003162  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9938  003168  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9939  00316E  5027               	movf	i2___flmul@temp,w,c
  9940  003170  2623               	addwf	i2___flmul@prod,f,c
  9941  003172  5028               	movf	i2___flmul@temp+1,w,c
  9942  003174  2224               	addwfc	i2___flmul@prod+1,f,c
  9943  003176  0E00               	movlw	0
  9944  003178  2225               	addwfc	i2___flmul@prod+2,f,c
  9945  00317A  0E00               	movlw	0
  9946  00317C  2226               	addwfc	i2___flmul@prod+3,f,c
  9947  00317E  5016               	movf	i2___flmul@a+2,w,c
  9948  003180  0212               	mulwf	i2___flmul@b+2,c
  9949  003182  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  9950  003188  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  9951  00318E  5027               	movf	i2___flmul@temp,w,c
  9952  003190  6E18               	movwf	??i2___flmul& (0+255),c
  9953  003192  5028               	movf	i2___flmul@temp+1,w,c
  9954  003194  6E19               	movwf	(??i2___flmul+1)& (0+255),c
  9955  003196  6A1A               	clrf	(??i2___flmul+2)& (0+255),c
  9956  003198  6A1B               	clrf	(??i2___flmul+3)& (0+255),c
  9957  00319A  0060  F068  F01B   	movff	??i2___flmul+2,??i2___flmul+3
  9958  0031A0  0060  F064  F01A   	movff	??i2___flmul+1,??i2___flmul+2
  9959  0031A6  0060  F060  F019   	movff	??i2___flmul,??i2___flmul+1
  9960  0031AC  6A18               	clrf	??i2___flmul,c
  9961  0031AE  5018               	movf	??i2___flmul,w,c
  9962  0031B0  2623               	addwf	i2___flmul@prod,f,c
  9963  0031B2  5019               	movf	??i2___flmul+1,w,c
  9964  0031B4  2224               	addwfc	i2___flmul@prod+1,f,c
  9965  0031B6  501A               	movf	??i2___flmul+2,w,c
  9966  0031B8  2225               	addwfc	i2___flmul@prod+2,f,c
  9967  0031BA  501B               	movf	??i2___flmul+3,w,c
  9968  0031BC  2226               	addwfc	i2___flmul@prod+3,f,c
  9969  0031BE  0060  F074  F018   	movff	i2___flmul@grs,??i2___flmul
  9970  0031C4  0060  F078  F019   	movff	i2___flmul@grs+1,??i2___flmul+1
  9971  0031CA  0060  F07C  F01A   	movff	i2___flmul@grs+2,??i2___flmul+2
  9972  0031D0  0060  F080  F01B   	movff	i2___flmul@grs+3,??i2___flmul+3
  9973  0031D6  0E19               	movlw	25
  9974  0031D8  D005               	goto	i2u619_40
  9975  0031DA                     i2u619_45:
  9976  0031DA  90D8               	bcf	status,0,c
  9977  0031DC  321B               	rrcf	??i2___flmul+3,f,c
  9978  0031DE  321A               	rrcf	??i2___flmul+2,f,c
  9979  0031E0  3219               	rrcf	??i2___flmul+1,f,c
  9980  0031E2  3218               	rrcf	??i2___flmul,f,c
  9981  0031E4                     i2u619_40:
  9982  0031E4  2EE8               	decfsz	wreg,f,c
  9983  0031E6  D7F9               	goto	i2u619_45
  9984  0031E8  5018               	movf	??i2___flmul,w,c
  9985  0031EA  2623               	addwf	i2___flmul@prod,f,c
  9986  0031EC  5019               	movf	??i2___flmul+1,w,c
  9987  0031EE  2224               	addwfc	i2___flmul@prod+1,f,c
  9988  0031F0  501A               	movf	??i2___flmul+2,w,c
  9989  0031F2  2225               	addwfc	i2___flmul@prod+2,f,c
  9990  0031F4  501B               	movf	??i2___flmul+3,w,c
  9991  0031F6  2226               	addwfc	i2___flmul@prod+3,f,c
  9992  0031F8  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
  9993  0031FE  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
  9994  003204  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
  9995  00320A  6A1D               	clrf	i2___flmul@grs,c
  9996  00320C  5021               	movf	i2___flmul@aexp,w,c
  9997  00320E  0060  F088  F018   	movff	i2___flmul@bexp,??i2___flmul
  9998  003214  6A19               	clrf	(??i2___flmul+1)& (0+255),c
  9999  003216  2618               	addwf	??i2___flmul,f,c
 10000  003218  0E00               	movlw	0
 10001  00321A  2219               	addwfc	??i2___flmul+1,f,c
 10002  00321C  0E82               	movlw	130
 10003  00321E  2418               	addwf	??i2___flmul,w,c
 10004  003220  6E27               	movwf	i2___flmul@temp,c
 10005  003222  0EFF               	movlw	255
 10006  003224  2019               	addwfc	??i2___flmul+1,w,c
 10007  003226  6E28               	movwf	i2___flmul@temp+1,c
 10008  003228  D00F               	goto	i2l5038
 10009  00322A                     i2l5032:
 10010  00322A  90D8               	bcf	status,0,c
 10011  00322C  3623               	rlcf	i2___flmul@prod,f,c
 10012  00322E  3624               	rlcf	i2___flmul@prod+1,f,c
 10013  003230  3625               	rlcf	i2___flmul@prod+2,f,c
 10014  003232  3626               	rlcf	i2___flmul@prod+3,f,c
 10015  003234  BE20               	btfsc	i2___flmul@grs+3,7,c
 10016  003236  8023               	bsf	i2___flmul@prod,0,c
 10017  003238  90D8               	bcf	status,0,c
 10018  00323A  361D               	rlcf	i2___flmul@grs,f,c
 10019  00323C  361E               	rlcf	i2___flmul@grs+1,f,c
 10020  00323E  361F               	rlcf	i2___flmul@grs+2,f,c
 10021  003240  3620               	rlcf	i2___flmul@grs+3,f,c
 10022  003242  0627               	decf	i2___flmul@temp,f,c
 10023  003244  A0D8               	btfss	status,0,c
 10024  003246  0628               	decf	i2___flmul@temp+1,f,c
 10025  003248                     i2l5038:
 10026  003248  AE25               	btfss	i2___flmul@prod+2,7,c
 10027  00324A  D7EF               	goto	i2l5032
 10028  00324C  0E00               	movlw	0
 10029  00324E  6E21               	movwf	i2___flmul@aexp,c
 10030  003250  AE20               	btfss	i2___flmul@grs+3,7,c
 10031  003252  D017               	goto	i2l1248
 10032  003254  0EFF               	movlw	255
 10033  003256  141D               	andwf	i2___flmul@grs,w,c
 10034  003258  6E18               	movwf	??i2___flmul& (0+255),c
 10035  00325A  0EFF               	movlw	255
 10036  00325C  141E               	andwf	i2___flmul@grs+1,w,c
 10037  00325E  6E19               	movwf	(??i2___flmul+1)& (0+255),c
 10038  003260  0EFF               	movlw	255
 10039  003262  141F               	andwf	i2___flmul@grs+2,w,c
 10040  003264  6E1A               	movwf	(??i2___flmul+2)& (0+255),c
 10041  003266  0E7F               	movlw	127
 10042  003268  1420               	andwf	i2___flmul@grs+3,w,c
 10043  00326A  6E1B               	movwf	(??i2___flmul+3)& (0+255),c
 10044  00326C  5018               	movf	??i2___flmul,w,c
 10045  00326E  1019               	iorwf	??i2___flmul+1,w,c
 10046  003270  101A               	iorwf	??i2___flmul+2,w,c
 10047  003272  101B               	iorwf	??i2___flmul+3,w,c
 10048  003274  B4D8               	btfsc	status,2,c
 10049  003276  D003               	goto	i2l1249
 10050  003278                     i2u623_40:
 10051  003278  0E01               	movlw	1
 10052  00327A  6E21               	movwf	i2___flmul@aexp,c
 10053  00327C  D002               	goto	i2l1248
 10054  00327E                     i2l1249:
 10055  00327E  B023               	btfsc	i2___flmul@prod,0,c
 10056  003280  D7FB               	goto	i2u623_40
 10057  003282                     i2l1248:
 10058  003282  5021               	movf	i2___flmul@aexp,w,c
 10059  003284  B4D8               	btfsc	status,2,c
 10060  003286  D027               	goto	i2l5058
 10061  003288  0E01               	movlw	1
 10062  00328A  2623               	addwf	i2___flmul@prod,f,c
 10063  00328C  0E00               	movlw	0
 10064  00328E  2224               	addwfc	i2___flmul@prod+1,f,c
 10065  003290  2225               	addwfc	i2___flmul@prod+2,f,c
 10066  003292  2226               	addwfc	i2___flmul@prod+3,f,c
 10067  003294  A026               	btfss	i2___flmul@prod+3,0,c
 10068  003296  D01F               	goto	i2l5058
 10069  003298  0060  F08C  F018   	movff	i2___flmul@prod,??i2___flmul
 10070  00329E  0060  F090  F019   	movff	i2___flmul@prod+1,??i2___flmul+1
 10071  0032A4  0060  F094  F01A   	movff	i2___flmul@prod+2,??i2___flmul+2
 10072  0032AA  0060  F098  F01B   	movff	i2___flmul@prod+3,??i2___flmul+3
 10073  0032B0  341B               	rlcf	??i2___flmul+3,w,c
 10074  0032B2  321B               	rrcf	??i2___flmul+3,f,c
 10075  0032B4  321A               	rrcf	??i2___flmul+2,f,c
 10076  0032B6  3219               	rrcf	??i2___flmul+1,f,c
 10077  0032B8  3218               	rrcf	??i2___flmul,f,c
 10078  0032BA  0060  F060  F023   	movff	??i2___flmul,i2___flmul@prod
 10079  0032C0  0060  F064  F024   	movff	??i2___flmul+1,i2___flmul@prod+1
 10080  0032C6  0060  F068  F025   	movff	??i2___flmul+2,i2___flmul@prod+2
 10081  0032CC  0060  F06C  F026   	movff	??i2___flmul+3,i2___flmul@prod+3
 10082  0032D2  4A27               	infsnz	i2___flmul@temp,f,c
 10083  0032D4  2A28               	incf	i2___flmul@temp+1,f,c
 10084  0032D6                     i2l5058:
 10085  0032D6  BE28               	btfsc	i2___flmul@temp+1,7,c
 10086  0032D8  D00D               	goto	i2l5062
 10087  0032DA  5028               	movf	i2___flmul@temp+1,w,c
 10088  0032DC  E103               	bnz	i2u627_40
 10089  0032DE  2827               	incf	i2___flmul@temp,w,c
 10090  0032E0  A0D8               	btfss	status,0,c
 10091  0032E2  D008               	goto	i2l5062
 10092  0032E4                     i2u627_40:
 10093  0032E4  0E00               	movlw	0
 10094  0032E6  6E23               	movwf	i2___flmul@prod,c
 10095  0032E8  0E00               	movlw	0
 10096  0032EA  6E24               	movwf	i2___flmul@prod+1,c
 10097  0032EC  0E80               	movlw	128
 10098  0032EE  6E25               	movwf	i2___flmul@prod+2,c
 10099  0032F0  0E7F               	movlw	127
 10100  0032F2  D021               	goto	L14
 10101  0032F4                     i2l5062:
 10102  0032F4  BE28               	btfsc	i2___flmul@temp+1,7,c
 10103  0032F6  D005               	goto	i2u628_40
 10104  0032F8  5028               	movf	i2___flmul@temp+1,w,c
 10105  0032FA  E10E               	bnz	i2l1256
 10106  0032FC  0427               	decf	i2___flmul@temp,w,c
 10107  0032FE  B0D8               	btfsc	status,0,c
 10108  003300  D00B               	goto	i2l1256
 10109  003302                     i2u628_40:
 10110  003302  0E00               	movlw	0
 10111  003304  6E23               	movwf	i2___flmul@prod,c
 10112  003306  0E00               	movlw	0
 10113  003308  6E24               	movwf	i2___flmul@prod+1,c
 10114  00330A  0E00               	movlw	0
 10115  00330C  6E25               	movwf	i2___flmul@prod+2,c
 10116  00330E  0E00               	movlw	0
 10117  003310  6E26               	movwf	i2___flmul@prod+3,c
 10118  003312  0E00               	movlw	0
 10119  003314  6E1C               	movwf	i2___flmul@sign,c
 10120  003316  D010               	goto	i2l5074
 10121  003318                     i2l1256:
 10122  003318  0060  F09C  F022   	movff	i2___flmul@temp,i2___flmul@bexp
 10123  00331E  0EFF               	movlw	255
 10124  003320  1623               	andwf	i2___flmul@prod,f,c
 10125  003322  0EFF               	movlw	255
 10126  003324  1624               	andwf	i2___flmul@prod+1,f,c
 10127  003326  0E7F               	movlw	127
 10128  003328  1625               	andwf	i2___flmul@prod+2,f,c
 10129  00332A  0E00               	movlw	0
 10130  00332C  1626               	andwf	i2___flmul@prod+3,f,c
 10131  00332E  B022               	btfsc	i2___flmul@bexp,0,c
 10132  003330  8E25               	bsf	i2___flmul@prod+2,7,c
 10133  003332  90D8               	bcf	status,0,c
 10134  003334  3022               	rrcf	i2___flmul@bexp,w,c
 10135  003336                     L14:
 10136  003336  6E26               	movwf	i2___flmul@prod+3,c
 10137  003338                     i2l5074:
 10138  003338  501C               	movf	i2___flmul@sign,w,c
 10139  00333A  1226               	iorwf	i2___flmul@prod+3,f,c
 10140  00333C  0060  F08C  F010   	movff	i2___flmul@prod,?i2___flmul
 10141  003342  0060  F090  F011   	movff	i2___flmul@prod+1,?i2___flmul+1
 10142  003348  0060  F094  F012   	movff	i2___flmul@prod+2,?i2___flmul+2
 10143  00334E  0060  F098  F013   	movff	i2___flmul@prod+3,?i2___flmul+3
 10144  003354  0012               	return		;funcret
 10145  003356                     __end_ofi2___flmul:
 10146                           	opt callstack 0
 10147                           
 10148 ;; *************** function ___xxtofl *****************
 10149 ;; Defined at:
 10150 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;  sign            1    wreg     unsigned char 
 10153 ;;  val             4    1[COMRAM] long 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;  sign            1    9[COMRAM] unsigned char 
 10156 ;;  arg             4   11[COMRAM] unsigned long 
 10157 ;;  exp             1   10[COMRAM] unsigned char 
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  4    1[COMRAM] unsigned char 
 10160 ;; Registers used:
 10161 ;;		wreg, status,2, status,0
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10167 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10168 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10169 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10170 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10171 ;;Total ram usage:       14 bytes
 10172 ;; Hardware stack levels used:    1
 10173 ;; This function calls:
 10174 ;;		Nothing
 10175 ;; This function is called by:
 10176 ;;		_ADC_ISR
 10177 ;; This function uses a non-reentrant model
 10178 ;;
 10179                           
 10180                           	psect	text45
 10181  004256                     __ptext45:
 10182                           	opt callstack 0
 10183  004256                     ___xxtofl:
 10184                           	opt callstack 20
 10185                           
 10186                           ;incstack = 0
 10187                           ;___xxtofl@sign stored from wreg
 10188  004256  6E0A               	movwf	___xxtofl@sign,c
 10189  004258  500A               	movf	___xxtofl@sign,w,c
 10190  00425A  A4D8               	btfss	status,2,c
 10191  00425C  AE05               	btfss	___xxtofl@val+3,7,c
 10192  00425E  D022               	goto	i2l1280
 10193  004260  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 10194  004266  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 10195  00426C  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 10196  004272  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 10197  004278  1E06               	comf	??___xxtofl,f,c
 10198  00427A  1E07               	comf	??___xxtofl+1,f,c
 10199  00427C  1E08               	comf	??___xxtofl+2,f,c
 10200  00427E  1E09               	comf	??___xxtofl+3,f,c
 10201  004280  2A06               	incf	??___xxtofl,f,c
 10202  004282  0E00               	movlw	0
 10203  004284  2207               	addwfc	??___xxtofl+1,f,c
 10204  004286  2208               	addwfc	??___xxtofl+2,f,c
 10205  004288  2209               	addwfc	??___xxtofl+3,f,c
 10206  00428A  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 10207  004290  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 10208  004296  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 10209  00429C  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 10210  0042A2  D00C               	goto	i2l4910
 10211  0042A4                     i2l1280:
 10212  0042A4  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 10213  0042AA  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 10214  0042B0  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 10215  0042B6  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 10216  0042BC                     i2l4910:
 10217  0042BC  5002               	movf	___xxtofl@val,w,c
 10218  0042BE  1003               	iorwf	___xxtofl@val+1,w,c
 10219  0042C0  1004               	iorwf	___xxtofl@val+2,w,c
 10220  0042C2  1005               	iorwf	___xxtofl@val+3,w,c
 10221  0042C4  A4D8               	btfss	status,2,c
 10222  0042C6  D009               	goto	i2l4916
 10223  0042C8  0E00               	movlw	0
 10224  0042CA  6E02               	movwf	?___xxtofl,c
 10225  0042CC  0E00               	movlw	0
 10226  0042CE  6E03               	movwf	?___xxtofl+1,c
 10227  0042D0  0E00               	movlw	0
 10228  0042D2  6E04               	movwf	?___xxtofl+2,c
 10229  0042D4  0E00               	movlw	0
 10230  0042D6  6E05               	movwf	?___xxtofl+3,c
 10231  0042D8  0012               	return	
 10232  0042DA                     i2l4916:
 10233  0042DA  0E96               	movlw	150
 10234  0042DC  6E0B               	movwf	___xxtofl@exp,c
 10235  0042DE  D006               	goto	i2l4920
 10236  0042E0                     i2l4918:
 10237  0042E0  2A0B               	incf	___xxtofl@exp,f,c
 10238  0042E2  90D8               	bcf	status,0,c
 10239  0042E4  320F               	rrcf	___xxtofl@arg+3,f,c
 10240  0042E6  320E               	rrcf	___xxtofl@arg+2,f,c
 10241  0042E8  320D               	rrcf	___xxtofl@arg+1,f,c
 10242  0042EA  320C               	rrcf	___xxtofl@arg,f,c
 10243  0042EC                     i2l4920:
 10244  0042EC  0E00               	movlw	0
 10245  0042EE  140C               	andwf	___xxtofl@arg,w,c
 10246  0042F0  6E06               	movwf	??___xxtofl& (0+255),c
 10247  0042F2  0E00               	movlw	0
 10248  0042F4  140D               	andwf	___xxtofl@arg+1,w,c
 10249  0042F6  6E07               	movwf	(??___xxtofl+1)& (0+255),c
 10250  0042F8  0E00               	movlw	0
 10251  0042FA  140E               	andwf	___xxtofl@arg+2,w,c
 10252  0042FC  6E08               	movwf	(??___xxtofl+2)& (0+255),c
 10253  0042FE  0EFE               	movlw	254
 10254  004300  140F               	andwf	___xxtofl@arg+3,w,c
 10255  004302  6E09               	movwf	(??___xxtofl+3)& (0+255),c
 10256  004304  5006               	movf	??___xxtofl,w,c
 10257  004306  1007               	iorwf	??___xxtofl+1,w,c
 10258  004308  1008               	iorwf	??___xxtofl+2,w,c
 10259  00430A  1009               	iorwf	??___xxtofl+3,w,c
 10260  00430C  B4D8               	btfsc	status,2,c
 10261  00430E  D00D               	goto	i2l1287
 10262  004310  D7E7               	goto	i2l4918
 10263  004312                     i2l4922:
 10264  004312  2A0B               	incf	___xxtofl@exp,f,c
 10265  004314  0E01               	movlw	1
 10266  004316  260C               	addwf	___xxtofl@arg,f,c
 10267  004318  0E00               	movlw	0
 10268  00431A  220D               	addwfc	___xxtofl@arg+1,f,c
 10269  00431C  220E               	addwfc	___xxtofl@arg+2,f,c
 10270  00431E  220F               	addwfc	___xxtofl@arg+3,f,c
 10271  004320  90D8               	bcf	status,0,c
 10272  004322  320F               	rrcf	___xxtofl@arg+3,f,c
 10273  004324  320E               	rrcf	___xxtofl@arg+2,f,c
 10274  004326  320D               	rrcf	___xxtofl@arg+1,f,c
 10275  004328  320C               	rrcf	___xxtofl@arg,f,c
 10276  00432A                     i2l1287:
 10277  00432A  0E00               	movlw	0
 10278  00432C  140C               	andwf	___xxtofl@arg,w,c
 10279  00432E  6E06               	movwf	??___xxtofl& (0+255),c
 10280  004330  0E00               	movlw	0
 10281  004332  140D               	andwf	___xxtofl@arg+1,w,c
 10282  004334  6E07               	movwf	(??___xxtofl+1)& (0+255),c
 10283  004336  0E00               	movlw	0
 10284  004338  140E               	andwf	___xxtofl@arg+2,w,c
 10285  00433A  6E08               	movwf	(??___xxtofl+2)& (0+255),c
 10286  00433C  0EFF               	movlw	255
 10287  00433E  140F               	andwf	___xxtofl@arg+3,w,c
 10288  004340  6E09               	movwf	(??___xxtofl+3)& (0+255),c
 10289  004342  5006               	movf	??___xxtofl,w,c
 10290  004344  1007               	iorwf	??___xxtofl+1,w,c
 10291  004346  1008               	iorwf	??___xxtofl+2,w,c
 10292  004348  1009               	iorwf	??___xxtofl+3,w,c
 10293  00434A  B4D8               	btfsc	status,2,c
 10294  00434C  D007               	goto	i2l4930
 10295  00434E  D7E1               	goto	i2l4922
 10296  004350                     i2l4928:
 10297  004350  060B               	decf	___xxtofl@exp,f,c
 10298  004352  90D8               	bcf	status,0,c
 10299  004354  360C               	rlcf	___xxtofl@arg,f,c
 10300  004356  360D               	rlcf	___xxtofl@arg+1,f,c
 10301  004358  360E               	rlcf	___xxtofl@arg+2,f,c
 10302  00435A  360F               	rlcf	___xxtofl@arg+3,f,c
 10303  00435C                     i2l4930:
 10304  00435C  BE0E               	btfsc	___xxtofl@arg+2,7,c
 10305  00435E  D003               	goto	i2u607_40
 10306  004360  0E02               	movlw	2
 10307  004362  600B               	cpfslt	___xxtofl@exp,c
 10308  004364  D7F5               	goto	i2l4928
 10309  004366                     i2u607_40:
 10310  004366  A00B               	btfss	___xxtofl@exp,0,c
 10311  004368  9E0E               	bcf	___xxtofl@arg+2,7,c
 10312  00436A  90D8               	bcf	status,0,c
 10313  00436C  320B               	rrcf	___xxtofl@exp,f,c
 10314  00436E  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 10315  004374  6A07               	clrf	(??___xxtofl+1)& (0+255),c
 10316  004376  6A08               	clrf	(??___xxtofl+2)& (0+255),c
 10317  004378  6A09               	clrf	(??___xxtofl+3)& (0+255),c
 10318  00437A  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 10319  004380  6A08               	clrf	??___xxtofl+2,c
 10320  004382  6A07               	clrf	??___xxtofl+1,c
 10321  004384  6A06               	clrf	??___xxtofl,c
 10322  004386  5006               	movf	??___xxtofl,w,c
 10323  004388  120C               	iorwf	___xxtofl@arg,f,c
 10324  00438A  5007               	movf	??___xxtofl+1,w,c
 10325  00438C  120D               	iorwf	___xxtofl@arg+1,f,c
 10326  00438E  5008               	movf	??___xxtofl+2,w,c
 10327  004390  120E               	iorwf	___xxtofl@arg+2,f,c
 10328  004392  5009               	movf	??___xxtofl+3,w,c
 10329  004394  120F               	iorwf	___xxtofl@arg+3,f,c
 10330  004396  500A               	movf	___xxtofl@sign,w,c
 10331  004398  A4D8               	btfss	status,2,c
 10332  00439A  AE05               	btfss	___xxtofl@val+3,7,c
 10333  00439C  D001               	goto	i2l4946
 10334  00439E  8E0F               	bsf	___xxtofl@arg+3,7,c
 10335  0043A0                     i2l4946:
 10336  0043A0  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 10337  0043A6  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 10338  0043AC  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 10339  0043B2  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 10340  0043B8  0012               	return		;funcret
 10341  0043BA                     __end_of___xxtofl:
 10342                           	opt callstack 0
 10343                           
 10344 ;; *************** function _I2C_TX_ISR *****************
 10345 ;; Defined at:
 10346 ;;		line 98 in file "main.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;		None
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;		None
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10364 ;;Total ram usage:        0 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; This function calls:
 10367 ;;		Nothing
 10368 ;; This function is called by:
 10369 ;;		Interrupt level 2
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           	psect	text46
 10374  00523C                     __ptext46:
 10375                           	opt callstack 0
 10376  00523C                     _I2C_TX_ISR:
 10377                           	opt callstack 21
 10378                           
 10379                           ;main.c: 99:     I2C1TXB = I2C_TX_BUFFER[I2C_TX_COUNTER];
 10380                           
 10381                           ;incstack = 0
 10382  00523C  0E2D               	movlw	low _I2C_TX_BUFFER
 10383  00523E  244F               	addwf	_I2C_TX_COUNTER,w,c
 10384  005240  6ED9               	movwf	fsr2l,c
 10385  005242  6ADA               	clrf	fsr2h,c
 10386  005244  0E00               	movlw	high _I2C_TX_BUFFER
 10387  005246  22DA               	addwfc	fsr2h,f,c
 10388  005248  50DF               	movf	indf2,w,c
 10389  00524A  013D               	movlb	61	; () banked
 10390  00524C  6F6B               	movwf	107,b	;volatile
 10391                           
 10392                           ; BSR set to: 61
 10393                           ;main.c: 100:     I2C_TX_COUNTER ++;
 10394  00524E  2A4F               	incf	_I2C_TX_COUNTER,f,c
 10395                           
 10396                           ; BSR set to: 61
 10397  005250  0011               	retfie		f
 10398  005252                     __end_of_I2C_TX_ISR:
 10399                           	opt callstack 0
 10400                           
 10401 ;; *************** function _I2C_RX_ISR *****************
 10402 ;; Defined at:
 10403 ;;		line 102 in file "main.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;		None
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;		None
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      void 
 10410 ;; Registers used:
 10411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10421 ;;Total ram usage:        0 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; This function calls:
 10424 ;;		Nothing
 10425 ;; This function is called by:
 10426 ;;		Interrupt level 2
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           
 10430                           	psect	text47
 10431  005254                     __ptext47:
 10432                           	opt callstack 0
 10433  005254                     _I2C_RX_ISR:
 10434                           	opt callstack 21
 10435                           
 10436                           ;main.c: 103:     I2C_RX_BUFFER[I2C_RX_COUNTER] = I2C1RXB;
 10437                           
 10438                           ; BSR set to: 61
 10439                           ;incstack = 0
 10440  005254  0E20               	movlw	low _I2C_RX_BUFFER
 10441  005256  244E               	addwf	_I2C_RX_COUNTER,w,c
 10442  005258  6ED9               	movwf	fsr2l,c
 10443  00525A  6ADA               	clrf	fsr2h,c
 10444  00525C  0E01               	movlw	high _I2C_RX_BUFFER
 10445  00525E  22DA               	addwfc	fsr2h,f,c
 10446  005260  006F F5AB FFDF     	movff	15722,indf2	;volatile
 10447                           
 10448                           ;main.c: 104:     I2C_RX_COUNTER ++;
 10449  005266  2A4E               	incf	_I2C_RX_COUNTER,f,c
 10450  005268  0011               	retfie		f
 10451  00526A                     __end_of_I2C_RX_ISR:
 10452                           	opt callstack 0
 10453                           
 10454 ;; *************** function _I2C_GENERAL_ISR *****************
 10455 ;; Defined at:
 10456 ;;		line 107 in file "main.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;		None
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;		None
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  1    wreg      void 
 10463 ;; Registers used:
 10464 ;;		wreg, status,2
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10474 ;;Total ram usage:        0 bytes
 10475 ;; Hardware stack levels used:    1
 10476 ;; This function calls:
 10477 ;;		Nothing
 10478 ;; This function is called by:
 10479 ;;		Interrupt level 2
 10480 ;; This function uses a non-reentrant model
 10481 ;;
 10482                           
 10483                           	psect	text48
 10484  00526C                     __ptext48:
 10485                           	opt callstack 0
 10486  00526C                     _I2C_GENERAL_ISR:
 10487                           	opt callstack 21
 10488                           
 10489                           ;main.c: 108:     if(I2C1PIRbits.PC1IF)
 10490                           
 10491                           ;incstack = 0
 10492  00526C  013D               	movlb	61	; () banked
 10493  00526E  A579               	btfss	121,2,b	;volatile
 10494  005270  D003               	goto	i2l299
 10495                           
 10496                           ; BSR set to: 61
 10497                           ;main.c: 109:         I2C_STOP_DETECTED = 1;
 10498  005272  0E01               	movlw	1
 10499  005274  0100               	movlb	0	; () banked
 10500  005276  6FF9               	movwf	_I2C_STOP_DETECTED& (0+255),b
 10501  005278                     i2l299:
 10502                           
 10503                           ;main.c: 110:     I2C1PIR = 0x00;
 10504  005278  0E00               	movlw	0
 10505  00527A  013D               	movlb	61	; () banked
 10506  00527C  6F79               	movwf	121,b	;volatile
 10507                           
 10508                           ; BSR set to: 61
 10509  00527E  0011               	retfie		f
 10510  005280                     __end_of_I2C_GENERAL_ISR:
 10511                           	opt callstack 0
 10512                           
 10513 ;; *************** function _DEFAULT_ISR *****************
 10514 ;; Defined at:
 10515 ;;		line 113 in file "main.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;		None
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;		None
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  1    wreg      void 
 10522 ;; Registers used:
 10523 ;;		None
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10533 ;;Total ram usage:        0 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; This function calls:
 10536 ;;		Nothing
 10537 ;; This function is called by:
 10538 ;;		Interrupt level 2
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542                           	psect	text49
 10543  0052A4                     __ptext49:
 10544                           	opt callstack 0
 10545  0052A4                     _DEFAULT_ISR:
 10546                           	opt callstack 21
 10547                           
 10548                           ; BSR set to: 61
 10549                           ;incstack = 0
 10550  0052A4  0011               	retfie		f
 10551  0052A6                     __end_of_DEFAULT_ISR:
 10552                           	opt callstack 0
 10553                           
 10554                           ;
 10555                           ; Interrupt Vector Table @ 0x8
 10556                           ;
 10557                           
 10558                           	psect	ivt0x8
 10559  000008                     __pivt0x8:
 10560                           	opt callstack 0
 10561  000008                     ivt0x8_base:
 10562                           	opt callstack 0
 10563                           
 10564                           ; Vector 0 : SWINT
 10565  000008  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10566                           
 10567                           ; Vector 1 : HLVD
 10568  00000A  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10569                           
 10570                           ; Vector 2 : OSF
 10571  00000C  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10572                           
 10573                           ; Vector 3 : CSW
 10574  00000E  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10575                           
 10576                           ; Vector 4 : NVM
 10577  000010  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10578                           
 10579                           ; Vector 5 : SCAN
 10580  000012  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10581                           
 10582                           ; Vector 6 : CRC
 10583  000014  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10584                           
 10585                           ; Vector 7 : IOC
 10586  000016  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10587                           
 10588                           ; Vector 8 : INT0
 10589  000018  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10590                           
 10591                           ; Vector 9 : ZCD
 10592  00001A  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10593                           
 10594                           ; Vector 10 : AD
 10595  00001C  1305               	dw	_ADC_ISR shr (0+2)
 10596                           
 10597                           ; Vector 11 : ADT
 10598  00001E  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10599                           
 10600                           ; Vector 12 : CMP1
 10601  000020  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10602                           
 10603                           ; Vector 13 : SMT1
 10604  000022  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10605                           
 10606                           ; Vector 14 : SMT1PRA
 10607  000024  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10608                           
 10609                           ; Vector 15 : SMT1PRW
 10610  000026  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10611                           
 10612                           ; Vector 16 : DMA1SCNT
 10613  000028  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10614                           
 10615                           ; Vector 17 : DMA1DCNT
 10616  00002A  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10617                           
 10618                           ; Vector 18 : DMA1OR
 10619  00002C  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10620                           
 10621                           ; Vector 19 : DMA1A
 10622  00002E  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10623                           
 10624                           ; Vector 20 : SPI1RX
 10625  000030  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10626                           
 10627                           ; Vector 21 : SPI1TX
 10628  000032  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10629                           
 10630                           ; Vector 22 : SPI1
 10631  000034  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10632                           
 10633                           ; Vector 23 : I2C1RX
 10634  000036  1495               	dw	_I2C_RX_ISR shr (0+2)
 10635                           
 10636                           ; Vector 24 : I2C1TX
 10637  000038  148F               	dw	_I2C_TX_ISR shr (0+2)
 10638                           
 10639                           ; Vector 25 : I2C1
 10640  00003A  149B               	dw	_I2C_GENERAL_ISR shr (0+2)
 10641                           
 10642                           ; Vector 26 : I2C1E
 10643  00003C  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10644                           
 10645                           ; Vector 27 : U1RX
 10646  00003E  1489               	dw	_UART1_RX_ISR shr (0+2)
 10647                           
 10648                           ; Vector 28 : U1TX
 10649  000040  14A5               	dw	_UART1_TX_ISR shr (0+2)
 10650                           
 10651                           ; Vector 29 : U1E
 10652  000042  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10653                           
 10654                           ; Vector 30 : U1
 10655  000044  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10656                           
 10657                           ; Vector 31 : TMR0
 10658  000046  1420               	dw	_TIMER0_ISR shr (0+2)
 10659                           
 10660                           ; Vector 32 : TMR1
 10661  000048  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10662                           
 10663                           ; Vector 33 : TMR1G
 10664  00004A  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10665                           
 10666                           ; Vector 34 : TMR2
 10667  00004C  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10668                           
 10669                           ; Vector 35 : CCP1
 10670  00004E  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10671                           
 10672                           ; Vector 36 : Undefined
 10673  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10674                           
 10675                           ; Vector 37 : NCO1
 10676  000052  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10677                           
 10678                           ; Vector 38 : CWG1
 10679  000054  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10680                           
 10681                           ; Vector 39 : CLC1
 10682  000056  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10683                           
 10684                           ; Vector 40 : INT1
 10685  000058  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10686                           
 10687                           ; Vector 41 : CMP2
 10688  00005A  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10689                           
 10690                           ; Vector 42 : DMA2SCNT
 10691  00005C  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10692                           
 10693                           ; Vector 43 : DMA2DCNT
 10694  00005E  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10695                           
 10696                           ; Vector 44 : DMA2OR
 10697  000060  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10698                           
 10699                           ; Vector 45 : DMA2A
 10700  000062  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10701                           
 10702                           ; Vector 46 : I2C2RX
 10703  000064  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10704                           
 10705                           ; Vector 47 : I2C2TX
 10706  000066  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10707                           
 10708                           ; Vector 48 : I2C2
 10709  000068  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10710                           
 10711                           ; Vector 49 : I2C2E
 10712  00006A  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10713                           
 10714                           ; Vector 50 : U2RX
 10715  00006C  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10716                           
 10717                           ; Vector 51 : U2TX
 10718  00006E  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10719                           
 10720                           ; Vector 52 : U2E
 10721  000070  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10722                           
 10723                           ; Vector 53 : U2
 10724  000072  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10725                           
 10726                           ; Vector 54 : TMR3
 10727  000074  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10728                           
 10729                           ; Vector 55 : TMR3G
 10730  000076  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10731                           
 10732                           ; Vector 56 : TMR4
 10733  000078  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10734                           
 10735                           ; Vector 57 : CCP2
 10736  00007A  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10737                           
 10738                           ; Vector 58 : Undefined
 10739  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10740                           
 10741                           ; Vector 59 : CWG2
 10742  00007E  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10743                           
 10744                           ; Vector 60 : CLC2
 10745  000080  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10746                           
 10747                           ; Vector 61 : INT2
 10748  000082  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10749                           
 10750                           ; Vector 62 : Undefined
 10751  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10752                           
 10753                           ; Vector 63 : Undefined
 10754  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10755                           
 10756                           ; Vector 64 : Undefined
 10757  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10758                           
 10759                           ; Vector 65 : Undefined
 10760  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10761                           
 10762                           ; Vector 66 : Undefined
 10763  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10764                           
 10765                           ; Vector 67 : Undefined
 10766  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10767                           
 10768                           ; Vector 68 : Undefined
 10769  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10770                           
 10771                           ; Vector 69 : Undefined
 10772  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10773                           
 10774                           ; Vector 70 : TMR5
 10775  000094  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10776                           
 10777                           ; Vector 71 : TMR5G
 10778  000096  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10779                           
 10780                           ; Vector 72 : TMR6
 10781  000098  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10782                           
 10783                           ; Vector 73 : CCP3
 10784  00009A  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10785                           
 10786                           ; Vector 74 : CWG3
 10787  00009C  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10788                           
 10789                           ; Vector 75 : CLC3
 10790  00009E  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10791                           
 10792                           ; Vector 76 : Undefined
 10793  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10794                           
 10795                           ; Vector 77 : Undefined
 10796  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10797                           
 10798                           ; Vector 78 : Undefined
 10799  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10800                           
 10801                           ; Vector 79 : Undefined
 10802  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10803                           
 10804                           ; Vector 80 : CCP4
 10805  0000A8  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10806                           
 10807                           ; Vector 81 : CLC4
 10808  0000AA  14A9               	dw	_DEFAULT_ISR shr (0+2)
 10809  0000AC                     ivt0x8_undefint:
 10810                           	opt callstack 0
 10811  0000AC  00FF               	reset	
 10812                           
 10813                           	psect	param0
 10814  0000                     tosu	equ	0x3FFF
 10815                           tosh	equ	0x3FFE
 10816                           tosl	equ	0x3FFD
 10817                           stkptr	equ	0x3FFC
 10818                           pclatu	equ	0x3FFB
 10819                           pclath	equ	0x3FFA
 10820                           pcl	equ	0x3FF9
 10821                           tblptru	equ	0x3FF8
 10822                           tblptrh	equ	0x3FF7
 10823                           tblptrl	equ	0x3FF6
 10824                           tablat	equ	0x3FF5
 10825                           prodh	equ	0x3FF4
 10826                           prodl	equ	0x3FF3
 10827                           indf0	equ	0x3FEF
 10828                           postinc0	equ	0x3FEE
 10829                           postdec0	equ	0x3FED
 10830                           preinc0	equ	0x3FEC
 10831                           plusw0	equ	0x3FEB
 10832                           fsr0h	equ	0x3FEA
 10833                           fsr0l	equ	0x3FE9
 10834                           wreg	equ	0x3FE8
 10835                           indf1	equ	0x3FE7
 10836                           postinc1	equ	0x3FE6
 10837                           postdec1	equ	0x3FE5
 10838                           preinc1	equ	0x3FE4
 10839                           plusw1	equ	0x3FE3
 10840                           fsr1h	equ	0x3FE2
 10841                           fsr1l	equ	0x3FE1
 10842                           bsr	equ	0x3FE0
 10843                           indf2	equ	0x3FDF
 10844                           postinc2	equ	0x3FDE
 10845                           postdec2	equ	0x3FDD
 10846                           preinc2	equ	0x3FDC
 10847                           plusw2	equ	0x3FDB
 10848                           fsr2h	equ	0x3FDA
 10849                           fsr2l	equ	0x3FD9
 10850                           status	equ	0x3FD8


Data Sizes:
    Strings     146
    Constant    0
    Data        2
    BSS         197
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      87
    BANK0           160    152     154
    BANK1           256     10     164
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_8(CODE[24]), STR_7(CODE[21]), STR_6(CODE[15]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[24]), STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S2160_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_8(CODE[24]), STR_7(CODE[21]), STR_6(CODE[15]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[24]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_8(CODE[24]), STR_7(CODE[21]), STR_6(CODE[15]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[24]), STR_2(CODE[13]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    I2C_Transmit@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> AD5272_COMMANDS(COMRAM[2]), 

    memset@st	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    USART1_SendString@str	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER0_ISR in COMRAM

    _TIMER0_ISR->_ADC_Start

Critical Paths under _UART1_TX_ISR in COMRAM

    None.

Critical Paths under _UART1_RX_ISR in COMRAM

    None.

Critical Paths under _ADC_ISR in COMRAM

    _ADC_ISR->i2___flmul
    i2___flmul->___xxtofl

Critical Paths under _I2C_TX_ISR in COMRAM

    None.

Critical Paths under _I2C_RX_ISR in COMRAM

    None.

Critical Paths under _I2C_GENERAL_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_USART_handler
    _USART_handler->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _USART1_SendString->_GetStringSize
    _I2C_handler->_I2C_Transmit
    _USART1_ReceiveCommand->___wmul

Critical Paths under _TIMER0_ISR in BANK0

    None.

Critical Paths under _UART1_TX_ISR in BANK0

    None.

Critical Paths under _UART1_RX_ISR in BANK0

    None.

Critical Paths under _ADC_ISR in BANK0

    None.

Critical Paths under _I2C_TX_ISR in BANK0

    None.

Critical Paths under _I2C_RX_ISR in BANK0

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK0

    None.

Critical Paths under _DEFAULT_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _USART_handler->_sprintf

Critical Paths under _TIMER0_ISR in BANK1

    None.

Critical Paths under _UART1_TX_ISR in BANK1

    None.

Critical Paths under _UART1_RX_ISR in BANK1

    None.

Critical Paths under _ADC_ISR in BANK1

    None.

Critical Paths under _I2C_TX_ISR in BANK1

    None.

Critical Paths under _I2C_RX_ISR in BANK1

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK1

    None.

Critical Paths under _DEFAULT_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0_ISR in BANK2

    None.

Critical Paths under _UART1_TX_ISR in BANK2

    None.

Critical Paths under _UART1_RX_ISR in BANK2

    None.

Critical Paths under _ADC_ISR in BANK2

    None.

Critical Paths under _I2C_TX_ISR in BANK2

    None.

Critical Paths under _I2C_RX_ISR in BANK2

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK2

    None.

Critical Paths under _DEFAULT_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0_ISR in BANK3

    None.

Critical Paths under _UART1_TX_ISR in BANK3

    None.

Critical Paths under _UART1_RX_ISR in BANK3

    None.

Critical Paths under _ADC_ISR in BANK3

    None.

Critical Paths under _I2C_TX_ISR in BANK3

    None.

Critical Paths under _I2C_RX_ISR in BANK3

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK3

    None.

Critical Paths under _DEFAULT_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0_ISR in BANK4

    None.

Critical Paths under _UART1_TX_ISR in BANK4

    None.

Critical Paths under _UART1_RX_ISR in BANK4

    None.

Critical Paths under _ADC_ISR in BANK4

    None.

Critical Paths under _I2C_TX_ISR in BANK4

    None.

Critical Paths under _I2C_RX_ISR in BANK4

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK4

    None.

Critical Paths under _DEFAULT_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0_ISR in BANK5

    None.

Critical Paths under _UART1_TX_ISR in BANK5

    None.

Critical Paths under _UART1_RX_ISR in BANK5

    None.

Critical Paths under _ADC_ISR in BANK5

    None.

Critical Paths under _I2C_TX_ISR in BANK5

    None.

Critical Paths under _I2C_RX_ISR in BANK5

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0_ISR in BANK6

    None.

Critical Paths under _UART1_TX_ISR in BANK6

    None.

Critical Paths under _UART1_RX_ISR in BANK6

    None.

Critical Paths under _ADC_ISR in BANK6

    None.

Critical Paths under _I2C_TX_ISR in BANK6

    None.

Critical Paths under _I2C_RX_ISR in BANK6

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0_ISR in BANK7

    None.

Critical Paths under _UART1_TX_ISR in BANK7

    None.

Critical Paths under _UART1_RX_ISR in BANK7

    None.

Critical Paths under _ADC_ISR in BANK7

    None.

Critical Paths under _I2C_TX_ISR in BANK7

    None.

Critical Paths under _I2C_RX_ISR in BANK7

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TIMER0_ISR in BANK8

    None.

Critical Paths under _UART1_TX_ISR in BANK8

    None.

Critical Paths under _UART1_RX_ISR in BANK8

    None.

Critical Paths under _ADC_ISR in BANK8

    None.

Critical Paths under _I2C_TX_ISR in BANK8

    None.

Critical Paths under _I2C_RX_ISR in BANK8

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TIMER0_ISR in BANK9

    None.

Critical Paths under _UART1_TX_ISR in BANK9

    None.

Critical Paths under _UART1_RX_ISR in BANK9

    None.

Critical Paths under _ADC_ISR in BANK9

    None.

Critical Paths under _I2C_TX_ISR in BANK9

    None.

Critical Paths under _I2C_RX_ISR in BANK9

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TIMER0_ISR in BANK10

    None.

Critical Paths under _UART1_TX_ISR in BANK10

    None.

Critical Paths under _UART1_RX_ISR in BANK10

    None.

Critical Paths under _ADC_ISR in BANK10

    None.

Critical Paths under _I2C_TX_ISR in BANK10

    None.

Critical Paths under _I2C_RX_ISR in BANK10

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TIMER0_ISR in BANK11

    None.

Critical Paths under _UART1_TX_ISR in BANK11

    None.

Critical Paths under _UART1_RX_ISR in BANK11

    None.

Critical Paths under _ADC_ISR in BANK11

    None.

Critical Paths under _I2C_TX_ISR in BANK11

    None.

Critical Paths under _I2C_RX_ISR in BANK11

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TIMER0_ISR in BANK12

    None.

Critical Paths under _UART1_TX_ISR in BANK12

    None.

Critical Paths under _UART1_RX_ISR in BANK12

    None.

Critical Paths under _ADC_ISR in BANK12

    None.

Critical Paths under _I2C_TX_ISR in BANK12

    None.

Critical Paths under _I2C_RX_ISR in BANK12

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TIMER0_ISR in BANK13

    None.

Critical Paths under _UART1_TX_ISR in BANK13

    None.

Critical Paths under _UART1_RX_ISR in BANK13

    None.

Critical Paths under _ADC_ISR in BANK13

    None.

Critical Paths under _I2C_TX_ISR in BANK13

    None.

Critical Paths under _I2C_RX_ISR in BANK13

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TIMER0_ISR in BANK14

    None.

Critical Paths under _UART1_TX_ISR in BANK14

    None.

Critical Paths under _UART1_RX_ISR in BANK14

    None.

Critical Paths under _ADC_ISR in BANK14

    None.

Critical Paths under _I2C_TX_ISR in BANK14

    None.

Critical Paths under _I2C_RX_ISR in BANK14

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TIMER0_ISR in BANK15

    None.

Critical Paths under _UART1_TX_ISR in BANK15

    None.

Critical Paths under _UART1_RX_ISR in BANK15

    None.

Critical Paths under _ADC_ISR in BANK15

    None.

Critical Paths under _I2C_TX_ISR in BANK15

    None.

Critical Paths under _I2C_RX_ISR in BANK15

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TIMER0_ISR in BANK16

    None.

Critical Paths under _UART1_TX_ISR in BANK16

    None.

Critical Paths under _UART1_RX_ISR in BANK16

    None.

Critical Paths under _ADC_ISR in BANK16

    None.

Critical Paths under _I2C_TX_ISR in BANK16

    None.

Critical Paths under _I2C_RX_ISR in BANK16

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TIMER0_ISR in BANK17

    None.

Critical Paths under _UART1_TX_ISR in BANK17

    None.

Critical Paths under _UART1_RX_ISR in BANK17

    None.

Critical Paths under _ADC_ISR in BANK17

    None.

Critical Paths under _I2C_TX_ISR in BANK17

    None.

Critical Paths under _I2C_RX_ISR in BANK17

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TIMER0_ISR in BANK18

    None.

Critical Paths under _UART1_TX_ISR in BANK18

    None.

Critical Paths under _UART1_RX_ISR in BANK18

    None.

Critical Paths under _ADC_ISR in BANK18

    None.

Critical Paths under _I2C_TX_ISR in BANK18

    None.

Critical Paths under _I2C_RX_ISR in BANK18

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TIMER0_ISR in BANK19

    None.

Critical Paths under _UART1_TX_ISR in BANK19

    None.

Critical Paths under _UART1_RX_ISR in BANK19

    None.

Critical Paths under _ADC_ISR in BANK19

    None.

Critical Paths under _I2C_TX_ISR in BANK19

    None.

Critical Paths under _I2C_RX_ISR in BANK19

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TIMER0_ISR in BANK20

    None.

Critical Paths under _UART1_TX_ISR in BANK20

    None.

Critical Paths under _UART1_RX_ISR in BANK20

    None.

Critical Paths under _ADC_ISR in BANK20

    None.

Critical Paths under _I2C_TX_ISR in BANK20

    None.

Critical Paths under _I2C_RX_ISR in BANK20

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TIMER0_ISR in BANK21

    None.

Critical Paths under _UART1_TX_ISR in BANK21

    None.

Critical Paths under _UART1_RX_ISR in BANK21

    None.

Critical Paths under _ADC_ISR in BANK21

    None.

Critical Paths under _I2C_TX_ISR in BANK21

    None.

Critical Paths under _I2C_RX_ISR in BANK21

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TIMER0_ISR in BANK22

    None.

Critical Paths under _UART1_TX_ISR in BANK22

    None.

Critical Paths under _UART1_RX_ISR in BANK22

    None.

Critical Paths under _ADC_ISR in BANK22

    None.

Critical Paths under _I2C_TX_ISR in BANK22

    None.

Critical Paths under _I2C_RX_ISR in BANK22

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TIMER0_ISR in BANK23

    None.

Critical Paths under _UART1_TX_ISR in BANK23

    None.

Critical Paths under _UART1_RX_ISR in BANK23

    None.

Critical Paths under _ADC_ISR in BANK23

    None.

Critical Paths under _I2C_TX_ISR in BANK23

    None.

Critical Paths under _I2C_RX_ISR in BANK23

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TIMER0_ISR in BANK24

    None.

Critical Paths under _UART1_TX_ISR in BANK24

    None.

Critical Paths under _UART1_RX_ISR in BANK24

    None.

Critical Paths under _ADC_ISR in BANK24

    None.

Critical Paths under _I2C_TX_ISR in BANK24

    None.

Critical Paths under _I2C_RX_ISR in BANK24

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TIMER0_ISR in BANK25

    None.

Critical Paths under _UART1_TX_ISR in BANK25

    None.

Critical Paths under _UART1_RX_ISR in BANK25

    None.

Critical Paths under _ADC_ISR in BANK25

    None.

Critical Paths under _I2C_TX_ISR in BANK25

    None.

Critical Paths under _I2C_RX_ISR in BANK25

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TIMER0_ISR in BANK26

    None.

Critical Paths under _UART1_TX_ISR in BANK26

    None.

Critical Paths under _UART1_RX_ISR in BANK26

    None.

Critical Paths under _ADC_ISR in BANK26

    None.

Critical Paths under _I2C_TX_ISR in BANK26

    None.

Critical Paths under _I2C_RX_ISR in BANK26

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TIMER0_ISR in BANK27

    None.

Critical Paths under _UART1_TX_ISR in BANK27

    None.

Critical Paths under _UART1_RX_ISR in BANK27

    None.

Critical Paths under _ADC_ISR in BANK27

    None.

Critical Paths under _I2C_TX_ISR in BANK27

    None.

Critical Paths under _I2C_RX_ISR in BANK27

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TIMER0_ISR in BANK28

    None.

Critical Paths under _UART1_TX_ISR in BANK28

    None.

Critical Paths under _UART1_RX_ISR in BANK28

    None.

Critical Paths under _ADC_ISR in BANK28

    None.

Critical Paths under _I2C_TX_ISR in BANK28

    None.

Critical Paths under _I2C_RX_ISR in BANK28

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TIMER0_ISR in BANK29

    None.

Critical Paths under _UART1_TX_ISR in BANK29

    None.

Critical Paths under _UART1_RX_ISR in BANK29

    None.

Critical Paths under _ADC_ISR in BANK29

    None.

Critical Paths under _I2C_TX_ISR in BANK29

    None.

Critical Paths under _I2C_RX_ISR in BANK29

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TIMER0_ISR in BANK30

    None.

Critical Paths under _UART1_TX_ISR in BANK30

    None.

Critical Paths under _UART1_RX_ISR in BANK30

    None.

Critical Paths under _ADC_ISR in BANK30

    None.

Critical Paths under _I2C_TX_ISR in BANK30

    None.

Critical Paths under _I2C_RX_ISR in BANK30

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TIMER0_ISR in BANK31

    None.

Critical Paths under _UART1_TX_ISR in BANK31

    None.

Critical Paths under _UART1_RX_ISR in BANK31

    None.

Critical Paths under _ADC_ISR in BANK31

    None.

Critical Paths under _I2C_TX_ISR in BANK31

    None.

Critical Paths under _I2C_RX_ISR in BANK31

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   40323
                                            151 BANK0      1     1      0
                           _ADC_Init
                           _I2C_Init
                       _I2C_Transmit
                        _USART1_Init
              _USART1_ReceiveCommand
                      _USART_handler
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_handler                                        2     2      0   38512
                                            149 BANK0      2     2      0
                      _GetStringSize
                        _I2C_handler
                  _USART1_SendString
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   35926
                                            141 BANK0      8     0      8
                                              0 BANK1     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   34168
                                            133 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   33674
                                            113 BANK0     20    14      6
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   28977
                                             45 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3957
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3343
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             25 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     3      5     431
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _USART1_SendString                                    8     4      4     449
                                              4 BANK0      8     4      4
                      _GetStringSize (ARG)
                    _USART1_SendByte
 ---------------------------------------------------------------------------------
 (3) _USART1_SendByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_handler                                          3     1      2    1576
                                             12 BANK0      3     1      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C_Transmit                                        12     8      4    1334
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (2) _GetStringSize                                        4     2      2     130
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _USART1_ReceiveCommand                                2     2      0     412
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _USART1_Init                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _TIMER0_ISR                                          0     0      0      22
                          _ADC_Start
 ---------------------------------------------------------------------------------
 (11) _ADC_Start                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ADC_ISR                                             4     4      0    1962
                                             40 COMRAM     4     4      0
                           ___xxtofl
                          i2___flmul
 ---------------------------------------------------------------------------------
 (11) i2___flmul                                          25    17      8    1518
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) ___xxtofl                                           14    10      4     398
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_TX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_RX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_GENERAL_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Init
   _I2C_Transmit
   _USART1_Init
   _USART1_ReceiveCommand
     ___wmul
   _USART_handler
     _GetStringSize
     _I2C_handler
       _I2C_Transmit
     _USART1_SendString
       _GetStringSize (ARG)
       _USART1_SendByte (ARG)
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isupper
           _strncmp
           _tolower
             _isupper
   _timer0_init

 _TIMER0_ISR (ROOT)
   _ADC_Start

 _UART1_TX_ISR (ROOT)

 _UART1_RX_ISR (ROOT)

 _ADC_ISR (ROOT)
   ___xxtofl
   i2___flmul
     ___xxtofl (ARG)

 _I2C_TX_ISR (ROOT)

 _I2C_RX_ISR (ROOT)

 _I2C_GENERAL_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      A4       7       64.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      9A       5       96.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      57       1       91.6%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     195      58        0.0%
DATA                 0      0     195       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 01:00:03 2019

         USART1_SendString@size 0066                    ___fldiv@aexp 0078                    ___fldiv@bexp 0077  
           __size_of_I2C_RX_ISR 0016                    ___fldiv@sign 0070             __size_of_I2C_TX_ISR 0016  
                   __CFG_CP$OFF 000000                    ___awdiv@sign 0065              __size_of_ADC_Start 0012  
           ___wmul@multiplicand 0062                             l310 47DC                             l505 4752  
                           l546 2464                             l572 2816                             l890 453E  
                           _pad 4716                 __end_of_ADC_ISR 4C96                    ___awmod@sign 0065  
                           wreg 003FE8                     i2___flmul@a 0014                     i2___flmul@b 0010  
                  ___flmul@aexp 006D                    ___flmul@bexp 0072                    ___flmul@sign 006C  
                  ___flmul@temp 0077                    ___flmul@prod 0073                   __CFG_BBEN$OFF 000000  
          __size_of_DEFAULT_ISR 0002                    __CFG_LVP$OFF 000000                    __CFG_ZCD$OFF 000000  
                  ___fltol@exp1 0069                            l1220 3C2A                            l1221 3C26  
                          l1209 3BBC                            l1170 3924                            l1154 3852  
                          l1155 3830                            l1180 3988                            l1316 3E30  
                          l1239 2C72                            l1256 2F66                            l1248 2ED0  
                          l1249 2ECC                            l1179 398C                            l1382 4F5A  
                          l6004 46BC                            l5310 371E                            l6022 46FC  
                          l6014 46D4                            l6102 232E                            l5400 3876  
                          l6016 46E0                            l6008 46CC                            l6120 244C  
                          l6104 2396                            l5410 389C                            l5330 3762  
                          l5306 371A                            l6210 28DE                            l6130 2478  
                          l5500 4736                            l6140 24C8                            l6124 2472  
                          l6108 23E2                            l6036 20F6                            l5342 3786  
                          l5334 3766                            l5510 477A                            l6222 290E  
                          l6230 292E                            l6150 24EA                            l6070 21D6  
                          ?_pad 0070                            l5408 3898                            l5264 489C  
                          l5504 474A                            l6312 2BB0                            l6160 251E  
                          l6048 2128                            l6056 2140                            l6400 3686  
                          l5418 38AE                            l5530 4456                            l5274 500A  
                          l5282 516E                            l5514 47AE                            l5506 475C  
                          l6138 24C4                            l6066 21B4                            l6074 220A  
                          l6330 45AE                            l5700 3CA2                            l5436 3948  
                          l5452 3968                            l5428 3914                            l5372 37E0  
                          l5284 5174                            l6156 250E                            l6084 227E  
                          l6092 2298                            l6068 21CC                            l6332 45BC  
                          l6510 4FE0                            l6422 521E                            l5710 3CDA  
                          l5614 3AA4                            l5446 395E                            l5526 444C  
                          l5278 5028                            l5542 4DFE                            l6238 2952  
                          l6246 2A24                            l6166 2558                            l6174 26B4  
                          l6406 36A2                            l6600 3F38                            l6520 504A  
                          l6512 4FF4                            l5712 3CDC                            l5704 3CCC  
                          l5640 3B12                            l5632 3AFA                            l5480 3A08  
                          l5472 39E2                            l5384 383E                            l5536 449E  
                          l5560 3D7E                            l6434 49F4                            l5650 3B6C  
                          l5626 3ADC                            l5618 3AA8                            l5802 2E78  
                          l5386 3842                            l5570 3E52                            l6274 2AB4  
                          l6258 2A66                            l6098 22E4                            l6370 34E8  
                          l6362 3466                            l6540 4BAE                            l5732 2C1E  
                          l5484 3A10                            l6276 2ABE                            l6196 280E  
                          l6188 2792                            l6452 4D22                            l6542 4BB8  
                          l6550 4BE6                            l6622 3F6E                            l6438 4A20  
                          l6462 496C                            l6470 4982                            l5670 3BD2  
                          l5750 2C5E                            l5734 2C22                            l5486 3A12  
                          l5574 3E98                            l6286 2B22                            l6198 2830  
                          l6390 362A                            l6374 3524                            l6454 4D52  
                          l5912 4CB8                            l5664 3BBA                            l5832 2F42  
                          l5808 2E96                            l5760 2C90                            l5752 2C62  
                          l5736 2C32                            l6296 2B4E                            l6538 4BA4  
                          l6474 4996                            l6458 4946                            l5658 3B94  
                          l5594 3A64                            l5578 3EC6                            l6802 41D0  
                          l6810 4210                            l6548 4BC4                            l6660 3FCE  
                          l6652 3FB8                            l6644 3FA2                            l6636 3F8C  
                          l6628 3F76                            l6572 3EEA                            l6484 50FE  
                          l5932 4CFE                            l5924 4CE6                            l5916 4CC6  
                          l5908 4CAC                            l5676 3BF0                            l5940 4AAC  
                          l5844 2F86                            l5828 2F24                            l6396 367A  
                          l6812 4236                            l6478 49B4                            l5870 4B28  
                          l5918 4CCE                            l5598 3A68                            l6806 41FA  
                          l6584 3F08                            l6488 5114                            l5864 4B18  
                          l5928 4CF0                            l5696 3C7E                            l5944 4AE0  
                          l5960 4512                            l6674 3FF4                            l6594 3F28  
                          l5970 4576                            l6668 3FE4                            l5876 4B3E  
                          l5892 4B70                            l5948 4AFE                            l5964 4528  
                          l5956 44DE                            l5878 4B46                            l6782 40D4  
                          l6790 4146                            l6862 482A                            l5896 4B7E  
                          l5888 4B66                            l6792 4166                            l6784 4102  
                          l5978 50D8                            l6786 4130                            l6866 4846  
                          l5988 466A                            l6796 4190                            l6798 41A6  
                          l6888 486E                            STR_1 2073                            STR_2 2066  
                          STR_3 2001                            STR_4 2043                            STR_5 2019  
                          STR_6 2057                            STR_7 202E                            STR_8 2001  
                          STR_9 2080                            u7010 4F40                            u7020 4F42  
                          u7110 3E78                            u7040 3D44                            u7050 3D64  
                          u8010 245A                            u7115 3E6E                            u7300 3C20  
                          u6420 4894                            u7045 3D3A                            u6600 3816  
                          u6440 48DC                            u8040 2490                            u7090 3E10  
                          u7075 3D98                            _PIR3 0039A3                            u7340 3C8C  
                          u7076 3D9E                            u7077 3DAC                            u7350 3CB0  
                          u6630 385A                            u6470 5158                            u8310 2B38  
                          u8150 2782                            u7095 3E06                            u7440 2C7E  
                          u6480 515A                            u8080 24E6                            u8400 461A  
                          u7530 2F32                            u7450 2E32                            u8330 2B9A  
                          u8250 2A48                            u9210 47E4                            u7700 4AFA  
                          u7540 2F50                            u6580 3804                            u8340 2B9C  
                          u6590 3814                            u7455 2E28                            u8600 49B4  
                          u6840 39EE                            u6760 396C                            u6920 4412  
                          u9160 4170                            u7650 4CD2                            u7490 2EC6  
                          u9170 4172                            u6780 3982                            u7820 46E6  
                          u7900 218E                            u8460 35C6                            u6925 4406  
                          u8710 3F02                            u7590 4B4A                            u8470 35C8  
                          u7770 4658                            u6970 4496                            u7930 2256  
                          u7780 4690                            u6980 4498                            u7940 2258  
                          u7860 2118                            u6965 4478                            u8670 5070  
                          u6990 4E46                            u8680 3EE6                            u7785 4686  
                          u7890 218C                            u7980 241C                            u6997 4E38  
                          _dbuf 012A            __size_of_I2C_handler 004A                            _main 47CE  
                          _prec 0047                __end_of_I2C_Init 4DE6                            _nout 0043  
                          pad@i 0077                            pad@p 0074                            fsr1h 003FE2  
                          fsr2h 003FDA                            indf1 003FE7                            indf2 003FDF  
                          fsr1l 003FE1                            pad@w 0079                            fsr2l 003FD9  
              __end_of_ADC_Init 51E8                   ___fpclassifyf 43BA                            prodh 003FF4  
                          prodl 003FF3                            start 00AE                 ___fldiv@new_exp 0071  
                ?_USART_handler 0001                    _tolower$2232 006C                    ___param_bank 000000  
                   ?_TIMER0_ISR 0001                           ??_pad 0076           __size_of_I2C_Transmit 00A2  
                 ___fltol@sign1 0068                 __end_of___fladd 3A36                           ?_main 0001  
                         _ADPCH 003EF1                 __end_of___fldiv 3CE4                           _ADREF 003EFD  
               __end_of___awdiv 4B8C                 __end_of___flneg 50F2                           STR_10 2088  
                         STR_13 2084                           STR_14 208C                           STR_17 2090  
                 __CFG_WDTE$OFF 000000                           STR_19 2090                 __end_of___awmod 4D0C  
               __end_of___flmul 2FA4                 __end_of___flsub 4F12                 __end_of___fltol 4716  
               ___awdiv@divisor 0062                  __CFG_DEBUG$OFF 000000                           _U1UIR 003DF8  
                         _U1RXB 003DE8                           _U1TXB 003DEA                           i2l266 50A4  
                         i2l299 5278                 ___awdiv@counter 0064                           _OSCEN 0039DD  
                  vfpfcnvrt@fmt 00D3                           _TMR0H 003FB7                           _TMR0L 003FB6  
        _AD5272_VOLTAGE_ADDRESS 0057                I2C_handler@value 006C                  __CFG_FCMEN$OFF 000000  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                         _flags 0049                           _fputc 4882                           _fputs 4FFE  
            __CFG_MCLRE$EXTMCLR 000000                           pad@fp 0070                           _width 0045  
                         _putch 52A2                 __end_of_isupper 5160                           tablat 003FF5  
             __end_of_ADC_Start 5292                           status 003FD8                 __end_of_sprintf 4EB2  
                ?___fpclassifyf 0060                 __end_of_tolower 4F68               _USART1_SendString 4932  
                 i2___flmul@grs 001D                 __end_of_strncmp 464A              USART1_SendString@i 0068  
            __size_ofi2___flmul 03B2                    _I2C_Transmit 49D4              ?_USART1_SendString 0064  
                __CFG_CSWEN$OFF 000000         I2C_Transmit@buffer_size 0062        __size_of_USART1_SendByte 001A  
               __initialization 4F68                    __end_of_main 4882                  __CFG_SAFEN$OFF 000000  
           ??_USART1_SendString 0068                       ??_ADC_ISR 0029                   _I2C_RX_BUFFER 0120  
                        ??_main 00F7                  __CFG_PR1WAY$ON 000000                   __activetblptr 000003  
                 _I2C_TX_BUFFER 002D                  __CFG_MVECEN$ON 000000                    ??_I2C_RX_ISR 0060  
                  ??_I2C_TX_ISR 0060                          _ADCON0 003EF8                          _ADCON1 003EF9  
                        _ADCON2 003EFA                          ?_fputc 0060                          ?_fputs 0069  
                        _ADRESH 003EF0                          _ADRESL 003EEF                ___awdiv@dividend 0060  
                        ?_putch 0001                          _T0CON0 003FB8                          _T0CON1 003FB9  
                        _RB1I2C 003A5A                          _U1CON0 003DF2                          _U1CON1 003DF3  
                        _U1BRGH 003DF6                          _U1BRGL 003DF5                          _U2CON2 003DDC  
                        _RB0PPS 003A08              __CFG_PWRTS$PWRT_64 000000                          _RB1PPS 003A09  
     __end_of_USART1_SendString 49D4                          _RC7PPS 003A17                          i2l1239 3024  
                        i2l1280 42A4                          i2l1256 3318                          i2l1248 3282  
                        i2l1249 327E                  __CFG_WDTCCS$SC 000000                          i2l1287 432A  
                        i2l5032 322A                          i2l5062 32F4                          i2l5038 3248  
           USART1_SendByte@byte 0060                          i2l5074 3338                          i2l5058 32D6  
                        i2l5088 5090                          i2l4910 42BC             __size_of_TIMER0_ISR 003A  
                        i2l4920 42EC                          i2l4930 435C                          i2l4922 4312  
                        i2l4916 42DA                          i2l4918 42E0                          i2l4928 4350  
                        i2l4946 43A0                          i2l4962 2FD0                          i2l4980 3010  
                        i2l4964 2FD4                          i2l4990 3042                          i2l4982 3014  
                        i2l4966 2FE4                 _I2C_GENERAL_ISR 526C                          _OSCFRQ 0039DF  
               ??_USART_handler 00F5                __end_of___xxtofl 43BA                  __CFG_XINST$OFF 000000  
             _I2C_STOP_DETECTED 00F9                    vfprintf@cfmt 00EB                          ___flge 44A8  
                        ___fleq 4A76                       ??___fladd 0068                          ___wmul 5196  
                     ??___fldiv 0068                       ??___awdiv 0064                       ??___flneg 0064  
                __CFG_STVREN$ON 000000                       ??___awmod 0064                       ??___flmul 0068  
                     ??___flsub 0081                       ??___fltol 0064                    ?_timer0_init 0001  
      I2C_handler@ad5272_select 006E                          _efgtoa 2094              __end_of_I2C_RX_ISR 526A  
            __end_of_I2C_TX_ISR 5252                          _floorf 3CE4                          _memset 50F2  
                        clear_0 4F8A                          clear_1 4F9C                ___awdiv@quotient 0066  
               ___awmod@divisor 0062                 ___awmod@counter 0064                          pad@buf 0072  
                        _strcpy 4DE6                          _strlen 5160                          fputc@c 0060  
                        fputs@c 006D                          fputs@i 006E                    __pdataCOMRAM 0056  
                        fputs@s 0069                       ?_I2C_Init 0001               __end_ofi2___flmul 3356  
               ___fpclassifyf@e 0068                       ?_ADC_Init 0001                 ___fpclassifyf@u 006A  
               ___fpclassifyf@x 0060                    __mediumconst 0000  __size_of_USART1_ReceiveCommand 01D2  
 __end_of_USART1_ReceiveCommand 40B2                          tblptrh 003FF7                       ??_isupper 0062  
                        tblptrl 003FF6                          tblptru 003FF8                    ?_USART1_Init 0001  
                        putch@c 0001                __end_of_vfprintf 4D7A                       ??_sprintf 00F5  
                     ??_tolower 0068           __end_of_GetStringSize 507E                  i2___flmul@aexp 0021  
                i2___flmul@bexp 0022                       ??_strncmp 0066                  i2___flmul@sign 001C  
                i2___flmul@temp 0027                  i2___flmul@prod 0023                      ___flge@ff1 0079  
                    ___flge@ff2 007D                 ??___fpclassifyf 0064                    ___xxtofl@arg 000C  
                  ___xxtofl@exp 000B                    ___xxtofl@val 0002                      ___fleq@ff1 0060  
                    ___fleq@ff2 0064                      __accesstop 0060         __end_of__initialization 4FAE  
                    ___flneg@f1 0060                   ___rparam_used 000000                      ___fltol@f1 0060  
                __pcstackCOMRAM 0001                  ivt0x8_undefint 00AC                   __end_of_fputc 4932  
                 __end_of_fputs 5040                   __end_of_putch 52A4               ??_USART1_SendByte 0060  
                 ?_UART1_RX_ISR 0001                   ?_UART1_TX_ISR 0001          _AD5272_CURRENT_ADDRESS 0056  
                    ??_I2C_Init 0060                      ??_ADC_Init 0060         __end_of_I2C_GENERAL_ISR 5280  
                _I2C_RX_COUNTER 004E                         ??_fputc 0064                         ??_fputs 006D  
               __CFG_IVT1WAY$ON 000000                         ??_putch 0060                      __pbssBANK0 00F8  
                    __pbssBANK1 0100      __size_of_USART1_SendString 00A2                  _I2C_TX_COUNTER 004F  
                       IVTBASEH 003FD6                         IVTBASEL 003FD5                         IVTBASEU 003FD7  
                       ?___flge 0079                         ?___fleq 0060                         _I2C1CLK 003D7B  
                       _I2C1CNT 003D6C                         _I2C1ERR 003D76                         ?___wmul 0060  
                       _I2C1PIR 003D79                         _I2C1RXB 003D6A                         _I2C1TXB 003D6B  
               __CFG_PPS1WAY$ON 000000                    ??_TIMER0_ISR 0002                         ?_efgtoa 008D  
                _counter_timer0 004D                         ?_floorf 0079                         _ADC_ISR 4C14  
                       ?_memset 0060                  ??_UART1_RX_ISR 0002                  ??_UART1_TX_ISR 0002  
                       _COMMAND 0050                         ?_strcpy 0060                         ?_strlen 0060  
                       _U1ERRIE 003DFA                   ??_DEFAULT_ISR 0060                         _U1RXPPS 003AE5  
                     ?___xxtofl 0002                         _IVTLOCK 003FD4              __size_of_vfpfcnvrt 0396  
                       _OSCTUNE 0039DE                         _WDTCON0 00395B                         _WDTCON1 00395C  
                    _led_enable 00F8                   ??_I2C_handler 006E              _ADC_VOLTAGE_RESULT 003F  
            __end_of_TIMER0_ISR 50BA                  GetStringSize@i 0062                       _ADC_Start 5280  
                       __Hparam 0000                         __Lparam 0000      __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
               __size_of___flge 00D2                 __size_of___fleq 008C                         ___fladd 36EC  
                       ___fldiv 3A36                         ___awdiv 4B02                         ___flneg 50BA  
                       ___awmod 4C96                         ___flmul 2BF0                         ___flsub 4EB2  
                       ___fltol 464A                 __size_of___wmul 0030                       ?_vfprintf 00E5  
                  __psmallconst 2000                 __size_of_efgtoa 0B5C                 __size_of_floorf 01FC  
                       __pcinit 4F68                 __size_of_memset 0038                         __ramtop 2000  
          __size_of_timer0_init 0020                         __ptext0 47CE                         __ptext1 51E8  
                       __ptext2 40B2                         __ptext3 4E50                         __ptext4 4D0C  
                       __ptext5 3356                         __ptext6 457A                         __ptext7 2094  
                       __ptext8 4F12                         __ptext9 512A                 __CFG_WRTAPP$OFF 000000  
               __size_of_strcpy 006A                 __size_of_strlen 0036                    __size_of_pad 00B8  
                    ??___xxtofl 0006                ___awmod@dividend 0060                     _I2C1PIEbits 003D7A  
               __CFG_WRTSAF$OFF 000000                         _isupper 512A                         efgtoa@c 0093  
                       efgtoa@d 00B1                         efgtoa@e 00C9                         efgtoa@f 008F  
                       efgtoa@g 00C5                         efgtoa@h 00BB                         efgtoa@i 00C3  
              ?_I2C_GENERAL_ISR 0001                         efgtoa@l 00BF                         efgtoa@m 00AD  
                       efgtoa@n 00CB                         efgtoa@p 00B5                         efgtoa@t 00A9  
                       efgtoa@u 00CD                         efgtoa@w 00B8                     _I2C1PIRbits 003D79  
                       _sprintf 4E50                         _tolower 4F12                         _tx_byte 0052  
                       _strncmp 457A             __end_of_DEFAULT_ISR 52A6            end_of_initialization 4FAE  
          __size_of_USART1_Init 0086                         floorf@e 0087                         floorf@m 0083  
                       floorf@u 0089                         floorf@x 0079                         fputc@fp 0062  
              __CFG_BOREN$NOSLP 000000                         memset@i 0066                         memset@x 0062  
                       fputs@fp 006B                    ADC_Start@pin 0001             __end_of_I2C_handler 4FFE  
                    ?_ADC_Start 0001               __end_of_vfpfcnvrt 36EC                      efgtoa@mode 00BA  
                    efgtoa@sign 00B3                         postdec2 003FDD                         postinc0 003FEE  
                       postinc1 003FE6                         postinc2 003FDE                      ??_vfprintf 00EB  
         __CFG_WDTCPS$WDTCPS_31 000000                         strcpy@d 0068                         strlen@a 0062  
                       strcpy@s 0066                         strlen@s 0060                     ___fladd@grs 006F  
                 ___xxtofl@sign 000A                       _TRISAbits 003FC2                       _TRISBbits 003FC3  
                     _TRISCbits 003FC4            USART1_SendString@str 0064               __size_of_I2C_Init 006C  
                   ___fldiv@grs 0073                     ___fldiv@rem 006C                      _rx_counter 0053  
             __size_of_ADC_Init 0022                       i2___flmul 2FA4                __CFG_FEXTOSC$OFF 000000  
                   ___flmul@grs 006E            __end_of_UART1_RX_ISR 523A            __end_of_UART1_TX_ISR 52A0  
         __end_of_USART_handler 4256                 _USART1_SendByte 5208                  __end_of___flge 457A  
                __end_of___fleq 4B02                     vfpfcnvrt@ap 00D5                     vfpfcnvrt@ct 00E1  
                   vfpfcnvrt@fp 00D1                  __end_of___wmul 51C6                   __pidataCOMRAM 52A0  
                __end_of_efgtoa 2BF0                  __end_of_floorf 3EE0                      floorf@F524 0037  
                __end_of_memset 512A                     _DEFAULT_ISR 52A4                  __end_of_strcpy 4E50  
                __end_of_strlen 5196             start_initialization 4F68               ADC_ISR@adc_result 002B  
                   __end_of_pad 47CE                      ?i2___flmul 0010           _USART1_ReceiveCommand 3EE0  
                    ivt0x8_base 0008                     _I2C_handler 4FB4           __end_of___fpclassifyf 44A8  
                   ??_ADC_Start 0001            USART1_Init@baud_rate 0062                __CFG_LPBOREN$OFF 000000  
                   vfprintf@fmt 00E7                        ??___flge 0081                        ??___fleq 0068  
                      ??___wmul 0064                        ??_efgtoa 0094                        ??_floorf 007D  
          _COMMAND_WRITE_NUMBER 004B          __size_of_GetStringSize 003E                        ?_ADC_ISR 0001  
                      ??_memset 0065                 _AD5272_COMMANDS 0054                      memset@size 0063  
                      ??_strcpy 0064                        ??_strlen 0062                       ___fladd@a 0064  
                     ___fladd@b 0060                       ___fldiv@a 0064                       ___fldiv@b 0060  
                     ___flmul@a 0064                       ___flmul@b 0060                     __pbssCOMRAM 002D  
                     ___flsub@a 007D                       ___flsub@b 0079                   __pcstackBANK0 0060  
                 __pcstackBANK1 019A               __size_of___xxtofl 0164       USART1_SendString@attempts 006A  
       __end_of_USART1_SendByte 5222                   ?_I2C_Transmit 0060                     _efgtoa$1660 00A7  
                   _efgtoa$1654 00A1                     _efgtoa$1648 009D                     _efgtoa$1649 009F  
                   _efgtoa$1658 00A3                     _efgtoa$1659 00A5                        ?___fladd 0060  
                      ?___fldiv 0060                        ?___awdiv 0060                        ?___flneg 0060  
                      ?___awmod 0060                        ?___flmul 0060                        ?___flsub 0079  
                      ?___fltol 0060                        _I2C1ADB1 003D6E                        _I2C1CON0 003D73  
                      _I2C1CON1 003D74                        _I2C1CON2 003D75             main@receive_command 00F7  
             __size_of_vfprintf 006E          __CFG_BBSIZE$BBSIZE_512 000000                     __smallconst 2000  
                      _I2C_Init 4D7A                        _ADC_Init 51C6                        ?_isupper 0060  
        ?_USART1_ReceiveCommand 0001           __size_of_UART1_RX_ISR 0016           __size_of_UART1_TX_ISR 000C  
                      ?_sprintf 00ED                        ?_tolower 0066                     ??i2___flmul 0018  
                __size_of_fputc 00B0                  __size_of_fputs 0042                        ?_strncmp 0060  
                __size_of_putch 0002                   _GetStringSize 5040                      _I2C1SDAPPS 003AE2  
                    _I2C1SCLPPS 003AE1                  ___wmul@product 0064                        _LATAbits 003FBA  
                      _LATBbits 003FBB                  ??_I2C_Transmit 0064                        _IPR1bits 003981  
                      _IPR2bits 003982                        _IPR3bits 003983                        _PIE1bits 003991  
                      _PIE2bits 003992                        _PIE3bits 003993             __CFG_BORV$VBOR_2P85 000000  
                 _I2C1STAT0bits 003D77                        _PIR1bits 0039A1                        _PIR2bits 0039A2  
                      _PIR3bits 0039A3                        i2u607_40 4366                        i2u623_40 3278  
                      i2u618_40 3030                        i2u627_40 32E4                        i2u619_40 31E4  
                      i2u619_45 31DA                        i2u628_40 3302                   ??_timer0_init 0060  
                     _vfpfcnvrt 3356                       _rx_buffer 0100                __size_of_ADC_ISR 0082  
                    _ADCON0bits 003EF8               ___wmul@multiplier 0060                    _UART1_RX_ISR 5224  
                  _UART1_TX_ISR 5294                       _tx_buffer 017A                   ??_USART1_Init 0060  
                    _I2C_RX_ISR 5254                      _I2C_TX_ISR 523C                      vfpfcnvrt@c 00E4  
                    vfpfcnvrt@f 00DD                     _INTCON0bits 003FD2                  ?_GetStringSize 0060  
                 I2C_Transmit@i 006B                ?_USART1_SendByte 0001        __size_of_I2C_GENERAL_ISR 0014  
                      __Hparam0 0000                        __Lparam0 0000                      vfprintf@ap 00E9  
                    vfprintf@fp 00E5                __size_of___fladd 034A                __size_of___fldiv 02AE  
              __size_of___awdiv 008A                __size_of___flneg 0038                __size_of___awmod 0076  
              __size_of___flmul 03B4                __size_of___flsub 0060                __size_of___fltol 00CC  
                    ?_vfpfcnvrt 00D1                      _ANSELAbits 003A40                      _ANSELBbits 003A50  
                    _ANSELCbits 003A60              ___fpclassifyf@F463 003B             __end_of_timer0_init 5208  
                  ?_DEFAULT_ISR 0001                      sprintf@fmt 00EF                        ___xxtofl 4256  
                    _T0CON0bits 003FB8                      _COMMAND_WR 0051                    _I2C1CON0bits 003D73  
                      __pivt0x8 0008                        __ptext10 4DE6                        __ptext11 4716  
                      __ptext20 36EC                        __ptext12 5160                        __ptext21 50BA  
                      __ptext13 4FFE                        __ptext30 5208                        __ptext22 2BF0  
                      __ptext14 4882                        __ptext31 4FB4                        __ptext23 44A8  
                      __ptext15 52A2                        __ptext40 5280                        __ptext32 49D4  
                      __ptext24 4A76                        __ptext16 3CE4                        __ptext41 5294  
                      __ptext33 5040                        __ptext25 3A36                        __ptext17 43BA  
                      __ptext42 5224                        __ptext34 3EE0                        __ptext26 4C96  
                      __ptext18 464A                        __ptext43 4C14                        __ptext35 5196  
                      __ptext27 4B02                        __ptext19 4EB2                        __ptext44 2FA4  
                      __ptext36 4B8C                        __ptext28 50F2                        __ptext45 4256  
                      __ptext37 4D7A                        __ptext29 4932                        __ptext46 523C  
                      __ptext38 51C6                        __ptext47 5254                        __ptext39 5080  
                      __ptext48 526C                        __ptext49 52A4                __size_of_isupper 0036  
                    _U1CON1bits 003DF3                    ?_I2C_handler 006C                __size_of_sprintf 0062  
              __size_of_tolower 0056                      strcpy@dest 0060                __size_of_strncmp 00D0  
           __end_of_USART1_Init 4C12                   __size_of_main 00B4            __CFG_WDTCWS$WDTCWS_7 000000  
                      efgtoa@fp 008D                        efgtoa@ne 00AF                        efgtoa@pp 00AB  
                      efgtoa@ou 0099             I2C_Transmit@address 0063                      _ODCONBbits 003A52  
                      _vfprintf 4D0C                     _OSCSTATbits 0039DC            __end_of_I2C_Transmit 4A76  
                _vfpfcnvrt$1677 00DB          __size_of_USART_handler 01A4                 ??_GetStringSize 0062  
                   ?_I2C_RX_ISR 0001                     ?_I2C_TX_ISR 0001                        memset@st 0060  
                      intlevel2 0000                       sprintf@ap 019C               __CFG_CLKOUTEN$OFF 000000  
                   _SLRCONBbits 003A53                       strcpy@src 0062                     _PPSLOCKbits 003ABF  
                      isupper@c 0060                       strncmp@_l 0060                       strncmp@_r 0062  
             ??_I2C_GENERAL_ISR 0060                     efgtoa@nmode 00B7              I2C_Transmit@buffer 0060  
                   _timer0_init 51E8                      _TIMER0_ISR 5080                     ??_vfpfcnvrt 00D7  
                      sprintf@f 019E                        tolower@c 0066                        sprintf@s 00ED  
       ??_USART1_ReceiveCommand 0066          __size_of___fpclassifyf 00EE                        strncmp@l 0067  
                      strncmp@n 0064                        strncmp@r 0069                     _USART1_Init 4B8C  
                 ___fladd@signs 006C                    ___fladd@aexp 006D                    ___fladd@bexp 006E  
                 _USART_handler 40B2  
