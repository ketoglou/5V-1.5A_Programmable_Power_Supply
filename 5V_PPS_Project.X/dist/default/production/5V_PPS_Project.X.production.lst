

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 29 19:39:36 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=4,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=4,class=CODE,delta=1
    50                           	psect	text38,global,reloc=4,class=CODE,delta=1
    51                           	psect	text39,global,reloc=4,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text42,global,reloc=4,class=CODE,delta=1
    55                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    58  0000                     
    59                           ; Version 2.05
    60                           ; Generated 20/12/2018 GMT
    61                           ; 
    62                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F27K42 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     _PIE1bits	set	14737
    94  0000                     _IPR1bits	set	14721
    95  0000                     _WDTCON0	set	14683
    96  0000                     _WDTCON1	set	14684
    97  0000                     _OSCSTATbits	set	14812
    98  0000                     _OSCEN	set	14813
    99  0000                     _OSCTUNE	set	14814
   100  0000                     _OSCFRQ	set	14815
   101  0000                     _PIR1bits	set	14753
   102  0000                     _PIR3bits	set	14755
   103  0000                     _PIR3	set	14755
   104  0000                     _IPR3bits	set	14723
   105  0000                     _PIE3bits	set	14739
   106  0000                     _ANSELBbits	set	14928
   107  0000                     _ANSELAbits	set	14912
   108  0000                     _PPSLOCKbits	set	15039
   109  0000                     _RC7PPS	set	14871
   110  0000                     _U1RXPPS	set	15077
   111  0000                     _ANSELCbits	set	14944
   112  0000                     _U1RXB	set	15848
   113  0000                     _U1TXB	set	15850
   114  0000                     _U1CON1bits	set	15859
   115  0000                     _U1UIR	set	15864
   116  0000                     _U1ERRIE	set	15866
   117  0000                     _U2CON2	set	15836
   118  0000                     _U1CON1	set	15859
   119  0000                     _U1CON0	set	15858
   120  0000                     _U1BRGL	set	15861
   121  0000                     _U1BRGH	set	15862
   122  0000                     _ADCON0bits	set	16120
   123  0000                     _ADPCH	set	16113
   124  0000                     _ADREF	set	16125
   125  0000                     _ADCON2	set	16122
   126  0000                     _ADCON1	set	16121
   127  0000                     _ADCON0	set	16120
   128  0000                     _ADRESH	set	16112
   129  0000                     _ADRESL	set	16111
   130  0000                     _TRISBbits	set	16323
   131  0000                     _T0CON1	set	16313
   132  0000                     _T0CON0	set	16312
   133  0000                     _TRISAbits	set	16322
   134  0000                     _INTCON0bits	set	16338
   135  0000                     _IVTLOCK	set	16340
   136  0000                     _TMR0H	set	16311
   137  0000                     _TMR0L	set	16310
   138  0000                     _LATAbits	set	16314
   139  0000                     _T0CON0bits	set	16312
   140  0000                     _TRISCbits	set	16324
   141                           
   142                           	psect	smallconst
   143  002000                     __psmallconst:
   144                           	opt callstack 0
   145  002000  00                 	db	0
   146  002001                     STR_2:
   147  002001  43                 	db	67	;'C'
   148  002002  6F                 	db	111	;'o'
   149  002003  6D                 	db	109	;'m'
   150  002004  6D                 	db	109	;'m'
   151  002005  61                 	db	97	;'a'
   152  002006  6E                 	db	110	;'n'
   153  002007  64                 	db	100	;'d'
   154  002008  20                 	db	32
   155  002009  6E                 	db	110	;'n'
   156  00200A  6F                 	db	111	;'o'
   157  00200B  74                 	db	116	;'t'
   158  00200C  20                 	db	32
   159  00200D  72                 	db	114	;'r'
   160  00200E  65                 	db	101	;'e'
   161  00200F  63                 	db	99	;'c'
   162  002010  6F                 	db	111	;'o'
   163  002011  67                 	db	103	;'g'
   164  002012  6E                 	db	110	;'n'
   165  002013  69                 	db	105	;'i'
   166  002014  7A                 	db	122	;'z'
   167  002015  65                 	db	101	;'e'
   168  002016  64                 	db	100	;'d'
   169  002017  21                 	db	33
   170  002018  00                 	db	0
   171  002019                     STR_1:
   172  002019  56                 	db	86	;'V'
   173  00201A  6F                 	db	111	;'o'
   174  00201B  6C                 	db	108	;'l'
   175  00201C  74                 	db	116	;'t'
   176  00201D  61                 	db	97	;'a'
   177  00201E  67                 	db	103	;'g'
   178  00201F  65                 	db	101	;'e'
   179  002020  3A                 	db	58	;':'
   180  002021  25                 	db	37
   181  002022  66                 	db	102	;'f'
   182  002023  00                 	db	0
   183  002024                     STR_3:
   184  002024  49                 	db	73	;'I'
   185  002025  4E                 	db	78	;'N'
   186  002026  46                 	db	70	;'F'
   187  002027  00                 	db	0
   188  002028                     STR_7:
   189  002028  4E                 	db	78	;'N'
   190  002029  41                 	db	65	;'A'
   191  00202A  4E                 	db	78	;'N'
   192  00202B  00                 	db	0
   193  00202C                     STR_4:
   194  00202C  69                 	db	105	;'i'
   195  00202D  6E                 	db	110	;'n'
   196  00202E  66                 	db	102	;'f'
   197  00202F  00                 	db	0
   198  002030                     STR_8:
   199  002030  6E                 	db	110	;'n'
   200  002031  61                 	db	97	;'a'
   201  002032  6E                 	db	110	;'n'
   202  002033  00                 	db	0
   203  002034                     STR_11:
   204  002034  6C                 	db	108	;'l'
   205  002035  66                 	db	102	;'f'
   206  002036  00                 	db	0
   207  0000                     
   208                           ; #config settings
   209  002037  00                 	db	0	; dummy byte at the end
   210  0000                     
   211                           	psect	cinit
   212  004D3C                     __pcinit:
   213                           	opt callstack 0
   214  004D3C                     start_initialization:
   215                           	opt callstack 0
   216  004D3C                     __initialization:
   217                           	opt callstack 0
   218                           
   219                           ; Clear objects allocated to BANK1 (144 bytes)
   220  004D3C  EE00  F100         	lfsr	0,__pbssBANK1
   221  004D40  0E90               	movlw	144
   222  004D42                     clear_0:
   223  004D42  6AEE               	clrf	postinc0,c
   224  004D44  06E8               	decf	wreg,f,c
   225  004D46  E1FD               	bnz	clear_0
   226                           
   227                           ; Clear objects allocated to COMRAM (23 bytes)
   228  004D48  EE00  F02D         	lfsr	0,__pbssCOMRAM
   229  004D4C  0E17               	movlw	23
   230  004D4E                     clear_1:
   231  004D4E  6AEE               	clrf	postinc0,c
   232  004D50  06E8               	decf	wreg,f,c
   233  004D52  E1FD               	bnz	clear_1
   234                           
   235                           ;
   236                           ; Setup IVTBASE
   237                           ;
   238  004D54  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   239  004D56  6ED5               	movwf	213,c
   240  004D58  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   241  004D5A  6ED6               	movwf	214,c
   242  004D5C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   243  004D5E  6ED7               	movwf	215,c
   244  004D60                     end_of_initialization:
   245                           	opt callstack 0
   246  004D60                     __end_of__initialization:
   247                           	opt callstack 0
   248  004D60  0100               	movlb	0
   249  004D62  EF7F  F025         	goto	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMRAM
   252  00002D                     __pbssCOMRAM:
   253                           	opt callstack 0
   254  00002D                     floorf@F524:
   255                           	opt callstack 0
   256  00002D                     	ds	4
   257  000031                     ___fpclassifyf@F463:
   258                           	opt callstack 0
   259  000031                     	ds	4
   260  000035                     _ADC_VOLTAGE_RESULT:
   261                           	opt callstack 0
   262  000035                     	ds	4
   263  000039                     _nout:
   264                           	opt callstack 0
   265  000039                     	ds	2
   266  00003B                     _width:
   267                           	opt callstack 0
   268  00003B                     	ds	2
   269  00003D                     _prec:
   270                           	opt callstack 0
   271  00003D                     	ds	2
   272  00003F                     _flags:
   273                           	opt callstack 0
   274  00003F                     	ds	2
   275  000041                     _counter_timer0:
   276                           	opt callstack 0
   277  000041                     	ds	1
   278  000042                     _tx_byte:
   279                           	opt callstack 0
   280  000042                     	ds	1
   281  000043                     _rx_counter:
   282                           	opt callstack 0
   283  000043                     	ds	1
   284                           
   285                           	psect	bssBANK1
   286  000100                     __pbssBANK1:
   287                           	opt callstack 0
   288  000100                     _rx_buffer:
   289                           	opt callstack 0
   290  000100                     	ds	32
   291  000120                     _dbuf:
   292                           	opt callstack 0
   293  000120                     	ds	80
   294  000170                     _tx_buffer:
   295                           	opt callstack 0
   296  000170                     	ds	32
   297                           
   298                           	psect	cstackBANK1
   299  000190                     __pcstackBANK1:
   300                           	opt callstack 0
   301  000190                     ??_USART_handler:
   302                           
   303                           ; 1 bytes @ 0x0
   304  000190                     	ds	2
   305  000192                     main@command:
   306                           	opt callstack 0
   307                           
   308                           ; 1 bytes @ 0x2
   309  000192                     	ds	1
   310                           
   311                           	psect	cstackBANK0
   312  000060                     __pcstackBANK0:
   313                           	opt callstack 0
   314  000060                     ??_USART1_Init:
   315  000060                     ?_GetStringSize:
   316                           	opt callstack 0
   317  000060                     ?_strlen:
   318                           	opt callstack 0
   319  000060                     ?___fpclassifyf:
   320                           	opt callstack 0
   321  000060                     ?_isupper:
   322                           	opt callstack 0
   323  000060                     ?_strncmp:
   324                           	opt callstack 0
   325  000060                     ?___awdiv:
   326                           	opt callstack 0
   327  000060                     ?___awmod:
   328                           	opt callstack 0
   329  000060                     ?___fladd:
   330                           	opt callstack 0
   331  000060                     ?___fldiv:
   332                           	opt callstack 0
   333  000060                     ?___flmul:
   334                           	opt callstack 0
   335  000060                     ?___flneg:
   336                           	opt callstack 0
   337  000060                     ?___fltol:
   338                           	opt callstack 0
   339  000060                     USART1_SendByte@byte:
   340                           	opt callstack 0
   341  000060                     USART1_ReceiveCommand@temp:
   342                           	opt callstack 0
   343  000060                     memset@st:
   344                           	opt callstack 0
   345  000060                     ___awdiv@dividend:
   346                           	opt callstack 0
   347  000060                     ___awmod@dividend:
   348                           	opt callstack 0
   349  000060                     isupper@c:
   350                           	opt callstack 0
   351  000060                     fputc@c:
   352                           	opt callstack 0
   353  000060                     strcpy@dest:
   354                           	opt callstack 0
   355  000060                     strlen@s:
   356                           	opt callstack 0
   357  000060                     strncmp@_l:
   358                           	opt callstack 0
   359  000060                     ___fleq@ff1:
   360                           	opt callstack 0
   361  000060                     ___flneg@f1:
   362                           	opt callstack 0
   363  000060                     ___fltol@f1:
   364                           	opt callstack 0
   365  000060                     ___fladd@b:
   366                           	opt callstack 0
   367  000060                     ___fldiv@b:
   368                           	opt callstack 0
   369  000060                     ___flmul@b:
   370                           	opt callstack 0
   371  000060                     ___fpclassifyf@x:
   372                           	opt callstack 0
   373                           
   374                           ; 4 bytes @ 0x0
   375  000060                     	ds	2
   376  000062                     ??_isupper:
   377  000062                     USART1_Init@baud_rate:
   378                           	opt callstack 0
   379  000062                     memset@x:
   380                           	opt callstack 0
   381  000062                     GetStringSize@i:
   382                           	opt callstack 0
   383  000062                     ___awdiv@divisor:
   384                           	opt callstack 0
   385  000062                     ___awmod@divisor:
   386                           	opt callstack 0
   387  000062                     fputc@fp:
   388                           	opt callstack 0
   389  000062                     strcpy@src:
   390                           	opt callstack 0
   391  000062                     strlen@a:
   392                           	opt callstack 0
   393  000062                     strncmp@_r:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x2
   397  000062                     	ds	1
   398  000063                     memset@size:
   399                           	opt callstack 0
   400                           
   401                           ; 2 bytes @ 0x3
   402  000063                     	ds	1
   403  000064                     ??_fputc:
   404  000064                     ??___fpclassifyf:
   405  000064                     ??_strcpy:
   406  000064                     ??___fltol:
   407  000064                     ___awdiv@counter:
   408                           	opt callstack 0
   409  000064                     ___awmod@counter:
   410                           	opt callstack 0
   411  000064                     USART1_SendString@str:
   412                           	opt callstack 0
   413  000064                     strncmp@n:
   414                           	opt callstack 0
   415  000064                     ___fleq@ff2:
   416                           	opt callstack 0
   417  000064                     ___fladd@a:
   418                           	opt callstack 0
   419  000064                     ___fldiv@a:
   420                           	opt callstack 0
   421  000064                     ___flmul@a:
   422                           	opt callstack 0
   423                           
   424                           ; 4 bytes @ 0x4
   425  000064                     	ds	1
   426  000065                     ??_memset:
   427  000065                     ___awdiv@sign:
   428                           	opt callstack 0
   429  000065                     ___awmod@sign:
   430                           	opt callstack 0
   431                           
   432                           ; 1 bytes @ 0x5
   433  000065                     	ds	1
   434  000066                     ??_strncmp:
   435  000066                     ?_tolower:
   436                           	opt callstack 0
   437  000066                     USART1_SendString@size:
   438                           	opt callstack 0
   439  000066                     memset@i:
   440                           	opt callstack 0
   441  000066                     ___awdiv@quotient:
   442                           	opt callstack 0
   443  000066                     strcpy@s:
   444                           	opt callstack 0
   445  000066                     tolower@c:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x6
   449  000066                     	ds	1
   450  000067                     strncmp@l:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x7
   454  000067                     	ds	1
   455  000068                     ??_tolower:
   456  000068                     ??___fladd:
   457  000068                     ??___fldiv:
   458  000068                     ??___flmul:
   459  000068                     ??_USART1_SendString:
   460  000068                     ??___fleq:
   461  000068                     ___fltol@sign1:
   462                           	opt callstack 0
   463  000068                     ___fpclassifyf@e:
   464                           	opt callstack 0
   465  000068                     strcpy@d:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x8
   469  000068                     	ds	1
   470  000069                     ___fltol@exp1:
   471                           	opt callstack 0
   472  000069                     fputs@s:
   473                           	opt callstack 0
   474  000069                     strncmp@r:
   475                           	opt callstack 0
   476                           
   477                           ; 2 bytes @ 0x9
   478  000069                     	ds	1
   479  00006A                     USART1_SendString@i:
   480                           	opt callstack 0
   481  00006A                     ___fpclassifyf@u:
   482                           	opt callstack 0
   483                           
   484                           ; 4 bytes @ 0xA
   485  00006A                     	ds	1
   486  00006B                     fputs@fp:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0xB
   490  00006B                     	ds	1
   491  00006C                     ___fladd@signs:
   492                           	opt callstack 0
   493  00006C                     ___flmul@sign:
   494                           	opt callstack 0
   495  00006C                     USART1_SendString@attempts:
   496                           	opt callstack 0
   497  00006C                     _tolower$1608:
   498                           	opt callstack 0
   499  00006C                     ___fldiv@rem:
   500                           	opt callstack 0
   501                           
   502                           ; 4 bytes @ 0xC
   503  00006C                     	ds	1
   504  00006D                     ___fladd@aexp:
   505                           	opt callstack 0
   506  00006D                     ___flmul@aexp:
   507                           	opt callstack 0
   508  00006D                     fputs@c:
   509                           	opt callstack 0
   510                           
   511                           ; 1 bytes @ 0xD
   512  00006D                     	ds	1
   513  00006E                     ___fladd@bexp:
   514                           	opt callstack 0
   515  00006E                     fputs@i:
   516                           	opt callstack 0
   517  00006E                     ___flmul@grs:
   518                           	opt callstack 0
   519                           
   520                           ; 4 bytes @ 0xE
   521  00006E                     	ds	1
   522  00006F                     ___fladd@grs:
   523                           	opt callstack 0
   524                           
   525                           ; 1 bytes @ 0xF
   526  00006F                     	ds	1
   527  000070                     ?_pad:
   528                           	opt callstack 0
   529  000070                     ___fldiv@sign:
   530                           	opt callstack 0
   531  000070                     pad@fp:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x10
   535  000070                     	ds	1
   536  000071                     ___fldiv@new_exp:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x11
   540  000071                     	ds	1
   541  000072                     ___flmul@bexp:
   542                           	opt callstack 0
   543  000072                     pad@buf:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x12
   547  000072                     	ds	1
   548  000073                     ___fldiv@grs:
   549                           	opt callstack 0
   550  000073                     ___flmul@prod:
   551                           	opt callstack 0
   552                           
   553                           ; 4 bytes @ 0x13
   554  000073                     	ds	1
   555  000074                     pad@p:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x14
   559  000074                     	ds	2
   560  000076                     ??_pad:
   561                           
   562                           ; 1 bytes @ 0x16
   563  000076                     	ds	1
   564  000077                     ___fldiv@bexp:
   565                           	opt callstack 0
   566  000077                     pad@i:
   567                           	opt callstack 0
   568  000077                     ___flmul@temp:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x17
   572  000077                     	ds	1
   573  000078                     ___fldiv@aexp:
   574                           	opt callstack 0
   575                           
   576                           ; 1 bytes @ 0x18
   577  000078                     	ds	1
   578  000079                     ?_floorf:
   579                           	opt callstack 0
   580  000079                     ?___flsub:
   581                           	opt callstack 0
   582  000079                     pad@w:
   583                           	opt callstack 0
   584  000079                     ___flge@ff1:
   585                           	opt callstack 0
   586  000079                     ___flsub@b:
   587                           	opt callstack 0
   588  000079                     floorf@x:
   589                           	opt callstack 0
   590                           
   591                           ; 4 bytes @ 0x19
   592  000079                     	ds	4
   593  00007D                     ??_floorf:
   594  00007D                     ___flge@ff2:
   595                           	opt callstack 0
   596  00007D                     ___flsub@a:
   597                           	opt callstack 0
   598                           
   599                           ; 4 bytes @ 0x1D
   600  00007D                     	ds	4
   601  000081                     ??___flge:
   602                           
   603                           ; 1 bytes @ 0x21
   604  000081                     	ds	2
   605  000083                     floorf@m:
   606                           	opt callstack 0
   607                           
   608                           ; 4 bytes @ 0x23
   609  000083                     	ds	4
   610  000087                     floorf@e:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x27
   614  000087                     	ds	2
   615  000089                     floorf@u:
   616                           	opt callstack 0
   617                           
   618                           ; 4 bytes @ 0x29
   619  000089                     	ds	4
   620  00008D                     ?_efgtoa:
   621                           	opt callstack 0
   622  00008D                     efgtoa@fp:
   623                           	opt callstack 0
   624                           
   625                           ; 2 bytes @ 0x2D
   626  00008D                     	ds	2
   627  00008F                     efgtoa@f:
   628                           	opt callstack 0
   629                           
   630                           ; 4 bytes @ 0x2F
   631  00008F                     	ds	4
   632  000093                     efgtoa@c:
   633                           	opt callstack 0
   634                           
   635                           ; 1 bytes @ 0x33
   636  000093                     	ds	1
   637  000094                     ??_efgtoa:
   638                           
   639                           ; 1 bytes @ 0x34
   640  000094                     	ds	5
   641  000099                     efgtoa@ou:
   642                           	opt callstack 0
   643                           
   644                           ; 4 bytes @ 0x39
   645  000099                     	ds	4
   646  00009D                     _efgtoa$1024:
   647                           	opt callstack 0
   648                           
   649                           ; 2 bytes @ 0x3D
   650  00009D                     	ds	2
   651  00009F                     _efgtoa$1025:
   652                           	opt callstack 0
   653                           
   654                           ; 2 bytes @ 0x3F
   655  00009F                     	ds	2
   656  0000A1                     _efgtoa$1030:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0x41
   660  0000A1                     	ds	2
   661  0000A3                     _efgtoa$1034:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0x43
   665  0000A3                     	ds	2
   666  0000A5                     _efgtoa$1035:
   667                           	opt callstack 0
   668                           
   669                           ; 2 bytes @ 0x45
   670  0000A5                     	ds	2
   671  0000A7                     _efgtoa$1036:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x47
   675  0000A7                     	ds	2
   676  0000A9                     efgtoa@t:
   677                           	opt callstack 0
   678                           
   679                           ; 2 bytes @ 0x49
   680  0000A9                     	ds	2
   681  0000AB                     efgtoa@pp:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x4B
   685  0000AB                     	ds	2
   686  0000AD                     efgtoa@m:
   687                           	opt callstack 0
   688                           
   689                           ; 2 bytes @ 0x4D
   690  0000AD                     	ds	2
   691  0000AF                     efgtoa@ne:
   692                           	opt callstack 0
   693                           
   694                           ; 2 bytes @ 0x4F
   695  0000AF                     	ds	2
   696  0000B1                     efgtoa@d:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x51
   700  0000B1                     	ds	2
   701  0000B3                     efgtoa@sign:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x53
   705  0000B3                     	ds	2
   706  0000B5                     efgtoa@p:
   707                           	opt callstack 0
   708                           
   709                           ; 2 bytes @ 0x55
   710  0000B5                     	ds	2
   711  0000B7                     efgtoa@nmode:
   712                           	opt callstack 0
   713                           
   714                           ; 1 bytes @ 0x57
   715  0000B7                     	ds	1
   716  0000B8                     efgtoa@w:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0x58
   720  0000B8                     	ds	2
   721  0000BA                     efgtoa@mode:
   722                           	opt callstack 0
   723                           
   724                           ; 1 bytes @ 0x5A
   725  0000BA                     	ds	1
   726  0000BB                     efgtoa@h:
   727                           	opt callstack 0
   728                           
   729                           ; 4 bytes @ 0x5B
   730  0000BB                     	ds	4
   731  0000BF                     efgtoa@l:
   732                           	opt callstack 0
   733                           
   734                           ; 4 bytes @ 0x5F
   735  0000BF                     	ds	4
   736  0000C3                     efgtoa@i:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x63
   740  0000C3                     	ds	2
   741  0000C5                     efgtoa@g:
   742                           	opt callstack 0
   743                           
   744                           ; 4 bytes @ 0x65
   745  0000C5                     	ds	4
   746  0000C9                     efgtoa@e:
   747                           	opt callstack 0
   748                           
   749                           ; 2 bytes @ 0x69
   750  0000C9                     	ds	2
   751  0000CB                     efgtoa@n:
   752                           	opt callstack 0
   753                           
   754                           ; 2 bytes @ 0x6B
   755  0000CB                     	ds	2
   756  0000CD                     efgtoa@u:
   757                           	opt callstack 0
   758                           
   759                           ; 4 bytes @ 0x6D
   760  0000CD                     	ds	4
   761  0000D1                     ?_vfpfcnvrt:
   762                           	opt callstack 0
   763  0000D1                     vfpfcnvrt@fp:
   764                           	opt callstack 0
   765                           
   766                           ; 2 bytes @ 0x71
   767  0000D1                     	ds	2
   768  0000D3                     vfpfcnvrt@fmt:
   769                           	opt callstack 0
   770                           
   771                           ; 2 bytes @ 0x73
   772  0000D3                     	ds	2
   773  0000D5                     vfpfcnvrt@ap:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0x75
   777  0000D5                     	ds	2
   778  0000D7                     ??_vfpfcnvrt:
   779                           
   780                           ; 1 bytes @ 0x77
   781  0000D7                     	ds	4
   782  0000DB                     _vfpfcnvrt$1053:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x7B
   786  0000DB                     	ds	2
   787  0000DD                     vfpfcnvrt@f:
   788                           	opt callstack 0
   789                           
   790                           ; 4 bytes @ 0x7D
   791  0000DD                     	ds	4
   792  0000E1                     vfpfcnvrt@ct:
   793                           	opt callstack 0
   794                           
   795                           ; 3 bytes @ 0x81
   796  0000E1                     	ds	3
   797  0000E4                     vfpfcnvrt@c:
   798                           	opt callstack 0
   799                           
   800                           ; 1 bytes @ 0x84
   801  0000E4                     	ds	1
   802  0000E5                     ?_vfprintf:
   803                           	opt callstack 0
   804  0000E5                     vfprintf@fp:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x85
   808  0000E5                     	ds	2
   809  0000E7                     vfprintf@fmt:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0x87
   813  0000E7                     	ds	2
   814  0000E9                     vfprintf@ap:
   815                           	opt callstack 0
   816                           
   817                           ; 2 bytes @ 0x89
   818  0000E9                     	ds	2
   819  0000EB                     vfprintf@cfmt:
   820                           	opt callstack 0
   821                           
   822                           ; 2 bytes @ 0x8B
   823  0000EB                     	ds	2
   824  0000ED                     ?_sprintf:
   825                           	opt callstack 0
   826  0000ED                     sprintf@s:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x8D
   830  0000ED                     	ds	2
   831  0000EF                     sprintf@fmt:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x8F
   835  0000EF                     	ds	6
   836  0000F5                     
   837                           ; 1 bytes @ 0x95
   838  0000F5                     	ds	2
   839  0000F7                     sprintf@ap:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x97
   843  0000F7                     	ds	2
   844  0000F9                     sprintf@f:
   845                           	opt callstack 0
   846                           
   847                           ; 6 bytes @ 0x99
   848  0000F9                     	ds	6
   849  0000FF                     USART_handler@command:
   850                           	opt callstack 0
   851                           
   852                           ; 1 bytes @ 0x9F
   853  0000FF                     	ds	1
   854  000100                     
   855                           ; 1 bytes @ 0xA0
   856                           
   857                           	psect	cstackCOMRAM
   858  000001                     __pcstackCOMRAM:
   859                           	opt callstack 0
   860  000001                     ADC_Start@pin:
   861                           	opt callstack 0
   862  000001                     
   863                           ; 1 bytes @ 0x0
   864  000001                     	ds	1
   865  000002                     ?___xxtofl:
   866                           	opt callstack 0
   867  000002                     ___xxtofl@val:
   868                           	opt callstack 0
   869                           
   870                           ; 4 bytes @ 0x1
   871  000002                     	ds	4
   872  000006                     ??___xxtofl:
   873                           
   874                           ; 1 bytes @ 0x5
   875  000006                     	ds	4
   876  00000A                     ___xxtofl@sign:
   877                           	opt callstack 0
   878                           
   879                           ; 1 bytes @ 0x9
   880  00000A                     	ds	1
   881  00000B                     ___xxtofl@exp:
   882                           	opt callstack 0
   883                           
   884                           ; 1 bytes @ 0xA
   885  00000B                     	ds	1
   886  00000C                     ___xxtofl@arg:
   887                           	opt callstack 0
   888                           
   889                           ; 4 bytes @ 0xB
   890  00000C                     	ds	4
   891  000010                     ?i2___flmul:
   892                           	opt callstack 0
   893  000010                     i2___flmul@b:
   894                           	opt callstack 0
   895                           
   896                           ; 4 bytes @ 0xF
   897  000010                     	ds	4
   898  000014                     i2___flmul@a:
   899                           	opt callstack 0
   900                           
   901                           ; 4 bytes @ 0x13
   902  000014                     	ds	4
   903  000018                     ??i2___flmul:
   904                           
   905                           ; 1 bytes @ 0x17
   906  000018                     	ds	4
   907  00001C                     i2___flmul@sign:
   908                           	opt callstack 0
   909                           
   910                           ; 1 bytes @ 0x1B
   911  00001C                     	ds	1
   912  00001D                     i2___flmul@grs:
   913                           	opt callstack 0
   914                           
   915                           ; 4 bytes @ 0x1C
   916  00001D                     	ds	4
   917  000021                     i2___flmul@aexp:
   918                           	opt callstack 0
   919                           
   920                           ; 1 bytes @ 0x20
   921  000021                     	ds	1
   922  000022                     i2___flmul@bexp:
   923                           	opt callstack 0
   924                           
   925                           ; 1 bytes @ 0x21
   926  000022                     	ds	1
   927  000023                     i2___flmul@prod:
   928                           	opt callstack 0
   929                           
   930                           ; 4 bytes @ 0x22
   931  000023                     	ds	4
   932  000027                     i2___flmul@temp:
   933                           	opt callstack 0
   934                           
   935                           ; 2 bytes @ 0x26
   936  000027                     	ds	2
   937  000029                     ??_adc_isr:
   938                           
   939                           ; 1 bytes @ 0x28
   940  000029                     	ds	2
   941  00002B                     adc_isr@adc_result:
   942                           	opt callstack 0
   943                           
   944                           ; 2 bytes @ 0x2A
   945  00002B                     	ds	2
   946                           
   947 ;;
   948 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   949 ;;
   950 ;; *************** function _main *****************
   951 ;; Defined at:
   952 ;;		line 81 in file "main.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  command         1    2[BANK1 ] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   967 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   969 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   970 ;;Total ram usage:        1 bytes
   971 ;; Hardware stack levels required when called:   11
   972 ;; This function calls:
   973 ;;		_ADC_Init
   974 ;;		_USART1_Init
   975 ;;		_USART1_ReceiveCommand
   976 ;;		_USART_handler
   977 ;;		_timer0_init
   978 ;; This function is called by:
   979 ;;		Startup code after reset
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text0
   984  004AFE                     __ptext0:
   985                           	opt callstack 0
   986  004AFE                     _main:
   987                           	opt callstack 20
   988                           
   989                           ;main.c: 82:     OSCFRQ = 0x08;
   990                           
   991                           ;incstack = 0
   992  004AFE  0E08               	movlw	8
   993  004B00  0139               	movlb	57	; () banked
   994  004B02  6FDF               	movwf	223,b	;volatile
   995                           
   996                           ;main.c: 83:     OSCTUNE = 0x00;
   997  004B04  0E00               	movlw	0
   998  004B06  6FDE               	movwf	222,b	;volatile
   999                           
  1000                           ;main.c: 84:     OSCEN = 0x40;
  1001  004B08  0E40               	movlw	64
  1002  004B0A  6FDD               	movwf	221,b	;volatile
  1003  004B0C                     l225:
  1004                           
  1005                           ; BSR set to: 57
  1006  004B0C  BDDC               	btfsc	220,6,b	;volatile
  1007  004B0E  D002               	goto	u7890
  1008                           
  1009                           ; BSR set to: 57
  1010  004B10  A5DC               	btfss	220,2,b	;volatile
  1011  004B12  D7FC               	goto	l225
  1012  004B14                     u7890:
  1013                           
  1014                           ; BSR set to: 57
  1015                           ;main.c: 91:     IVTLOCK = 0x01;
  1016  004B14  0E01               	movlw	1
  1017  004B16  6ED4               	movwf	16340,c	;volatile
  1018                           
  1019                           ;main.c: 94:     WDTCON1 = 0x07;
  1020  004B18  0E07               	movlw	7
  1021  004B1A  6F5C               	movwf	92,b	;volatile
  1022                           
  1023                           ;main.c: 95:     WDTCON0 = 0x3F;
  1024  004B1C  0E3F               	movlw	63
  1025  004B1E  6F5B               	movwf	91,b	;volatile
  1026                           
  1027                           ; BSR set to: 57
  1028                           ;main.c: 98:     PPSLOCKbits.PPSLOCKED = 0;
  1029  004B20  013A               	movlb	58	; () banked
  1030  004B22  91BF               	bcf	191,0,b	;volsfr
  1031                           
  1032                           ; BSR set to: 58
  1033                           ;main.c: 101:     timer0_init();
  1034  004B24  ECC4  F026         	call	_timer0_init	;wreg free
  1035                           
  1036                           ;main.c: 102:     USART1_Init(1);
  1037  004B28  0E01               	movlw	1
  1038  004B2A  ECF6  F023         	call	_USART1_Init
  1039                           
  1040                           ;main.c: 103:     ADC_Init();
  1041  004B2E  ECB3  F026         	call	_ADC_Init	;wreg free
  1042                           
  1043                           ;main.c: 105:     INTCON0bits.GIEH = 1;
  1044  004B32  8ED2               	bsf	16338,7,c	;volatile
  1045                           
  1046                           ;main.c: 106:     INTCON0bits.GIEL = 1;
  1047  004B34  8CD2               	bsf	16338,6,c	;volatile
  1048                           
  1049                           ;main.c: 107:     INTCON0bits.IPEN = 1;
  1050  004B36  8AD2               	bsf	16338,5,c	;volatile
  1051                           
  1052                           ;main.c: 110:     TRISAbits.TRISA0 = 0;
  1053  004B38  90C2               	bcf	16322,0,c	;volatile
  1054                           
  1055                           ;main.c: 111:     ANSELAbits.ANSELA0 = 1;
  1056  004B3A  013A               	movlb	58	; () banked
  1057  004B3C  8140               	bsf	64,0,b	;volatile
  1058                           
  1059                           ; BSR set to: 58
  1060                           ;main.c: 113:     TRISAbits.TRISA1 = 0;
  1061  004B3E  92C2               	bcf	16322,1,c	;volatile
  1062                           
  1063                           ; BSR set to: 58
  1064                           ;main.c: 114:     ANSELAbits.ANSELA1 = 1;
  1065  004B40  8340               	bsf	64,1,b	;volatile
  1066                           
  1067                           ; BSR set to: 58
  1068                           ;main.c: 115:     LATAbits.LA1 = 0;
  1069  004B42  92BA               	bcf	16314,1,c	;volatile
  1070  004B44                     
  1071                           ;main.c: 120:         command = USART1_ReceiveCommand();
  1072                           
  1073                           ; BSR set to: 58
  1074  004B44  EC63  F022         	call	_USART1_ReceiveCommand	;wreg free
  1075  004B48  0101               	movlb	1	; () banked
  1076  004B4A  6F92               	movwf	main@command& (0+255),b
  1077                           
  1078                           ; BSR set to: 1
  1079                           ;main.c: 121:         USART_handler(command);
  1080  004B4C  5192               	movf	main@command& (0+255),w,b
  1081  004B4E  EC14  F023         	call	_USART_handler
  1082  004B52  D7F8               	goto	l5901
  1083  004B54                     __end_of_main:
  1084                           	opt callstack 0
  1085                           
  1086 ;; *************** function _timer0_init *****************
  1087 ;; Defined at:
  1088 ;;		line 125 in file "main.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    2
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text1
  1117  004D88                     __ptext1:
  1118                           	opt callstack 0
  1119  004D88                     _timer0_init:
  1120                           	opt callstack 28
  1121                           
  1122                           ;main.c: 126:     T0CON0 = 0x10;
  1123                           
  1124                           ;incstack = 0
  1125  004D88  0E10               	movlw	16
  1126  004D8A  6EB8               	movwf	16312,c	;volatile
  1127                           
  1128                           ;main.c: 127:     T0CON1 = 0x75;
  1129  004D8C  0E75               	movlw	117
  1130  004D8E  6EB9               	movwf	16313,c	;volatile
  1131                           
  1132                           ;main.c: 128:     TMR0L = 0xB0;
  1133  004D90  0EB0               	movlw	176
  1134  004D92  6EB6               	movwf	16310,c	;volatile
  1135                           
  1136                           ;main.c: 129:     TMR0H = 0x3C;
  1137  004D94  0E3C               	movlw	60
  1138  004D96  6EB7               	movwf	16311,c	;volatile
  1139                           
  1140                           ;main.c: 130:     counter_timer0 = 0;
  1141  004D98  0E00               	movlw	0
  1142  004D9A  6E41               	movwf	_counter_timer0,c
  1143                           
  1144                           ;main.c: 131:     IPR3bits.TMR0IP = 0;
  1145  004D9C  0139               	movlb	57	; () banked
  1146  004D9E  9F83               	bcf	131,7,b	;volatile
  1147                           
  1148                           ; BSR set to: 57
  1149                           ;main.c: 132:     PIR3bits.TMR0IF = 0;
  1150  004DA0  9FA3               	bcf	163,7,b	;volatile
  1151                           
  1152                           ; BSR set to: 57
  1153                           ;main.c: 133:     PIE3bits.TMR0IE = 1;
  1154  004DA2  8F93               	bsf	147,7,b	;volatile
  1155                           
  1156                           ; BSR set to: 57
  1157                           ;main.c: 134:     T0CON0bits.EN = 1;
  1158  004DA4  8EB8               	bsf	16312,7,c	;volatile
  1159                           
  1160                           ; BSR set to: 57
  1161  004DA6  0012               	return		;funcret
  1162  004DA8                     __end_of_timer0_init:
  1163                           	opt callstack 0
  1164                           
  1165 ;; *************** function _USART_handler *****************
  1166 ;; Defined at:
  1167 ;;		line 137 in file "main.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  command         1    wreg     unsigned char 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  command         1  159[BANK0 ] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1183 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1184 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1185 ;;Total ram usage:        3 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:   10
  1188 ;; This function calls:
  1189 ;;		_GetStringSize
  1190 ;;		_USART1_SendString
  1191 ;;		_memset
  1192 ;;		_sprintf
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text2
  1199  004628                     __ptext2:
  1200                           	opt callstack 0
  1201  004628                     _USART_handler:
  1202                           	opt callstack 20
  1203                           
  1204                           ; BSR set to: 57
  1205                           ;incstack = 0
  1206                           ;USART_handler@command stored from wreg
  1207  004628  0100               	movlb	0	; () banked
  1208  00462A  6FFF               	movwf	USART_handler@command& (0+255),b
  1209                           
  1210                           ;main.c: 139:     switch(command){
  1211  00462C  D040               	goto	l5861
  1212  00462E                     l5851:
  1213                           
  1214                           ; BSR set to: 1
  1215                           ;main.c: 143:             memset(tx_buffer,0,32);
  1216  00462E  0E70               	movlw	low _tx_buffer
  1217  004630  0100               	movlb	0	; () banked
  1218  004632  6F60               	movwf	memset@st& (0+255),b
  1219  004634  0E01               	movlw	high _tx_buffer
  1220  004636  6F61               	movwf	(memset@st+1)& (0+255),b
  1221  004638  0E00               	movlw	0
  1222  00463A  6F62               	movwf	memset@x& (0+255),b
  1223  00463C  0E00               	movlw	0
  1224  00463E  6F64               	movwf	(memset@size+1)& (0+255),b
  1225  004640  0E20               	movlw	32
  1226  004642  6F63               	movwf	memset@size& (0+255),b
  1227  004644  EC31  F026         	call	_memset	;wreg free
  1228                           
  1229                           ;main.c: 144:             sprintf(tx_buffer,"Voltage:%f",ADC_VOLTAGE_RESULT);
  1230  004648  0E70               	movlw	low _tx_buffer
  1231  00464A  0100               	movlb	0	; () banked
  1232  00464C  6FED               	movwf	sprintf@s& (0+255),b
  1233  00464E  0E01               	movlw	high _tx_buffer
  1234  004650  6FEE               	movwf	(sprintf@s+1)& (0+255),b
  1235  004652  0E19               	movlw	low STR_1
  1236  004654  6FEF               	movwf	sprintf@fmt& (0+255),b
  1237  004656  0E20               	movlw	high STR_1
  1238  004658  6FF0               	movwf	(sprintf@fmt+1)& (0+255),b
  1239  00465A  0060  F0D4  F0F1   	movff	_ADC_VOLTAGE_RESULT,?_sprintf+4
  1240  004660  0060  F0D8  F0F2   	movff	_ADC_VOLTAGE_RESULT+1,?_sprintf+5
  1241  004666  0060  F0DC  F0F3   	movff	_ADC_VOLTAGE_RESULT+2,?_sprintf+6
  1242  00466C  0060  F0E0  F0F4   	movff	_ADC_VOLTAGE_RESULT+3,?_sprintf+7
  1243  004672  EC52  F025         	call	_sprintf	;wreg free
  1244                           
  1245                           ;main.c: 145:             USART1_SendString(tx_buffer,GetStringSize());
  1246  004676  0E70               	movlw	low _tx_buffer
  1247  004678  0100               	movlb	0	; () banked
  1248  00467A  6F64               	movwf	USART1_SendString@str& (0+255),b
  1249  00467C  0E01               	movlw	high _tx_buffer
  1250  00467E  6F65               	movwf	(USART1_SendString@str+1)& (0+255),b
  1251  004680  ECF6  F025         	call	_GetStringSize	;wreg free
  1252  004684  0060  F180  F066   	movff	?_GetStringSize,USART1_SendString@size
  1253  00468A  0060  F184  F067   	movff	?_GetStringSize+1,USART1_SendString@size+1
  1254  004690  ECA2  F021         	call	_USART1_SendString	;wreg free
  1255                           
  1256                           ;main.c: 146:             break;
  1257  004694  0012               	return	
  1258  004696                     l5857:
  1259                           
  1260                           ; BSR set to: 1
  1261                           ;main.c: 150:             USART1_SendString("Command not recognized!",23);
  1262  004696  0E01               	movlw	low STR_2
  1263  004698  0100               	movlb	0	; () banked
  1264  00469A  6F64               	movwf	USART1_SendString@str& (0+255),b
  1265  00469C  0E20               	movlw	high STR_2
  1266  00469E  6F65               	movwf	(USART1_SendString@str+1)& (0+255),b
  1267  0046A0  0E00               	movlw	0
  1268  0046A2  6F67               	movwf	(USART1_SendString@size+1)& (0+255),b
  1269  0046A4  0E17               	movlw	23
  1270  0046A6  6F66               	movwf	USART1_SendString@size& (0+255),b
  1271  0046A8  ECA2  F021         	call	_USART1_SendString	;wreg free
  1272                           
  1273                           ;main.c: 151:             break;
  1274  0046AC  0012               	return	
  1275  0046AE                     l5861:
  1276  0046AE  0100               	movlb	0	; () banked
  1277  0046B0  51FF               	movf	USART_handler@command& (0+255),w,b
  1278  0046B2  0101               	movlb	1	; () banked
  1279  0046B4  6F90               	movwf	??_USART_handler& (0+255),b
  1280  0046B6  6B91               	clrf	(??_USART_handler+1)& (0+255),b
  1281                           
  1282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1283                           ; Switch size 1, requested type "simple"
  1284                           ; Number of cases is 1, Range of values is 0 to 0
  1285                           ; switch strategies available:
  1286                           ; Name         Instructions Cycles
  1287                           ; simple_byte            4     3 (average)
  1288                           ;	Chosen strategy is simple_byte
  1289  0046B8  5191               	movf	(??_USART_handler+1)& (0+255),w,b
  1290  0046BA  0A00               	xorlw	0	; case 0
  1291  0046BC  A4D8               	btfss	status,2,c
  1292  0046BE  D7EB               	goto	l5857
  1293                           
  1294                           ; BSR set to: 1
  1295                           ; Switch size 1, requested type "simple"
  1296                           ; Number of cases is 3, Range of values is 0 to 2
  1297                           ; switch strategies available:
  1298                           ; Name         Instructions Cycles
  1299                           ; simple_byte           10     6 (average)
  1300                           ;	Chosen strategy is simple_byte
  1301  0046C0  5190               	movf	??_USART_handler& (0+255),w,b
  1302  0046C2  0A00               	xorlw	0	; case 0
  1303  0046C4  B4D8               	btfsc	status,2,c
  1304  0046C6  0012               	return	
  1305  0046C8  0A01               	xorlw	1	; case 1
  1306  0046CA  B4D8               	btfsc	status,2,c
  1307  0046CC  D7B0               	goto	l5851
  1308  0046CE  0A03               	xorlw	3	; case 2
  1309  0046D0  B4D8               	btfsc	status,2,c
  1310  0046D2  0012               	return		;funcret
  1311  0046D4  D7E0               	goto	l5857
  1312  0046D6                     __end_of_USART_handler:
  1313                           	opt callstack 0
  1314                           
  1315 ;; *************** function _sprintf *****************
  1316 ;; Defined at:
  1317 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  s               2  141[BANK0 ] PTR unsigned char 
  1320 ;;		 -> tx_buffer(32), 
  1321 ;;  fmt             2  143[BANK0 ] PTR const unsigned char 
  1322 ;;		 -> STR_1(11), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  f               6  153[BANK0 ] struct _IO_FILE
  1325 ;;  ap              2  151[BANK0 ] PTR void [1]
  1326 ;;		 -> ?_sprintf(2), 
  1327 ;;  ret             2    0        int 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  2  141[BANK0 ] int 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1337 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1338 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1340 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1341 ;;Total ram usage:       18 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    9
  1344 ;; This function calls:
  1345 ;;		_vfprintf
  1346 ;; This function is called by:
  1347 ;;		_USART_handler
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text3
  1352  004AA4                     __ptext3:
  1353                           	opt callstack 0
  1354  004AA4                     _sprintf:
  1355                           	opt callstack 20
  1356                           
  1357                           ;incstack = 0
  1358  004AA4  0EF1               	movlw	low (?_sprintf+4)
  1359  004AA6  0100               	movlb	0	; () banked
  1360  004AA8  6FF7               	movwf	sprintf@ap& (0+255),b
  1361  004AAA  0E00               	movlw	high (?_sprintf+4)
  1362  004AAC  6FF8               	movwf	(sprintf@ap+1)& (0+255),b
  1363  004AAE  0060  F3B4  F0F9   	movff	sprintf@s,sprintf@f
  1364  004AB4  0060  F3B8  F0FA   	movff	sprintf@s+1,sprintf@f+1
  1365                           
  1366                           ; BSR set to: 0
  1367  004ABA  0E00               	movlw	0
  1368  004ABC  6FFC               	movwf	(sprintf@f+3)& (0+255),b
  1369  004ABE  0E00               	movlw	0
  1370  004AC0  6FFB               	movwf	(sprintf@f+2)& (0+255),b
  1371                           
  1372                           ; BSR set to: 0
  1373  004AC2  0E00               	movlw	0
  1374  004AC4  6FFE               	movwf	(sprintf@f+5)& (0+255),b
  1375  004AC6  0E00               	movlw	0
  1376  004AC8  6FFD               	movwf	(sprintf@f+4)& (0+255),b
  1377                           
  1378                           ; BSR set to: 0
  1379  004ACA  0EF9               	movlw	low sprintf@f
  1380  004ACC  6FE5               	movwf	vfprintf@fp& (0+255),b
  1381  004ACE  0E00               	movlw	high sprintf@f
  1382  004AD0  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  1383  004AD2  0060  F3BC  F0E7   	movff	sprintf@fmt,vfprintf@fmt
  1384  004AD8  0060  F3C0  F0E8   	movff	sprintf@fmt+1,vfprintf@fmt+1
  1385  004ADE  0EF7               	movlw	low sprintf@ap
  1386  004AE0  6FE9               	movwf	vfprintf@ap& (0+255),b
  1387  004AE2  0E00               	movlw	high sprintf@ap
  1388  004AE4  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  1389  004AE6  ECB6  F024         	call	_vfprintf	;wreg free
  1390  004AEA  0100               	movlb	0	; () banked
  1391  004AEC  51FB               	movf	(sprintf@f+2)& (0+255),w,b
  1392  004AEE  25ED               	addwf	sprintf@s& (0+255),w,b
  1393  004AF0  6ED9               	movwf	fsr2l,c
  1394  004AF2  51FC               	movf	(sprintf@f+3)& (0+255),w,b
  1395  004AF4  21EE               	addwfc	(sprintf@s+1)& (0+255),w,b
  1396  004AF6  6EDA               	movwf	fsr2h,c
  1397  004AF8  0E00               	movlw	0
  1398  004AFA  6EDF               	movwf	indf2,c
  1399                           
  1400                           ; BSR set to: 0
  1401  004AFC  0012               	return		;funcret
  1402  004AFE                     __end_of_sprintf:
  1403                           	opt callstack 0
  1404                           
  1405 ;; *************** function _vfprintf *****************
  1406 ;; Defined at:
  1407 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  fp              2  133[BANK0 ] PTR struct _IO_FILE
  1410 ;;		 -> sprintf@f(6), 
  1411 ;;  fmt             2  135[BANK0 ] PTR const unsigned char 
  1412 ;;		 -> STR_1(11), 
  1413 ;;  ap              2  137[BANK0 ] PTR PTR void 
  1414 ;;		 -> sprintf@ap(2), 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  cfmt            2  139[BANK0 ] PTR unsigned char 
  1417 ;;		 -> STR_1(11), 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  2  133[BANK0 ] int 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1427 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1430 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1431 ;;Total ram usage:        8 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    8
  1434 ;; This function calls:
  1435 ;;		_vfpfcnvrt
  1436 ;; This function is called by:
  1437 ;;		_sprintf
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text4
  1442  00496C                     __ptext4:
  1443                           	opt callstack 0
  1444  00496C                     _vfprintf:
  1445                           	opt callstack 20
  1446                           
  1447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;incstack = 0
  1451  00496C  0060  F39C  F0EB   	movff	vfprintf@fmt,vfprintf@cfmt
  1452  004972  0060  F3A0  F0EC   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1453                           
  1454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1455  004978  0E00               	movlw	0
  1456  00497A  6E3A               	movwf	_nout+1,c
  1457  00497C  0E00               	movlw	0
  1458  00497E  6E39               	movwf	_nout,c
  1459                           
  1460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1461  004980  D018               	goto	l5667
  1462  004982                     l5665:
  1463                           
  1464                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1465  004982  0060  F394  F0D1   	movff	vfprintf@fp,vfpfcnvrt@fp
  1466  004988  0060  F398  F0D2   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1467  00498E  0EEB               	movlw	low vfprintf@cfmt
  1468  004990  0100               	movlb	0	; () banked
  1469  004992  6FD3               	movwf	vfpfcnvrt@fmt& (0+255),b
  1470  004994  0E00               	movlw	high vfprintf@cfmt
  1471  004996  6FD4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1472  004998  0060  F3A4  F0D5   	movff	vfprintf@ap,vfpfcnvrt@ap
  1473  00499E  0060  F3A8  F0D6   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1474  0049A4  EC7D  F019         	call	_vfpfcnvrt	;wreg free
  1475  0049A8  0100               	movlb	0	; () banked
  1476  0049AA  51D1               	movf	?_vfpfcnvrt& (0+255),w,b
  1477  0049AC  2639               	addwf	_nout,f,c
  1478  0049AE  51D2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1479  0049B0  223A               	addwfc	_nout+1,f,c
  1480  0049B2                     l5667:
  1481                           
  1482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1483  0049B2  0060  F3AF  FFF6   	movff	vfprintf@cfmt,tblptrl
  1484  0049B8  0060  F3B3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  1485  0049BE                     	if	0	;tblptru may be non-zero
  1486  0049BE                     	endif
  1487  0049BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1488  0049BE  0E00               	movlw	low (__mediumconst shr (0+16))
  1489  0049C0  6EF8               	movwf	tblptru,c
  1490  0049C2                     	endif
  1491  0049C2  0008               	tblrd		*
  1492  0049C4  50F5               	movf	tablat,w,c
  1493  0049C6  0900               	iorlw	0
  1494  0049C8  A4D8               	btfss	status,2,c
  1495  0049CA  D7DB               	goto	l5665
  1496                           
  1497                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1498  0049CC  0060  F0E4  F0E5   	movff	_nout,?_vfprintf
  1499  0049D2  0060  F0E8  F0E6   	movff	_nout+1,?_vfprintf+1
  1500  0049D8  0012               	return		;funcret
  1501  0049DA                     __end_of_vfprintf:
  1502                           	opt callstack 0
  1503                           
  1504 ;; *************** function _vfpfcnvrt *****************
  1505 ;; Defined at:
  1506 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  fp              2  113[BANK0 ] PTR struct _IO_FILE
  1509 ;;		 -> sprintf@f(6), 
  1510 ;;  fmt             2  115[BANK0 ] PTR PTR unsigned char 
  1511 ;;		 -> vfprintf@cfmt(2), 
  1512 ;;  ap              2  117[BANK0 ] PTR PTR void 
  1513 ;;		 -> sprintf@ap(2), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  llu             8    0        unsigned long long 
  1516 ;;  ll              8    0        long long 
  1517 ;;  f               4  125[BANK0 ] long long 
  1518 ;;  ct              3  129[BANK0 ] unsigned char [3]
  1519 ;;  vp              3    0        PTR void 
  1520 ;;  cp              3    0        PTR unsigned char 
  1521 ;;  i               2    0        int 
  1522 ;;  done            2    0        int 
  1523 ;;  c               1  132[BANK0 ] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  2  113[BANK0 ] int 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1533 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1534 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1535 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1536 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1537 ;;Total ram usage:       20 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    7
  1540 ;; This function calls:
  1541 ;;		_efgtoa
  1542 ;;		_fputc
  1543 ;;		_isupper
  1544 ;;		_strncmp
  1545 ;;		_tolower
  1546 ;; This function is called by:
  1547 ;;		_vfprintf
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text5
  1552  0032FA                     __ptext5:
  1553                           	opt callstack 0
  1554  0032FA                     _vfpfcnvrt:
  1555                           	opt callstack 20
  1556                           
  1557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1558                           
  1559                           ;incstack = 0
  1560  0032FA  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1561  003300  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1562  003306  006F FF7B FFF6     	movff	postinc2,tblptrl
  1563  00330C  006F FF77 FFF7     	movff	postdec2,tblptrh
  1564  003312                     	if	0	;tblptru may be non-zero
  1565  003312                     	endif
  1566  003312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1567  003312  0E00               	movlw	low (__mediumconst shr (0+16))
  1568  003314  6EF8               	movwf	tblptru,c
  1569  003316                     	endif
  1570  003316  0008               	tblrd		*
  1571  003318  50F5               	movf	tablat,w,c
  1572  00331A  0A25               	xorlw	37
  1573  00331C  A4D8               	btfss	status,2,c
  1574  00331E  D193               	goto	l5641
  1575                           
  1576                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1577  003320  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1578  003326  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1579  00332C  2ADE               	incf	postinc2,f,c
  1580  00332E  0E00               	movlw	0
  1581  003330  22DD               	addwfc	postdec2,f,c
  1582                           
  1583                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1584  003332  0E00               	movlw	0
  1585  003334  6E3C               	movwf	_width+1,c
  1586  003336  0E00               	movlw	0
  1587  003338  6E3B               	movwf	_width,c
  1588  00333A  0060  F0EC  F03F   	movff	_width,_flags
  1589  003340  0060  F0F0  F040   	movff	_width+1,_flags+1
  1590                           
  1591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1592  003346  683D               	setf	_prec,c
  1593  003348  683E               	setf	_prec+1,c
  1594                           
  1595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  1596  00334A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1597  003350  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1598  003356  006F FF7B FFF6     	movff	postinc2,tblptrl
  1599  00335C  006F FF77 FFF7     	movff	postdec2,tblptrh
  1600  003362                     	if	0	;tblptru may be non-zero
  1601  003362                     	endif
  1602  003362                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1603  003362  0E00               	movlw	low (__mediumconst shr (0+16))
  1604  003364  6EF8               	movwf	tblptru,c
  1605  003366                     	endif
  1606  003366  0008               	tblrd		*
  1607  003368  50F5               	movf	tablat,w,c
  1608  00336A  0100               	movlb	0	; () banked
  1609  00336C  6F66               	movwf	tolower@c& (0+255),b
  1610  00336E  6B67               	clrf	(tolower@c+1)& (0+255),b
  1611  003370  ECAA  F025         	call	_tolower	;wreg free
  1612  003374  0100               	movlb	0	; () banked
  1613  003376  5166               	movf	?_tolower& (0+255),w,b
  1614  003378  6FE1               	movwf	vfpfcnvrt@ct& (0+255),b
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  1618  00337A  51E1               	movf	vfpfcnvrt@ct& (0+255),w,b
  1619  00337C  B4D8               	btfsc	status,2,c
  1620  00337E  D045               	goto	l5597
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  1624  003380  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1625  003386  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1626  00338C  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  1627  003392  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  1628  003398  0E01               	movlw	1
  1629  00339A  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  1630  00339C  0E00               	movlw	0
  1631  00339E  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1632  0033A0  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  1633  0033A6  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  1634  0033AC                     	if	0	;tblptru may be non-zero
  1635  0033AC                     	endif
  1636  0033AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1637  0033AC  0E00               	movlw	low (__mediumconst shr (0+16))
  1638  0033AE  6EF8               	movwf	tblptru,c
  1639  0033B0                     	endif
  1640  0033B0  0008               	tblrd		*
  1641  0033B2  50F5               	movf	tablat,w,c
  1642  0033B4  6F66               	movwf	tolower@c& (0+255),b
  1643  0033B6  6B67               	clrf	(tolower@c+1)& (0+255),b
  1644  0033B8  ECAA  F025         	call	_tolower	;wreg free
  1645  0033BC  0100               	movlb	0	; () banked
  1646  0033BE  5166               	movf	?_tolower& (0+255),w,b
  1647  0033C0  6FE2               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  1651  0033C2  51E2               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1652  0033C4  B4D8               	btfsc	status,2,c
  1653  0033C6  D021               	goto	l5597
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  1657  0033C8  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1658  0033CE  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1659  0033D4  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  1660  0033DA  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  1661  0033E0  0E02               	movlw	2
  1662  0033E2  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  1663  0033E4  0E00               	movlw	0
  1664  0033E6  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1665  0033E8  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  1666  0033EE  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  1667  0033F4                     	if	0	;tblptru may be non-zero
  1668  0033F4                     	endif
  1669  0033F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1670  0033F4  0E00               	movlw	low (__mediumconst shr (0+16))
  1671  0033F6  6EF8               	movwf	tblptru,c
  1672  0033F8                     	endif
  1673  0033F8  0008               	tblrd		*
  1674  0033FA  50F5               	movf	tablat,w,c
  1675  0033FC  6F66               	movwf	tolower@c& (0+255),b
  1676  0033FE  6B67               	clrf	(tolower@c+1)& (0+255),b
  1677  003400  ECAA  F025         	call	_tolower	;wreg free
  1678  003404  0100               	movlb	0	; () banked
  1679  003406  5166               	movf	?_tolower& (0+255),w,b
  1680  003408  6FE3               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1681  00340A                     l5597:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  1685  00340A  0E66               	movlw	102
  1686  00340C  19E1               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1687  00340E  A4D8               	btfss	status,2,c
  1688  003410  D05B               	goto	l5609
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  1692  003412  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1693  003418  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1694  00341E  006F FF7B FFF6     	movff	postinc2,tblptrl
  1695  003424  006F FF77 FFF7     	movff	postdec2,tblptrh
  1696  00342A                     	if	0	;tblptru may be non-zero
  1697  00342A                     	endif
  1698  00342A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1699  00342A  0E00               	movlw	low (__mediumconst shr (0+16))
  1700  00342C  6EF8               	movwf	tblptru,c
  1701  00342E                     	endif
  1702  00342E  0008               	tblrd		*
  1703  003430  006F FFD4  F0E4    	movff	tablat,vfpfcnvrt@c
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  1707  003436  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1708  00343C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1709  003442  2ADE               	incf	postinc2,f,c
  1710  003444  0E00               	movlw	0
  1711  003446  22DD               	addwfc	postdec2,f,c
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  1715  003448  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  1716  00344E  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  1717  003454  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  1718  00345A  0E04               	movlw	4
  1719  00345C  26DE               	addwf	postinc2,f,c
  1720  00345E  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  1721  003464  0E00               	movlw	0
  1722  003466  22DD               	addwfc	postdec2,f,c
  1723  003468  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  1724  00346E  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  1725  003474  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f
  1726  00347A  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+1
  1727  003480  006F FF78  F0DF    	movff	postinc2,vfpfcnvrt@f+2
  1728  003486  006F FF78  F0E0    	movff	postinc2,vfpfcnvrt@f+3
  1729  00348C                     l5605:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  1733  00348C  0060  F344  F08D   	movff	vfpfcnvrt@fp,efgtoa@fp
  1734  003492  0060  F348  F08E   	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1735  003498  0060  F374  F08F   	movff	vfpfcnvrt@f,efgtoa@f
  1736  00349E  0060  F378  F090   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1737  0034A4  0060  F37C  F091   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1738  0034AA  0060  F380  F092   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1739  0034B0  0060  F390  F093   	movff	vfpfcnvrt@c,efgtoa@c
  1740  0034B6  EC1C  F010         	call	_efgtoa	;wreg free
  1741  0034BA  0060  F234  F0D1   	movff	?_efgtoa,?_vfpfcnvrt
  1742  0034C0  0060  F238  F0D2   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1743  0034C6  0012               	return	
  1744  0034C8                     l5609:
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1748  0034C8  0EE1               	movlw	low vfpfcnvrt@ct
  1749  0034CA  6F60               	movwf	strncmp@_l& (0+255),b
  1750  0034CC  0E00               	movlw	high vfpfcnvrt@ct
  1751  0034CE  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  1752  0034D0  0E34               	movlw	low STR_11
  1753  0034D2  6F62               	movwf	strncmp@_r& (0+255),b
  1754  0034D4  0E20               	movlw	high STR_11
  1755  0034D6  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  1756  0034D8  0E00               	movlw	0
  1757  0034DA  6F65               	movwf	(strncmp@n+1)& (0+255),b
  1758  0034DC  0E02               	movlw	2
  1759  0034DE  6F64               	movwf	strncmp@n& (0+255),b
  1760  0034E0  ECD4  F020         	call	_strncmp	;wreg free
  1761  0034E4  0100               	movlb	0	; () banked
  1762  0034E6  5160               	movf	?_strncmp& (0+255),w,b
  1763  0034E8  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  1764  0034EA  A4D8               	btfss	status,2,c
  1765  0034EC  D070               	goto	l5625
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1769  0034EE  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1770  0034F4  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1771  0034FA  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  1772  003500  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  1773  003506  0E01               	movlw	1
  1774  003508  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  1775  00350A  0E00               	movlw	0
  1776  00350C  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1777  00350E  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  1778  003514  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  1779  00351A                     	if	0	;tblptru may be non-zero
  1780  00351A                     	endif
  1781  00351A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1782  00351A  0E00               	movlw	low (__mediumconst shr (0+16))
  1783  00351C  6EF8               	movwf	tblptru,c
  1784  00351E                     	endif
  1785  00351E  0008               	tblrd		*
  1786  003520  006F FFD4  F0E4    	movff	tablat,vfpfcnvrt@c
  1787  003526  0EBF               	movlw	191
  1788  003528  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  1789  00352A  0EFF               	movlw	255
  1790  00352C  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1791  00352E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1792  003534  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1793  00353A  006F FF7B FFF6     	movff	postinc2,tblptrl
  1794  003540  006F FF77 FFF7     	movff	postdec2,tblptrh
  1795  003546                     	if	0	;tblptru may be non-zero
  1796  003546                     	endif
  1797  003546                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1798  003546  0E00               	movlw	low (__mediumconst shr (0+16))
  1799  003548  6EF8               	movwf	tblptru,c
  1800  00354A                     	endif
  1801  00354A  0008               	tblrd		*
  1802  00354C  50F5               	movf	tablat,w,c
  1803  00354E  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1804  003550  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1805  003552  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  1806  003554  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1807  003556  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1808  003558  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1809  00355A  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1810  00355C  E106               	bnz	u7520
  1811  00355E  0E1A               	movlw	26
  1812  003560  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1813  003562  B0D8               	btfsc	status,0,c
  1814  003564  D002               	goto	u7520
  1815  003566  0E01               	movlw	1
  1816  003568  D001               	goto	u7530
  1817  00356A                     u7520:
  1818  00356A  0E00               	movlw	0
  1819  00356C                     u7530:
  1820  00356C  6FDB               	movwf	_vfpfcnvrt$1053& (0+255),b
  1821  00356E  6BDC               	clrf	(_vfpfcnvrt$1053+1)& (0+255),b
  1822                           
  1823                           ; BSR set to: 0
  1824  003570  51DB               	movf	_vfpfcnvrt$1053& (0+255),w,b
  1825  003572  11DC               	iorwf	(_vfpfcnvrt$1053+1)& (0+255),w,b
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1829                           
  1830                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  1834  003574  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  1835  00357A  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  1836  003580  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  1837  003586  0E04               	movlw	4
  1838  003588  26DE               	addwf	postinc2,f,c
  1839  00358A  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  1840  003590  0E00               	movlw	0
  1841  003592  22DD               	addwfc	postdec2,f,c
  1842  003594  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  1843  00359A  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  1844  0035A0  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f
  1845  0035A6  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+1
  1846  0035AC  006F FF78  F0DF    	movff	postinc2,vfpfcnvrt@f+2
  1847  0035B2  006F FF78  F0E0    	movff	postinc2,vfpfcnvrt@f+3
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  1851                           
  1852                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  1853  0035B8  0E02               	movlw	2
  1854  0035BA  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1855  0035C0  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1856  0035C6  26DE               	addwf	postinc2,f,c
  1857  0035C8  0E00               	movlw	0
  1858  0035CA  22DD               	addwfc	postdec2,f,c
  1859  0035CC  D75F               	goto	l5605
  1860  0035CE                     l5625:
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  1864  0035CE  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1865  0035D4  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1866  0035DA  006F FF7B FFF6     	movff	postinc2,tblptrl
  1867  0035E0  006F FF77 FFF7     	movff	postdec2,tblptrh
  1868  0035E6                     	if	0	;tblptru may be non-zero
  1869  0035E6                     	endif
  1870  0035E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1871  0035E6  0E00               	movlw	low (__mediumconst shr (0+16))
  1872  0035E8  6EF8               	movwf	tblptru,c
  1873  0035EA                     	endif
  1874  0035EA  0008               	tblrd		*
  1875  0035EC  50F5               	movf	tablat,w,c
  1876  0035EE  0A25               	xorlw	37
  1877  0035F0  A4D8               	btfss	status,2,c
  1878  0035F2  D01B               	goto	l5635
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  1882  0035F4  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1883  0035FA  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1884  003600  2ADE               	incf	postinc2,f,c
  1885  003602  0E00               	movlw	0
  1886  003604  22DD               	addwfc	postdec2,f,c
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  1890  003606  0E00               	movlw	0
  1891  003608  6F61               	movwf	(fputc@c+1)& (0+255),b
  1892  00360A  0E25               	movlw	37
  1893  00360C  6F60               	movwf	fputc@c& (0+255),b
  1894  00360E  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  1895  003614  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1896  00361A  ECBC  F022         	call	_fputc	;wreg free
  1897  00361E                     l5631:
  1898                           
  1899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  1900  00361E  0E00               	movlw	0
  1901  003620  0100               	movlb	0	; () banked
  1902  003622  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1903  003624  0E01               	movlw	1
  1904  003626  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  1905  003628  0012               	return	
  1906  00362A                     l5635:
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  1910  00362A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1911  003630  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1912  003636  2ADE               	incf	postinc2,f,c
  1913  003638  0E00               	movlw	0
  1914  00363A  22DD               	addwfc	postdec2,f,c
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  1918  00363C  0E00               	movlw	0
  1919  00363E  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1920  003640  0E00               	movlw	0
  1921  003642  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  1922  003644  0012               	return	
  1923  003646                     l5641:
  1924                           
  1925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  1926  003646  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1927  00364C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1928  003652  006F FF7B FFF6     	movff	postinc2,tblptrl
  1929  003658  006F FF77 FFF7     	movff	postdec2,tblptrh
  1930  00365E                     	if	0	;tblptru may be non-zero
  1931  00365E                     	endif
  1932  00365E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1933  00365E  0E00               	movlw	low (__mediumconst shr (0+16))
  1934  003660  6EF8               	movwf	tblptru,c
  1935  003662                     	endif
  1936  003662  0008               	tblrd		*
  1937  003664  50F5               	movf	tablat,w,c
  1938  003666  0100               	movlb	0	; () banked
  1939  003668  6F60               	movwf	fputc@c& (0+255),b
  1940  00366A  6B61               	clrf	(fputc@c+1)& (0+255),b
  1941  00366C  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  1942  003672  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1943  003678  ECBC  F022         	call	_fputc	;wreg free
  1944                           
  1945                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1946  00367C  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1947  003682  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1948  003688  2ADE               	incf	postinc2,f,c
  1949  00368A  0E00               	movlw	0
  1950  00368C  22DD               	addwfc	postdec2,f,c
  1951  00368E  D7C7               	goto	l5631
  1952  003690                     __end_of_vfpfcnvrt:
  1953                           	opt callstack 0
  1954                           
  1955 ;; *************** function _strncmp *****************
  1956 ;; Defined at:
  1957 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  1960 ;;		 -> vfpfcnvrt@ct(3), 
  1961 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  1962 ;;		 -> STR_13(3), 
  1963 ;;  n               2    4[BANK0 ] unsigned int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  1966 ;;		 -> STR_13(3), 
  1967 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  1968 ;;		 -> vfpfcnvrt@ct(3), 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  2    0[BANK0 ] int 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1978 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1979 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1980 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1981 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1982 ;;Total ram usage:       11 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    2
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_vfpfcnvrt
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text6
  1993  0041A8                     __ptext6:
  1994                           	opt callstack 0
  1995  0041A8                     _strncmp:
  1996                           	opt callstack 24
  1997                           
  1998                           ;incstack = 0
  1999  0041A8  0060  F180  F067   	movff	strncmp@_l,strncmp@l
  2000  0041AE  0060  F184  F068   	movff	strncmp@_l+1,strncmp@l+1
  2001  0041B4  0060  F188  F069   	movff	strncmp@_r,strncmp@r
  2002  0041BA  0060  F18C  F06A   	movff	strncmp@_r+1,strncmp@r+1
  2003  0041C0  0100               	movlb	0	; () banked
  2004  0041C2  0764               	decf	strncmp@n& (0+255),f,b
  2005  0041C4  A0D8               	btfss	status,0,c
  2006  0041C6  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2007  0041C8  2964               	incf	strncmp@n& (0+255),w,b
  2008  0041CA  E10F               	bnz	l5567
  2009  0041CC  2965               	incf	(strncmp@n+1)& (0+255),w,b
  2010  0041CE  A4D8               	btfss	status,2,c
  2011  0041D0  D00C               	goto	l5567
  2012                           
  2013                           ; BSR set to: 0
  2014  0041D2  0E00               	movlw	0
  2015  0041D4  6F61               	movwf	(?_strncmp+1)& (0+255),b
  2016  0041D6  0E00               	movlw	0
  2017  0041D8  6F60               	movwf	?_strncmp& (0+255),b
  2018  0041DA  0012               	return	
  2019  0041DC                     l5565:
  2020                           
  2021                           ; BSR set to: 0
  2022  0041DC  4B67               	infsnz	strncmp@l& (0+255),f,b
  2023  0041DE  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  2024  0041E0  4B69               	infsnz	strncmp@r& (0+255),f,b
  2025  0041E2  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  2026  0041E4  0764               	decf	strncmp@n& (0+255),f,b
  2027  0041E6  A0D8               	btfss	status,0,c
  2028  0041E8  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2029  0041EA                     l5567:
  2030                           
  2031                           ; BSR set to: 0
  2032  0041EA  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2033  0041F0  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2034  0041F6  50DF               	movf	indf2,w,c
  2035  0041F8  B4D8               	btfsc	status,2,c
  2036  0041FA  D026               	goto	u7460
  2037                           
  2038                           ; BSR set to: 0
  2039  0041FC  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2040  004202  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2041  004208                     	if	0	;tblptru may be non-zero
  2042  004208                     	endif
  2043  004208                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2044  004208  0E00               	movlw	low (__mediumconst shr (0+16))
  2045  00420A  6EF8               	movwf	tblptru,c
  2046  00420C                     	endif
  2047  00420C  0008               	tblrd		*
  2048  00420E  50F5               	movf	tablat,w,c
  2049  004210  0900               	iorlw	0
  2050  004212  B4D8               	btfsc	status,2,c
  2051  004214  D019               	goto	u7460
  2052                           
  2053                           ; BSR set to: 0
  2054  004216  5164               	movf	strncmp@n& (0+255),w,b
  2055  004218  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  2056  00421A  B4D8               	btfsc	status,2,c
  2057  00421C  D015               	goto	u7460
  2058                           
  2059                           ; BSR set to: 0
  2060  00421E  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2061  004224  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2062  00422A  50DF               	movf	indf2,w,c
  2063  00422C  6F66               	movwf	??_strncmp& (0+255),b
  2064  00422E  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2065  004234  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2066  00423A                     	if	0	;tblptru may be non-zero
  2067  00423A                     	endif
  2068  00423A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2069  00423A  0E00               	movlw	low (__mediumconst shr (0+16))
  2070  00423C  6EF8               	movwf	tblptru,c
  2071  00423E                     	endif
  2072  00423E  0008               	tblrd		*
  2073  004240  50F5               	movf	tablat,w,c
  2074  004242  1966               	xorwf	??_strncmp& (0+255),w,b
  2075  004244  B4D8               	btfsc	status,2,c
  2076  004246  D7CA               	goto	l5565
  2077  004248                     u7460:
  2078                           
  2079                           ; BSR set to: 0
  2080  004248  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2081  00424E  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2082  004254  50DF               	movf	indf2,w,c
  2083  004256  6F66               	movwf	??_strncmp& (0+255),b
  2084  004258  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2085  00425E  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2086  004264                     	if	0	;tblptru may be non-zero
  2087  004264                     	endif
  2088  004264                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2089  004264  0E00               	movlw	low (__mediumconst shr (0+16))
  2090  004266  6EF8               	movwf	tblptru,c
  2091  004268                     	endif
  2092  004268  0008               	tblrd		*
  2093  00426A  50F5               	movf	tablat,w,c
  2094  00426C  5D66               	subwf	??_strncmp& (0+255),w,b
  2095  00426E  6F60               	movwf	?_strncmp& (0+255),b
  2096  004270  6B61               	clrf	(?_strncmp+1)& (0+255),b
  2097  004272  A0D8               	btfss	status,0,c
  2098  004274  0761               	decf	(?_strncmp+1)& (0+255),f,b
  2099                           
  2100                           ; BSR set to: 0
  2101  004276  0012               	return		;funcret
  2102  004278                     __end_of_strncmp:
  2103                           	opt callstack 0
  2104                           
  2105 ;; *************** function _efgtoa *****************
  2106 ;; Defined at:
  2107 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  2110 ;;		 -> sprintf@f(6), 
  2111 ;;  f               4   47[BANK0 ] PTR struct _IO_FILE
  2112 ;;  c               1   51[BANK0 ] unsigned char 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  u               4  109[BANK0 ] unsigned char 
  2115 ;;  g               4  101[BANK0 ] unsigned char 
  2116 ;;  l               4   95[BANK0 ] unsigned char 
  2117 ;;  h               4   91[BANK0 ] unsigned char 
  2118 ;;  ou              4   57[BANK0 ] unsigned char 
  2119 ;;  n               2  107[BANK0 ] int 
  2120 ;;  e               2  105[BANK0 ] int 
  2121 ;;  i               2   99[BANK0 ] int 
  2122 ;;  w               2   88[BANK0 ] int 
  2123 ;;  p               2   85[BANK0 ] int 
  2124 ;;  sign            2   83[BANK0 ] int 
  2125 ;;  d               2   81[BANK0 ] int 
  2126 ;;  ne              2   79[BANK0 ] int 
  2127 ;;  m               2   77[BANK0 ] int 
  2128 ;;  pp              2   75[BANK0 ] int 
  2129 ;;  t               2   73[BANK0 ] int 
  2130 ;;  mode            1   90[BANK0 ] unsigned char 
  2131 ;;  nmode           1   87[BANK0 ] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  2   45[BANK0 ] int 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2141 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2142 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2143 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2144 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2145 ;;Total ram usage:       68 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    6
  2148 ;; This function calls:
  2149 ;;		___awdiv
  2150 ;;		___awmod
  2151 ;;		___fladd
  2152 ;;		___fldiv
  2153 ;;		___fleq
  2154 ;;		___flge
  2155 ;;		___flmul
  2156 ;;		___flneg
  2157 ;;		___flsub
  2158 ;;		___fltol
  2159 ;;		___fpclassifyf
  2160 ;;		_floorf
  2161 ;;		_isupper
  2162 ;;		_pad
  2163 ;;		_strcpy
  2164 ;;		_tolower
  2165 ;; This function is called by:
  2166 ;;		_vfpfcnvrt
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text7
  2171  002038                     __ptext7:
  2172                           	opt callstack 0
  2173  002038                     _efgtoa:
  2174                           	opt callstack 20
  2175                           
  2176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;incstack = 0
  2180  002038  0E00               	movlw	0
  2181  00203A  0100               	movlb	0	; () banked
  2182  00203C  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  2183  00203E  0E00               	movlw	0
  2184  002040  6FB3               	movwf	efgtoa@sign& (0+255),b
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  2188  002042  0060  F23C  F0C5   	movff	efgtoa@f,efgtoa@g
  2189  002048  0060  F240  F0C6   	movff	efgtoa@f+1,efgtoa@g+1
  2190  00204E  0060  F244  F0C7   	movff	efgtoa@f+2,efgtoa@g+2
  2191  002054  0060  F248  F0C8   	movff	efgtoa@f+3,efgtoa@g+3
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  2195  00205A  AFC8               	btfss	(efgtoa@g+3)& (0+255),7,b
  2196  00205C  D01E               	goto	l5271
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  2200  00205E  0E00               	movlw	0
  2201  002060  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  2202  002062  0E01               	movlw	1
  2203  002064  6FB3               	movwf	efgtoa@sign& (0+255),b
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  2207  002066  0060  F314  F060   	movff	efgtoa@g,___flneg@f1
  2208  00206C  0060  F318  F061   	movff	efgtoa@g+1,___flneg@f1+1
  2209  002072  0060  F31C  F062   	movff	efgtoa@g+2,___flneg@f1+2
  2210  002078  0060  F320  F063   	movff	efgtoa@g+3,___flneg@f1+3
  2211  00207E  EC15  F026         	call	___flneg	;wreg free
  2212  002082  0060  F180  F0C5   	movff	?___flneg,efgtoa@g
  2213  002088  0060  F184  F0C6   	movff	?___flneg+1,efgtoa@g+1
  2214  00208E  0060  F188  F0C7   	movff	?___flneg+2,efgtoa@g+2
  2215  002094  0060  F18C  F0C8   	movff	?___flneg+3,efgtoa@g+3
  2216  00209A                     l5271:
  2217                           
  2218                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  2219  00209A  0E00               	movlw	0
  2220  00209C  0100               	movlb	0	; () banked
  2221  00209E  6FCC               	movwf	(efgtoa@n+1)& (0+255),b
  2222  0020A0  0E00               	movlw	0
  2223  0020A2  6FCB               	movwf	efgtoa@n& (0+255),b
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  2227  0020A4  0060  F0EC  F0B8   	movff	_width,efgtoa@w
  2228  0020AA  0060  F0F0  F0B9   	movff	_width+1,efgtoa@w+1
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  2232  0020B0  51B3               	movf	efgtoa@sign& (0+255),w,b
  2233  0020B2  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2234  0020B4  A4D8               	btfss	status,2,c
  2235  0020B6  D002               	goto	u6920
  2236                           
  2237                           ; BSR set to: 0
  2238  0020B8  A43F               	btfss	_flags,2,c
  2239  0020BA  D014               	goto	l5291
  2240  0020BC                     u6920:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  2244  0020BC  51B3               	movf	efgtoa@sign& (0+255),w,b
  2245  0020BE  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2246  0020C0  A4D8               	btfss	status,2,c
  2247  0020C2  D004               	goto	l5283
  2248                           
  2249                           ; BSR set to: 0
  2250  0020C4  0E00               	movlw	0
  2251  0020C6  6F9E               	movwf	(_efgtoa$1024+1)& (0+255),b
  2252  0020C8  0E2B               	movlw	43
  2253  0020CA  D003               	goto	L1
  2254  0020CC                     l5283:
  2255                           
  2256                           ; BSR set to: 0
  2257  0020CC  0E00               	movlw	0
  2258  0020CE  6F9E               	movwf	(_efgtoa$1024+1)& (0+255),b
  2259  0020D0  0E2D               	movlw	45
  2260  0020D2                     L1:
  2261  0020D2  6F9D               	movwf	_efgtoa$1024& (0+255),b
  2262                           
  2263                           ; BSR set to: 0
  2264  0020D4  0060  F274  F120   	movff	_efgtoa$1024,_dbuf
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  2268  0020DA  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  2269  0020DC  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  2273  0020DE  07B8               	decf	efgtoa@w& (0+255),f,b
  2274  0020E0  A0D8               	btfss	status,0,c
  2275  0020E2  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  2276  0020E4                     l5291:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2280  0020E4  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  2281  0020EA  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  2282  0020F0  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  2283  0020F6  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  2284  0020FC  ECF4  F01F         	call	___fpclassifyf	;wreg free
  2285  002100  0100               	movlb	0	; () banked
  2286  002102  0560               	decf	?___fpclassifyf& (0+255),w,b
  2287  002104  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2288  002106  A4D8               	btfss	status,2,c
  2289  002108  D052               	goto	l5309
  2290                           
  2291                           ; BSR set to: 0
  2292  00210A  0EBF               	movlw	191
  2293  00210C  6F94               	movwf	??_efgtoa& (0+255),b
  2294  00210E  0EFF               	movlw	255
  2295  002110  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  2296  002112  5193               	movf	efgtoa@c& (0+255),w,b
  2297  002114  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  2298  002116  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  2299  002118  5194               	movf	??_efgtoa& (0+255),w,b
  2300  00211A  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  2301  00211C  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  2302  00211E  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2303  002120  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  2304  002122  E106               	bnz	u6950
  2305  002124  0E1A               	movlw	26
  2306  002126  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  2307  002128  B0D8               	btfsc	status,0,c
  2308  00212A  D002               	goto	u6950
  2309  00212C  0E01               	movlw	1
  2310  00212E  D001               	goto	u6960
  2311  002130                     u6950:
  2312  002130  0E00               	movlw	0
  2313  002132                     u6960:
  2314  002132  6F9F               	movwf	_efgtoa$1025& (0+255),b
  2315  002134  6BA0               	clrf	(_efgtoa$1025+1)& (0+255),b
  2316                           
  2317                           ; BSR set to: 0
  2318  002136  519F               	movf	_efgtoa$1025& (0+255),w,b
  2319  002138  11A0               	iorwf	(_efgtoa$1025+1)& (0+255),w,b
  2320  00213A  B4D8               	btfsc	status,2,c
  2321  00213C  D00D               	goto	l5301
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  2325  00213E  0E20               	movlw	low _dbuf
  2326  002140  25CB               	addwf	efgtoa@n& (0+255),w,b
  2327  002142  6F60               	movwf	strcpy@dest& (0+255),b
  2328  002144  0E01               	movlw	high _dbuf
  2329  002146  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2330  002148  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2331  00214A  0E24               	movlw	low STR_3
  2332  00214C  6F62               	movwf	strcpy@src& (0+255),b
  2333  00214E  0E20               	movlw	high STR_3
  2334  002150  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2335  002152  ECED  F024         	call	_strcpy	;wreg free
  2336                           
  2337                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  2338  002156  D00C               	goto	l5303
  2339  002158                     l5301:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  2343  002158  0E20               	movlw	low _dbuf
  2344  00215A  25CB               	addwf	efgtoa@n& (0+255),w,b
  2345  00215C  6F60               	movwf	strcpy@dest& (0+255),b
  2346  00215E  0E01               	movlw	high _dbuf
  2347  002160  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2348  002162  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2349  002164  0E2C               	movlw	low STR_4
  2350  002166  6F62               	movwf	strcpy@src& (0+255),b
  2351  002168  0E20               	movlw	high STR_4
  2352  00216A  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2353  00216C  ECED  F024         	call	_strcpy	;wreg free
  2354  002170                     l5303:
  2355                           
  2356                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  2357  002170  0100               	movlb	0	; () banked
  2358  002172  0EFD               	movlw	253
  2359  002174  27B8               	addwf	efgtoa@w& (0+255),f,b
  2360  002176  0EFF               	movlw	255
  2361  002178  23B9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2362  00217A                     l5305:
  2363                           
  2364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  2365  00217A  0060  F234  F070   	movff	efgtoa@fp,pad@fp
  2366  002180  0060  F238  F071   	movff	efgtoa@fp+1,pad@fp+1
  2367  002186  0E20               	movlw	low _dbuf
  2368  002188  0100               	movlb	0	; () banked
  2369  00218A  6F72               	movwf	pad@buf& (0+255),b
  2370  00218C  0E01               	movlw	high _dbuf
  2371  00218E  6F73               	movwf	(pad@buf+1)& (0+255),b
  2372  002190  0060  F2E0  F074   	movff	efgtoa@w,pad@p
  2373  002196  0060  F2E4  F075   	movff	efgtoa@w+1,pad@p+1
  2374  00219C  EC07  F022         	call	_pad	;wreg free
  2375  0021A0  0060  F1C0  F08D   	movff	?_pad,?_efgtoa
  2376  0021A6  0060  F1C4  F08E   	movff	?_pad+1,?_efgtoa+1
  2377  0021AC  0012               	return	
  2378  0021AE                     l5309:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2382  0021AE  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  2383  0021B4  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  2384  0021BA  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  2385  0021C0  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  2386  0021C6  ECF4  F01F         	call	___fpclassifyf	;wreg free
  2387  0021CA  0100               	movlb	0	; () banked
  2388  0021CC  5160               	movf	?___fpclassifyf& (0+255),w,b
  2389  0021CE  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2390  0021D0  A4D8               	btfss	status,2,c
  2391  0021D2  D034               	goto	l5327
  2392                           
  2393                           ; BSR set to: 0
  2394  0021D4  0EBF               	movlw	191
  2395  0021D6  6F94               	movwf	??_efgtoa& (0+255),b
  2396  0021D8  0EFF               	movlw	255
  2397  0021DA  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  2398  0021DC  5193               	movf	efgtoa@c& (0+255),w,b
  2399  0021DE  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  2400  0021E0  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  2401  0021E2  5194               	movf	??_efgtoa& (0+255),w,b
  2402  0021E4  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  2403  0021E6  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  2404  0021E8  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2405  0021EA  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  2406  0021EC  E106               	bnz	u6990
  2407  0021EE  0E1A               	movlw	26
  2408  0021F0  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  2409  0021F2  B0D8               	btfsc	status,0,c
  2410  0021F4  D002               	goto	u6990
  2411  0021F6  0E01               	movlw	1
  2412  0021F8  D001               	goto	u7000
  2413  0021FA                     u6990:
  2414  0021FA  0E00               	movlw	0
  2415  0021FC                     u7000:
  2416  0021FC  6FA1               	movwf	_efgtoa$1030& (0+255),b
  2417  0021FE  6BA2               	clrf	(_efgtoa$1030+1)& (0+255),b
  2418                           
  2419                           ; BSR set to: 0
  2420  002200  51A1               	movf	_efgtoa$1030& (0+255),w,b
  2421  002202  11A2               	iorwf	(_efgtoa$1030+1)& (0+255),w,b
  2422  002204  B4D8               	btfsc	status,2,c
  2423  002206  D00D               	goto	l5319
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  2427  002208  0E20               	movlw	low _dbuf
  2428  00220A  25CB               	addwf	efgtoa@n& (0+255),w,b
  2429  00220C  6F60               	movwf	strcpy@dest& (0+255),b
  2430  00220E  0E01               	movlw	high _dbuf
  2431  002210  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2432  002212  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2433  002214  0E28               	movlw	low STR_7
  2434  002216  6F62               	movwf	strcpy@src& (0+255),b
  2435  002218  0E20               	movlw	high STR_7
  2436  00221A  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2437  00221C  ECED  F024         	call	_strcpy	;wreg free
  2438                           
  2439                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  2440  002220  D7A7               	goto	l5303
  2441  002222                     l5319:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  2445  002222  0E20               	movlw	low _dbuf
  2446  002224  25CB               	addwf	efgtoa@n& (0+255),w,b
  2447  002226  6F60               	movwf	strcpy@dest& (0+255),b
  2448  002228  0E01               	movlw	high _dbuf
  2449  00222A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2450  00222C  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2451  00222E  0E30               	movlw	low STR_8
  2452  002230  6F62               	movwf	strcpy@src& (0+255),b
  2453  002232  0E20               	movlw	high STR_8
  2454  002234  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2455  002236  ECED  F024         	call	_strcpy	;wreg free
  2456  00223A  D79A               	goto	l5303
  2457  00223C                     l5327:
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  2461  00223C  0E00               	movlw	0
  2462  00223E  6FCD               	movwf	efgtoa@u& (0+255),b
  2463  002240  0E00               	movlw	0
  2464  002242  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  2465  002244  0E80               	movlw	128
  2466  002246  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  2467  002248  0E3F               	movlw	63
  2468  00224A  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  2469                           
  2470                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  2471  00224C  0E00               	movlw	0
  2472  00224E  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  2473  002250  0E00               	movlw	0
  2474  002252  6FC9               	movwf	efgtoa@e& (0+255),b
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  2478  002254  0060  F314  F060   	movff	efgtoa@g,___fleq@ff1
  2479  00225A  0060  F318  F061   	movff	efgtoa@g+1,___fleq@ff1+1
  2480  002260  0060  F31C  F062   	movff	efgtoa@g+2,___fleq@ff1+2
  2481  002266  0060  F320  F063   	movff	efgtoa@g+3,___fleq@ff1+3
  2482  00226C  0E00               	movlw	0
  2483  00226E  6F64               	movwf	___fleq@ff2& (0+255),b
  2484  002270  0E00               	movlw	0
  2485  002272  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  2486  002274  0E00               	movlw	0
  2487  002276  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  2488  002278  0E00               	movlw	0
  2489  00227A  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  2490  00227C  EC6B  F023         	call	___fleq	;wreg free
  2491  002280  0100               	movlb	0	; () banked
  2492  002282  A0D8               	btfss	status,0,c
  2493  002284  D026               	goto	l5337
  2494  002286  D09C               	goto	u7040
  2495  002288                     l5333:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  2499  002288  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  2500  00228E  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  2501  002294  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  2502  00229A  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  2503  0022A0  0E00               	movlw	0
  2504  0022A2  6F64               	movwf	___flmul@a& (0+255),b
  2505  0022A4  0E00               	movlw	0
  2506  0022A6  6F65               	movwf	(___flmul@a+1)& (0+255),b
  2507  0022A8  0E20               	movlw	32
  2508  0022AA  6F66               	movwf	(___flmul@a+2)& (0+255),b
  2509  0022AC  0E41               	movlw	65
  2510  0022AE  6F67               	movwf	(___flmul@a+3)& (0+255),b
  2511  0022B0  ECCA  F015         	call	___flmul	;wreg free
  2512  0022B4  0060  F180  F0CD   	movff	?___flmul,efgtoa@u
  2513  0022BA  0060  F184  F0CE   	movff	?___flmul+1,efgtoa@u+1
  2514  0022C0  0060  F188  F0CF   	movff	?___flmul+2,efgtoa@u+2
  2515  0022C6  0060  F18C  F0D0   	movff	?___flmul+3,efgtoa@u+3
  2516                           
  2517                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  2518  0022CC  0100               	movlb	0	; () banked
  2519  0022CE  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  2520  0022D0  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  2521  0022D2                     l5337:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  2525  0022D2  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  2526  0022D8  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  2527  0022DE  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  2528  0022E4  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  2529  0022EA  0E00               	movlw	0
  2530  0022EC  6F64               	movwf	___flmul@a& (0+255),b
  2531  0022EE  0E00               	movlw	0
  2532  0022F0  6F65               	movwf	(___flmul@a+1)& (0+255),b
  2533  0022F2  0E20               	movlw	32
  2534  0022F4  6F66               	movwf	(___flmul@a+2)& (0+255),b
  2535  0022F6  0E41               	movlw	65
  2536  0022F8  6F67               	movwf	(___flmul@a+3)& (0+255),b
  2537  0022FA  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  2538  002300  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  2539  002306  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  2540  00230C  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  2541  002312  ECCA  F015         	call	___flmul	;wreg free
  2542  002316  0060  F180  F07D   	movff	?___flmul,___flge@ff2
  2543  00231C  0060  F184  F07E   	movff	?___flmul+1,___flge@ff2+1
  2544  002322  0060  F188  F07F   	movff	?___flmul+2,___flge@ff2+2
  2545  002328  0060  F18C  F080   	movff	?___flmul+3,___flge@ff2+3
  2546  00232E  EC6B  F020         	call	___flge	;wreg free
  2547  002332  0100               	movlb	0	; () banked
  2548  002334  A0D8               	btfss	status,0,c
  2549  002336  D027               	goto	l5343
  2550  002338  D7A7               	goto	l5333
  2551  00233A                     l5339:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  2555  00233A  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  2556  002340  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  2557  002346  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  2558  00234C  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  2559  002352  0E00               	movlw	0
  2560  002354  6F64               	movwf	___fldiv@a& (0+255),b
  2561  002356  0E00               	movlw	0
  2562  002358  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  2563  00235A  0E20               	movlw	32
  2564  00235C  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  2565  00235E  0E41               	movlw	65
  2566  002360  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  2567  002362  ECED  F01C         	call	___fldiv	;wreg free
  2568  002366  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  2569  00236C  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  2570  002372  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  2571  002378  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  2572                           
  2573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  2574  00237E  0100               	movlb	0	; () banked
  2575  002380  07C9               	decf	efgtoa@e& (0+255),f,b
  2576  002382  A0D8               	btfss	status,0,c
  2577  002384  07CA               	decf	(efgtoa@e+1)& (0+255),f,b
  2578  002386                     l5343:
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  2582  002386  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  2583  00238C  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  2584  002392  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  2585  002398  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  2586  00239E  0060  F334  F07D   	movff	efgtoa@u,___flge@ff2
  2587  0023A4  0060  F338  F07E   	movff	efgtoa@u+1,___flge@ff2+1
  2588  0023AA  0060  F33C  F07F   	movff	efgtoa@u+2,___flge@ff2+2
  2589  0023B0  0060  F340  F080   	movff	efgtoa@u+3,___flge@ff2+3
  2590  0023B6  EC6B  F020         	call	___flge	;wreg free
  2591  0023BA  0100               	movlb	0	; () banked
  2592  0023BC  A0D8               	btfss	status,0,c
  2593  0023BE  D7BD               	goto	l5339
  2594  0023C0                     u7040:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  2598  0023C0  0060  F24C  F066   	movff	efgtoa@c,tolower@c
  2599  0023C6  6B67               	clrf	(tolower@c+1)& (0+255),b
  2600  0023C8  ECAA  F025         	call	_tolower	;wreg free
  2601  0023CC  0100               	movlb	0	; () banked
  2602  0023CE  5166               	movf	?_tolower& (0+255),w,b
  2603  0023D0  6FBA               	movwf	efgtoa@mode& (0+255),b
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  2607  0023D2  0060  F2E8  F0B7   	movff	efgtoa@mode,efgtoa@nmode
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  2611  0023D8  0E67               	movlw	103
  2612  0023DA  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  2613  0023DC  A4D8               	btfss	status,2,c
  2614  0023DE  D01B               	goto	l5359
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  2618  0023E0  503D               	movf	_prec,w,c
  2619  0023E2  103E               	iorwf	_prec+1,w,c
  2620  0023E4  A4D8               	btfss	status,2,c
  2621  0023E6  D004               	goto	l5355
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  2625  0023E8  0E00               	movlw	0
  2626  0023EA  6E3E               	movwf	_prec+1,c
  2627  0023EC  0E01               	movlw	1
  2628  0023EE  6E3D               	movwf	_prec,c
  2629  0023F0                     l5355:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  2633  0023F0  BE3E               	btfsc	_prec+1,7,c
  2634  0023F2  D005               	goto	u7070
  2635  0023F4  503E               	movf	_prec+1,w,c
  2636  0023F6  E108               	bnz	l341
  2637  0023F8  043D               	decf	_prec,w,c
  2638  0023FA  B0D8               	btfsc	status,0,c
  2639  0023FC  D005               	goto	l341
  2640  0023FE                     u7070:
  2641                           
  2642                           ; BSR set to: 0
  2643  0023FE  0E00               	movlw	0
  2644  002400  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  2645  002402  0E06               	movlw	6
  2646  002404  6FB5               	movwf	efgtoa@p& (0+255),b
  2647  002406  D00A               	goto	l5365
  2648  002408                     l341:
  2649                           
  2650                           ; BSR set to: 0
  2651  002408  0060  F0F4  F0B5   	movff	_prec,efgtoa@p
  2652  00240E  0060  F0F8  F0B6   	movff	_prec+1,efgtoa@p+1
  2653  002414  D003               	goto	l5365
  2654  002416                     l5359:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  2658  002416  AE3E               	btfss	_prec+1,7,c
  2659  002418  D7F7               	goto	l341
  2660  00241A  D7F1               	goto	u7070
  2661  00241C                     l5365:
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  2665  00241C  0E67               	movlw	103
  2666  00241E  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  2667  002420  A4D8               	btfss	status,2,c
  2668  002422  D024               	goto	l5375
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  2672  002424  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  2673  002426  D006               	goto	u7100
  2674  002428  0EFC               	movlw	252
  2675  00242A  5DC9               	subwf	efgtoa@e& (0+255),w,b
  2676  00242C  0EFF               	movlw	255
  2677  00242E  59CA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2678  002430  A0D8               	btfss	status,0,c
  2679  002432  D01A               	goto	l5373
  2680  002434                     u7100:
  2681                           
  2682                           ; BSR set to: 0
  2683  002434  0EFF               	movlw	255
  2684  002436  6F94               	movwf	??_efgtoa& (0+255),b
  2685  002438  0EFF               	movlw	255
  2686  00243A  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  2687  00243C  0060  F2D4  F096   	movff	efgtoa@p,??_efgtoa+2
  2688  002442  0060  F2D8  F097   	movff	efgtoa@p+1,??_efgtoa+3
  2689  002448  5194               	movf	??_efgtoa& (0+255),w,b
  2690  00244A  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  2691  00244C  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  2692  00244E  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2693  002450  51C9               	movf	efgtoa@e& (0+255),w,b
  2694  002452  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  2695  002454  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  2696  002456  0A80               	xorlw	128
  2697  002458  6F98               	movwf	(??_efgtoa+4)& (0+255),b
  2698  00245A  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  2699  00245C  0A80               	xorlw	128
  2700  00245E  5998               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2701  002460  A0D8               	btfss	status,0,c
  2702  002462  D002               	goto	l5373
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  2706  002464  0E66               	movlw	102
  2707  002466  D001               	goto	L2
  2708  002468                     l5373:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  2712  002468  0E65               	movlw	101
  2713  00246A                     L2:
  2714  00246A  6FB7               	movwf	efgtoa@nmode& (0+255),b
  2715  00246C                     l5375:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  2719  00246C  0060  F2D4  F0AD   	movff	efgtoa@p,efgtoa@m
  2720  002472  0060  F2D8  F0AE   	movff	efgtoa@p+1,efgtoa@m+1
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  2724  002478  0E67               	movlw	103
  2725  00247A  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  2726  00247C  A4D8               	btfss	status,2,c
  2727  00247E  D005               	goto	u7140
  2728                           
  2729                           ; BSR set to: 0
  2730  002480  0E66               	movlw	102
  2731  002482  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  2732  002484  B4D8               	btfsc	status,2,c
  2733                           
  2734                           ; BSR set to: 0
  2735  002486  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  2736  002488  D002               	goto	l5385
  2737  00248A                     u7140:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  2741  00248A  4BAD               	infsnz	efgtoa@m& (0+255),f,b
  2742  00248C  2BAE               	incf	(efgtoa@m+1)& (0+255),f,b
  2743  00248E                     l5385:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  2747  00248E  0E66               	movlw	102
  2748  002490  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  2749  002492  A4D8               	btfss	status,2,c
  2750  002494  D016               	goto	l5395
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  2754  002496  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  2755  002498  D00C               	goto	l5391
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  2759  00249A  0E00               	movlw	0
  2760  00249C  6FCD               	movwf	efgtoa@u& (0+255),b
  2761  00249E  0E00               	movlw	0
  2762  0024A0  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  2763  0024A2  0E80               	movlw	128
  2764  0024A4  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  2765  0024A6  0E3F               	movlw	63
  2766  0024A8  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  2767                           
  2768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  2769  0024AA  0E00               	movlw	0
  2770  0024AC  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  2771  0024AE  0E00               	movlw	0
  2772  0024B0  6FC9               	movwf	efgtoa@e& (0+255),b
  2773  0024B2                     l5391:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  2777  0024B2  0E67               	movlw	103
  2778  0024B4  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  2779  0024B6  B4D8               	btfsc	status,2,c
  2780  0024B8  D004               	goto	l5395
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  2784  0024BA  51C9               	movf	efgtoa@e& (0+255),w,b
  2785  0024BC  27AD               	addwf	efgtoa@m& (0+255),f,b
  2786  0024BE  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  2787  0024C0  23AE               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2788  0024C2                     l5395:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  2792  0024C2  0E00               	movlw	0
  2793  0024C4  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  2794  0024C6  0E00               	movlw	0
  2795  0024C8  6FC3               	movwf	efgtoa@i& (0+255),b
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  2799  0024CA  0060  F314  F0BB   	movff	efgtoa@g,efgtoa@h
  2800  0024D0  0060  F318  F0BC   	movff	efgtoa@g+1,efgtoa@h+1
  2801  0024D6  0060  F31C  F0BD   	movff	efgtoa@g+2,efgtoa@h+2
  2802  0024DC  0060  F320  F0BE   	movff	efgtoa@g+3,efgtoa@h+3
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  2806  0024E2  0060  F334  F099   	movff	efgtoa@u,efgtoa@ou
  2807  0024E8  0060  F338  F09A   	movff	efgtoa@u+1,efgtoa@ou+1
  2808  0024EE  0060  F33C  F09B   	movff	efgtoa@u+2,efgtoa@ou+2
  2809  0024F4  0060  F340  F09C   	movff	efgtoa@u+3,efgtoa@ou+3
  2810                           
  2811                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  2812  0024FA  D0AE               	goto	l5409
  2813  0024FC                     l5401:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  2817  0024FC  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  2818  002502  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  2819  002508  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  2820  00250E  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  2821  002514  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  2822  00251A  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  2823  002520  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  2824  002526  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  2825  00252C  ECED  F01C         	call	___fldiv	;wreg free
  2826  002530  0060  F180  F079   	movff	?___fldiv,floorf@x
  2827  002536  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  2828  00253C  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  2829  002542  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  2830  002548  EC44  F01E         	call	_floorf	;wreg free
  2831  00254C  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  2832  002552  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  2833  002558  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  2834  00255E  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  2835                           
  2836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  2837  002564  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  2838  00256A  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  2839  002570  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  2840  002576  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  2841  00257C  EC3C  F021         	call	___fltol	;wreg free
  2842  002580  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  2843  002586  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  2844                           
  2845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  2846  00258C  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  2847  002592  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  2848  002598  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  2849  00259E  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  2850  0025A4  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  2851  0025AA  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  2852  0025B0  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  2853  0025B6  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  2854  0025BC  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  2855  0025C2  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  2856  0025C8  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  2857  0025CE  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  2858  0025D4  ECCA  F015         	call	___flmul	;wreg free
  2859  0025D8  0060  F180  F07D   	movff	?___flmul,___flsub@a
  2860  0025DE  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  2861  0025E4  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  2862  0025EA  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  2863  0025F0  EC22  F025         	call	___flsub	;wreg free
  2864  0025F4  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  2865  0025FA  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  2866  002600  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  2867  002606  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  2868                           
  2869                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  2870  00260C  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  2871  002612  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  2872  002618  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  2873  00261E  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  2874  002624  0E00               	movlw	0
  2875  002626  0100               	movlb	0	; () banked
  2876  002628  6F64               	movwf	___fldiv@a& (0+255),b
  2877  00262A  0E00               	movlw	0
  2878  00262C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  2879  00262E  0E20               	movlw	32
  2880  002630  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  2881  002632  0E41               	movlw	65
  2882  002634  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  2883  002636  ECED  F01C         	call	___fldiv	;wreg free
  2884  00263A  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  2885  002640  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  2886  002646  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  2887  00264C  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  2888                           
  2889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  2890  002652  0100               	movlb	0	; () banked
  2891  002654  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  2892  002656  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  2893  002658                     l5409:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  2897  002658  51AD               	movf	efgtoa@m& (0+255),w,b
  2898  00265A  5DC3               	subwf	efgtoa@i& (0+255),w,b
  2899  00265C  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  2900  00265E  0A80               	xorlw	128
  2901  002660  6F94               	movwf	??_efgtoa& (0+255),b
  2902  002662  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  2903  002664  0A80               	xorlw	128
  2904  002666  5994               	subwfb	??_efgtoa& (0+255),w,b
  2905  002668  A0D8               	btfss	status,0,c
  2906  00266A  D748               	goto	l5401
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  2910  00266C  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  2911  002672  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  2912  002678  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  2913  00267E  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  2914  002684  0E00               	movlw	0
  2915  002686  6F64               	movwf	___flmul@a& (0+255),b
  2916  002688  0E00               	movlw	0
  2917  00268A  6F65               	movwf	(___flmul@a+1)& (0+255),b
  2918  00268C  0EA0               	movlw	160
  2919  00268E  6F66               	movwf	(___flmul@a+2)& (0+255),b
  2920  002690  0E40               	movlw	64
  2921  002692  6F67               	movwf	(___flmul@a+3)& (0+255),b
  2922  002694  ECCA  F015         	call	___flmul	;wreg free
  2923  002698  0060  F180  F0BF   	movff	?___flmul,efgtoa@l
  2924  00269E  0060  F184  F0C0   	movff	?___flmul+1,efgtoa@l+1
  2925  0026A4  0060  F188  F0C1   	movff	?___flmul+2,efgtoa@l+2
  2926  0026AA  0060  F18C  F0C2   	movff	?___flmul+3,efgtoa@l+3
  2927                           
  2928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  2929  0026B0  0060  F2EC  F079   	movff	efgtoa@h,___flge@ff1
  2930  0026B6  0060  F2F0  F07A   	movff	efgtoa@h+1,___flge@ff1+1
  2931  0026BC  0060  F2F4  F07B   	movff	efgtoa@h+2,___flge@ff1+2
  2932  0026C2  0060  F2F8  F07C   	movff	efgtoa@h+3,___flge@ff1+3
  2933  0026C8  0060  F2FC  F07D   	movff	efgtoa@l,___flge@ff2
  2934  0026CE  0060  F300  F07E   	movff	efgtoa@l+1,___flge@ff2+1
  2935  0026D4  0060  F304  F07F   	movff	efgtoa@l+2,___flge@ff2+2
  2936  0026DA  0060  F308  F080   	movff	efgtoa@l+3,___flge@ff2+3
  2937  0026E0  EC6B  F020         	call	___flge	;wreg free
  2938  0026E4  0100               	movlb	0	; () banked
  2939  0026E6  A0D8               	btfss	status,0,c
  2940  0026E8  D01E               	goto	u7210
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  2944                           
  2945                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 430:     } else {
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  2949  0026EA  0060  F2EC  F060   	movff	efgtoa@h,___fleq@ff1
  2950  0026F0  0060  F2F0  F061   	movff	efgtoa@h+1,___fleq@ff1+1
  2951  0026F6  0060  F2F4  F062   	movff	efgtoa@h+2,___fleq@ff1+2
  2952  0026FC  0060  F2F8  F063   	movff	efgtoa@h+3,___fleq@ff1+3
  2953  002702  0060  F2FC  F064   	movff	efgtoa@l,___fleq@ff2
  2954  002708  0060  F300  F065   	movff	efgtoa@l+1,___fleq@ff2+1
  2955  00270E  0060  F304  F066   	movff	efgtoa@l+2,___fleq@ff2+2
  2956  002714  0060  F308  F067   	movff	efgtoa@l+3,___fleq@ff2+3
  2957  00271A  EC6B  F023         	call	___fleq	;wreg free
  2958  00271E  0100               	movlb	0	; () banked
  2959  002720  B0D8               	btfsc	status,0,c
  2960                           
  2961                           ; BSR set to: 0
  2962  002722  B1B1               	btfsc	efgtoa@d& (0+255),0,b
  2963  002724  D008               	goto	l5423
  2964  002726                     u7210:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  2968  002726  0E00               	movlw	0
  2969  002728  6FBF               	movwf	efgtoa@l& (0+255),b
  2970  00272A  0E00               	movlw	0
  2971  00272C  6FC0               	movwf	(efgtoa@l+1)& (0+255),b
  2972  00272E  0E00               	movlw	0
  2973  002730  6FC1               	movwf	(efgtoa@l+2)& (0+255),b
  2974  002732  0E00               	movlw	0
  2975  002734  6FC2               	movwf	(efgtoa@l+3)& (0+255),b
  2976  002736                     l5423:
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  2980  002736  0060  F314  F060   	movff	efgtoa@g,___fladd@b
  2981  00273C  0060  F318  F061   	movff	efgtoa@g+1,___fladd@b+1
  2982  002742  0060  F31C  F062   	movff	efgtoa@g+2,___fladd@b+2
  2983  002748  0060  F320  F063   	movff	efgtoa@g+3,___fladd@b+3
  2984  00274E  0060  F2FC  F064   	movff	efgtoa@l,___fladd@a
  2985  002754  0060  F300  F065   	movff	efgtoa@l+1,___fladd@a+1
  2986  00275A  0060  F304  F066   	movff	efgtoa@l+2,___fladd@a+2
  2987  002760  0060  F308  F067   	movff	efgtoa@l+3,___fladd@a+3
  2988  002766  EC48  F01B         	call	___fladd	;wreg free
  2989  00276A  0060  F180  F0BB   	movff	?___fladd,efgtoa@h
  2990  002770  0060  F184  F0BC   	movff	?___fladd+1,efgtoa@h+1
  2991  002776  0060  F188  F0BD   	movff	?___fladd+2,efgtoa@h+2
  2992  00277C  0060  F18C  F0BE   	movff	?___fladd+3,efgtoa@h+3
  2993                           
  2994                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  2995  002782  0060  F264  F0CD   	movff	efgtoa@ou,efgtoa@u
  2996  002788  0060  F268  F0CE   	movff	efgtoa@ou+1,efgtoa@u+1
  2997  00278E  0060  F26C  F0CF   	movff	efgtoa@ou+2,efgtoa@u+2
  2998  002794  0060  F270  F0D0   	movff	efgtoa@ou+3,efgtoa@u+3
  2999                           
  3000                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  3001  00279A  0E65               	movlw	101
  3002  00279C  0100               	movlb	0	; () banked
  3003  00279E  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3004  0027A0  B4D8               	btfsc	status,2,c
  3005  0027A2  D007               	goto	l5431
  3006                           
  3007                           ; BSR set to: 0
  3008  0027A4  0060  F324  F0AF   	movff	efgtoa@e,efgtoa@ne
  3009  0027AA  0060  F328  F0B0   	movff	efgtoa@e+1,efgtoa@ne+1
  3010  0027B0  D004               	goto	l367
  3011  0027B2                     l5431:
  3012                           
  3013                           ; BSR set to: 0
  3014  0027B2  0E00               	movlw	0
  3015  0027B4  6FB0               	movwf	(efgtoa@ne+1)& (0+255),b
  3016  0027B6  0E00               	movlw	0
  3017  0027B8  6FAF               	movwf	efgtoa@ne& (0+255),b
  3018  0027BA                     l367:
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  3022  0027BA  0E00               	movlw	0
  3023  0027BC  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  3024  0027BE  0E00               	movlw	0
  3025  0027C0  6FAB               	movwf	efgtoa@pp& (0+255),b
  3026                           
  3027                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  3028  0027C2  0E00               	movlw	0
  3029  0027C4  6FAA               	movwf	(efgtoa@t+1)& (0+255),b
  3030  0027C6  0E00               	movlw	0
  3031  0027C8  6FA9               	movwf	efgtoa@t& (0+255),b
  3032                           
  3033                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  3034  0027CA  0E00               	movlw	0
  3035  0027CC  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3036  0027CE  0E00               	movlw	0
  3037  0027D0  6FC3               	movwf	efgtoa@i& (0+255),b
  3038                           
  3039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3040  0027D2  D0FA               	goto	l5481
  3041  0027D4                     l5433:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  3045  0027D4  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  3046  0027DA  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  3047  0027E0  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  3048  0027E6  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  3049  0027EC  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  3050  0027F2  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  3051  0027F8  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  3052  0027FE  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  3053  002804  ECED  F01C         	call	___fldiv	;wreg free
  3054  002808  0060  F180  F079   	movff	?___fldiv,floorf@x
  3055  00280E  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  3056  002814  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  3057  00281A  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  3058  002820  EC44  F01E         	call	_floorf	;wreg free
  3059  002824  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  3060  00282A  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  3061  002830  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  3062  002836  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  3063                           
  3064                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  3065  00283C  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  3066  002842  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  3067  002848  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  3068  00284E  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  3069  002854  EC3C  F021         	call	___fltol	;wreg free
  3070  002858  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  3071  00285E  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  3072                           
  3073                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3074  002864  B83F               	btfsc	_flags,4,c
  3075  002866  D00D               	goto	l5445
  3076  002868  0100               	movlb	0	; () banked
  3077  00286A  51B1               	movf	efgtoa@d& (0+255),w,b
  3078  00286C  11B2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3079  00286E  A4D8               	btfss	status,2,c
  3080  002870  D008               	goto	l5445
  3081                           
  3082                           ; BSR set to: 0
  3083  002872  0E67               	movlw	103
  3084  002874  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3085  002876  B4D8               	btfsc	status,2,c
  3086                           
  3087                           ; BSR set to: 0
  3088  002878  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3089  00287A  D003               	goto	l5445
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  3093  00287C  4BA9               	infsnz	efgtoa@t& (0+255),f,b
  3094  00287E  2BAA               	incf	(efgtoa@t+1)& (0+255),f,b
  3095                           
  3096                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  3097  002880  D03A               	goto	l5473
  3098  002882                     l5445:
  3099                           
  3100                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  3101  002882  0100               	movlb	0	; () banked
  3102  002884  51AB               	movf	efgtoa@pp& (0+255),w,b
  3103  002886  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3104  002888  B4D8               	btfsc	status,2,c
  3105                           
  3106                           ; BSR set to: 0
  3107  00288A  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3108  00288C  D022               	goto	l5465
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  3112  00288E  0E20               	movlw	low _dbuf
  3113  002890  25CB               	addwf	efgtoa@n& (0+255),w,b
  3114  002892  6ED9               	movwf	fsr2l,c
  3115  002894  0E01               	movlw	high _dbuf
  3116  002896  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3117  002898  6EDA               	movwf	fsr2h,c
  3118  00289A  0E2E               	movlw	46
  3119  00289C  6EDF               	movwf	indf2,c
  3120                           
  3121                           ; BSR set to: 0
  3122  00289E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3123  0028A0  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  3127  0028A2  07B8               	decf	efgtoa@w& (0+255),f,b
  3128  0028A4  A0D8               	btfss	status,0,c
  3129  0028A6  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  3133  0028A8  0E00               	movlw	0
  3134  0028AA  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  3135  0028AC  0E01               	movlw	1
  3136  0028AE  6FAB               	movwf	efgtoa@pp& (0+255),b
  3137  0028B0  D010               	goto	l5465
  3138  0028B2                     l5457:
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  3142  0028B2  0E20               	movlw	low _dbuf
  3143  0028B4  25CB               	addwf	efgtoa@n& (0+255),w,b
  3144  0028B6  6ED9               	movwf	fsr2l,c
  3145  0028B8  0E01               	movlw	high _dbuf
  3146  0028BA  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3147  0028BC  6EDA               	movwf	fsr2h,c
  3148  0028BE  0E30               	movlw	48
  3149  0028C0  6EDF               	movwf	indf2,c
  3150                           
  3151                           ; BSR set to: 0
  3152  0028C2  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3153  0028C4  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  3157  0028C6  07B8               	decf	efgtoa@w& (0+255),f,b
  3158  0028C8  A0D8               	btfss	status,0,c
  3159  0028CA  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  3163  0028CC  07A9               	decf	efgtoa@t& (0+255),f,b
  3164  0028CE  A0D8               	btfss	status,0,c
  3165  0028D0  07AA               	decf	(efgtoa@t+1)& (0+255),f,b
  3166  0028D2                     l5465:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  3170  0028D2  51A9               	movf	efgtoa@t& (0+255),w,b
  3171  0028D4  11AA               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3172  0028D6  A4D8               	btfss	status,2,c
  3173  0028D8  D7EC               	goto	l5457
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  3177  0028DA  0E20               	movlw	low _dbuf
  3178  0028DC  25CB               	addwf	efgtoa@n& (0+255),w,b
  3179  0028DE  6ED9               	movwf	fsr2l,c
  3180  0028E0  0E01               	movlw	high _dbuf
  3181  0028E2  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3182  0028E4  6EDA               	movwf	fsr2h,c
  3183  0028E6  51B1               	movf	efgtoa@d& (0+255),w,b
  3184  0028E8  0F30               	addlw	48
  3185  0028EA  6EDF               	movwf	indf2,c
  3186                           
  3187                           ; BSR set to: 0
  3188  0028EC  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3189  0028EE  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  3193  0028F0  07B8               	decf	efgtoa@w& (0+255),f,b
  3194  0028F2  A0D8               	btfss	status,0,c
  3195  0028F4  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3196  0028F6                     l5473:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  3200  0028F6  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  3201  0028FC  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  3202  002902  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  3203  002908  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  3204  00290E  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  3205  002914  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  3206  00291A  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  3207  002920  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  3208  002926  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  3209  00292C  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  3210  002932  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  3211  002938  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  3212  00293E  ECCA  F015         	call	___flmul	;wreg free
  3213  002942  0060  F180  F07D   	movff	?___flmul,___flsub@a
  3214  002948  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  3215  00294E  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  3216  002954  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  3217  00295A  EC22  F025         	call	___flsub	;wreg free
  3218  00295E  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  3219  002964  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  3220  00296A  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  3221  002970  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  3222                           
  3223                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  3224  002976  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3225  00297C  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3226  002982  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3227  002988  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3228  00298E  0E00               	movlw	0
  3229  002990  0100               	movlb	0	; () banked
  3230  002992  6F64               	movwf	___fldiv@a& (0+255),b
  3231  002994  0E00               	movlw	0
  3232  002996  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3233  002998  0E20               	movlw	32
  3234  00299A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3235  00299C  0E41               	movlw	65
  3236  00299E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3237  0029A0  ECED  F01C         	call	___fldiv	;wreg free
  3238  0029A4  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3239  0029AA  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3240  0029B0  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3241  0029B6  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3242                           
  3243                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  3244  0029BC  0100               	movlb	0	; () banked
  3245  0029BE  07AF               	decf	efgtoa@ne& (0+255),f,b
  3246  0029C0  A0D8               	btfss	status,0,c
  3247  0029C2  07B0               	decf	(efgtoa@ne+1)& (0+255),f,b
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  3251  0029C4  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  3252  0029C6  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  3253  0029C8                     l5481:
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3257  0029C8  51AD               	movf	efgtoa@m& (0+255),w,b
  3258  0029CA  5DC3               	subwf	efgtoa@i& (0+255),w,b
  3259  0029CC  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  3260  0029CE  0A80               	xorlw	128
  3261  0029D0  6F94               	movwf	??_efgtoa& (0+255),b
  3262  0029D2  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  3263  0029D4  0A80               	xorlw	128
  3264  0029D6  5994               	subwfb	??_efgtoa& (0+255),w,b
  3265  0029D8  B0D8               	btfsc	status,0,c
  3266  0029DA  D008               	goto	u7310
  3267                           
  3268                           ; BSR set to: 0
  3269  0029DC  BFCC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3270  0029DE  D6FA               	goto	l5433
  3271  0029E0  51CC               	movf	(efgtoa@n+1)& (0+255),w,b
  3272  0029E2  E104               	bnz	u7310
  3273  0029E4  0E4B               	movlw	75
  3274  0029E6  5DCB               	subwf	efgtoa@n& (0+255),w,b
  3275  0029E8  A0D8               	btfss	status,0,c
  3276  0029EA  D6F4               	goto	l5433
  3277  0029EC                     u7310:
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  3281  0029EC  51AB               	movf	efgtoa@pp& (0+255),w,b
  3282  0029EE  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3283  0029F0  B4D8               	btfsc	status,2,c
  3284                           
  3285                           ; BSR set to: 0
  3286  0029F2  A83F               	btfss	_flags,4,c
  3287  0029F4  D00A               	goto	l5493
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  3291  0029F6  0E20               	movlw	low _dbuf
  3292  0029F8  25CB               	addwf	efgtoa@n& (0+255),w,b
  3293  0029FA  6ED9               	movwf	fsr2l,c
  3294  0029FC  0E01               	movlw	high _dbuf
  3295  0029FE  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3296  002A00  6EDA               	movwf	fsr2h,c
  3297  002A02  0E2E               	movlw	46
  3298  002A04  6EDF               	movwf	indf2,c
  3299                           
  3300                           ; BSR set to: 0
  3301  002A06  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3302  002A08  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3303  002A0A                     l5493:
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  3307  002A0A  0E20               	movlw	low _dbuf
  3308  002A0C  25CB               	addwf	efgtoa@n& (0+255),w,b
  3309  002A0E  6ED9               	movwf	fsr2l,c
  3310  002A10  0E01               	movlw	high _dbuf
  3311  002A12  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3312  002A14  6EDA               	movwf	fsr2h,c
  3313  002A16  0E00               	movlw	0
  3314  002A18  6EDF               	movwf	indf2,c
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  3318  002A1A  0E65               	movlw	101
  3319  002A1C  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3320  002A1E  A4D8               	btfss	status,2,c
  3321  002A20  EFBD  F010         	goto	l5305
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  3325  002A24  0E00               	movlw	0
  3326  002A26  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3327  002A28  0E4F               	movlw	79
  3328  002A2A  6FC3               	movwf	efgtoa@i& (0+255),b
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  3332  002A2C  0E20               	movlw	low _dbuf
  3333  002A2E  25C3               	addwf	efgtoa@i& (0+255),w,b
  3334  002A30  6ED9               	movwf	fsr2l,c
  3335  002A32  0E01               	movlw	high _dbuf
  3336  002A34  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3337  002A36  6EDA               	movwf	fsr2h,c
  3338  002A38  0E00               	movlw	0
  3339  002A3A  6EDF               	movwf	indf2,c
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  3343  002A3C  0E00               	movlw	0
  3344  002A3E  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3345  002A40  0E00               	movlw	0
  3346  002A42  6FB3               	movwf	efgtoa@sign& (0+255),b
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  3350  002A44  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3351  002A46  D008               	goto	l5509
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  3355  002A48  0E00               	movlw	0
  3356  002A4A  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3357  002A4C  0E01               	movlw	1
  3358  002A4E  6FB3               	movwf	efgtoa@sign& (0+255),b
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  3362  002A50  6DC9               	negf	efgtoa@e& (0+255),b
  3363  002A52  1FCA               	comf	(efgtoa@e+1)& (0+255),f,b
  3364  002A54  B0D8               	btfsc	status,0,c
  3365  002A56  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  3366  002A58                     l5509:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  3370  002A58  0E00               	movlw	0
  3371  002A5A  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  3372  002A5C  0E02               	movlw	2
  3373  002A5E  6FB5               	movwf	efgtoa@p& (0+255),b
  3374                           
  3375                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3376  002A60  D032               	goto	l5521
  3377  002A62                     l5511:
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  3381  002A62  07C3               	decf	efgtoa@i& (0+255),f,b
  3382  002A64  A0D8               	btfss	status,0,c
  3383  002A66  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  3387  002A68  0E20               	movlw	low _dbuf
  3388  002A6A  25C3               	addwf	efgtoa@i& (0+255),w,b
  3389  002A6C  6ED9               	movwf	fsr2l,c
  3390  002A6E  0E01               	movlw	high _dbuf
  3391  002A70  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3392  002A72  6EDA               	movwf	fsr2h,c
  3393  002A74  0060  F324  F060   	movff	efgtoa@e,___awmod@dividend
  3394  002A7A  0060  F328  F061   	movff	efgtoa@e+1,___awmod@dividend+1
  3395  002A80  0E00               	movlw	0
  3396  002A82  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3397  002A84  0E0A               	movlw	10
  3398  002A86  6F62               	movwf	___awmod@divisor& (0+255),b
  3399  002A88  EC7B  F024         	call	___awmod	;wreg free
  3400  002A8C  0100               	movlb	0	; () banked
  3401  002A8E  5160               	movf	?___awmod& (0+255),w,b
  3402  002A90  0F30               	addlw	48
  3403  002A92  6EDF               	movwf	indf2,c
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  3407  002A94  0060  F324  F060   	movff	efgtoa@e,___awdiv@dividend
  3408  002A9A  0060  F328  F061   	movff	efgtoa@e+1,___awdiv@dividend+1
  3409  002AA0  0E00               	movlw	0
  3410  002AA2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3411  002AA4  0E0A               	movlw	10
  3412  002AA6  6F62               	movwf	___awdiv@divisor& (0+255),b
  3413  002AA8  ECB1  F023         	call	___awdiv	;wreg free
  3414  002AAC  0060  F180  F0C9   	movff	?___awdiv,efgtoa@e
  3415  002AB2  0060  F184  F0CA   	movff	?___awdiv+1,efgtoa@e+1
  3416                           
  3417                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  3418  002AB8  0100               	movlb	0	; () banked
  3419  002ABA  07B5               	decf	efgtoa@p& (0+255),f,b
  3420  002ABC  A0D8               	btfss	status,0,c
  3421  002ABE  07B6               	decf	(efgtoa@p+1)& (0+255),f,b
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  3425  002AC0  07B8               	decf	efgtoa@w& (0+255),f,b
  3426  002AC2  A0D8               	btfss	status,0,c
  3427  002AC4  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3428  002AC6                     l5521:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3432  002AC6  51C9               	movf	efgtoa@e& (0+255),w,b
  3433  002AC8  11CA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3434  002ACA  A4D8               	btfss	status,2,c
  3435  002ACC  D7CA               	goto	l5511
  3436                           
  3437                           ; BSR set to: 0
  3438  002ACE  BFB6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3439  002AD0  D005               	goto	u7370
  3440  002AD2  51B6               	movf	(efgtoa@p+1)& (0+255),w,b
  3441  002AD4  E1C6               	bnz	l5511
  3442  002AD6  05B5               	decf	efgtoa@p& (0+255),w,b
  3443  002AD8  B0D8               	btfsc	status,0,c
  3444  002ADA  D7C3               	goto	l5511
  3445  002ADC                     u7370:
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  3449  002ADC  07C3               	decf	efgtoa@i& (0+255),f,b
  3450  002ADE  A0D8               	btfss	status,0,c
  3451  002AE0  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  3455  002AE2  51B3               	movf	efgtoa@sign& (0+255),w,b
  3456  002AE4  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3457  002AE6  A4D8               	btfss	status,2,c
  3458  002AE8  D004               	goto	l5531
  3459                           
  3460                           ; BSR set to: 0
  3461  002AEA  0E00               	movlw	0
  3462  002AEC  6FA4               	movwf	(_efgtoa$1034+1)& (0+255),b
  3463  002AEE  0E2B               	movlw	43
  3464  002AF0  D003               	goto	L3
  3465  002AF2                     l5531:
  3466                           
  3467                           ; BSR set to: 0
  3468  002AF2  0E00               	movlw	0
  3469  002AF4  6FA4               	movwf	(_efgtoa$1034+1)& (0+255),b
  3470  002AF6  0E2D               	movlw	45
  3471  002AF8                     L3:
  3472  002AF8  6FA3               	movwf	_efgtoa$1034& (0+255),b
  3473                           
  3474                           ; BSR set to: 0
  3475  002AFA  0E20               	movlw	low _dbuf
  3476  002AFC  25C3               	addwf	efgtoa@i& (0+255),w,b
  3477  002AFE  6ED9               	movwf	fsr2l,c
  3478  002B00  0E01               	movlw	high _dbuf
  3479  002B02  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3480  002B04  6EDA               	movwf	fsr2h,c
  3481  002B06  0060  F28F  FFDF   	movff	_efgtoa$1034,indf2
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  3485  002B0C  07B8               	decf	efgtoa@w& (0+255),f,b
  3486  002B0E  A0D8               	btfss	status,0,c
  3487  002B10  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3491  002B12  07C3               	decf	efgtoa@i& (0+255),f,b
  3492  002B14  A0D8               	btfss	status,0,c
  3493  002B16  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3494                           
  3495                           ; BSR set to: 0
  3496  002B18  0EBF               	movlw	191
  3497  002B1A  6F94               	movwf	??_efgtoa& (0+255),b
  3498  002B1C  0EFF               	movlw	255
  3499  002B1E  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  3500  002B20  5193               	movf	efgtoa@c& (0+255),w,b
  3501  002B22  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  3502  002B24  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  3503  002B26  5194               	movf	??_efgtoa& (0+255),w,b
  3504  002B28  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  3505  002B2A  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  3506  002B2C  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3507  002B2E  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  3508  002B30  E106               	bnz	u7390
  3509  002B32  0E1A               	movlw	26
  3510  002B34  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  3511  002B36  B0D8               	btfsc	status,0,c
  3512  002B38  D002               	goto	u7390
  3513  002B3A  0E01               	movlw	1
  3514  002B3C  D001               	goto	u7400
  3515  002B3E                     u7390:
  3516  002B3E  0E00               	movlw	0
  3517  002B40                     u7400:
  3518  002B40  6FA7               	movwf	_efgtoa$1036& (0+255),b
  3519  002B42  6BA8               	clrf	(_efgtoa$1036+1)& (0+255),b
  3520                           
  3521                           ; BSR set to: 0
  3522  002B44  51A7               	movf	_efgtoa$1036& (0+255),w,b
  3523  002B46  11A8               	iorwf	(_efgtoa$1036+1)& (0+255),w,b
  3524  002B48  A4D8               	btfss	status,2,c
  3525  002B4A  D004               	goto	l5547
  3526                           
  3527                           ; BSR set to: 0
  3528  002B4C  0E00               	movlw	0
  3529  002B4E  6FA6               	movwf	(_efgtoa$1035+1)& (0+255),b
  3530  002B50  0E65               	movlw	101
  3531  002B52  D003               	goto	L4
  3532  002B54                     l5547:
  3533                           
  3534                           ; BSR set to: 0
  3535  002B54  0E00               	movlw	0
  3536  002B56  6FA6               	movwf	(_efgtoa$1035+1)& (0+255),b
  3537  002B58  0E45               	movlw	69
  3538  002B5A                     L4:
  3539  002B5A  6FA5               	movwf	_efgtoa$1035& (0+255),b
  3540                           
  3541                           ; BSR set to: 0
  3542  002B5C  0E20               	movlw	low _dbuf
  3543  002B5E  25C3               	addwf	efgtoa@i& (0+255),w,b
  3544  002B60  6ED9               	movwf	fsr2l,c
  3545  002B62  0E01               	movlw	high _dbuf
  3546  002B64  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3547  002B66  6EDA               	movwf	fsr2h,c
  3548  002B68  0060  F297  FFDF   	movff	_efgtoa$1035,indf2
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  3552  002B6E  07B8               	decf	efgtoa@w& (0+255),f,b
  3553  002B70  A0D8               	btfss	status,0,c
  3554  002B72  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  3558  002B74  0E20               	movlw	low _dbuf
  3559  002B76  25CB               	addwf	efgtoa@n& (0+255),w,b
  3560  002B78  6F60               	movwf	strcpy@dest& (0+255),b
  3561  002B7A  0E01               	movlw	high _dbuf
  3562  002B7C  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3563  002B7E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3564  002B80  0E20               	movlw	low _dbuf
  3565  002B82  25C3               	addwf	efgtoa@i& (0+255),w,b
  3566  002B84  6F62               	movwf	strcpy@src& (0+255),b
  3567  002B86  0E01               	movlw	high _dbuf
  3568  002B88  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3569  002B8A  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3570  002B8C  ECED  F024         	call	_strcpy	;wreg free
  3571  002B90  EFBD  F010         	goto	l5305
  3572  002B94                     __end_of_efgtoa:
  3573                           	opt callstack 0
  3574                           
  3575 ;; *************** function _tolower *****************
  3576 ;; Defined at:
  3577 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  c               2    6[BANK0 ] int 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  2    6[BANK0 ] int 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3591 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3592 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3593 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3594 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3595 ;;Total ram usage:        8 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    3
  3598 ;; This function calls:
  3599 ;;		_isupper
  3600 ;; This function is called by:
  3601 ;;		_efgtoa
  3602 ;;		_vfpfcnvrt
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text8
  3607  004B54                     __ptext8:
  3608                           	opt callstack 0
  3609  004B54                     _tolower:
  3610                           	opt callstack 23
  3611                           
  3612                           ;incstack = 0
  3613  004B54  0EBF               	movlw	191
  3614  004B56  0100               	movlb	0	; () banked
  3615  004B58  6F68               	movwf	??_tolower& (0+255),b
  3616  004B5A  0EFF               	movlw	255
  3617  004B5C  6F69               	movwf	(??_tolower+1)& (0+255),b
  3618  004B5E  0060  F198  F06A   	movff	tolower@c,??_tolower+2
  3619  004B64  0060  F19C  F06B   	movff	tolower@c+1,??_tolower+3
  3620  004B6A  5168               	movf	??_tolower& (0+255),w,b
  3621  004B6C  276A               	addwf	(??_tolower+2)& (0+255),f,b
  3622  004B6E  5169               	movf	(??_tolower+1)& (0+255),w,b
  3623  004B70  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  3624  004B72  516B               	movf	(??_tolower+3)& (0+255),w,b
  3625  004B74  E106               	bnz	u6070
  3626  004B76  0E1A               	movlw	26
  3627  004B78  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  3628  004B7A  B0D8               	btfsc	status,0,c
  3629  004B7C  D002               	goto	u6070
  3630  004B7E  0E01               	movlw	1
  3631  004B80  D001               	goto	u6080
  3632  004B82                     u6070:
  3633  004B82  0E00               	movlw	0
  3634  004B84                     u6080:
  3635  004B84  6F6C               	movwf	_tolower$1608& (0+255),b
  3636  004B86  6B6D               	clrf	(_tolower$1608+1)& (0+255),b
  3637                           
  3638                           ; BSR set to: 0
  3639  004B88  516C               	movf	_tolower$1608& (0+255),w,b
  3640  004B8A  116D               	iorwf	(_tolower$1608+1)& (0+255),w,b
  3641  004B8C  B4D8               	btfsc	status,2,c
  3642  004B8E  D006               	goto	l1177
  3643                           
  3644                           ; BSR set to: 0
  3645  004B90  0E20               	movlw	32
  3646  004B92  1166               	iorwf	tolower@c& (0+255),w,b
  3647  004B94  6F66               	movwf	?_tolower& (0+255),b
  3648  004B96  5167               	movf	(tolower@c+1)& (0+255),w,b
  3649  004B98  6F67               	movwf	(?_tolower+1)& (0+255),b
  3650  004B9A  0012               	return	
  3651  004B9C                     l1177:
  3652                           
  3653                           ; BSR set to: 0
  3654  004B9C  0060  F198  F066   	movff	tolower@c,?_tolower
  3655  004BA2  0060  F19C  F067   	movff	tolower@c+1,?_tolower+1
  3656                           
  3657                           ; BSR set to: 0
  3658  004BA8  0012               	return		;funcret
  3659  004BAA                     __end_of_tolower:
  3660                           	opt callstack 0
  3661                           
  3662 ;; *************** function _isupper *****************
  3663 ;; Defined at:
  3664 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  c               2    0[BANK0 ] int 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  2    0[BANK0 ] int 
  3671 ;; Registers used:
  3672 ;;		wreg, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3678 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3680 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3681 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3682 ;;Total ram usage:        6 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    2
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_efgtoa
  3689 ;;		_vfpfcnvrt
  3690 ;;		_tolower
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text9
  3695  004C9A                     __ptext9:
  3696                           	opt callstack 0
  3697  004C9A                     _isupper:
  3698                           	opt callstack 23
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;incstack = 0
  3702  004C9A  0EBF               	movlw	191
  3703  004C9C  0100               	movlb	0	; () banked
  3704  004C9E  6F62               	movwf	??_isupper& (0+255),b
  3705  004CA0  0EFF               	movlw	255
  3706  004CA2  6F63               	movwf	(??_isupper+1)& (0+255),b
  3707  004CA4  0060  F180  F064   	movff	isupper@c,??_isupper+2
  3708  004CAA  0060  F184  F065   	movff	isupper@c+1,??_isupper+3
  3709  004CB0  5162               	movf	??_isupper& (0+255),w,b
  3710  004CB2  2764               	addwf	(??_isupper+2)& (0+255),f,b
  3711  004CB4  5163               	movf	(??_isupper+1)& (0+255),w,b
  3712  004CB6  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  3713  004CB8  5165               	movf	(??_isupper+3)& (0+255),w,b
  3714  004CBA  E106               	bnz	u5530
  3715  004CBC  0E1A               	movlw	26
  3716  004CBE  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  3717  004CC0  B0D8               	btfsc	status,0,c
  3718  004CC2  D002               	goto	u5530
  3719  004CC4  0E01               	movlw	1
  3720  004CC6  D001               	goto	u5540
  3721  004CC8                     u5530:
  3722  004CC8  0E00               	movlw	0
  3723  004CCA                     u5540:
  3724  004CCA  6F60               	movwf	?_isupper& (0+255),b
  3725  004CCC  6B61               	clrf	(?_isupper+1)& (0+255),b
  3726                           
  3727                           ; BSR set to: 0
  3728  004CCE  0012               	return		;funcret
  3729  004CD0                     __end_of_isupper:
  3730                           	opt callstack 0
  3731                           
  3732 ;; *************** function _strcpy *****************
  3733 ;; Defined at:
  3734 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  3737 ;;		 -> dbuf(80), 
  3738 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  3739 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3740 ;;		 -> dbuf(80), 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  d               2    8[BANK0 ] PTR unsigned char 
  3743 ;;		 -> dbuf(80), 
  3744 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  3745 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3746 ;;		 -> dbuf(80), 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  2    0[BANK0 ] PTR unsigned char 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3756 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3757 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3758 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3759 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3760 ;;Total ram usage:       10 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    2
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_efgtoa
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text10
  3771  0049DA                     __ptext10:
  3772                           	opt callstack 0
  3773  0049DA                     _strcpy:
  3774                           	opt callstack 23
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;incstack = 0
  3778  0049DA  0060  F188  F066   	movff	strcpy@src,strcpy@s
  3779  0049E0  0060  F18C  F067   	movff	strcpy@src+1,strcpy@s+1
  3780  0049E6  0060  F180  F068   	movff	strcpy@dest,strcpy@d
  3781  0049EC  0060  F184  F069   	movff	strcpy@dest+1,strcpy@d+1
  3782  0049F2                     l4777:
  3783  0049F2  0100               	movlb	0	; () banked
  3784  0049F4  5166               	movf	strcpy@s& (0+255),w,b
  3785  0049F6  6F64               	movwf	??_strcpy& (0+255),b
  3786  0049F8  5167               	movf	(strcpy@s+1)& (0+255),w,b
  3787  0049FA  6F65               	movwf	(??_strcpy+1)& (0+255),b
  3788  0049FC  4B66               	infsnz	strcpy@s& (0+255),f,b
  3789  0049FE  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  3790  004A00  0060  F193  FFF6   	movff	??_strcpy,tblptrl
  3791  004A06  0060  F197  FFF7   	movff	??_strcpy+1,tblptrh
  3792  004A0C  0E00               	movlw	low (__smallconst shr (0+16))
  3793  004A0E  6EF8               	movwf	tblptru,c
  3794  004A10  0060  F1A3  FFD9   	movff	strcpy@d,fsr2l
  3795  004A16  0060  F1A7  FFDA   	movff	strcpy@d+1,fsr2h
  3796  004A1C  4B68               	infsnz	strcpy@d& (0+255),f,b
  3797  004A1E  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  3798  004A20  0E1F               	movlw	(high __ramtop+-1)
  3799  004A22  64F7               	cpfsgt	tblptrh,c
  3800  004A24  D003               	bra	u6057
  3801  004A26  0008               	tblrd		*
  3802  004A28  50F5               	movf	tablat,w,c
  3803  004A2A  D007               	bra	u6050
  3804  004A2C                     u6057:
  3805  004A2C  006F FFDB FFE1     	movff	tblptrl,fsr1l
  3806  004A32  006F FFDF FFE2     	movff	tblptrh,fsr1h
  3807  004A38  50E7               	movf	indf1,w,c
  3808  004A3A                     u6050:
  3809  004A3A  6EDF               	movwf	indf2,c
  3810  004A3C  50DF               	movf	indf2,w,c
  3811  004A3E  B4D8               	btfsc	status,2,c
  3812  004A40  0012               	return	
  3813  004A42  D7D7               	goto	l4777
  3814  004A44                     __end_of_strcpy:
  3815                           	opt callstack 0
  3816                           
  3817 ;; *************** function _pad *****************
  3818 ;; Defined at:
  3819 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3822 ;;		 -> sprintf@f(6), 
  3823 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  3824 ;;		 -> dbuf(80), 
  3825 ;;  p               2   20[BANK0 ] int 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  w               2   25[BANK0 ] int 
  3828 ;;  i               2   23[BANK0 ] int 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  2   16[BANK0 ] int 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3838 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3839 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3840 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3841 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3842 ;;Total ram usage:       11 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    5
  3845 ;; This function calls:
  3846 ;;		_fputc
  3847 ;;		_fputs
  3848 ;;		_strlen
  3849 ;; This function is called by:
  3850 ;;		_efgtoa
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text11
  3855  00440E                     __ptext11:
  3856                           	opt callstack 0
  3857  00440E                     _pad:
  3858                           	opt callstack 20
  3859                           
  3860                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  3861                           
  3862                           ;incstack = 0
  3863  00440E  A03F               	btfss	_flags,0,c
  3864  004410  D00E               	goto	l4735
  3865                           
  3866                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  3867  004412  0060  F1C8  F069   	movff	pad@buf,fputs@s
  3868  004418  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
  3869  00441E  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
  3870  004424  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
  3871  00442A  ECD5  F025         	call	_fputs	;wreg free
  3872  00442E                     l4735:
  3873                           
  3874                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  3875  00442E  0100               	movlb	0	; () banked
  3876  004430  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  3877  004432  D007               	goto	l4739
  3878                           
  3879                           ; BSR set to: 0
  3880  004434  0060  F1D0  F079   	movff	pad@p,pad@w
  3881  00443A  0060  F1D4  F07A   	movff	pad@p+1,pad@w+1
  3882  004440  D004               	goto	l300
  3883  004442                     l4739:
  3884                           
  3885                           ; BSR set to: 0
  3886  004442  0E00               	movlw	0
  3887  004444  6F7A               	movwf	(pad@w+1)& (0+255),b
  3888  004446  0E00               	movlw	0
  3889  004448  6F79               	movwf	pad@w& (0+255),b
  3890  00444A                     l300:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3894  00444A  0E00               	movlw	0
  3895  00444C  6F78               	movwf	(pad@i+1)& (0+255),b
  3896  00444E  0E00               	movlw	0
  3897  004450  6F77               	movwf	pad@i& (0+255),b
  3898                           
  3899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3900  004452  D00F               	goto	l4745
  3901  004454                     l4741:
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  3905  004454  0E00               	movlw	0
  3906  004456  6F61               	movwf	(fputc@c+1)& (0+255),b
  3907  004458  0E20               	movlw	32
  3908  00445A  6F60               	movwf	fputc@c& (0+255),b
  3909  00445C  0060  F1C0  F062   	movff	pad@fp,fputc@fp
  3910  004462  0060  F1C4  F063   	movff	pad@fp+1,fputc@fp+1
  3911  004468  ECBC  F022         	call	_fputc	;wreg free
  3912                           
  3913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3914  00446C  0100               	movlb	0	; () banked
  3915  00446E  4B77               	infsnz	pad@i& (0+255),f,b
  3916  004470  2B78               	incf	(pad@i+1)& (0+255),f,b
  3917  004472                     l4745:
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3921  004472  5179               	movf	pad@w& (0+255),w,b
  3922  004474  5D77               	subwf	pad@i& (0+255),w,b
  3923  004476  5178               	movf	(pad@i+1)& (0+255),w,b
  3924  004478  0A80               	xorlw	128
  3925  00447A  6F76               	movwf	??_pad& (0+255),b
  3926  00447C  517A               	movf	(pad@w+1)& (0+255),w,b
  3927  00447E  0A80               	xorlw	128
  3928  004480  5976               	subwfb	??_pad& (0+255),w,b
  3929  004482  A0D8               	btfss	status,0,c
  3930  004484  D7E7               	goto	l4741
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  3934  004486  B03F               	btfsc	_flags,0,c
  3935  004488  D00E               	goto	l4749
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  3939  00448A  0060  F1C8  F069   	movff	pad@buf,fputs@s
  3940  004490  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
  3941  004496  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
  3942  00449C  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
  3943  0044A2  ECD5  F025         	call	_fputs	;wreg free
  3944  0044A6                     l4749:
  3945                           
  3946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  3947  0044A6  0060  F1C8  F060   	movff	pad@buf,strlen@s
  3948  0044AC  0060  F1CC  F061   	movff	pad@buf+1,strlen@s+1
  3949  0044B2  EC68  F026         	call	_strlen	;wreg free
  3950  0044B6  0100               	movlb	0	; () banked
  3951  0044B8  5179               	movf	pad@w& (0+255),w,b
  3952  0044BA  2560               	addwf	?_strlen& (0+255),w,b
  3953  0044BC  6F70               	movwf	?_pad& (0+255),b
  3954  0044BE  517A               	movf	(pad@w+1)& (0+255),w,b
  3955  0044C0  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  3956  0044C2  6F71               	movwf	(?_pad+1)& (0+255),b
  3957                           
  3958                           ; BSR set to: 0
  3959  0044C4  0012               	return		;funcret
  3960  0044C6                     __end_of_pad:
  3961                           	opt callstack 0
  3962                           
  3963 ;; *************** function _strlen *****************
  3964 ;; Defined at:
  3965 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3968 ;;		 -> dbuf(80), 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  3971 ;;		 -> dbuf(80), 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  2    0[BANK0 ] unsigned int 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3981 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3982 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3984 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3985 ;;Total ram usage:        4 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    2
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_pad
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text12
  3996  004CD0                     __ptext12:
  3997                           	opt callstack 0
  3998  004CD0                     _strlen:
  3999                           	opt callstack 22
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;incstack = 0
  4003  004CD0  0060  F180  F062   	movff	strlen@s,strlen@a
  4004  004CD6  0060  F184  F063   	movff	strlen@s+1,strlen@a+1
  4005  004CDC  D003               	goto	l4519
  4006  004CDE                     l4517:
  4007  004CDE  0100               	movlb	0	; () banked
  4008  004CE0  4B60               	infsnz	strlen@s& (0+255),f,b
  4009  004CE2  2B61               	incf	(strlen@s+1)& (0+255),f,b
  4010  004CE4                     l4519:
  4011  004CE4  0060  F183  FFD9   	movff	strlen@s,fsr2l
  4012  004CEA  0060  F187  FFDA   	movff	strlen@s+1,fsr2h
  4013  004CF0  50DF               	movf	indf2,w,c
  4014  004CF2  A4D8               	btfss	status,2,c
  4015  004CF4  D7F4               	goto	l4517
  4016  004CF6  0100               	movlb	0	; () banked
  4017  004CF8  5162               	movf	strlen@a& (0+255),w,b
  4018  004CFA  5D60               	subwf	strlen@s& (0+255),w,b
  4019  004CFC  6F60               	movwf	?_strlen& (0+255),b
  4020  004CFE  5163               	movf	(strlen@a+1)& (0+255),w,b
  4021  004D00  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  4022  004D02  6F61               	movwf	(?_strlen+1)& (0+255),b
  4023                           
  4024                           ; BSR set to: 0
  4025  004D04  0012               	return		;funcret
  4026  004D06                     __end_of_strlen:
  4027                           	opt callstack 0
  4028                           
  4029 ;; *************** function _fputs *****************
  4030 ;; Defined at:
  4031 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4034 ;;		 -> dbuf(80), 
  4035 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4036 ;;		 -> sprintf@f(6), 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  i               2   14[BANK0 ] int 
  4039 ;;  c               1   13[BANK0 ] unsigned char 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  2    9[BANK0 ] int 
  4042 ;; Registers used:
  4043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4050 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4052 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4053 ;;Total ram usage:        7 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    4
  4056 ;; This function calls:
  4057 ;;		_fputc
  4058 ;; This function is called by:
  4059 ;;		_pad
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text13
  4064  004BAA                     __ptext13:
  4065                           	opt callstack 0
  4066  004BAA                     _fputs:
  4067                           	opt callstack 20
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;incstack = 0
  4071  004BAA  0E00               	movlw	0
  4072  004BAC  0100               	movlb	0	; () banked
  4073  004BAE  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4074  004BB0  0E00               	movlw	0
  4075  004BB2  6F6E               	movwf	fputs@i& (0+255),b
  4076  004BB4  D00F               	goto	l4513
  4077  004BB6                     l4509:
  4078                           
  4079                           ; BSR set to: 0
  4080  004BB6  0060  F1B4  F060   	movff	fputs@c,fputc@c
  4081  004BBC  6B61               	clrf	(fputc@c+1)& (0+255),b
  4082  004BBE  0060  F1AC  F062   	movff	fputs@fp,fputc@fp
  4083  004BC4  0060  F1B0  F063   	movff	fputs@fp+1,fputc@fp+1
  4084  004BCA  ECBC  F022         	call	_fputc	;wreg free
  4085  004BCE  0100               	movlb	0	; () banked
  4086  004BD0  4B6E               	infsnz	fputs@i& (0+255),f,b
  4087  004BD2  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4088  004BD4                     l4513:
  4089                           
  4090                           ; BSR set to: 0
  4091  004BD4  516E               	movf	fputs@i& (0+255),w,b
  4092  004BD6  2569               	addwf	fputs@s& (0+255),w,b
  4093  004BD8  6ED9               	movwf	fsr2l,c
  4094  004BDA  516F               	movf	(fputs@i+1)& (0+255),w,b
  4095  004BDC  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4096  004BDE  6EDA               	movwf	fsr2h,c
  4097  004BE0  50DF               	movf	indf2,w,c
  4098  004BE2  6F6D               	movwf	fputs@c& (0+255),b
  4099  004BE4  516D               	movf	fputs@c& (0+255),w,b
  4100  004BE6  B4D8               	btfsc	status,2,c
  4101  004BE8  0012               	return	
  4102  004BEA  D7E5               	goto	l4509
  4103  004BEC                     __end_of_fputs:
  4104                           	opt callstack 0
  4105                           
  4106 ;; *************** function _fputc *****************
  4107 ;; Defined at:
  4108 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  c               2    0[BANK0 ] int 
  4111 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4112 ;;		 -> sprintf@f(6), 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  2    0[BANK0 ] int 
  4117 ;; Registers used:
  4118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4124 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4126 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4127 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4128 ;;Total ram usage:        9 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    3
  4131 ;; This function calls:
  4132 ;;		_putch
  4133 ;; This function is called by:
  4134 ;;		_pad
  4135 ;;		_vfpfcnvrt
  4136 ;;		_fputs
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text14
  4141  004578                     __ptext14:
  4142                           	opt callstack 0
  4143  004578                     _fputc:
  4144                           	opt callstack 23
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;incstack = 0
  4148  004578  0100               	movlb	0	; () banked
  4149  00457A  5162               	movf	fputc@fp& (0+255),w,b
  4150  00457C  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4151  00457E  B4D8               	btfsc	status,2,c
  4152  004580  D004               	goto	u5480
  4153                           
  4154                           ; BSR set to: 0
  4155  004582  5162               	movf	fputc@fp& (0+255),w,b
  4156  004584  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4157  004586  A4D8               	btfss	status,2,c
  4158  004588  D004               	goto	l4499
  4159  00458A                     u5480:
  4160                           
  4161                           ; BSR set to: 0
  4162  00458A  5160               	movf	fputc@c& (0+255),w,b
  4163  00458C  ECFA  F026         	call	_putch
  4164  004590  0012               	return	
  4165  004592                     l4499:
  4166                           
  4167                           ; BSR set to: 0
  4168  004592  EE20 F004          	lfsr	2,4
  4169  004596  5162               	movf	fputc@fp& (0+255),w,b
  4170  004598  26D9               	addwf	fsr2l,f,c
  4171  00459A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4172  00459C  22DA               	addwfc	fsr2h,f,c
  4173  00459E  50DE               	movf	postinc2,w,c
  4174  0045A0  10DE               	iorwf	postinc2,w,c
  4175  0045A2  B4D8               	btfsc	status,2,c
  4176  0045A4  D016               	goto	u5500
  4177                           
  4178                           ; BSR set to: 0
  4179  0045A6  EE20 F004          	lfsr	2,4
  4180  0045AA  5162               	movf	fputc@fp& (0+255),w,b
  4181  0045AC  26D9               	addwf	fsr2l,f,c
  4182  0045AE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4183  0045B0  22DA               	addwfc	fsr2h,f,c
  4184  0045B2  EE10 F002          	lfsr	1,2
  4185  0045B6  5162               	movf	fputc@fp& (0+255),w,b
  4186  0045B8  26E1               	addwf	fsr1l,f,c
  4187  0045BA  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4188  0045BC  22E2               	addwfc	fsr1h,f,c
  4189  0045BE  50DE               	movf	postinc2,w,c
  4190  0045C0  5CE6               	subwf	postinc1,w,c
  4191  0045C2  50E6               	movf	postinc1,w,c
  4192  0045C4  0A80               	xorlw	128
  4193  0045C6  6F68               	movwf	(??_fputc+4)& (0+255),b
  4194  0045C8  50DE               	movf	postinc2,w,c
  4195  0045CA  0A80               	xorlw	128
  4196  0045CC  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4197  0045CE  B0D8               	btfsc	status,0,c
  4198  0045D0  0012               	return	
  4199  0045D2                     u5500:
  4200                           
  4201                           ; BSR set to: 0
  4202  0045D2  EE20 F002          	lfsr	2,2
  4203  0045D6  5162               	movf	fputc@fp& (0+255),w,b
  4204  0045D8  26D9               	addwf	fsr2l,f,c
  4205  0045DA  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4206  0045DC  22DA               	addwfc	fsr2h,f,c
  4207  0045DE  006F FF78  F064    	movff	postinc2,??_fputc
  4208  0045E4  006F FF74  F065    	movff	postdec2,??_fputc+1
  4209  0045EA  0060  F18B  FFD9   	movff	fputc@fp,fsr2l
  4210  0045F0  0060  F18F  FFDA   	movff	fputc@fp+1,fsr2h
  4211  0045F6  006F FF78  F066    	movff	postinc2,??_fputc+2
  4212  0045FC  006F FF74  F067    	movff	postdec2,??_fputc+3
  4213  004602  5164               	movf	??_fputc& (0+255),w,b
  4214  004604  2566               	addwf	(??_fputc+2)& (0+255),w,b
  4215  004606  6ED9               	movwf	fsr2l,c
  4216  004608  5165               	movf	(??_fputc+1)& (0+255),w,b
  4217  00460A  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  4218  00460C  6EDA               	movwf	fsr2h,c
  4219  00460E  0060  F183  FFDF   	movff	fputc@c,indf2
  4220  004614  EE20 F002          	lfsr	2,2
  4221  004618  5162               	movf	fputc@fp& (0+255),w,b
  4222  00461A  26D9               	addwf	fsr2l,f,c
  4223  00461C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4224  00461E  22DA               	addwfc	fsr2h,f,c
  4225  004620  2ADE               	incf	postinc2,f,c
  4226  004622  0E00               	movlw	0
  4227  004624  22DD               	addwfc	postdec2,f,c
  4228  004626  0012               	return		;funcret
  4229  004628                     __end_of_fputc:
  4230                           	opt callstack 0
  4231                           
  4232 ;; *************** function _putch *****************
  4233 ;; Defined at:
  4234 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  c               1    wreg     unsigned char 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  c               1    0[COMRAM] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4252 ;;Total ram usage:        0 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    2
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_fputc
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text15
  4263  004DF4                     __ptext15:
  4264                           	opt callstack 0
  4265  004DF4                     _putch:
  4266                           	opt callstack 23
  4267                           
  4268                           ;incstack = 0
  4269  004DF4  0012               	return		;funcret
  4270  004DF6                     __end_of_putch:
  4271                           	opt callstack 0
  4272                           
  4273 ;; *************** function _floorf *****************
  4274 ;; Defined at:
  4275 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  x               4   25[BANK0 ] float 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  u               4   41[BANK0 ] struct .
  4280 ;;  m               4   35[BANK0 ] unsigned long 
  4281 ;;  e               2   39[BANK0 ] int 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  4   25[BANK0 ] float 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4291 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4292 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4293 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4294 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4295 ;;Total ram usage:       20 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    2
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_efgtoa
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text16
  4306  003C88                     __ptext16:
  4307                           	opt callstack 0
  4308  003C88                     _floorf:
  4309                           	opt callstack 23
  4310                           
  4311                           ;incstack = 0
  4312  003C88  0060  F0B4  F089   	movff	floorf@F524,floorf@u
  4313  003C8E  0060  F0B8  F08A   	movff	floorf@F524+1,floorf@u+1
  4314  003C94  0060  F0BC  F08B   	movff	floorf@F524+2,floorf@u+2
  4315  003C9A  0060  F0C0  F08C   	movff	floorf@F524+3,floorf@u+3
  4316  003CA0  0060  F1E4  F089   	movff	floorf@x,floorf@u
  4317  003CA6  0060  F1E8  F08A   	movff	floorf@x+1,floorf@u+1
  4318  003CAC  0060  F1EC  F08B   	movff	floorf@x+2,floorf@u+2
  4319  003CB2  0060  F1F0  F08C   	movff	floorf@x+3,floorf@u+3
  4320  003CB8  0E81               	movlw	129
  4321  003CBA  0100               	movlb	0	; () banked
  4322  003CBC  6F7D               	movwf	??_floorf& (0+255),b
  4323  003CBE  0EFF               	movlw	255
  4324  003CC0  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4325  003CC2  0060  F224  F07F   	movff	floorf@u,??_floorf+2
  4326  003CC8  0060  F228  F080   	movff	floorf@u+1,??_floorf+3
  4327  003CCE  0060  F22C  F081   	movff	floorf@u+2,??_floorf+4
  4328  003CD4  0060  F230  F082   	movff	floorf@u+3,??_floorf+5
  4329  003CDA  0E18               	movlw	24
  4330  003CDC  D005               	goto	u6100
  4331  003CDE                     u6105:
  4332  003CDE  90D8               	bcf	status,0,c
  4333  003CE0  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  4334  003CE2  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4335  003CE4  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4336  003CE6  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4337  003CE8                     u6100:
  4338  003CE8  2EE8               	decfsz	wreg,f,c
  4339  003CEA  D7F9               	goto	u6105
  4340  003CEC  517F               	movf	(??_floorf+2)& (0+255),w,b
  4341  003CEE  257D               	addwf	??_floorf& (0+255),w,b
  4342  003CF0  6F87               	movwf	floorf@e& (0+255),b
  4343  003CF2  0E00               	movlw	0
  4344  003CF4  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  4345  003CF6  6F88               	movwf	(floorf@e+1)& (0+255),b
  4346  003CF8  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4347  003CFA  D013               	goto	l4795
  4348  003CFC  5188               	movf	(floorf@e+1)& (0+255),w,b
  4349  003CFE  E104               	bnz	u6110
  4350  003D00  0E17               	movlw	23
  4351  003D02  5D87               	subwf	floorf@e& (0+255),w,b
  4352  003D04  A0D8               	btfss	status,0,c
  4353  003D06  D00D               	goto	l4795
  4354  003D08                     u6110:
  4355                           
  4356                           ; BSR set to: 0
  4357  003D08  0060  F1E4  F079   	movff	floorf@x,?_floorf
  4358  003D0E  0060  F1E8  F07A   	movff	floorf@x+1,?_floorf+1
  4359  003D14  0060  F1EC  F07B   	movff	floorf@x+2,?_floorf+2
  4360  003D1A  0060  F1F0  F07C   	movff	floorf@x+3,?_floorf+3
  4361  003D20  0012               	return	
  4362  003D22                     l4795:
  4363                           
  4364                           ; BSR set to: 0
  4365  003D22  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4366  003D24  D068               	goto	l4805
  4367                           
  4368                           ; BSR set to: 0
  4369  003D26  0060  F21C  F07D   	movff	floorf@e,??_floorf
  4370  003D2C  0EFF               	movlw	255
  4371  003D2E  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4372  003D30  0EFF               	movlw	255
  4373  003D32  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4374  003D34  0E7F               	movlw	127
  4375  003D36  6F80               	movwf	(??_floorf+3)& (0+255),b
  4376  003D38  0E00               	movlw	0
  4377  003D3A  6F81               	movwf	(??_floorf+4)& (0+255),b
  4378  003D3C                     u6135:
  4379  003D3C  677D               	tstfsz	??_floorf& (0+255),b
  4380  003D3E  D001               	goto	u6136
  4381  003D40  D007               	goto	u6137
  4382  003D42                     u6136:
  4383  003D42  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  4384  003D44  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4385  003D46  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4386  003D48  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4387  003D4A  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4388  003D4C  2F7D               	decfsz	??_floorf& (0+255),f,b
  4389  003D4E  D7F6               	goto	u6135
  4390  003D50                     u6137:
  4391  003D50  0060  F1F8  F083   	movff	??_floorf+1,floorf@m
  4392  003D56  0060  F1FC  F084   	movff	??_floorf+2,floorf@m+1
  4393  003D5C  0060  F200  F085   	movff	??_floorf+3,floorf@m+2
  4394  003D62  0060  F204  F086   	movff	??_floorf+4,floorf@m+3
  4395  003D68  0100               	movlb	0	; () banked
  4396  003D6A  5183               	movf	floorf@m& (0+255),w,b
  4397  003D6C  1589               	andwf	floorf@u& (0+255),w,b
  4398  003D6E  6F7D               	movwf	??_floorf& (0+255),b
  4399  003D70  5184               	movf	(floorf@m+1)& (0+255),w,b
  4400  003D72  158A               	andwf	(floorf@u+1)& (0+255),w,b
  4401  003D74  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4402  003D76  5185               	movf	(floorf@m+2)& (0+255),w,b
  4403  003D78  158B               	andwf	(floorf@u+2)& (0+255),w,b
  4404  003D7A  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4405  003D7C  5186               	movf	(floorf@m+3)& (0+255),w,b
  4406  003D7E  158C               	andwf	(floorf@u+3)& (0+255),w,b
  4407  003D80  6F80               	movwf	(??_floorf+3)& (0+255),b
  4408  003D82  517D               	movf	??_floorf& (0+255),w,b
  4409  003D84  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4410  003D86  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4411  003D88  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4412  003D8A  B4D8               	btfsc	status,2,c
  4413  003D8C  D7BD               	goto	u6110
  4414                           
  4415                           ; BSR set to: 0
  4416  003D8E  0060  F224  F07D   	movff	floorf@u,??_floorf
  4417  003D94  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  4418  003D9A  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  4419  003DA0  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  4420  003DA6  0E20               	movlw	32
  4421  003DA8  D005               	goto	u6150
  4422  003DAA                     u6155:
  4423  003DAA  90D8               	bcf	status,0,c
  4424  003DAC  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4425  003DAE  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4426  003DB0  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4427  003DB2  337D               	rrcf	??_floorf& (0+255),f,b
  4428  003DB4                     u6150:
  4429  003DB4  2EE8               	decfsz	wreg,f,c
  4430  003DB6  D7F9               	goto	u6155
  4431  003DB8  517D               	movf	??_floorf& (0+255),w,b
  4432  003DBA  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4433  003DBC  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4434  003DBE  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4435  003DC0  B4D8               	btfsc	status,2,c
  4436  003DC2  D008               	goto	l1111
  4437                           
  4438                           ; BSR set to: 0
  4439  003DC4  5183               	movf	floorf@m& (0+255),w,b
  4440  003DC6  2789               	addwf	floorf@u& (0+255),f,b
  4441  003DC8  5184               	movf	(floorf@m+1)& (0+255),w,b
  4442  003DCA  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  4443  003DCC  5185               	movf	(floorf@m+2)& (0+255),w,b
  4444  003DCE  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  4445  003DD0  5186               	movf	(floorf@m+3)& (0+255),w,b
  4446  003DD2  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  4447  003DD4                     l1111:
  4448                           
  4449                           ; BSR set to: 0
  4450  003DD4  1D83               	comf	floorf@m& (0+255),w,b
  4451  003DD6  6F7D               	movwf	??_floorf& (0+255),b
  4452  003DD8  1D84               	comf	(floorf@m+1)& (0+255),w,b
  4453  003DDA  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4454  003DDC  1D85               	comf	(floorf@m+2)& (0+255),w,b
  4455  003DDE  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4456  003DE0  1D86               	comf	(floorf@m+3)& (0+255),w,b
  4457  003DE2  6F80               	movwf	(??_floorf+3)& (0+255),b
  4458  003DE4  517D               	movf	??_floorf& (0+255),w,b
  4459  003DE6  1789               	andwf	floorf@u& (0+255),f,b
  4460  003DE8  517E               	movf	(??_floorf+1)& (0+255),w,b
  4461  003DEA  178A               	andwf	(floorf@u+1)& (0+255),f,b
  4462  003DEC  517F               	movf	(??_floorf+2)& (0+255),w,b
  4463  003DEE  178B               	andwf	(floorf@u+2)& (0+255),f,b
  4464  003DF0  5180               	movf	(??_floorf+3)& (0+255),w,b
  4465  003DF2  178C               	andwf	(floorf@u+3)& (0+255),f,b
  4466  003DF4  D03A               	goto	l4813
  4467  003DF6                     l4805:
  4468                           
  4469                           ; BSR set to: 0
  4470  003DF6  0060  F224  F07D   	movff	floorf@u,??_floorf
  4471  003DFC  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  4472  003E02  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  4473  003E08  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  4474  003E0E  0E20               	movlw	32
  4475  003E10  D005               	goto	u6170
  4476  003E12                     u6175:
  4477  003E12  90D8               	bcf	status,0,c
  4478  003E14  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4479  003E16  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4480  003E18  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4481  003E1A  337D               	rrcf	??_floorf& (0+255),f,b
  4482  003E1C                     u6170:
  4483  003E1C  2EE8               	decfsz	wreg,f,c
  4484  003E1E  D7F9               	goto	u6175
  4485  003E20  517D               	movf	??_floorf& (0+255),w,b
  4486  003E22  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4487  003E24  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4488  003E26  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4489  003E28  A4D8               	btfss	status,2,c
  4490  003E2A  D008               	goto	l4809
  4491                           
  4492                           ; BSR set to: 0
  4493  003E2C  0E00               	movlw	0
  4494  003E2E  6F89               	movwf	floorf@u& (0+255),b
  4495  003E30  0E00               	movlw	0
  4496  003E32  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4497  003E34  0E00               	movlw	0
  4498  003E36  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4499  003E38  0E00               	movlw	0
  4500  003E3A  D016               	goto	L5
  4501  003E3C                     l4809:
  4502                           
  4503                           ; BSR set to: 0
  4504  003E3C  90D8               	bcf	status,0,c
  4505  003E3E  3589               	rlcf	floorf@u& (0+255),w,b
  4506  003E40  6F7D               	movwf	??_floorf& (0+255),b
  4507  003E42  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  4508  003E44  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4509  003E46  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  4510  003E48  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4511  003E4A  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  4512  003E4C  6F80               	movwf	(??_floorf+3)& (0+255),b
  4513  003E4E  517D               	movf	??_floorf& (0+255),w,b
  4514  003E50  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4515  003E52  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4516  003E54  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4517  003E56  B4D8               	btfsc	status,2,c
  4518  003E58  D008               	goto	l4813
  4519                           
  4520                           ; BSR set to: 0
  4521  003E5A  0E00               	movlw	0
  4522  003E5C  6F89               	movwf	floorf@u& (0+255),b
  4523  003E5E  0E00               	movlw	0
  4524  003E60  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4525  003E62  0E80               	movlw	128
  4526  003E64  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4527  003E66  0EBF               	movlw	191
  4528  003E68                     L5:
  4529  003E68  6F8C               	movwf	(floorf@u+3)& (0+255),b
  4530  003E6A                     l4813:
  4531                           
  4532                           ; BSR set to: 0
  4533  003E6A  0060  F224  F079   	movff	floorf@u,?_floorf
  4534  003E70  0060  F228  F07A   	movff	floorf@u+1,?_floorf+1
  4535  003E76  0060  F22C  F07B   	movff	floorf@u+2,?_floorf+2
  4536  003E7C  0060  F230  F07C   	movff	floorf@u+3,?_floorf+3
  4537                           
  4538                           ; BSR set to: 0
  4539  003E82  0012               	return		;funcret
  4540  003E84                     __end_of_floorf:
  4541                           	opt callstack 0
  4542                           
  4543 ;; *************** function ___fpclassifyf *****************
  4544 ;; Defined at:
  4545 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  x               4    0[BANK0 ] float 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  u               4   10[BANK0 ] struct .
  4550 ;;  e               2    8[BANK0 ] int 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  2    0[BANK0 ] int 
  4553 ;; Registers used:
  4554 ;;		wreg, status,2, status,0
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4561 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4562 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4563 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4564 ;;Total ram usage:       14 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    2
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_efgtoa
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text17
  4575  003FE8                     __ptext17:
  4576                           	opt callstack 0
  4577  003FE8                     ___fpclassifyf:
  4578                           	opt callstack 23
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;incstack = 0
  4582  003FE8  0060  F0C4  F06A   	movff	___fpclassifyf@F463,___fpclassifyf@u
  4583  003FEE  0060  F0C8  F06B   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4584  003FF4  0060  F0CC  F06C   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4585  003FFA  0060  F0D0  F06D   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4586  004000  0060  F180  F06A   	movff	___fpclassifyf@x,___fpclassifyf@u
  4587  004006  0060  F184  F06B   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4588  00400C  0060  F188  F06C   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4589  004012  0060  F18C  F06D   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4590  004018  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  4591  00401E  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4592  004024  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4593  00402A  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4594  004030  0E18               	movlw	24
  4595  004032  D006               	goto	u5980
  4596  004034                     u5985:
  4597  004034  0100               	movlb	0	; () banked
  4598  004036  90D8               	bcf	status,0,c
  4599  004038  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  4600  00403A  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  4601  00403C  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  4602  00403E  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  4603  004040                     u5980:
  4604  004040  2EE8               	decfsz	wreg,f,c
  4605  004042  D7F8               	goto	u5985
  4606  004044  5164               	movf	??___fpclassifyf& (0+255),w,b
  4607  004046  6F68               	movwf	___fpclassifyf@e& (0+255),b
  4608  004048  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  4609  00404A  5168               	movf	___fpclassifyf@e& (0+255),w,b
  4610  00404C  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  4611  00404E  A4D8               	btfss	status,2,c
  4612  004050  D019               	goto	l4765
  4613                           
  4614                           ; BSR set to: 0
  4615  004052  90D8               	bcf	status,0,c
  4616  004054  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  4617  004056  6F64               	movwf	??___fpclassifyf& (0+255),b
  4618  004058  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  4619  00405A  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  4620  00405C  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  4621  00405E  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  4622  004060  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  4623  004062  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  4624  004064  5164               	movf	??___fpclassifyf& (0+255),w,b
  4625  004066  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  4626  004068  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  4627  00406A  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  4628  00406C  A4D8               	btfss	status,2,c
  4629  00406E  D005               	goto	l4761
  4630                           
  4631                           ; BSR set to: 0
  4632  004070  0E00               	movlw	0
  4633  004072  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  4634  004074  0E02               	movlw	2
  4635  004076  6F60               	movwf	?___fpclassifyf& (0+255),b
  4636  004078  0012               	return	
  4637  00407A                     l4761:
  4638                           
  4639                           ; BSR set to: 0
  4640  00407A  0E00               	movlw	0
  4641  00407C  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  4642  00407E  0E03               	movlw	3
  4643  004080  6F60               	movwf	?___fpclassifyf& (0+255),b
  4644  004082  0012               	return	
  4645  004084                     l4765:
  4646                           
  4647                           ; BSR set to: 0
  4648  004084  2968               	incf	___fpclassifyf@e& (0+255),w,b
  4649  004086  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  4650  004088  A4D8               	btfss	status,2,c
  4651  00408A  D020               	goto	l4771
  4652                           
  4653                           ; BSR set to: 0
  4654  00408C  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  4655  004092  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4656  004098  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4657  00409E  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4658  0040A4  0E09               	movlw	9
  4659  0040A6                     u6025:
  4660  0040A6  90D8               	bcf	status,0,c
  4661  0040A8  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  4662  0040AA  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  4663  0040AC  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  4664  0040AE  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  4665  0040B0  2EE8               	decfsz	wreg,f,c
  4666  0040B2  D7F9               	goto	u6025
  4667  0040B4  5164               	movf	??___fpclassifyf& (0+255),w,b
  4668  0040B6  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  4669  0040B8  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  4670  0040BA  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  4671  0040BC  A4D8               	btfss	status,2,c
  4672  0040BE  D002               	goto	u6030
  4673  0040C0  0E01               	movlw	1
  4674  0040C2  D001               	goto	u6040
  4675  0040C4                     u6030:
  4676  0040C4  0E00               	movlw	0
  4677  0040C6                     u6040:
  4678  0040C6  6F60               	movwf	?___fpclassifyf& (0+255),b
  4679  0040C8  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  4680  0040CA  0012               	return	
  4681  0040CC                     l4771:
  4682                           
  4683                           ; BSR set to: 0
  4684  0040CC  0E00               	movlw	0
  4685  0040CE  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  4686  0040D0  0E04               	movlw	4
  4687  0040D2  6F60               	movwf	?___fpclassifyf& (0+255),b
  4688                           
  4689                           ; BSR set to: 0
  4690  0040D4  0012               	return		;funcret
  4691  0040D6                     __end_of___fpclassifyf:
  4692                           	opt callstack 0
  4693                           
  4694 ;; *************** function ___fltol *****************
  4695 ;; Defined at:
  4696 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  f1              4    0[BANK0 ] int 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  exp1            1    9[BANK0 ] unsigned char 
  4701 ;;  sign1           1    8[BANK0 ] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  4    0[BANK0 ] long 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4711 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4712 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4713 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4714 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4715 ;;Total ram usage:       10 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    2
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_efgtoa
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text18
  4726  004278                     __ptext18:
  4727                           	opt callstack 0
  4728  004278                     ___fltol:
  4729                           	opt callstack 23
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;incstack = 0
  4733  004278  0100               	movlb	0	; () banked
  4734  00427A  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4735  00427C  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4736  00427E  6F69               	movwf	___fltol@exp1& (0+255),b
  4737  004280  5169               	movf	___fltol@exp1& (0+255),w,b
  4738  004282  A4D8               	btfss	status,2,c
  4739  004284  D009               	goto	l5223
  4740  004286                     u6830:
  4741                           
  4742                           ; BSR set to: 0
  4743  004286  0E00               	movlw	0
  4744  004288  6F60               	movwf	?___fltol& (0+255),b
  4745  00428A  0E00               	movlw	0
  4746  00428C  6F61               	movwf	(?___fltol+1)& (0+255),b
  4747  00428E  0E00               	movlw	0
  4748  004290  6F62               	movwf	(?___fltol+2)& (0+255),b
  4749  004292  0E00               	movlw	0
  4750  004294  6F63               	movwf	(?___fltol+3)& (0+255),b
  4751  004296  0012               	return	
  4752  004298                     l5223:
  4753                           
  4754                           ; BSR set to: 0
  4755  004298  0060  F180  F064   	movff	___fltol@f1,??___fltol
  4756  00429E  0060  F184  F065   	movff	___fltol@f1+1,??___fltol+1
  4757  0042A4  0060  F188  F066   	movff	___fltol@f1+2,??___fltol+2
  4758  0042AA  0060  F18C  F067   	movff	___fltol@f1+3,??___fltol+3
  4759  0042B0  0E20               	movlw	32
  4760  0042B2  D005               	goto	u6840
  4761  0042B4                     u6845:
  4762  0042B4  90D8               	bcf	status,0,c
  4763  0042B6  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  4764  0042B8  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  4765  0042BA  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  4766  0042BC  3364               	rrcf	??___fltol& (0+255),f,b
  4767  0042BE                     u6840:
  4768  0042BE  2EE8               	decfsz	wreg,f,c
  4769  0042C0  D7F9               	goto	u6845
  4770  0042C2  5164               	movf	??___fltol& (0+255),w,b
  4771  0042C4  6F68               	movwf	___fltol@sign1& (0+255),b
  4772                           
  4773                           ; BSR set to: 0
  4774  0042C6  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  4775                           
  4776                           ; BSR set to: 0
  4777  0042C8  0EFF               	movlw	255
  4778  0042CA  1760               	andwf	___fltol@f1& (0+255),f,b
  4779  0042CC  0EFF               	movlw	255
  4780  0042CE  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  4781  0042D0  0EFF               	movlw	255
  4782  0042D2  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  4783  0042D4  0E00               	movlw	0
  4784  0042D6  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  4785                           
  4786                           ; BSR set to: 0
  4787  0042D8  0E96               	movlw	150
  4788  0042DA  5F69               	subwf	___fltol@exp1& (0+255),f,b
  4789                           
  4790                           ; BSR set to: 0
  4791  0042DC  AF69               	btfss	___fltol@exp1& (0+255),7,b
  4792  0042DE  D00D               	goto	l5243
  4793                           
  4794                           ; BSR set to: 0
  4795  0042E0  5169               	movf	___fltol@exp1& (0+255),w,b
  4796  0042E2  0A80               	xorlw	128
  4797  0042E4  0F97               	addlw	151
  4798  0042E6  A0D8               	btfss	status,0,c
  4799  0042E8  D7CE               	goto	u6830
  4800  0042EA                     l5239:
  4801                           
  4802                           ; BSR set to: 0
  4803  0042EA  90D8               	bcf	status,0,c
  4804  0042EC  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4805  0042EE  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4806  0042F0  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4807  0042F2  3360               	rrcf	___fltol@f1& (0+255),f,b
  4808                           
  4809                           ; BSR set to: 0
  4810  0042F4  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  4811  0042F6  D7F9               	goto	l5239
  4812  0042F8  D00D               	goto	u6880
  4813  0042FA                     l5243:
  4814                           
  4815                           ; BSR set to: 0
  4816  0042FA  0E1F               	movlw	31
  4817  0042FC  6569               	cpfsgt	___fltol@exp1& (0+255),b
  4818  0042FE  D007               	goto	l5251
  4819  004300  D7C2               	goto	u6830
  4820  004302                     l5249:
  4821                           
  4822                           ; BSR set to: 0
  4823  004302  90D8               	bcf	status,0,c
  4824  004304  3760               	rlcf	___fltol@f1& (0+255),f,b
  4825  004306  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4826  004308  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4827  00430A  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4828  00430C  0769               	decf	___fltol@exp1& (0+255),f,b
  4829  00430E                     l5251:
  4830                           
  4831                           ; BSR set to: 0
  4832  00430E  5169               	movf	___fltol@exp1& (0+255),w,b
  4833  004310  A4D8               	btfss	status,2,c
  4834  004312  D7F7               	goto	l5249
  4835  004314                     u6880:
  4836                           
  4837                           ; BSR set to: 0
  4838  004314  5168               	movf	___fltol@sign1& (0+255),w,b
  4839  004316  B4D8               	btfsc	status,2,c
  4840  004318  D008               	goto	l5257
  4841                           
  4842                           ; BSR set to: 0
  4843  00431A  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  4844  00431C  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  4845  00431E  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  4846  004320  6D60               	negf	___fltol@f1& (0+255),b
  4847  004322  0E00               	movlw	0
  4848  004324  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4849  004326  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4850  004328  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4851  00432A                     l5257:
  4852                           
  4853                           ; BSR set to: 0
  4854  00432A  0060  F180  F060   	movff	___fltol@f1,?___fltol
  4855  004330  0060  F184  F061   	movff	___fltol@f1+1,?___fltol+1
  4856  004336  0060  F188  F062   	movff	___fltol@f1+2,?___fltol+2
  4857  00433C  0060  F18C  F063   	movff	___fltol@f1+3,?___fltol+3
  4858                           
  4859                           ; BSR set to: 0
  4860  004342  0012               	return		;funcret
  4861  004344                     __end_of___fltol:
  4862                           	opt callstack 0
  4863                           
  4864 ;; *************** function ___flsub *****************
  4865 ;; Defined at:
  4866 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  b               4   25[BANK0 ] long 
  4869 ;;  a               4   29[BANK0 ] long 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  4   25[BANK0 ] long 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4881 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4884 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4885 ;;Total ram usage:        8 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    3
  4888 ;; This function calls:
  4889 ;;		___fladd
  4890 ;; This function is called by:
  4891 ;;		_efgtoa
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text19
  4896  004A44                     __ptext19:
  4897                           	opt callstack 0
  4898  004A44                     ___flsub:
  4899                           	opt callstack 22
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;incstack = 0
  4903  004A44  0E00               	movlw	0
  4904  004A46  0100               	movlb	0	; () banked
  4905  004A48  1B7D               	xorwf	___flsub@a& (0+255),f,b
  4906  004A4A  0E00               	movlw	0
  4907  004A4C  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  4908  004A4E  0E00               	movlw	0
  4909  004A50  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  4910  004A52  0E80               	movlw	128
  4911  004A54  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  4912                           
  4913                           ; BSR set to: 0
  4914  004A56  0060  F1E4  F060   	movff	___flsub@b,___fladd@b
  4915  004A5C  0060  F1E8  F061   	movff	___flsub@b+1,___fladd@b+1
  4916  004A62  0060  F1EC  F062   	movff	___flsub@b+2,___fladd@b+2
  4917  004A68  0060  F1F0  F063   	movff	___flsub@b+3,___fladd@b+3
  4918  004A6E  0060  F1F4  F064   	movff	___flsub@a,___fladd@a
  4919  004A74  0060  F1F8  F065   	movff	___flsub@a+1,___fladd@a+1
  4920  004A7A  0060  F1FC  F066   	movff	___flsub@a+2,___fladd@a+2
  4921  004A80  0060  F200  F067   	movff	___flsub@a+3,___fladd@a+3
  4922  004A86  EC48  F01B         	call	___fladd	;wreg free
  4923  004A8A  0060  F180  F079   	movff	?___fladd,?___flsub
  4924  004A90  0060  F184  F07A   	movff	?___fladd+1,?___flsub+1
  4925  004A96  0060  F188  F07B   	movff	?___fladd+2,?___flsub+2
  4926  004A9C  0060  F18C  F07C   	movff	?___fladd+3,?___flsub+3
  4927  004AA2  0012               	return		;funcret
  4928  004AA4                     __end_of___flsub:
  4929                           	opt callstack 0
  4930                           
  4931 ;; *************** function ___fladd *****************
  4932 ;; Defined at:
  4933 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  b               4    0[BANK0 ] long 
  4936 ;;  a               4    4[BANK0 ] long 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  grs             1   15[BANK0 ] unsigned char 
  4939 ;;  bexp            1   14[BANK0 ] unsigned char 
  4940 ;;  aexp            1   13[BANK0 ] unsigned char 
  4941 ;;  signs           1   12[BANK0 ] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  4    0[BANK0 ] unsigned char 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4951 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4952 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4953 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4954 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4955 ;;Total ram usage:       16 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:    2
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_efgtoa
  4962 ;;		___flsub
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text20
  4967  003690                     __ptext20:
  4968                           	opt callstack 0
  4969  003690                     ___fladd:
  4970                           	opt callstack 22
  4971                           
  4972                           ;incstack = 0
  4973  003690  0100               	movlb	0	; () banked
  4974  003692  5163               	movf	(___fladd@b+3)& (0+255),w,b
  4975  003694  0B80               	andlw	128
  4976  003696  6F6C               	movwf	___fladd@signs& (0+255),b
  4977  003698  5163               	movf	(___fladd@b+3)& (0+255),w,b
  4978  00369A  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  4979  00369C  6F6E               	movwf	___fladd@bexp& (0+255),b
  4980                           
  4981                           ; BSR set to: 0
  4982  00369E  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
  4983                           
  4984                           ; BSR set to: 0
  4985  0036A0  816E               	bsf	___fladd@bexp& (0+255),0,b
  4986                           
  4987                           ; BSR set to: 0
  4988  0036A2  516E               	movf	___fladd@bexp& (0+255),w,b
  4989  0036A4  B4D8               	btfsc	status,2,c
  4990  0036A6  D00D               	goto	l4545
  4991                           
  4992                           ; BSR set to: 0
  4993  0036A8  296E               	incf	___fladd@bexp& (0+255),w,b
  4994  0036AA  A4D8               	btfss	status,2,c
  4995  0036AC  D008               	goto	l4541
  4996                           
  4997                           ; BSR set to: 0
  4998  0036AE  0E00               	movlw	0
  4999  0036B0  6F60               	movwf	___fladd@b& (0+255),b
  5000  0036B2  0E00               	movlw	0
  5001  0036B4  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5002  0036B6  0E00               	movlw	0
  5003  0036B8  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5004  0036BA  0E00               	movlw	0
  5005  0036BC  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5006  0036BE                     l4541:
  5007                           
  5008                           ; BSR set to: 0
  5009  0036BE  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5010  0036C0  D006               	goto	L6
  5011  0036C2                     l4545:
  5012                           
  5013                           ; BSR set to: 0
  5014  0036C2  0E00               	movlw	0
  5015  0036C4  6F60               	movwf	___fladd@b& (0+255),b
  5016  0036C6  0E00               	movlw	0
  5017  0036C8  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5018  0036CA  0E00               	movlw	0
  5019  0036CC  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5020  0036CE                     L6:
  5021  0036CE  0E00               	movlw	0
  5022  0036D0  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5023                           
  5024                           ; BSR set to: 0
  5025  0036D2  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5026  0036D4  0B80               	andlw	128
  5027  0036D6  6F6D               	movwf	___fladd@aexp& (0+255),b
  5028                           
  5029                           ; BSR set to: 0
  5030  0036D8  516C               	movf	___fladd@signs& (0+255),w,b
  5031  0036DA  196D               	xorwf	___fladd@aexp& (0+255),w,b
  5032  0036DC  A4D8               	btfss	status,2,c
  5033                           
  5034                           ; BSR set to: 0
  5035  0036DE  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5036                           
  5037                           ; BSR set to: 0
  5038  0036E0  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5039  0036E2  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5040  0036E4  6F6D               	movwf	___fladd@aexp& (0+255),b
  5041                           
  5042                           ; BSR set to: 0
  5043  0036E6  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
  5044                           
  5045                           ; BSR set to: 0
  5046  0036E8  816D               	bsf	___fladd@aexp& (0+255),0,b
  5047                           
  5048                           ; BSR set to: 0
  5049  0036EA  516D               	movf	___fladd@aexp& (0+255),w,b
  5050  0036EC  B4D8               	btfsc	status,2,c
  5051  0036EE  D00D               	goto	l4569
  5052                           
  5053                           ; BSR set to: 0
  5054  0036F0  296D               	incf	___fladd@aexp& (0+255),w,b
  5055  0036F2  A4D8               	btfss	status,2,c
  5056  0036F4  D008               	goto	l4565
  5057                           
  5058                           ; BSR set to: 0
  5059  0036F6  0E00               	movlw	0
  5060  0036F8  6F64               	movwf	___fladd@a& (0+255),b
  5061  0036FA  0E00               	movlw	0
  5062  0036FC  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5063  0036FE  0E00               	movlw	0
  5064  003700  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5065  003702  0E00               	movlw	0
  5066  003704  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5067  003706                     l4565:
  5068                           
  5069                           ; BSR set to: 0
  5070  003706  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5071  003708  D006               	goto	L7
  5072  00370A                     l4569:
  5073                           
  5074                           ; BSR set to: 0
  5075  00370A  0E00               	movlw	0
  5076  00370C  6F64               	movwf	___fladd@a& (0+255),b
  5077  00370E  0E00               	movlw	0
  5078  003710  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5079  003712  0E00               	movlw	0
  5080  003714  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5081  003716                     L7:
  5082  003716  0E00               	movlw	0
  5083  003718  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5084                           
  5085                           ; BSR set to: 0
  5086  00371A  516E               	movf	___fladd@bexp& (0+255),w,b
  5087  00371C  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5088  00371E  B0D8               	btfsc	status,0,c
  5089  003720  D031               	goto	l4607
  5090                           
  5091                           ; BSR set to: 0
  5092  003722  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5093  003724  D002               	goto	l4577
  5094                           
  5095                           ; BSR set to: 0
  5096  003726  0E80               	movlw	128
  5097  003728  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5098  00372A                     l4577:
  5099                           
  5100                           ; BSR set to: 0
  5101  00372A  0060  F1B8  F06F   	movff	___fladd@bexp,___fladd@grs
  5102                           
  5103                           ; BSR set to: 0
  5104  003730  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  5105                           
  5106                           ; BSR set to: 0
  5107  003736  0060  F1BC  F06D   	movff	___fladd@grs,___fladd@aexp
  5108                           
  5109                           ; BSR set to: 0
  5110  00373C  0060  F180  F06F   	movff	___fladd@b,___fladd@grs
  5111                           
  5112                           ; BSR set to: 0
  5113  003742  0060  F190  F060   	movff	___fladd@a,___fladd@b
  5114                           
  5115                           ; BSR set to: 0
  5116  003748  0060  F1BC  F064   	movff	___fladd@grs,___fladd@a
  5117                           
  5118                           ; BSR set to: 0
  5119  00374E  0060  F184  F06F   	movff	___fladd@b+1,___fladd@grs
  5120                           
  5121                           ; BSR set to: 0
  5122  003754  0060  F194  F061   	movff	___fladd@a+1,___fladd@b+1
  5123                           
  5124                           ; BSR set to: 0
  5125  00375A  0060  F1BC  F065   	movff	___fladd@grs,___fladd@a+1
  5126                           
  5127                           ; BSR set to: 0
  5128  003760  0060  F188  F06F   	movff	___fladd@b+2,___fladd@grs
  5129                           
  5130                           ; BSR set to: 0
  5131  003766  0060  F198  F062   	movff	___fladd@a+2,___fladd@b+2
  5132                           
  5133                           ; BSR set to: 0
  5134  00376C  0060  F1BC  F066   	movff	___fladd@grs,___fladd@a+2
  5135                           
  5136                           ; BSR set to: 0
  5137  003772  0060  F18C  F06F   	movff	___fladd@b+3,___fladd@grs
  5138                           
  5139                           ; BSR set to: 0
  5140  003778  0060  F19C  F063   	movff	___fladd@a+3,___fladd@b+3
  5141                           
  5142                           ; BSR set to: 0
  5143  00377E  0060  F1BC  F067   	movff	___fladd@grs,___fladd@a+3
  5144  003784                     l4607:
  5145                           
  5146                           ; BSR set to: 0
  5147  003784  0E00               	movlw	0
  5148  003786  6F6F               	movwf	___fladd@grs& (0+255),b
  5149                           
  5150                           ; BSR set to: 0
  5151  003788  516E               	movf	___fladd@bexp& (0+255),w,b
  5152  00378A  0060  F1B4  F068   	movff	___fladd@aexp,??___fladd
  5153  003790  6B69               	clrf	(??___fladd+1)& (0+255),b
  5154  003792  5F68               	subwf	??___fladd& (0+255),f,b
  5155  003794  0E00               	movlw	0
  5156  003796  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5157  003798  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5158  00379A  D02D               	goto	l949
  5159  00379C  5169               	movf	(??___fladd+1)& (0+255),w,b
  5160  00379E  E104               	bnz	u5640
  5161  0037A0  0E1A               	movlw	26
  5162  0037A2  5D68               	subwf	??___fladd& (0+255),w,b
  5163  0037A4  A0D8               	btfss	status,0,c
  5164  0037A6  D027               	goto	l949
  5165  0037A8                     u5640:
  5166                           
  5167                           ; BSR set to: 0
  5168  0037A8  5160               	movf	___fladd@b& (0+255),w,b
  5169  0037AA  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5170  0037AC  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5171  0037AE  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5172  0037B0  B4D8               	btfsc	status,2,c
  5173  0037B2  D002               	goto	u5650
  5174  0037B4  0E01               	movlw	1
  5175  0037B6  D001               	goto	u5660
  5176  0037B8                     u5650:
  5177  0037B8  0E00               	movlw	0
  5178  0037BA                     u5660:
  5179  0037BA  6F6F               	movwf	___fladd@grs& (0+255),b
  5180                           
  5181                           ; BSR set to: 0
  5182  0037BC  0E00               	movlw	0
  5183  0037BE  6F60               	movwf	___fladd@b& (0+255),b
  5184  0037C0  0E00               	movlw	0
  5185  0037C2  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5186  0037C4  0E00               	movlw	0
  5187  0037C6  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5188  0037C8  0E00               	movlw	0
  5189  0037CA  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5190                           
  5191                           ; BSR set to: 0
  5192  0037CC  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  5193  0037D2  D015               	goto	u5690
  5194  0037D4                     l950:
  5195                           
  5196                           ; BSR set to: 0
  5197  0037D4  A16F               	btfss	___fladd@grs& (0+255),0,b
  5198  0037D6  D005               	goto	l4619
  5199                           
  5200                           ; BSR set to: 0
  5201  0037D8  90D8               	bcf	status,0,c
  5202  0037DA  316F               	rrcf	___fladd@grs& (0+255),w,b
  5203  0037DC  0901               	iorlw	1
  5204  0037DE  6F6F               	movwf	___fladd@grs& (0+255),b
  5205  0037E0  D002               	goto	l4621
  5206  0037E2                     l4619:
  5207                           
  5208                           ; BSR set to: 0
  5209  0037E2  90D8               	bcf	status,0,c
  5210  0037E4  336F               	rrcf	___fladd@grs& (0+255),f,b
  5211  0037E6                     l4621:
  5212                           
  5213                           ; BSR set to: 0
  5214  0037E6  B160               	btfsc	___fladd@b& (0+255),0,b
  5215                           
  5216                           ; BSR set to: 0
  5217  0037E8  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5218                           
  5219                           ; BSR set to: 0
  5220  0037EA  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5221  0037EC  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5222  0037EE  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5223  0037F0  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5224  0037F2  3360               	rrcf	___fladd@b& (0+255),f,b
  5225                           
  5226                           ; BSR set to: 0
  5227  0037F4  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5228  0037F6                     l949:
  5229                           
  5230                           ; BSR set to: 0
  5231  0037F6  516D               	movf	___fladd@aexp& (0+255),w,b
  5232  0037F8  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5233  0037FA  A0D8               	btfss	status,0,c
  5234  0037FC  D7EB               	goto	l950
  5235  0037FE                     u5690:
  5236                           
  5237                           ; BSR set to: 0
  5238  0037FE  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5239  003800  D028               	goto	l4653
  5240                           
  5241                           ; BSR set to: 0
  5242  003802  516E               	movf	___fladd@bexp& (0+255),w,b
  5243  003804  A4D8               	btfss	status,2,c
  5244  003806  D009               	goto	l4635
  5245                           
  5246                           ; BSR set to: 0
  5247  003808  0E00               	movlw	0
  5248  00380A  6F60               	movwf	?___fladd& (0+255),b
  5249  00380C  0E00               	movlw	0
  5250  00380E  6F61               	movwf	(?___fladd+1)& (0+255),b
  5251  003810  0E00               	movlw	0
  5252  003812  6F62               	movwf	(?___fladd+2)& (0+255),b
  5253  003814  0E00               	movlw	0
  5254  003816  6F63               	movwf	(?___fladd+3)& (0+255),b
  5255  003818  0012               	return	
  5256  00381A                     l4635:
  5257                           
  5258                           ; BSR set to: 0
  5259  00381A  5164               	movf	___fladd@a& (0+255),w,b
  5260  00381C  2760               	addwf	___fladd@b& (0+255),f,b
  5261  00381E  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5262  003820  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5263  003822  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5264  003824  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5265  003826  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5266  003828  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5267                           
  5268                           ; BSR set to: 0
  5269  00382A  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5270  00382C  D071               	goto	u5820
  5271                           
  5272                           ; BSR set to: 0
  5273  00382E  A16F               	btfss	___fladd@grs& (0+255),0,b
  5274  003830  D005               	goto	l4643
  5275                           
  5276                           ; BSR set to: 0
  5277  003832  90D8               	bcf	status,0,c
  5278  003834  316F               	rrcf	___fladd@grs& (0+255),w,b
  5279  003836  0901               	iorlw	1
  5280  003838  6F6F               	movwf	___fladd@grs& (0+255),b
  5281  00383A  D002               	goto	l4645
  5282  00383C                     l4643:
  5283                           
  5284                           ; BSR set to: 0
  5285  00383C  90D8               	bcf	status,0,c
  5286  00383E  336F               	rrcf	___fladd@grs& (0+255),f,b
  5287  003840                     l4645:
  5288                           
  5289                           ; BSR set to: 0
  5290  003840  B160               	btfsc	___fladd@b& (0+255),0,b
  5291                           
  5292                           ; BSR set to: 0
  5293  003842  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5294                           
  5295                           ; BSR set to: 0
  5296  003844  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5297  003846  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5298  003848  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5299  00384A  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5300  00384C  3360               	rrcf	___fladd@b& (0+255),f,b
  5301                           
  5302                           ; BSR set to: 0
  5303  00384E  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5304  003850  D05F               	goto	u5820
  5305  003852                     l4653:
  5306                           
  5307                           ; BSR set to: 0
  5308  003852  5164               	movf	___fladd@a& (0+255),w,b
  5309  003854  5D60               	subwf	___fladd@b& (0+255),w,b
  5310  003856  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5311  003858  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5312  00385A  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5313  00385C  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5314  00385E  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5315  003860  0A80               	xorlw	128
  5316  003862  6F68               	movwf	??___fladd& (0+255),b
  5317  003864  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5318  003866  0A80               	xorlw	128
  5319  003868  5968               	subwfb	??___fladd& (0+255),w,b
  5320  00386A  B0D8               	btfsc	status,0,c
  5321  00386C  D025               	goto	l4663
  5322                           
  5323                           ; BSR set to: 0
  5324  00386E  5160               	movf	___fladd@b& (0+255),w,b
  5325  003870  5D64               	subwf	___fladd@a& (0+255),w,b
  5326  003872  6F68               	movwf	??___fladd& (0+255),b
  5327  003874  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5328  003876  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5329  003878  6F69               	movwf	(??___fladd+1)& (0+255),b
  5330  00387A  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5331  00387C  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5332  00387E  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5333  003880  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5334  003882  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5335  003884  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5336  003886  0EFF               	movlw	255
  5337  003888  2568               	addwf	??___fladd& (0+255),w,b
  5338  00388A  6F60               	movwf	___fladd@b& (0+255),b
  5339  00388C  0EFF               	movlw	255
  5340  00388E  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5341  003890  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5342  003892  0EFF               	movlw	255
  5343  003894  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5344  003896  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5345  003898  0EFF               	movlw	255
  5346  00389A  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5347  00389C  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5348  00389E  0E80               	movlw	128
  5349  0038A0  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5350                           
  5351                           ; BSR set to: 0
  5352  0038A2  6D6F               	negf	___fladd@grs& (0+255),b
  5353                           
  5354                           ; BSR set to: 0
  5355  0038A4  516F               	movf	___fladd@grs& (0+255),w,b
  5356  0038A6  A4D8               	btfss	status,2,c
  5357  0038A8  D00F               	goto	l965
  5358                           
  5359                           ; BSR set to: 0
  5360  0038AA  0E01               	movlw	1
  5361  0038AC  2760               	addwf	___fladd@b& (0+255),f,b
  5362  0038AE  0E00               	movlw	0
  5363  0038B0  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5364  0038B2  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5365  0038B4  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5366  0038B6  D008               	goto	l965
  5367  0038B8                     l4663:
  5368                           
  5369                           ; BSR set to: 0
  5370  0038B8  5164               	movf	___fladd@a& (0+255),w,b
  5371  0038BA  5F60               	subwf	___fladd@b& (0+255),f,b
  5372  0038BC  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5373  0038BE  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5374  0038C0  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5375  0038C2  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5376  0038C4  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5377  0038C6  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5378  0038C8                     l965:
  5379                           
  5380                           ; BSR set to: 0
  5381  0038C8  5160               	movf	___fladd@b& (0+255),w,b
  5382  0038CA  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5383  0038CC  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5384  0038CE  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5385  0038D0  A4D8               	btfss	status,2,c
  5386  0038D2  D01C               	goto	l4687
  5387                           
  5388                           ; BSR set to: 0
  5389  0038D4  516F               	movf	___fladd@grs& (0+255),w,b
  5390  0038D6  A4D8               	btfss	status,2,c
  5391  0038D8  D019               	goto	l4687
  5392                           
  5393                           ; BSR set to: 0
  5394  0038DA  0E00               	movlw	0
  5395  0038DC  6F60               	movwf	?___fladd& (0+255),b
  5396  0038DE  0E00               	movlw	0
  5397  0038E0  6F61               	movwf	(?___fladd+1)& (0+255),b
  5398  0038E2  0E00               	movlw	0
  5399  0038E4  6F62               	movwf	(?___fladd+2)& (0+255),b
  5400  0038E6  0E00               	movlw	0
  5401  0038E8  6F63               	movwf	(?___fladd+3)& (0+255),b
  5402  0038EA  0012               	return	
  5403  0038EC                     l4671:
  5404                           
  5405                           ; BSR set to: 0
  5406  0038EC  90D8               	bcf	status,0,c
  5407  0038EE  3760               	rlcf	___fladd@b& (0+255),f,b
  5408  0038F0  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5409  0038F2  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5410  0038F4  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5411                           
  5412                           ; BSR set to: 0
  5413  0038F6  BF6F               	btfsc	___fladd@grs& (0+255),7,b
  5414                           
  5415                           ; BSR set to: 0
  5416  0038F8  8160               	bsf	___fladd@b& (0+255),0,b
  5417                           
  5418                           ; BSR set to: 0
  5419  0038FA  A16F               	btfss	___fladd@grs& (0+255),0,b
  5420  0038FC  D002               	goto	l4681
  5421                           
  5422                           ; BSR set to: 0
  5423  0038FE  80D8               	bsf	status,0,c
  5424  003900  D001               	goto	L8
  5425  003902                     l4681:
  5426                           
  5427                           ; BSR set to: 0
  5428  003902  90D8               	bcf	status,0,c
  5429  003904                     L8:
  5430  003904  376F               	rlcf	___fladd@grs& (0+255),f,b
  5431                           
  5432                           ; BSR set to: 0
  5433  003906  516E               	movf	___fladd@bexp& (0+255),w,b
  5434  003908  A4D8               	btfss	status,2,c
  5435                           
  5436                           ; BSR set to: 0
  5437  00390A  076E               	decf	___fladd@bexp& (0+255),f,b
  5438  00390C                     l4687:
  5439                           
  5440                           ; BSR set to: 0
  5441  00390C  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5442  00390E  D7EE               	goto	l4671
  5443  003910                     u5820:
  5444                           
  5445                           ; BSR set to: 0
  5446  003910  0E00               	movlw	0
  5447  003912  6F6D               	movwf	___fladd@aexp& (0+255),b
  5448                           
  5449                           ; BSR set to: 0
  5450  003914  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5451  003916  D00C               	goto	l974
  5452                           
  5453                           ; BSR set to: 0
  5454  003918  0060  F1BC  F068   	movff	___fladd@grs,??___fladd
  5455  00391E  0E7F               	movlw	127
  5456  003920  1768               	andwf	??___fladd& (0+255),f,b
  5457  003922  B4D8               	btfsc	status,2,c
  5458  003924  D003               	goto	l975
  5459  003926                     u5840:
  5460                           
  5461                           ; BSR set to: 0
  5462  003926  0E01               	movlw	1
  5463  003928  6F6D               	movwf	___fladd@aexp& (0+255),b
  5464  00392A  D002               	goto	l974
  5465  00392C                     l975:
  5466                           
  5467                           ; BSR set to: 0
  5468  00392C  B160               	btfsc	___fladd@b& (0+255),0,b
  5469  00392E  D7FB               	goto	u5840
  5470  003930                     l974:
  5471                           
  5472                           ; BSR set to: 0
  5473  003930  516D               	movf	___fladd@aexp& (0+255),w,b
  5474  003932  B4D8               	btfsc	status,2,c
  5475  003934  D028               	goto	l4707
  5476                           
  5477                           ; BSR set to: 0
  5478  003936  0E01               	movlw	1
  5479  003938  2760               	addwf	___fladd@b& (0+255),f,b
  5480  00393A  0E00               	movlw	0
  5481  00393C  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5482  00393E  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5483  003940  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5484                           
  5485                           ; BSR set to: 0
  5486  003942  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5487  003944  D020               	goto	l4707
  5488                           
  5489                           ; BSR set to: 0
  5490  003946  0060  F180  F068   	movff	___fladd@b,??___fladd
  5491  00394C  0060  F184  F069   	movff	___fladd@b+1,??___fladd+1
  5492  003952  0060  F188  F06A   	movff	___fladd@b+2,??___fladd+2
  5493  003958  0060  F18C  F06B   	movff	___fladd@b+3,??___fladd+3
  5494  00395E  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  5495  003960  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  5496  003962  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  5497  003964  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  5498  003966  3368               	rrcf	??___fladd& (0+255),f,b
  5499  003968  0060  F1A0  F060   	movff	??___fladd,___fladd@b
  5500  00396E  0060  F1A4  F061   	movff	??___fladd+1,___fladd@b+1
  5501  003974  0060  F1A8  F062   	movff	??___fladd+2,___fladd@b+2
  5502  00397A  0060  F1AC  F063   	movff	??___fladd+3,___fladd@b+3
  5503  003980  296E               	incf	___fladd@bexp& (0+255),w,b
  5504  003982  A4D8               	btfss	status,2,c
  5505                           
  5506                           ; BSR set to: 0
  5507  003984  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5508  003986                     l4707:
  5509                           
  5510                           ; BSR set to: 0
  5511  003986  296E               	incf	___fladd@bexp& (0+255),w,b
  5512  003988  B4D8               	btfsc	status,2,c
  5513  00398A  D003               	goto	u5900
  5514                           
  5515                           ; BSR set to: 0
  5516  00398C  516E               	movf	___fladd@bexp& (0+255),w,b
  5517  00398E  A4D8               	btfss	status,2,c
  5518  003990  D00D               	goto	l4715
  5519  003992                     u5900:
  5520                           
  5521                           ; BSR set to: 0
  5522  003992  0E00               	movlw	0
  5523  003994  6F60               	movwf	___fladd@b& (0+255),b
  5524  003996  0E00               	movlw	0
  5525  003998  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5526  00399A  0E00               	movlw	0
  5527  00399C  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5528  00399E  0E00               	movlw	0
  5529  0039A0  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5530  0039A2  516E               	movf	___fladd@bexp& (0+255),w,b
  5531  0039A4  A4D8               	btfss	status,2,c
  5532  0039A6  D002               	goto	l4715
  5533                           
  5534                           ; BSR set to: 0
  5535  0039A8  0E00               	movlw	0
  5536  0039AA  6F6C               	movwf	___fladd@signs& (0+255),b
  5537  0039AC                     l4715:
  5538                           
  5539                           ; BSR set to: 0
  5540  0039AC  A16E               	btfss	___fladd@bexp& (0+255),0,b
  5541  0039AE  D002               	goto	l4719
  5542                           
  5543                           ; BSR set to: 0
  5544  0039B0  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5545  0039B2  D001               	goto	l4721
  5546  0039B4                     l4719:
  5547                           
  5548                           ; BSR set to: 0
  5549  0039B4  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  5550  0039B6                     l4721:
  5551                           
  5552                           ; BSR set to: 0
  5553  0039B6  90D8               	bcf	status,0,c
  5554  0039B8  316E               	rrcf	___fladd@bexp& (0+255),w,b
  5555  0039BA  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5556                           
  5557                           ; BSR set to: 0
  5558  0039BC  BF6C               	btfsc	___fladd@signs& (0+255),7,b
  5559                           
  5560                           ; BSR set to: 0
  5561  0039BE  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  5562                           
  5563                           ; BSR set to: 0
  5564  0039C0  0060  F180  F060   	movff	___fladd@b,?___fladd
  5565  0039C6  0060  F184  F061   	movff	___fladd@b+1,?___fladd+1
  5566  0039CC  0060  F188  F062   	movff	___fladd@b+2,?___fladd+2
  5567  0039D2  0060  F18C  F063   	movff	___fladd@b+3,?___fladd+3
  5568                           
  5569                           ; BSR set to: 0
  5570  0039D8  0012               	return		;funcret
  5571  0039DA                     __end_of___fladd:
  5572                           	opt callstack 0
  5573                           
  5574 ;; *************** function ___flneg *****************
  5575 ;; Defined at:
  5576 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  f1              4    0[BANK0 ] unsigned char 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;		None
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  4    0[BANK0 ] unsigned char 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5590 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5593 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5594 ;;Total ram usage:        4 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:    2
  5597 ;; This function calls:
  5598 ;;		Nothing
  5599 ;; This function is called by:
  5600 ;;		_efgtoa
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text21
  5605  004C2A                     __ptext21:
  5606                           	opt callstack 0
  5607  004C2A                     ___flneg:
  5608                           	opt callstack 23
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;incstack = 0
  5612  004C2A  0100               	movlb	0	; () banked
  5613  004C2C  5160               	movf	___flneg@f1& (0+255),w,b
  5614  004C2E  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5615  004C30  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5616  004C32  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5617  004C34  B4D8               	btfsc	status,2,c
  5618  004C36  D008               	goto	l5213
  5619                           
  5620                           ; BSR set to: 0
  5621  004C38  0E00               	movlw	0
  5622  004C3A  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5623  004C3C  0E00               	movlw	0
  5624  004C3E  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5625  004C40  0E00               	movlw	0
  5626  004C42  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5627  004C44  0E80               	movlw	128
  5628  004C46  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5629  004C48                     l5213:
  5630                           
  5631                           ; BSR set to: 0
  5632  004C48  0060  F180  F060   	movff	___flneg@f1,?___flneg
  5633  004C4E  0060  F184  F061   	movff	___flneg@f1+1,?___flneg+1
  5634  004C54  0060  F188  F062   	movff	___flneg@f1+2,?___flneg+2
  5635  004C5A  0060  F18C  F063   	movff	___flneg@f1+3,?___flneg+3
  5636                           
  5637                           ; BSR set to: 0
  5638  004C60  0012               	return		;funcret
  5639  004C62                     __end_of___flneg:
  5640                           	opt callstack 0
  5641                           
  5642 ;; *************** function ___flmul *****************
  5643 ;; Defined at:
  5644 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  b               4    0[BANK0 ] unsigned char 
  5647 ;;  a               4    4[BANK0 ] unsigned char 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  prod            4   19[BANK0 ] struct .
  5650 ;;  grs             4   14[BANK0 ] unsigned long 
  5651 ;;  temp            2   23[BANK0 ] struct .
  5652 ;;  bexp            1   18[BANK0 ] unsigned char 
  5653 ;;  aexp            1   13[BANK0 ] unsigned char 
  5654 ;;  sign            1   12[BANK0 ] unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  4    0[BANK0 ] unsigned char 
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0, prodl, prodh
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5664 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5665 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5666 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5667 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5668 ;;Total ram usage:       25 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:    2
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_efgtoa
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text22
  5679  002B94                     __ptext22:
  5680                           	opt callstack 0
  5681  002B94                     ___flmul:
  5682                           	opt callstack 23
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;incstack = 0
  5686  002B94  0100               	movlb	0	; () banked
  5687  002B96  5163               	movf	(___flmul@b+3)& (0+255),w,b
  5688  002B98  0B80               	andlw	128
  5689  002B9A  6F6C               	movwf	___flmul@sign& (0+255),b
  5690  002B9C  5163               	movf	(___flmul@b+3)& (0+255),w,b
  5691  002B9E  2563               	addwf	(___flmul@b+3)& (0+255),w,b
  5692  002BA0  6F72               	movwf	___flmul@bexp& (0+255),b
  5693                           
  5694                           ; BSR set to: 0
  5695  002BA2  BF62               	btfsc	(___flmul@b+2)& (0+255),7,b
  5696                           
  5697                           ; BSR set to: 0
  5698  002BA4  8172               	bsf	___flmul@bexp& (0+255),0,b
  5699                           
  5700                           ; BSR set to: 0
  5701  002BA6  5172               	movf	___flmul@bexp& (0+255),w,b
  5702  002BA8  B4D8               	btfsc	status,2,c
  5703  002BAA  D00D               	goto	l4969
  5704                           
  5705                           ; BSR set to: 0
  5706  002BAC  2972               	incf	___flmul@bexp& (0+255),w,b
  5707  002BAE  A4D8               	btfss	status,2,c
  5708  002BB0  D008               	goto	l4967
  5709                           
  5710                           ; BSR set to: 0
  5711  002BB2  0E00               	movlw	0
  5712  002BB4  6F60               	movwf	___flmul@b& (0+255),b
  5713  002BB6  0E00               	movlw	0
  5714  002BB8  6F61               	movwf	(___flmul@b+1)& (0+255),b
  5715  002BBA  0E00               	movlw	0
  5716  002BBC  6F62               	movwf	(___flmul@b+2)& (0+255),b
  5717  002BBE  0E00               	movlw	0
  5718  002BC0  6F63               	movwf	(___flmul@b+3)& (0+255),b
  5719  002BC2                     l4967:
  5720                           
  5721                           ; BSR set to: 0
  5722  002BC2  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
  5723  002BC4  D008               	goto	l4971
  5724  002BC6                     l4969:
  5725                           
  5726                           ; BSR set to: 0
  5727  002BC6  0E00               	movlw	0
  5728  002BC8  6F60               	movwf	___flmul@b& (0+255),b
  5729  002BCA  0E00               	movlw	0
  5730  002BCC  6F61               	movwf	(___flmul@b+1)& (0+255),b
  5731  002BCE  0E00               	movlw	0
  5732  002BD0  6F62               	movwf	(___flmul@b+2)& (0+255),b
  5733  002BD2  0E00               	movlw	0
  5734  002BD4  6F63               	movwf	(___flmul@b+3)& (0+255),b
  5735  002BD6                     l4971:
  5736                           
  5737                           ; BSR set to: 0
  5738  002BD6  5167               	movf	(___flmul@a+3)& (0+255),w,b
  5739  002BD8  0B80               	andlw	128
  5740  002BDA  1B6C               	xorwf	___flmul@sign& (0+255),f,b
  5741                           
  5742                           ; BSR set to: 0
  5743  002BDC  5167               	movf	(___flmul@a+3)& (0+255),w,b
  5744  002BDE  2567               	addwf	(___flmul@a+3)& (0+255),w,b
  5745  002BE0  6F6D               	movwf	___flmul@aexp& (0+255),b
  5746                           
  5747                           ; BSR set to: 0
  5748  002BE2  BF66               	btfsc	(___flmul@a+2)& (0+255),7,b
  5749                           
  5750                           ; BSR set to: 0
  5751  002BE4  816D               	bsf	___flmul@aexp& (0+255),0,b
  5752                           
  5753                           ; BSR set to: 0
  5754  002BE6  516D               	movf	___flmul@aexp& (0+255),w,b
  5755  002BE8  B4D8               	btfsc	status,2,c
  5756  002BEA  D00D               	goto	l4987
  5757                           
  5758                           ; BSR set to: 0
  5759  002BEC  296D               	incf	___flmul@aexp& (0+255),w,b
  5760  002BEE  A4D8               	btfss	status,2,c
  5761  002BF0  D008               	goto	l4985
  5762                           
  5763                           ; BSR set to: 0
  5764  002BF2  0E00               	movlw	0
  5765  002BF4  6F64               	movwf	___flmul@a& (0+255),b
  5766  002BF6  0E00               	movlw	0
  5767  002BF8  6F65               	movwf	(___flmul@a+1)& (0+255),b
  5768  002BFA  0E00               	movlw	0
  5769  002BFC  6F66               	movwf	(___flmul@a+2)& (0+255),b
  5770  002BFE  0E00               	movlw	0
  5771  002C00  6F67               	movwf	(___flmul@a+3)& (0+255),b
  5772  002C02                     l4985:
  5773                           
  5774                           ; BSR set to: 0
  5775  002C02  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
  5776  002C04  D008               	goto	l1034
  5777  002C06                     l4987:
  5778                           
  5779                           ; BSR set to: 0
  5780  002C06  0E00               	movlw	0
  5781  002C08  6F64               	movwf	___flmul@a& (0+255),b
  5782  002C0A  0E00               	movlw	0
  5783  002C0C  6F65               	movwf	(___flmul@a+1)& (0+255),b
  5784  002C0E  0E00               	movlw	0
  5785  002C10  6F66               	movwf	(___flmul@a+2)& (0+255),b
  5786  002C12  0E00               	movlw	0
  5787  002C14  6F67               	movwf	(___flmul@a+3)& (0+255),b
  5788  002C16                     l1034:
  5789                           
  5790                           ; BSR set to: 0
  5791  002C16  516D               	movf	___flmul@aexp& (0+255),w,b
  5792  002C18  B4D8               	btfsc	status,2,c
  5793  002C1A  D003               	goto	u6500
  5794                           
  5795                           ; BSR set to: 0
  5796  002C1C  5172               	movf	___flmul@bexp& (0+255),w,b
  5797  002C1E  A4D8               	btfss	status,2,c
  5798  002C20  D009               	goto	l4995
  5799  002C22                     u6500:
  5800                           
  5801                           ; BSR set to: 0
  5802  002C22  0E00               	movlw	0
  5803  002C24  6F60               	movwf	?___flmul& (0+255),b
  5804  002C26  0E00               	movlw	0
  5805  002C28  6F61               	movwf	(?___flmul+1)& (0+255),b
  5806  002C2A  0E00               	movlw	0
  5807  002C2C  6F62               	movwf	(?___flmul+2)& (0+255),b
  5808  002C2E  0E00               	movlw	0
  5809  002C30  6F63               	movwf	(?___flmul+3)& (0+255),b
  5810  002C32  0012               	return	
  5811  002C34                     l4995:
  5812                           
  5813                           ; BSR set to: 0
  5814  002C34  5166               	movf	(___flmul@a+2)& (0+255),w,b
  5815  002C36  0360               	mulwf	___flmul@b& (0+255),b
  5816  002C38  006F FFCC  F077    	movff	prodl,___flmul@temp
  5817  002C3E  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  5818                           
  5819                           ; BSR set to: 0
  5820  002C44  5177               	movf	___flmul@temp& (0+255),w,b
  5821  002C46  6F6E               	movwf	___flmul@grs& (0+255),b
  5822  002C48  6B6F               	clrf	(___flmul@grs+1)& (0+255),b
  5823  002C4A  6B70               	clrf	(___flmul@grs+2)& (0+255),b
  5824  002C4C  6B71               	clrf	(___flmul@grs+3)& (0+255),b
  5825                           
  5826                           ; BSR set to: 0
  5827  002C4E  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  5828  002C50  6F73               	movwf	___flmul@prod& (0+255),b
  5829  002C52  6B74               	clrf	(___flmul@prod+1)& (0+255),b
  5830  002C54  6B75               	clrf	(___flmul@prod+2)& (0+255),b
  5831  002C56  6B76               	clrf	(___flmul@prod+3)& (0+255),b
  5832  002C58  5165               	movf	(___flmul@a+1)& (0+255),w,b
  5833  002C5A  0361               	mulwf	(___flmul@b+1)& (0+255),b
  5834  002C5C  006F FFCC  F077    	movff	prodl,___flmul@temp
  5835  002C62  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  5836                           
  5837                           ; BSR set to: 0
  5838  002C68  5177               	movf	___flmul@temp& (0+255),w,b
  5839  002C6A  276E               	addwf	___flmul@grs& (0+255),f,b
  5840  002C6C  0E00               	movlw	0
  5841  002C6E  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5842  002C70  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5843  002C72  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5844                           
  5845                           ; BSR set to: 0
  5846  002C74  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  5847  002C76  2773               	addwf	___flmul@prod& (0+255),f,b
  5848  002C78  0E00               	movlw	0
  5849  002C7A  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5850  002C7C  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5851  002C7E  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5852  002C80  5164               	movf	___flmul@a& (0+255),w,b
  5853  002C82  0362               	mulwf	(___flmul@b+2)& (0+255),b
  5854  002C84  006F FFCC  F077    	movff	prodl,___flmul@temp
  5855  002C8A  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  5856                           
  5857                           ; BSR set to: 0
  5858  002C90  5177               	movf	___flmul@temp& (0+255),w,b
  5859  002C92  276E               	addwf	___flmul@grs& (0+255),f,b
  5860  002C94  0E00               	movlw	0
  5861  002C96  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5862  002C98  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5863  002C9A  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5864                           
  5865                           ; BSR set to: 0
  5866  002C9C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  5867  002C9E  2773               	addwf	___flmul@prod& (0+255),f,b
  5868  002CA0  0E00               	movlw	0
  5869  002CA2  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5870  002CA4  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5871  002CA6  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5872                           
  5873                           ; BSR set to: 0
  5874  002CA8  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  5875  002CAE  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  5876  002CB4  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  5877  002CBA  6B6E               	clrf	___flmul@grs& (0+255),b
  5878                           
  5879                           ; BSR set to: 0
  5880  002CBC  5164               	movf	___flmul@a& (0+255),w,b
  5881  002CBE  0361               	mulwf	(___flmul@b+1)& (0+255),b
  5882  002CC0  006F FFCC  F077    	movff	prodl,___flmul@temp
  5883  002CC6  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  5884                           
  5885                           ; BSR set to: 0
  5886  002CCC  5177               	movf	___flmul@temp& (0+255),w,b
  5887  002CCE  276E               	addwf	___flmul@grs& (0+255),f,b
  5888  002CD0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  5889  002CD2  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5890  002CD4  0E00               	movlw	0
  5891  002CD6  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5892  002CD8  0E00               	movlw	0
  5893  002CDA  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5894                           
  5895                           ; BSR set to: 0
  5896  002CDC  5165               	movf	(___flmul@a+1)& (0+255),w,b
  5897  002CDE  0360               	mulwf	___flmul@b& (0+255),b
  5898  002CE0  006F FFCC  F077    	movff	prodl,___flmul@temp
  5899  002CE6  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  5900                           
  5901                           ; BSR set to: 0
  5902  002CEC  5177               	movf	___flmul@temp& (0+255),w,b
  5903  002CEE  276E               	addwf	___flmul@grs& (0+255),f,b
  5904  002CF0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  5905  002CF2  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5906  002CF4  0E00               	movlw	0
  5907  002CF6  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5908  002CF8  0E00               	movlw	0
  5909  002CFA  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5910                           
  5911                           ; BSR set to: 0
  5912  002CFC  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  5913  002D02  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  5914  002D08  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  5915  002D0E  6B6E               	clrf	___flmul@grs& (0+255),b
  5916  002D10  5164               	movf	___flmul@a& (0+255),w,b
  5917  002D12  0360               	mulwf	___flmul@b& (0+255),b
  5918  002D14  006F FFCC  F077    	movff	prodl,___flmul@temp
  5919  002D1A  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  5920                           
  5921                           ; BSR set to: 0
  5922  002D20  5177               	movf	___flmul@temp& (0+255),w,b
  5923  002D22  276E               	addwf	___flmul@grs& (0+255),f,b
  5924  002D24  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  5925  002D26  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5926  002D28  0E00               	movlw	0
  5927  002D2A  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5928  002D2C  0E00               	movlw	0
  5929  002D2E  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5930                           
  5931                           ; BSR set to: 0
  5932  002D30  5166               	movf	(___flmul@a+2)& (0+255),w,b
  5933  002D32  0361               	mulwf	(___flmul@b+1)& (0+255),b
  5934  002D34  006F FFCC  F077    	movff	prodl,___flmul@temp
  5935  002D3A  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  5936  002D40  5177               	movf	___flmul@temp& (0+255),w,b
  5937  002D42  2773               	addwf	___flmul@prod& (0+255),f,b
  5938  002D44  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  5939  002D46  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5940  002D48  0E00               	movlw	0
  5941  002D4A  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5942  002D4C  0E00               	movlw	0
  5943  002D4E  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5944                           
  5945                           ; BSR set to: 0
  5946  002D50  5165               	movf	(___flmul@a+1)& (0+255),w,b
  5947  002D52  0362               	mulwf	(___flmul@b+2)& (0+255),b
  5948  002D54  006F FFCC  F077    	movff	prodl,___flmul@temp
  5949  002D5A  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  5950                           
  5951                           ; BSR set to: 0
  5952  002D60  5177               	movf	___flmul@temp& (0+255),w,b
  5953  002D62  2773               	addwf	___flmul@prod& (0+255),f,b
  5954  002D64  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  5955  002D66  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5956  002D68  0E00               	movlw	0
  5957  002D6A  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5958  002D6C  0E00               	movlw	0
  5959  002D6E  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5960  002D70  5166               	movf	(___flmul@a+2)& (0+255),w,b
  5961  002D72  0362               	mulwf	(___flmul@b+2)& (0+255),b
  5962  002D74  006F FFCC  F077    	movff	prodl,___flmul@temp
  5963  002D7A  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  5964                           
  5965                           ; BSR set to: 0
  5966  002D80  5177               	movf	___flmul@temp& (0+255),w,b
  5967  002D82  6F68               	movwf	??___flmul& (0+255),b
  5968  002D84  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  5969  002D86  6F69               	movwf	(??___flmul+1)& (0+255),b
  5970  002D88  6B6A               	clrf	(??___flmul+2)& (0+255),b
  5971  002D8A  6B6B               	clrf	(??___flmul+3)& (0+255),b
  5972  002D8C  0060  F1A8  F06B   	movff	??___flmul+2,??___flmul+3
  5973  002D92  0060  F1A4  F06A   	movff	??___flmul+1,??___flmul+2
  5974  002D98  0060  F1A0  F069   	movff	??___flmul,??___flmul+1
  5975  002D9E  6B68               	clrf	??___flmul& (0+255),b
  5976  002DA0  5168               	movf	??___flmul& (0+255),w,b
  5977  002DA2  2773               	addwf	___flmul@prod& (0+255),f,b
  5978  002DA4  5169               	movf	(??___flmul+1)& (0+255),w,b
  5979  002DA6  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5980  002DA8  516A               	movf	(??___flmul+2)& (0+255),w,b
  5981  002DAA  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5982  002DAC  516B               	movf	(??___flmul+3)& (0+255),w,b
  5983  002DAE  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5984                           
  5985                           ; BSR set to: 0
  5986  002DB0  0060  F1B8  F068   	movff	___flmul@grs,??___flmul
  5987  002DB6  0060  F1BC  F069   	movff	___flmul@grs+1,??___flmul+1
  5988  002DBC  0060  F1C0  F06A   	movff	___flmul@grs+2,??___flmul+2
  5989  002DC2  0060  F1C4  F06B   	movff	___flmul@grs+3,??___flmul+3
  5990  002DC8  0E19               	movlw	25
  5991  002DCA  D005               	goto	u6510
  5992  002DCC                     u6515:
  5993  002DCC  90D8               	bcf	status,0,c
  5994  002DCE  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  5995  002DD0  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  5996  002DD2  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  5997  002DD4  3368               	rrcf	??___flmul& (0+255),f,b
  5998  002DD6                     u6510:
  5999  002DD6  2EE8               	decfsz	wreg,f,c
  6000  002DD8  D7F9               	goto	u6515
  6001  002DDA  5168               	movf	??___flmul& (0+255),w,b
  6002  002DDC  2773               	addwf	___flmul@prod& (0+255),f,b
  6003  002DDE  5169               	movf	(??___flmul+1)& (0+255),w,b
  6004  002DE0  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6005  002DE2  516A               	movf	(??___flmul+2)& (0+255),w,b
  6006  002DE4  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6007  002DE6  516B               	movf	(??___flmul+3)& (0+255),w,b
  6008  002DE8  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6009                           
  6010                           ; BSR set to: 0
  6011  002DEA  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6012  002DF0  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6013  002DF6  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6014  002DFC  6B6E               	clrf	___flmul@grs& (0+255),b
  6015                           
  6016                           ; BSR set to: 0
  6017  002DFE  516D               	movf	___flmul@aexp& (0+255),w,b
  6018  002E00  0060  F1C8  F068   	movff	___flmul@bexp,??___flmul
  6019  002E06  6B69               	clrf	(??___flmul+1)& (0+255),b
  6020  002E08  2768               	addwf	??___flmul& (0+255),f,b
  6021  002E0A  0E00               	movlw	0
  6022  002E0C  2369               	addwfc	(??___flmul+1)& (0+255),f,b
  6023  002E0E  0E82               	movlw	130
  6024  002E10  2568               	addwf	??___flmul& (0+255),w,b
  6025  002E12  6F77               	movwf	___flmul@temp& (0+255),b
  6026  002E14  0EFF               	movlw	255
  6027  002E16  2169               	addwfc	(??___flmul+1)& (0+255),w,b
  6028  002E18  6F78               	movwf	(___flmul@temp+1)& (0+255),b
  6029  002E1A  D00F               	goto	l5043
  6030  002E1C                     l5037:
  6031                           
  6032                           ; BSR set to: 0
  6033  002E1C  90D8               	bcf	status,0,c
  6034  002E1E  3773               	rlcf	___flmul@prod& (0+255),f,b
  6035  002E20  3774               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6036  002E22  3775               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6037  002E24  3776               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6038                           
  6039                           ; BSR set to: 0
  6040  002E26  BF71               	btfsc	(___flmul@grs+3)& (0+255),7,b
  6041                           
  6042                           ; BSR set to: 0
  6043  002E28  8173               	bsf	___flmul@prod& (0+255),0,b
  6044                           
  6045                           ; BSR set to: 0
  6046  002E2A  90D8               	bcf	status,0,c
  6047  002E2C  376E               	rlcf	___flmul@grs& (0+255),f,b
  6048  002E2E  376F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6049  002E30  3770               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6050  002E32  3771               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6051  002E34  0777               	decf	___flmul@temp& (0+255),f,b
  6052  002E36  A0D8               	btfss	status,0,c
  6053  002E38  0778               	decf	(___flmul@temp+1)& (0+255),f,b
  6054  002E3A                     l5043:
  6055                           
  6056                           ; BSR set to: 0
  6057  002E3A  AF75               	btfss	(___flmul@prod+2)& (0+255),7,b
  6058  002E3C  D7EF               	goto	l5037
  6059                           
  6060                           ; BSR set to: 0
  6061  002E3E  0E00               	movlw	0
  6062  002E40  6F6D               	movwf	___flmul@aexp& (0+255),b
  6063                           
  6064                           ; BSR set to: 0
  6065  002E42  AF71               	btfss	(___flmul@grs+3)& (0+255),7,b
  6066  002E44  D017               	goto	l1043
  6067                           
  6068                           ; BSR set to: 0
  6069  002E46  0EFF               	movlw	255
  6070  002E48  156E               	andwf	___flmul@grs& (0+255),w,b
  6071  002E4A  6F68               	movwf	??___flmul& (0+255),b
  6072  002E4C  0EFF               	movlw	255
  6073  002E4E  156F               	andwf	(___flmul@grs+1)& (0+255),w,b
  6074  002E50  6F69               	movwf	(??___flmul+1)& (0+255),b
  6075  002E52  0EFF               	movlw	255
  6076  002E54  1570               	andwf	(___flmul@grs+2)& (0+255),w,b
  6077  002E56  6F6A               	movwf	(??___flmul+2)& (0+255),b
  6078  002E58  0E7F               	movlw	127
  6079  002E5A  1571               	andwf	(___flmul@grs+3)& (0+255),w,b
  6080  002E5C  6F6B               	movwf	(??___flmul+3)& (0+255),b
  6081  002E5E  5168               	movf	??___flmul& (0+255),w,b
  6082  002E60  1169               	iorwf	(??___flmul+1)& (0+255),w,b
  6083  002E62  116A               	iorwf	(??___flmul+2)& (0+255),w,b
  6084  002E64  116B               	iorwf	(??___flmul+3)& (0+255),w,b
  6085  002E66  B4D8               	btfsc	status,2,c
  6086  002E68  D003               	goto	l1044
  6087  002E6A                     u6550:
  6088                           
  6089                           ; BSR set to: 0
  6090  002E6A  0E01               	movlw	1
  6091  002E6C  6F6D               	movwf	___flmul@aexp& (0+255),b
  6092  002E6E  D002               	goto	l1043
  6093  002E70                     l1044:
  6094                           
  6095                           ; BSR set to: 0
  6096  002E70  B173               	btfsc	___flmul@prod& (0+255),0,b
  6097  002E72  D7FB               	goto	u6550
  6098  002E74                     l1043:
  6099                           
  6100                           ; BSR set to: 0
  6101  002E74  516D               	movf	___flmul@aexp& (0+255),w,b
  6102  002E76  B4D8               	btfsc	status,2,c
  6103  002E78  D027               	goto	l5063
  6104                           
  6105                           ; BSR set to: 0
  6106  002E7A  0E01               	movlw	1
  6107  002E7C  2773               	addwf	___flmul@prod& (0+255),f,b
  6108  002E7E  0E00               	movlw	0
  6109  002E80  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6110  002E82  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6111  002E84  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6112                           
  6113                           ; BSR set to: 0
  6114  002E86  A176               	btfss	(___flmul@prod+3)& (0+255),0,b
  6115  002E88  D01F               	goto	l5063
  6116                           
  6117                           ; BSR set to: 0
  6118  002E8A  0060  F1CC  F068   	movff	___flmul@prod,??___flmul
  6119  002E90  0060  F1D0  F069   	movff	___flmul@prod+1,??___flmul+1
  6120  002E96  0060  F1D4  F06A   	movff	___flmul@prod+2,??___flmul+2
  6121  002E9C  0060  F1D8  F06B   	movff	___flmul@prod+3,??___flmul+3
  6122  002EA2  356B               	rlcf	(??___flmul+3)& (0+255),w,b
  6123  002EA4  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  6124  002EA6  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  6125  002EA8  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  6126  002EAA  3368               	rrcf	??___flmul& (0+255),f,b
  6127  002EAC  0060  F1A0  F073   	movff	??___flmul,___flmul@prod
  6128  002EB2  0060  F1A4  F074   	movff	??___flmul+1,___flmul@prod+1
  6129  002EB8  0060  F1A8  F075   	movff	??___flmul+2,___flmul@prod+2
  6130  002EBE  0060  F1AC  F076   	movff	??___flmul+3,___flmul@prod+3
  6131                           
  6132                           ; BSR set to: 0
  6133  002EC4  4B77               	infsnz	___flmul@temp& (0+255),f,b
  6134  002EC6  2B78               	incf	(___flmul@temp+1)& (0+255),f,b
  6135  002EC8                     l5063:
  6136                           
  6137                           ; BSR set to: 0
  6138  002EC8  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6139  002ECA  D00D               	goto	l5067
  6140  002ECC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6141  002ECE  E103               	bnz	u6590
  6142  002ED0  2977               	incf	___flmul@temp& (0+255),w,b
  6143  002ED2  A0D8               	btfss	status,0,c
  6144  002ED4  D008               	goto	l5067
  6145  002ED6                     u6590:
  6146                           
  6147                           ; BSR set to: 0
  6148  002ED6  0E00               	movlw	0
  6149  002ED8  6F73               	movwf	___flmul@prod& (0+255),b
  6150  002EDA  0E00               	movlw	0
  6151  002EDC  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6152  002EDE  0E80               	movlw	128
  6153  002EE0  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6154  002EE2  0E7F               	movlw	127
  6155  002EE4  D021               	goto	L9
  6156  002EE6                     l5067:
  6157                           
  6158                           ; BSR set to: 0
  6159  002EE6  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6160  002EE8  D005               	goto	u6600
  6161  002EEA  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6162  002EEC  E10E               	bnz	l1051
  6163  002EEE  0577               	decf	___flmul@temp& (0+255),w,b
  6164  002EF0  B0D8               	btfsc	status,0,c
  6165  002EF2  D00B               	goto	l1051
  6166  002EF4                     u6600:
  6167                           
  6168                           ; BSR set to: 0
  6169  002EF4  0E00               	movlw	0
  6170  002EF6  6F73               	movwf	___flmul@prod& (0+255),b
  6171  002EF8  0E00               	movlw	0
  6172  002EFA  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6173  002EFC  0E00               	movlw	0
  6174  002EFE  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6175  002F00  0E00               	movlw	0
  6176  002F02  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6177  002F04  0E00               	movlw	0
  6178  002F06  6F6C               	movwf	___flmul@sign& (0+255),b
  6179  002F08  D010               	goto	l5079
  6180  002F0A                     l1051:
  6181                           
  6182                           ; BSR set to: 0
  6183  002F0A  0060  F1DC  F072   	movff	___flmul@temp,___flmul@bexp
  6184                           
  6185                           ; BSR set to: 0
  6186  002F10  0EFF               	movlw	255
  6187  002F12  1773               	andwf	___flmul@prod& (0+255),f,b
  6188  002F14  0EFF               	movlw	255
  6189  002F16  1774               	andwf	(___flmul@prod+1)& (0+255),f,b
  6190  002F18  0E7F               	movlw	127
  6191  002F1A  1775               	andwf	(___flmul@prod+2)& (0+255),f,b
  6192  002F1C  0E00               	movlw	0
  6193  002F1E  1776               	andwf	(___flmul@prod+3)& (0+255),f,b
  6194                           
  6195                           ; BSR set to: 0
  6196  002F20  B172               	btfsc	___flmul@bexp& (0+255),0,b
  6197                           
  6198                           ; BSR set to: 0
  6199  002F22  8F75               	bsf	(___flmul@prod+2)& (0+255),7,b
  6200                           
  6201                           ; BSR set to: 0
  6202  002F24  90D8               	bcf	status,0,c
  6203  002F26  3172               	rrcf	___flmul@bexp& (0+255),w,b
  6204  002F28                     L9:
  6205  002F28  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6206  002F2A                     l5079:
  6207                           
  6208                           ; BSR set to: 0
  6209  002F2A  516C               	movf	___flmul@sign& (0+255),w,b
  6210  002F2C  1376               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6211                           
  6212                           ; BSR set to: 0
  6213  002F2E  0060  F1CC  F060   	movff	___flmul@prod,?___flmul
  6214  002F34  0060  F1D0  F061   	movff	___flmul@prod+1,?___flmul+1
  6215  002F3A  0060  F1D4  F062   	movff	___flmul@prod+2,?___flmul+2
  6216  002F40  0060  F1D8  F063   	movff	___flmul@prod+3,?___flmul+3
  6217                           
  6218                           ; BSR set to: 0
  6219  002F46  0012               	return		;funcret
  6220  002F48                     __end_of___flmul:
  6221                           	opt callstack 0
  6222                           
  6223 ;; *************** function ___flge *****************
  6224 ;; Defined at:
  6225 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;  ff1             4   25[BANK0 ] unsigned char 
  6228 ;;  ff2             4   29[BANK0 ] unsigned char 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;		None               void
  6233 ;; Registers used:
  6234 ;;		wreg, status,2, status,0
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6240 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6242 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6243 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6244 ;;Total ram usage:       12 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    2
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_efgtoa
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           	psect	text23
  6255  0040D6                     __ptext23:
  6256                           	opt callstack 0
  6257  0040D6                     ___flge:
  6258                           	opt callstack 23
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;incstack = 0
  6262  0040D6  0E00               	movlw	0
  6263  0040D8  0100               	movlb	0	; () banked
  6264  0040DA  1579               	andwf	___flge@ff1& (0+255),w,b
  6265  0040DC  6F81               	movwf	??___flge& (0+255),b
  6266  0040DE  0E00               	movlw	0
  6267  0040E0  157A               	andwf	(___flge@ff1+1)& (0+255),w,b
  6268  0040E2  6F82               	movwf	(??___flge+1)& (0+255),b
  6269  0040E4  0E80               	movlw	128
  6270  0040E6  157B               	andwf	(___flge@ff1+2)& (0+255),w,b
  6271  0040E8  6F83               	movwf	(??___flge+2)& (0+255),b
  6272  0040EA  0E7F               	movlw	127
  6273  0040EC  157C               	andwf	(___flge@ff1+3)& (0+255),w,b
  6274  0040EE  6F84               	movwf	(??___flge+3)& (0+255),b
  6275  0040F0  5181               	movf	??___flge& (0+255),w,b
  6276  0040F2  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6277  0040F4  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6278  0040F6  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6279  0040F8  A4D8               	btfss	status,2,c
  6280  0040FA  D008               	goto	l5191
  6281                           
  6282                           ; BSR set to: 0
  6283  0040FC  0E00               	movlw	0
  6284  0040FE  6F79               	movwf	___flge@ff1& (0+255),b
  6285  004100  0E00               	movlw	0
  6286  004102  6F7A               	movwf	(___flge@ff1+1)& (0+255),b
  6287  004104  0E00               	movlw	0
  6288  004106  6F7B               	movwf	(___flge@ff1+2)& (0+255),b
  6289  004108  0E00               	movlw	0
  6290  00410A  6F7C               	movwf	(___flge@ff1+3)& (0+255),b
  6291  00410C                     l5191:
  6292                           
  6293                           ; BSR set to: 0
  6294  00410C  0E00               	movlw	0
  6295  00410E  157D               	andwf	___flge@ff2& (0+255),w,b
  6296  004110  6F81               	movwf	??___flge& (0+255),b
  6297  004112  0E00               	movlw	0
  6298  004114  157E               	andwf	(___flge@ff2+1)& (0+255),w,b
  6299  004116  6F82               	movwf	(??___flge+1)& (0+255),b
  6300  004118  0E80               	movlw	128
  6301  00411A  157F               	andwf	(___flge@ff2+2)& (0+255),w,b
  6302  00411C  6F83               	movwf	(??___flge+2)& (0+255),b
  6303  00411E  0E7F               	movlw	127
  6304  004120  1580               	andwf	(___flge@ff2+3)& (0+255),w,b
  6305  004122  6F84               	movwf	(??___flge+3)& (0+255),b
  6306  004124  5181               	movf	??___flge& (0+255),w,b
  6307  004126  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6308  004128  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6309  00412A  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6310  00412C  A4D8               	btfss	status,2,c
  6311  00412E  D008               	goto	l5195
  6312                           
  6313                           ; BSR set to: 0
  6314  004130  0E00               	movlw	0
  6315  004132  6F7D               	movwf	___flge@ff2& (0+255),b
  6316  004134  0E00               	movlw	0
  6317  004136  6F7E               	movwf	(___flge@ff2+1)& (0+255),b
  6318  004138  0E00               	movlw	0
  6319  00413A  6F7F               	movwf	(___flge@ff2+2)& (0+255),b
  6320  00413C  0E00               	movlw	0
  6321  00413E  6F80               	movwf	(___flge@ff2+3)& (0+255),b
  6322  004140                     l5195:
  6323                           
  6324                           ; BSR set to: 0
  6325  004140  AF7C               	btfss	(___flge@ff1+3)& (0+255),7,b
  6326  004142  D009               	goto	l5199
  6327                           
  6328                           ; BSR set to: 0
  6329  004144  6D79               	negf	___flge@ff1& (0+255),b
  6330  004146  1F7A               	comf	(___flge@ff1+1)& (0+255),f,b
  6331  004148  B0D8               	btfsc	status,0,c
  6332  00414A  2B7A               	incf	(___flge@ff1+1)& (0+255),f,b
  6333  00414C  1F7B               	comf	(___flge@ff1+2)& (0+255),f,b
  6334  00414E  B0D8               	btfsc	status,0,c
  6335  004150  2B7B               	incf	(___flge@ff1+2)& (0+255),f,b
  6336  004152  0E80               	movlw	128
  6337  004154  577C               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6338  004156                     l5199:
  6339                           
  6340                           ; BSR set to: 0
  6341  004156  AF80               	btfss	(___flge@ff2+3)& (0+255),7,b
  6342  004158  D009               	goto	l685
  6343                           
  6344                           ; BSR set to: 0
  6345  00415A  6D7D               	negf	___flge@ff2& (0+255),b
  6346  00415C  1F7E               	comf	(___flge@ff2+1)& (0+255),f,b
  6347  00415E  B0D8               	btfsc	status,0,c
  6348  004160  2B7E               	incf	(___flge@ff2+1)& (0+255),f,b
  6349  004162  1F7F               	comf	(___flge@ff2+2)& (0+255),f,b
  6350  004164  B0D8               	btfsc	status,0,c
  6351  004166  2B7F               	incf	(___flge@ff2+2)& (0+255),f,b
  6352  004168  0E80               	movlw	128
  6353  00416A  5780               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6354  00416C                     l685:
  6355                           
  6356                           ; BSR set to: 0
  6357  00416C  0E00               	movlw	0
  6358  00416E  1B79               	xorwf	___flge@ff1& (0+255),f,b
  6359  004170  0E00               	movlw	0
  6360  004172  1B7A               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6361  004174  0E00               	movlw	0
  6362  004176  1B7B               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6363  004178  0E80               	movlw	128
  6364  00417A  1B7C               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6365  00417C  0E00               	movlw	0
  6366  00417E  1B7D               	xorwf	___flge@ff2& (0+255),f,b
  6367  004180  0E00               	movlw	0
  6368  004182  1B7E               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6369  004184  0E00               	movlw	0
  6370  004186  1B7F               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6371  004188  0E80               	movlw	128
  6372  00418A  1B80               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6373  00418C  517D               	movf	___flge@ff2& (0+255),w,b
  6374  00418E  5D79               	subwf	___flge@ff1& (0+255),w,b
  6375  004190  517E               	movf	(___flge@ff2+1)& (0+255),w,b
  6376  004192  597A               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6377  004194  517F               	movf	(___flge@ff2+2)& (0+255),w,b
  6378  004196  597B               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6379  004198  5180               	movf	(___flge@ff2+3)& (0+255),w,b
  6380  00419A  597C               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6381  00419C  B0D8               	btfsc	status,0,c
  6382  00419E  D002               	goto	l5205
  6383                           
  6384                           ; BSR set to: 0
  6385  0041A0  90D8               	bcf	status,0,c
  6386  0041A2  0012               	return	
  6387  0041A4                     l5205:
  6388                           
  6389                           ; BSR set to: 0
  6390  0041A4  80D8               	bsf	status,0,c
  6391                           
  6392                           ; BSR set to: 0
  6393  0041A6  0012               	return		;funcret
  6394  0041A8                     __end_of___flge:
  6395                           	opt callstack 0
  6396                           
  6397 ;; *************** function ___fleq *****************
  6398 ;; Defined at:
  6399 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;  ff1             4    0[BANK0 ] unsigned char 
  6402 ;;  ff2             4    4[BANK0 ] unsigned char 
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;		None               void
  6407 ;; Registers used:
  6408 ;;		wreg, status,2, status,0
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6414 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6416 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6417 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6418 ;;Total ram usage:       12 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; Hardware stack levels required when called:    2
  6421 ;; This function calls:
  6422 ;;		Nothing
  6423 ;; This function is called by:
  6424 ;;		_efgtoa
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           	psect	text24
  6429  0046D6                     __ptext24:
  6430                           	opt callstack 0
  6431  0046D6                     ___fleq:
  6432                           	opt callstack 23
  6433                           
  6434                           ; BSR set to: 0
  6435                           ;incstack = 0
  6436  0046D6  0E00               	movlw	0
  6437  0046D8  0100               	movlb	0	; () banked
  6438  0046DA  1560               	andwf	___fleq@ff1& (0+255),w,b
  6439  0046DC  6F68               	movwf	??___fleq& (0+255),b
  6440  0046DE  0E00               	movlw	0
  6441  0046E0  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6442  0046E2  6F69               	movwf	(??___fleq+1)& (0+255),b
  6443  0046E4  0E80               	movlw	128
  6444  0046E6  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6445  0046E8  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6446  0046EA  0E7F               	movlw	127
  6447  0046EC  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6448  0046EE  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6449  0046F0  5168               	movf	??___fleq& (0+255),w,b
  6450  0046F2  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6451  0046F4  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6452  0046F6  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6453  0046F8  A4D8               	btfss	status,2,c
  6454  0046FA  D008               	goto	l5175
  6455                           
  6456                           ; BSR set to: 0
  6457  0046FC  0E00               	movlw	0
  6458  0046FE  6F60               	movwf	___fleq@ff1& (0+255),b
  6459  004700  0E00               	movlw	0
  6460  004702  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6461  004704  0E00               	movlw	0
  6462  004706  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6463  004708  0E00               	movlw	0
  6464  00470A  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6465  00470C                     l5175:
  6466                           
  6467                           ; BSR set to: 0
  6468  00470C  0E00               	movlw	0
  6469  00470E  1564               	andwf	___fleq@ff2& (0+255),w,b
  6470  004710  6F68               	movwf	??___fleq& (0+255),b
  6471  004712  0E00               	movlw	0
  6472  004714  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6473  004716  6F69               	movwf	(??___fleq+1)& (0+255),b
  6474  004718  0E80               	movlw	128
  6475  00471A  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6476  00471C  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6477  00471E  0E7F               	movlw	127
  6478  004720  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6479  004722  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6480  004724  5168               	movf	??___fleq& (0+255),w,b
  6481  004726  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6482  004728  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6483  00472A  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6484  00472C  A4D8               	btfss	status,2,c
  6485  00472E  D008               	goto	l5179
  6486                           
  6487                           ; BSR set to: 0
  6488  004730  0E00               	movlw	0
  6489  004732  6F64               	movwf	___fleq@ff2& (0+255),b
  6490  004734  0E00               	movlw	0
  6491  004736  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6492  004738  0E00               	movlw	0
  6493  00473A  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6494  00473C  0E00               	movlw	0
  6495  00473E  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6496  004740                     l5179:
  6497                           
  6498                           ; BSR set to: 0
  6499  004740  5164               	movf	___fleq@ff2& (0+255),w,b
  6500  004742  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6501  004744  E10A               	bnz	u6760
  6502  004746  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6503  004748  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6504  00474A  E107               	bnz	u6760
  6505  00474C  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6506  00474E  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6507  004750  E104               	bnz	u6760
  6508  004752  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6509  004754  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6510  004756  B4D8               	btfsc	status,2,c
  6511  004758  D002               	goto	l5183
  6512  00475A                     u6760:
  6513                           
  6514                           ; BSR set to: 0
  6515  00475A  90D8               	bcf	status,0,c
  6516  00475C  0012               	return	
  6517  00475E                     l5183:
  6518                           
  6519                           ; BSR set to: 0
  6520  00475E  80D8               	bsf	status,0,c
  6521                           
  6522                           ; BSR set to: 0
  6523  004760  0012               	return		;funcret
  6524  004762                     __end_of___fleq:
  6525                           	opt callstack 0
  6526                           
  6527 ;; *************** function ___fldiv *****************
  6528 ;; Defined at:
  6529 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  b               4    0[BANK0 ] unsigned char 
  6532 ;;  a               4    4[BANK0 ] unsigned char 
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;  grs             4   19[BANK0 ] unsigned long 
  6535 ;;  rem             4   12[BANK0 ] unsigned long 
  6536 ;;  new_exp         2   17[BANK0 ] short 
  6537 ;;  aexp            1   24[BANK0 ] unsigned char 
  6538 ;;  bexp            1   23[BANK0 ] unsigned char 
  6539 ;;  sign            1   16[BANK0 ] unsigned char 
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  4    0[BANK0 ] unsigned char 
  6542 ;; Registers used:
  6543 ;;		wreg, status,2, status,0
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6549 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6550 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6551 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6552 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6553 ;;Total ram usage:       25 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; Hardware stack levels required when called:    2
  6556 ;; This function calls:
  6557 ;;		Nothing
  6558 ;; This function is called by:
  6559 ;;		_efgtoa
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text25
  6564  0039DA                     __ptext25:
  6565                           	opt callstack 0
  6566  0039DA                     ___fldiv:
  6567                           	opt callstack 23
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;incstack = 0
  6571  0039DA  0100               	movlb	0	; () banked
  6572  0039DC  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6573  0039DE  0B80               	andlw	128
  6574  0039E0  6F70               	movwf	___fldiv@sign& (0+255),b
  6575  0039E2  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6576  0039E4  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  6577  0039E6  6F77               	movwf	___fldiv@bexp& (0+255),b
  6578                           
  6579                           ; BSR set to: 0
  6580  0039E8  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  6581                           
  6582                           ; BSR set to: 0
  6583  0039EA  8177               	bsf	___fldiv@bexp& (0+255),0,b
  6584                           
  6585                           ; BSR set to: 0
  6586  0039EC  5177               	movf	___fldiv@bexp& (0+255),w,b
  6587  0039EE  B4D8               	btfsc	status,2,c
  6588  0039F0  D00D               	goto	l4833
  6589                           
  6590                           ; BSR set to: 0
  6591  0039F2  2977               	incf	___fldiv@bexp& (0+255),w,b
  6592  0039F4  A4D8               	btfss	status,2,c
  6593  0039F6  D008               	goto	l4829
  6594                           
  6595                           ; BSR set to: 0
  6596  0039F8  0E00               	movlw	0
  6597  0039FA  6F60               	movwf	___fldiv@b& (0+255),b
  6598  0039FC  0E00               	movlw	0
  6599  0039FE  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6600  003A00  0E00               	movlw	0
  6601  003A02  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6602  003A04  0E00               	movlw	0
  6603  003A06  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6604  003A08                     l4829:
  6605                           
  6606                           ; BSR set to: 0
  6607  003A08  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6608  003A0A  D006               	goto	L10
  6609  003A0C                     l4833:
  6610                           
  6611                           ; BSR set to: 0
  6612  003A0C  0E00               	movlw	0
  6613  003A0E  6F60               	movwf	___fldiv@b& (0+255),b
  6614  003A10  0E00               	movlw	0
  6615  003A12  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6616  003A14  0E00               	movlw	0
  6617  003A16  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6618  003A18                     L10:
  6619  003A18  0E00               	movlw	0
  6620  003A1A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6621                           
  6622                           ; BSR set to: 0
  6623  003A1C  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6624  003A1E  0B80               	andlw	128
  6625  003A20  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  6626                           
  6627                           ; BSR set to: 0
  6628  003A22  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6629  003A24  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  6630  003A26  6F78               	movwf	___fldiv@aexp& (0+255),b
  6631                           
  6632                           ; BSR set to: 0
  6633  003A28  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  6634                           
  6635                           ; BSR set to: 0
  6636  003A2A  8178               	bsf	___fldiv@aexp& (0+255),0,b
  6637                           
  6638                           ; BSR set to: 0
  6639  003A2C  5178               	movf	___fldiv@aexp& (0+255),w,b
  6640  003A2E  B4D8               	btfsc	status,2,c
  6641  003A30  D00D               	goto	l4853
  6642                           
  6643                           ; BSR set to: 0
  6644  003A32  2978               	incf	___fldiv@aexp& (0+255),w,b
  6645  003A34  A4D8               	btfss	status,2,c
  6646  003A36  D008               	goto	l4849
  6647                           
  6648                           ; BSR set to: 0
  6649  003A38  0E00               	movlw	0
  6650  003A3A  6F64               	movwf	___fldiv@a& (0+255),b
  6651  003A3C  0E00               	movlw	0
  6652  003A3E  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6653  003A40  0E00               	movlw	0
  6654  003A42  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6655  003A44  0E00               	movlw	0
  6656  003A46  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6657  003A48                     l4849:
  6658                           
  6659                           ; BSR set to: 0
  6660  003A48  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  6661  003A4A  D006               	goto	L11
  6662  003A4C                     l4853:
  6663                           
  6664                           ; BSR set to: 0
  6665  003A4C  0E00               	movlw	0
  6666  003A4E  6F64               	movwf	___fldiv@a& (0+255),b
  6667  003A50  0E00               	movlw	0
  6668  003A52  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6669  003A54  0E00               	movlw	0
  6670  003A56  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6671  003A58                     L11:
  6672  003A58  0E00               	movlw	0
  6673  003A5A  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6674                           
  6675                           ; BSR set to: 0
  6676  003A5C  5164               	movf	___fldiv@a& (0+255),w,b
  6677  003A5E  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6678  003A60  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6679  003A62  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6680  003A64  A4D8               	btfss	status,2,c
  6681  003A66  D01B               	goto	l4867
  6682                           
  6683                           ; BSR set to: 0
  6684  003A68  0E00               	movlw	0
  6685  003A6A  6F60               	movwf	___fldiv@b& (0+255),b
  6686  003A6C  0E00               	movlw	0
  6687  003A6E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6688  003A70  0E00               	movlw	0
  6689  003A72  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6690  003A74  0E00               	movlw	0
  6691  003A76  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6692                           
  6693                           ; BSR set to: 0
  6694  003A78  0E80               	movlw	128
  6695  003A7A  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6696  003A7C  0E7F               	movlw	127
  6697  003A7E  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6698  003A80                     l4861:
  6699                           
  6700                           ; BSR set to: 0
  6701  003A80  5170               	movf	___fldiv@sign& (0+255),w,b
  6702  003A82  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6703                           
  6704                           ; BSR set to: 0
  6705  003A84  0060  F180  F060   	movff	___fldiv@b,?___fldiv
  6706  003A8A  0060  F184  F061   	movff	___fldiv@b+1,?___fldiv+1
  6707  003A90  0060  F188  F062   	movff	___fldiv@b+2,?___fldiv+2
  6708  003A96  0060  F18C  F063   	movff	___fldiv@b+3,?___fldiv+3
  6709  003A9C  0012               	return	
  6710  003A9E                     l4867:
  6711                           
  6712                           ; BSR set to: 0
  6713  003A9E  5177               	movf	___fldiv@bexp& (0+255),w,b
  6714  003AA0  A4D8               	btfss	status,2,c
  6715  003AA2  D009               	goto	l4875
  6716                           
  6717                           ; BSR set to: 0
  6718                           
  6719                           ; BSR set to: 0
  6720  003AA4  0E00               	movlw	0
  6721  003AA6  6F60               	movwf	?___fldiv& (0+255),b
  6722  003AA8  0E00               	movlw	0
  6723  003AAA  6F61               	movwf	(?___fldiv+1)& (0+255),b
  6724  003AAC  0E00               	movlw	0
  6725  003AAE  6F62               	movwf	(?___fldiv+2)& (0+255),b
  6726  003AB0  0E00               	movlw	0
  6727  003AB2  6F63               	movwf	(?___fldiv+3)& (0+255),b
  6728  003AB4  0012               	return	
  6729  003AB6                     l4875:
  6730                           
  6731                           ; BSR set to: 0
  6732  003AB6  5178               	movf	___fldiv@aexp& (0+255),w,b
  6733  003AB8  0060  F1DC  F068   	movff	___fldiv@bexp,??___fldiv
  6734  003ABE  6B69               	clrf	(??___fldiv+1)& (0+255),b
  6735  003AC0  5F68               	subwf	??___fldiv& (0+255),f,b
  6736  003AC2  0E00               	movlw	0
  6737  003AC4  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  6738  003AC6  0E7F               	movlw	127
  6739  003AC8  2568               	addwf	??___fldiv& (0+255),w,b
  6740  003ACA  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6741  003ACC  0E00               	movlw	0
  6742  003ACE  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  6743  003AD0  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6744                           
  6745                           ; BSR set to: 0
  6746  003AD2  0060  F180  F06C   	movff	___fldiv@b,___fldiv@rem
  6747  003AD8  0060  F184  F06D   	movff	___fldiv@b+1,___fldiv@rem+1
  6748  003ADE  0060  F188  F06E   	movff	___fldiv@b+2,___fldiv@rem+2
  6749  003AE4  0060  F18C  F06F   	movff	___fldiv@b+3,___fldiv@rem+3
  6750                           
  6751                           ; BSR set to: 0
  6752  003AEA  0E00               	movlw	0
  6753  003AEC  6F60               	movwf	___fldiv@b& (0+255),b
  6754  003AEE  0E00               	movlw	0
  6755  003AF0  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6756  003AF2  0E00               	movlw	0
  6757  003AF4  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6758  003AF6  0E00               	movlw	0
  6759  003AF8  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6760                           
  6761                           ; BSR set to: 0
  6762  003AFA  0E00               	movlw	0
  6763  003AFC  6F73               	movwf	___fldiv@grs& (0+255),b
  6764  003AFE  0E00               	movlw	0
  6765  003B00  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  6766  003B02  0E00               	movlw	0
  6767  003B04  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  6768  003B06  0E00               	movlw	0
  6769  003B08  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  6770                           
  6771                           ; BSR set to: 0
  6772  003B0A  0E00               	movlw	0
  6773  003B0C  6F78               	movwf	___fldiv@aexp& (0+255),b
  6774  003B0E  D028               	goto	l1004
  6775  003B10                     l4885:
  6776                           
  6777                           ; BSR set to: 0
  6778  003B10  5178               	movf	___fldiv@aexp& (0+255),w,b
  6779  003B12  B4D8               	btfsc	status,2,c
  6780  003B14  D011               	goto	l4893
  6781                           
  6782                           ; BSR set to: 0
  6783  003B16  90D8               	bcf	status,0,c
  6784  003B18  376C               	rlcf	___fldiv@rem& (0+255),f,b
  6785  003B1A  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6786  003B1C  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6787  003B1E  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6788  003B20  90D8               	bcf	status,0,c
  6789  003B22  3760               	rlcf	___fldiv@b& (0+255),f,b
  6790  003B24  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6791  003B26  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6792  003B28  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6793                           
  6794                           ; BSR set to: 0
  6795  003B2A  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6796                           
  6797                           ; BSR set to: 0
  6798  003B2C  8160               	bsf	___fldiv@b& (0+255),0,b
  6799                           
  6800                           ; BSR set to: 0
  6801  003B2E  90D8               	bcf	status,0,c
  6802  003B30  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6803  003B32  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6804  003B34  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6805  003B36  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6806  003B38                     l4893:
  6807                           
  6808                           ; BSR set to: 0
  6809  003B38  5164               	movf	___fldiv@a& (0+255),w,b
  6810  003B3A  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  6811  003B3C  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6812  003B3E  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6813  003B40  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6814  003B42  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6815  003B44  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6816  003B46  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6817  003B48  A0D8               	btfss	status,0,c
  6818  003B4A  D009               	goto	l4899
  6819                           
  6820                           ; BSR set to: 0
  6821  003B4C  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6822                           
  6823                           ; BSR set to: 0
  6824  003B4E  5164               	movf	___fldiv@a& (0+255),w,b
  6825  003B50  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  6826  003B52  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6827  003B54  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6828  003B56  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6829  003B58  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6830  003B5A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6831  003B5C  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6832  003B5E                     l4899:
  6833                           
  6834                           ; BSR set to: 0
  6835  003B5E  2B78               	incf	___fldiv@aexp& (0+255),f,b
  6836  003B60                     l1004:
  6837                           
  6838                           ; BSR set to: 0
  6839  003B60  0E19               	movlw	25
  6840  003B62  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  6841  003B64  D7D5               	goto	l4885
  6842                           
  6843                           ; BSR set to: 0
  6844  003B66  516C               	movf	___fldiv@rem& (0+255),w,b
  6845  003B68  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6846  003B6A  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6847  003B6C  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6848  003B6E  B4D8               	btfsc	status,2,c
  6849  003B70  D011               	goto	l4911
  6850                           
  6851                           ; BSR set to: 0
  6852  003B72  8173               	bsf	___fldiv@grs& (0+255),0,b
  6853  003B74  D00F               	goto	l4911
  6854  003B76                     l4905:
  6855                           
  6856                           ; BSR set to: 0
  6857  003B76  90D8               	bcf	status,0,c
  6858  003B78  3760               	rlcf	___fldiv@b& (0+255),f,b
  6859  003B7A  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6860  003B7C  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6861  003B7E  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6862                           
  6863                           ; BSR set to: 0
  6864  003B80  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6865                           
  6866                           ; BSR set to: 0
  6867  003B82  8160               	bsf	___fldiv@b& (0+255),0,b
  6868                           
  6869                           ; BSR set to: 0
  6870  003B84  90D8               	bcf	status,0,c
  6871  003B86  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6872  003B88  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6873  003B8A  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6874  003B8C  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6875  003B8E  0771               	decf	___fldiv@new_exp& (0+255),f,b
  6876  003B90  A0D8               	btfss	status,0,c
  6877  003B92  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6878  003B94                     l4911:
  6879                           
  6880                           ; BSR set to: 0
  6881  003B94  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6882  003B96  D7EF               	goto	l4905
  6883                           
  6884                           ; BSR set to: 0
  6885  003B98  0E00               	movlw	0
  6886  003B9A  6F78               	movwf	___fldiv@aexp& (0+255),b
  6887                           
  6888                           ; BSR set to: 0
  6889  003B9C  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6890  003B9E  D017               	goto	l1015
  6891                           
  6892                           ; BSR set to: 0
  6893  003BA0  0EFF               	movlw	255
  6894  003BA2  1573               	andwf	___fldiv@grs& (0+255),w,b
  6895  003BA4  6F68               	movwf	??___fldiv& (0+255),b
  6896  003BA6  0EFF               	movlw	255
  6897  003BA8  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6898  003BAA  6F69               	movwf	(??___fldiv+1)& (0+255),b
  6899  003BAC  0EFF               	movlw	255
  6900  003BAE  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6901  003BB0  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  6902  003BB2  0E7F               	movlw	127
  6903  003BB4  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6904  003BB6  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  6905  003BB8  5168               	movf	??___fldiv& (0+255),w,b
  6906  003BBA  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  6907  003BBC  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  6908  003BBE  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  6909  003BC0  B4D8               	btfsc	status,2,c
  6910  003BC2  D003               	goto	l1016
  6911  003BC4                     u6360:
  6912                           
  6913                           ; BSR set to: 0
  6914  003BC4  0E01               	movlw	1
  6915  003BC6  6F78               	movwf	___fldiv@aexp& (0+255),b
  6916  003BC8  D002               	goto	l1015
  6917  003BCA                     l1016:
  6918                           
  6919                           ; BSR set to: 0
  6920  003BCA  B160               	btfsc	___fldiv@b& (0+255),0,b
  6921  003BCC  D7FB               	goto	u6360
  6922  003BCE                     l1015:
  6923                           
  6924                           ; BSR set to: 0
  6925  003BCE  5178               	movf	___fldiv@aexp& (0+255),w,b
  6926  003BD0  B4D8               	btfsc	status,2,c
  6927  003BD2  D027               	goto	l4931
  6928                           
  6929                           ; BSR set to: 0
  6930  003BD4  0E01               	movlw	1
  6931  003BD6  2760               	addwf	___fldiv@b& (0+255),f,b
  6932  003BD8  0E00               	movlw	0
  6933  003BDA  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6934  003BDC  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6935  003BDE  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6936                           
  6937                           ; BSR set to: 0
  6938  003BE0  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  6939  003BE2  D01F               	goto	l4931
  6940                           
  6941                           ; BSR set to: 0
  6942  003BE4  0060  F180  F068   	movff	___fldiv@b,??___fldiv
  6943  003BEA  0060  F184  F069   	movff	___fldiv@b+1,??___fldiv+1
  6944  003BF0  0060  F188  F06A   	movff	___fldiv@b+2,??___fldiv+2
  6945  003BF6  0060  F18C  F06B   	movff	___fldiv@b+3,??___fldiv+3
  6946  003BFC  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  6947  003BFE  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  6948  003C00  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  6949  003C02  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  6950  003C04  3368               	rrcf	??___fldiv& (0+255),f,b
  6951  003C06  0060  F1A0  F060   	movff	??___fldiv,___fldiv@b
  6952  003C0C  0060  F1A4  F061   	movff	??___fldiv+1,___fldiv@b+1
  6953  003C12  0060  F1A8  F062   	movff	??___fldiv+2,___fldiv@b+2
  6954  003C18  0060  F1AC  F063   	movff	??___fldiv+3,___fldiv@b+3
  6955                           
  6956                           ; BSR set to: 0
  6957  003C1E  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  6958  003C20  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6959  003C22                     l4931:
  6960                           
  6961                           ; BSR set to: 0
  6962  003C22  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6963  003C24  D010               	goto	l4935
  6964  003C26  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6965  003C28  E103               	bnz	u6400
  6966  003C2A  2971               	incf	___fldiv@new_exp& (0+255),w,b
  6967  003C2C  A0D8               	btfss	status,0,c
  6968  003C2E  D00B               	goto	l4935
  6969  003C30                     u6400:
  6970                           
  6971                           ; BSR set to: 0
  6972  003C30  0E00               	movlw	0
  6973  003C32  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6974  003C34  6971               	setf	___fldiv@new_exp& (0+255),b
  6975  003C36  0E00               	movlw	0
  6976  003C38  6F60               	movwf	___fldiv@b& (0+255),b
  6977  003C3A  0E00               	movlw	0
  6978  003C3C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6979  003C3E  0E00               	movlw	0
  6980  003C40  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6981  003C42  0E00               	movlw	0
  6982  003C44  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6983  003C46                     l4935:
  6984                           
  6985                           ; BSR set to: 0
  6986  003C46  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6987  003C48  D005               	goto	u6410
  6988  003C4A  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6989  003C4C  E111               	bnz	l4939
  6990  003C4E  0571               	decf	___fldiv@new_exp& (0+255),w,b
  6991  003C50  B0D8               	btfsc	status,0,c
  6992  003C52  D00E               	goto	l4939
  6993  003C54                     u6410:
  6994                           
  6995                           ; BSR set to: 0
  6996  003C54  0E00               	movlw	0
  6997  003C56  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6998  003C58  0E00               	movlw	0
  6999  003C5A  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7000  003C5C  0E00               	movlw	0
  7001  003C5E  6F60               	movwf	___fldiv@b& (0+255),b
  7002  003C60  0E00               	movlw	0
  7003  003C62  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7004  003C64  0E00               	movlw	0
  7005  003C66  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7006  003C68  0E00               	movlw	0
  7007  003C6A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7008  003C6C  0E00               	movlw	0
  7009  003C6E  6F70               	movwf	___fldiv@sign& (0+255),b
  7010  003C70                     l4939:
  7011                           
  7012                           ; BSR set to: 0
  7013  003C70  0060  F1C4  F077   	movff	___fldiv@new_exp,___fldiv@bexp
  7014                           
  7015                           ; BSR set to: 0
  7016  003C76  A177               	btfss	___fldiv@bexp& (0+255),0,b
  7017  003C78  D002               	goto	l4945
  7018                           
  7019                           ; BSR set to: 0
  7020  003C7A  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7021  003C7C  D001               	goto	l4947
  7022  003C7E                     l4945:
  7023                           
  7024                           ; BSR set to: 0
  7025  003C7E  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  7026  003C80                     l4947:
  7027                           
  7028                           ; BSR set to: 0
  7029  003C80  90D8               	bcf	status,0,c
  7030  003C82  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  7031  003C84  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7032  003C86  D6FC               	goto	l4861
  7033  003C88                     __end_of___fldiv:
  7034                           	opt callstack 0
  7035                           
  7036 ;; *************** function ___awmod *****************
  7037 ;; Defined at:
  7038 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  dividend        2    0[BANK0 ] int 
  7041 ;;  divisor         2    2[BANK0 ] int 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;  sign            1    5[BANK0 ] unsigned char 
  7044 ;;  counter         1    4[BANK0 ] unsigned char 
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  2    0[BANK0 ] int 
  7047 ;; Registers used:
  7048 ;;		wreg, status,2, status,0
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7054 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7055 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7057 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7058 ;;Total ram usage:        6 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; Hardware stack levels required when called:    2
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_efgtoa
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text26
  7069  0048F6                     __ptext26:
  7070                           	opt callstack 0
  7071  0048F6                     ___awmod:
  7072                           	opt callstack 23
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;incstack = 0
  7076  0048F6  0E00               	movlw	0
  7077  0048F8  0100               	movlb	0	; () banked
  7078  0048FA  6F65               	movwf	___awmod@sign& (0+255),b
  7079                           
  7080                           ; BSR set to: 0
  7081  0048FC  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7082  0048FE  D006               	goto	l5143
  7083                           
  7084                           ; BSR set to: 0
  7085  004900  6D60               	negf	___awmod@dividend& (0+255),b
  7086  004902  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7087  004904  B0D8               	btfsc	status,0,c
  7088  004906  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7089                           
  7090                           ; BSR set to: 0
  7091  004908  0E01               	movlw	1
  7092  00490A  6F65               	movwf	___awmod@sign& (0+255),b
  7093  00490C                     l5143:
  7094                           
  7095                           ; BSR set to: 0
  7096  00490C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7097  00490E  D004               	goto	l5147
  7098                           
  7099                           ; BSR set to: 0
  7100  004910  6D62               	negf	___awmod@divisor& (0+255),b
  7101  004912  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7102  004914  B0D8               	btfsc	status,0,c
  7103  004916  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7104  004918                     l5147:
  7105                           
  7106                           ; BSR set to: 0
  7107  004918  5162               	movf	___awmod@divisor& (0+255),w,b
  7108  00491A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7109  00491C  B4D8               	btfsc	status,2,c
  7110  00491E  D018               	goto	l5163
  7111                           
  7112                           ; BSR set to: 0
  7113  004920  0E01               	movlw	1
  7114  004922  6F64               	movwf	___awmod@counter& (0+255),b
  7115  004924  D004               	goto	l5153
  7116  004926                     l5151:
  7117                           
  7118                           ; BSR set to: 0
  7119  004926  90D8               	bcf	status,0,c
  7120  004928  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7121  00492A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7122  00492C  2B64               	incf	___awmod@counter& (0+255),f,b
  7123  00492E                     l5153:
  7124                           
  7125                           ; BSR set to: 0
  7126  00492E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7127  004930  D7FA               	goto	l5151
  7128  004932                     u6710:
  7129                           
  7130                           ; BSR set to: 0
  7131  004932  5162               	movf	___awmod@divisor& (0+255),w,b
  7132  004934  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7133  004936  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7134  004938  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7135  00493A  A0D8               	btfss	status,0,c
  7136  00493C  D004               	goto	l5159
  7137                           
  7138                           ; BSR set to: 0
  7139  00493E  5162               	movf	___awmod@divisor& (0+255),w,b
  7140  004940  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7141  004942  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7142  004944  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7143  004946                     l5159:
  7144                           
  7145                           ; BSR set to: 0
  7146  004946  90D8               	bcf	status,0,c
  7147  004948  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7148  00494A  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7149                           
  7150                           ; BSR set to: 0
  7151  00494C  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7152  00494E  D7F1               	goto	u6710
  7153  004950                     l5163:
  7154                           
  7155                           ; BSR set to: 0
  7156  004950  5165               	movf	___awmod@sign& (0+255),w,b
  7157  004952  B4D8               	btfsc	status,2,c
  7158  004954  D004               	goto	l5167
  7159                           
  7160                           ; BSR set to: 0
  7161  004956  6D60               	negf	___awmod@dividend& (0+255),b
  7162  004958  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7163  00495A  B0D8               	btfsc	status,0,c
  7164  00495C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7165  00495E                     l5167:
  7166                           
  7167                           ; BSR set to: 0
  7168  00495E  0060  F180  F060   	movff	___awmod@dividend,?___awmod
  7169  004964  0060  F184  F061   	movff	___awmod@dividend+1,?___awmod+1
  7170                           
  7171                           ; BSR set to: 0
  7172  00496A  0012               	return		;funcret
  7173  00496C                     __end_of___awmod:
  7174                           	opt callstack 0
  7175                           
  7176 ;; *************** function ___awdiv *****************
  7177 ;; Defined at:
  7178 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  dividend        2    0[BANK0 ] int 
  7181 ;;  divisor         2    2[BANK0 ] int 
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  quotient        2    6[BANK0 ] int 
  7184 ;;  sign            1    5[BANK0 ] unsigned char 
  7185 ;;  counter         1    4[BANK0 ] unsigned char 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  2    0[BANK0 ] int 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7195 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7196 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7198 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7199 ;;Total ram usage:        8 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; Hardware stack levels required when called:    2
  7202 ;; This function calls:
  7203 ;;		Nothing
  7204 ;; This function is called by:
  7205 ;;		_efgtoa
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text27
  7210  004762                     __ptext27:
  7211                           	opt callstack 0
  7212  004762                     ___awdiv:
  7213                           	opt callstack 23
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;incstack = 0
  7217  004762  0E00               	movlw	0
  7218  004764  0100               	movlb	0	; () banked
  7219  004766  6F65               	movwf	___awdiv@sign& (0+255),b
  7220                           
  7221                           ; BSR set to: 0
  7222  004768  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7223  00476A  D006               	goto	l5099
  7224                           
  7225                           ; BSR set to: 0
  7226  00476C  6D62               	negf	___awdiv@divisor& (0+255),b
  7227  00476E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7228  004770  B0D8               	btfsc	status,0,c
  7229  004772  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7230                           
  7231                           ; BSR set to: 0
  7232  004774  0E01               	movlw	1
  7233  004776  6F65               	movwf	___awdiv@sign& (0+255),b
  7234  004778                     l5099:
  7235                           
  7236                           ; BSR set to: 0
  7237  004778  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7238  00477A  D006               	goto	l5105
  7239                           
  7240                           ; BSR set to: 0
  7241  00477C  6D60               	negf	___awdiv@dividend& (0+255),b
  7242  00477E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7243  004780  B0D8               	btfsc	status,0,c
  7244  004782  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7245                           
  7246                           ; BSR set to: 0
  7247  004784  0E01               	movlw	1
  7248  004786  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7249  004788                     l5105:
  7250                           
  7251                           ; BSR set to: 0
  7252  004788  0E00               	movlw	0
  7253  00478A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7254  00478C  0E00               	movlw	0
  7255  00478E  6F66               	movwf	___awdiv@quotient& (0+255),b
  7256                           
  7257                           ; BSR set to: 0
  7258  004790  5162               	movf	___awdiv@divisor& (0+255),w,b
  7259  004792  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7260  004794  B4D8               	btfsc	status,2,c
  7261  004796  D01C               	goto	l5127
  7262                           
  7263                           ; BSR set to: 0
  7264  004798  0E01               	movlw	1
  7265  00479A  6F64               	movwf	___awdiv@counter& (0+255),b
  7266  00479C  D004               	goto	l5113
  7267  00479E                     l5111:
  7268                           
  7269                           ; BSR set to: 0
  7270  00479E  90D8               	bcf	status,0,c
  7271  0047A0  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7272  0047A2  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7273  0047A4  2B64               	incf	___awdiv@counter& (0+255),f,b
  7274  0047A6                     l5113:
  7275                           
  7276                           ; BSR set to: 0
  7277  0047A6  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7278  0047A8  D7FA               	goto	l5111
  7279  0047AA                     u6650:
  7280                           
  7281                           ; BSR set to: 0
  7282  0047AA  90D8               	bcf	status,0,c
  7283  0047AC  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7284  0047AE  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7285                           
  7286                           ; BSR set to: 0
  7287  0047B0  5162               	movf	___awdiv@divisor& (0+255),w,b
  7288  0047B2  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7289  0047B4  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7290  0047B6  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7291  0047B8  A0D8               	btfss	status,0,c
  7292  0047BA  D005               	goto	l5123
  7293                           
  7294                           ; BSR set to: 0
  7295  0047BC  5162               	movf	___awdiv@divisor& (0+255),w,b
  7296  0047BE  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7297  0047C0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7298  0047C2  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7299                           
  7300                           ; BSR set to: 0
  7301  0047C4  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7302  0047C6                     l5123:
  7303                           
  7304                           ; BSR set to: 0
  7305  0047C6  90D8               	bcf	status,0,c
  7306  0047C8  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7307  0047CA  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7308                           
  7309                           ; BSR set to: 0
  7310  0047CC  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7311  0047CE  D7ED               	goto	u6650
  7312  0047D0                     l5127:
  7313                           
  7314                           ; BSR set to: 0
  7315  0047D0  5165               	movf	___awdiv@sign& (0+255),w,b
  7316  0047D2  B4D8               	btfsc	status,2,c
  7317  0047D4  D004               	goto	l5131
  7318                           
  7319                           ; BSR set to: 0
  7320  0047D6  6D66               	negf	___awdiv@quotient& (0+255),b
  7321  0047D8  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7322  0047DA  B0D8               	btfsc	status,0,c
  7323  0047DC  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7324  0047DE                     l5131:
  7325                           
  7326                           ; BSR set to: 0
  7327  0047DE  0060  F198  F060   	movff	___awdiv@quotient,?___awdiv
  7328  0047E4  0060  F19C  F061   	movff	___awdiv@quotient+1,?___awdiv+1
  7329                           
  7330                           ; BSR set to: 0
  7331  0047EA  0012               	return		;funcret
  7332  0047EC                     __end_of___awdiv:
  7333                           	opt callstack 0
  7334                           
  7335 ;; *************** function _memset *****************
  7336 ;; Defined at:
  7337 ;;		line 190 in file "main.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  st              2    0[BANK0 ] PTR unsigned char 
  7340 ;;		 -> tx_buffer(32), 
  7341 ;;  x               1    2[BANK0 ] unsigned char 
  7342 ;;  size            2    3[BANK0 ] int 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  i               2    6[BANK0 ] int 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7354 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7355 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7357 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7358 ;;Total ram usage:        8 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:    2
  7361 ;; This function calls:
  7362 ;;		Nothing
  7363 ;; This function is called by:
  7364 ;;		_USART_handler
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           	psect	text28
  7369  004C62                     __ptext28:
  7370                           	opt callstack 0
  7371  004C62                     _memset:
  7372                           	opt callstack 27
  7373                           
  7374                           ;main.c: 191:     for(int i=0;i<size;i++){
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;incstack = 0
  7378  004C62  0E00               	movlw	0
  7379  004C64  0100               	movlb	0	; () banked
  7380  004C66  6F67               	movwf	(memset@i+1)& (0+255),b
  7381  004C68  0E00               	movlw	0
  7382  004C6A  6F66               	movwf	memset@i& (0+255),b
  7383  004C6C  D00B               	goto	l5699
  7384  004C6E                     l5695:
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;main.c: 192:         st[i] = x;
  7388  004C6E  5166               	movf	memset@i& (0+255),w,b
  7389  004C70  2560               	addwf	memset@st& (0+255),w,b
  7390  004C72  6ED9               	movwf	fsr2l,c
  7391  004C74  5167               	movf	(memset@i+1)& (0+255),w,b
  7392  004C76  2161               	addwfc	(memset@st+1)& (0+255),w,b
  7393  004C78  6EDA               	movwf	fsr2h,c
  7394  004C7A  0060  F18B  FFDF   	movff	memset@x,indf2
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;main.c: 193:     }
  7398  004C80  4B66               	infsnz	memset@i& (0+255),f,b
  7399  004C82  2B67               	incf	(memset@i+1)& (0+255),f,b
  7400  004C84                     l5699:
  7401                           
  7402                           ; BSR set to: 0
  7403  004C84  5163               	movf	memset@size& (0+255),w,b
  7404  004C86  5D66               	subwf	memset@i& (0+255),w,b
  7405  004C88  5167               	movf	(memset@i+1)& (0+255),w,b
  7406  004C8A  0A80               	xorlw	128
  7407  004C8C  6F65               	movwf	??_memset& (0+255),b
  7408  004C8E  5164               	movf	(memset@size+1)& (0+255),w,b
  7409  004C90  0A80               	xorlw	128
  7410  004C92  5965               	subwfb	??_memset& (0+255),w,b
  7411  004C94  B0D8               	btfsc	status,0,c
  7412  004C96  0012               	return	
  7413  004C98  D7EA               	goto	l5695
  7414  004C9A                     __end_of_memset:
  7415                           	opt callstack 0
  7416                           
  7417 ;; *************** function _USART1_SendString *****************
  7418 ;; Defined at:
  7419 ;;		line 58 in file "USART1.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  str             2    4[BANK0 ] PTR unsigned char 
  7422 ;;		 -> STR_2(24), tx_buffer(32), 
  7423 ;;  size            2    6[BANK0 ] int 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;  attempts        2   12[BANK0 ] int 
  7426 ;;  i               2   10[BANK0 ] int 
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  1    wreg      unsigned char 
  7429 ;; Registers used:
  7430 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7436 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7437 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7438 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7439 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7440 ;;Total ram usage:       10 bytes
  7441 ;; Hardware stack levels used:    1
  7442 ;; Hardware stack levels required when called:    3
  7443 ;; This function calls:
  7444 ;;		_USART1_SendByte
  7445 ;; This function is called by:
  7446 ;;		_USART_handler
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	text29
  7451  004344                     __ptext29:
  7452                           	opt callstack 0
  7453  004344                     _USART1_SendString:
  7454                           	opt callstack 26
  7455                           
  7456                           ;USART1.c: 59:     int attempts =3000,i;
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;incstack = 0
  7460  004344  0E0B               	movlw	11
  7461  004346  0100               	movlb	0	; () banked
  7462  004348  6F6D               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  7463  00434A  0EB8               	movlw	184
  7464  00434C  6F6C               	movwf	USART1_SendString@attempts& (0+255),b
  7465                           
  7466                           ;USART1.c: 60:     for(i=0;i<size;i++){
  7467  00434E  0E00               	movlw	0
  7468  004350  6F6B               	movwf	(USART1_SendString@i+1)& (0+255),b
  7469  004352  0E00               	movlw	0
  7470  004354  6F6A               	movwf	USART1_SendString@i& (0+255),b
  7471  004356  D02E               	goto	l5681
  7472  004358                     l5671:
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;USART1.c: 61:         if(!USART1_SendByte(*(str + i))){
  7476  004358  516A               	movf	USART1_SendString@i& (0+255),w,b
  7477  00435A  2564               	addwf	USART1_SendString@str& (0+255),w,b
  7478  00435C  6F68               	movwf	??_USART1_SendString& (0+255),b
  7479  00435E  516B               	movf	(USART1_SendString@i+1)& (0+255),w,b
  7480  004360  2165               	addwfc	(USART1_SendString@str+1)& (0+255),w,b
  7481  004362  6F69               	movwf	(??_USART1_SendString+1)& (0+255),b
  7482  004364  0060  F1A3  FFF6   	movff	??_USART1_SendString,tblptrl
  7483  00436A  0060  F1A7  FFF7   	movff	??_USART1_SendString+1,tblptrh
  7484  004370  0E00               	movlw	low (__smallconst shr (0+16))
  7485  004372  6EF8               	movwf	tblptru,c
  7486  004374  0E1F               	movlw	(high __ramtop+-1)
  7487  004376  64F7               	cpfsgt	tblptrh,c
  7488  004378  D003               	bra	u7587
  7489  00437A  0008               	tblrd		*
  7490  00437C  50F5               	movf	tablat,w,c
  7491  00437E  D007               	bra	u7580
  7492  004380                     u7587:
  7493  004380  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7494  004386  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7495  00438C  50E7               	movf	indf1,w,c
  7496  00438E                     u7580:
  7497  00438E  ECD4  F026         	call	_USART1_SendByte
  7498  004392  0900               	iorlw	0
  7499  004394  A4D8               	btfss	status,2,c
  7500  004396  D007               	goto	l5675
  7501                           
  7502                           ;USART1.c: 62:             attempts --;
  7503  004398  0100               	movlb	0	; () banked
  7504  00439A  076C               	decf	USART1_SendString@attempts& (0+255),f,b
  7505  00439C  A0D8               	btfss	status,0,c
  7506  00439E  076D               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  7507                           
  7508                           ;USART1.c: 63:             i --;
  7509  0043A0  076A               	decf	USART1_SendString@i& (0+255),f,b
  7510  0043A2  A0D8               	btfss	status,0,c
  7511  0043A4  076B               	decf	(USART1_SendString@i+1)& (0+255),f,b
  7512  0043A6                     l5675:
  7513                           
  7514                           ;USART1.c: 65:         if(!attempts)
  7515  0043A6  0100               	movlb	0	; () banked
  7516  0043A8  516C               	movf	USART1_SendString@attempts& (0+255),w,b
  7517  0043AA  116D               	iorwf	(USART1_SendString@attempts+1)& (0+255),w,b
  7518  0043AC  B4D8               	btfsc	status,2,c
  7519  0043AE  0012               	return	
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;USART1.c: 67:     }
  7523  0043B0  4B6A               	infsnz	USART1_SendString@i& (0+255),f,b
  7524  0043B2  2B6B               	incf	(USART1_SendString@i+1)& (0+255),f,b
  7525  0043B4                     l5681:
  7526                           
  7527                           ; BSR set to: 0
  7528  0043B4  5166               	movf	USART1_SendString@size& (0+255),w,b
  7529  0043B6  5D6A               	subwf	USART1_SendString@i& (0+255),w,b
  7530  0043B8  516B               	movf	(USART1_SendString@i+1)& (0+255),w,b
  7531  0043BA  0A80               	xorlw	128
  7532  0043BC  6F68               	movwf	??_USART1_SendString& (0+255),b
  7533  0043BE  5167               	movf	(USART1_SendString@size+1)& (0+255),w,b
  7534  0043C0  0A80               	xorlw	128
  7535  0043C2  5968               	subwfb	??_USART1_SendString& (0+255),w,b
  7536  0043C4  A0D8               	btfss	status,0,c
  7537  0043C6  D7C8               	goto	l5671
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;USART1.c: 68:     attempts =3000;
  7541  0043C8  0E0B               	movlw	11
  7542  0043CA  6F6D               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  7543  0043CC  0EB8               	movlw	184
  7544  0043CE  6F6C               	movwf	USART1_SendString@attempts& (0+255),b
  7545  0043D0                     l5685:
  7546                           
  7547                           ; BSR set to: 0
  7548  0043D0  0E0D               	movlw	13
  7549  0043D2  ECD4  F026         	call	_USART1_SendByte
  7550  0043D6  0900               	iorlw	0
  7551  0043D8  A4D8               	btfss	status,2,c
  7552  0043DA  D009               	goto	u7630
  7553  0043DC  0100               	movlb	0	; () banked
  7554  0043DE  076C               	decf	USART1_SendString@attempts& (0+255),f,b
  7555  0043E0  A0D8               	btfss	status,0,c
  7556  0043E2  076D               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  7557  0043E4  296C               	incf	USART1_SendString@attempts& (0+255),w,b
  7558  0043E6  E1F4               	bnz	l5685
  7559  0043E8  296D               	incf	(USART1_SendString@attempts+1)& (0+255),w,b
  7560  0043EA  A4D8               	btfss	status,2,c
  7561  0043EC  D7F1               	goto	l5685
  7562  0043EE                     u7630:
  7563  0043EE                     l5689:
  7564  0043EE  0E0A               	movlw	10
  7565  0043F0  ECD4  F026         	call	_USART1_SendByte
  7566  0043F4  0900               	iorlw	0
  7567  0043F6  A4D8               	btfss	status,2,c
  7568  0043F8  0012               	return	
  7569  0043FA  0100               	movlb	0	; () banked
  7570  0043FC  076C               	decf	USART1_SendString@attempts& (0+255),f,b
  7571  0043FE  A0D8               	btfss	status,0,c
  7572  004400  076D               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  7573  004402  296C               	incf	USART1_SendString@attempts& (0+255),w,b
  7574  004404  E1F4               	bnz	l5689
  7575  004406  296D               	incf	(USART1_SendString@attempts+1)& (0+255),w,b
  7576  004408  B4D8               	btfsc	status,2,c
  7577  00440A  0012               	return	
  7578  00440C  D7F0               	goto	u7630
  7579  00440E                     __end_of_USART1_SendString:
  7580                           	opt callstack 0
  7581                           
  7582 ;; *************** function _USART1_SendByte *****************
  7583 ;; Defined at:
  7584 ;;		line 49 in file "USART1.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  byte            1    wreg     unsigned char 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  byte            1    0[BANK0 ] unsigned char 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      unsigned char 
  7591 ;; Registers used:
  7592 ;;		wreg
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7599 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7601 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7602 ;;Total ram usage:        1 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:    2
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_USART1_SendString
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           	psect	text30
  7613  004DA8                     __ptext30:
  7614                           	opt callstack 0
  7615  004DA8                     _USART1_SendByte:
  7616                           	opt callstack 26
  7617                           
  7618                           ;incstack = 0
  7619                           ;USART1_SendByte@byte stored from wreg
  7620  004DA8  0100               	movlb	0	; () banked
  7621  004DAA  6F60               	movwf	USART1_SendByte@byte& (0+255),b
  7622                           
  7623                           ;USART1.c: 50:     if(!PIE3bits.U1TXIE){
  7624  004DAC  0139               	movlb	57	; () banked
  7625  004DAE  B993               	btfsc	147,4,b	;volatile
  7626  004DB0  D006               	goto	l5657
  7627                           
  7628                           ; BSR set to: 57
  7629                           ;USART1.c: 51:         tx_byte = byte;
  7630  004DB2  0060  F180  F042   	movff	USART1_SendByte@byte,_tx_byte
  7631                           
  7632                           ; BSR set to: 57
  7633                           ;USART1.c: 52:         PIE3bits.U1TXIE = 1;
  7634  004DB8  8993               	bsf	147,4,b	;volatile
  7635                           
  7636                           ;USART1.c: 53:         return 1;
  7637  004DBA  0E01               	movlw	1
  7638  004DBC  0012               	return	
  7639  004DBE                     l5657:
  7640                           
  7641                           ; BSR set to: 57
  7642                           ;USART1.c: 55:     return 0;
  7643  004DBE  0E00               	movlw	0
  7644                           
  7645                           ; BSR set to: 57
  7646  004DC0  0012               	return		;funcret
  7647  004DC2                     __end_of_USART1_SendByte:
  7648                           	opt callstack 0
  7649                           
  7650 ;; *************** function _GetStringSize *****************
  7651 ;; Defined at:
  7652 ;;		line 180 in file "main.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;		None
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;  i               2    2[BANK0 ] int 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  2    0[BANK0 ] int 
  7659 ;; Registers used:
  7660 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7666 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7667 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7669 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7670 ;;Total ram usage:        4 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    2
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_USART_handler
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text31
  7681  004BEC                     __ptext31:
  7682                           	opt callstack 0
  7683  004BEC                     _GetStringSize:
  7684                           	opt callstack 27
  7685                           
  7686                           ;main.c: 181:     int i;;main.c: 182:     for(i=0;i<32;i++){
  7687                           
  7688                           ; BSR set to: 57
  7689                           ;incstack = 0
  7690  004BEC  0E00               	movlw	0
  7691  004BEE  0100               	movlb	0	; () banked
  7692  004BF0  6F63               	movwf	(GetStringSize@i+1)& (0+255),b
  7693  004BF2  0E00               	movlw	0
  7694  004BF4  6F62               	movwf	GetStringSize@i& (0+255),b
  7695  004BF6                     l5719:
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;main.c: 183:         if(tx_buffer[i] == '\0'){
  7699  004BF6  0E70               	movlw	low _tx_buffer
  7700  004BF8  2562               	addwf	GetStringSize@i& (0+255),w,b
  7701  004BFA  6ED9               	movwf	fsr2l,c
  7702  004BFC  0E01               	movlw	high _tx_buffer
  7703  004BFE  2163               	addwfc	(GetStringSize@i+1)& (0+255),w,b
  7704  004C00  6EDA               	movwf	fsr2h,c
  7705  004C02  50DF               	movf	indf2,w,c
  7706  004C04  B4D8               	btfsc	status,2,c
  7707  004C06  D00A               	goto	u7680
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;main.c: 186:     }
  7711  004C08  4B62               	infsnz	GetStringSize@i& (0+255),f,b
  7712  004C0A  2B63               	incf	(GetStringSize@i+1)& (0+255),f,b
  7713                           
  7714                           ; BSR set to: 0
  7715  004C0C  BF63               	btfsc	(GetStringSize@i+1)& (0+255),7,b
  7716  004C0E  D7F3               	goto	l5719
  7717  004C10  5163               	movf	(GetStringSize@i+1)& (0+255),w,b
  7718  004C12  E104               	bnz	u7680
  7719  004C14  0E20               	movlw	32
  7720  004C16  5D62               	subwf	GetStringSize@i& (0+255),w,b
  7721  004C18  A0D8               	btfss	status,0,c
  7722  004C1A  D7ED               	goto	l5719
  7723  004C1C                     u7680:
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;main.c: 187:     return i;
  7727  004C1C  0060  F188  F060   	movff	GetStringSize@i,?_GetStringSize
  7728  004C22  0060  F18C  F061   	movff	GetStringSize@i+1,?_GetStringSize+1
  7729                           
  7730                           ; BSR set to: 0
  7731  004C28  0012               	return		;funcret
  7732  004C2A                     __end_of_GetStringSize:
  7733                           	opt callstack 0
  7734                           
  7735 ;; *************** function _USART1_ReceiveCommand *****************
  7736 ;; Defined at:
  7737 ;;		line 76 in file "USART1.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  temp            1    0[BANK0 ] unsigned char 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      unsigned char 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0, prodl, prodh
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7754 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7755 ;;Total ram usage:        1 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    2
  7758 ;; This function calls:
  7759 ;;		Nothing
  7760 ;; This function is called by:
  7761 ;;		_main
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text32
  7766  0044C6                     __ptext32:
  7767                           	opt callstack 0
  7768  0044C6                     _USART1_ReceiveCommand:
  7769                           	opt callstack 28
  7770                           
  7771                           ;USART1.c: 77:     if(rx_counter == 0){
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;incstack = 0
  7775  0044C6  5043               	movf	_rx_counter,w,c
  7776  0044C8  A4D8               	btfss	status,2,c
  7777  0044CA  D002               	goto	l5767
  7778  0044CC                     u7690:
  7779                           
  7780                           ;USART1.c: 78:         return 0;
  7781  0044CC  0E00               	movlw	0
  7782  0044CE  0012               	return	
  7783  0044D0                     l5767:
  7784  0044D0  0443               	decf	_rx_counter,w,c
  7785  0044D2  A4D8               	btfss	status,2,c
  7786  0044D4  D008               	goto	l5773
  7787  0044D6  0E43               	movlw	67
  7788  0044D8  0101               	movlb	1	; () banked
  7789  0044DA  1900               	xorwf	_rx_buffer& (0+255),w,b
  7790  0044DC  B4D8               	btfsc	status,2,c
  7791  0044DE  D003               	goto	l5773
  7792  0044E0                     u7710:
  7793                           
  7794                           ; BSR set to: 1
  7795                           ;USART1.c: 80:         rx_counter = 0;
  7796  0044E0  0E00               	movlw	0
  7797  0044E2  6E43               	movwf	_rx_counter,c
  7798                           
  7799                           ;USART1.c: 81:     }else if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 5
      +                          7))){
  7800  0044E4  D7F3               	goto	u7690
  7801  0044E6                     l5773:
  7802  0044E6  0E02               	movlw	2
  7803  0044E8  1843               	xorwf	_rx_counter,w,c
  7804  0044EA  A4D8               	btfss	status,2,c
  7805  0044EC  D008               	goto	l5781
  7806  0044EE  0E2F               	movlw	47
  7807  0044F0  0101               	movlb	1	; () banked
  7808  0044F2  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  7809  0044F4  D7F5               	goto	u7710
  7810                           
  7811                           ; BSR set to: 1
  7812  0044F6  0E39               	movlw	57
  7813  0044F8  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  7814  0044FA  D001               	goto	l5781
  7815  0044FC  D7F1               	goto	u7710
  7816  0044FE                     l5781:
  7817  0044FE  0E03               	movlw	3
  7818  004500  1843               	xorwf	_rx_counter,w,c
  7819  004502  A4D8               	btfss	status,2,c
  7820  004504  D008               	goto	l5789
  7821  004506  0E2F               	movlw	47
  7822  004508  0101               	movlb	1	; () banked
  7823  00450A  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  7824  00450C  D7E9               	goto	u7710
  7825                           
  7826                           ; BSR set to: 1
  7827  00450E  0E39               	movlw	57
  7828  004510  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  7829  004512  D001               	goto	l5789
  7830  004514  D7E5               	goto	u7710
  7831  004516                     l5789:
  7832  004516  0E04               	movlw	4
  7833  004518  1843               	xorwf	_rx_counter,w,c
  7834  00451A  A4D8               	btfss	status,2,c
  7835  00451C  D005               	goto	l5795
  7836  00451E  0E0D               	movlw	13
  7837  004520  0101               	movlb	1	; () banked
  7838  004522  1903               	xorwf	(_rx_buffer+3)& (0+255),w,b
  7839  004524  A4D8               	btfss	status,2,c
  7840  004526  D7DC               	goto	u7710
  7841  004528                     l5795:
  7842  004528  0E05               	movlw	5
  7843  00452A  1843               	xorwf	_rx_counter,w,c
  7844  00452C  A4D8               	btfss	status,2,c
  7845  00452E  D7CE               	goto	u7690
  7846                           
  7847                           ;USART1.c: 88:         if(rx_buffer[0] != 'C' || (rx_buffer[1] < 48) || (rx_buffer[1] > 
      +                          57) || (rx_buffer[2] < 48) || (rx_buffer[2] > 57) || rx_buffer[3] != '\r' || rx_buffer[4
      +                          ] != '\n'){
  7848  004530  0E43               	movlw	67
  7849  004532  0101               	movlb	1	; () banked
  7850  004534  1900               	xorwf	_rx_buffer& (0+255),w,b
  7851  004536  A4D8               	btfss	status,2,c
  7852  004538  D7D3               	goto	u7710
  7853                           
  7854                           ; BSR set to: 1
  7855  00453A  0E2F               	movlw	47
  7856  00453C  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  7857  00453E  D7D0               	goto	u7710
  7858                           
  7859                           ; BSR set to: 1
  7860  004540  0E3A               	movlw	58
  7861  004542  6101               	cpfslt	(_rx_buffer+1)& (0+255),b
  7862  004544  D7CD               	goto	u7710
  7863                           
  7864                           ; BSR set to: 1
  7865  004546  0E2F               	movlw	47
  7866  004548  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  7867  00454A  D7CA               	goto	u7710
  7868                           
  7869                           ; BSR set to: 1
  7870  00454C  0E3A               	movlw	58
  7871  00454E  6102               	cpfslt	(_rx_buffer+2)& (0+255),b
  7872  004550  D7C7               	goto	u7710
  7873                           
  7874                           ; BSR set to: 1
  7875  004552  0E0D               	movlw	13
  7876  004554  1903               	xorwf	(_rx_buffer+3)& (0+255),w,b
  7877  004556  A4D8               	btfss	status,2,c
  7878  004558  D7C3               	goto	u7710
  7879                           
  7880                           ; BSR set to: 1
  7881  00455A  0E0A               	movlw	10
  7882  00455C  1904               	xorwf	(_rx_buffer+4)& (0+255),w,b
  7883  00455E  A4D8               	btfss	status,2,c
  7884  004560  D7BF               	goto	u7710
  7885                           
  7886                           ; BSR set to: 1
  7887                           ;USART1.c: 92:         unsigned char temp;;USART1.c: 93:         temp = ((rx_buffer[1]-4
      +                          8) * 10) + (rx_buffer[2]-48);
  7888  004562  5101               	movf	(_rx_buffer+1)& (0+255),w,b
  7889  004564  0D0A               	mullw	10
  7890  004566  50F3               	movf	prodl,w,c
  7891  004568  2502               	addwf	(_rx_buffer+2)& (0+255),w,b
  7892  00456A  0FF0               	addlw	240
  7893  00456C  0100               	movlb	0	; () banked
  7894  00456E  6F60               	movwf	USART1_ReceiveCommand@temp& (0+255),b
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;USART1.c: 94:         rx_counter = 0;
  7898  004570  0E00               	movlw	0
  7899  004572  6E43               	movwf	_rx_counter,c
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;USART1.c: 95:         return temp;
  7903  004574  5160               	movf	USART1_ReceiveCommand@temp& (0+255),w,b
  7904  004576  0012               	return	
  7905  004578                     __end_of_USART1_ReceiveCommand:
  7906                           	opt callstack 0
  7907                           
  7908 ;; *************** function _USART1_Init *****************
  7909 ;; Defined at:
  7910 ;;		line 5 in file "USART1.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;  baud_rate       1    wreg     unsigned char 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  baud_rate       1    2[BANK0 ] unsigned char 
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  1    wreg      void 
  7917 ;; Registers used:
  7918 ;;		wreg, status,2, status,0
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7927 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7928 ;;Total ram usage:        3 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; Hardware stack levels required when called:    2
  7931 ;; This function calls:
  7932 ;;		Nothing
  7933 ;; This function is called by:
  7934 ;;		_main
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           	psect	text33
  7939  0047EC                     __ptext33:
  7940                           	opt callstack 0
  7941  0047EC                     _USART1_Init:
  7942                           	opt callstack 28
  7943                           
  7944                           ;incstack = 0
  7945                           ;USART1_Init@baud_rate stored from wreg
  7946  0047EC  0100               	movlb	0	; () banked
  7947  0047EE  6F62               	movwf	USART1_Init@baud_rate& (0+255),b
  7948                           
  7949                           ;USART1.c: 7:     TRISCbits.TRISC6 = 1;
  7950  0047F0  8CC4               	bsf	16324,6,c	;volatile
  7951                           
  7952                           ;USART1.c: 8:     TRISCbits.TRISC7 = 0;
  7953  0047F2  9EC4               	bcf	16324,7,c	;volatile
  7954                           
  7955                           ;USART1.c: 9:     ANSELCbits.ANSELC6 = 0;
  7956  0047F4  013A               	movlb	58	; () banked
  7957  0047F6  9D60               	bcf	96,6,b	;volatile
  7958                           
  7959                           ;USART1.c: 10:     ANSELCbits.ANSELC7 = 0;
  7960  0047F8  9F60               	bcf	96,7,b	;volatile
  7961                           
  7962                           ; BSR set to: 58
  7963                           ;USART1.c: 11:     U1RXPPS = 0x16;
  7964  0047FA  0E16               	movlw	22
  7965  0047FC  6FE5               	movwf	229,b	;volatile
  7966                           
  7967                           ;USART1.c: 12:     RC7PPS = 0x13;
  7968  0047FE  0E13               	movlw	19
  7969  004800  6F17               	movwf	23,b	;volatile
  7970                           
  7971                           ;USART1.c: 15:     switch(baud_rate){
  7972  004802  D010               	goto	l5741
  7973  004804                     l5731:
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;USART1.c: 17:             U1BRGH = 0x03;
  7977  004804  0E03               	movlw	3
  7978  004806  013D               	movlb	61	; () banked
  7979  004808  6FF6               	movwf	246,b	;volatile
  7980                           
  7981                           ;USART1.c: 18:             U1BRGL = 0x40;
  7982  00480A  0E40               	movlw	64
  7983  00480C  D009               	goto	L13
  7984  00480E                     l5733:
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;USART1.c: 21:             U1BRGH = 0x01;
  7988  00480E  0E01               	movlw	1
  7989  004810  013D               	movlb	61	; () banked
  7990  004812  6FF6               	movwf	246,b	;volatile
  7991                           
  7992                           ;USART1.c: 22:             U1BRGL = 0x14;
  7993  004814  0E14               	movlw	20
  7994  004816  D004               	goto	L13
  7995  004818                     l5735:
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;USART1.c: 25:             U1BRGH = 0x00;
  7999  004818  0E00               	movlw	0
  8000  00481A  013D               	movlb	61	; () banked
  8001  00481C  6FF6               	movwf	246,b	;volatile
  8002                           
  8003                           ;USART1.c: 26:             U1BRGL = 0x89;
  8004  00481E  0E89               	movlw	137
  8005  004820                     L13:
  8006  004820  6FF5               	movwf	245,b	;volatile
  8007                           
  8008                           ;USART1.c: 27:             break;
  8009  004822  D011               	goto	l5743
  8010  004824                     l5741:
  8011                           
  8012                           ; BSR set to: 58
  8013  004824  0100               	movlb	0	; () banked
  8014  004826  5162               	movf	USART1_Init@baud_rate& (0+255),w,b
  8015  004828  6F60               	movwf	??_USART1_Init& (0+255),b
  8016  00482A  6B61               	clrf	(??_USART1_Init+1)& (0+255),b
  8017                           
  8018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8019                           ; Switch size 1, requested type "simple"
  8020                           ; Number of cases is 1, Range of values is 0 to 0
  8021                           ; switch strategies available:
  8022                           ; Name         Instructions Cycles
  8023                           ; simple_byte            4     3 (average)
  8024                           ;	Chosen strategy is simple_byte
  8025  00482C  5161               	movf	(??_USART1_Init+1)& (0+255),w,b
  8026  00482E  0A00               	xorlw	0	; case 0
  8027  004830  A4D8               	btfss	status,2,c
  8028  004832  D7F2               	goto	l5735
  8029                           
  8030                           ; BSR set to: 0
  8031                           ; Switch size 1, requested type "simple"
  8032                           ; Number of cases is 3, Range of values is 1 to 3
  8033                           ; switch strategies available:
  8034                           ; Name         Instructions Cycles
  8035                           ; simple_byte           10     6 (average)
  8036                           ;	Chosen strategy is simple_byte
  8037  004834  5160               	movf	??_USART1_Init& (0+255),w,b
  8038  004836  0A01               	xorlw	1	; case 1
  8039  004838  B4D8               	btfsc	status,2,c
  8040  00483A  D7E4               	goto	l5731
  8041  00483C  0A03               	xorlw	3	; case 2
  8042  00483E  B4D8               	btfsc	status,2,c
  8043  004840  D7E6               	goto	l5733
  8044  004842  0A01               	xorlw	1	; case 3
  8045  004844  D7E9               	goto	l5735
  8046  004846                     l5743:
  8047                           
  8048                           ; BSR set to: 61
  8049                           ;USART1.c: 34:     rx_counter = 0;
  8050  004846  0E00               	movlw	0
  8051  004848  6E43               	movwf	_rx_counter,c
  8052                           
  8053                           ;USART1.c: 36:     U1CON0 = 0xB0;
  8054  00484A  0EB0               	movlw	176
  8055  00484C  6FF2               	movwf	242,b	;volatile
  8056                           
  8057                           ;USART1.c: 37:     U1CON1 = 0x00;
  8058  00484E  0E00               	movlw	0
  8059  004850  6FF3               	movwf	243,b	;volatile
  8060                           
  8061                           ;USART1.c: 38:     U2CON2 = 0x80;
  8062  004852  0E80               	movlw	128
  8063  004854  6FDC               	movwf	220,b	;volatile
  8064                           
  8065                           ;USART1.c: 39:     U1ERRIE = 0x00;
  8066  004856  0E00               	movlw	0
  8067  004858  6FFA               	movwf	250,b	;volatile
  8068                           
  8069                           ;USART1.c: 40:     U1UIR = 0x00;
  8070  00485A  0E00               	movlw	0
  8071  00485C  6FF8               	movwf	248,b	;volatile
  8072                           
  8073                           ; BSR set to: 61
  8074                           ;USART1.c: 41:     PIE3bits.U1RXIE = 1;
  8075  00485E  0139               	movlb	57	; () banked
  8076  004860  8793               	bsf	147,3,b	;volatile
  8077                           
  8078                           ; BSR set to: 57
  8079                           ;USART1.c: 42:     PIE3bits.U1TXIE =1;
  8080  004862  8993               	bsf	147,4,b	;volatile
  8081                           
  8082                           ; BSR set to: 57
  8083                           ;USART1.c: 43:     IPR3bits.U1RXIP = 1;
  8084  004864  8783               	bsf	131,3,b	;volatile
  8085                           
  8086                           ; BSR set to: 57
  8087                           ;USART1.c: 44:     IPR3bits.U1TXIP = 1;
  8088  004866  8983               	bsf	131,4,b	;volatile
  8089                           
  8090                           ;USART1.c: 45:     PIR3 = 0x00;
  8091  004868  0E00               	movlw	0
  8092  00486A  6FA3               	movwf	163,b	;volatile
  8093                           
  8094                           ; BSR set to: 57
  8095                           ;USART1.c: 46:     U1CON1bits.ON = 1;
  8096  00486C  013D               	movlb	61	; () banked
  8097  00486E  8FF3               	bsf	243,7,b	;volatile
  8098                           
  8099                           ; BSR set to: 61
  8100  004870  0012               	return		;funcret
  8101  004872                     __end_of_USART1_Init:
  8102                           	opt callstack 0
  8103                           
  8104 ;; *************** function _ADC_Init *****************
  8105 ;; Defined at:
  8106 ;;		line 158 in file "main.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;		None
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;		None
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  1    wreg      void 
  8113 ;; Registers used:
  8114 ;;		wreg, status,2
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8124 ;;Total ram usage:        0 bytes
  8125 ;; Hardware stack levels used:    1
  8126 ;; Hardware stack levels required when called:    2
  8127 ;; This function calls:
  8128 ;;		Nothing
  8129 ;; This function is called by:
  8130 ;;		_main
  8131 ;; This function uses a non-reentrant model
  8132 ;;
  8133                           
  8134                           	psect	text34
  8135  004D66                     __ptext34:
  8136                           	opt callstack 0
  8137  004D66                     _ADC_Init:
  8138                           	opt callstack 28
  8139                           
  8140                           ;main.c: 160:     TRISBbits.TRISB4 = 1;
  8141                           
  8142                           ; BSR set to: 61
  8143                           ;incstack = 0
  8144  004D66  88C3               	bsf	16323,4,c	;volatile
  8145                           
  8146                           ;main.c: 161:     ANSELBbits.ANSELB4 = 1;
  8147  004D68  013A               	movlb	58	; () banked
  8148  004D6A  8950               	bsf	80,4,b	;volatile
  8149                           
  8150                           ; BSR set to: 58
  8151                           ;main.c: 162:     ADCON0 = 0x94;
  8152  004D6C  0E94               	movlw	148
  8153  004D6E  013E               	movlb	62	; () banked
  8154  004D70  6FF8               	movwf	248,b	;volatile
  8155                           
  8156                           ;main.c: 163:     ADCON1 = 0x00;
  8157  004D72  0E00               	movlw	0
  8158  004D74  6FF9               	movwf	249,b	;volatile
  8159                           
  8160                           ;main.c: 164:     ADCON2 = 0x00;
  8161  004D76  0E00               	movlw	0
  8162  004D78  6FFA               	movwf	250,b	;volatile
  8163                           
  8164                           ;main.c: 165:     ADREF = 0x00;
  8165  004D7A  0E00               	movlw	0
  8166  004D7C  6FFD               	movwf	253,b	;volatile
  8167                           
  8168                           ; BSR set to: 62
  8169                           ;main.c: 166:     IPR1bits.ADIP = 0;
  8170  004D7E  0139               	movlb	57	; () banked
  8171  004D80  9581               	bcf	129,2,b	;volatile
  8172                           
  8173                           ; BSR set to: 57
  8174                           ;main.c: 167:     PIE1bits.ADIE = 1;
  8175  004D82  8591               	bsf	145,2,b	;volatile
  8176                           
  8177                           ; BSR set to: 57
  8178                           ;main.c: 168:     PIR1bits.ADIF = 0;
  8179  004D84  95A1               	bcf	161,2,b	;volatile
  8180                           
  8181                           ; BSR set to: 57
  8182  004D86  0012               	return		;funcret
  8183  004D88                     __end_of_ADC_Init:
  8184                           	opt callstack 0
  8185                           
  8186 ;; *************** function _timer0_isr *****************
  8187 ;; Defined at:
  8188 ;;		line 43 in file "main.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;		None
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;		None
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  1    wreg      void 
  8195 ;; Registers used:
  8196 ;;		wreg, status,2, status,0, cstack
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8206 ;;Total ram usage:        0 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; Hardware stack levels required when called:    1
  8209 ;; This function calls:
  8210 ;;		_ADC_Start
  8211 ;; This function is called by:
  8212 ;;		Interrupt level 2
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216                           	psect	text35
  8217  004D08                     __ptext35:
  8218                           	opt callstack 0
  8219  004D08                     _timer0_isr:
  8220                           	opt callstack 20
  8221                           
  8222                           ;main.c: 44:     T0CON0bits.EN = 0;
  8223                           
  8224                           ; BSR set to: 57
  8225                           ;incstack = 0
  8226  004D08  9EB8               	bcf	16312,7,c	;volatile
  8227                           
  8228                           ;main.c: 45:     counter_timer0 ++;
  8229  004D0A  2A41               	incf	_counter_timer0,f,c
  8230                           
  8231                           ;main.c: 46:     if(counter_timer0 == 2){
  8232  004D0C  0E02               	movlw	2
  8233  004D0E  1841               	xorwf	_counter_timer0,w,c
  8234  004D10  A4D8               	btfss	status,2,c
  8235  004D12  D002               	goto	i2l2751
  8236                           
  8237                           ;main.c: 47:         LATAbits.LA0 = 0;
  8238  004D14  90BA               	bcf	16314,0,c	;volatile
  8239                           
  8240                           ;main.c: 48:     }else if(counter_timer0 == 40){
  8241  004D16  D007               	goto	i2l198
  8242  004D18                     i2l2751:
  8243  004D18  0E28               	movlw	40
  8244  004D1A  1841               	xorwf	_counter_timer0,w,c
  8245  004D1C  A4D8               	btfss	status,2,c
  8246  004D1E  D003               	goto	i2l198
  8247                           
  8248                           ;main.c: 49:         LATAbits.LA0 = 1;
  8249  004D20  80BA               	bsf	16314,0,c	;volatile
  8250                           
  8251                           ;main.c: 50:         counter_timer0 = 0;
  8252  004D22  0E00               	movlw	0
  8253  004D24  6E41               	movwf	_counter_timer0,c
  8254  004D26                     i2l198:
  8255                           
  8256                           ;main.c: 52:     TMR0L = 0xB0;
  8257  004D26  0EB0               	movlw	176
  8258  004D28  6EB6               	movwf	16310,c	;volatile
  8259                           
  8260                           ;main.c: 53:     TMR0H = 0x3C;
  8261  004D2A  0E3C               	movlw	60
  8262  004D2C  6EB7               	movwf	16311,c	;volatile
  8263                           
  8264                           ;main.c: 54:     ADC_Start(12);
  8265  004D2E  0E0C               	movlw	12
  8266  004D30  ECED  F026         	call	_ADC_Start
  8267                           
  8268                           ;main.c: 55:     PIR3bits.TMR0IF = 0;
  8269  004D34  0139               	movlb	57	; () banked
  8270  004D36  9FA3               	bcf	163,7,b	;volatile
  8271                           
  8272                           ; BSR set to: 57
  8273                           ;main.c: 56:     T0CON0bits.EN = 1;
  8274  004D38  8EB8               	bsf	16312,7,c	;volatile
  8275                           
  8276                           ; BSR set to: 57
  8277  004D3A  0011               	retfie		f
  8278  004D3C                     __end_of_timer0_isr:
  8279                           	opt callstack 0
  8280                           
  8281 ;; *************** function _ADC_Start *****************
  8282 ;; Defined at:
  8283 ;;		line 172 in file "main.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  pin             1    wreg     unsigned char 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  pin             1    0[COMRAM] unsigned char 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      void 
  8290 ;; Registers used:
  8291 ;;		wreg
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8301 ;;Total ram usage:        1 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; This function calls:
  8304 ;;		Nothing
  8305 ;; This function is called by:
  8306 ;;		_timer0_isr
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           	psect	text36
  8311  004DDA                     __ptext36:
  8312                           	opt callstack 0
  8313  004DDA                     _ADC_Start:
  8314                           	opt callstack 20
  8315                           
  8316                           ; BSR set to: 57
  8317                           ;incstack = 0
  8318                           ;ADC_Start@pin stored from wreg
  8319  004DDA  6E01               	movwf	ADC_Start@pin,c
  8320                           
  8321                           ;main.c: 173:     ADPCH = pin;
  8322  004DDC  0060  F007  FEF1   	movff	ADC_Start@pin,16113	;volatile
  8323                           
  8324                           ;main.c: 174:     ADCON0bits.GO = 1;
  8325  004DE2  013E               	movlb	62	; () banked
  8326  004DE4  81F8               	bsf	248,0,b	;volatile
  8327                           
  8328                           ; BSR set to: 62
  8329  004DE6  0012               	return		;funcret
  8330  004DE8                     __end_of_ADC_Start:
  8331                           	opt callstack 0
  8332                           
  8333 ;; *************** function _uart1_tx_isr *****************
  8334 ;; Defined at:
  8335 ;;		line 59 in file "main.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;		None
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;		None
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      void 
  8342 ;; Registers used:
  8343 ;;		None
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8353 ;;Total ram usage:        0 bytes
  8354 ;; Hardware stack levels used:    1
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		Interrupt level 2
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text37
  8363  004DE8                     __ptext37:
  8364                           	opt callstack 0
  8365  004DE8                     _uart1_tx_isr:
  8366                           	opt callstack 21
  8367                           
  8368                           ;main.c: 61:     U1TXB = tx_byte;
  8369                           
  8370                           ; BSR set to: 62
  8371                           ;incstack = 0
  8372  004DE8  0060  F10B  FDEA   	movff	_tx_byte,15850	;volatile
  8373                           
  8374                           ;main.c: 62:     PIE3bits.U1TXIE = 0;
  8375  004DEE  0139               	movlb	57	; () banked
  8376  004DF0  9993               	bcf	147,4,b	;volatile
  8377                           
  8378                           ; BSR set to: 57
  8379  004DF2  0011               	retfie		f
  8380  004DF4                     __end_of_uart1_tx_isr:
  8381                           	opt callstack 0
  8382                           
  8383 ;; *************** function _uart1_rx_isr *****************
  8384 ;; Defined at:
  8385 ;;		line 65 in file "main.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		Interrupt level 2
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text38
  8413  004DC4                     __ptext38:
  8414                           	opt callstack 0
  8415  004DC4                     _uart1_rx_isr:
  8416                           	opt callstack 21
  8417                           
  8418                           ;main.c: 66:     rx_buffer[rx_counter] = U1RXB;
  8419                           
  8420                           ; BSR set to: 57
  8421                           ;incstack = 0
  8422  004DC4  0E00               	movlw	low _rx_buffer
  8423  004DC6  2443               	addwf	_rx_counter,w,c
  8424  004DC8  6ED9               	movwf	fsr2l,c
  8425  004DCA  6ADA               	clrf	fsr2h,c
  8426  004DCC  0E01               	movlw	high _rx_buffer
  8427  004DCE  22DA               	addwfc	fsr2h,f,c
  8428  004DD0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  8429                           
  8430                           ;main.c: 67:     rx_counter ++;
  8431  004DD6  2A43               	incf	_rx_counter,f,c
  8432  004DD8  0011               	retfie		f
  8433  004DDA                     __end_of_uart1_rx_isr:
  8434                           	opt callstack 0
  8435                           
  8436 ;; *************** function _adc_isr *****************
  8437 ;; Defined at:
  8438 ;;		line 70 in file "main.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  adc_result      2   42[COMRAM] int 
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1    wreg      void 
  8445 ;; Registers used:
  8446 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8453 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8455 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8456 ;;Total ram usage:        4 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; Hardware stack levels required when called:    1
  8459 ;; This function calls:
  8460 ;;		___xxtofl
  8461 ;;		i2___flmul
  8462 ;; This function is called by:
  8463 ;;		Interrupt level 2
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text39
  8468  004874                     __ptext39:
  8469                           	opt callstack 0
  8470  004874                     _adc_isr:
  8471                           	opt callstack 20
  8472                           
  8473                           ;main.c: 71:     int adc_result = ADRESL;
  8474                           
  8475                           ;incstack = 0
  8476  004874  006F FBBC  F02B    	movff	16111,adc_isr@adc_result	;volatile
  8477  00487A  6A2C               	clrf	adc_isr@adc_result+1,c
  8478                           
  8479                           ;main.c: 72:     adc_result = adc_result | (ADRESH <<8);
  8480  00487C  013E               	movlb	62	; () banked
  8481  00487E  51F0               	movf	240,w,b	;volatile
  8482  004880  6E2A               	movwf	(??_adc_isr+1)& (0+255),c
  8483  004882  6A29               	clrf	??_adc_isr& (0+255),c
  8484  004884  502B               	movf	adc_isr@adc_result,w,c
  8485  004886  1029               	iorwf	??_adc_isr,w,c
  8486  004888  6E2B               	movwf	adc_isr@adc_result,c
  8487  00488A  502C               	movf	adc_isr@adc_result+1,w,c
  8488  00488C  102A               	iorwf	??_adc_isr+1,w,c
  8489  00488E  6E2C               	movwf	adc_isr@adc_result+1,c
  8490                           
  8491                           ; BSR set to: 62
  8492                           ;main.c: 73:     ADC_VOLTAGE_RESULT = (float)adc_result * 0.00122;
  8493  004890  0060  F0AC  F002   	movff	adc_isr@adc_result,___xxtofl@val
  8494  004896  0060  F0B0  F003   	movff	adc_isr@adc_result+1,___xxtofl@val+1
  8495  00489C  0E00               	movlw	0
  8496  00489E  BE03               	btfsc	___xxtofl@val+1,7,c
  8497  0048A0  0EFF               	movlw	-1
  8498  0048A2  6E04               	movwf	___xxtofl@val+2,c
  8499  0048A4  6E05               	movwf	___xxtofl@val+3,c
  8500  0048A6  0E01               	movlw	1
  8501  0048A8  EC42  F01F         	call	___xxtofl
  8502  0048AC  0060  F008  F010   	movff	?___xxtofl,i2___flmul@b
  8503  0048B2  0060  F00C  F011   	movff	?___xxtofl+1,i2___flmul@b+1
  8504  0048B8  0060  F010  F012   	movff	?___xxtofl+2,i2___flmul@b+2
  8505  0048BE  0060  F014  F013   	movff	?___xxtofl+3,i2___flmul@b+3
  8506  0048C4  0E68               	movlw	104
  8507  0048C6  6E14               	movwf	i2___flmul@a,c
  8508  0048C8  0EE8               	movlw	232
  8509  0048CA  6E15               	movwf	i2___flmul@a+1,c
  8510  0048CC  0E9F               	movlw	159
  8511  0048CE  6E16               	movwf	i2___flmul@a+2,c
  8512  0048D0  0E3A               	movlw	58
  8513  0048D2  6E17               	movwf	i2___flmul@a+3,c
  8514  0048D4  ECA4  F017         	call	i2___flmul	;wreg free
  8515  0048D8  0060  F040  F035   	movff	?i2___flmul,_ADC_VOLTAGE_RESULT
  8516  0048DE  0060  F044  F036   	movff	?i2___flmul+1,_ADC_VOLTAGE_RESULT+1
  8517  0048E4  0060  F048  F037   	movff	?i2___flmul+2,_ADC_VOLTAGE_RESULT+2
  8518  0048EA  0060  F04C  F038   	movff	?i2___flmul+3,_ADC_VOLTAGE_RESULT+3
  8519                           
  8520                           ;main.c: 74:     PIR1bits.ADIF = 0;
  8521  0048F0  0139               	movlb	57	; () banked
  8522  0048F2  95A1               	bcf	161,2,b	;volatile
  8523                           
  8524                           ; BSR set to: 57
  8525  0048F4  0011               	retfie		f
  8526  0048F6                     __end_of_adc_isr:
  8527                           	opt callstack 0
  8528                           
  8529 ;; *************** function i2___flmul *****************
  8530 ;; Defined at:
  8531 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  b               4   15[COMRAM] void 
  8534 ;;  a               4   19[COMRAM] void 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;  __flmul         4   34[COMRAM] struct .
  8537 ;;  __flmul         4   28[COMRAM] unsigned long 
  8538 ;;  __flmul         2   38[COMRAM] struct .
  8539 ;;  __flmul         1   33[COMRAM] unsigned char 
  8540 ;;  __flmul         1   32[COMRAM] unsigned char 
  8541 ;;  __flmul         1   27[COMRAM] unsigned char 
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  4   15[COMRAM] unsigned char 
  8544 ;; Registers used:
  8545 ;;		wreg, status,2, status,0, prodl, prodh
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8551 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8552 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8553 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;Total ram usage:       25 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; This function calls:
  8558 ;;		Nothing
  8559 ;; This function is called by:
  8560 ;;		_adc_isr
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           
  8564                           	psect	text40
  8565  002F48                     __ptext40:
  8566                           	opt callstack 0
  8567  002F48                     i2___flmul:
  8568                           	opt callstack 20
  8569                           
  8570                           ; BSR set to: 57
  8571                           ;incstack = 0
  8572  002F48  5013               	movf	i2___flmul@b+3,w,c
  8573  002F4A  0B80               	andlw	128
  8574  002F4C  6E1C               	movwf	i2___flmul@sign,c
  8575  002F4E  5013               	movf	i2___flmul@b+3,w,c
  8576  002F50  2413               	addwf	i2___flmul@b+3,w,c
  8577  002F52  6E22               	movwf	i2___flmul@bexp,c
  8578  002F54  BE12               	btfsc	i2___flmul@b+2,7,c
  8579  002F56  8022               	bsf	i2___flmul@bexp,0,c
  8580  002F58  5022               	movf	i2___flmul@bexp,w,c
  8581  002F5A  B4D8               	btfsc	status,2,c
  8582  002F5C  D00D               	goto	i2l4289
  8583  002F5E  2822               	incf	i2___flmul@bexp,w,c
  8584  002F60  A4D8               	btfss	status,2,c
  8585  002F62  D008               	goto	i2l4287
  8586  002F64  0E00               	movlw	0
  8587  002F66  6E10               	movwf	i2___flmul@b,c
  8588  002F68  0E00               	movlw	0
  8589  002F6A  6E11               	movwf	i2___flmul@b+1,c
  8590  002F6C  0E00               	movlw	0
  8591  002F6E  6E12               	movwf	i2___flmul@b+2,c
  8592  002F70  0E00               	movlw	0
  8593  002F72  6E13               	movwf	i2___flmul@b+3,c
  8594  002F74                     i2l4287:
  8595  002F74  8E12               	bsf	i2___flmul@b+2,7,c
  8596  002F76  D008               	goto	i2l4291
  8597  002F78                     i2l4289:
  8598  002F78  0E00               	movlw	0
  8599  002F7A  6E10               	movwf	i2___flmul@b,c
  8600  002F7C  0E00               	movlw	0
  8601  002F7E  6E11               	movwf	i2___flmul@b+1,c
  8602  002F80  0E00               	movlw	0
  8603  002F82  6E12               	movwf	i2___flmul@b+2,c
  8604  002F84  0E00               	movlw	0
  8605  002F86  6E13               	movwf	i2___flmul@b+3,c
  8606  002F88                     i2l4291:
  8607  002F88  5017               	movf	i2___flmul@a+3,w,c
  8608  002F8A  0B80               	andlw	128
  8609  002F8C  1A1C               	xorwf	i2___flmul@sign,f,c
  8610  002F8E  5017               	movf	i2___flmul@a+3,w,c
  8611  002F90  2417               	addwf	i2___flmul@a+3,w,c
  8612  002F92  6E21               	movwf	i2___flmul@aexp,c
  8613  002F94  BE16               	btfsc	i2___flmul@a+2,7,c
  8614  002F96  8021               	bsf	i2___flmul@aexp,0,c
  8615  002F98  5021               	movf	i2___flmul@aexp,w,c
  8616  002F9A  B4D8               	btfsc	status,2,c
  8617  002F9C  D00D               	goto	i2l4307
  8618  002F9E  2821               	incf	i2___flmul@aexp,w,c
  8619  002FA0  A4D8               	btfss	status,2,c
  8620  002FA2  D008               	goto	i2l4305
  8621  002FA4  0E00               	movlw	0
  8622  002FA6  6E14               	movwf	i2___flmul@a,c
  8623  002FA8  0E00               	movlw	0
  8624  002FAA  6E15               	movwf	i2___flmul@a+1,c
  8625  002FAC  0E00               	movlw	0
  8626  002FAE  6E16               	movwf	i2___flmul@a+2,c
  8627  002FB0  0E00               	movlw	0
  8628  002FB2  6E17               	movwf	i2___flmul@a+3,c
  8629  002FB4                     i2l4305:
  8630  002FB4  8E16               	bsf	i2___flmul@a+2,7,c
  8631  002FB6  D008               	goto	i2l1034
  8632  002FB8                     i2l4307:
  8633  002FB8  0E00               	movlw	0
  8634  002FBA  6E14               	movwf	i2___flmul@a,c
  8635  002FBC  0E00               	movlw	0
  8636  002FBE  6E15               	movwf	i2___flmul@a+1,c
  8637  002FC0  0E00               	movlw	0
  8638  002FC2  6E16               	movwf	i2___flmul@a+2,c
  8639  002FC4  0E00               	movlw	0
  8640  002FC6  6E17               	movwf	i2___flmul@a+3,c
  8641  002FC8                     i2l1034:
  8642  002FC8  5021               	movf	i2___flmul@aexp,w,c
  8643  002FCA  B4D8               	btfsc	status,2,c
  8644  002FCC  D003               	goto	i2u533_40
  8645  002FCE  5022               	movf	i2___flmul@bexp,w,c
  8646  002FD0  A4D8               	btfss	status,2,c
  8647  002FD2  D009               	goto	i2l4315
  8648  002FD4                     i2u533_40:
  8649  002FD4  0E00               	movlw	0
  8650  002FD6  6E10               	movwf	?i2___flmul,c
  8651  002FD8  0E00               	movlw	0
  8652  002FDA  6E11               	movwf	?i2___flmul+1,c
  8653  002FDC  0E00               	movlw	0
  8654  002FDE  6E12               	movwf	?i2___flmul+2,c
  8655  002FE0  0E00               	movlw	0
  8656  002FE2  6E13               	movwf	?i2___flmul+3,c
  8657  002FE4  0012               	return	
  8658  002FE6                     i2l4315:
  8659  002FE6  5016               	movf	i2___flmul@a+2,w,c
  8660  002FE8  0210               	mulwf	i2___flmul@b,c
  8661  002FEA  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  8662  002FF0  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  8663  002FF6  5027               	movf	i2___flmul@temp,w,c
  8664  002FF8  6E1D               	movwf	i2___flmul@grs,c
  8665  002FFA  6A1E               	clrf	i2___flmul@grs+1,c
  8666  002FFC  6A1F               	clrf	i2___flmul@grs+2,c
  8667  002FFE  6A20               	clrf	i2___flmul@grs+3,c
  8668  003000  5028               	movf	i2___flmul@temp+1,w,c
  8669  003002  6E23               	movwf	i2___flmul@prod,c
  8670  003004  6A24               	clrf	i2___flmul@prod+1,c
  8671  003006  6A25               	clrf	i2___flmul@prod+2,c
  8672  003008  6A26               	clrf	i2___flmul@prod+3,c
  8673  00300A  5015               	movf	i2___flmul@a+1,w,c
  8674  00300C  0211               	mulwf	i2___flmul@b+1,c
  8675  00300E  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  8676  003014  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  8677  00301A  5027               	movf	i2___flmul@temp,w,c
  8678  00301C  261D               	addwf	i2___flmul@grs,f,c
  8679  00301E  0E00               	movlw	0
  8680  003020  221E               	addwfc	i2___flmul@grs+1,f,c
  8681  003022  221F               	addwfc	i2___flmul@grs+2,f,c
  8682  003024  2220               	addwfc	i2___flmul@grs+3,f,c
  8683  003026  5028               	movf	i2___flmul@temp+1,w,c
  8684  003028  2623               	addwf	i2___flmul@prod,f,c
  8685  00302A  0E00               	movlw	0
  8686  00302C  2224               	addwfc	i2___flmul@prod+1,f,c
  8687  00302E  2225               	addwfc	i2___flmul@prod+2,f,c
  8688  003030  2226               	addwfc	i2___flmul@prod+3,f,c
  8689  003032  5014               	movf	i2___flmul@a,w,c
  8690  003034  0212               	mulwf	i2___flmul@b+2,c
  8691  003036  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  8692  00303C  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  8693  003042  5027               	movf	i2___flmul@temp,w,c
  8694  003044  261D               	addwf	i2___flmul@grs,f,c
  8695  003046  0E00               	movlw	0
  8696  003048  221E               	addwfc	i2___flmul@grs+1,f,c
  8697  00304A  221F               	addwfc	i2___flmul@grs+2,f,c
  8698  00304C  2220               	addwfc	i2___flmul@grs+3,f,c
  8699  00304E  5028               	movf	i2___flmul@temp+1,w,c
  8700  003050  2623               	addwf	i2___flmul@prod,f,c
  8701  003052  0E00               	movlw	0
  8702  003054  2224               	addwfc	i2___flmul@prod+1,f,c
  8703  003056  2225               	addwfc	i2___flmul@prod+2,f,c
  8704  003058  2226               	addwfc	i2___flmul@prod+3,f,c
  8705  00305A  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
  8706  003060  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
  8707  003066  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
  8708  00306C  6A1D               	clrf	i2___flmul@grs,c
  8709  00306E  5014               	movf	i2___flmul@a,w,c
  8710  003070  0211               	mulwf	i2___flmul@b+1,c
  8711  003072  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  8712  003078  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  8713  00307E  5027               	movf	i2___flmul@temp,w,c
  8714  003080  261D               	addwf	i2___flmul@grs,f,c
  8715  003082  5028               	movf	i2___flmul@temp+1,w,c
  8716  003084  221E               	addwfc	i2___flmul@grs+1,f,c
  8717  003086  0E00               	movlw	0
  8718  003088  221F               	addwfc	i2___flmul@grs+2,f,c
  8719  00308A  0E00               	movlw	0
  8720  00308C  2220               	addwfc	i2___flmul@grs+3,f,c
  8721  00308E  5015               	movf	i2___flmul@a+1,w,c
  8722  003090  0210               	mulwf	i2___flmul@b,c
  8723  003092  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  8724  003098  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  8725  00309E  5027               	movf	i2___flmul@temp,w,c
  8726  0030A0  261D               	addwf	i2___flmul@grs,f,c
  8727  0030A2  5028               	movf	i2___flmul@temp+1,w,c
  8728  0030A4  221E               	addwfc	i2___flmul@grs+1,f,c
  8729  0030A6  0E00               	movlw	0
  8730  0030A8  221F               	addwfc	i2___flmul@grs+2,f,c
  8731  0030AA  0E00               	movlw	0
  8732  0030AC  2220               	addwfc	i2___flmul@grs+3,f,c
  8733  0030AE  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
  8734  0030B4  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
  8735  0030BA  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
  8736  0030C0  6A1D               	clrf	i2___flmul@grs,c
  8737  0030C2  5014               	movf	i2___flmul@a,w,c
  8738  0030C4  0210               	mulwf	i2___flmul@b,c
  8739  0030C6  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  8740  0030CC  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  8741  0030D2  5027               	movf	i2___flmul@temp,w,c
  8742  0030D4  261D               	addwf	i2___flmul@grs,f,c
  8743  0030D6  5028               	movf	i2___flmul@temp+1,w,c
  8744  0030D8  221E               	addwfc	i2___flmul@grs+1,f,c
  8745  0030DA  0E00               	movlw	0
  8746  0030DC  221F               	addwfc	i2___flmul@grs+2,f,c
  8747  0030DE  0E00               	movlw	0
  8748  0030E0  2220               	addwfc	i2___flmul@grs+3,f,c
  8749  0030E2  5016               	movf	i2___flmul@a+2,w,c
  8750  0030E4  0211               	mulwf	i2___flmul@b+1,c
  8751  0030E6  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  8752  0030EC  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  8753  0030F2  5027               	movf	i2___flmul@temp,w,c
  8754  0030F4  2623               	addwf	i2___flmul@prod,f,c
  8755  0030F6  5028               	movf	i2___flmul@temp+1,w,c
  8756  0030F8  2224               	addwfc	i2___flmul@prod+1,f,c
  8757  0030FA  0E00               	movlw	0
  8758  0030FC  2225               	addwfc	i2___flmul@prod+2,f,c
  8759  0030FE  0E00               	movlw	0
  8760  003100  2226               	addwfc	i2___flmul@prod+3,f,c
  8761  003102  5015               	movf	i2___flmul@a+1,w,c
  8762  003104  0212               	mulwf	i2___flmul@b+2,c
  8763  003106  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  8764  00310C  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  8765  003112  5027               	movf	i2___flmul@temp,w,c
  8766  003114  2623               	addwf	i2___flmul@prod,f,c
  8767  003116  5028               	movf	i2___flmul@temp+1,w,c
  8768  003118  2224               	addwfc	i2___flmul@prod+1,f,c
  8769  00311A  0E00               	movlw	0
  8770  00311C  2225               	addwfc	i2___flmul@prod+2,f,c
  8771  00311E  0E00               	movlw	0
  8772  003120  2226               	addwfc	i2___flmul@prod+3,f,c
  8773  003122  5016               	movf	i2___flmul@a+2,w,c
  8774  003124  0212               	mulwf	i2___flmul@b+2,c
  8775  003126  006F FFCC  F027    	movff	prodl,i2___flmul@temp
  8776  00312C  006F FFD0  F028    	movff	prodh,i2___flmul@temp+1
  8777  003132  5027               	movf	i2___flmul@temp,w,c
  8778  003134  6E18               	movwf	??i2___flmul& (0+255),c
  8779  003136  5028               	movf	i2___flmul@temp+1,w,c
  8780  003138  6E19               	movwf	(??i2___flmul+1)& (0+255),c
  8781  00313A  6A1A               	clrf	(??i2___flmul+2)& (0+255),c
  8782  00313C  6A1B               	clrf	(??i2___flmul+3)& (0+255),c
  8783  00313E  0060  F068  F01B   	movff	??i2___flmul+2,??i2___flmul+3
  8784  003144  0060  F064  F01A   	movff	??i2___flmul+1,??i2___flmul+2
  8785  00314A  0060  F060  F019   	movff	??i2___flmul,??i2___flmul+1
  8786  003150  6A18               	clrf	??i2___flmul,c
  8787  003152  5018               	movf	??i2___flmul,w,c
  8788  003154  2623               	addwf	i2___flmul@prod,f,c
  8789  003156  5019               	movf	??i2___flmul+1,w,c
  8790  003158  2224               	addwfc	i2___flmul@prod+1,f,c
  8791  00315A  501A               	movf	??i2___flmul+2,w,c
  8792  00315C  2225               	addwfc	i2___flmul@prod+2,f,c
  8793  00315E  501B               	movf	??i2___flmul+3,w,c
  8794  003160  2226               	addwfc	i2___flmul@prod+3,f,c
  8795  003162  0060  F074  F018   	movff	i2___flmul@grs,??i2___flmul
  8796  003168  0060  F078  F019   	movff	i2___flmul@grs+1,??i2___flmul+1
  8797  00316E  0060  F07C  F01A   	movff	i2___flmul@grs+2,??i2___flmul+2
  8798  003174  0060  F080  F01B   	movff	i2___flmul@grs+3,??i2___flmul+3
  8799  00317A  0E19               	movlw	25
  8800  00317C  D005               	goto	i2u534_40
  8801  00317E                     i2u534_45:
  8802  00317E  90D8               	bcf	status,0,c
  8803  003180  321B               	rrcf	??i2___flmul+3,f,c
  8804  003182  321A               	rrcf	??i2___flmul+2,f,c
  8805  003184  3219               	rrcf	??i2___flmul+1,f,c
  8806  003186  3218               	rrcf	??i2___flmul,f,c
  8807  003188                     i2u534_40:
  8808  003188  2EE8               	decfsz	wreg,f,c
  8809  00318A  D7F9               	goto	i2u534_45
  8810  00318C  5018               	movf	??i2___flmul,w,c
  8811  00318E  2623               	addwf	i2___flmul@prod,f,c
  8812  003190  5019               	movf	??i2___flmul+1,w,c
  8813  003192  2224               	addwfc	i2___flmul@prod+1,f,c
  8814  003194  501A               	movf	??i2___flmul+2,w,c
  8815  003196  2225               	addwfc	i2___flmul@prod+2,f,c
  8816  003198  501B               	movf	??i2___flmul+3,w,c
  8817  00319A  2226               	addwfc	i2___flmul@prod+3,f,c
  8818  00319C  0060  F07C  F020   	movff	i2___flmul@grs+2,i2___flmul@grs+3
  8819  0031A2  0060  F078  F01F   	movff	i2___flmul@grs+1,i2___flmul@grs+2
  8820  0031A8  0060  F074  F01E   	movff	i2___flmul@grs,i2___flmul@grs+1
  8821  0031AE  6A1D               	clrf	i2___flmul@grs,c
  8822  0031B0  5021               	movf	i2___flmul@aexp,w,c
  8823  0031B2  0060  F088  F018   	movff	i2___flmul@bexp,??i2___flmul
  8824  0031B8  6A19               	clrf	(??i2___flmul+1)& (0+255),c
  8825  0031BA  2618               	addwf	??i2___flmul,f,c
  8826  0031BC  0E00               	movlw	0
  8827  0031BE  2219               	addwfc	??i2___flmul+1,f,c
  8828  0031C0  0E82               	movlw	130
  8829  0031C2  2418               	addwf	??i2___flmul,w,c
  8830  0031C4  6E27               	movwf	i2___flmul@temp,c
  8831  0031C6  0EFF               	movlw	255
  8832  0031C8  2019               	addwfc	??i2___flmul+1,w,c
  8833  0031CA  6E28               	movwf	i2___flmul@temp+1,c
  8834  0031CC  D00F               	goto	i2l4363
  8835  0031CE                     i2l4357:
  8836  0031CE  90D8               	bcf	status,0,c
  8837  0031D0  3623               	rlcf	i2___flmul@prod,f,c
  8838  0031D2  3624               	rlcf	i2___flmul@prod+1,f,c
  8839  0031D4  3625               	rlcf	i2___flmul@prod+2,f,c
  8840  0031D6  3626               	rlcf	i2___flmul@prod+3,f,c
  8841  0031D8  BE20               	btfsc	i2___flmul@grs+3,7,c
  8842  0031DA  8023               	bsf	i2___flmul@prod,0,c
  8843  0031DC  90D8               	bcf	status,0,c
  8844  0031DE  361D               	rlcf	i2___flmul@grs,f,c
  8845  0031E0  361E               	rlcf	i2___flmul@grs+1,f,c
  8846  0031E2  361F               	rlcf	i2___flmul@grs+2,f,c
  8847  0031E4  3620               	rlcf	i2___flmul@grs+3,f,c
  8848  0031E6  0627               	decf	i2___flmul@temp,f,c
  8849  0031E8  A0D8               	btfss	status,0,c
  8850  0031EA  0628               	decf	i2___flmul@temp+1,f,c
  8851  0031EC                     i2l4363:
  8852  0031EC  AE25               	btfss	i2___flmul@prod+2,7,c
  8853  0031EE  D7EF               	goto	i2l4357
  8854  0031F0  0E00               	movlw	0
  8855  0031F2  6E21               	movwf	i2___flmul@aexp,c
  8856  0031F4  AE20               	btfss	i2___flmul@grs+3,7,c
  8857  0031F6  D017               	goto	i2l1043
  8858  0031F8  0EFF               	movlw	255
  8859  0031FA  141D               	andwf	i2___flmul@grs,w,c
  8860  0031FC  6E18               	movwf	??i2___flmul& (0+255),c
  8861  0031FE  0EFF               	movlw	255
  8862  003200  141E               	andwf	i2___flmul@grs+1,w,c
  8863  003202  6E19               	movwf	(??i2___flmul+1)& (0+255),c
  8864  003204  0EFF               	movlw	255
  8865  003206  141F               	andwf	i2___flmul@grs+2,w,c
  8866  003208  6E1A               	movwf	(??i2___flmul+2)& (0+255),c
  8867  00320A  0E7F               	movlw	127
  8868  00320C  1420               	andwf	i2___flmul@grs+3,w,c
  8869  00320E  6E1B               	movwf	(??i2___flmul+3)& (0+255),c
  8870  003210  5018               	movf	??i2___flmul,w,c
  8871  003212  1019               	iorwf	??i2___flmul+1,w,c
  8872  003214  101A               	iorwf	??i2___flmul+2,w,c
  8873  003216  101B               	iorwf	??i2___flmul+3,w,c
  8874  003218  B4D8               	btfsc	status,2,c
  8875  00321A  D003               	goto	i2l1044
  8876  00321C                     i2u538_40:
  8877  00321C  0E01               	movlw	1
  8878  00321E  6E21               	movwf	i2___flmul@aexp,c
  8879  003220  D002               	goto	i2l1043
  8880  003222                     i2l1044:
  8881  003222  B023               	btfsc	i2___flmul@prod,0,c
  8882  003224  D7FB               	goto	i2u538_40
  8883  003226                     i2l1043:
  8884  003226  5021               	movf	i2___flmul@aexp,w,c
  8885  003228  B4D8               	btfsc	status,2,c
  8886  00322A  D027               	goto	i2l4383
  8887  00322C  0E01               	movlw	1
  8888  00322E  2623               	addwf	i2___flmul@prod,f,c
  8889  003230  0E00               	movlw	0
  8890  003232  2224               	addwfc	i2___flmul@prod+1,f,c
  8891  003234  2225               	addwfc	i2___flmul@prod+2,f,c
  8892  003236  2226               	addwfc	i2___flmul@prod+3,f,c
  8893  003238  A026               	btfss	i2___flmul@prod+3,0,c
  8894  00323A  D01F               	goto	i2l4383
  8895  00323C  0060  F08C  F018   	movff	i2___flmul@prod,??i2___flmul
  8896  003242  0060  F090  F019   	movff	i2___flmul@prod+1,??i2___flmul+1
  8897  003248  0060  F094  F01A   	movff	i2___flmul@prod+2,??i2___flmul+2
  8898  00324E  0060  F098  F01B   	movff	i2___flmul@prod+3,??i2___flmul+3
  8899  003254  341B               	rlcf	??i2___flmul+3,w,c
  8900  003256  321B               	rrcf	??i2___flmul+3,f,c
  8901  003258  321A               	rrcf	??i2___flmul+2,f,c
  8902  00325A  3219               	rrcf	??i2___flmul+1,f,c
  8903  00325C  3218               	rrcf	??i2___flmul,f,c
  8904  00325E  0060  F060  F023   	movff	??i2___flmul,i2___flmul@prod
  8905  003264  0060  F064  F024   	movff	??i2___flmul+1,i2___flmul@prod+1
  8906  00326A  0060  F068  F025   	movff	??i2___flmul+2,i2___flmul@prod+2
  8907  003270  0060  F06C  F026   	movff	??i2___flmul+3,i2___flmul@prod+3
  8908  003276  4A27               	infsnz	i2___flmul@temp,f,c
  8909  003278  2A28               	incf	i2___flmul@temp+1,f,c
  8910  00327A                     i2l4383:
  8911  00327A  BE28               	btfsc	i2___flmul@temp+1,7,c
  8912  00327C  D00D               	goto	i2l4387
  8913  00327E  5028               	movf	i2___flmul@temp+1,w,c
  8914  003280  E103               	bnz	i2u542_40
  8915  003282  2827               	incf	i2___flmul@temp,w,c
  8916  003284  A0D8               	btfss	status,0,c
  8917  003286  D008               	goto	i2l4387
  8918  003288                     i2u542_40:
  8919  003288  0E00               	movlw	0
  8920  00328A  6E23               	movwf	i2___flmul@prod,c
  8921  00328C  0E00               	movlw	0
  8922  00328E  6E24               	movwf	i2___flmul@prod+1,c
  8923  003290  0E80               	movlw	128
  8924  003292  6E25               	movwf	i2___flmul@prod+2,c
  8925  003294  0E7F               	movlw	127
  8926  003296  D021               	goto	L14
  8927  003298                     i2l4387:
  8928  003298  BE28               	btfsc	i2___flmul@temp+1,7,c
  8929  00329A  D005               	goto	i2u543_40
  8930  00329C  5028               	movf	i2___flmul@temp+1,w,c
  8931  00329E  E10E               	bnz	i2l1051
  8932  0032A0  0427               	decf	i2___flmul@temp,w,c
  8933  0032A2  B0D8               	btfsc	status,0,c
  8934  0032A4  D00B               	goto	i2l1051
  8935  0032A6                     i2u543_40:
  8936  0032A6  0E00               	movlw	0
  8937  0032A8  6E23               	movwf	i2___flmul@prod,c
  8938  0032AA  0E00               	movlw	0
  8939  0032AC  6E24               	movwf	i2___flmul@prod+1,c
  8940  0032AE  0E00               	movlw	0
  8941  0032B0  6E25               	movwf	i2___flmul@prod+2,c
  8942  0032B2  0E00               	movlw	0
  8943  0032B4  6E26               	movwf	i2___flmul@prod+3,c
  8944  0032B6  0E00               	movlw	0
  8945  0032B8  6E1C               	movwf	i2___flmul@sign,c
  8946  0032BA  D010               	goto	i2l4399
  8947  0032BC                     i2l1051:
  8948  0032BC  0060  F09C  F022   	movff	i2___flmul@temp,i2___flmul@bexp
  8949  0032C2  0EFF               	movlw	255
  8950  0032C4  1623               	andwf	i2___flmul@prod,f,c
  8951  0032C6  0EFF               	movlw	255
  8952  0032C8  1624               	andwf	i2___flmul@prod+1,f,c
  8953  0032CA  0E7F               	movlw	127
  8954  0032CC  1625               	andwf	i2___flmul@prod+2,f,c
  8955  0032CE  0E00               	movlw	0
  8956  0032D0  1626               	andwf	i2___flmul@prod+3,f,c
  8957  0032D2  B022               	btfsc	i2___flmul@bexp,0,c
  8958  0032D4  8E25               	bsf	i2___flmul@prod+2,7,c
  8959  0032D6  90D8               	bcf	status,0,c
  8960  0032D8  3022               	rrcf	i2___flmul@bexp,w,c
  8961  0032DA                     L14:
  8962  0032DA  6E26               	movwf	i2___flmul@prod+3,c
  8963  0032DC                     i2l4399:
  8964  0032DC  501C               	movf	i2___flmul@sign,w,c
  8965  0032DE  1226               	iorwf	i2___flmul@prod+3,f,c
  8966  0032E0  0060  F08C  F010   	movff	i2___flmul@prod,?i2___flmul
  8967  0032E6  0060  F090  F011   	movff	i2___flmul@prod+1,?i2___flmul+1
  8968  0032EC  0060  F094  F012   	movff	i2___flmul@prod+2,?i2___flmul+2
  8969  0032F2  0060  F098  F013   	movff	i2___flmul@prod+3,?i2___flmul+3
  8970  0032F8  0012               	return		;funcret
  8971  0032FA                     __end_ofi2___flmul:
  8972                           	opt callstack 0
  8973                           
  8974 ;; *************** function ___xxtofl *****************
  8975 ;; Defined at:
  8976 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  sign            1    wreg     unsigned char 
  8979 ;;  val             4    1[COMRAM] long 
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;  sign            1    9[COMRAM] unsigned char 
  8982 ;;  arg             4   11[COMRAM] unsigned long 
  8983 ;;  exp             1   10[COMRAM] unsigned char 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  4    1[COMRAM] unsigned char 
  8986 ;; Registers used:
  8987 ;;		wreg, status,2, status,0
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8994 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8995 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8996 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8997 ;;Total ram usage:       14 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_adc_isr
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           	psect	text41
  9007  003E84                     __ptext41:
  9008                           	opt callstack 0
  9009  003E84                     ___xxtofl:
  9010                           	opt callstack 20
  9011                           
  9012                           ;incstack = 0
  9013                           ;___xxtofl@sign stored from wreg
  9014  003E84  6E0A               	movwf	___xxtofl@sign,c
  9015  003E86  500A               	movf	___xxtofl@sign,w,c
  9016  003E88  A4D8               	btfss	status,2,c
  9017  003E8A  AE05               	btfss	___xxtofl@val+3,7,c
  9018  003E8C  D022               	goto	i2l1075
  9019  003E8E  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
  9020  003E94  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
  9021  003E9A  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
  9022  003EA0  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
  9023  003EA6  1E06               	comf	??___xxtofl,f,c
  9024  003EA8  1E07               	comf	??___xxtofl+1,f,c
  9025  003EAA  1E08               	comf	??___xxtofl+2,f,c
  9026  003EAC  1E09               	comf	??___xxtofl+3,f,c
  9027  003EAE  2A06               	incf	??___xxtofl,f,c
  9028  003EB0  0E00               	movlw	0
  9029  003EB2  2207               	addwfc	??___xxtofl+1,f,c
  9030  003EB4  2208               	addwfc	??___xxtofl+2,f,c
  9031  003EB6  2209               	addwfc	??___xxtofl+3,f,c
  9032  003EB8  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
  9033  003EBE  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
  9034  003EC4  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
  9035  003ECA  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
  9036  003ED0  D00C               	goto	i2l4235
  9037  003ED2                     i2l1075:
  9038  003ED2  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
  9039  003ED8  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
  9040  003EDE  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
  9041  003EE4  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
  9042  003EEA                     i2l4235:
  9043  003EEA  5002               	movf	___xxtofl@val,w,c
  9044  003EEC  1003               	iorwf	___xxtofl@val+1,w,c
  9045  003EEE  1004               	iorwf	___xxtofl@val+2,w,c
  9046  003EF0  1005               	iorwf	___xxtofl@val+3,w,c
  9047  003EF2  A4D8               	btfss	status,2,c
  9048  003EF4  D009               	goto	i2l4241
  9049  003EF6  0E00               	movlw	0
  9050  003EF8  6E02               	movwf	?___xxtofl,c
  9051  003EFA  0E00               	movlw	0
  9052  003EFC  6E03               	movwf	?___xxtofl+1,c
  9053  003EFE  0E00               	movlw	0
  9054  003F00  6E04               	movwf	?___xxtofl+2,c
  9055  003F02  0E00               	movlw	0
  9056  003F04  6E05               	movwf	?___xxtofl+3,c
  9057  003F06  0012               	return	
  9058  003F08                     i2l4241:
  9059  003F08  0E96               	movlw	150
  9060  003F0A  6E0B               	movwf	___xxtofl@exp,c
  9061  003F0C  D006               	goto	i2l4245
  9062  003F0E                     i2l4243:
  9063  003F0E  2A0B               	incf	___xxtofl@exp,f,c
  9064  003F10  90D8               	bcf	status,0,c
  9065  003F12  320F               	rrcf	___xxtofl@arg+3,f,c
  9066  003F14  320E               	rrcf	___xxtofl@arg+2,f,c
  9067  003F16  320D               	rrcf	___xxtofl@arg+1,f,c
  9068  003F18  320C               	rrcf	___xxtofl@arg,f,c
  9069  003F1A                     i2l4245:
  9070  003F1A  0E00               	movlw	0
  9071  003F1C  140C               	andwf	___xxtofl@arg,w,c
  9072  003F1E  6E06               	movwf	??___xxtofl& (0+255),c
  9073  003F20  0E00               	movlw	0
  9074  003F22  140D               	andwf	___xxtofl@arg+1,w,c
  9075  003F24  6E07               	movwf	(??___xxtofl+1)& (0+255),c
  9076  003F26  0E00               	movlw	0
  9077  003F28  140E               	andwf	___xxtofl@arg+2,w,c
  9078  003F2A  6E08               	movwf	(??___xxtofl+2)& (0+255),c
  9079  003F2C  0EFE               	movlw	254
  9080  003F2E  140F               	andwf	___xxtofl@arg+3,w,c
  9081  003F30  6E09               	movwf	(??___xxtofl+3)& (0+255),c
  9082  003F32  5006               	movf	??___xxtofl,w,c
  9083  003F34  1007               	iorwf	??___xxtofl+1,w,c
  9084  003F36  1008               	iorwf	??___xxtofl+2,w,c
  9085  003F38  1009               	iorwf	??___xxtofl+3,w,c
  9086  003F3A  B4D8               	btfsc	status,2,c
  9087  003F3C  D00D               	goto	i2l1082
  9088  003F3E  D7E7               	goto	i2l4243
  9089  003F40                     i2l4247:
  9090  003F40  2A0B               	incf	___xxtofl@exp,f,c
  9091  003F42  0E01               	movlw	1
  9092  003F44  260C               	addwf	___xxtofl@arg,f,c
  9093  003F46  0E00               	movlw	0
  9094  003F48  220D               	addwfc	___xxtofl@arg+1,f,c
  9095  003F4A  220E               	addwfc	___xxtofl@arg+2,f,c
  9096  003F4C  220F               	addwfc	___xxtofl@arg+3,f,c
  9097  003F4E  90D8               	bcf	status,0,c
  9098  003F50  320F               	rrcf	___xxtofl@arg+3,f,c
  9099  003F52  320E               	rrcf	___xxtofl@arg+2,f,c
  9100  003F54  320D               	rrcf	___xxtofl@arg+1,f,c
  9101  003F56  320C               	rrcf	___xxtofl@arg,f,c
  9102  003F58                     i2l1082:
  9103  003F58  0E00               	movlw	0
  9104  003F5A  140C               	andwf	___xxtofl@arg,w,c
  9105  003F5C  6E06               	movwf	??___xxtofl& (0+255),c
  9106  003F5E  0E00               	movlw	0
  9107  003F60  140D               	andwf	___xxtofl@arg+1,w,c
  9108  003F62  6E07               	movwf	(??___xxtofl+1)& (0+255),c
  9109  003F64  0E00               	movlw	0
  9110  003F66  140E               	andwf	___xxtofl@arg+2,w,c
  9111  003F68  6E08               	movwf	(??___xxtofl+2)& (0+255),c
  9112  003F6A  0EFF               	movlw	255
  9113  003F6C  140F               	andwf	___xxtofl@arg+3,w,c
  9114  003F6E  6E09               	movwf	(??___xxtofl+3)& (0+255),c
  9115  003F70  5006               	movf	??___xxtofl,w,c
  9116  003F72  1007               	iorwf	??___xxtofl+1,w,c
  9117  003F74  1008               	iorwf	??___xxtofl+2,w,c
  9118  003F76  1009               	iorwf	??___xxtofl+3,w,c
  9119  003F78  B4D8               	btfsc	status,2,c
  9120  003F7A  D007               	goto	i2l4255
  9121  003F7C  D7E1               	goto	i2l4247
  9122  003F7E                     i2l4253:
  9123  003F7E  060B               	decf	___xxtofl@exp,f,c
  9124  003F80  90D8               	bcf	status,0,c
  9125  003F82  360C               	rlcf	___xxtofl@arg,f,c
  9126  003F84  360D               	rlcf	___xxtofl@arg+1,f,c
  9127  003F86  360E               	rlcf	___xxtofl@arg+2,f,c
  9128  003F88  360F               	rlcf	___xxtofl@arg+3,f,c
  9129  003F8A                     i2l4255:
  9130  003F8A  BE0E               	btfsc	___xxtofl@arg+2,7,c
  9131  003F8C  D003               	goto	i2u522_40
  9132  003F8E  0E02               	movlw	2
  9133  003F90  600B               	cpfslt	___xxtofl@exp,c
  9134  003F92  D7F5               	goto	i2l4253
  9135  003F94                     i2u522_40:
  9136  003F94  A00B               	btfss	___xxtofl@exp,0,c
  9137  003F96  9E0E               	bcf	___xxtofl@arg+2,7,c
  9138  003F98  90D8               	bcf	status,0,c
  9139  003F9A  320B               	rrcf	___xxtofl@exp,f,c
  9140  003F9C  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
  9141  003FA2  6A07               	clrf	(??___xxtofl+1)& (0+255),c
  9142  003FA4  6A08               	clrf	(??___xxtofl+2)& (0+255),c
  9143  003FA6  6A09               	clrf	(??___xxtofl+3)& (0+255),c
  9144  003FA8  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
  9145  003FAE  6A08               	clrf	??___xxtofl+2,c
  9146  003FB0  6A07               	clrf	??___xxtofl+1,c
  9147  003FB2  6A06               	clrf	??___xxtofl,c
  9148  003FB4  5006               	movf	??___xxtofl,w,c
  9149  003FB6  120C               	iorwf	___xxtofl@arg,f,c
  9150  003FB8  5007               	movf	??___xxtofl+1,w,c
  9151  003FBA  120D               	iorwf	___xxtofl@arg+1,f,c
  9152  003FBC  5008               	movf	??___xxtofl+2,w,c
  9153  003FBE  120E               	iorwf	___xxtofl@arg+2,f,c
  9154  003FC0  5009               	movf	??___xxtofl+3,w,c
  9155  003FC2  120F               	iorwf	___xxtofl@arg+3,f,c
  9156  003FC4  500A               	movf	___xxtofl@sign,w,c
  9157  003FC6  A4D8               	btfss	status,2,c
  9158  003FC8  AE05               	btfss	___xxtofl@val+3,7,c
  9159  003FCA  D001               	goto	i2l4271
  9160  003FCC  8E0F               	bsf	___xxtofl@arg+3,7,c
  9161  003FCE                     i2l4271:
  9162  003FCE  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
  9163  003FD4  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
  9164  003FDA  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
  9165  003FE0  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
  9166  003FE6  0012               	return		;funcret
  9167  003FE8                     __end_of___xxtofl:
  9168                           	opt callstack 0
  9169                           
  9170 ;; *************** function _default_isr *****************
  9171 ;; Defined at:
  9172 ;;		line 77 in file "main.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;		None
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;		None
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  1    wreg      void 
  9179 ;; Registers used:
  9180 ;;		None
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9190 ;;Total ram usage:        0 bytes
  9191 ;; Hardware stack levels used:    1
  9192 ;; This function calls:
  9193 ;;		Nothing
  9194 ;; This function is called by:
  9195 ;;		Interrupt level 2
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text42
  9200  004DF8                     __ptext42:
  9201                           	opt callstack 0
  9202  004DF8                     _default_isr:
  9203                           	opt callstack 21
  9204                           
  9205                           ;incstack = 0
  9206  004DF8  0011               	retfie		f
  9207  004DFA                     __end_of_default_isr:
  9208                           	opt callstack 0
  9209                           
  9210                           ;
  9211                           ; Interrupt Vector Table @ 0x8
  9212                           ;
  9213                           
  9214                           	psect	ivt0x8
  9215  000008                     __pivt0x8:
  9216                           	opt callstack 0
  9217  000008                     ivt0x8_base:
  9218                           	opt callstack 0
  9219                           
  9220                           ; Vector 0 : SWINT
  9221  000008  137E               	dw	_default_isr shr (0+2)
  9222                           
  9223                           ; Vector 1 : HLVD
  9224  00000A  137E               	dw	_default_isr shr (0+2)
  9225                           
  9226                           ; Vector 2 : OSF
  9227  00000C  137E               	dw	_default_isr shr (0+2)
  9228                           
  9229                           ; Vector 3 : CSW
  9230  00000E  137E               	dw	_default_isr shr (0+2)
  9231                           
  9232                           ; Vector 4 : NVM
  9233  000010  137E               	dw	_default_isr shr (0+2)
  9234                           
  9235                           ; Vector 5 : SCAN
  9236  000012  137E               	dw	_default_isr shr (0+2)
  9237                           
  9238                           ; Vector 6 : CRC
  9239  000014  137E               	dw	_default_isr shr (0+2)
  9240                           
  9241                           ; Vector 7 : IOC
  9242  000016  137E               	dw	_default_isr shr (0+2)
  9243                           
  9244                           ; Vector 8 : INT0
  9245  000018  137E               	dw	_default_isr shr (0+2)
  9246                           
  9247                           ; Vector 9 : ZCD
  9248  00001A  137E               	dw	_default_isr shr (0+2)
  9249                           
  9250                           ; Vector 10 : AD
  9251  00001C  121D               	dw	_adc_isr shr (0+2)
  9252                           
  9253                           ; Vector 11 : ADT
  9254  00001E  137E               	dw	_default_isr shr (0+2)
  9255                           
  9256                           ; Vector 12 : CMP1
  9257  000020  137E               	dw	_default_isr shr (0+2)
  9258                           
  9259                           ; Vector 13 : SMT1
  9260  000022  137E               	dw	_default_isr shr (0+2)
  9261                           
  9262                           ; Vector 14 : SMT1PRA
  9263  000024  137E               	dw	_default_isr shr (0+2)
  9264                           
  9265                           ; Vector 15 : SMT1PRW
  9266  000026  137E               	dw	_default_isr shr (0+2)
  9267                           
  9268                           ; Vector 16 : DMA1SCNT
  9269  000028  137E               	dw	_default_isr shr (0+2)
  9270                           
  9271                           ; Vector 17 : DMA1DCNT
  9272  00002A  137E               	dw	_default_isr shr (0+2)
  9273                           
  9274                           ; Vector 18 : DMA1OR
  9275  00002C  137E               	dw	_default_isr shr (0+2)
  9276                           
  9277                           ; Vector 19 : DMA1A
  9278  00002E  137E               	dw	_default_isr shr (0+2)
  9279                           
  9280                           ; Vector 20 : SPI1RX
  9281  000030  137E               	dw	_default_isr shr (0+2)
  9282                           
  9283                           ; Vector 21 : SPI1TX
  9284  000032  137E               	dw	_default_isr shr (0+2)
  9285                           
  9286                           ; Vector 22 : SPI1
  9287  000034  137E               	dw	_default_isr shr (0+2)
  9288                           
  9289                           ; Vector 23 : I2C1RX
  9290  000036  137E               	dw	_default_isr shr (0+2)
  9291                           
  9292                           ; Vector 24 : I2C1TX
  9293  000038  137E               	dw	_default_isr shr (0+2)
  9294                           
  9295                           ; Vector 25 : I2C1
  9296  00003A  137E               	dw	_default_isr shr (0+2)
  9297                           
  9298                           ; Vector 26 : I2C1E
  9299  00003C  137E               	dw	_default_isr shr (0+2)
  9300                           
  9301                           ; Vector 27 : U1RX
  9302  00003E  1371               	dw	_uart1_rx_isr shr (0+2)
  9303                           
  9304                           ; Vector 28 : U1TX
  9305  000040  137A               	dw	_uart1_tx_isr shr (0+2)
  9306                           
  9307                           ; Vector 29 : U1E
  9308  000042  137E               	dw	_default_isr shr (0+2)
  9309                           
  9310                           ; Vector 30 : U1
  9311  000044  137E               	dw	_default_isr shr (0+2)
  9312                           
  9313                           ; Vector 31 : TMR0
  9314  000046  1342               	dw	_timer0_isr shr (0+2)
  9315                           
  9316                           ; Vector 32 : TMR1
  9317  000048  137E               	dw	_default_isr shr (0+2)
  9318                           
  9319                           ; Vector 33 : TMR1G
  9320  00004A  137E               	dw	_default_isr shr (0+2)
  9321                           
  9322                           ; Vector 34 : TMR2
  9323  00004C  137E               	dw	_default_isr shr (0+2)
  9324                           
  9325                           ; Vector 35 : CCP1
  9326  00004E  137E               	dw	_default_isr shr (0+2)
  9327                           
  9328                           ; Vector 36 : Undefined
  9329  000050  002B               	dw	ivt0x8_undefint shr (0+2)
  9330                           
  9331                           ; Vector 37 : NCO1
  9332  000052  137E               	dw	_default_isr shr (0+2)
  9333                           
  9334                           ; Vector 38 : CWG1
  9335  000054  137E               	dw	_default_isr shr (0+2)
  9336                           
  9337                           ; Vector 39 : CLC1
  9338  000056  137E               	dw	_default_isr shr (0+2)
  9339                           
  9340                           ; Vector 40 : INT1
  9341  000058  137E               	dw	_default_isr shr (0+2)
  9342                           
  9343                           ; Vector 41 : CMP2
  9344  00005A  137E               	dw	_default_isr shr (0+2)
  9345                           
  9346                           ; Vector 42 : DMA2SCNT
  9347  00005C  137E               	dw	_default_isr shr (0+2)
  9348                           
  9349                           ; Vector 43 : DMA2DCNT
  9350  00005E  137E               	dw	_default_isr shr (0+2)
  9351                           
  9352                           ; Vector 44 : DMA2OR
  9353  000060  137E               	dw	_default_isr shr (0+2)
  9354                           
  9355                           ; Vector 45 : DMA2A
  9356  000062  137E               	dw	_default_isr shr (0+2)
  9357                           
  9358                           ; Vector 46 : I2C2RX
  9359  000064  137E               	dw	_default_isr shr (0+2)
  9360                           
  9361                           ; Vector 47 : I2C2TX
  9362  000066  137E               	dw	_default_isr shr (0+2)
  9363                           
  9364                           ; Vector 48 : I2C2
  9365  000068  137E               	dw	_default_isr shr (0+2)
  9366                           
  9367                           ; Vector 49 : I2C2E
  9368  00006A  137E               	dw	_default_isr shr (0+2)
  9369                           
  9370                           ; Vector 50 : U2RX
  9371  00006C  137E               	dw	_default_isr shr (0+2)
  9372                           
  9373                           ; Vector 51 : U2TX
  9374  00006E  137E               	dw	_default_isr shr (0+2)
  9375                           
  9376                           ; Vector 52 : U2E
  9377  000070  137E               	dw	_default_isr shr (0+2)
  9378                           
  9379                           ; Vector 53 : U2
  9380  000072  137E               	dw	_default_isr shr (0+2)
  9381                           
  9382                           ; Vector 54 : TMR3
  9383  000074  137E               	dw	_default_isr shr (0+2)
  9384                           
  9385                           ; Vector 55 : TMR3G
  9386  000076  137E               	dw	_default_isr shr (0+2)
  9387                           
  9388                           ; Vector 56 : TMR4
  9389  000078  137E               	dw	_default_isr shr (0+2)
  9390                           
  9391                           ; Vector 57 : CCP2
  9392  00007A  137E               	dw	_default_isr shr (0+2)
  9393                           
  9394                           ; Vector 58 : Undefined
  9395  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
  9396                           
  9397                           ; Vector 59 : CWG2
  9398  00007E  137E               	dw	_default_isr shr (0+2)
  9399                           
  9400                           ; Vector 60 : CLC2
  9401  000080  137E               	dw	_default_isr shr (0+2)
  9402                           
  9403                           ; Vector 61 : INT2
  9404  000082  137E               	dw	_default_isr shr (0+2)
  9405                           
  9406                           ; Vector 62 : Undefined
  9407  000084  002B               	dw	ivt0x8_undefint shr (0+2)
  9408                           
  9409                           ; Vector 63 : Undefined
  9410  000086  002B               	dw	ivt0x8_undefint shr (0+2)
  9411                           
  9412                           ; Vector 64 : Undefined
  9413  000088  002B               	dw	ivt0x8_undefint shr (0+2)
  9414                           
  9415                           ; Vector 65 : Undefined
  9416  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
  9417                           
  9418                           ; Vector 66 : Undefined
  9419  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
  9420                           
  9421                           ; Vector 67 : Undefined
  9422  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
  9423                           
  9424                           ; Vector 68 : Undefined
  9425  000090  002B               	dw	ivt0x8_undefint shr (0+2)
  9426                           
  9427                           ; Vector 69 : Undefined
  9428  000092  002B               	dw	ivt0x8_undefint shr (0+2)
  9429                           
  9430                           ; Vector 70 : TMR5
  9431  000094  137E               	dw	_default_isr shr (0+2)
  9432                           
  9433                           ; Vector 71 : TMR5G
  9434  000096  137E               	dw	_default_isr shr (0+2)
  9435                           
  9436                           ; Vector 72 : TMR6
  9437  000098  137E               	dw	_default_isr shr (0+2)
  9438                           
  9439                           ; Vector 73 : CCP3
  9440  00009A  137E               	dw	_default_isr shr (0+2)
  9441                           
  9442                           ; Vector 74 : CWG3
  9443  00009C  137E               	dw	_default_isr shr (0+2)
  9444                           
  9445                           ; Vector 75 : CLC3
  9446  00009E  137E               	dw	_default_isr shr (0+2)
  9447                           
  9448                           ; Vector 76 : Undefined
  9449  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
  9450                           
  9451                           ; Vector 77 : Undefined
  9452  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
  9453                           
  9454                           ; Vector 78 : Undefined
  9455  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
  9456                           
  9457                           ; Vector 79 : Undefined
  9458  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
  9459                           
  9460                           ; Vector 80 : CCP4
  9461  0000A8  137E               	dw	_default_isr shr (0+2)
  9462                           
  9463                           ; Vector 81 : CLC4
  9464  0000AA  137E               	dw	_default_isr shr (0+2)
  9465  0000AC                     ivt0x8_undefint:
  9466                           	opt callstack 0
  9467  0000AC  00FF               	reset	
  9468                           
  9469                           	psect	param0
  9470  0000                     tosu	equ	0x3FFF
  9471                           tosh	equ	0x3FFE
  9472                           tosl	equ	0x3FFD
  9473                           stkptr	equ	0x3FFC
  9474                           pclatu	equ	0x3FFB
  9475                           pclath	equ	0x3FFA
  9476                           pcl	equ	0x3FF9
  9477                           tblptru	equ	0x3FF8
  9478                           tblptrh	equ	0x3FF7
  9479                           tblptrl	equ	0x3FF6
  9480                           tablat	equ	0x3FF5
  9481                           prodh	equ	0x3FF4
  9482                           prodl	equ	0x3FF3
  9483                           indf0	equ	0x3FEF
  9484                           postinc0	equ	0x3FEE
  9485                           postdec0	equ	0x3FED
  9486                           preinc0	equ	0x3FEC
  9487                           plusw0	equ	0x3FEB
  9488                           fsr0h	equ	0x3FEA
  9489                           fsr0l	equ	0x3FE9
  9490                           wreg	equ	0x3FE8
  9491                           indf1	equ	0x3FE7
  9492                           postinc1	equ	0x3FE6
  9493                           postdec1	equ	0x3FE5
  9494                           preinc1	equ	0x3FE4
  9495                           plusw1	equ	0x3FE3
  9496                           fsr1h	equ	0x3FE2
  9497                           fsr1l	equ	0x3FE1
  9498                           bsr	equ	0x3FE0
  9499                           indf2	equ	0x3FDF
  9500                           postinc2	equ	0x3FDE
  9501                           postdec2	equ	0x3FDD
  9502                           preinc2	equ	0x3FDC
  9503                           plusw2	equ	0x3FDB
  9504                           fsr2h	equ	0x3FDA
  9505                           fsr2l	equ	0x3FD9
  9506                           status	equ	0x3FD8


Data Sizes:
    Strings     54
    Constant    0
    Data        0
    BSS         167
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      67
    BANK0           160    160     160
    BANK1           256      3     147
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1536_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memset@st	PTR unsigned char  size(2) Largest target is 32
		 -> tx_buffer(BANK1[32]), 

    USART1_SendString@str	PTR unsigned char  size(2) Largest target is 32
		 -> STR_2(CODE[24]), tx_buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer0_isr in COMRAM

    _timer0_isr->_ADC_Start

Critical Paths under _uart1_tx_isr in COMRAM

    None.

Critical Paths under _uart1_rx_isr in COMRAM

    None.

Critical Paths under _adc_isr in COMRAM

    _adc_isr->i2___flmul
    i2___flmul->___xxtofl

Critical Paths under _default_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_USART_handler
    _USART_handler->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _USART1_SendString->_GetStringSize

Critical Paths under _timer0_isr in BANK0

    None.

Critical Paths under _uart1_tx_isr in BANK0

    None.

Critical Paths under _uart1_rx_isr in BANK0

    None.

Critical Paths under _adc_isr in BANK0

    None.

Critical Paths under _default_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_USART_handler

Critical Paths under _timer0_isr in BANK1

    None.

Critical Paths under _uart1_tx_isr in BANK1

    None.

Critical Paths under _uart1_rx_isr in BANK1

    None.

Critical Paths under _adc_isr in BANK1

    None.

Critical Paths under _default_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer0_isr in BANK2

    None.

Critical Paths under _uart1_tx_isr in BANK2

    None.

Critical Paths under _uart1_rx_isr in BANK2

    None.

Critical Paths under _adc_isr in BANK2

    None.

Critical Paths under _default_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer0_isr in BANK3

    None.

Critical Paths under _uart1_tx_isr in BANK3

    None.

Critical Paths under _uart1_rx_isr in BANK3

    None.

Critical Paths under _adc_isr in BANK3

    None.

Critical Paths under _default_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer0_isr in BANK4

    None.

Critical Paths under _uart1_tx_isr in BANK4

    None.

Critical Paths under _uart1_rx_isr in BANK4

    None.

Critical Paths under _adc_isr in BANK4

    None.

Critical Paths under _default_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer0_isr in BANK5

    None.

Critical Paths under _uart1_tx_isr in BANK5

    None.

Critical Paths under _uart1_rx_isr in BANK5

    None.

Critical Paths under _adc_isr in BANK5

    None.

Critical Paths under _default_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer0_isr in BANK6

    None.

Critical Paths under _uart1_tx_isr in BANK6

    None.

Critical Paths under _uart1_rx_isr in BANK6

    None.

Critical Paths under _adc_isr in BANK6

    None.

Critical Paths under _default_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer0_isr in BANK7

    None.

Critical Paths under _uart1_tx_isr in BANK7

    None.

Critical Paths under _uart1_rx_isr in BANK7

    None.

Critical Paths under _adc_isr in BANK7

    None.

Critical Paths under _default_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer0_isr in BANK8

    None.

Critical Paths under _uart1_tx_isr in BANK8

    None.

Critical Paths under _uart1_rx_isr in BANK8

    None.

Critical Paths under _adc_isr in BANK8

    None.

Critical Paths under _default_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer0_isr in BANK9

    None.

Critical Paths under _uart1_tx_isr in BANK9

    None.

Critical Paths under _uart1_rx_isr in BANK9

    None.

Critical Paths under _adc_isr in BANK9

    None.

Critical Paths under _default_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer0_isr in BANK10

    None.

Critical Paths under _uart1_tx_isr in BANK10

    None.

Critical Paths under _uart1_rx_isr in BANK10

    None.

Critical Paths under _adc_isr in BANK10

    None.

Critical Paths under _default_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer0_isr in BANK11

    None.

Critical Paths under _uart1_tx_isr in BANK11

    None.

Critical Paths under _uart1_rx_isr in BANK11

    None.

Critical Paths under _adc_isr in BANK11

    None.

Critical Paths under _default_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer0_isr in BANK12

    None.

Critical Paths under _uart1_tx_isr in BANK12

    None.

Critical Paths under _uart1_rx_isr in BANK12

    None.

Critical Paths under _adc_isr in BANK12

    None.

Critical Paths under _default_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _timer0_isr in BANK13

    None.

Critical Paths under _uart1_tx_isr in BANK13

    None.

Critical Paths under _uart1_rx_isr in BANK13

    None.

Critical Paths under _adc_isr in BANK13

    None.

Critical Paths under _default_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _timer0_isr in BANK14

    None.

Critical Paths under _uart1_tx_isr in BANK14

    None.

Critical Paths under _uart1_rx_isr in BANK14

    None.

Critical Paths under _adc_isr in BANK14

    None.

Critical Paths under _default_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _timer0_isr in BANK15

    None.

Critical Paths under _uart1_tx_isr in BANK15

    None.

Critical Paths under _uart1_rx_isr in BANK15

    None.

Critical Paths under _adc_isr in BANK15

    None.

Critical Paths under _default_isr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _timer0_isr in BANK16

    None.

Critical Paths under _uart1_tx_isr in BANK16

    None.

Critical Paths under _uart1_rx_isr in BANK16

    None.

Critical Paths under _adc_isr in BANK16

    None.

Critical Paths under _default_isr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _timer0_isr in BANK17

    None.

Critical Paths under _uart1_tx_isr in BANK17

    None.

Critical Paths under _uart1_rx_isr in BANK17

    None.

Critical Paths under _adc_isr in BANK17

    None.

Critical Paths under _default_isr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _timer0_isr in BANK18

    None.

Critical Paths under _uart1_tx_isr in BANK18

    None.

Critical Paths under _uart1_rx_isr in BANK18

    None.

Critical Paths under _adc_isr in BANK18

    None.

Critical Paths under _default_isr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _timer0_isr in BANK19

    None.

Critical Paths under _uart1_tx_isr in BANK19

    None.

Critical Paths under _uart1_rx_isr in BANK19

    None.

Critical Paths under _adc_isr in BANK19

    None.

Critical Paths under _default_isr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _timer0_isr in BANK20

    None.

Critical Paths under _uart1_tx_isr in BANK20

    None.

Critical Paths under _uart1_rx_isr in BANK20

    None.

Critical Paths under _adc_isr in BANK20

    None.

Critical Paths under _default_isr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _timer0_isr in BANK21

    None.

Critical Paths under _uart1_tx_isr in BANK21

    None.

Critical Paths under _uart1_rx_isr in BANK21

    None.

Critical Paths under _adc_isr in BANK21

    None.

Critical Paths under _default_isr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _timer0_isr in BANK22

    None.

Critical Paths under _uart1_tx_isr in BANK22

    None.

Critical Paths under _uart1_rx_isr in BANK22

    None.

Critical Paths under _adc_isr in BANK22

    None.

Critical Paths under _default_isr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _timer0_isr in BANK23

    None.

Critical Paths under _uart1_tx_isr in BANK23

    None.

Critical Paths under _uart1_rx_isr in BANK23

    None.

Critical Paths under _adc_isr in BANK23

    None.

Critical Paths under _default_isr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _timer0_isr in BANK24

    None.

Critical Paths under _uart1_tx_isr in BANK24

    None.

Critical Paths under _uart1_rx_isr in BANK24

    None.

Critical Paths under _adc_isr in BANK24

    None.

Critical Paths under _default_isr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _timer0_isr in BANK25

    None.

Critical Paths under _uart1_tx_isr in BANK25

    None.

Critical Paths under _uart1_rx_isr in BANK25

    None.

Critical Paths under _adc_isr in BANK25

    None.

Critical Paths under _default_isr in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _timer0_isr in BANK26

    None.

Critical Paths under _uart1_tx_isr in BANK26

    None.

Critical Paths under _uart1_rx_isr in BANK26

    None.

Critical Paths under _adc_isr in BANK26

    None.

Critical Paths under _default_isr in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _timer0_isr in BANK27

    None.

Critical Paths under _uart1_tx_isr in BANK27

    None.

Critical Paths under _uart1_rx_isr in BANK27

    None.

Critical Paths under _adc_isr in BANK27

    None.

Critical Paths under _default_isr in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _timer0_isr in BANK28

    None.

Critical Paths under _uart1_tx_isr in BANK28

    None.

Critical Paths under _uart1_rx_isr in BANK28

    None.

Critical Paths under _adc_isr in BANK28

    None.

Critical Paths under _default_isr in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _timer0_isr in BANK29

    None.

Critical Paths under _uart1_tx_isr in BANK29

    None.

Critical Paths under _uart1_rx_isr in BANK29

    None.

Critical Paths under _adc_isr in BANK29

    None.

Critical Paths under _default_isr in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _timer0_isr in BANK30

    None.

Critical Paths under _uart1_tx_isr in BANK30

    None.

Critical Paths under _uart1_rx_isr in BANK30

    None.

Critical Paths under _adc_isr in BANK30

    None.

Critical Paths under _default_isr in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _timer0_isr in BANK31

    None.

Critical Paths under _uart1_tx_isr in BANK31

    None.

Critical Paths under _uart1_rx_isr in BANK31

    None.

Critical Paths under _adc_isr in BANK31

    None.

Critical Paths under _default_isr in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   35989
                                              2 BANK1      1     1      0
                           _ADC_Init
                        _USART1_Init
              _USART1_ReceiveCommand
                      _USART_handler
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_handler                                        3     3      0   35887
                                            159 BANK0      1     1      0
                                              0 BANK1      2     2      0
                      _GetStringSize
                  _USART1_SendString
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   34666
                                            141 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   34168
                                            133 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   33674
                                            113 BANK0     20    14      6
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   28977
                                             45 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3957
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3343
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             25 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     3      5     431
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _USART1_SendString                                   10     6      4     626
                                              4 BANK0     10     6      4
                      _GetStringSize (ARG)
                    _USART1_SendByte
 ---------------------------------------------------------------------------------
 (3) _USART1_SendByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetStringSize                                        4     2      2     130
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _USART1_ReceiveCommand                                1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART1_Init                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _timer0_isr                                          0     0      0      15
                          _ADC_Start
 ---------------------------------------------------------------------------------
 (11) _ADC_Start                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _uart1_tx_isr                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _uart1_rx_isr                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _adc_isr                                             4     4      0    1962
                                             40 COMRAM     4     4      0
                           ___xxtofl
                          i2___flmul
 ---------------------------------------------------------------------------------
 (11) i2___flmul                                          25    17      8    1518
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) ___xxtofl                                           14    10      4     398
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _default_isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _USART1_Init
   _USART1_ReceiveCommand
   _USART_handler
     _GetStringSize
     _USART1_SendString
       _GetStringSize (ARG)
       _USART1_SendByte (ARG)
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isupper
           _strncmp
           _tolower
             _isupper
   _timer0_init

 _timer0_isr (ROOT)
   _ADC_Start

 _uart1_tx_isr (ROOT)

 _uart1_rx_isr (ROOT)

 _adc_isr (ROOT)
   ___xxtofl
   i2___flmul
     ___xxtofl (ARG)

 _default_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      3      93       7       57.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      43       1       70.5%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     176      58        0.0%
DATA                 0      0     176       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 29 19:39:36 2019

         USART1_SendString@size 0066                    ___fldiv@aexp 0078                    ___fldiv@bexp 0077  
                  ___fldiv@sign 0070                     __CFG_CP$OFF 000000                    ___awdiv@sign 0065  
            __size_of_ADC_Start 000E                             l300 444A                             l225 4B0C  
                           l341 2408                             l367 27BA                             l685 416C  
                           l950 37D4                             l965 38C8                             l949 37F6  
                           l974 3930                             l975 392C                             _pad 440E  
                  ___awmod@sign 0065                             wreg 003FE8                     i2___flmul@a 0014  
                   i2___flmul@b 0010                    ___flmul@aexp 006D                    ___flmul@bexp 0072  
                  ___flmul@sign 006C                    ___flmul@temp 0077                    ___flmul@prod 0073  
                 __CFG_BBEN$OFF 000000                    __CFG_LVP$OFF 000000                    __CFG_ZCD$OFF 000000  
                  ___fltol@exp1 0069                     main@command 0192                            l1004 3B60  
                          l1015 3BCE                            l1111 3DD4                            l1016 3BCA  
                          l1034 2C16                            l1051 2F0A                            l1043 2E74  
                          l1044 2E70                            l1177 4B9C                            l5111 479E  
                          l5113 47A6                            l5105 4788                            l5131 47DE  
                          l5123 47C6                            l5043 2E3A                            l5205 41A4  
                          l5037 2E1C                            l5213 4C48                            l5301 2158  
                          l5127 47D0                            l5151 4926                            l5143 490C  
                          l5063 2EC8                            l5223 4298                            l5303 2170  
                          l5153 492E                            l4513 4BD4                            l5401 24FC  
                          l5305 217A                            l5163 4950                            l5147 4918  
                          l5067 2EE6                            l5251 430E                            l5243 42FA  
                          l4621 37E6                            l4541 36BE                            l4509 4BB6  
                          l4517 4CDE                            l5333 2288                            l5309 21AE  
                          ?_pad 0070                            l5167 495E                            l5159 4946  
                          l5183 475E                            l5175 470C                            l5191 410C  
                          l5079 2F2A                            l4607 3784                            l5239 42EA  
                          l4519 4CE4                            l5511 2A62                            l5431 27B2  
                          l5423 2736                            l5343 2386                            l5319 2222  
                          l5327 223C                            l5271 209A                            l4721 39B6  
                          l4545 36C2                            l5257 432A                            l5249 4302  
                          l5521 2AC6                            l5433 27D4                            l5409 2658  
                          l5337 22D2                            l5099 4778                            l5179 4740  
                          l5195 4140                            l4715 39AC                            l4707 3986  
                          l4643 383C                            l4635 381A                            l4619 37E2  
                          l5531 2AF2                            l5355 23F0                            l5339 233A  
                          l5283 20CC                            l5291 20E4                            l4645 3840  
                          l4653 3852                            l4565 3706                            l4813 3E6A  
                          l4805 3DF6                            l4741 4454                            l5509 2A58  
                          l5445 2882                            l5373 2468                            l5365 241C  
                          l5605 348C                            l4911 3B94                            l5199 4156  
                          l4719 39B4                            l4671 38EC                            l4663 38B8  
                          l4735 442E                            l5391 24B2                            l5375 246C  
                          l5359 2416                            l5631 361E                            l4905 3B76  
                          l4833 3A0C                            l4681 3902                            l4577 372A  
                          l4569 370A                            l4761 407A                            l4809 3E3C  
                          l4745 4472                            l5457 28B2                            l5465 28D2  
                          l5473 28F6                            l5481 29C8                            l5385 248E  
                          l5625 35CE                            l5609 34C8                            l5641 3646  
                          l5731 4804                            l4931 3C22                            l4771 40CC  
                          l4499 4592                            l4739 4442                            l5547 2B54  
                          l5395 24C2                            l5635 362A                            l5733 480E  
                          l5741 4824                            l4861 3A80                            l4853 3A4C  
                          l4829 3A08                            l4765 4084                            l4749 44A6  
                          l5493 2A0A                            l5565 41DC                            l5901 4B44  
                          l5735 4818                            l5743 4846                            l5719 4BF6  
                          l5671 4358                            l4935 3C46                            l4687 390C  
                          l5567 41EA                            l5657 4DBE                            l5681 43B4  
                          l4945 3C7E                            l4849 3A48                            l4777 49F2  
                          l5665 4982                            l5675 43A6                            l4947 3C80  
                          l4939 3C70                            l4875 3AB6                            l4867 3A9E  
                          l4971 2BD6                            l4795 3D22                            l5667 49B2  
                          l5851 462E                            l5781 44FE                            l5773 44E6  
                          l5685 43D0                            l4893 3B38                            l4885 3B10  
                          l5597 340A                            l5861 46AE                            l5767 44D0  
                          l5695 4C6E                            l4967 2BC2                            l5689 43EE  
                          l4985 2C02                            l4969 2BC6                            l5857 4696  
                          l5795 4528                            l5699 4C84                            l4899 3B5E  
                          l4995 2C34                            l4987 2C06                            l5789 4516  
                          STR_1 2019                            STR_2 2001                            STR_3 2024  
                          STR_4 202C                            STR_7 2028                            STR_8 2030  
                          u6100 3CE8                            u6030 40C4                            u6110 3D08  
                          u6040 40C6                            u7000 21FC                            u6025 40A6  
                          u6105 3CDE                            u6050 4A3A                            u5500 45D2  
                          u7100 2434                            u6150 3DB4                            u6070 4B82  
                          u6135 3D3C                            u6400 3C30                            u6136 3D42  
                          u6080 4B84                            u7040 23C0                            u6137 3D50  
                          u6057 4A2C                            u6410 3C54                            u6170 3E1C  
                          u5530 4CC8                            u7210 2726                            u6155 3DAA  
                          u6500 2C22                            u5540 4CCA                            u7140 248A  
                          u6510 2DD6                            u7310 29EC                            u7070 23FE  
                          u6175 3E12                            u6360 3BC4                            u6600 2EF4  
                          u5640 37A8                            u5480 458A                            u7400 2B40  
                          u5650 37B8                            u6515 2DCC                            _PIR3 0039A3  
                          u5900 3992                            u5820 3910                            u5660 37BA  
                          u6710 4932                            u6550 2E6A                            u5840 3926  
                          u7520 356A                            u6650 47AA                            u5690 37FE  
                          u7370 2ADC                            u7530 356C                            u7460 4248  
                          u7710 44E0                            u7630 43EE                            u6590 2ED6  
                          u6830 4286                            u7390 2B3E                            u6760 475A  
                          u6840 42BE                            u6920 20BC                            u7580 438E  
                          u5980 4040                            u6845 42B4                            u6950 2130  
                          u7680 4C1C                            u6880 4314                            u6960 2132  
                          u5985 4034                            u7690 44CC                            u7587 4380  
                          u6990 21FA                            u7890 4B14                            _dbuf 0120  
                          _main 4AFE                            _prec 003D                            _nout 0039  
                          pad@i 0077                            pad@p 0074                            fsr1h 003FE2  
                          fsr2h 003FDA                            indf1 003FE7                            indf2 003FDF  
                          fsr1l 003FE1                            pad@w 0079                            fsr2l 003FD9  
              __end_of_ADC_Init 4D88                   ___fpclassifyf 3FE8                            prodh 003FF4  
                          prodl 003FF3                            start 00AE                 ___fldiv@new_exp 0071  
                ?_USART_handler 0001                    _tolower$1608 006C                    ___param_bank 000000  
                         ??_pad 0076                   ___fltol@sign1 0068                 __end_of___fladd 39DA  
                         ?_main 0001                           _ADPCH 003EF1                 __end_of___fldiv 3C88  
                         _ADREF 003EFD                 __end_of___awdiv 47EC                 __end_of___flneg 4C62  
                         STR_11 2034                           STR_13 2034                   __CFG_WDTE$OFF 000000  
               __end_of___awmod 496C                 __end_of___flmul 2F48                 __end_of___flsub 4AA4  
               __end_of___fltol 4344                 ___awdiv@divisor 0062                  __CFG_DEBUG$OFF 000000  
               __end_of_adc_isr 48F6                           _U1UIR 003DF8                           _U1RXB 003DE8  
                         _U1TXB 003DEA                           i2l198 4D26                 ___awdiv@counter 0064  
                         _OSCEN 0039DD                    vfpfcnvrt@fmt 00D3                           _TMR0H 003FB7  
                         _TMR0L 003FB6                  __CFG_FCMEN$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                           _flags 003F  
                         _fputc 4578                           _fputs 4BAA              __CFG_MCLRE$EXTMCLR 000000  
                         pad@fp 0070                           _width 003B                           _putch 4DF4  
               __end_of_isupper 4CD0                           tablat 003FF5            __size_of_default_isr 0002  
             __end_of_ADC_Start 4DE8                           status 003FD8                 __end_of_sprintf 4AFE  
                ?___fpclassifyf 0060                 __end_of_tolower 4BAA               _USART1_SendString 4344  
                 i2___flmul@grs 001D                 __end_of_strncmp 4278              USART1_SendString@i 006A  
            __size_ofi2___flmul 03B2              ?_USART1_SendString 0064                  __CFG_CSWEN$OFF 000000  
      __size_of_USART1_SendByte 001A                 __initialization 4D3C                    __end_of_main 4B54  
                __CFG_SAFEN$OFF 000000             ??_USART1_SendString 0068                          ??_main 0100  
                __CFG_PR1WAY$ON 000000                   __activetblptr 000003                  __CFG_MVECEN$ON 000000  
                        _ADCON0 003EF8                          _ADCON1 003EF9                          _ADCON2 003EFA  
                        ?_fputc 0060                          ?_fputs 0069                          _ADRESH 003EF0  
                        _ADRESL 003EEF                ___awdiv@dividend 0060                          ?_putch 0001  
                        _T0CON0 003FB8                          _T0CON1 003FB9                          _U1CON0 003DF2  
                        _U1CON1 003DF3                          _U1BRGH 003DF6                          _U1BRGL 003DF5  
                        _U2CON2 003DDC              __CFG_PWRTS$PWRT_64 000000       __end_of_USART1_SendString 440E  
                        _RC7PPS 003A17                          i2l1034 2FC8                          i2l1051 32BC  
                        i2l1043 3226                          i2l1044 3222                          i2l1082 3F58  
                        i2l1075 3ED2                  __CFG_WDTCCS$SC 000000                          i2l4241 3F08  
                        i2l4305 2FB4                          i2l4243 3F0E                          i2l4235 3EEA  
                        i2l4315 2FE6                          i2l4307 2FB8                          i2l4253 3F7E  
                        i2l4245 3F1A                          i2l4271 3FCE                          i2l4255 3F8A  
                        i2l4247 3F40                          i2l2751 4D18             USART1_SendByte@byte 0060  
                        i2l4363 31EC                          i2l4291 2F88                          i2l4357 31CE  
                        i2l4383 327A                          i2l4287 2F74                          i2l4289 2F78  
                        i2l4387 3298                          i2l4399 32DC                          _OSCFRQ 0039DF  
               ??_USART_handler 0190                __end_of___xxtofl 3FE8                  __CFG_XINST$OFF 000000  
          USART_handler@command 00FF                    vfprintf@cfmt 00EB                          ___flge 40D6  
                        ___fleq 46D6                       ??___fladd 0068                       ??___fldiv 0068  
                     ??___awdiv 0064                       ??___flneg 0064                  __CFG_STVREN$ON 000000  
                     ??___awmod 0064                       ??___flmul 0068                       ??___flsub 0081  
                     ??___fltol 0064                    ?_timer0_init 0001                          _efgtoa 2038  
                     ??_adc_isr 0029                          _floorf 3C88                          _memset 4C62  
                        clear_0 4D42                          clear_1 4D4E                ___awdiv@quotient 0066  
               ___awmod@divisor 0062                 ___awmod@counter 0064                          pad@buf 0072  
                        _strcpy 49DA                          _strlen 4CD0                          fputc@c 0060  
                        fputs@c 006D                          fputs@i 006E                          fputs@s 0069  
     USART1_ReceiveCommand@temp 0060               __end_ofi2___flmul 32FA                 ___fpclassifyf@e 0068  
                     ?_ADC_Init 0001                 ___fpclassifyf@u 006A                 ___fpclassifyf@x 0060  
                  __mediumconst 0000  __size_of_USART1_ReceiveCommand 00B2   __end_of_USART1_ReceiveCommand 4578  
                        tblptrh 003FF7                       ??_isupper 0062                          tblptrl 003FF6  
                        tblptru 003FF8                    ?_USART1_Init 0001                          putch@c 0001  
              __end_of_vfprintf 49DA                       ??_sprintf 00F5                       ??_tolower 0068  
         __end_of_GetStringSize 4C2A                  i2___flmul@aexp 0021                  i2___flmul@bexp 0022  
                     ??_strncmp 0066                  i2___flmul@sign 001C                  i2___flmul@temp 0027  
                i2___flmul@prod 0023                      ___flge@ff1 0079                      ___flge@ff2 007D  
               ??___fpclassifyf 0064                    ___xxtofl@arg 000C                    ___xxtofl@exp 000B  
                  ___xxtofl@val 0002                      ___fleq@ff1 0060                      ___fleq@ff2 0064  
                    __accesstop 0060         __end_of__initialization 4D60                      ___flneg@f1 0060  
                 ___rparam_used 000000                      ___fltol@f1 0060                  __pcstackCOMRAM 0001  
                ivt0x8_undefint 00AC                   __end_of_fputc 4628                   __end_of_fputs 4BEC  
                 __end_of_putch 4DF6               ??_USART1_SendByte 0060                      ??_ADC_Init 0060  
                       ??_fputc 0064                         ??_fputs 006D                 __CFG_IVT1WAY$ON 000000  
                       ??_putch 0060                      __pbssBANK1 0100      __size_of_USART1_SendString 00CA  
                       IVTBASEH 003FD6                         IVTBASEL 003FD5                         IVTBASEU 003FD7  
                       ?___flge 0079                         ?___fleq 0060                 __CFG_PPS1WAY$ON 000000  
                       ?_efgtoa 008D                  _counter_timer0 0041                         ?_floorf 0079  
                 ?_uart1_rx_isr 0001                   ?_uart1_tx_isr 0001                         ?_memset 0060  
                       ?_strcpy 0060                         ?_strlen 0060                         _U1ERRIE 003DFA  
                       _U1RXPPS 003AE5                       ?___xxtofl 0002                         _IVTLOCK 003FD4  
            __size_of_vfpfcnvrt 0396                         _OSCTUNE 0039DE                         _WDTCON0 00395B  
                       _WDTCON1 00395C              _ADC_VOLTAGE_RESULT 0035                  GetStringSize@i 0062  
                     _ADC_Start 4DDA                         __Hparam 0000                         __Lparam 0000  
    __CFG_RSTOSC$HFINTOSC_64MHZ 000000                 __size_of___flge 00D2                 __size_of___fleq 008C  
                       ___fladd 3690                         ___fldiv 39DA                         ___awdiv 4762  
                       ___flneg 4C2A                         ___awmod 48F6                         ___flmul 2B94  
                       ___flsub 4A44                         ___fltol 4278                  ??_uart1_rx_isr 0002  
                       _adc_isr 4874                  ??_uart1_tx_isr 0002                       ?_vfprintf 00E5  
                  __psmallconst 2000                 __size_of_efgtoa 0B5C                 __size_of_floorf 01FC  
                       __pcinit 4D3C                 __size_of_memset 0038                         __ramtop 2000  
          __size_of_timer0_init 0020                         __ptext0 4AFE                         __ptext1 4D88  
                       __ptext2 4628                         __ptext3 4AA4                         __ptext4 496C  
                       __ptext5 32FA                         __ptext6 41A8                         __ptext7 2038  
                       __ptext8 4B54                         __ptext9 4C9A                 __CFG_WRTAPP$OFF 000000  
               __size_of_strcpy 006A                 __size_of_strlen 0036                    __size_of_pad 00B8  
                    ??___xxtofl 0006                ___awmod@dividend 0060                 __CFG_WRTSAF$OFF 000000  
                       _isupper 4C9A                         efgtoa@c 0093                         efgtoa@d 00B1  
                       efgtoa@e 00C9                         efgtoa@f 008F                         efgtoa@g 00C5  
                       efgtoa@h 00BB                         efgtoa@i 00C3                         efgtoa@l 00BF  
                       efgtoa@m 00AD                         efgtoa@n 00CB                         efgtoa@p 00B5  
                       efgtoa@t 00A9                         efgtoa@u 00CD                         efgtoa@w 00B8  
                 ??_default_isr 0060                         _sprintf 4AA4                         _tolower 4B54  
                       _tx_byte 0042                         _strncmp 41A8            end_of_initialization 4D60  
          __size_of_USART1_Init 0086                         floorf@e 0087                         floorf@m 0083  
                       floorf@u 0089                         floorf@x 0079                         fputc@fp 0062  
              __CFG_BOREN$NOSLP 000000                         memset@i 0066                         memset@x 0062  
                       fputs@fp 006B                    ADC_Start@pin 0001                      ?_ADC_Start 0001  
             __end_of_vfpfcnvrt 3690                      efgtoa@mode 00BA                      efgtoa@sign 00B3  
                       postdec2 003FDD                      _timer0_isr 4D08                         postinc0 003FEE  
                       postinc1 003FE6                         postinc2 003FDE                      ??_vfprintf 00EB  
         __CFG_WDTCPS$WDTCPS_31 000000                         strcpy@d 0068                         strlen@a 0062  
                       strcpy@s 0066                         strlen@s 0060               adc_isr@adc_result 002B  
                   ___fladd@grs 006F                   ___xxtofl@sign 000A                       _TRISAbits 003FC2  
                     _TRISBbits 003FC3                       _TRISCbits 003FC4            USART1_SendString@str 0064  
                   ___fldiv@grs 0073                     ___fldiv@rem 006C                      _rx_counter 0043  
             __size_of_ADC_Init 0022                       i2___flmul 2F48                __CFG_FEXTOSC$OFF 000000  
                   ___flmul@grs 006E             __end_of_default_isr 4DFA           __end_of_USART_handler 46D6  
               _USART1_SendByte 4DA8                  __end_of___flge 41A8                  __end_of___fleq 4762  
                   vfpfcnvrt@ap 00D5                     vfpfcnvrt@ct 00E1                     vfpfcnvrt@fp 00D1  
                __end_of_efgtoa 2B94                  __end_of_floorf 3E84                      floorf@F524 002D  
                __end_of_memset 4C9A                  __end_of_strcpy 4A44                  __end_of_strlen 4D06  
           start_initialization 4D3C                     __end_of_pad 44C6                      ?i2___flmul 0010  
         _USART1_ReceiveCommand 44C6                      ivt0x8_base 0008            __end_of_uart1_rx_isr 4DDA  
          __end_of_uart1_tx_isr 4DF4           __end_of___fpclassifyf 40D6                     ??_ADC_Start 0001  
          USART1_Init@baud_rate 0062                __CFG_LPBOREN$OFF 000000                     vfprintf@fmt 00E7  
                      ??___flge 0081                        ??___fleq 0068                     ?_timer0_isr 0001  
                      ??_efgtoa 0094                        ??_floorf 007D          __size_of_GetStringSize 003E  
                      ??_memset 0065                      memset@size 0063                        ??_strcpy 0064  
                      ??_strlen 0062                       ___fladd@a 0064                       ___fladd@b 0060  
                     ___fldiv@a 0064                       ___fldiv@b 0060                       ___flmul@a 0064  
                     ___flmul@b 0060                     __pbssCOMRAM 002D                       ___flsub@a 007D  
                     ___flsub@b 0079                   __pcstackBANK0 0060                   __pcstackBANK1 0190  
             __size_of___xxtofl 0164                     _default_isr 4DF8       USART1_SendString@attempts 006C  
       __end_of_USART1_SendByte 4DC2                     _efgtoa$1030 00A1                     _efgtoa$1024 009D  
                   _efgtoa$1025 009F                     _efgtoa$1034 00A3                     _efgtoa$1035 00A5  
                   _efgtoa$1036 00A7                        ?___fladd 0060                        ?___fldiv 0060  
                      ?___awdiv 0060                        ?___flneg 0060                        ?___awmod 0060  
                      ?___flmul 0060                        ?___flsub 0079                        ?___fltol 0060  
                      ?_adc_isr 0001               __size_of_vfprintf 006E          __CFG_BBSIZE$BBSIZE_512 000000  
                   __smallconst 2000                        _ADC_Init 4D66                        ?_isupper 0060  
        ?_USART1_ReceiveCommand 0001                        ?_sprintf 00ED                        ?_tolower 0066  
                   ??i2___flmul 0018                  __size_of_fputc 00B0                  __size_of_fputs 0042  
                      ?_strncmp 0060             __size_of_timer0_isr 0034                  __size_of_putch 0002  
                 _GetStringSize 4BEC                        _LATAbits 003FBA                        _IPR1bits 003981  
                      _IPR3bits 003983                        _PIE1bits 003991                        _PIE3bits 003993  
           __CFG_BORV$VBOR_2P85 000000                        _PIR1bits 0039A1                        i2u522_40 3F94  
                      i2u533_40 2FD4                        _PIR3bits 0039A3                        i2u542_40 3288  
                      i2u534_40 3188                        i2u534_45 317E                        i2u543_40 32A6  
                      i2u538_40 321C                   ??_timer0_init 0060                       _vfpfcnvrt 32FA  
                     _rx_buffer 0100                      _ADCON0bits 003EF8                       _tx_buffer 0170  
         __size_of_uart1_rx_isr 0016           __size_of_uart1_tx_isr 000C                   ??_USART1_Init 0060  
                    vfpfcnvrt@c 00E4                      vfpfcnvrt@f 00DD                     _INTCON0bits 003FD2  
                ?_GetStringSize 0060                ?_USART1_SendByte 0001                        __Hparam0 0000  
                      __Lparam0 0000                      vfprintf@ap 00E9                      vfprintf@fp 00E5  
              __size_of___fladd 034A                __size_of___fldiv 02AE                __size_of___awdiv 008A  
              __size_of___flneg 0038                __size_of___awmod 0076                __size_of___flmul 03B4  
              __size_of___flsub 0060                __size_of___fltol 00CC                      ?_vfpfcnvrt 00D1  
              __size_of_adc_isr 0082                    _uart1_rx_isr 4DC4                    _uart1_tx_isr 4DE8  
                    _ANSELAbits 003A40                      _ANSELBbits 003A50                      _ANSELCbits 003A60  
            ___fpclassifyf@F463 0031             __end_of_timer0_init 4DA8                      sprintf@fmt 00EF  
                      ___xxtofl 3E84                      _T0CON0bits 003FB8                        __pivt0x8 0008  
                      __ptext10 49DA                        __ptext11 440E                        __ptext20 3690  
                      __ptext12 4CD0                        __ptext21 4C2A                        __ptext13 4BAA  
                      __ptext30 4DA8                        __ptext22 2B94                        __ptext14 4578  
                      __ptext31 4BEC                        __ptext23 40D6                        __ptext15 4DF4  
                      __ptext40 2F48                        __ptext32 44C6                        __ptext24 46D6  
                      __ptext16 3C88                        __ptext41 3E84                        __ptext33 47EC  
                      __ptext25 39DA                        __ptext17 3FE8                        __ptext42 4DF8  
                      __ptext34 4D66                        __ptext26 48F6                        __ptext18 4278  
                      __ptext35 4D08                        __ptext27 4762                        __ptext19 4A44  
                      __ptext36 4DDA                        __ptext28 4C62                        __ptext37 4DE8  
                      __ptext29 4344                        __ptext38 4DC4                        __ptext39 4874  
              __size_of_isupper 0036                      _U1CON1bits 003DF3                __size_of_sprintf 005A  
              __size_of_tolower 0056                      strcpy@dest 0060                __size_of_strncmp 00D0  
           __end_of_USART1_Init 4872                   __size_of_main 0056            __CFG_WDTCWS$WDTCWS_7 000000  
                      efgtoa@fp 008D                        efgtoa@ne 00AF                        efgtoa@pp 00AB  
                      efgtoa@ou 0099                    ??_timer0_isr 0002                        _vfprintf 496C  
                   _OSCSTATbits 0039DC                  _vfpfcnvrt$1053 00DB          __size_of_USART_handler 00AE  
               ??_GetStringSize 0062                        memset@st 0060                    ?_default_isr 0001  
                      intlevel2 0000              __end_of_timer0_isr 4D3C                       sprintf@ap 00F7  
             __CFG_CLKOUTEN$OFF 000000                       strcpy@src 0062                     _PPSLOCKbits 003ABF  
                      isupper@c 0060                       strncmp@_l 0060                       strncmp@_r 0062  
                   efgtoa@nmode 00B7                     _timer0_init 4D88                     ??_vfpfcnvrt 00D7  
                      sprintf@f 00F9                        tolower@c 0066                        sprintf@s 00ED  
       ??_USART1_ReceiveCommand 0060          __size_of___fpclassifyf 00EE                        strncmp@l 0067  
                      strncmp@n 0064                        strncmp@r 0069                     _USART1_Init 47EC  
                 ___fladd@signs 006C                    ___fladd@aexp 006D                    ___fladd@bexp 006E  
                 _USART_handler 4628  
