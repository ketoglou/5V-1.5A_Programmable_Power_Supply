

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 14 22:33:27 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F27K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=4,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=4,class=CODE,delta=1
    59                           	psect	text42,global,reloc=4,class=CODE,delta=1
    60                           	psect	text43,global,reloc=4,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=4,class=CODE,delta=1
    64                           	psect	text47,global,reloc=4,class=CODE,delta=1
    65                           	psect	text48,global,reloc=4,class=CODE,delta=1
    66                           	psect	text49,global,reloc=4,class=CODE,delta=1
    67                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    70  0000                     
    71                           ; Version 2.05
    72                           ; Generated 20/12/2018 GMT
    73                           ; 
    74                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F27K42 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataCOMRAM
   107  005356                     __pidataCOMRAM:
   108                           	opt callstack 0
   109                           
   110                           ;initializer for _measur_vol_or_cur
   111  005356  01                 	db	1
   112                           
   113                           	psect	idataBANK0
   114  005357                     __pidataBANK0:
   115                           	opt callstack 0
   116                           
   117                           ;initializer for _AD5272_VOLTAGE_ADDRESS
   118  005357  5E                 	db	94
   119  0000                     _PIE2bits	set	14738
   120  0000                     _PIR2bits	set	14754
   121  0000                     _IPR2bits	set	14722
   122  0000                     _PIE1bits	set	14737
   123  0000                     _IPR1bits	set	14721
   124  0000                     _WDTCON0	set	14683
   125  0000                     _WDTCON1	set	14684
   126  0000                     _OSCSTATbits	set	14812
   127  0000                     _OSCEN	set	14813
   128  0000                     _OSCTUNE	set	14814
   129  0000                     _OSCFRQ	set	14815
   130  0000                     _PIR1bits	set	14753
   131  0000                     _PIR3bits	set	14755
   132  0000                     _PIR3	set	14755
   133  0000                     _IPR3bits	set	14723
   134  0000                     _PIE3bits	set	14739
   135  0000                     _RB0PPS	set	14856
   136  0000                     _RB1PPS	set	14857
   137  0000                     _I2C1SDAPPS	set	15074
   138  0000                     _I2C1SCLPPS	set	15073
   139  0000                     _SLRCONBbits	set	14931
   140  0000                     _RB1I2C	set	14938
   141  0000                     _ODCONBbits	set	14930
   142  0000                     _ANSELBbits	set	14928
   143  0000                     _ANSELAbits	set	14912
   144  0000                     _PPSLOCKbits	set	15039
   145  0000                     _RC7PPS	set	14871
   146  0000                     _U1RXPPS	set	15077
   147  0000                     _ANSELCbits	set	14944
   148  0000                     _I2C1ADB1	set	15726
   149  0000                     _I2C1CNT	set	15724
   150  0000                     _I2C1STAT0bits	set	15735
   151  0000                     _I2C1CON0bits	set	15731
   152  0000                     _I2C1PIEbits	set	15738
   153  0000                     _I2C1ERR	set	15734
   154  0000                     _I2C1CLK	set	15739
   155  0000                     _I2C1CON2	set	15733
   156  0000                     _I2C1CON1	set	15732
   157  0000                     _I2C1CON0	set	15731
   158  0000                     _I2C1PIR	set	15737
   159  0000                     _I2C1PIRbits	set	15737
   160  0000                     _I2C1RXB	set	15722
   161  0000                     _I2C1TXB	set	15723
   162  0000                     _U1RXB	set	15848
   163  0000                     _U1TXB	set	15850
   164  0000                     _U1CON1bits	set	15859
   165  0000                     _U1UIR	set	15864
   166  0000                     _U1ERRIE	set	15866
   167  0000                     _U2CON2	set	15836
   168  0000                     _U1CON1	set	15859
   169  0000                     _U1CON0	set	15858
   170  0000                     _U1BRGL	set	15861
   171  0000                     _U1BRGH	set	15862
   172  0000                     _ADCON0bits	set	16120
   173  0000                     _ADREF	set	16125
   174  0000                     _ADCON2	set	16122
   175  0000                     _ADCON1	set	16121
   176  0000                     _ADCON0	set	16120
   177  0000                     _ADPCH	set	16113
   178  0000                     _ADRESH	set	16112
   179  0000                     _ADRESL	set	16111
   180  0000                     _T0CON1	set	16313
   181  0000                     _T0CON0	set	16312
   182  0000                     _LATBbits	set	16315
   183  0000                     _TRISBbits	set	16323
   184  0000                     _TRISAbits	set	16322
   185  0000                     _INTCON0bits	set	16338
   186  0000                     _IVTLOCK	set	16340
   187  0000                     _TMR0H	set	16311
   188  0000                     _TMR0L	set	16310
   189  0000                     _LATAbits	set	16314
   190  0000                     _T0CON0bits	set	16312
   191  0000                     _TRISCbits	set	16324
   192                           
   193                           	psect	smallconst
   194  002000                     __psmallconst:
   195                           	opt callstack 0
   196  002000  00                 	db	0
   197  002001                     STR_3:
   198  002001  56                 	db	86	;'V'
   199  002002  65                 	db	101	;'e'
   200  002003  72                 	db	114	;'r'
   201  002004  73                 	db	115	;'s'
   202  002005  69                 	db	105	;'i'
   203  002006  6F                 	db	111	;'o'
   204  002007  6E                 	db	110	;'n'
   205  002008  20                 	db	32
   206  002009  31                 	db	49	;'1'
   207  00200A  2E                 	db	46
   208  00200B  30                 	db	48	;'0'
   209  00200C  0A                 	db	10
   210  00200D  54                 	db	84	;'T'
   211  00200E  65                 	db	101	;'e'
   212  00200F  61                 	db	97	;'a'
   213  002010  6D                 	db	109	;'m'
   214  002011  20                 	db	32
   215  002012  35                 	db	53	;'5'
   216  002013  56                 	db	86	;'V'
   217  002014  0A                 	db	10
   218  002015  58                 	db	88	;'X'
   219  002016  61                 	db	97	;'a'
   220  002017  72                 	db	114	;'r'
   221  002018  69                 	db	105	;'i'
   222  002019  73                 	db	115	;'s'
   223  00201A  20                 	db	32
   224  00201B  4B                 	db	75	;'K'
   225  00201C  65                 	db	101	;'e'
   226  00201D  74                 	db	116	;'t'
   227  00201E  6F                 	db	111	;'o'
   228  00201F  67                 	db	103	;'g'
   229  002020  6C                 	db	108	;'l'
   230  002021  6F                 	db	111	;'o'
   231  002022  75                 	db	117	;'u'
   232  002023  2C                 	db	44
   233  002024  56                 	db	86	;'V'
   234  002025  6F                 	db	111	;'o'
   235  002026  75                 	db	117	;'u'
   236  002027  6C                 	db	108	;'l'
   237  002028  61                 	db	97	;'a'
   238  002029  20                 	db	32
   239  00202A  4B                 	db	75	;'K'
   240  00202B  6F                 	db	111	;'o'
   241  00202C  6E                 	db	110	;'n'
   242  00202D  74                 	db	116	;'t'
   243  00202E  6F                 	db	111	;'o'
   244  00202F  74                 	db	116	;'t'
   245  002030  6F                 	db	111	;'o'
   246  002031  6C                 	db	108	;'l'
   247  002032  69                 	db	105	;'i'
   248  002033  0A                 	db	10
   249  002034  00                 	db	0
   250  002035                     STR_4:
   251  002035  43                 	db	67	;'C'
   252  002036  6F                 	db	111	;'o'
   253  002037  6D                 	db	109	;'m'
   254  002038  6D                 	db	109	;'m'
   255  002039  61                 	db	97	;'a'
   256  00203A  6E                 	db	110	;'n'
   257  00203B  64                 	db	100	;'d'
   258  00203C  20                 	db	32
   259  00203D  6E                 	db	110	;'n'
   260  00203E  6F                 	db	111	;'o'
   261  00203F  74                 	db	116	;'t'
   262  002040  20                 	db	32
   263  002041  72                 	db	114	;'r'
   264  002042  65                 	db	101	;'e'
   265  002043  63                 	db	99	;'c'
   266  002044  6F                 	db	111	;'o'
   267  002045  67                 	db	103	;'g'
   268  002046  6E                 	db	110	;'n'
   269  002047  69                 	db	105	;'i'
   270  002048  7A                 	db	122	;'z'
   271  002049  65                 	db	101	;'e'
   272  00204A  64                 	db	100	;'d'
   273  00204B  21                 	db	33
   274  00204C  00                 	db	0
   275  00204D                     STR_6:
   276  00204D  42                 	db	66	;'B'
   277  00204E  6C                 	db	108	;'l'
   278  00204F  69                 	db	105	;'i'
   279  002050  6E                 	db	110	;'n'
   280  002051  6B                 	db	107	;'k'
   281  002052  69                 	db	105	;'i'
   282  002053  6E                 	db	110	;'n'
   283  002054  67                 	db	103	;'g'
   284  002055  20                 	db	32
   285  002056  4C                 	db	76	;'L'
   286  002057  45                 	db	69	;'E'
   287  002058  44                 	db	68	;'D'
   288  002059  20                 	db	32
   289  00205A  69                 	db	105	;'i'
   290  00205B  73                 	db	115	;'s'
   291  00205C  20                 	db	32
   292  00205D  4F                 	db	79	;'O'
   293  00205E  46                 	db	70	;'F'
   294  00205F  46                 	db	70	;'F'
   295  002060  21                 	db	33
   296  002061  00                 	db	0
   297  002062                     STR_5:
   298  002062  42                 	db	66	;'B'
   299  002063  6C                 	db	108	;'l'
   300  002064  69                 	db	105	;'i'
   301  002065  6E                 	db	110	;'n'
   302  002066  6B                 	db	107	;'k'
   303  002067  69                 	db	105	;'i'
   304  002068  6E                 	db	110	;'n'
   305  002069  67                 	db	103	;'g'
   306  00206A  20                 	db	32
   307  00206B  4C                 	db	76	;'L'
   308  00206C  45                 	db	69	;'E'
   309  00206D  44                 	db	68	;'D'
   310  00206E  20                 	db	32
   311  00206F  69                 	db	105	;'i'
   312  002070  73                 	db	115	;'s'
   313  002071  20                 	db	32
   314  002072  4F                 	db	79	;'O'
   315  002073  4E                 	db	78	;'N'
   316  002074  21                 	db	33
   317  002075  00                 	db	0
   318  002076                     STR_8:
   319  002076  43                 	db	67	;'C'
   320  002077  75                 	db	117	;'u'
   321  002078  72                 	db	114	;'r'
   322  002079  72                 	db	114	;'r'
   323  00207A  65                 	db	101	;'e'
   324  00207B  6E                 	db	110	;'n'
   325  00207C  74                 	db	116	;'t'
   326  00207D  20                 	db	32
   327  00207E  4C                 	db	76	;'L'
   328  00207F  69                 	db	105	;'i'
   329  002080  6D                 	db	109	;'m'
   330  002081  69                 	db	105	;'i'
   331  002082  74                 	db	116	;'t'
   332  002083  20                 	db	32
   333  002084  73                 	db	115	;'s'
   334  002085  65                 	db	101	;'e'
   335  002086  74                 	db	116	;'t'
   336  002087  21                 	db	33
   337  002088  00                 	db	0
   338  002089                     STR_7:
   339  002089  56                 	db	86	;'V'
   340  00208A  6F                 	db	111	;'o'
   341  00208B  6C                 	db	108	;'l'
   342  00208C  74                 	db	116	;'t'
   343  00208D  61                 	db	97	;'a'
   344  00208E  67                 	db	103	;'g'
   345  00208F  65                 	db	101	;'e'
   346  002090  20                 	db	32
   347  002091  73                 	db	115	;'s'
   348  002092  65                 	db	101	;'e'
   349  002093  74                 	db	116	;'t'
   350  002094  21                 	db	33
   351  002095  00                 	db	0
   352  002096                     STR_2:
   353  002096  25                 	db	37
   354  002097  66                 	db	102	;'f'
   355  002098  20                 	db	32
   356  002099  41                 	db	65	;'A'
   357  00209A  00                 	db	0
   358  00209B                     STR_1:
   359  00209B  25                 	db	37
   360  00209C  66                 	db	102	;'f'
   361  00209D  20                 	db	32
   362  00209E  56                 	db	86	;'V'
   363  00209F  00                 	db	0
   364  0020A0                     STR_10:
   365  0020A0  49                 	db	73	;'I'
   366  0020A1  4E                 	db	78	;'N'
   367  0020A2  46                 	db	70	;'F'
   368  0020A3  00                 	db	0
   369  0020A4                     STR_14:
   370  0020A4  4E                 	db	78	;'N'
   371  0020A5  41                 	db	65	;'A'
   372  0020A6  4E                 	db	78	;'N'
   373  0020A7  00                 	db	0
   374  0020A8                     STR_11:
   375  0020A8  69                 	db	105	;'i'
   376  0020A9  6E                 	db	110	;'n'
   377  0020AA  66                 	db	102	;'f'
   378  0020AB  00                 	db	0
   379  0020AC                     STR_15:
   380  0020AC  6E                 	db	110	;'n'
   381  0020AD  61                 	db	97	;'a'
   382  0020AE  6E                 	db	110	;'n'
   383  0020AF  00                 	db	0
   384  0020B0                     STR_18:
   385  0020B0  6C                 	db	108	;'l'
   386  0020B1  66                 	db	102	;'f'
   387  0020B2  00                 	db	0
   388  0000                     
   389                           ; #config settings
   390  0020B3  00                 	db	0	; dummy byte at the end
   391  0000                     
   392                           	psect	cinit
   393  004F56                     __pcinit:
   394                           	opt callstack 0
   395  004F56                     start_initialization:
   396                           	opt callstack 0
   397  004F56                     __initialization:
   398                           	opt callstack 0
   399                           
   400                           ; Initialize objects allocated to BANK0 (1 bytes)
   401                           ; load TBLPTR registers with __pidataBANK0
   402  004F56  0E57               	movlw	low __pidataBANK0
   403  004F58  6EF6               	movwf	tblptrl,c
   404  004F5A  0E53               	movlw	high __pidataBANK0
   405  004F5C  6EF7               	movwf	tblptrh,c
   406  004F5E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   407  004F60  6EF8               	movwf	tblptru,c
   408  004F62  0009               	tblrd		*+	;fetch initializer
   409  004F64  006F FFD4  F0FF    	movff	tablat,__pdataBANK0
   410                           
   411                           ; Initialize objects allocated to COMRAM (1 bytes)
   412                           ; load TBLPTR registers with __pidataCOMRAM
   413  004F6A  0E56               	movlw	low __pidataCOMRAM
   414  004F6C  6EF6               	movwf	tblptrl,c
   415  004F6E  0E53               	movlw	high __pidataCOMRAM
   416  004F70  6EF7               	movwf	tblptrh,c
   417  004F72  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   418  004F74  6EF8               	movwf	tblptru,c
   419  004F76  0009               	tblrd		*+	;fetch initializer
   420  004F78  006F FFD4  F040    	movff	tablat,__pdataCOMRAM
   421                           
   422                           ; Clear objects allocated to BANK1 (177 bytes)
   423  004F7E  EE00  F100         	lfsr	0,__pbssBANK1
   424  004F82  0EB1               	movlw	177
   425  004F84                     clear_0:
   426  004F84  6AEE               	clrf	postinc0,c
   427  004F86  06E8               	decf	wreg,f,c
   428  004F88  E1FD               	bnz	clear_0
   429                           
   430                           ; Clear objects allocated to BANK0 (18 bytes)
   431  004F8A  EE00  F0ED         	lfsr	0,__pbssBANK0
   432  004F8E  0E12               	movlw	18
   433  004F90                     clear_1:
   434  004F90  6AEE               	clrf	postinc0,c
   435  004F92  06E8               	decf	wreg,f,c
   436  004F94  E1FD               	bnz	clear_1
   437                           
   438                           ; Clear objects allocated to COMRAM (29 bytes)
   439  004F96  EE00  F023         	lfsr	0,__pbssCOMRAM
   440  004F9A  0E1D               	movlw	29
   441  004F9C                     clear_2:
   442  004F9C  6AEE               	clrf	postinc0,c
   443  004F9E  06E8               	decf	wreg,f,c
   444  004FA0  E1FD               	bnz	clear_2
   445                           
   446                           ;
   447                           ; Setup IVTBASE
   448                           ;
   449  004FA2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   450  004FA4  6ED5               	movwf	213,c
   451  004FA6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   452  004FA8  6ED6               	movwf	214,c
   453  004FAA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   454  004FAC  6ED7               	movwf	215,c
   455  004FAE                     end_of_initialization:
   456                           	opt callstack 0
   457  004FAE                     __end_of__initialization:
   458                           	opt callstack 0
   459  004FAE  0100               	movlb	0
   460  004FB0  EF7D  F024         	goto	_main	;jump to C main() function
   461                           
   462                           	psect	bssCOMRAM
   463  000023                     __pbssCOMRAM:
   464                           	opt callstack 0
   465  000023                     _I2C_TX_BUFFER:
   466                           	opt callstack 0
   467  000023                     	ds	10
   468  00002D                     floorf@F524:
   469                           	opt callstack 0
   470  00002D                     	ds	4
   471  000031                     ___fpclassifyf@F463:
   472                           	opt callstack 0
   473  000031                     	ds	4
   474  000035                     _ADC_CURRENT_RESULT:
   475                           	opt callstack 0
   476  000035                     	ds	4
   477  000039                     _flags:
   478                           	opt callstack 0
   479  000039                     	ds	2
   480  00003B                     _counter_timer0:
   481                           	opt callstack 0
   482  00003B                     	ds	1
   483  00003C                     _I2C_RX_COUNTER:
   484                           	opt callstack 0
   485  00003C                     	ds	1
   486  00003D                     _I2C_TX_COUNTER:
   487                           	opt callstack 0
   488  00003D                     	ds	1
   489  00003E                     _tx_byte:
   490                           	opt callstack 0
   491  00003E                     	ds	1
   492  00003F                     _rx_counter:
   493                           	opt callstack 0
   494  00003F                     	ds	1
   495                           
   496                           	psect	dataCOMRAM
   497  000040                     __pdataCOMRAM:
   498                           	opt callstack 0
   499  000040                     _measur_vol_or_cur:
   500                           	opt callstack 0
   501  000040                     	ds	1
   502                           
   503                           	psect	bssBANK0
   504  0000ED                     __pbssBANK0:
   505                           	opt callstack 0
   506  0000ED                     _ADC_VOLTAGE_RESULT:
   507                           	opt callstack 0
   508  0000ED                     	ds	4
   509  0000F1                     _nout:
   510                           	opt callstack 0
   511  0000F1                     	ds	2
   512  0000F3                     _width:
   513                           	opt callstack 0
   514  0000F3                     	ds	2
   515  0000F5                     _prec:
   516                           	opt callstack 0
   517  0000F5                     	ds	2
   518  0000F7                     _COMMAND_WRITE_NUMBER:
   519                           	opt callstack 0
   520  0000F7                     	ds	2
   521  0000F9                     _led_enable:
   522                           	opt callstack 0
   523  0000F9                     	ds	1
   524  0000FA                     _I2C_STOP_DETECTED:
   525                           	opt callstack 0
   526  0000FA                     	ds	1
   527  0000FB                     _COMMAND:
   528                           	opt callstack 0
   529  0000FB                     	ds	1
   530  0000FC                     _COMMAND_WR:
   531                           	opt callstack 0
   532  0000FC                     	ds	1
   533  0000FD                     _AD5272_COMMANDS:
   534                           	opt callstack 0
   535  0000FD                     	ds	2
   536                           
   537                           	psect	dataBANK0
   538  0000FF                     __pdataBANK0:
   539                           	opt callstack 0
   540  0000FF                     _AD5272_VOLTAGE_ADDRESS:
   541                           	opt callstack 0
   542  0000FF                     	ds	1
   543                           
   544                           	psect	bssBANK1
   545  000100                     __pbssBANK1:
   546                           	opt callstack 0
   547  000100                     _rx_buffer:
   548                           	opt callstack 0
   549  000100                     	ds	32
   550  000120                     _I2C_RX_BUFFER:
   551                           	opt callstack 0
   552  000120                     	ds	10
   553  00012A                     _dbuf:
   554                           	opt callstack 0
   555  00012A                     	ds	80
   556  00017A                     _tx_buffer:
   557                           	opt callstack 0
   558  00017A                     	ds	55
   559                           
   560                           	psect	cstackBANK1
   561  0001B1                     __pcstackBANK1:
   562                           	opt callstack 0
   563  0001B1                     ?_sprintf:
   564                           	opt callstack 0
   565  0001B1                     sprintf@s:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0x0
   569  0001B1                     	ds	2
   570  0001B3                     sprintf@fmt:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x2
   574  0001B3                     	ds	8
   575  0001BB                     sprintf@ap:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0xA
   579  0001BB                     	ds	2
   580  0001BD                     sprintf@f:
   581                           	opt callstack 0
   582                           
   583                           ; 6 bytes @ 0xC
   584  0001BD                     	ds	6
   585  0001C3                     ??_USART_handler:
   586                           
   587                           ; 1 bytes @ 0x12
   588  0001C3                     	ds	2
   589  0001C5                     ??_main:
   590                           
   591                           ; 1 bytes @ 0x14
   592  0001C5                     	ds	2
   593  0001C7                     main@receive_command:
   594                           	opt callstack 0
   595                           
   596                           ; 1 bytes @ 0x16
   597  0001C7                     	ds	1
   598                           
   599                           	psect	cstackBANK0
   600  000060                     __pcstackBANK0:
   601                           	opt callstack 0
   602  000060                     ??_USART1_Init:
   603  000060                     ?_GetStringSize:
   604                           	opt callstack 0
   605  000060                     ?_strlen:
   606                           	opt callstack 0
   607  000060                     ?___fpclassifyf:
   608                           	opt callstack 0
   609  000060                     ?_isupper:
   610                           	opt callstack 0
   611  000060                     ?_strncmp:
   612                           	opt callstack 0
   613  000060                     ?___wmul:
   614                           	opt callstack 0
   615  000060                     ?___awdiv:
   616                           	opt callstack 0
   617  000060                     ?___awmod:
   618                           	opt callstack 0
   619  000060                     ?___fladd:
   620                           	opt callstack 0
   621  000060                     ?___fldiv:
   622                           	opt callstack 0
   623  000060                     ?___flmul:
   624                           	opt callstack 0
   625  000060                     ?___flneg:
   626                           	opt callstack 0
   627  000060                     ?___fltol:
   628                           	opt callstack 0
   629  000060                     USART1_SendByte@byte:
   630                           	opt callstack 0
   631  000060                     memset@st:
   632                           	opt callstack 0
   633  000060                     I2C_Transmit@buffer:
   634                           	opt callstack 0
   635  000060                     ___wmul@multiplier:
   636                           	opt callstack 0
   637  000060                     ___awdiv@dividend:
   638                           	opt callstack 0
   639  000060                     ___awmod@dividend:
   640                           	opt callstack 0
   641  000060                     isupper@c:
   642                           	opt callstack 0
   643  000060                     fputc@c:
   644                           	opt callstack 0
   645  000060                     strcpy@dest:
   646                           	opt callstack 0
   647  000060                     strlen@s:
   648                           	opt callstack 0
   649  000060                     strncmp@_l:
   650                           	opt callstack 0
   651  000060                     ___fleq@ff1:
   652                           	opt callstack 0
   653  000060                     ___flneg@f1:
   654                           	opt callstack 0
   655  000060                     ___fltol@f1:
   656                           	opt callstack 0
   657  000060                     ___fladd@b:
   658                           	opt callstack 0
   659  000060                     ___fldiv@b:
   660                           	opt callstack 0
   661  000060                     ___flmul@b:
   662                           	opt callstack 0
   663  000060                     ___fpclassifyf@x:
   664                           	opt callstack 0
   665                           
   666                           ; 4 bytes @ 0x0
   667  000060                     	ds	2
   668  000062                     ??_isupper:
   669  000062                     USART1_Init@baud_rate:
   670                           	opt callstack 0
   671  000062                     memset@x:
   672                           	opt callstack 0
   673  000062                     I2C_Transmit@buffer_size:
   674                           	opt callstack 0
   675  000062                     GetStringSize@i:
   676                           	opt callstack 0
   677  000062                     ___wmul@multiplicand:
   678                           	opt callstack 0
   679  000062                     ___awdiv@divisor:
   680                           	opt callstack 0
   681  000062                     ___awmod@divisor:
   682                           	opt callstack 0
   683  000062                     fputc@fp:
   684                           	opt callstack 0
   685  000062                     strcpy@src:
   686                           	opt callstack 0
   687  000062                     strlen@a:
   688                           	opt callstack 0
   689  000062                     strncmp@_r:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x2
   693  000062                     	ds	1
   694  000063                     I2C_Transmit@address:
   695                           	opt callstack 0
   696  000063                     memset@size:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x3
   700  000063                     	ds	1
   701  000064                     ??_I2C_Transmit:
   702  000064                     ??_fputc:
   703  000064                     ??___fpclassifyf:
   704  000064                     ??_strcpy:
   705  000064                     ??___fltol:
   706  000064                     ___awdiv@counter:
   707                           	opt callstack 0
   708  000064                     ___awmod@counter:
   709                           	opt callstack 0
   710  000064                     USART1_SendString@str:
   711                           	opt callstack 0
   712  000064                     ___wmul@product:
   713                           	opt callstack 0
   714  000064                     strncmp@n:
   715                           	opt callstack 0
   716  000064                     ___fleq@ff2:
   717                           	opt callstack 0
   718  000064                     ___fladd@a:
   719                           	opt callstack 0
   720  000064                     ___fldiv@a:
   721                           	opt callstack 0
   722  000064                     ___flmul@a:
   723                           	opt callstack 0
   724                           
   725                           ; 4 bytes @ 0x4
   726  000064                     	ds	1
   727  000065                     ??_memset:
   728  000065                     ___awdiv@sign:
   729                           	opt callstack 0
   730  000065                     ___awmod@sign:
   731                           	opt callstack 0
   732                           
   733                           ; 1 bytes @ 0x5
   734  000065                     	ds	1
   735  000066                     ??_strncmp:
   736  000066                     ??_USART1_ReceiveCommand:
   737  000066                     ?_tolower:
   738                           	opt callstack 0
   739  000066                     USART1_SendString@size:
   740                           	opt callstack 0
   741  000066                     memset@i:
   742                           	opt callstack 0
   743  000066                     ___awdiv@quotient:
   744                           	opt callstack 0
   745  000066                     strcpy@s:
   746                           	opt callstack 0
   747  000066                     tolower@c:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x6
   751  000066                     	ds	1
   752  000067                     strncmp@l:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x7
   756  000067                     	ds	1
   757  000068                     ??_tolower:
   758  000068                     ??___fladd:
   759  000068                     ??___fldiv:
   760  000068                     ??___flmul:
   761  000068                     ??___fleq:
   762  000068                     ___fltol@sign1:
   763                           	opt callstack 0
   764  000068                     USART1_SendString@i:
   765                           	opt callstack 0
   766  000068                     ___fpclassifyf@e:
   767                           	opt callstack 0
   768  000068                     strcpy@d:
   769                           	opt callstack 0
   770                           
   771                           ; 2 bytes @ 0x8
   772  000068                     	ds	1
   773  000069                     ___fltol@exp1:
   774                           	opt callstack 0
   775  000069                     fputs@s:
   776                           	opt callstack 0
   777  000069                     strncmp@r:
   778                           	opt callstack 0
   779                           
   780                           ; 2 bytes @ 0x9
   781  000069                     	ds	1
   782  00006A                     USART1_SendString@attempts:
   783                           	opt callstack 0
   784  00006A                     ___fpclassifyf@u:
   785                           	opt callstack 0
   786                           
   787                           ; 4 bytes @ 0xA
   788  00006A                     	ds	1
   789  00006B                     I2C_Transmit@i:
   790                           	opt callstack 0
   791  00006B                     fputs@fp:
   792                           	opt callstack 0
   793                           
   794                           ; 2 bytes @ 0xB
   795  00006B                     	ds	1
   796  00006C                     ___fladd@signs:
   797                           	opt callstack 0
   798  00006C                     ___flmul@sign:
   799                           	opt callstack 0
   800  00006C                     I2C_handler@value:
   801                           	opt callstack 0
   802  00006C                     _tolower$2231:
   803                           	opt callstack 0
   804  00006C                     ___fldiv@rem:
   805                           	opt callstack 0
   806                           
   807                           ; 4 bytes @ 0xC
   808  00006C                     	ds	1
   809  00006D                     ___fladd@aexp:
   810                           	opt callstack 0
   811  00006D                     ___flmul@aexp:
   812                           	opt callstack 0
   813  00006D                     fputs@c:
   814                           	opt callstack 0
   815                           
   816                           ; 1 bytes @ 0xD
   817  00006D                     	ds	1
   818  00006E                     ___fladd@bexp:
   819                           	opt callstack 0
   820  00006E                     fputs@i:
   821                           	opt callstack 0
   822  00006E                     ___flmul@grs:
   823                           	opt callstack 0
   824                           
   825                           ; 4 bytes @ 0xE
   826  00006E                     	ds	1
   827  00006F                     ___fladd@grs:
   828                           	opt callstack 0
   829                           
   830                           ; 1 bytes @ 0xF
   831  00006F                     	ds	1
   832  000070                     ?_pad:
   833                           	opt callstack 0
   834  000070                     ___fldiv@sign:
   835                           	opt callstack 0
   836  000070                     pad@fp:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x10
   840  000070                     	ds	1
   841  000071                     ___fldiv@new_exp:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x11
   845  000071                     	ds	1
   846  000072                     ___flmul@bexp:
   847                           	opt callstack 0
   848  000072                     pad@buf:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0x12
   852  000072                     	ds	1
   853  000073                     ___fldiv@grs:
   854                           	opt callstack 0
   855  000073                     ___flmul@prod:
   856                           	opt callstack 0
   857                           
   858                           ; 4 bytes @ 0x13
   859  000073                     	ds	1
   860  000074                     pad@p:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x14
   864  000074                     	ds	2
   865  000076                     ??_pad:
   866                           
   867                           ; 1 bytes @ 0x16
   868  000076                     	ds	1
   869  000077                     ___fldiv@bexp:
   870                           	opt callstack 0
   871  000077                     pad@i:
   872                           	opt callstack 0
   873  000077                     ___flmul@temp:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x17
   877  000077                     	ds	1
   878  000078                     ___fldiv@aexp:
   879                           	opt callstack 0
   880                           
   881                           ; 1 bytes @ 0x18
   882  000078                     	ds	1
   883  000079                     ?_floorf:
   884                           	opt callstack 0
   885  000079                     ?___flsub:
   886                           	opt callstack 0
   887  000079                     pad@w:
   888                           	opt callstack 0
   889  000079                     ___flge@ff1:
   890                           	opt callstack 0
   891  000079                     ___flsub@b:
   892                           	opt callstack 0
   893  000079                     floorf@x:
   894                           	opt callstack 0
   895                           
   896                           ; 4 bytes @ 0x19
   897  000079                     	ds	4
   898  00007D                     ??_floorf:
   899  00007D                     ___flge@ff2:
   900                           	opt callstack 0
   901  00007D                     ___flsub@a:
   902                           	opt callstack 0
   903                           
   904                           ; 4 bytes @ 0x1D
   905  00007D                     	ds	4
   906  000081                     ??___flge:
   907                           
   908                           ; 1 bytes @ 0x21
   909  000081                     	ds	2
   910  000083                     floorf@m:
   911                           	opt callstack 0
   912                           
   913                           ; 4 bytes @ 0x23
   914  000083                     	ds	4
   915  000087                     floorf@e:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x27
   919  000087                     	ds	2
   920  000089                     floorf@u:
   921                           	opt callstack 0
   922                           
   923                           ; 4 bytes @ 0x29
   924  000089                     	ds	4
   925  00008D                     ?_efgtoa:
   926                           	opt callstack 0
   927  00008D                     efgtoa@fp:
   928                           	opt callstack 0
   929                           
   930                           ; 2 bytes @ 0x2D
   931  00008D                     	ds	2
   932  00008F                     efgtoa@f:
   933                           	opt callstack 0
   934                           
   935                           ; 4 bytes @ 0x2F
   936  00008F                     	ds	4
   937  000093                     efgtoa@c:
   938                           	opt callstack 0
   939                           
   940                           ; 1 bytes @ 0x33
   941  000093                     	ds	1
   942  000094                     ??_efgtoa:
   943                           
   944                           ; 1 bytes @ 0x34
   945  000094                     	ds	5
   946  000099                     efgtoa@ou:
   947                           	opt callstack 0
   948                           
   949                           ; 4 bytes @ 0x39
   950  000099                     	ds	4
   951  00009D                     _efgtoa$1647:
   952                           	opt callstack 0
   953                           
   954                           ; 2 bytes @ 0x3D
   955  00009D                     	ds	2
   956  00009F                     _efgtoa$1648:
   957                           	opt callstack 0
   958                           
   959                           ; 2 bytes @ 0x3F
   960  00009F                     	ds	2
   961  0000A1                     _efgtoa$1653:
   962                           	opt callstack 0
   963                           
   964                           ; 2 bytes @ 0x41
   965  0000A1                     	ds	2
   966  0000A3                     _efgtoa$1657:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x43
   970  0000A3                     	ds	2
   971  0000A5                     _efgtoa$1658:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x45
   975  0000A5                     	ds	2
   976  0000A7                     _efgtoa$1659:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x47
   980  0000A7                     	ds	2
   981  0000A9                     efgtoa@t:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0x49
   985  0000A9                     	ds	2
   986  0000AB                     efgtoa@pp:
   987                           	opt callstack 0
   988                           
   989                           ; 2 bytes @ 0x4B
   990  0000AB                     	ds	2
   991  0000AD                     efgtoa@m:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x4D
   995  0000AD                     	ds	2
   996  0000AF                     efgtoa@ne:
   997                           	opt callstack 0
   998                           
   999                           ; 2 bytes @ 0x4F
  1000  0000AF                     	ds	2
  1001  0000B1                     efgtoa@d:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x51
  1005  0000B1                     	ds	2
  1006  0000B3                     efgtoa@sign:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x53
  1010  0000B3                     	ds	2
  1011  0000B5                     efgtoa@p:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x55
  1015  0000B5                     	ds	2
  1016  0000B7                     efgtoa@nmode:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x57
  1020  0000B7                     	ds	1
  1021  0000B8                     efgtoa@w:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x58
  1025  0000B8                     	ds	2
  1026  0000BA                     efgtoa@mode:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x5A
  1030  0000BA                     	ds	1
  1031  0000BB                     efgtoa@h:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 4 bytes @ 0x5B
  1035  0000BB                     	ds	4
  1036  0000BF                     efgtoa@l:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x5F
  1040  0000BF                     	ds	4
  1041  0000C3                     efgtoa@i:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x63
  1045  0000C3                     	ds	2
  1046  0000C5                     efgtoa@g:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x65
  1050  0000C5                     	ds	4
  1051  0000C9                     efgtoa@e:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x69
  1055  0000C9                     	ds	2
  1056  0000CB                     efgtoa@n:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x6B
  1060  0000CB                     	ds	2
  1061  0000CD                     efgtoa@u:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x6D
  1065  0000CD                     	ds	4
  1066  0000D1                     ?_vfpfcnvrt:
  1067                           	opt callstack 0
  1068  0000D1                     vfpfcnvrt@fp:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x71
  1072  0000D1                     	ds	2
  1073  0000D3                     vfpfcnvrt@fmt:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x73
  1077  0000D3                     	ds	2
  1078  0000D5                     vfpfcnvrt@ap:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x75
  1082  0000D5                     	ds	2
  1083  0000D7                     ??_vfpfcnvrt:
  1084                           
  1085                           ; 1 bytes @ 0x77
  1086  0000D7                     	ds	4
  1087  0000DB                     _vfpfcnvrt$1676:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x7B
  1091  0000DB                     	ds	2
  1092  0000DD                     vfpfcnvrt@f:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x7D
  1096  0000DD                     	ds	4
  1097  0000E1                     vfpfcnvrt@ct:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 3 bytes @ 0x81
  1101  0000E1                     	ds	3
  1102  0000E4                     vfpfcnvrt@c:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x84
  1106  0000E4                     	ds	1
  1107  0000E5                     ?_vfprintf:
  1108                           	opt callstack 0
  1109  0000E5                     vfprintf@fp:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x85
  1113  0000E5                     	ds	2
  1114  0000E7                     vfprintf@fmt:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x87
  1118  0000E7                     	ds	2
  1119  0000E9                     vfprintf@ap:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x89
  1123  0000E9                     	ds	2
  1124  0000EB                     vfprintf@cfmt:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x8B
  1128  0000EB                     	ds	2
  1129  0000ED                     
  1130                           ; 1 bytes @ 0x8D
  1131                           
  1132                           	psect	cstackCOMRAM
  1133  000001                     __pcstackCOMRAM:
  1134                           	opt callstack 0
  1135  000001                     ADC_Start@pin:
  1136                           	opt callstack 0
  1137  000001                     
  1138                           ; 1 bytes @ 0x0
  1139  000001                     	ds	1
  1140  000002                     ?___xxtofl:
  1141                           	opt callstack 0
  1142  000002                     ?i2___flmul:
  1143                           	opt callstack 0
  1144  000002                     ___xxtofl@val:
  1145                           	opt callstack 0
  1146  000002                     i2___flmul@b:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x1
  1150  000002                     	ds	4
  1151  000006                     ??___xxtofl:
  1152  000006                     i2___flmul@a:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x5
  1156  000006                     	ds	4
  1157  00000A                     ??i2___flmul:
  1158  00000A                     ___xxtofl@sign:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x9
  1162  00000A                     	ds	1
  1163  00000B                     ___xxtofl@exp:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 1 bytes @ 0xA
  1167  00000B                     	ds	1
  1168  00000C                     ___xxtofl@arg:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 4 bytes @ 0xB
  1172  00000C                     	ds	2
  1173  00000E                     i2___flmul@sign:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 1 bytes @ 0xD
  1177  00000E                     	ds	1
  1178  00000F                     i2___flmul@grs:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 4 bytes @ 0xE
  1182  00000F                     	ds	4
  1183  000013                     i2___flmul@aexp:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x12
  1187  000013                     	ds	1
  1188  000014                     i2___flmul@bexp:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x13
  1192  000014                     	ds	1
  1193  000015                     i2___flmul@prod:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x14
  1197  000015                     	ds	4
  1198  000019                     i2___flmul@temp:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x18
  1202  000019                     	ds	2
  1203  00001B                     ??_ADC_ISR:
  1204                           
  1205                           ; 1 bytes @ 0x1A
  1206  00001B                     	ds	2
  1207  00001D                     ADC_ISR@adc_float:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x1C
  1211  00001D                     	ds	4
  1212  000021                     ADC_ISR@adc_result:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x20
  1216  000021                     	ds	2
  1217                           
  1218 ;;
  1219 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1220 ;;
  1221 ;; *************** function _main *****************
  1222 ;; Defined at:
  1223 ;;		line 129 in file "main.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  receive_comm    1   22[BANK1 ] unsigned char 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1238 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1239 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1240 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1241 ;;Total ram usage:        3 bytes
  1242 ;; Hardware stack levels required when called:   11
  1243 ;; This function calls:
  1244 ;;		_ADC_Init
  1245 ;;		_I2C_Init
  1246 ;;		_I2C_Transmit
  1247 ;;		_USART1_Init
  1248 ;;		_USART1_ReceiveCommand
  1249 ;;		_USART_handler
  1250 ;;		_timer0_init
  1251 ;; This function is called by:
  1252 ;;		Startup code after reset
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text0
  1257  0048FA                     __ptext0:
  1258                           	opt callstack 0
  1259  0048FA                     _main:
  1260                           	opt callstack 20
  1261                           
  1262                           ;main.c: 130:     OSCFRQ = 0x08;
  1263                           
  1264                           ;incstack = 0
  1265  0048FA  0E08               	movlw	8
  1266  0048FC  0139               	movlb	57	; () banked
  1267  0048FE  6FDF               	movwf	223,b	;volatile
  1268                           
  1269                           ;main.c: 131:     OSCTUNE = 0x00;
  1270  004900  0E00               	movlw	0
  1271  004902  6FDE               	movwf	222,b	;volatile
  1272                           
  1273                           ;main.c: 132:     OSCEN = 0x40;
  1274  004904  0E40               	movlw	64
  1275  004906  6FDD               	movwf	221,b	;volatile
  1276  004908                     l319:
  1277                           
  1278                           ; BSR set to: 57
  1279  004908  BDDC               	btfsc	220,6,b	;volatile
  1280  00490A  D002               	goto	u9200
  1281                           
  1282                           ; BSR set to: 57
  1283  00490C  A5DC               	btfss	220,2,b	;volatile
  1284  00490E  D7FC               	goto	l319
  1285  004910                     u9200:
  1286                           
  1287                           ; BSR set to: 57
  1288                           ;main.c: 139:     IVTLOCK = 0x01;
  1289  004910  0E01               	movlw	1
  1290  004912  6ED4               	movwf	16340,c	;volatile
  1291                           
  1292                           ;main.c: 142:     WDTCON1 = 0x07;
  1293  004914  0E07               	movlw	7
  1294  004916  6F5C               	movwf	92,b	;volatile
  1295                           
  1296                           ;main.c: 143:     WDTCON0 = 0x3F;
  1297  004918  0E3F               	movlw	63
  1298  00491A  6F5B               	movwf	91,b	;volatile
  1299                           
  1300                           ; BSR set to: 57
  1301                           ;main.c: 146:     PPSLOCKbits.PPSLOCKED = 0;
  1302  00491C  013A               	movlb	58	; () banked
  1303  00491E  91BF               	bcf	191,0,b	;volsfr
  1304                           
  1305                           ; BSR set to: 58
  1306                           ;main.c: 149:     timer0_init();
  1307  004920  EC4C  F029         	call	_timer0_init	;wreg free
  1308                           
  1309                           ;main.c: 150:     USART1_Init(1);
  1310  004924  0E01               	movlw	1
  1311  004926  EC5B  F026         	call	_USART1_Init
  1312                           
  1313                           ;main.c: 151:     ADC_Init();
  1314  00492A  EC3B  F029         	call	_ADC_Init	;wreg free
  1315                           
  1316                           ;main.c: 152:     I2C_Init();
  1317  00492E  EC10  F027         	call	_I2C_Init	;wreg free
  1318                           
  1319                           ;main.c: 154:     INTCON0bits.GIEH = 1;
  1320  004932  8ED2               	bsf	16338,7,c	;volatile
  1321                           
  1322                           ;main.c: 155:     INTCON0bits.GIEL = 1;
  1323  004934  8CD2               	bsf	16338,6,c	;volatile
  1324                           
  1325                           ;main.c: 156:     INTCON0bits.IPEN = 1;
  1326  004936  8AD2               	bsf	16338,5,c	;volatile
  1327                           
  1328                           ;main.c: 159:     TRISAbits.TRISA0 = 0;
  1329  004938  90C2               	bcf	16322,0,c	;volatile
  1330                           
  1331                           ;main.c: 160:     ANSELAbits.ANSELA0 = 1;
  1332  00493A  013A               	movlb	58	; () banked
  1333  00493C  8140               	bsf	64,0,b	;volatile
  1334                           
  1335                           ; BSR set to: 58
  1336                           ;main.c: 161:     led_enable = 1;
  1337  00493E  0E01               	movlw	1
  1338  004940  0100               	movlb	0	; () banked
  1339  004942  6FF9               	movwf	_led_enable& (0+255),b
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;main.c: 163:     TRISAbits.TRISA1 = 0;
  1343  004944  92C2               	bcf	16322,1,c	;volatile
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;main.c: 164:     ANSELAbits.ANSELA1 = 1;
  1347  004946  013A               	movlb	58	; () banked
  1348  004948  8340               	bsf	64,1,b	;volatile
  1349                           
  1350                           ; BSR set to: 58
  1351                           ;main.c: 165:     LATAbits.LA1 = 0;
  1352  00494A  92BA               	bcf	16314,1,c	;volatile
  1353                           
  1354                           ; BSR set to: 58
  1355                           ;main.c: 167:     TRISBbits.TRISB2 = 0;
  1356  00494C  94C3               	bcf	16323,2,c	;volatile
  1357                           
  1358                           ; BSR set to: 58
  1359                           ;main.c: 168:     TRISBbits.TRISB3 = 0;
  1360  00494E  96C3               	bcf	16323,3,c	;volatile
  1361                           
  1362                           ; BSR set to: 58
  1363                           ;main.c: 169:     LATBbits.LB2 = 1;
  1364  004950  84BB               	bsf	16315,2,c	;volatile
  1365                           
  1366                           ; BSR set to: 58
  1367                           ;main.c: 170:     LATBbits.LB3 = 1;
  1368  004952  86BB               	bsf	16315,3,c	;volatile
  1369                           
  1370                           ; BSR set to: 58
  1371                           ;main.c: 172:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1372  004954  0EA3               	movlw	163
  1373  004956  0101               	movlb	1	; () banked
  1374  004958  6FC6               	movwf	(??_main+1)& (0+255),b
  1375  00495A  0E57               	movlw	87
  1376  00495C  6FC5               	movwf	??_main& (0+255),b
  1377  00495E  0E02               	movlw	2
  1378  004960                     u9237:
  1379  004960  2EE8               	decfsz	wreg,f,c
  1380  004962  D7FE               	bra	u9237
  1381  004964  2FC5               	decfsz	??_main& (0+255),f,b
  1382  004966  D7FC               	bra	u9237
  1383  004968  2FC6               	decfsz	(??_main+1)& (0+255),f,b
  1384  00496A  D7FA               	bra	u9237
  1385  00496C  F000               	nop	
  1386                           
  1387                           ;main.c: 174:     AD5272_COMMANDS[0] = 0x1C;
  1388  00496E  0E1C               	movlw	28
  1389  004970  0100               	movlb	0	; () banked
  1390  004972  6FFD               	movwf	_AD5272_COMMANDS& (0+255),b
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;main.c: 175:     AD5272_COMMANDS[1] = 0x02;
  1394  004974  0E02               	movlw	2
  1395  004976  6FFE               	movwf	(_AD5272_COMMANDS+1)& (0+255),b
  1396                           
  1397                           ; BSR set to: 0
  1398  004978  0EFD               	movlw	low _AD5272_COMMANDS
  1399  00497A  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  1400  00497C  0E00               	movlw	high _AD5272_COMMANDS
  1401  00497E  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  1402  004980  0E02               	movlw	2
  1403  004982  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  1404  004984  0E5E               	movlw	94
  1405  004986  6F63               	movwf	I2C_Transmit@address& (0+255),b
  1406  004988  EC7F  F025         	call	_I2C_Transmit	;wreg free
  1407  00498C                     l6848:
  1408  00498C  0100               	movlb	0	; () banked
  1409  00498E  51FA               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  1410  004990  B4D8               	btfsc	status,2,c
  1411  004992  D7FC               	goto	l6848
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;main.c: 178:     AD5272_COMMANDS[0] = 0x04;
  1415  004994  0E04               	movlw	4
  1416  004996  6FFD               	movwf	_AD5272_COMMANDS& (0+255),b
  1417  004998                     l6852:
  1418                           
  1419                           ;main.c: 183:         receive_command = USART1_ReceiveCommand();
  1420  004998  EC80  F01F         	call	_USART1_ReceiveCommand	;wreg free
  1421  00499C  0101               	movlb	1	; () banked
  1422  00499E  6FC7               	movwf	main@receive_command& (0+255),b
  1423                           
  1424                           ; BSR set to: 1
  1425                           ;main.c: 184:         if(receive_command)
  1426  0049A0  51C7               	movf	main@receive_command& (0+255),w,b
  1427  0049A2  B4D8               	btfsc	status,2,c
  1428  0049A4  D7F9               	goto	l6852
  1429                           
  1430                           ; BSR set to: 1
  1431                           ;main.c: 185:             USART_handler();
  1432  0049A6  EC6E  F020         	call	_USART_handler	;wreg free
  1433  0049AA  D7F6               	goto	l6852
  1434  0049AC                     __end_of_main:
  1435                           	opt callstack 0
  1436                           
  1437 ;; *************** function _timer0_init *****************
  1438 ;; Defined at:
  1439 ;;		line 236 in file "main.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1457 ;;Total ram usage:        0 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    2
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text1
  1468  005298                     __ptext1:
  1469                           	opt callstack 0
  1470  005298                     _timer0_init:
  1471                           	opt callstack 28
  1472                           
  1473                           ;main.c: 237:     T0CON0 = 0x10;
  1474                           
  1475                           ;incstack = 0
  1476  005298  0E10               	movlw	16
  1477  00529A  6EB8               	movwf	16312,c	;volatile
  1478                           
  1479                           ;main.c: 238:     T0CON1 = 0x75;
  1480  00529C  0E75               	movlw	117
  1481  00529E  6EB9               	movwf	16313,c	;volatile
  1482                           
  1483                           ;main.c: 239:     TMR0L = 0xB0;
  1484  0052A0  0EB0               	movlw	176
  1485  0052A2  6EB6               	movwf	16310,c	;volatile
  1486                           
  1487                           ;main.c: 240:     TMR0H = 0x3C;
  1488  0052A4  0E3C               	movlw	60
  1489  0052A6  6EB7               	movwf	16311,c	;volatile
  1490                           
  1491                           ;main.c: 241:     counter_timer0 = 0;
  1492  0052A8  0E00               	movlw	0
  1493  0052AA  6E3B               	movwf	_counter_timer0,c
  1494                           
  1495                           ;main.c: 242:     IPR3bits.TMR0IP = 0;
  1496  0052AC  0139               	movlb	57	; () banked
  1497  0052AE  9F83               	bcf	131,7,b	;volatile
  1498                           
  1499                           ; BSR set to: 57
  1500                           ;main.c: 243:     PIR3bits.TMR0IF = 0;
  1501  0052B0  9FA3               	bcf	163,7,b	;volatile
  1502                           
  1503                           ; BSR set to: 57
  1504                           ;main.c: 244:     PIE3bits.TMR0IE = 1;
  1505  0052B2  8F93               	bsf	147,7,b	;volatile
  1506                           
  1507                           ; BSR set to: 57
  1508                           ;main.c: 245:     T0CON0bits.EN = 1;
  1509  0052B4  8EB8               	bsf	16312,7,c	;volatile
  1510                           
  1511                           ; BSR set to: 57
  1512  0052B6  0012               	return		;funcret
  1513  0052B8                     __end_of_timer0_init:
  1514                           	opt callstack 0
  1515                           
  1516 ;; *************** function _USART_handler *****************
  1517 ;; Defined at:
  1518 ;;		line 191 in file "main.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1534 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1535 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1536 ;;Total ram usage:        2 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:   10
  1539 ;; This function calls:
  1540 ;;		_GetStringSize
  1541 ;;		_I2C_handler
  1542 ;;		_USART1_SendString
  1543 ;;		_memset
  1544 ;;		_sprintf
  1545 ;; This function is called by:
  1546 ;;		_main
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text2
  1551  0040DC                     __ptext2:
  1552                           	opt callstack 0
  1553  0040DC                     _USART_handler:
  1554                           	opt callstack 20
  1555                           
  1556                           ;main.c: 192:     memset(tx_buffer,0,55);
  1557                           
  1558                           ; BSR set to: 57
  1559                           ;incstack = 0
  1560  0040DC  0E7A               	movlw	low _tx_buffer
  1561  0040DE  0100               	movlb	0	; () banked
  1562  0040E0  6F60               	movwf	memset@st& (0+255),b
  1563  0040E2  0E01               	movlw	high _tx_buffer
  1564  0040E4  6F61               	movwf	(memset@st+1)& (0+255),b
  1565  0040E6  0E00               	movlw	0
  1566  0040E8  6F62               	movwf	memset@x& (0+255),b
  1567  0040EA  0E00               	movlw	0
  1568  0040EC  6F64               	movwf	(memset@size+1)& (0+255),b
  1569  0040EE  0E37               	movlw	55
  1570  0040F0  6F63               	movwf	memset@size& (0+255),b
  1571  0040F2  ECBB  F028         	call	_memset	;wreg free
  1572                           
  1573                           ;main.c: 193:     if(COMMAND_WR){
  1574  0040F6  0100               	movlb	0	; () banked
  1575  0040F8  51FC               	movf	_COMMAND_WR& (0+255),w,b
  1576  0040FA  A4D8               	btfss	status,2,c
  1577  0040FC  D045               	goto	l6752
  1578  0040FE  D0A4               	goto	l6770
  1579  004100                     l6742:
  1580                           
  1581                           ; BSR set to: 1
  1582                           ;main.c: 196:                 sprintf(tx_buffer,"%f V",ADC_VOLTAGE_RESULT);
  1583  004100  0E7A               	movlw	low _tx_buffer
  1584  004102  6FB1               	movwf	sprintf@s& (0+255),b
  1585  004104  0E01               	movlw	high _tx_buffer
  1586  004106  6FB2               	movwf	(sprintf@s+1)& (0+255),b
  1587  004108  0E9B               	movlw	low STR_1
  1588  00410A  6FB3               	movwf	sprintf@fmt& (0+255),b
  1589  00410C  0E20               	movlw	high STR_1
  1590  00410E  6FB4               	movwf	(sprintf@fmt+1)& (0+255),b
  1591  004110  0060  F3B4  F1B5   	movff	_ADC_VOLTAGE_RESULT,?_sprintf+4
  1592  004116  0060  F3B8  F1B6   	movff	_ADC_VOLTAGE_RESULT+1,?_sprintf+5
  1593  00411C  0060  F3BC  F1B7   	movff	_ADC_VOLTAGE_RESULT+2,?_sprintf+6
  1594  004122  0060  F3C0  F1B8   	movff	_ADC_VOLTAGE_RESULT+3,?_sprintf+7
  1595  004128  ECDA  F027         	call	_sprintf	;wreg free
  1596                           
  1597                           ;main.c: 197:                 break;
  1598  00412C  D0A0               	goto	l6772
  1599  00412E                     l6744:
  1600                           
  1601                           ; BSR set to: 1
  1602                           ;main.c: 199:                 sprintf(tx_buffer,"%f A",ADC_CURRENT_RESULT);
  1603  00412E  0E7A               	movlw	low _tx_buffer
  1604  004130  6FB1               	movwf	sprintf@s& (0+255),b
  1605  004132  0E01               	movlw	high _tx_buffer
  1606  004134  6FB2               	movwf	(sprintf@s+1)& (0+255),b
  1607  004136  0E96               	movlw	low STR_2
  1608  004138  6FB3               	movwf	sprintf@fmt& (0+255),b
  1609  00413A  0E20               	movlw	high STR_2
  1610  00413C  6FB4               	movwf	(sprintf@fmt+1)& (0+255),b
  1611  00413E  0060  F0D4  F1B5   	movff	_ADC_CURRENT_RESULT,?_sprintf+4
  1612  004144  0060  F0D8  F1B6   	movff	_ADC_CURRENT_RESULT+1,?_sprintf+5
  1613  00414A  0060  F0DC  F1B7   	movff	_ADC_CURRENT_RESULT+2,?_sprintf+6
  1614  004150  0060  F0E0  F1B8   	movff	_ADC_CURRENT_RESULT+3,?_sprintf+7
  1615  004156  ECDA  F027         	call	_sprintf	;wreg free
  1616                           
  1617                           ;main.c: 200:                 break;
  1618  00415A  D089               	goto	l6772
  1619  00415C                     l6746:
  1620                           
  1621                           ; BSR set to: 1
  1622                           ;main.c: 202:                 sprintf(tx_buffer,"Version 1.0\nTeam 5V\nXaris Ketoglou,Vo
      +                          ula Kontotoli\n");
  1623  00415C  0E7A               	movlw	low _tx_buffer
  1624  00415E  6FB1               	movwf	sprintf@s& (0+255),b
  1625  004160  0E01               	movlw	high _tx_buffer
  1626  004162  6FB2               	movwf	(sprintf@s+1)& (0+255),b
  1627  004164  0E01               	movlw	low STR_3
  1628  004166  6FB3               	movwf	sprintf@fmt& (0+255),b
  1629  004168  0E20               	movlw	high STR_3
  1630  00416A  6FB4               	movwf	(sprintf@fmt+1)& (0+255),b
  1631  00416C  ECDA  F027         	call	_sprintf	;wreg free
  1632                           
  1633                           ;main.c: 203:                 break;
  1634  004170  D07E               	goto	l6772
  1635  004172                     l6748:
  1636                           
  1637                           ; BSR set to: 1
  1638                           ;main.c: 205:                 sprintf(tx_buffer,"Command not recognized!");
  1639  004172  0E7A               	movlw	low _tx_buffer
  1640  004174  6FB1               	movwf	sprintf@s& (0+255),b
  1641  004176  0E01               	movlw	high _tx_buffer
  1642  004178  6FB2               	movwf	(sprintf@s+1)& (0+255),b
  1643  00417A  0E35               	movlw	low STR_4
  1644  00417C  6FB3               	movwf	sprintf@fmt& (0+255),b
  1645  00417E  0E20               	movlw	high STR_4
  1646  004180  6FB4               	movwf	(sprintf@fmt+1)& (0+255),b
  1647  004182  ECDA  F027         	call	_sprintf	;wreg free
  1648                           
  1649                           ;main.c: 206:                 break;
  1650  004186  D073               	goto	l6772
  1651  004188                     l6752:
  1652                           
  1653                           ; BSR set to: 0
  1654  004188  51FB               	movf	_COMMAND& (0+255),w,b
  1655  00418A  0101               	movlb	1	; () banked
  1656  00418C  6FC3               	movwf	??_USART_handler& (0+255),b
  1657  00418E  6BC4               	clrf	(??_USART_handler+1)& (0+255),b
  1658                           
  1659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1660                           ; Switch size 1, requested type "simple"
  1661                           ; Number of cases is 1, Range of values is 0 to 0
  1662                           ; switch strategies available:
  1663                           ; Name         Instructions Cycles
  1664                           ; simple_byte            4     3 (average)
  1665                           ;	Chosen strategy is simple_byte
  1666  004190  51C4               	movf	(??_USART_handler+1)& (0+255),w,b
  1667  004192  0A00               	xorlw	0	; case 0
  1668  004194  A4D8               	btfss	status,2,c
  1669  004196  D7ED               	goto	l6748
  1670                           
  1671                           ; BSR set to: 1
  1672                           ; Switch size 1, requested type "simple"
  1673                           ; Number of cases is 3, Range of values is 0 to 2
  1674                           ; switch strategies available:
  1675                           ; Name         Instructions Cycles
  1676                           ; simple_byte           10     6 (average)
  1677                           ;	Chosen strategy is simple_byte
  1678  004198  51C3               	movf	??_USART_handler& (0+255),w,b
  1679  00419A  0A00               	xorlw	0	; case 0
  1680  00419C  B4D8               	btfsc	status,2,c
  1681  00419E  D7B0               	goto	l6742
  1682  0041A0  0A01               	xorlw	1	; case 1
  1683  0041A2  B4D8               	btfsc	status,2,c
  1684  0041A4  D7C4               	goto	l6744
  1685  0041A6  0A03               	xorlw	3	; case 2
  1686  0041A8  B4D8               	btfsc	status,2,c
  1687  0041AA  D7D8               	goto	l6746
  1688  0041AC  D7E2               	goto	l6748
  1689  0041AE                     l6754:
  1690                           
  1691                           ; BSR set to: 1
  1692                           ;main.c: 211:                 led_enable = !led_enable;
  1693  0041AE  0100               	movlb	0	; () banked
  1694  0041B0  51F9               	movf	_led_enable& (0+255),w,b
  1695  0041B2  A4D8               	btfss	status,2,c
  1696  0041B4  D002               	goto	u9150
  1697  0041B6  0E01               	movlw	1
  1698  0041B8  D001               	goto	u9160
  1699  0041BA                     u9150:
  1700  0041BA  0E00               	movlw	0
  1701  0041BC                     u9160:
  1702  0041BC  6FF9               	movwf	_led_enable& (0+255),b
  1703                           
  1704                           ;main.c: 212:                 if(led_enable)
  1705  0041BE  51F9               	movf	_led_enable& (0+255),w,b
  1706  0041C0  B4D8               	btfsc	status,2,c
  1707  0041C2  D00C               	goto	l6758
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;main.c: 213:                     sprintf(tx_buffer,"Blinking LED is ON!");
  1711  0041C4  0E7A               	movlw	low _tx_buffer
  1712  0041C6  0101               	movlb	1	; () banked
  1713  0041C8  6FB1               	movwf	sprintf@s& (0+255),b
  1714  0041CA  0E01               	movlw	high _tx_buffer
  1715  0041CC  6FB2               	movwf	(sprintf@s+1)& (0+255),b
  1716  0041CE  0E62               	movlw	low STR_5
  1717  0041D0  6FB3               	movwf	sprintf@fmt& (0+255),b
  1718  0041D2  0E20               	movlw	high STR_5
  1719  0041D4  6FB4               	movwf	(sprintf@fmt+1)& (0+255),b
  1720  0041D6  ECDA  F027         	call	_sprintf	;wreg free
  1721  0041DA  D049               	goto	l6772
  1722  0041DC                     l6758:
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;main.c: 215:                     sprintf(tx_buffer,"Blinking LED is OFF!");
  1726  0041DC  0E7A               	movlw	low _tx_buffer
  1727  0041DE  0101               	movlb	1	; () banked
  1728  0041E0  6FB1               	movwf	sprintf@s& (0+255),b
  1729  0041E2  0E01               	movlw	high _tx_buffer
  1730  0041E4  6FB2               	movwf	(sprintf@s+1)& (0+255),b
  1731  0041E6  0E4D               	movlw	low STR_6
  1732  0041E8  6FB3               	movwf	sprintf@fmt& (0+255),b
  1733  0041EA  0E20               	movlw	high STR_6
  1734  0041EC  6FB4               	movwf	(sprintf@fmt+1)& (0+255),b
  1735  0041EE  ECDA  F027         	call	_sprintf	;wreg free
  1736  0041F2  D03D               	goto	l6772
  1737  0041F4                     l6760:
  1738                           
  1739                           ; BSR set to: 1
  1740                           ;main.c: 218:                 I2C_handler(COMMAND_WRITE_NUMBER);
  1741  0041F4  0060  F3DC  F06C   	movff	_COMMAND_WRITE_NUMBER,I2C_handler@value
  1742  0041FA  0060  F3E0  F06D   	movff	_COMMAND_WRITE_NUMBER+1,I2C_handler@value+1
  1743  004200  EC25  F029         	call	_I2C_handler	;wreg free
  1744                           
  1745                           ;main.c: 219:                 sprintf(tx_buffer,"Voltage set!");
  1746  004204  0E7A               	movlw	low _tx_buffer
  1747  004206  0101               	movlb	1	; () banked
  1748  004208  6FB1               	movwf	sprintf@s& (0+255),b
  1749  00420A  0E01               	movlw	high _tx_buffer
  1750  00420C  6FB2               	movwf	(sprintf@s+1)& (0+255),b
  1751  00420E  0E89               	movlw	low STR_7
  1752  004210  6FB3               	movwf	sprintf@fmt& (0+255),b
  1753  004212  0E20               	movlw	high STR_7
  1754  004214  6FB4               	movwf	(sprintf@fmt+1)& (0+255),b
  1755  004216  ECDA  F027         	call	_sprintf	;wreg free
  1756                           
  1757                           ;main.c: 220:                 break;
  1758  00421A  D029               	goto	l6772
  1759  00421C                     l6764:
  1760                           
  1761                           ; BSR set to: 1
  1762                           ;main.c: 224:                 sprintf(tx_buffer,"Current Limit set!");
  1763  00421C  0E7A               	movlw	low _tx_buffer
  1764  00421E  6FB1               	movwf	sprintf@s& (0+255),b
  1765  004220  0E01               	movlw	high _tx_buffer
  1766  004222  6FB2               	movwf	(sprintf@s+1)& (0+255),b
  1767  004224  0E76               	movlw	low STR_8
  1768  004226  6FB3               	movwf	sprintf@fmt& (0+255),b
  1769  004228  0E20               	movlw	high STR_8
  1770  00422A  6FB4               	movwf	(sprintf@fmt+1)& (0+255),b
  1771  00422C  ECDA  F027         	call	_sprintf	;wreg free
  1772                           
  1773                           ;main.c: 225:                 break;
  1774  004230  D01E               	goto	l6772
  1775  004232                     l6766:
  1776                           
  1777                           ; BSR set to: 1
  1778                           ;main.c: 227:                 sprintf(tx_buffer,"Command not recognized!");
  1779  004232  0E7A               	movlw	low _tx_buffer
  1780  004234  6FB1               	movwf	sprintf@s& (0+255),b
  1781  004236  0E01               	movlw	high _tx_buffer
  1782  004238  6FB2               	movwf	(sprintf@s+1)& (0+255),b
  1783  00423A  0E35               	movlw	low STR_4
  1784  00423C  6FB3               	movwf	sprintf@fmt& (0+255),b
  1785  00423E  0E20               	movlw	high STR_4
  1786  004240  6FB4               	movwf	(sprintf@fmt+1)& (0+255),b
  1787  004242  ECDA  F027         	call	_sprintf	;wreg free
  1788                           
  1789                           ;main.c: 228:                 break;
  1790  004246  D013               	goto	l6772
  1791  004248                     l6770:
  1792                           
  1793                           ; BSR set to: 0
  1794  004248  51FB               	movf	_COMMAND& (0+255),w,b
  1795  00424A  0101               	movlb	1	; () banked
  1796  00424C  6FC3               	movwf	??_USART_handler& (0+255),b
  1797  00424E  6BC4               	clrf	(??_USART_handler+1)& (0+255),b
  1798                           
  1799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1800                           ; Switch size 1, requested type "simple"
  1801                           ; Number of cases is 1, Range of values is 0 to 0
  1802                           ; switch strategies available:
  1803                           ; Name         Instructions Cycles
  1804                           ; simple_byte            4     3 (average)
  1805                           ;	Chosen strategy is simple_byte
  1806  004250  51C4               	movf	(??_USART_handler+1)& (0+255),w,b
  1807  004252  0A00               	xorlw	0	; case 0
  1808  004254  A4D8               	btfss	status,2,c
  1809  004256  D7ED               	goto	l6766
  1810                           
  1811                           ; BSR set to: 1
  1812                           ; Switch size 1, requested type "simple"
  1813                           ; Number of cases is 3, Range of values is 0 to 2
  1814                           ; switch strategies available:
  1815                           ; Name         Instructions Cycles
  1816                           ; simple_byte           10     6 (average)
  1817                           ;	Chosen strategy is simple_byte
  1818  004258  51C3               	movf	??_USART_handler& (0+255),w,b
  1819  00425A  0A00               	xorlw	0	; case 0
  1820  00425C  B4D8               	btfsc	status,2,c
  1821  00425E  D7A7               	goto	l6754
  1822  004260  0A01               	xorlw	1	; case 1
  1823  004262  B4D8               	btfsc	status,2,c
  1824  004264  D7C7               	goto	l6760
  1825  004266  0A03               	xorlw	3	; case 2
  1826  004268  B4D8               	btfsc	status,2,c
  1827  00426A  D7D8               	goto	l6764
  1828  00426C  D7E2               	goto	l6766
  1829  00426E                     l6772:
  1830                           
  1831                           ;main.c: 231:     USART1_SendString(tx_buffer,GetStringSize());
  1832  00426E  0E7A               	movlw	low _tx_buffer
  1833  004270  0100               	movlb	0	; () banked
  1834  004272  6F64               	movwf	USART1_SendString@str& (0+255),b
  1835  004274  0E01               	movlw	high _tx_buffer
  1836  004276  6F65               	movwf	(USART1_SendString@str+1)& (0+255),b
  1837  004278  EC80  F028         	call	_GetStringSize	;wreg free
  1838  00427C  0060  F180  F066   	movff	?_GetStringSize,USART1_SendString@size
  1839  004282  0060  F184  F067   	movff	?_GetStringSize+1,USART1_SendString@size+1
  1840  004288  EC2E  F025         	call	_USART1_SendString	;wreg free
  1841  00428C  0012               	return		;funcret
  1842  00428E                     __end_of_USART_handler:
  1843                           	opt callstack 0
  1844                           
  1845 ;; *************** function _sprintf *****************
  1846 ;; Defined at:
  1847 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  s               2    0[BANK1 ] PTR unsigned char 
  1850 ;;		 -> tx_buffer(55), 
  1851 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  1852 ;;		 -> STR_9(24), STR_8(19), STR_7(13), STR_6(21), 
  1853 ;;		 -> STR_5(20), STR_4(24), STR_3(52), STR_2(5), 
  1854 ;;		 -> STR_1(5), 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  f               6   12[BANK1 ] struct _IO_FILE
  1857 ;;  ap              2   10[BANK1 ] PTR void [1]
  1858 ;;		 -> ?_sprintf(2), 
  1859 ;;  ret             2    0        int 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  2    0[BANK1 ] int 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1869 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1870 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1872 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1873 ;;Total ram usage:       18 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    9
  1876 ;; This function calls:
  1877 ;;		_vfprintf
  1878 ;; This function is called by:
  1879 ;;		_USART_handler
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text3
  1884  004FB4                     __ptext3:
  1885                           	opt callstack 0
  1886  004FB4                     _sprintf:
  1887                           	opt callstack 20
  1888                           
  1889                           ;incstack = 0
  1890  004FB4  0EB5               	movlw	low (?_sprintf+4)
  1891  004FB6  0101               	movlb	1	; () banked
  1892  004FB8  6FBB               	movwf	sprintf@ap& (0+255),b
  1893  004FBA  0E01               	movlw	high (?_sprintf+4)
  1894  004FBC  6FBC               	movwf	(sprintf@ap+1)& (0+255),b
  1895  004FBE  0060  F6C4  F1BD   	movff	sprintf@s,sprintf@f
  1896  004FC4  0060  F6C8  F1BE   	movff	sprintf@s+1,sprintf@f+1
  1897                           
  1898                           ; BSR set to: 1
  1899  004FCA  0E00               	movlw	0
  1900  004FCC  6FC0               	movwf	(sprintf@f+3)& (0+255),b
  1901  004FCE  0E00               	movlw	0
  1902  004FD0  6FBF               	movwf	(sprintf@f+2)& (0+255),b
  1903                           
  1904                           ; BSR set to: 1
  1905  004FD2  0E00               	movlw	0
  1906  004FD4  6FC2               	movwf	(sprintf@f+5)& (0+255),b
  1907  004FD6  0E00               	movlw	0
  1908  004FD8  6FC1               	movwf	(sprintf@f+4)& (0+255),b
  1909                           
  1910                           ; BSR set to: 1
  1911  004FDA  0EBD               	movlw	low sprintf@f
  1912  004FDC  0100               	movlb	0	; () banked
  1913  004FDE  6FE5               	movwf	vfprintf@fp& (0+255),b
  1914  004FE0  0E01               	movlw	high sprintf@f
  1915  004FE2  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  1916  004FE4  0060  F6CC  F0E7   	movff	sprintf@fmt,vfprintf@fmt
  1917  004FEA  0060  F6D0  F0E8   	movff	sprintf@fmt+1,vfprintf@fmt+1
  1918  004FF0  0EBB               	movlw	low sprintf@ap
  1919  004FF2  6FE9               	movwf	vfprintf@ap& (0+255),b
  1920  004FF4  0E01               	movlw	high sprintf@ap
  1921  004FF6  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  1922  004FF8  ECD9  F026         	call	_vfprintf	;wreg free
  1923  004FFC  0101               	movlb	1	; () banked
  1924  004FFE  51BF               	movf	(sprintf@f+2)& (0+255),w,b
  1925  005000  25B1               	addwf	sprintf@s& (0+255),w,b
  1926  005002  6ED9               	movwf	fsr2l,c
  1927  005004  51C0               	movf	(sprintf@f+3)& (0+255),w,b
  1928  005006  21B2               	addwfc	(sprintf@s+1)& (0+255),w,b
  1929  005008  6EDA               	movwf	fsr2h,c
  1930  00500A  0E00               	movlw	0
  1931  00500C  6EDF               	movwf	indf2,c
  1932                           
  1933                           ; BSR set to: 1
  1934  00500E  0012               	return		;funcret
  1935  005010                     __end_of_sprintf:
  1936                           	opt callstack 0
  1937                           
  1938 ;; *************** function _vfprintf *****************
  1939 ;; Defined at:
  1940 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  fp              2  133[BANK0 ] PTR struct _IO_FILE
  1943 ;;		 -> sprintf@f(6), 
  1944 ;;  fmt             2  135[BANK0 ] PTR const unsigned char 
  1945 ;;		 -> STR_9(24), STR_8(19), STR_7(13), STR_6(21), 
  1946 ;;		 -> STR_5(20), STR_4(24), STR_3(52), STR_2(5), 
  1947 ;;		 -> STR_1(5), 
  1948 ;;  ap              2  137[BANK0 ] PTR PTR void 
  1949 ;;		 -> sprintf@ap(2), 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  cfmt            2  139[BANK0 ] PTR unsigned char 
  1952 ;;		 -> STR_9(24), STR_8(19), STR_7(13), STR_6(21), 
  1953 ;;		 -> STR_5(20), STR_4(24), STR_3(52), STR_2(5), 
  1954 ;;		 -> STR_1(5), 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  2  133[BANK0 ] int 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1964 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1967 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1968 ;;Total ram usage:        8 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    8
  1971 ;; This function calls:
  1972 ;;		_vfpfcnvrt
  1973 ;; This function is called by:
  1974 ;;		_sprintf
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text4
  1979  004DB2                     __ptext4:
  1980                           	opt callstack 0
  1981  004DB2                     _vfprintf:
  1982                           	opt callstack 20
  1983                           
  1984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1985                           
  1986                           ; BSR set to: 1
  1987                           ;incstack = 0
  1988  004DB2  0060  F39C  F0EB   	movff	vfprintf@fmt,vfprintf@cfmt
  1989  004DB8  0060  F3A0  F0EC   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1990                           
  1991                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1992  004DBE  0E00               	movlw	0
  1993  004DC0  0100               	movlb	0	; () banked
  1994  004DC2  6FF2               	movwf	(_nout+1)& (0+255),b
  1995  004DC4  0E00               	movlw	0
  1996  004DC6  6FF1               	movwf	_nout& (0+255),b
  1997                           
  1998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1999  004DC8  D017               	goto	l6418
  2000  004DCA                     l6416:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2004  004DCA  0060  F394  F0D1   	movff	vfprintf@fp,vfpfcnvrt@fp
  2005  004DD0  0060  F398  F0D2   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2006  004DD6  0EEB               	movlw	low vfprintf@cfmt
  2007  004DD8  6FD3               	movwf	vfpfcnvrt@fmt& (0+255),b
  2008  004DDA  0E00               	movlw	high vfprintf@cfmt
  2009  004DDC  6FD4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2010  004DDE  0060  F3A4  F0D5   	movff	vfprintf@ap,vfpfcnvrt@ap
  2011  004DE4  0060  F3A8  F0D6   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2012  004DEA  ECBB  F019         	call	_vfpfcnvrt	;wreg free
  2013  004DEE  0100               	movlb	0	; () banked
  2014  004DF0  51D1               	movf	?_vfpfcnvrt& (0+255),w,b
  2015  004DF2  27F1               	addwf	_nout& (0+255),f,b
  2016  004DF4  51D2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2017  004DF6  23F2               	addwfc	(_nout+1)& (0+255),f,b
  2018  004DF8                     l6418:
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  2022  004DF8  0060  F3AF  FFF6   	movff	vfprintf@cfmt,tblptrl
  2023  004DFE  0060  F3B3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2024  004E04                     	if	0	;tblptru may be non-zero
  2025  004E04                     	endif
  2026  004E04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2027  004E04  0E00               	movlw	low (__mediumconst shr (0+16))
  2028  004E06  6EF8               	movwf	tblptru,c
  2029  004E08                     	endif
  2030  004E08  0008               	tblrd		*
  2031  004E0A  50F5               	movf	tablat,w,c
  2032  004E0C  0900               	iorlw	0
  2033  004E0E  A4D8               	btfss	status,2,c
  2034  004E10  D7DC               	goto	l6416
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  2038  004E12  0060  F3C4  F0E5   	movff	_nout,?_vfprintf
  2039  004E18  0060  F3C8  F0E6   	movff	_nout+1,?_vfprintf+1
  2040                           
  2041                           ; BSR set to: 0
  2042  004E1E  0012               	return		;funcret
  2043  004E20                     __end_of_vfprintf:
  2044                           	opt callstack 0
  2045                           
  2046 ;; *************** function _vfpfcnvrt *****************
  2047 ;; Defined at:
  2048 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  fp              2  113[BANK0 ] PTR struct _IO_FILE
  2051 ;;		 -> sprintf@f(6), 
  2052 ;;  fmt             2  115[BANK0 ] PTR PTR unsigned char 
  2053 ;;		 -> vfprintf@cfmt(2), 
  2054 ;;  ap              2  117[BANK0 ] PTR PTR void 
  2055 ;;		 -> sprintf@ap(2), 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  llu             8    0        unsigned long long 
  2058 ;;  ll              8    0        long long 
  2059 ;;  f               4  125[BANK0 ] long long 
  2060 ;;  ct              3  129[BANK0 ] unsigned char [3]
  2061 ;;  vp              3    0        PTR void 
  2062 ;;  cp              3    0        PTR unsigned char 
  2063 ;;  i               2    0        int 
  2064 ;;  done            2    0        int 
  2065 ;;  c               1  132[BANK0 ] unsigned char 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  2  113[BANK0 ] int 
  2068 ;; Registers used:
  2069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2075 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2076 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2077 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2078 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2079 ;;Total ram usage:       20 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:    7
  2082 ;; This function calls:
  2083 ;;		_efgtoa
  2084 ;;		_fputc
  2085 ;;		_isupper
  2086 ;;		_strncmp
  2087 ;;		_tolower
  2088 ;; This function is called by:
  2089 ;;		_vfprintf
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text5
  2094  003376                     __ptext5:
  2095                           	opt callstack 0
  2096  003376                     _vfpfcnvrt:
  2097                           	opt callstack 20
  2098                           
  2099                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;incstack = 0
  2103  003376  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2104  00337C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2105  003382  006F FF7B FFF6     	movff	postinc2,tblptrl
  2106  003388  006F FF77 FFF7     	movff	postdec2,tblptrh
  2107  00338E                     	if	0	;tblptru may be non-zero
  2108  00338E                     	endif
  2109  00338E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2110  00338E  0E00               	movlw	low (__mediumconst shr (0+16))
  2111  003390  6EF8               	movwf	tblptru,c
  2112  003392                     	endif
  2113  003392  0008               	tblrd		*
  2114  003394  50F5               	movf	tablat,w,c
  2115  003396  0A25               	xorlw	37
  2116  003398  A4D8               	btfss	status,2,c
  2117  00339A  D193               	goto	l6370
  2118                           
  2119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2120  00339C  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2121  0033A2  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2122  0033A8  2ADE               	incf	postinc2,f,c
  2123  0033AA  0E00               	movlw	0
  2124  0033AC  22DD               	addwfc	postdec2,f,c
  2125                           
  2126                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2127  0033AE  0E00               	movlw	0
  2128  0033B0  0100               	movlb	0	; () banked
  2129  0033B2  6FF4               	movwf	(_width+1)& (0+255),b
  2130  0033B4  0E00               	movlw	0
  2131  0033B6  6FF3               	movwf	_width& (0+255),b
  2132  0033B8  0060  F3CC  F039   	movff	_width,_flags
  2133  0033BE  0060  F3D0  F03A   	movff	_width+1,_flags+1
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2137  0033C4  69F5               	setf	_prec& (0+255),b
  2138  0033C6  69F6               	setf	(_prec+1)& (0+255),b
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  2142  0033C8  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2143  0033CE  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2144  0033D4  006F FF7B FFF6     	movff	postinc2,tblptrl
  2145  0033DA  006F FF77 FFF7     	movff	postdec2,tblptrh
  2146  0033E0                     	if	0	;tblptru may be non-zero
  2147  0033E0                     	endif
  2148  0033E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2149  0033E0  0E00               	movlw	low (__mediumconst shr (0+16))
  2150  0033E2  6EF8               	movwf	tblptru,c
  2151  0033E4                     	endif
  2152  0033E4  0008               	tblrd		*
  2153  0033E6  50F5               	movf	tablat,w,c
  2154  0033E8  6F66               	movwf	tolower@c& (0+255),b
  2155  0033EA  6B67               	clrf	(tolower@c+1)& (0+255),b
  2156  0033EC  EC08  F028         	call	_tolower	;wreg free
  2157  0033F0  0100               	movlb	0	; () banked
  2158  0033F2  5166               	movf	?_tolower& (0+255),w,b
  2159  0033F4  6FE1               	movwf	vfpfcnvrt@ct& (0+255),b
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  2163  0033F6  51E1               	movf	vfpfcnvrt@ct& (0+255),w,b
  2164  0033F8  B4D8               	btfsc	status,2,c
  2165  0033FA  D045               	goto	l6326
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  2169  0033FC  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2170  003402  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2171  003408  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2172  00340E  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2173  003414  0E01               	movlw	1
  2174  003416  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2175  003418  0E00               	movlw	0
  2176  00341A  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2177  00341C  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2178  003422  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2179  003428                     	if	0	;tblptru may be non-zero
  2180  003428                     	endif
  2181  003428                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2182  003428  0E00               	movlw	low (__mediumconst shr (0+16))
  2183  00342A  6EF8               	movwf	tblptru,c
  2184  00342C                     	endif
  2185  00342C  0008               	tblrd		*
  2186  00342E  50F5               	movf	tablat,w,c
  2187  003430  6F66               	movwf	tolower@c& (0+255),b
  2188  003432  6B67               	clrf	(tolower@c+1)& (0+255),b
  2189  003434  EC08  F028         	call	_tolower	;wreg free
  2190  003438  0100               	movlb	0	; () banked
  2191  00343A  5166               	movf	?_tolower& (0+255),w,b
  2192  00343C  6FE2               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  2196  00343E  51E2               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2197  003440  B4D8               	btfsc	status,2,c
  2198  003442  D021               	goto	l6326
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  2202  003444  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2203  00344A  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2204  003450  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2205  003456  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2206  00345C  0E02               	movlw	2
  2207  00345E  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2208  003460  0E00               	movlw	0
  2209  003462  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2210  003464  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2211  00346A  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2212  003470                     	if	0	;tblptru may be non-zero
  2213  003470                     	endif
  2214  003470                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2215  003470  0E00               	movlw	low (__mediumconst shr (0+16))
  2216  003472  6EF8               	movwf	tblptru,c
  2217  003474                     	endif
  2218  003474  0008               	tblrd		*
  2219  003476  50F5               	movf	tablat,w,c
  2220  003478  6F66               	movwf	tolower@c& (0+255),b
  2221  00347A  6B67               	clrf	(tolower@c+1)& (0+255),b
  2222  00347C  EC08  F028         	call	_tolower	;wreg free
  2223  003480  0100               	movlb	0	; () banked
  2224  003482  5166               	movf	?_tolower& (0+255),w,b
  2225  003484  6FE3               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2226  003486                     l6326:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  2230  003486  0E66               	movlw	102
  2231  003488  19E1               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2232  00348A  A4D8               	btfss	status,2,c
  2233  00348C  D05B               	goto	l6338
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  2237  00348E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2238  003494  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2239  00349A  006F FF7B FFF6     	movff	postinc2,tblptrl
  2240  0034A0  006F FF77 FFF7     	movff	postdec2,tblptrh
  2241  0034A6                     	if	0	;tblptru may be non-zero
  2242  0034A6                     	endif
  2243  0034A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2244  0034A6  0E00               	movlw	low (__mediumconst shr (0+16))
  2245  0034A8  6EF8               	movwf	tblptru,c
  2246  0034AA                     	endif
  2247  0034AA  0008               	tblrd		*
  2248  0034AC  006F FFD4  F0E4    	movff	tablat,vfpfcnvrt@c
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  2252  0034B2  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2253  0034B8  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2254  0034BE  2ADE               	incf	postinc2,f,c
  2255  0034C0  0E00               	movlw	0
  2256  0034C2  22DD               	addwfc	postdec2,f,c
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  2260  0034C4  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2261  0034CA  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2262  0034D0  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  2263  0034D6  0E04               	movlw	4
  2264  0034D8  26DE               	addwf	postinc2,f,c
  2265  0034DA  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  2266  0034E0  0E00               	movlw	0
  2267  0034E2  22DD               	addwfc	postdec2,f,c
  2268  0034E4  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2269  0034EA  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2270  0034F0  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f
  2271  0034F6  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+1
  2272  0034FC  006F FF78  F0DF    	movff	postinc2,vfpfcnvrt@f+2
  2273  003502  006F FF78  F0E0    	movff	postinc2,vfpfcnvrt@f+3
  2274  003508                     l6334:
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  2278  003508  0060  F344  F08D   	movff	vfpfcnvrt@fp,efgtoa@fp
  2279  00350E  0060  F348  F08E   	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2280  003514  0060  F374  F08F   	movff	vfpfcnvrt@f,efgtoa@f
  2281  00351A  0060  F378  F090   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2282  003520  0060  F37C  F091   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2283  003526  0060  F380  F092   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2284  00352C  0060  F390  F093   	movff	vfpfcnvrt@c,efgtoa@c
  2285  003532  EC5A  F010         	call	_efgtoa	;wreg free
  2286  003536  0060  F234  F0D1   	movff	?_efgtoa,?_vfpfcnvrt
  2287  00353C  0060  F238  F0D2   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2288  003542  0012               	return	
  2289  003544                     l6338:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2293  003544  0EE1               	movlw	low vfpfcnvrt@ct
  2294  003546  6F60               	movwf	strncmp@_l& (0+255),b
  2295  003548  0E00               	movlw	high vfpfcnvrt@ct
  2296  00354A  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2297  00354C  0EB0               	movlw	low STR_18
  2298  00354E  6F62               	movwf	strncmp@_r& (0+255),b
  2299  003550  0E20               	movlw	high STR_18
  2300  003552  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2301  003554  0E00               	movlw	0
  2302  003556  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2303  003558  0E02               	movlw	2
  2304  00355A  6F64               	movwf	strncmp@n& (0+255),b
  2305  00355C  EC53  F023         	call	_strncmp	;wreg free
  2306  003560  0100               	movlb	0	; () banked
  2307  003562  5160               	movf	?_strncmp& (0+255),w,b
  2308  003564  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2309  003566  A4D8               	btfss	status,2,c
  2310  003568  D070               	goto	l6354
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2314  00356A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2315  003570  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2316  003576  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  2317  00357C  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  2318  003582  0E01               	movlw	1
  2319  003584  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2320  003586  0E00               	movlw	0
  2321  003588  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2322  00358A  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2323  003590  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2324  003596                     	if	0	;tblptru may be non-zero
  2325  003596                     	endif
  2326  003596                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2327  003596  0E00               	movlw	low (__mediumconst shr (0+16))
  2328  003598  6EF8               	movwf	tblptru,c
  2329  00359A                     	endif
  2330  00359A  0008               	tblrd		*
  2331  00359C  006F FFD4  F0E4    	movff	tablat,vfpfcnvrt@c
  2332  0035A2  0EBF               	movlw	191
  2333  0035A4  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  2334  0035A6  0EFF               	movlw	255
  2335  0035A8  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2336  0035AA  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2337  0035B0  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2338  0035B6  006F FF7B FFF6     	movff	postinc2,tblptrl
  2339  0035BC  006F FF77 FFF7     	movff	postdec2,tblptrh
  2340  0035C2                     	if	0	;tblptru may be non-zero
  2341  0035C2                     	endif
  2342  0035C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2343  0035C2  0E00               	movlw	low (__mediumconst shr (0+16))
  2344  0035C4  6EF8               	movwf	tblptru,c
  2345  0035C6                     	endif
  2346  0035C6  0008               	tblrd		*
  2347  0035C8  50F5               	movf	tablat,w,c
  2348  0035CA  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2349  0035CC  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2350  0035CE  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  2351  0035D0  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2352  0035D2  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2353  0035D4  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2354  0035D6  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2355  0035D8  E106               	bnz	u8460
  2356  0035DA  0E1A               	movlw	26
  2357  0035DC  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2358  0035DE  B0D8               	btfsc	status,0,c
  2359  0035E0  D002               	goto	u8460
  2360  0035E2  0E01               	movlw	1
  2361  0035E4  D001               	goto	u8470
  2362  0035E6                     u8460:
  2363  0035E6  0E00               	movlw	0
  2364  0035E8                     u8470:
  2365  0035E8  6FDB               	movwf	_vfpfcnvrt$1676& (0+255),b
  2366  0035EA  6BDC               	clrf	(_vfpfcnvrt$1676+1)& (0+255),b
  2367                           
  2368                           ; BSR set to: 0
  2369  0035EC  51DB               	movf	_vfpfcnvrt$1676& (0+255),w,b
  2370  0035EE  11DC               	iorwf	(_vfpfcnvrt$1676+1)& (0+255),w,b
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2374                           
  2375                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  2379  0035F0  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2380  0035F6  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2381  0035FC  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  2382  003602  0E04               	movlw	4
  2383  003604  26DE               	addwf	postinc2,f,c
  2384  003606  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  2385  00360C  0E00               	movlw	0
  2386  00360E  22DD               	addwfc	postdec2,f,c
  2387  003610  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2388  003616  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2389  00361C  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f
  2390  003622  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+1
  2391  003628  006F FF78  F0DF    	movff	postinc2,vfpfcnvrt@f+2
  2392  00362E  006F FF78  F0E0    	movff	postinc2,vfpfcnvrt@f+3
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  2396                           
  2397                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  2398  003634  0E02               	movlw	2
  2399  003636  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2400  00363C  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2401  003642  26DE               	addwf	postinc2,f,c
  2402  003644  0E00               	movlw	0
  2403  003646  22DD               	addwfc	postdec2,f,c
  2404  003648  D75F               	goto	l6334
  2405  00364A                     l6354:
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2409  00364A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2410  003650  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2411  003656  006F FF7B FFF6     	movff	postinc2,tblptrl
  2412  00365C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2413  003662                     	if	0	;tblptru may be non-zero
  2414  003662                     	endif
  2415  003662                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2416  003662  0E00               	movlw	low (__mediumconst shr (0+16))
  2417  003664  6EF8               	movwf	tblptru,c
  2418  003666                     	endif
  2419  003666  0008               	tblrd		*
  2420  003668  50F5               	movf	tablat,w,c
  2421  00366A  0A25               	xorlw	37
  2422  00366C  A4D8               	btfss	status,2,c
  2423  00366E  D01B               	goto	l6364
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2427  003670  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2428  003676  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2429  00367C  2ADE               	incf	postinc2,f,c
  2430  00367E  0E00               	movlw	0
  2431  003680  22DD               	addwfc	postdec2,f,c
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2435  003682  0E00               	movlw	0
  2436  003684  6F61               	movwf	(fputc@c+1)& (0+255),b
  2437  003686  0E25               	movlw	37
  2438  003688  6F60               	movwf	fputc@c& (0+255),b
  2439  00368A  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  2440  003690  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2441  003696  ECD6  F024         	call	_fputc	;wreg free
  2442  00369A                     l6360:
  2443                           
  2444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2445  00369A  0E00               	movlw	0
  2446  00369C  0100               	movlb	0	; () banked
  2447  00369E  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2448  0036A0  0E01               	movlw	1
  2449  0036A2  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  2450  0036A4  0012               	return	
  2451  0036A6                     l6364:
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2455  0036A6  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2456  0036AC  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2457  0036B2  2ADE               	incf	postinc2,f,c
  2458  0036B4  0E00               	movlw	0
  2459  0036B6  22DD               	addwfc	postdec2,f,c
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2463  0036B8  0E00               	movlw	0
  2464  0036BA  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2465  0036BC  0E00               	movlw	0
  2466  0036BE  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  2467  0036C0  0012               	return	
  2468  0036C2                     l6370:
  2469                           
  2470                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  2471  0036C2  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2472  0036C8  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2473  0036CE  006F FF7B FFF6     	movff	postinc2,tblptrl
  2474  0036D4  006F FF77 FFF7     	movff	postdec2,tblptrh
  2475  0036DA                     	if	0	;tblptru may be non-zero
  2476  0036DA                     	endif
  2477  0036DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2478  0036DA  0E00               	movlw	low (__mediumconst shr (0+16))
  2479  0036DC  6EF8               	movwf	tblptru,c
  2480  0036DE                     	endif
  2481  0036DE  0008               	tblrd		*
  2482  0036E0  50F5               	movf	tablat,w,c
  2483  0036E2  0100               	movlb	0	; () banked
  2484  0036E4  6F60               	movwf	fputc@c& (0+255),b
  2485  0036E6  6B61               	clrf	(fputc@c+1)& (0+255),b
  2486  0036E8  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  2487  0036EE  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2488  0036F4  ECD6  F024         	call	_fputc	;wreg free
  2489                           
  2490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2491  0036F8  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2492  0036FE  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2493  003704  2ADE               	incf	postinc2,f,c
  2494  003706  0E00               	movlw	0
  2495  003708  22DD               	addwfc	postdec2,f,c
  2496  00370A  D7C7               	goto	l6360
  2497  00370C                     __end_of_vfpfcnvrt:
  2498                           	opt callstack 0
  2499                           
  2500 ;; *************** function _strncmp *****************
  2501 ;; Defined at:
  2502 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  2505 ;;		 -> vfpfcnvrt@ct(3), 
  2506 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  2507 ;;		 -> STR_20(3), 
  2508 ;;  n               2    4[BANK0 ] unsigned int 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  2511 ;;		 -> STR_20(3), 
  2512 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  2513 ;;		 -> vfpfcnvrt@ct(3), 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2    0[BANK0 ] int 
  2516 ;; Registers used:
  2517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2523 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2524 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2525 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2526 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2527 ;;Total ram usage:       11 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    2
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_vfpfcnvrt
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text6
  2538  0046A6                     __ptext6:
  2539                           	opt callstack 0
  2540  0046A6                     _strncmp:
  2541                           	opt callstack 24
  2542                           
  2543                           ;incstack = 0
  2544  0046A6  0060  F180  F067   	movff	strncmp@_l,strncmp@l
  2545  0046AC  0060  F184  F068   	movff	strncmp@_l+1,strncmp@l+1
  2546  0046B2  0060  F188  F069   	movff	strncmp@_r,strncmp@r
  2547  0046B8  0060  F18C  F06A   	movff	strncmp@_r+1,strncmp@r+1
  2548  0046BE  0100               	movlb	0	; () banked
  2549  0046C0  0764               	decf	strncmp@n& (0+255),f,b
  2550  0046C2  A0D8               	btfss	status,0,c
  2551  0046C4  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2552  0046C6  2964               	incf	strncmp@n& (0+255),w,b
  2553  0046C8  E10F               	bnz	l6296
  2554  0046CA  2965               	incf	(strncmp@n+1)& (0+255),w,b
  2555  0046CC  A4D8               	btfss	status,2,c
  2556  0046CE  D00C               	goto	l6296
  2557                           
  2558                           ; BSR set to: 0
  2559  0046D0  0E00               	movlw	0
  2560  0046D2  6F61               	movwf	(?_strncmp+1)& (0+255),b
  2561  0046D4  0E00               	movlw	0
  2562  0046D6  6F60               	movwf	?_strncmp& (0+255),b
  2563  0046D8  0012               	return	
  2564  0046DA                     l6294:
  2565                           
  2566                           ; BSR set to: 0
  2567  0046DA  4B67               	infsnz	strncmp@l& (0+255),f,b
  2568  0046DC  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  2569  0046DE  4B69               	infsnz	strncmp@r& (0+255),f,b
  2570  0046E0  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  2571  0046E2  0764               	decf	strncmp@n& (0+255),f,b
  2572  0046E4  A0D8               	btfss	status,0,c
  2573  0046E6  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2574  0046E8                     l6296:
  2575                           
  2576                           ; BSR set to: 0
  2577  0046E8  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2578  0046EE  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2579  0046F4  50DF               	movf	indf2,w,c
  2580  0046F6  B4D8               	btfsc	status,2,c
  2581  0046F8  D026               	goto	u8400
  2582                           
  2583                           ; BSR set to: 0
  2584  0046FA  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2585  004700  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2586  004706                     	if	0	;tblptru may be non-zero
  2587  004706                     	endif
  2588  004706                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2589  004706  0E00               	movlw	low (__mediumconst shr (0+16))
  2590  004708  6EF8               	movwf	tblptru,c
  2591  00470A                     	endif
  2592  00470A  0008               	tblrd		*
  2593  00470C  50F5               	movf	tablat,w,c
  2594  00470E  0900               	iorlw	0
  2595  004710  B4D8               	btfsc	status,2,c
  2596  004712  D019               	goto	u8400
  2597                           
  2598                           ; BSR set to: 0
  2599  004714  5164               	movf	strncmp@n& (0+255),w,b
  2600  004716  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  2601  004718  B4D8               	btfsc	status,2,c
  2602  00471A  D015               	goto	u8400
  2603                           
  2604                           ; BSR set to: 0
  2605  00471C  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2606  004722  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2607  004728  50DF               	movf	indf2,w,c
  2608  00472A  6F66               	movwf	??_strncmp& (0+255),b
  2609  00472C  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2610  004732  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2611  004738                     	if	0	;tblptru may be non-zero
  2612  004738                     	endif
  2613  004738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2614  004738  0E00               	movlw	low (__mediumconst shr (0+16))
  2615  00473A  6EF8               	movwf	tblptru,c
  2616  00473C                     	endif
  2617  00473C  0008               	tblrd		*
  2618  00473E  50F5               	movf	tablat,w,c
  2619  004740  1966               	xorwf	??_strncmp& (0+255),w,b
  2620  004742  B4D8               	btfsc	status,2,c
  2621  004744  D7CA               	goto	l6294
  2622  004746                     u8400:
  2623                           
  2624                           ; BSR set to: 0
  2625  004746  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  2626  00474C  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  2627  004752  50DF               	movf	indf2,w,c
  2628  004754  6F66               	movwf	??_strncmp& (0+255),b
  2629  004756  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  2630  00475C  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  2631  004762                     	if	0	;tblptru may be non-zero
  2632  004762                     	endif
  2633  004762                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2634  004762  0E00               	movlw	low (__mediumconst shr (0+16))
  2635  004764  6EF8               	movwf	tblptru,c
  2636  004766                     	endif
  2637  004766  0008               	tblrd		*
  2638  004768  50F5               	movf	tablat,w,c
  2639  00476A  5D66               	subwf	??_strncmp& (0+255),w,b
  2640  00476C  6F60               	movwf	?_strncmp& (0+255),b
  2641  00476E  6B61               	clrf	(?_strncmp+1)& (0+255),b
  2642  004770  A0D8               	btfss	status,0,c
  2643  004772  0761               	decf	(?_strncmp+1)& (0+255),f,b
  2644                           
  2645                           ; BSR set to: 0
  2646  004774  0012               	return		;funcret
  2647  004776                     __end_of_strncmp:
  2648                           	opt callstack 0
  2649                           
  2650 ;; *************** function _efgtoa *****************
  2651 ;; Defined at:
  2652 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  2655 ;;		 -> sprintf@f(6), 
  2656 ;;  f               4   47[BANK0 ] PTR struct _IO_FILE
  2657 ;;  c               1   51[BANK0 ] unsigned char 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  u               4  109[BANK0 ] unsigned char 
  2660 ;;  g               4  101[BANK0 ] unsigned char 
  2661 ;;  l               4   95[BANK0 ] unsigned char 
  2662 ;;  h               4   91[BANK0 ] unsigned char 
  2663 ;;  ou              4   57[BANK0 ] unsigned char 
  2664 ;;  n               2  107[BANK0 ] int 
  2665 ;;  e               2  105[BANK0 ] int 
  2666 ;;  i               2   99[BANK0 ] int 
  2667 ;;  w               2   88[BANK0 ] int 
  2668 ;;  p               2   85[BANK0 ] int 
  2669 ;;  sign            2   83[BANK0 ] int 
  2670 ;;  d               2   81[BANK0 ] int 
  2671 ;;  ne              2   79[BANK0 ] int 
  2672 ;;  m               2   77[BANK0 ] int 
  2673 ;;  pp              2   75[BANK0 ] int 
  2674 ;;  t               2   73[BANK0 ] int 
  2675 ;;  mode            1   90[BANK0 ] unsigned char 
  2676 ;;  nmode           1   87[BANK0 ] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  2   45[BANK0 ] int 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2686 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2687 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2688 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2689 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2690 ;;Total ram usage:       68 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    6
  2693 ;; This function calls:
  2694 ;;		___awdiv
  2695 ;;		___awmod
  2696 ;;		___fladd
  2697 ;;		___fldiv
  2698 ;;		___fleq
  2699 ;;		___flge
  2700 ;;		___flmul
  2701 ;;		___flneg
  2702 ;;		___flsub
  2703 ;;		___fltol
  2704 ;;		___fpclassifyf
  2705 ;;		_floorf
  2706 ;;		_isupper
  2707 ;;		_pad
  2708 ;;		_strcpy
  2709 ;;		_tolower
  2710 ;; This function is called by:
  2711 ;;		_vfpfcnvrt
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text7
  2716  0020B4                     __ptext7:
  2717                           	opt callstack 0
  2718  0020B4                     _efgtoa:
  2719                           	opt callstack 20
  2720                           
  2721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;incstack = 0
  2725  0020B4  0E00               	movlw	0
  2726  0020B6  0100               	movlb	0	; () banked
  2727  0020B8  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  2728  0020BA  0E00               	movlw	0
  2729  0020BC  6FB3               	movwf	efgtoa@sign& (0+255),b
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  2733  0020BE  0060  F23C  F0C5   	movff	efgtoa@f,efgtoa@g
  2734  0020C4  0060  F240  F0C6   	movff	efgtoa@f+1,efgtoa@g+1
  2735  0020CA  0060  F244  F0C7   	movff	efgtoa@f+2,efgtoa@g+2
  2736  0020D0  0060  F248  F0C8   	movff	efgtoa@f+3,efgtoa@g+3
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  2740  0020D6  AFC8               	btfss	(efgtoa@g+3)& (0+255),7,b
  2741  0020D8  D01E               	goto	l6000
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  2745  0020DA  0E00               	movlw	0
  2746  0020DC  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  2747  0020DE  0E01               	movlw	1
  2748  0020E0  6FB3               	movwf	efgtoa@sign& (0+255),b
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  2752  0020E2  0060  F314  F060   	movff	efgtoa@g,___flneg@f1
  2753  0020E8  0060  F318  F061   	movff	efgtoa@g+1,___flneg@f1+1
  2754  0020EE  0060  F31C  F062   	movff	efgtoa@g+2,___flneg@f1+2
  2755  0020F4  0060  F320  F063   	movff	efgtoa@g+3,___flneg@f1+3
  2756  0020FA  EC9F  F028         	call	___flneg	;wreg free
  2757  0020FE  0060  F180  F0C5   	movff	?___flneg,efgtoa@g
  2758  002104  0060  F184  F0C6   	movff	?___flneg+1,efgtoa@g+1
  2759  00210A  0060  F188  F0C7   	movff	?___flneg+2,efgtoa@g+2
  2760  002110  0060  F18C  F0C8   	movff	?___flneg+3,efgtoa@g+3
  2761  002116                     l6000:
  2762                           
  2763                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  2764  002116  0E00               	movlw	0
  2765  002118  0100               	movlb	0	; () banked
  2766  00211A  6FCC               	movwf	(efgtoa@n+1)& (0+255),b
  2767  00211C  0E00               	movlw	0
  2768  00211E  6FCB               	movwf	efgtoa@n& (0+255),b
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  2772  002120  0060  F3CC  F0B8   	movff	_width,efgtoa@w
  2773  002126  0060  F3D0  F0B9   	movff	_width+1,efgtoa@w+1
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  2777  00212C  51B3               	movf	efgtoa@sign& (0+255),w,b
  2778  00212E  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2779  002130  A4D8               	btfss	status,2,c
  2780  002132  D002               	goto	u7860
  2781                           
  2782                           ; BSR set to: 0
  2783  002134  A439               	btfss	_flags,2,c
  2784  002136  D014               	goto	l6020
  2785  002138                     u7860:
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  2789  002138  51B3               	movf	efgtoa@sign& (0+255),w,b
  2790  00213A  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2791  00213C  A4D8               	btfss	status,2,c
  2792  00213E  D004               	goto	l6012
  2793                           
  2794                           ; BSR set to: 0
  2795  002140  0E00               	movlw	0
  2796  002142  6F9E               	movwf	(_efgtoa$1647+1)& (0+255),b
  2797  002144  0E2B               	movlw	43
  2798  002146  D003               	goto	L1
  2799  002148                     l6012:
  2800                           
  2801                           ; BSR set to: 0
  2802  002148  0E00               	movlw	0
  2803  00214A  6F9E               	movwf	(_efgtoa$1647+1)& (0+255),b
  2804  00214C  0E2D               	movlw	45
  2805  00214E                     L1:
  2806  00214E  6F9D               	movwf	_efgtoa$1647& (0+255),b
  2807                           
  2808                           ; BSR set to: 0
  2809  002150  0060  F274  F12A   	movff	_efgtoa$1647,_dbuf
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  2813  002156  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  2814  002158  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  2818  00215A  07B8               	decf	efgtoa@w& (0+255),f,b
  2819  00215C  A0D8               	btfss	status,0,c
  2820  00215E  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  2821  002160                     l6020:
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2825  002160  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  2826  002166  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  2827  00216C  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  2828  002172  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  2829  002178  EC73  F022         	call	___fpclassifyf	;wreg free
  2830  00217C  0100               	movlb	0	; () banked
  2831  00217E  0560               	decf	?___fpclassifyf& (0+255),w,b
  2832  002180  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2833  002182  A4D8               	btfss	status,2,c
  2834  002184  D052               	goto	l6038
  2835                           
  2836                           ; BSR set to: 0
  2837  002186  0EBF               	movlw	191
  2838  002188  6F94               	movwf	??_efgtoa& (0+255),b
  2839  00218A  0EFF               	movlw	255
  2840  00218C  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  2841  00218E  5193               	movf	efgtoa@c& (0+255),w,b
  2842  002190  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  2843  002192  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  2844  002194  5194               	movf	??_efgtoa& (0+255),w,b
  2845  002196  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  2846  002198  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  2847  00219A  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2848  00219C  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  2849  00219E  E106               	bnz	u7890
  2850  0021A0  0E1A               	movlw	26
  2851  0021A2  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  2852  0021A4  B0D8               	btfsc	status,0,c
  2853  0021A6  D002               	goto	u7890
  2854  0021A8  0E01               	movlw	1
  2855  0021AA  D001               	goto	u7900
  2856  0021AC                     u7890:
  2857  0021AC  0E00               	movlw	0
  2858  0021AE                     u7900:
  2859  0021AE  6F9F               	movwf	_efgtoa$1648& (0+255),b
  2860  0021B0  6BA0               	clrf	(_efgtoa$1648+1)& (0+255),b
  2861                           
  2862                           ; BSR set to: 0
  2863  0021B2  519F               	movf	_efgtoa$1648& (0+255),w,b
  2864  0021B4  11A0               	iorwf	(_efgtoa$1648+1)& (0+255),w,b
  2865  0021B6  B4D8               	btfsc	status,2,c
  2866  0021B8  D00D               	goto	l6030
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  2870  0021BA  0E2A               	movlw	low _dbuf
  2871  0021BC  25CB               	addwf	efgtoa@n& (0+255),w,b
  2872  0021BE  6F60               	movwf	strcpy@dest& (0+255),b
  2873  0021C0  0E01               	movlw	high _dbuf
  2874  0021C2  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2875  0021C4  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2876  0021C6  0EA0               	movlw	low STR_10
  2877  0021C8  6F62               	movwf	strcpy@src& (0+255),b
  2878  0021CA  0E20               	movlw	high STR_10
  2879  0021CC  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2880  0021CE  EC46  F027         	call	_strcpy	;wreg free
  2881                           
  2882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  2883  0021D2  D00C               	goto	l6032
  2884  0021D4                     l6030:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  2888  0021D4  0E2A               	movlw	low _dbuf
  2889  0021D6  25CB               	addwf	efgtoa@n& (0+255),w,b
  2890  0021D8  6F60               	movwf	strcpy@dest& (0+255),b
  2891  0021DA  0E01               	movlw	high _dbuf
  2892  0021DC  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2893  0021DE  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2894  0021E0  0EA8               	movlw	low STR_11
  2895  0021E2  6F62               	movwf	strcpy@src& (0+255),b
  2896  0021E4  0E20               	movlw	high STR_11
  2897  0021E6  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2898  0021E8  EC46  F027         	call	_strcpy	;wreg free
  2899  0021EC                     l6032:
  2900                           
  2901                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  2902  0021EC  0100               	movlb	0	; () banked
  2903  0021EE  0EFD               	movlw	253
  2904  0021F0  27B8               	addwf	efgtoa@w& (0+255),f,b
  2905  0021F2  0EFF               	movlw	255
  2906  0021F4  23B9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2907  0021F6                     l6034:
  2908                           
  2909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  2910  0021F6  0060  F234  F070   	movff	efgtoa@fp,pad@fp
  2911  0021FC  0060  F238  F071   	movff	efgtoa@fp+1,pad@fp+1
  2912  002202  0E2A               	movlw	low _dbuf
  2913  002204  0100               	movlb	0	; () banked
  2914  002206  6F72               	movwf	pad@buf& (0+255),b
  2915  002208  0E01               	movlw	high _dbuf
  2916  00220A  6F73               	movwf	(pad@buf+1)& (0+255),b
  2917  00220C  0060  F2E0  F074   	movff	efgtoa@w,pad@p
  2918  002212  0060  F2E4  F075   	movff	efgtoa@w+1,pad@p+1
  2919  002218  EC21  F024         	call	_pad	;wreg free
  2920  00221C  0060  F1C0  F08D   	movff	?_pad,?_efgtoa
  2921  002222  0060  F1C4  F08E   	movff	?_pad+1,?_efgtoa+1
  2922  002228  0012               	return	
  2923  00222A                     l6038:
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2927  00222A  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  2928  002230  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  2929  002236  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  2930  00223C  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  2931  002242  EC73  F022         	call	___fpclassifyf	;wreg free
  2932  002246  0100               	movlb	0	; () banked
  2933  002248  5160               	movf	?___fpclassifyf& (0+255),w,b
  2934  00224A  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2935  00224C  A4D8               	btfss	status,2,c
  2936  00224E  D034               	goto	l6056
  2937                           
  2938                           ; BSR set to: 0
  2939  002250  0EBF               	movlw	191
  2940  002252  6F94               	movwf	??_efgtoa& (0+255),b
  2941  002254  0EFF               	movlw	255
  2942  002256  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  2943  002258  5193               	movf	efgtoa@c& (0+255),w,b
  2944  00225A  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  2945  00225C  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  2946  00225E  5194               	movf	??_efgtoa& (0+255),w,b
  2947  002260  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  2948  002262  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  2949  002264  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2950  002266  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  2951  002268  E106               	bnz	u7930
  2952  00226A  0E1A               	movlw	26
  2953  00226C  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  2954  00226E  B0D8               	btfsc	status,0,c
  2955  002270  D002               	goto	u7930
  2956  002272  0E01               	movlw	1
  2957  002274  D001               	goto	u7940
  2958  002276                     u7930:
  2959  002276  0E00               	movlw	0
  2960  002278                     u7940:
  2961  002278  6FA1               	movwf	_efgtoa$1653& (0+255),b
  2962  00227A  6BA2               	clrf	(_efgtoa$1653+1)& (0+255),b
  2963                           
  2964                           ; BSR set to: 0
  2965  00227C  51A1               	movf	_efgtoa$1653& (0+255),w,b
  2966  00227E  11A2               	iorwf	(_efgtoa$1653+1)& (0+255),w,b
  2967  002280  B4D8               	btfsc	status,2,c
  2968  002282  D00D               	goto	l6048
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  2972  002284  0E2A               	movlw	low _dbuf
  2973  002286  25CB               	addwf	efgtoa@n& (0+255),w,b
  2974  002288  6F60               	movwf	strcpy@dest& (0+255),b
  2975  00228A  0E01               	movlw	high _dbuf
  2976  00228C  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2977  00228E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2978  002290  0EA4               	movlw	low STR_14
  2979  002292  6F62               	movwf	strcpy@src& (0+255),b
  2980  002294  0E20               	movlw	high STR_14
  2981  002296  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2982  002298  EC46  F027         	call	_strcpy	;wreg free
  2983                           
  2984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  2985  00229C  D7A7               	goto	l6032
  2986  00229E                     l6048:
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  2990  00229E  0E2A               	movlw	low _dbuf
  2991  0022A0  25CB               	addwf	efgtoa@n& (0+255),w,b
  2992  0022A2  6F60               	movwf	strcpy@dest& (0+255),b
  2993  0022A4  0E01               	movlw	high _dbuf
  2994  0022A6  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2995  0022A8  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2996  0022AA  0EAC               	movlw	low STR_15
  2997  0022AC  6F62               	movwf	strcpy@src& (0+255),b
  2998  0022AE  0E20               	movlw	high STR_15
  2999  0022B0  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3000  0022B2  EC46  F027         	call	_strcpy	;wreg free
  3001  0022B6  D79A               	goto	l6032
  3002  0022B8                     l6056:
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  3006  0022B8  0E00               	movlw	0
  3007  0022BA  6FCD               	movwf	efgtoa@u& (0+255),b
  3008  0022BC  0E00               	movlw	0
  3009  0022BE  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  3010  0022C0  0E80               	movlw	128
  3011  0022C2  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  3012  0022C4  0E3F               	movlw	63
  3013  0022C6  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  3014                           
  3015                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  3016  0022C8  0E00               	movlw	0
  3017  0022CA  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  3018  0022CC  0E00               	movlw	0
  3019  0022CE  6FC9               	movwf	efgtoa@e& (0+255),b
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  3023  0022D0  0060  F314  F060   	movff	efgtoa@g,___fleq@ff1
  3024  0022D6  0060  F318  F061   	movff	efgtoa@g+1,___fleq@ff1+1
  3025  0022DC  0060  F31C  F062   	movff	efgtoa@g+2,___fleq@ff1+2
  3026  0022E2  0060  F320  F063   	movff	efgtoa@g+3,___fleq@ff1+3
  3027  0022E8  0E00               	movlw	0
  3028  0022EA  6F64               	movwf	___fleq@ff2& (0+255),b
  3029  0022EC  0E00               	movlw	0
  3030  0022EE  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  3031  0022F0  0E00               	movlw	0
  3032  0022F2  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  3033  0022F4  0E00               	movlw	0
  3034  0022F6  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  3035  0022F8  ECD0  F025         	call	___fleq	;wreg free
  3036  0022FC  0100               	movlb	0	; () banked
  3037  0022FE  A0D8               	btfss	status,0,c
  3038  002300  D026               	goto	l6066
  3039  002302  D09C               	goto	u7980
  3040  002304                     l6062:
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  3044  002304  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  3045  00230A  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  3046  002310  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  3047  002316  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  3048  00231C  0E00               	movlw	0
  3049  00231E  6F64               	movwf	___flmul@a& (0+255),b
  3050  002320  0E00               	movlw	0
  3051  002322  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3052  002324  0E20               	movlw	32
  3053  002326  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3054  002328  0E41               	movlw	65
  3055  00232A  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3056  00232C  EC08  F016         	call	___flmul	;wreg free
  3057  002330  0060  F180  F0CD   	movff	?___flmul,efgtoa@u
  3058  002336  0060  F184  F0CE   	movff	?___flmul+1,efgtoa@u+1
  3059  00233C  0060  F188  F0CF   	movff	?___flmul+2,efgtoa@u+2
  3060  002342  0060  F18C  F0D0   	movff	?___flmul+3,efgtoa@u+3
  3061                           
  3062                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  3063  002348  0100               	movlb	0	; () banked
  3064  00234A  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  3065  00234C  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  3066  00234E                     l6066:
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  3070  00234E  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  3071  002354  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  3072  00235A  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  3073  002360  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  3074  002366  0E00               	movlw	0
  3075  002368  6F64               	movwf	___flmul@a& (0+255),b
  3076  00236A  0E00               	movlw	0
  3077  00236C  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3078  00236E  0E20               	movlw	32
  3079  002370  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3080  002372  0E41               	movlw	65
  3081  002374  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3082  002376  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  3083  00237C  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  3084  002382  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  3085  002388  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  3086  00238E  EC08  F016         	call	___flmul	;wreg free
  3087  002392  0060  F180  F07D   	movff	?___flmul,___flge@ff2
  3088  002398  0060  F184  F07E   	movff	?___flmul+1,___flge@ff2+1
  3089  00239E  0060  F188  F07F   	movff	?___flmul+2,___flge@ff2+2
  3090  0023A4  0060  F18C  F080   	movff	?___flmul+3,___flge@ff2+3
  3091  0023AA  ECEA  F022         	call	___flge	;wreg free
  3092  0023AE  0100               	movlb	0	; () banked
  3093  0023B0  A0D8               	btfss	status,0,c
  3094  0023B2  D027               	goto	l6072
  3095  0023B4  D7A7               	goto	l6062
  3096  0023B6                     l6068:
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  3100  0023B6  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3101  0023BC  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3102  0023C2  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3103  0023C8  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3104  0023CE  0E00               	movlw	0
  3105  0023D0  6F64               	movwf	___fldiv@a& (0+255),b
  3106  0023D2  0E00               	movlw	0
  3107  0023D4  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3108  0023D6  0E20               	movlw	32
  3109  0023D8  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3110  0023DA  0E41               	movlw	65
  3111  0023DC  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3112  0023DE  EC2B  F01D         	call	___fldiv	;wreg free
  3113  0023E2  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3114  0023E8  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3115  0023EE  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3116  0023F4  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3117                           
  3118                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  3119  0023FA  0100               	movlb	0	; () banked
  3120  0023FC  07C9               	decf	efgtoa@e& (0+255),f,b
  3121  0023FE  A0D8               	btfss	status,0,c
  3122  002400  07CA               	decf	(efgtoa@e+1)& (0+255),f,b
  3123  002402                     l6072:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  3127  002402  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  3128  002408  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  3129  00240E  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  3130  002414  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  3131  00241A  0060  F334  F07D   	movff	efgtoa@u,___flge@ff2
  3132  002420  0060  F338  F07E   	movff	efgtoa@u+1,___flge@ff2+1
  3133  002426  0060  F33C  F07F   	movff	efgtoa@u+2,___flge@ff2+2
  3134  00242C  0060  F340  F080   	movff	efgtoa@u+3,___flge@ff2+3
  3135  002432  ECEA  F022         	call	___flge	;wreg free
  3136  002436  0100               	movlb	0	; () banked
  3137  002438  A0D8               	btfss	status,0,c
  3138  00243A  D7BD               	goto	l6068
  3139  00243C                     u7980:
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  3143  00243C  0060  F24C  F066   	movff	efgtoa@c,tolower@c
  3144  002442  6B67               	clrf	(tolower@c+1)& (0+255),b
  3145  002444  EC08  F028         	call	_tolower	;wreg free
  3146  002448  0100               	movlb	0	; () banked
  3147  00244A  5166               	movf	?_tolower& (0+255),w,b
  3148  00244C  6FBA               	movwf	efgtoa@mode& (0+255),b
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  3152  00244E  0060  F2E8  F0B7   	movff	efgtoa@mode,efgtoa@nmode
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  3156  002454  0E67               	movlw	103
  3157  002456  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3158  002458  A4D8               	btfss	status,2,c
  3159  00245A  D01B               	goto	l6088
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  3163  00245C  51F5               	movf	_prec& (0+255),w,b
  3164  00245E  11F6               	iorwf	(_prec+1)& (0+255),w,b
  3165  002460  A4D8               	btfss	status,2,c
  3166  002462  D004               	goto	l6084
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  3170  002464  0E00               	movlw	0
  3171  002466  6FF6               	movwf	(_prec+1)& (0+255),b
  3172  002468  0E01               	movlw	1
  3173  00246A  6FF5               	movwf	_prec& (0+255),b
  3174  00246C                     l6084:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  3178  00246C  BFF6               	btfsc	(_prec+1)& (0+255),7,b
  3179  00246E  D005               	goto	u8010
  3180  002470  51F6               	movf	(_prec+1)& (0+255),w,b
  3181  002472  E108               	bnz	l538
  3182  002474  05F5               	decf	_prec& (0+255),w,b
  3183  002476  B0D8               	btfsc	status,0,c
  3184  002478  D005               	goto	l538
  3185  00247A                     u8010:
  3186                           
  3187                           ; BSR set to: 0
  3188  00247A  0E00               	movlw	0
  3189  00247C  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  3190  00247E  0E06               	movlw	6
  3191  002480  6FB5               	movwf	efgtoa@p& (0+255),b
  3192  002482  D00A               	goto	l6094
  3193  002484                     l538:
  3194                           
  3195                           ; BSR set to: 0
  3196  002484  0060  F3D4  F0B5   	movff	_prec,efgtoa@p
  3197  00248A  0060  F3D8  F0B6   	movff	_prec+1,efgtoa@p+1
  3198  002490  D003               	goto	l6094
  3199  002492                     l6088:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  3203  002492  AFF6               	btfss	(_prec+1)& (0+255),7,b
  3204  002494  D7F7               	goto	l538
  3205  002496  D7F1               	goto	u8010
  3206  002498                     l6094:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  3210  002498  0E67               	movlw	103
  3211  00249A  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3212  00249C  A4D8               	btfss	status,2,c
  3213  00249E  D024               	goto	l6104
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  3217  0024A0  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3218  0024A2  D006               	goto	u8040
  3219  0024A4  0EFC               	movlw	252
  3220  0024A6  5DC9               	subwf	efgtoa@e& (0+255),w,b
  3221  0024A8  0EFF               	movlw	255
  3222  0024AA  59CA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3223  0024AC  A0D8               	btfss	status,0,c
  3224  0024AE  D01A               	goto	l6102
  3225  0024B0                     u8040:
  3226                           
  3227                           ; BSR set to: 0
  3228  0024B0  0EFF               	movlw	255
  3229  0024B2  6F94               	movwf	??_efgtoa& (0+255),b
  3230  0024B4  0EFF               	movlw	255
  3231  0024B6  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  3232  0024B8  0060  F2D4  F096   	movff	efgtoa@p,??_efgtoa+2
  3233  0024BE  0060  F2D8  F097   	movff	efgtoa@p+1,??_efgtoa+3
  3234  0024C4  5194               	movf	??_efgtoa& (0+255),w,b
  3235  0024C6  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  3236  0024C8  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  3237  0024CA  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3238  0024CC  51C9               	movf	efgtoa@e& (0+255),w,b
  3239  0024CE  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  3240  0024D0  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  3241  0024D2  0A80               	xorlw	128
  3242  0024D4  6F98               	movwf	(??_efgtoa+4)& (0+255),b
  3243  0024D6  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  3244  0024D8  0A80               	xorlw	128
  3245  0024DA  5998               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3246  0024DC  A0D8               	btfss	status,0,c
  3247  0024DE  D002               	goto	l6102
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  3251  0024E0  0E66               	movlw	102
  3252  0024E2  D001               	goto	L2
  3253  0024E4                     l6102:
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  3257  0024E4  0E65               	movlw	101
  3258  0024E6                     L2:
  3259  0024E6  6FB7               	movwf	efgtoa@nmode& (0+255),b
  3260  0024E8                     l6104:
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  3264  0024E8  0060  F2D4  F0AD   	movff	efgtoa@p,efgtoa@m
  3265  0024EE  0060  F2D8  F0AE   	movff	efgtoa@p+1,efgtoa@m+1
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  3269  0024F4  0E67               	movlw	103
  3270  0024F6  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3271  0024F8  A4D8               	btfss	status,2,c
  3272  0024FA  D005               	goto	u8080
  3273                           
  3274                           ; BSR set to: 0
  3275  0024FC  0E66               	movlw	102
  3276  0024FE  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3277  002500  B4D8               	btfsc	status,2,c
  3278                           
  3279                           ; BSR set to: 0
  3280  002502  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3281  002504  D002               	goto	l6114
  3282  002506                     u8080:
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  3286  002506  4BAD               	infsnz	efgtoa@m& (0+255),f,b
  3287  002508  2BAE               	incf	(efgtoa@m+1)& (0+255),f,b
  3288  00250A                     l6114:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  3292  00250A  0E66               	movlw	102
  3293  00250C  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3294  00250E  A4D8               	btfss	status,2,c
  3295  002510  D016               	goto	l6124
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  3299  002512  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3300  002514  D00C               	goto	l6120
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  3304  002516  0E00               	movlw	0
  3305  002518  6FCD               	movwf	efgtoa@u& (0+255),b
  3306  00251A  0E00               	movlw	0
  3307  00251C  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  3308  00251E  0E80               	movlw	128
  3309  002520  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  3310  002522  0E3F               	movlw	63
  3311  002524  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  3312                           
  3313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  3314  002526  0E00               	movlw	0
  3315  002528  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  3316  00252A  0E00               	movlw	0
  3317  00252C  6FC9               	movwf	efgtoa@e& (0+255),b
  3318  00252E                     l6120:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  3322  00252E  0E67               	movlw	103
  3323  002530  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3324  002532  B4D8               	btfsc	status,2,c
  3325  002534  D004               	goto	l6124
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  3329  002536  51C9               	movf	efgtoa@e& (0+255),w,b
  3330  002538  27AD               	addwf	efgtoa@m& (0+255),f,b
  3331  00253A  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  3332  00253C  23AE               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3333  00253E                     l6124:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  3337  00253E  0E00               	movlw	0
  3338  002540  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3339  002542  0E00               	movlw	0
  3340  002544  6FC3               	movwf	efgtoa@i& (0+255),b
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  3344  002546  0060  F314  F0BB   	movff	efgtoa@g,efgtoa@h
  3345  00254C  0060  F318  F0BC   	movff	efgtoa@g+1,efgtoa@h+1
  3346  002552  0060  F31C  F0BD   	movff	efgtoa@g+2,efgtoa@h+2
  3347  002558  0060  F320  F0BE   	movff	efgtoa@g+3,efgtoa@h+3
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  3351  00255E  0060  F334  F099   	movff	efgtoa@u,efgtoa@ou
  3352  002564  0060  F338  F09A   	movff	efgtoa@u+1,efgtoa@ou+1
  3353  00256A  0060  F33C  F09B   	movff	efgtoa@u+2,efgtoa@ou+2
  3354  002570  0060  F340  F09C   	movff	efgtoa@u+3,efgtoa@ou+3
  3355                           
  3356                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3357  002576  D0AE               	goto	l6138
  3358  002578                     l6130:
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  3362  002578  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  3363  00257E  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  3364  002584  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  3365  00258A  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  3366  002590  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  3367  002596  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  3368  00259C  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  3369  0025A2  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  3370  0025A8  EC2B  F01D         	call	___fldiv	;wreg free
  3371  0025AC  0060  F180  F079   	movff	?___fldiv,floorf@x
  3372  0025B2  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  3373  0025B8  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  3374  0025BE  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  3375  0025C4  EC82  F01E         	call	_floorf	;wreg free
  3376  0025C8  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  3377  0025CE  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  3378  0025D4  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  3379  0025DA  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  3380                           
  3381                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  3382  0025E0  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  3383  0025E6  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  3384  0025EC  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  3385  0025F2  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  3386  0025F8  ECBB  F023         	call	___fltol	;wreg free
  3387  0025FC  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  3388  002602  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  3389                           
  3390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  3391  002608  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  3392  00260E  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  3393  002614  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  3394  00261A  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  3395  002620  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  3396  002626  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  3397  00262C  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  3398  002632  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  3399  002638  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  3400  00263E  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  3401  002644  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  3402  00264A  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  3403  002650  EC08  F016         	call	___flmul	;wreg free
  3404  002654  0060  F180  F07D   	movff	?___flmul,___flsub@a
  3405  00265A  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  3406  002660  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  3407  002666  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  3408  00266C  EC7B  F027         	call	___flsub	;wreg free
  3409  002670  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  3410  002676  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  3411  00267C  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  3412  002682  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  3413                           
  3414                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  3415  002688  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3416  00268E  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3417  002694  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3418  00269A  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3419  0026A0  0E00               	movlw	0
  3420  0026A2  0100               	movlb	0	; () banked
  3421  0026A4  6F64               	movwf	___fldiv@a& (0+255),b
  3422  0026A6  0E00               	movlw	0
  3423  0026A8  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3424  0026AA  0E20               	movlw	32
  3425  0026AC  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3426  0026AE  0E41               	movlw	65
  3427  0026B0  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3428  0026B2  EC2B  F01D         	call	___fldiv	;wreg free
  3429  0026B6  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3430  0026BC  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3431  0026C2  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3432  0026C8  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3433                           
  3434                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  3435  0026CE  0100               	movlb	0	; () banked
  3436  0026D0  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  3437  0026D2  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  3438  0026D4                     l6138:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3442  0026D4  51AD               	movf	efgtoa@m& (0+255),w,b
  3443  0026D6  5DC3               	subwf	efgtoa@i& (0+255),w,b
  3444  0026D8  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  3445  0026DA  0A80               	xorlw	128
  3446  0026DC  6F94               	movwf	??_efgtoa& (0+255),b
  3447  0026DE  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  3448  0026E0  0A80               	xorlw	128
  3449  0026E2  5994               	subwfb	??_efgtoa& (0+255),w,b
  3450  0026E4  A0D8               	btfss	status,0,c
  3451  0026E6  D748               	goto	l6130
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  3455  0026E8  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  3456  0026EE  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  3457  0026F4  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  3458  0026FA  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  3459  002700  0E00               	movlw	0
  3460  002702  6F64               	movwf	___flmul@a& (0+255),b
  3461  002704  0E00               	movlw	0
  3462  002706  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3463  002708  0EA0               	movlw	160
  3464  00270A  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3465  00270C  0E40               	movlw	64
  3466  00270E  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3467  002710  EC08  F016         	call	___flmul	;wreg free
  3468  002714  0060  F180  F0BF   	movff	?___flmul,efgtoa@l
  3469  00271A  0060  F184  F0C0   	movff	?___flmul+1,efgtoa@l+1
  3470  002720  0060  F188  F0C1   	movff	?___flmul+2,efgtoa@l+2
  3471  002726  0060  F18C  F0C2   	movff	?___flmul+3,efgtoa@l+3
  3472                           
  3473                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  3474  00272C  0060  F2EC  F079   	movff	efgtoa@h,___flge@ff1
  3475  002732  0060  F2F0  F07A   	movff	efgtoa@h+1,___flge@ff1+1
  3476  002738  0060  F2F4  F07B   	movff	efgtoa@h+2,___flge@ff1+2
  3477  00273E  0060  F2F8  F07C   	movff	efgtoa@h+3,___flge@ff1+3
  3478  002744  0060  F2FC  F07D   	movff	efgtoa@l,___flge@ff2
  3479  00274A  0060  F300  F07E   	movff	efgtoa@l+1,___flge@ff2+1
  3480  002750  0060  F304  F07F   	movff	efgtoa@l+2,___flge@ff2+2
  3481  002756  0060  F308  F080   	movff	efgtoa@l+3,___flge@ff2+3
  3482  00275C  ECEA  F022         	call	___flge	;wreg free
  3483  002760  0100               	movlb	0	; () banked
  3484  002762  A0D8               	btfss	status,0,c
  3485  002764  D01E               	goto	u8150
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  3489                           
  3490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 430:     } else {
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  3494  002766  0060  F2EC  F060   	movff	efgtoa@h,___fleq@ff1
  3495  00276C  0060  F2F0  F061   	movff	efgtoa@h+1,___fleq@ff1+1
  3496  002772  0060  F2F4  F062   	movff	efgtoa@h+2,___fleq@ff1+2
  3497  002778  0060  F2F8  F063   	movff	efgtoa@h+3,___fleq@ff1+3
  3498  00277E  0060  F2FC  F064   	movff	efgtoa@l,___fleq@ff2
  3499  002784  0060  F300  F065   	movff	efgtoa@l+1,___fleq@ff2+1
  3500  00278A  0060  F304  F066   	movff	efgtoa@l+2,___fleq@ff2+2
  3501  002790  0060  F308  F067   	movff	efgtoa@l+3,___fleq@ff2+3
  3502  002796  ECD0  F025         	call	___fleq	;wreg free
  3503  00279A  0100               	movlb	0	; () banked
  3504  00279C  B0D8               	btfsc	status,0,c
  3505                           
  3506                           ; BSR set to: 0
  3507  00279E  B1B1               	btfsc	efgtoa@d& (0+255),0,b
  3508  0027A0  D008               	goto	l6152
  3509  0027A2                     u8150:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  3513  0027A2  0E00               	movlw	0
  3514  0027A4  6FBF               	movwf	efgtoa@l& (0+255),b
  3515  0027A6  0E00               	movlw	0
  3516  0027A8  6FC0               	movwf	(efgtoa@l+1)& (0+255),b
  3517  0027AA  0E00               	movlw	0
  3518  0027AC  6FC1               	movwf	(efgtoa@l+2)& (0+255),b
  3519  0027AE  0E00               	movlw	0
  3520  0027B0  6FC2               	movwf	(efgtoa@l+3)& (0+255),b
  3521  0027B2                     l6152:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  3525  0027B2  0060  F314  F060   	movff	efgtoa@g,___fladd@b
  3526  0027B8  0060  F318  F061   	movff	efgtoa@g+1,___fladd@b+1
  3527  0027BE  0060  F31C  F062   	movff	efgtoa@g+2,___fladd@b+2
  3528  0027C4  0060  F320  F063   	movff	efgtoa@g+3,___fladd@b+3
  3529  0027CA  0060  F2FC  F064   	movff	efgtoa@l,___fladd@a
  3530  0027D0  0060  F300  F065   	movff	efgtoa@l+1,___fladd@a+1
  3531  0027D6  0060  F304  F066   	movff	efgtoa@l+2,___fladd@a+2
  3532  0027DC  0060  F308  F067   	movff	efgtoa@l+3,___fladd@a+3
  3533  0027E2  EC86  F01B         	call	___fladd	;wreg free
  3534  0027E6  0060  F180  F0BB   	movff	?___fladd,efgtoa@h
  3535  0027EC  0060  F184  F0BC   	movff	?___fladd+1,efgtoa@h+1
  3536  0027F2  0060  F188  F0BD   	movff	?___fladd+2,efgtoa@h+2
  3537  0027F8  0060  F18C  F0BE   	movff	?___fladd+3,efgtoa@h+3
  3538                           
  3539                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  3540  0027FE  0060  F264  F0CD   	movff	efgtoa@ou,efgtoa@u
  3541  002804  0060  F268  F0CE   	movff	efgtoa@ou+1,efgtoa@u+1
  3542  00280A  0060  F26C  F0CF   	movff	efgtoa@ou+2,efgtoa@u+2
  3543  002810  0060  F270  F0D0   	movff	efgtoa@ou+3,efgtoa@u+3
  3544                           
  3545                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  3546  002816  0E65               	movlw	101
  3547  002818  0100               	movlb	0	; () banked
  3548  00281A  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3549  00281C  B4D8               	btfsc	status,2,c
  3550  00281E  D007               	goto	l6160
  3551                           
  3552                           ; BSR set to: 0
  3553  002820  0060  F324  F0AF   	movff	efgtoa@e,efgtoa@ne
  3554  002826  0060  F328  F0B0   	movff	efgtoa@e+1,efgtoa@ne+1
  3555  00282C  D004               	goto	l564
  3556  00282E                     l6160:
  3557                           
  3558                           ; BSR set to: 0
  3559  00282E  0E00               	movlw	0
  3560  002830  6FB0               	movwf	(efgtoa@ne+1)& (0+255),b
  3561  002832  0E00               	movlw	0
  3562  002834  6FAF               	movwf	efgtoa@ne& (0+255),b
  3563  002836                     l564:
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  3567  002836  0E00               	movlw	0
  3568  002838  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  3569  00283A  0E00               	movlw	0
  3570  00283C  6FAB               	movwf	efgtoa@pp& (0+255),b
  3571                           
  3572                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  3573  00283E  0E00               	movlw	0
  3574  002840  6FAA               	movwf	(efgtoa@t+1)& (0+255),b
  3575  002842  0E00               	movlw	0
  3576  002844  6FA9               	movwf	efgtoa@t& (0+255),b
  3577                           
  3578                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  3579  002846  0E00               	movlw	0
  3580  002848  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3581  00284A  0E00               	movlw	0
  3582  00284C  6FC3               	movwf	efgtoa@i& (0+255),b
  3583                           
  3584                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3585  00284E  D0FA               	goto	l6210
  3586  002850                     l6162:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  3590  002850  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  3591  002856  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  3592  00285C  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  3593  002862  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  3594  002868  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  3595  00286E  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  3596  002874  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  3597  00287A  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  3598  002880  EC2B  F01D         	call	___fldiv	;wreg free
  3599  002884  0060  F180  F079   	movff	?___fldiv,floorf@x
  3600  00288A  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  3601  002890  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  3602  002896  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  3603  00289C  EC82  F01E         	call	_floorf	;wreg free
  3604  0028A0  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  3605  0028A6  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  3606  0028AC  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  3607  0028B2  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  3608                           
  3609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  3610  0028B8  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  3611  0028BE  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  3612  0028C4  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  3613  0028CA  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  3614  0028D0  ECBB  F023         	call	___fltol	;wreg free
  3615  0028D4  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  3616  0028DA  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  3617                           
  3618                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3619  0028E0  B839               	btfsc	_flags,4,c
  3620  0028E2  D00D               	goto	l6174
  3621  0028E4  0100               	movlb	0	; () banked
  3622  0028E6  51B1               	movf	efgtoa@d& (0+255),w,b
  3623  0028E8  11B2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3624  0028EA  A4D8               	btfss	status,2,c
  3625  0028EC  D008               	goto	l6174
  3626                           
  3627                           ; BSR set to: 0
  3628  0028EE  0E67               	movlw	103
  3629  0028F0  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  3630  0028F2  B4D8               	btfsc	status,2,c
  3631                           
  3632                           ; BSR set to: 0
  3633  0028F4  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3634  0028F6  D003               	goto	l6174
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  3638  0028F8  4BA9               	infsnz	efgtoa@t& (0+255),f,b
  3639  0028FA  2BAA               	incf	(efgtoa@t+1)& (0+255),f,b
  3640                           
  3641                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  3642  0028FC  D03A               	goto	l6202
  3643  0028FE                     l6174:
  3644                           
  3645                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  3646  0028FE  0100               	movlb	0	; () banked
  3647  002900  51AB               	movf	efgtoa@pp& (0+255),w,b
  3648  002902  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3649  002904  B4D8               	btfsc	status,2,c
  3650                           
  3651                           ; BSR set to: 0
  3652  002906  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3653  002908  D022               	goto	l6194
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  3657  00290A  0E2A               	movlw	low _dbuf
  3658  00290C  25CB               	addwf	efgtoa@n& (0+255),w,b
  3659  00290E  6ED9               	movwf	fsr2l,c
  3660  002910  0E01               	movlw	high _dbuf
  3661  002912  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3662  002914  6EDA               	movwf	fsr2h,c
  3663  002916  0E2E               	movlw	46
  3664  002918  6EDF               	movwf	indf2,c
  3665                           
  3666                           ; BSR set to: 0
  3667  00291A  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3668  00291C  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  3672  00291E  07B8               	decf	efgtoa@w& (0+255),f,b
  3673  002920  A0D8               	btfss	status,0,c
  3674  002922  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  3678  002924  0E00               	movlw	0
  3679  002926  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  3680  002928  0E01               	movlw	1
  3681  00292A  6FAB               	movwf	efgtoa@pp& (0+255),b
  3682  00292C  D010               	goto	l6194
  3683  00292E                     l6186:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  3687  00292E  0E2A               	movlw	low _dbuf
  3688  002930  25CB               	addwf	efgtoa@n& (0+255),w,b
  3689  002932  6ED9               	movwf	fsr2l,c
  3690  002934  0E01               	movlw	high _dbuf
  3691  002936  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3692  002938  6EDA               	movwf	fsr2h,c
  3693  00293A  0E30               	movlw	48
  3694  00293C  6EDF               	movwf	indf2,c
  3695                           
  3696                           ; BSR set to: 0
  3697  00293E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3698  002940  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  3702  002942  07B8               	decf	efgtoa@w& (0+255),f,b
  3703  002944  A0D8               	btfss	status,0,c
  3704  002946  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  3708  002948  07A9               	decf	efgtoa@t& (0+255),f,b
  3709  00294A  A0D8               	btfss	status,0,c
  3710  00294C  07AA               	decf	(efgtoa@t+1)& (0+255),f,b
  3711  00294E                     l6194:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  3715  00294E  51A9               	movf	efgtoa@t& (0+255),w,b
  3716  002950  11AA               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3717  002952  A4D8               	btfss	status,2,c
  3718  002954  D7EC               	goto	l6186
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  3722  002956  0E2A               	movlw	low _dbuf
  3723  002958  25CB               	addwf	efgtoa@n& (0+255),w,b
  3724  00295A  6ED9               	movwf	fsr2l,c
  3725  00295C  0E01               	movlw	high _dbuf
  3726  00295E  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3727  002960  6EDA               	movwf	fsr2h,c
  3728  002962  51B1               	movf	efgtoa@d& (0+255),w,b
  3729  002964  0F30               	addlw	48
  3730  002966  6EDF               	movwf	indf2,c
  3731                           
  3732                           ; BSR set to: 0
  3733  002968  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3734  00296A  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  3738  00296C  07B8               	decf	efgtoa@w& (0+255),f,b
  3739  00296E  A0D8               	btfss	status,0,c
  3740  002970  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3741  002972                     l6202:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  3745  002972  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  3746  002978  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  3747  00297E  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  3748  002984  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  3749  00298A  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  3750  002990  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  3751  002996  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  3752  00299C  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  3753  0029A2  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  3754  0029A8  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  3755  0029AE  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  3756  0029B4  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  3757  0029BA  EC08  F016         	call	___flmul	;wreg free
  3758  0029BE  0060  F180  F07D   	movff	?___flmul,___flsub@a
  3759  0029C4  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  3760  0029CA  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  3761  0029D0  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  3762  0029D6  EC7B  F027         	call	___flsub	;wreg free
  3763  0029DA  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  3764  0029E0  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  3765  0029E6  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  3766  0029EC  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  3767                           
  3768                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  3769  0029F2  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  3770  0029F8  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  3771  0029FE  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  3772  002A04  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  3773  002A0A  0E00               	movlw	0
  3774  002A0C  0100               	movlb	0	; () banked
  3775  002A0E  6F64               	movwf	___fldiv@a& (0+255),b
  3776  002A10  0E00               	movlw	0
  3777  002A12  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3778  002A14  0E20               	movlw	32
  3779  002A16  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3780  002A18  0E41               	movlw	65
  3781  002A1A  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3782  002A1C  EC2B  F01D         	call	___fldiv	;wreg free
  3783  002A20  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  3784  002A26  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  3785  002A2C  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  3786  002A32  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  3787                           
  3788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  3789  002A38  0100               	movlb	0	; () banked
  3790  002A3A  07AF               	decf	efgtoa@ne& (0+255),f,b
  3791  002A3C  A0D8               	btfss	status,0,c
  3792  002A3E  07B0               	decf	(efgtoa@ne+1)& (0+255),f,b
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  3796  002A40  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  3797  002A42  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  3798  002A44                     l6210:
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3802  002A44  51AD               	movf	efgtoa@m& (0+255),w,b
  3803  002A46  5DC3               	subwf	efgtoa@i& (0+255),w,b
  3804  002A48  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  3805  002A4A  0A80               	xorlw	128
  3806  002A4C  6F94               	movwf	??_efgtoa& (0+255),b
  3807  002A4E  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  3808  002A50  0A80               	xorlw	128
  3809  002A52  5994               	subwfb	??_efgtoa& (0+255),w,b
  3810  002A54  B0D8               	btfsc	status,0,c
  3811  002A56  D008               	goto	u8250
  3812                           
  3813                           ; BSR set to: 0
  3814  002A58  BFCC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3815  002A5A  D6FA               	goto	l6162
  3816  002A5C  51CC               	movf	(efgtoa@n+1)& (0+255),w,b
  3817  002A5E  E104               	bnz	u8250
  3818  002A60  0E4B               	movlw	75
  3819  002A62  5DCB               	subwf	efgtoa@n& (0+255),w,b
  3820  002A64  A0D8               	btfss	status,0,c
  3821  002A66  D6F4               	goto	l6162
  3822  002A68                     u8250:
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  3826  002A68  51AB               	movf	efgtoa@pp& (0+255),w,b
  3827  002A6A  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3828  002A6C  B4D8               	btfsc	status,2,c
  3829                           
  3830                           ; BSR set to: 0
  3831  002A6E  A839               	btfss	_flags,4,c
  3832  002A70  D00A               	goto	l6222
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  3836  002A72  0E2A               	movlw	low _dbuf
  3837  002A74  25CB               	addwf	efgtoa@n& (0+255),w,b
  3838  002A76  6ED9               	movwf	fsr2l,c
  3839  002A78  0E01               	movlw	high _dbuf
  3840  002A7A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3841  002A7C  6EDA               	movwf	fsr2h,c
  3842  002A7E  0E2E               	movlw	46
  3843  002A80  6EDF               	movwf	indf2,c
  3844                           
  3845                           ; BSR set to: 0
  3846  002A82  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  3847  002A84  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  3848  002A86                     l6222:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  3852  002A86  0E2A               	movlw	low _dbuf
  3853  002A88  25CB               	addwf	efgtoa@n& (0+255),w,b
  3854  002A8A  6ED9               	movwf	fsr2l,c
  3855  002A8C  0E01               	movlw	high _dbuf
  3856  002A8E  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3857  002A90  6EDA               	movwf	fsr2h,c
  3858  002A92  0E00               	movlw	0
  3859  002A94  6EDF               	movwf	indf2,c
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  3863  002A96  0E65               	movlw	101
  3864  002A98  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  3865  002A9A  A4D8               	btfss	status,2,c
  3866  002A9C  EFFB  F010         	goto	l6034
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  3870  002AA0  0E00               	movlw	0
  3871  002AA2  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  3872  002AA4  0E4F               	movlw	79
  3873  002AA6  6FC3               	movwf	efgtoa@i& (0+255),b
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  3877  002AA8  0E2A               	movlw	low _dbuf
  3878  002AAA  25C3               	addwf	efgtoa@i& (0+255),w,b
  3879  002AAC  6ED9               	movwf	fsr2l,c
  3880  002AAE  0E01               	movlw	high _dbuf
  3881  002AB0  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3882  002AB2  6EDA               	movwf	fsr2h,c
  3883  002AB4  0E00               	movlw	0
  3884  002AB6  6EDF               	movwf	indf2,c
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  3888  002AB8  0E00               	movlw	0
  3889  002ABA  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3890  002ABC  0E00               	movlw	0
  3891  002ABE  6FB3               	movwf	efgtoa@sign& (0+255),b
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  3895  002AC0  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3896  002AC2  D008               	goto	l6238
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  3900  002AC4  0E00               	movlw	0
  3901  002AC6  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3902  002AC8  0E01               	movlw	1
  3903  002ACA  6FB3               	movwf	efgtoa@sign& (0+255),b
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  3907  002ACC  6DC9               	negf	efgtoa@e& (0+255),b
  3908  002ACE  1FCA               	comf	(efgtoa@e+1)& (0+255),f,b
  3909  002AD0  B0D8               	btfsc	status,0,c
  3910  002AD2  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  3911  002AD4                     l6238:
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  3915  002AD4  0E00               	movlw	0
  3916  002AD6  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  3917  002AD8  0E02               	movlw	2
  3918  002ADA  6FB5               	movwf	efgtoa@p& (0+255),b
  3919                           
  3920                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3921  002ADC  D032               	goto	l6250
  3922  002ADE                     l6240:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  3926  002ADE  07C3               	decf	efgtoa@i& (0+255),f,b
  3927  002AE0  A0D8               	btfss	status,0,c
  3928  002AE2  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  3932  002AE4  0E2A               	movlw	low _dbuf
  3933  002AE6  25C3               	addwf	efgtoa@i& (0+255),w,b
  3934  002AE8  6ED9               	movwf	fsr2l,c
  3935  002AEA  0E01               	movlw	high _dbuf
  3936  002AEC  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3937  002AEE  6EDA               	movwf	fsr2h,c
  3938  002AF0  0060  F324  F060   	movff	efgtoa@e,___awmod@dividend
  3939  002AF6  0060  F328  F061   	movff	efgtoa@e+1,___awmod@dividend+1
  3940  002AFC  0E00               	movlw	0
  3941  002AFE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3942  002B00  0E0A               	movlw	10
  3943  002B02  6F62               	movwf	___awmod@divisor& (0+255),b
  3944  002B04  EC9E  F026         	call	___awmod	;wreg free
  3945  002B08  0100               	movlb	0	; () banked
  3946  002B0A  5160               	movf	?___awmod& (0+255),w,b
  3947  002B0C  0F30               	addlw	48
  3948  002B0E  6EDF               	movwf	indf2,c
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  3952  002B10  0060  F324  F060   	movff	efgtoa@e,___awdiv@dividend
  3953  002B16  0060  F328  F061   	movff	efgtoa@e+1,___awdiv@dividend+1
  3954  002B1C  0E00               	movlw	0
  3955  002B1E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3956  002B20  0E0A               	movlw	10
  3957  002B22  6F62               	movwf	___awdiv@divisor& (0+255),b
  3958  002B24  EC16  F026         	call	___awdiv	;wreg free
  3959  002B28  0060  F180  F0C9   	movff	?___awdiv,efgtoa@e
  3960  002B2E  0060  F184  F0CA   	movff	?___awdiv+1,efgtoa@e+1
  3961                           
  3962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  3963  002B34  0100               	movlb	0	; () banked
  3964  002B36  07B5               	decf	efgtoa@p& (0+255),f,b
  3965  002B38  A0D8               	btfss	status,0,c
  3966  002B3A  07B6               	decf	(efgtoa@p+1)& (0+255),f,b
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  3970  002B3C  07B8               	decf	efgtoa@w& (0+255),f,b
  3971  002B3E  A0D8               	btfss	status,0,c
  3972  002B40  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  3973  002B42                     l6250:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3977  002B42  51C9               	movf	efgtoa@e& (0+255),w,b
  3978  002B44  11CA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3979  002B46  A4D8               	btfss	status,2,c
  3980  002B48  D7CA               	goto	l6240
  3981                           
  3982                           ; BSR set to: 0
  3983  002B4A  BFB6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3984  002B4C  D005               	goto	u8310
  3985  002B4E  51B6               	movf	(efgtoa@p+1)& (0+255),w,b
  3986  002B50  E1C6               	bnz	l6240
  3987  002B52  05B5               	decf	efgtoa@p& (0+255),w,b
  3988  002B54  B0D8               	btfsc	status,0,c
  3989  002B56  D7C3               	goto	l6240
  3990  002B58                     u8310:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  3994  002B58  07C3               	decf	efgtoa@i& (0+255),f,b
  3995  002B5A  A0D8               	btfss	status,0,c
  3996  002B5C  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  4000  002B5E  51B3               	movf	efgtoa@sign& (0+255),w,b
  4001  002B60  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4002  002B62  A4D8               	btfss	status,2,c
  4003  002B64  D004               	goto	l6260
  4004                           
  4005                           ; BSR set to: 0
  4006  002B66  0E00               	movlw	0
  4007  002B68  6FA4               	movwf	(_efgtoa$1657+1)& (0+255),b
  4008  002B6A  0E2B               	movlw	43
  4009  002B6C  D003               	goto	L3
  4010  002B6E                     l6260:
  4011                           
  4012                           ; BSR set to: 0
  4013  002B6E  0E00               	movlw	0
  4014  002B70  6FA4               	movwf	(_efgtoa$1657+1)& (0+255),b
  4015  002B72  0E2D               	movlw	45
  4016  002B74                     L3:
  4017  002B74  6FA3               	movwf	_efgtoa$1657& (0+255),b
  4018                           
  4019                           ; BSR set to: 0
  4020  002B76  0E2A               	movlw	low _dbuf
  4021  002B78  25C3               	addwf	efgtoa@i& (0+255),w,b
  4022  002B7A  6ED9               	movwf	fsr2l,c
  4023  002B7C  0E01               	movlw	high _dbuf
  4024  002B7E  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4025  002B80  6EDA               	movwf	fsr2h,c
  4026  002B82  0060  F28F  FFDF   	movff	_efgtoa$1657,indf2
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  4030  002B88  07B8               	decf	efgtoa@w& (0+255),f,b
  4031  002B8A  A0D8               	btfss	status,0,c
  4032  002B8C  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4036  002B8E  07C3               	decf	efgtoa@i& (0+255),f,b
  4037  002B90  A0D8               	btfss	status,0,c
  4038  002B92  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  4039                           
  4040                           ; BSR set to: 0
  4041  002B94  0EBF               	movlw	191
  4042  002B96  6F94               	movwf	??_efgtoa& (0+255),b
  4043  002B98  0EFF               	movlw	255
  4044  002B9A  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  4045  002B9C  5193               	movf	efgtoa@c& (0+255),w,b
  4046  002B9E  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  4047  002BA0  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  4048  002BA2  5194               	movf	??_efgtoa& (0+255),w,b
  4049  002BA4  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  4050  002BA6  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  4051  002BA8  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4052  002BAA  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  4053  002BAC  E106               	bnz	u8330
  4054  002BAE  0E1A               	movlw	26
  4055  002BB0  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  4056  002BB2  B0D8               	btfsc	status,0,c
  4057  002BB4  D002               	goto	u8330
  4058  002BB6  0E01               	movlw	1
  4059  002BB8  D001               	goto	u8340
  4060  002BBA                     u8330:
  4061  002BBA  0E00               	movlw	0
  4062  002BBC                     u8340:
  4063  002BBC  6FA7               	movwf	_efgtoa$1659& (0+255),b
  4064  002BBE  6BA8               	clrf	(_efgtoa$1659+1)& (0+255),b
  4065                           
  4066                           ; BSR set to: 0
  4067  002BC0  51A7               	movf	_efgtoa$1659& (0+255),w,b
  4068  002BC2  11A8               	iorwf	(_efgtoa$1659+1)& (0+255),w,b
  4069  002BC4  A4D8               	btfss	status,2,c
  4070  002BC6  D004               	goto	l6276
  4071                           
  4072                           ; BSR set to: 0
  4073  002BC8  0E00               	movlw	0
  4074  002BCA  6FA6               	movwf	(_efgtoa$1658+1)& (0+255),b
  4075  002BCC  0E65               	movlw	101
  4076  002BCE  D003               	goto	L4
  4077  002BD0                     l6276:
  4078                           
  4079                           ; BSR set to: 0
  4080  002BD0  0E00               	movlw	0
  4081  002BD2  6FA6               	movwf	(_efgtoa$1658+1)& (0+255),b
  4082  002BD4  0E45               	movlw	69
  4083  002BD6                     L4:
  4084  002BD6  6FA5               	movwf	_efgtoa$1658& (0+255),b
  4085                           
  4086                           ; BSR set to: 0
  4087  002BD8  0E2A               	movlw	low _dbuf
  4088  002BDA  25C3               	addwf	efgtoa@i& (0+255),w,b
  4089  002BDC  6ED9               	movwf	fsr2l,c
  4090  002BDE  0E01               	movlw	high _dbuf
  4091  002BE0  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4092  002BE2  6EDA               	movwf	fsr2h,c
  4093  002BE4  0060  F297  FFDF   	movff	_efgtoa$1658,indf2
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  4097  002BEA  07B8               	decf	efgtoa@w& (0+255),f,b
  4098  002BEC  A0D8               	btfss	status,0,c
  4099  002BEE  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  4103  002BF0  0E2A               	movlw	low _dbuf
  4104  002BF2  25CB               	addwf	efgtoa@n& (0+255),w,b
  4105  002BF4  6F60               	movwf	strcpy@dest& (0+255),b
  4106  002BF6  0E01               	movlw	high _dbuf
  4107  002BF8  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4108  002BFA  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  4109  002BFC  0E2A               	movlw	low _dbuf
  4110  002BFE  25C3               	addwf	efgtoa@i& (0+255),w,b
  4111  002C00  6F62               	movwf	strcpy@src& (0+255),b
  4112  002C02  0E01               	movlw	high _dbuf
  4113  002C04  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4114  002C06  6F63               	movwf	(strcpy@src+1)& (0+255),b
  4115  002C08  EC46  F027         	call	_strcpy	;wreg free
  4116  002C0C  EFFB  F010         	goto	l6034
  4117  002C10                     __end_of_efgtoa:
  4118                           	opt callstack 0
  4119                           
  4120 ;; *************** function _tolower *****************
  4121 ;; Defined at:
  4122 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  c               2    6[BANK0 ] int 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  2    6[BANK0 ] int 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2, status,0
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4137 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4138 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4139 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4140 ;;Total ram usage:        8 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    3
  4143 ;; This function calls:
  4144 ;;		_isupper
  4145 ;; This function is called by:
  4146 ;;		_efgtoa
  4147 ;;		_vfpfcnvrt
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text8
  4152  005010                     __ptext8:
  4153                           	opt callstack 0
  4154  005010                     _tolower:
  4155                           	opt callstack 23
  4156                           
  4157                           ;incstack = 0
  4158  005010  0EBF               	movlw	191
  4159  005012  0100               	movlb	0	; () banked
  4160  005014  6F68               	movwf	??_tolower& (0+255),b
  4161  005016  0EFF               	movlw	255
  4162  005018  6F69               	movwf	(??_tolower+1)& (0+255),b
  4163  00501A  0060  F198  F06A   	movff	tolower@c,??_tolower+2
  4164  005020  0060  F19C  F06B   	movff	tolower@c+1,??_tolower+3
  4165  005026  5168               	movf	??_tolower& (0+255),w,b
  4166  005028  276A               	addwf	(??_tolower+2)& (0+255),f,b
  4167  00502A  5169               	movf	(??_tolower+1)& (0+255),w,b
  4168  00502C  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  4169  00502E  516B               	movf	(??_tolower+3)& (0+255),w,b
  4170  005030  E106               	bnz	u7010
  4171  005032  0E1A               	movlw	26
  4172  005034  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  4173  005036  B0D8               	btfsc	status,0,c
  4174  005038  D002               	goto	u7010
  4175  00503A  0E01               	movlw	1
  4176  00503C  D001               	goto	u7020
  4177  00503E                     u7010:
  4178  00503E  0E00               	movlw	0
  4179  005040                     u7020:
  4180  005040  6F6C               	movwf	_tolower$2231& (0+255),b
  4181  005042  6B6D               	clrf	(_tolower$2231+1)& (0+255),b
  4182                           
  4183                           ; BSR set to: 0
  4184  005044  516C               	movf	_tolower$2231& (0+255),w,b
  4185  005046  116D               	iorwf	(_tolower$2231+1)& (0+255),w,b
  4186  005048  B4D8               	btfsc	status,2,c
  4187  00504A  D006               	goto	l1374
  4188                           
  4189                           ; BSR set to: 0
  4190  00504C  0E20               	movlw	32
  4191  00504E  1166               	iorwf	tolower@c& (0+255),w,b
  4192  005050  6F66               	movwf	?_tolower& (0+255),b
  4193  005052  5167               	movf	(tolower@c+1)& (0+255),w,b
  4194  005054  6F67               	movwf	(?_tolower+1)& (0+255),b
  4195  005056  0012               	return	
  4196  005058                     l1374:
  4197                           
  4198                           ; BSR set to: 0
  4199  005058  0060  F198  F066   	movff	tolower@c,?_tolower
  4200  00505E  0060  F19C  F067   	movff	tolower@c+1,?_tolower+1
  4201                           
  4202                           ; BSR set to: 0
  4203  005064  0012               	return		;funcret
  4204  005066                     __end_of_tolower:
  4205                           	opt callstack 0
  4206                           
  4207 ;; *************** function _isupper *****************
  4208 ;; Defined at:
  4209 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  c               2    0[BANK0 ] int 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  2    0[BANK0 ] int 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4225 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4226 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4227 ;;Total ram usage:        6 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    2
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_efgtoa
  4234 ;;		_vfpfcnvrt
  4235 ;;		_tolower
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text9
  4240  0051AE                     __ptext9:
  4241                           	opt callstack 0
  4242  0051AE                     _isupper:
  4243                           	opt callstack 23
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;incstack = 0
  4247  0051AE  0EBF               	movlw	191
  4248  0051B0  0100               	movlb	0	; () banked
  4249  0051B2  6F62               	movwf	??_isupper& (0+255),b
  4250  0051B4  0EFF               	movlw	255
  4251  0051B6  6F63               	movwf	(??_isupper+1)& (0+255),b
  4252  0051B8  0060  F180  F064   	movff	isupper@c,??_isupper+2
  4253  0051BE  0060  F184  F065   	movff	isupper@c+1,??_isupper+3
  4254  0051C4  5162               	movf	??_isupper& (0+255),w,b
  4255  0051C6  2764               	addwf	(??_isupper+2)& (0+255),f,b
  4256  0051C8  5163               	movf	(??_isupper+1)& (0+255),w,b
  4257  0051CA  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  4258  0051CC  5165               	movf	(??_isupper+3)& (0+255),w,b
  4259  0051CE  E106               	bnz	u6470
  4260  0051D0  0E1A               	movlw	26
  4261  0051D2  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  4262  0051D4  B0D8               	btfsc	status,0,c
  4263  0051D6  D002               	goto	u6470
  4264  0051D8  0E01               	movlw	1
  4265  0051DA  D001               	goto	u6480
  4266  0051DC                     u6470:
  4267  0051DC  0E00               	movlw	0
  4268  0051DE                     u6480:
  4269  0051DE  6F60               	movwf	?_isupper& (0+255),b
  4270  0051E0  6B61               	clrf	(?_isupper+1)& (0+255),b
  4271                           
  4272                           ; BSR set to: 0
  4273  0051E2  0012               	return		;funcret
  4274  0051E4                     __end_of_isupper:
  4275                           	opt callstack 0
  4276                           
  4277 ;; *************** function _strcpy *****************
  4278 ;; Defined at:
  4279 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  4282 ;;		 -> dbuf(80), 
  4283 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  4284 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  4285 ;;		 -> dbuf(80), 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;  d               2    8[BANK0 ] PTR unsigned char 
  4288 ;;		 -> dbuf(80), 
  4289 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  4290 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  4291 ;;		 -> dbuf(80), 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  2    0[BANK0 ] PTR unsigned char 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4301 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4302 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4303 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4304 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4305 ;;Total ram usage:       10 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    2
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_efgtoa
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text10
  4316  004E8C                     __ptext10:
  4317                           	opt callstack 0
  4318  004E8C                     _strcpy:
  4319                           	opt callstack 23
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;incstack = 0
  4323  004E8C  0060  F188  F066   	movff	strcpy@src,strcpy@s
  4324  004E92  0060  F18C  F067   	movff	strcpy@src+1,strcpy@s+1
  4325  004E98  0060  F180  F068   	movff	strcpy@dest,strcpy@d
  4326  004E9E  0060  F184  F069   	movff	strcpy@dest+1,strcpy@d+1
  4327  004EA4                     l5506:
  4328  004EA4  0100               	movlb	0	; () banked
  4329  004EA6  5166               	movf	strcpy@s& (0+255),w,b
  4330  004EA8  6F64               	movwf	??_strcpy& (0+255),b
  4331  004EAA  5167               	movf	(strcpy@s+1)& (0+255),w,b
  4332  004EAC  6F65               	movwf	(??_strcpy+1)& (0+255),b
  4333  004EAE  4B66               	infsnz	strcpy@s& (0+255),f,b
  4334  004EB0  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  4335  004EB2  0060  F193  FFF6   	movff	??_strcpy,tblptrl
  4336  004EB8  0060  F197  FFF7   	movff	??_strcpy+1,tblptrh
  4337  004EBE  0E00               	movlw	low (__smallconst shr (0+16))
  4338  004EC0  6EF8               	movwf	tblptru,c
  4339  004EC2  0060  F1A3  FFD9   	movff	strcpy@d,fsr2l
  4340  004EC8  0060  F1A7  FFDA   	movff	strcpy@d+1,fsr2h
  4341  004ECE  4B68               	infsnz	strcpy@d& (0+255),f,b
  4342  004ED0  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  4343  004ED2  0E1F               	movlw	(high __ramtop+-1)
  4344  004ED4  64F7               	cpfsgt	tblptrh,c
  4345  004ED6  D003               	bra	u6997
  4346  004ED8  0008               	tblrd		*
  4347  004EDA  50F5               	movf	tablat,w,c
  4348  004EDC  D007               	bra	u6990
  4349  004EDE                     u6997:
  4350  004EDE  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4351  004EE4  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4352  004EEA  50E7               	movf	indf1,w,c
  4353  004EEC                     u6990:
  4354  004EEC  6EDF               	movwf	indf2,c
  4355  004EEE  50DF               	movf	indf2,w,c
  4356  004EF0  B4D8               	btfsc	status,2,c
  4357  004EF2  0012               	return	
  4358  004EF4  D7D7               	goto	l5506
  4359  004EF6                     __end_of_strcpy:
  4360                           	opt callstack 0
  4361                           
  4362 ;; *************** function _pad *****************
  4363 ;; Defined at:
  4364 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  4367 ;;		 -> sprintf@f(6), 
  4368 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  4369 ;;		 -> dbuf(80), 
  4370 ;;  p               2   20[BANK0 ] int 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  w               2   25[BANK0 ] int 
  4373 ;;  i               2   23[BANK0 ] int 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  2   16[BANK0 ] int 
  4376 ;; Registers used:
  4377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4383 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4384 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4386 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4387 ;;Total ram usage:       11 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    5
  4390 ;; This function calls:
  4391 ;;		_fputc
  4392 ;;		_fputs
  4393 ;;		_strlen
  4394 ;; This function is called by:
  4395 ;;		_efgtoa
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text11
  4400  004842                     __ptext11:
  4401                           	opt callstack 0
  4402  004842                     _pad:
  4403                           	opt callstack 20
  4404                           
  4405                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  4406                           
  4407                           ;incstack = 0
  4408  004842  A039               	btfss	_flags,0,c
  4409  004844  D00E               	goto	l5464
  4410                           
  4411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  4412  004846  0060  F1C8  F069   	movff	pad@buf,fputs@s
  4413  00484C  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
  4414  004852  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
  4415  004858  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
  4416  00485E  EC5F  F028         	call	_fputs	;wreg free
  4417  004862                     l5464:
  4418                           
  4419                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4420  004862  0100               	movlb	0	; () banked
  4421  004864  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  4422  004866  D007               	goto	l5468
  4423                           
  4424                           ; BSR set to: 0
  4425  004868  0060  F1D0  F079   	movff	pad@p,pad@w
  4426  00486E  0060  F1D4  F07A   	movff	pad@p+1,pad@w+1
  4427  004874  D004               	goto	l497
  4428  004876                     l5468:
  4429                           
  4430                           ; BSR set to: 0
  4431  004876  0E00               	movlw	0
  4432  004878  6F7A               	movwf	(pad@w+1)& (0+255),b
  4433  00487A  0E00               	movlw	0
  4434  00487C  6F79               	movwf	pad@w& (0+255),b
  4435  00487E                     l497:
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4439  00487E  0E00               	movlw	0
  4440  004880  6F78               	movwf	(pad@i+1)& (0+255),b
  4441  004882  0E00               	movlw	0
  4442  004884  6F77               	movwf	pad@i& (0+255),b
  4443                           
  4444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4445  004886  D00F               	goto	l5474
  4446  004888                     l5470:
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4450  004888  0E00               	movlw	0
  4451  00488A  6F61               	movwf	(fputc@c+1)& (0+255),b
  4452  00488C  0E20               	movlw	32
  4453  00488E  6F60               	movwf	fputc@c& (0+255),b
  4454  004890  0060  F1C0  F062   	movff	pad@fp,fputc@fp
  4455  004896  0060  F1C4  F063   	movff	pad@fp+1,fputc@fp+1
  4456  00489C  ECD6  F024         	call	_fputc	;wreg free
  4457                           
  4458                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4459  0048A0  0100               	movlb	0	; () banked
  4460  0048A2  4B77               	infsnz	pad@i& (0+255),f,b
  4461  0048A4  2B78               	incf	(pad@i+1)& (0+255),f,b
  4462  0048A6                     l5474:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4466  0048A6  5179               	movf	pad@w& (0+255),w,b
  4467  0048A8  5D77               	subwf	pad@i& (0+255),w,b
  4468  0048AA  5178               	movf	(pad@i+1)& (0+255),w,b
  4469  0048AC  0A80               	xorlw	128
  4470  0048AE  6F76               	movwf	??_pad& (0+255),b
  4471  0048B0  517A               	movf	(pad@w+1)& (0+255),w,b
  4472  0048B2  0A80               	xorlw	128
  4473  0048B4  5976               	subwfb	??_pad& (0+255),w,b
  4474  0048B6  A0D8               	btfss	status,0,c
  4475  0048B8  D7E7               	goto	l5470
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4479  0048BA  B039               	btfsc	_flags,0,c
  4480  0048BC  D00E               	goto	l5478
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4484  0048BE  0060  F1C8  F069   	movff	pad@buf,fputs@s
  4485  0048C4  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
  4486  0048CA  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
  4487  0048D0  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
  4488  0048D6  EC5F  F028         	call	_fputs	;wreg free
  4489  0048DA                     l5478:
  4490                           
  4491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  4492  0048DA  0060  F1C8  F060   	movff	pad@buf,strlen@s
  4493  0048E0  0060  F1CC  F061   	movff	pad@buf+1,strlen@s+1
  4494  0048E6  ECF2  F028         	call	_strlen	;wreg free
  4495  0048EA  0100               	movlb	0	; () banked
  4496  0048EC  5179               	movf	pad@w& (0+255),w,b
  4497  0048EE  2560               	addwf	?_strlen& (0+255),w,b
  4498  0048F0  6F70               	movwf	?_pad& (0+255),b
  4499  0048F2  517A               	movf	(pad@w+1)& (0+255),w,b
  4500  0048F4  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  4501  0048F6  6F71               	movwf	(?_pad+1)& (0+255),b
  4502                           
  4503                           ; BSR set to: 0
  4504  0048F8  0012               	return		;funcret
  4505  0048FA                     __end_of_pad:
  4506                           	opt callstack 0
  4507                           
  4508 ;; *************** function _strlen *****************
  4509 ;; Defined at:
  4510 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4513 ;;		 -> dbuf(80), 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  4516 ;;		 -> dbuf(80), 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  2    0[BANK0 ] unsigned int 
  4519 ;; Registers used:
  4520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4527 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4529 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4530 ;;Total ram usage:        4 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    2
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_pad
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text12
  4541  0051E4                     __ptext12:
  4542                           	opt callstack 0
  4543  0051E4                     _strlen:
  4544                           	opt callstack 22
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;incstack = 0
  4548  0051E4  0060  F180  F062   	movff	strlen@s,strlen@a
  4549  0051EA  0060  F184  F063   	movff	strlen@s+1,strlen@a+1
  4550  0051F0  D003               	goto	l5248
  4551  0051F2                     l5246:
  4552  0051F2  0100               	movlb	0	; () banked
  4553  0051F4  4B60               	infsnz	strlen@s& (0+255),f,b
  4554  0051F6  2B61               	incf	(strlen@s+1)& (0+255),f,b
  4555  0051F8                     l5248:
  4556  0051F8  0060  F183  FFD9   	movff	strlen@s,fsr2l
  4557  0051FE  0060  F187  FFDA   	movff	strlen@s+1,fsr2h
  4558  005204  50DF               	movf	indf2,w,c
  4559  005206  A4D8               	btfss	status,2,c
  4560  005208  D7F4               	goto	l5246
  4561  00520A  0100               	movlb	0	; () banked
  4562  00520C  5162               	movf	strlen@a& (0+255),w,b
  4563  00520E  5D60               	subwf	strlen@s& (0+255),w,b
  4564  005210  6F60               	movwf	?_strlen& (0+255),b
  4565  005212  5163               	movf	(strlen@a+1)& (0+255),w,b
  4566  005214  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  4567  005216  6F61               	movwf	(?_strlen+1)& (0+255),b
  4568                           
  4569                           ; BSR set to: 0
  4570  005218  0012               	return		;funcret
  4571  00521A                     __end_of_strlen:
  4572                           	opt callstack 0
  4573                           
  4574 ;; *************** function _fputs *****************
  4575 ;; Defined at:
  4576 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4579 ;;		 -> dbuf(80), 
  4580 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4581 ;;		 -> sprintf@f(6), 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  i               2   14[BANK0 ] int 
  4584 ;;  c               1   13[BANK0 ] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  2    9[BANK0 ] int 
  4587 ;; Registers used:
  4588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4594 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4595 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4597 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4598 ;;Total ram usage:        7 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    4
  4601 ;; This function calls:
  4602 ;;		_fputc
  4603 ;; This function is called by:
  4604 ;;		_pad
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text13
  4609  0050BE                     __ptext13:
  4610                           	opt callstack 0
  4611  0050BE                     _fputs:
  4612                           	opt callstack 20
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;incstack = 0
  4616  0050BE  0E00               	movlw	0
  4617  0050C0  0100               	movlb	0	; () banked
  4618  0050C2  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4619  0050C4  0E00               	movlw	0
  4620  0050C6  6F6E               	movwf	fputs@i& (0+255),b
  4621  0050C8  D00F               	goto	l5242
  4622  0050CA                     l5238:
  4623                           
  4624                           ; BSR set to: 0
  4625  0050CA  0060  F1B4  F060   	movff	fputs@c,fputc@c
  4626  0050D0  6B61               	clrf	(fputc@c+1)& (0+255),b
  4627  0050D2  0060  F1AC  F062   	movff	fputs@fp,fputc@fp
  4628  0050D8  0060  F1B0  F063   	movff	fputs@fp+1,fputc@fp+1
  4629  0050DE  ECD6  F024         	call	_fputc	;wreg free
  4630  0050E2  0100               	movlb	0	; () banked
  4631  0050E4  4B6E               	infsnz	fputs@i& (0+255),f,b
  4632  0050E6  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4633  0050E8                     l5242:
  4634                           
  4635                           ; BSR set to: 0
  4636  0050E8  516E               	movf	fputs@i& (0+255),w,b
  4637  0050EA  2569               	addwf	fputs@s& (0+255),w,b
  4638  0050EC  6ED9               	movwf	fsr2l,c
  4639  0050EE  516F               	movf	(fputs@i+1)& (0+255),w,b
  4640  0050F0  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4641  0050F2  6EDA               	movwf	fsr2h,c
  4642  0050F4  50DF               	movf	indf2,w,c
  4643  0050F6  6F6D               	movwf	fputs@c& (0+255),b
  4644  0050F8  516D               	movf	fputs@c& (0+255),w,b
  4645  0050FA  B4D8               	btfsc	status,2,c
  4646  0050FC  0012               	return	
  4647  0050FE  D7E5               	goto	l5238
  4648  005100                     __end_of_fputs:
  4649                           	opt callstack 0
  4650                           
  4651 ;; *************** function _fputc *****************
  4652 ;; Defined at:
  4653 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  c               2    0[BANK0 ] int 
  4656 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4657 ;;		 -> sprintf@f(6), 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  2    0[BANK0 ] int 
  4662 ;; Registers used:
  4663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4671 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4672 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4673 ;;Total ram usage:        9 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    3
  4676 ;; This function calls:
  4677 ;;		_putch
  4678 ;; This function is called by:
  4679 ;;		_pad
  4680 ;;		_vfpfcnvrt
  4681 ;;		_fputs
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text14
  4686  0049AC                     __ptext14:
  4687                           	opt callstack 0
  4688  0049AC                     _fputc:
  4689                           	opt callstack 23
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;incstack = 0
  4693  0049AC  0100               	movlb	0	; () banked
  4694  0049AE  5162               	movf	fputc@fp& (0+255),w,b
  4695  0049B0  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4696  0049B2  B4D8               	btfsc	status,2,c
  4697  0049B4  D004               	goto	u6420
  4698                           
  4699                           ; BSR set to: 0
  4700  0049B6  5162               	movf	fputc@fp& (0+255),w,b
  4701  0049B8  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4702  0049BA  A4D8               	btfss	status,2,c
  4703  0049BC  D004               	goto	l5228
  4704  0049BE                     u6420:
  4705                           
  4706                           ; BSR set to: 0
  4707  0049BE  5160               	movf	fputc@c& (0+255),w,b
  4708  0049C0  ECA8  F029         	call	_putch
  4709  0049C4  0012               	return	
  4710  0049C6                     l5228:
  4711                           
  4712                           ; BSR set to: 0
  4713  0049C6  EE20 F004          	lfsr	2,4
  4714  0049CA  5162               	movf	fputc@fp& (0+255),w,b
  4715  0049CC  26D9               	addwf	fsr2l,f,c
  4716  0049CE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4717  0049D0  22DA               	addwfc	fsr2h,f,c
  4718  0049D2  50DE               	movf	postinc2,w,c
  4719  0049D4  10DE               	iorwf	postinc2,w,c
  4720  0049D6  B4D8               	btfsc	status,2,c
  4721  0049D8  D016               	goto	u6440
  4722                           
  4723                           ; BSR set to: 0
  4724  0049DA  EE20 F004          	lfsr	2,4
  4725  0049DE  5162               	movf	fputc@fp& (0+255),w,b
  4726  0049E0  26D9               	addwf	fsr2l,f,c
  4727  0049E2  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4728  0049E4  22DA               	addwfc	fsr2h,f,c
  4729  0049E6  EE10 F002          	lfsr	1,2
  4730  0049EA  5162               	movf	fputc@fp& (0+255),w,b
  4731  0049EC  26E1               	addwf	fsr1l,f,c
  4732  0049EE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4733  0049F0  22E2               	addwfc	fsr1h,f,c
  4734  0049F2  50DE               	movf	postinc2,w,c
  4735  0049F4  5CE6               	subwf	postinc1,w,c
  4736  0049F6  50E6               	movf	postinc1,w,c
  4737  0049F8  0A80               	xorlw	128
  4738  0049FA  6F68               	movwf	(??_fputc+4)& (0+255),b
  4739  0049FC  50DE               	movf	postinc2,w,c
  4740  0049FE  0A80               	xorlw	128
  4741  004A00  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4742  004A02  B0D8               	btfsc	status,0,c
  4743  004A04  0012               	return	
  4744  004A06                     u6440:
  4745                           
  4746                           ; BSR set to: 0
  4747  004A06  EE20 F002          	lfsr	2,2
  4748  004A0A  5162               	movf	fputc@fp& (0+255),w,b
  4749  004A0C  26D9               	addwf	fsr2l,f,c
  4750  004A0E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4751  004A10  22DA               	addwfc	fsr2h,f,c
  4752  004A12  006F FF78  F064    	movff	postinc2,??_fputc
  4753  004A18  006F FF74  F065    	movff	postdec2,??_fputc+1
  4754  004A1E  0060  F18B  FFD9   	movff	fputc@fp,fsr2l
  4755  004A24  0060  F18F  FFDA   	movff	fputc@fp+1,fsr2h
  4756  004A2A  006F FF78  F066    	movff	postinc2,??_fputc+2
  4757  004A30  006F FF74  F067    	movff	postdec2,??_fputc+3
  4758  004A36  5164               	movf	??_fputc& (0+255),w,b
  4759  004A38  2566               	addwf	(??_fputc+2)& (0+255),w,b
  4760  004A3A  6ED9               	movwf	fsr2l,c
  4761  004A3C  5165               	movf	(??_fputc+1)& (0+255),w,b
  4762  004A3E  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  4763  004A40  6EDA               	movwf	fsr2h,c
  4764  004A42  0060  F183  FFDF   	movff	fputc@c,indf2
  4765  004A48  EE20 F002          	lfsr	2,2
  4766  004A4C  5162               	movf	fputc@fp& (0+255),w,b
  4767  004A4E  26D9               	addwf	fsr2l,f,c
  4768  004A50  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4769  004A52  22DA               	addwfc	fsr2h,f,c
  4770  004A54  2ADE               	incf	postinc2,f,c
  4771  004A56  0E00               	movlw	0
  4772  004A58  22DD               	addwfc	postdec2,f,c
  4773  004A5A  0012               	return		;funcret
  4774  004A5C                     __end_of_fputc:
  4775                           	opt callstack 0
  4776                           
  4777 ;; *************** function _putch *****************
  4778 ;; Defined at:
  4779 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  c               1    wreg     unsigned char 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  c               1    0[COMRAM] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4797 ;;Total ram usage:        0 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    2
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_fputc
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text15
  4808  005350                     __ptext15:
  4809                           	opt callstack 0
  4810  005350                     _putch:
  4811                           	opt callstack 23
  4812                           
  4813                           ;incstack = 0
  4814  005350  0012               	return		;funcret
  4815  005352                     __end_of_putch:
  4816                           	opt callstack 0
  4817                           
  4818 ;; *************** function _floorf *****************
  4819 ;; Defined at:
  4820 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  x               4   25[BANK0 ] float 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  u               4   41[BANK0 ] struct .
  4825 ;;  m               4   35[BANK0 ] unsigned long 
  4826 ;;  e               2   39[BANK0 ] int 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  4   25[BANK0 ] float 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4836 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4837 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4838 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4839 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4840 ;;Total ram usage:       20 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    2
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_efgtoa
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text16
  4851  003D04                     __ptext16:
  4852                           	opt callstack 0
  4853  003D04                     _floorf:
  4854                           	opt callstack 23
  4855                           
  4856                           ;incstack = 0
  4857  003D04  0060  F0B4  F089   	movff	floorf@F524,floorf@u
  4858  003D0A  0060  F0B8  F08A   	movff	floorf@F524+1,floorf@u+1
  4859  003D10  0060  F0BC  F08B   	movff	floorf@F524+2,floorf@u+2
  4860  003D16  0060  F0C0  F08C   	movff	floorf@F524+3,floorf@u+3
  4861  003D1C  0060  F1E4  F089   	movff	floorf@x,floorf@u
  4862  003D22  0060  F1E8  F08A   	movff	floorf@x+1,floorf@u+1
  4863  003D28  0060  F1EC  F08B   	movff	floorf@x+2,floorf@u+2
  4864  003D2E  0060  F1F0  F08C   	movff	floorf@x+3,floorf@u+3
  4865  003D34  0E81               	movlw	129
  4866  003D36  0100               	movlb	0	; () banked
  4867  003D38  6F7D               	movwf	??_floorf& (0+255),b
  4868  003D3A  0EFF               	movlw	255
  4869  003D3C  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4870  003D3E  0060  F224  F07F   	movff	floorf@u,??_floorf+2
  4871  003D44  0060  F228  F080   	movff	floorf@u+1,??_floorf+3
  4872  003D4A  0060  F22C  F081   	movff	floorf@u+2,??_floorf+4
  4873  003D50  0060  F230  F082   	movff	floorf@u+3,??_floorf+5
  4874  003D56  0E18               	movlw	24
  4875  003D58  D005               	goto	u7040
  4876  003D5A                     u7045:
  4877  003D5A  90D8               	bcf	status,0,c
  4878  003D5C  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  4879  003D5E  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4880  003D60  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4881  003D62  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4882  003D64                     u7040:
  4883  003D64  2EE8               	decfsz	wreg,f,c
  4884  003D66  D7F9               	goto	u7045
  4885  003D68  517F               	movf	(??_floorf+2)& (0+255),w,b
  4886  003D6A  257D               	addwf	??_floorf& (0+255),w,b
  4887  003D6C  6F87               	movwf	floorf@e& (0+255),b
  4888  003D6E  0E00               	movlw	0
  4889  003D70  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  4890  003D72  6F88               	movwf	(floorf@e+1)& (0+255),b
  4891  003D74  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4892  003D76  D013               	goto	l5524
  4893  003D78  5188               	movf	(floorf@e+1)& (0+255),w,b
  4894  003D7A  E104               	bnz	u7050
  4895  003D7C  0E17               	movlw	23
  4896  003D7E  5D87               	subwf	floorf@e& (0+255),w,b
  4897  003D80  A0D8               	btfss	status,0,c
  4898  003D82  D00D               	goto	l5524
  4899  003D84                     u7050:
  4900                           
  4901                           ; BSR set to: 0
  4902  003D84  0060  F1E4  F079   	movff	floorf@x,?_floorf
  4903  003D8A  0060  F1E8  F07A   	movff	floorf@x+1,?_floorf+1
  4904  003D90  0060  F1EC  F07B   	movff	floorf@x+2,?_floorf+2
  4905  003D96  0060  F1F0  F07C   	movff	floorf@x+3,?_floorf+3
  4906  003D9C  0012               	return	
  4907  003D9E                     l5524:
  4908                           
  4909                           ; BSR set to: 0
  4910  003D9E  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4911  003DA0  D068               	goto	l5534
  4912                           
  4913                           ; BSR set to: 0
  4914  003DA2  0060  F21C  F07D   	movff	floorf@e,??_floorf
  4915  003DA8  0EFF               	movlw	255
  4916  003DAA  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4917  003DAC  0EFF               	movlw	255
  4918  003DAE  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4919  003DB0  0E7F               	movlw	127
  4920  003DB2  6F80               	movwf	(??_floorf+3)& (0+255),b
  4921  003DB4  0E00               	movlw	0
  4922  003DB6  6F81               	movwf	(??_floorf+4)& (0+255),b
  4923  003DB8                     u7075:
  4924  003DB8  677D               	tstfsz	??_floorf& (0+255),b
  4925  003DBA  D001               	goto	u7076
  4926  003DBC  D007               	goto	u7077
  4927  003DBE                     u7076:
  4928  003DBE  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  4929  003DC0  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4930  003DC2  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4931  003DC4  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4932  003DC6  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4933  003DC8  2F7D               	decfsz	??_floorf& (0+255),f,b
  4934  003DCA  D7F6               	goto	u7075
  4935  003DCC                     u7077:
  4936  003DCC  0060  F1F8  F083   	movff	??_floorf+1,floorf@m
  4937  003DD2  0060  F1FC  F084   	movff	??_floorf+2,floorf@m+1
  4938  003DD8  0060  F200  F085   	movff	??_floorf+3,floorf@m+2
  4939  003DDE  0060  F204  F086   	movff	??_floorf+4,floorf@m+3
  4940  003DE4  0100               	movlb	0	; () banked
  4941  003DE6  5183               	movf	floorf@m& (0+255),w,b
  4942  003DE8  1589               	andwf	floorf@u& (0+255),w,b
  4943  003DEA  6F7D               	movwf	??_floorf& (0+255),b
  4944  003DEC  5184               	movf	(floorf@m+1)& (0+255),w,b
  4945  003DEE  158A               	andwf	(floorf@u+1)& (0+255),w,b
  4946  003DF0  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4947  003DF2  5185               	movf	(floorf@m+2)& (0+255),w,b
  4948  003DF4  158B               	andwf	(floorf@u+2)& (0+255),w,b
  4949  003DF6  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4950  003DF8  5186               	movf	(floorf@m+3)& (0+255),w,b
  4951  003DFA  158C               	andwf	(floorf@u+3)& (0+255),w,b
  4952  003DFC  6F80               	movwf	(??_floorf+3)& (0+255),b
  4953  003DFE  517D               	movf	??_floorf& (0+255),w,b
  4954  003E00  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4955  003E02  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4956  003E04  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4957  003E06  B4D8               	btfsc	status,2,c
  4958  003E08  D7BD               	goto	u7050
  4959                           
  4960                           ; BSR set to: 0
  4961  003E0A  0060  F224  F07D   	movff	floorf@u,??_floorf
  4962  003E10  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  4963  003E16  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  4964  003E1C  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  4965  003E22  0E20               	movlw	32
  4966  003E24  D005               	goto	u7090
  4967  003E26                     u7095:
  4968  003E26  90D8               	bcf	status,0,c
  4969  003E28  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4970  003E2A  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4971  003E2C  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4972  003E2E  337D               	rrcf	??_floorf& (0+255),f,b
  4973  003E30                     u7090:
  4974  003E30  2EE8               	decfsz	wreg,f,c
  4975  003E32  D7F9               	goto	u7095
  4976  003E34  517D               	movf	??_floorf& (0+255),w,b
  4977  003E36  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4978  003E38  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4979  003E3A  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4980  003E3C  B4D8               	btfsc	status,2,c
  4981  003E3E  D008               	goto	l1308
  4982                           
  4983                           ; BSR set to: 0
  4984  003E40  5183               	movf	floorf@m& (0+255),w,b
  4985  003E42  2789               	addwf	floorf@u& (0+255),f,b
  4986  003E44  5184               	movf	(floorf@m+1)& (0+255),w,b
  4987  003E46  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  4988  003E48  5185               	movf	(floorf@m+2)& (0+255),w,b
  4989  003E4A  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  4990  003E4C  5186               	movf	(floorf@m+3)& (0+255),w,b
  4991  003E4E  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  4992  003E50                     l1308:
  4993                           
  4994                           ; BSR set to: 0
  4995  003E50  1D83               	comf	floorf@m& (0+255),w,b
  4996  003E52  6F7D               	movwf	??_floorf& (0+255),b
  4997  003E54  1D84               	comf	(floorf@m+1)& (0+255),w,b
  4998  003E56  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4999  003E58  1D85               	comf	(floorf@m+2)& (0+255),w,b
  5000  003E5A  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5001  003E5C  1D86               	comf	(floorf@m+3)& (0+255),w,b
  5002  003E5E  6F80               	movwf	(??_floorf+3)& (0+255),b
  5003  003E60  517D               	movf	??_floorf& (0+255),w,b
  5004  003E62  1789               	andwf	floorf@u& (0+255),f,b
  5005  003E64  517E               	movf	(??_floorf+1)& (0+255),w,b
  5006  003E66  178A               	andwf	(floorf@u+1)& (0+255),f,b
  5007  003E68  517F               	movf	(??_floorf+2)& (0+255),w,b
  5008  003E6A  178B               	andwf	(floorf@u+2)& (0+255),f,b
  5009  003E6C  5180               	movf	(??_floorf+3)& (0+255),w,b
  5010  003E6E  178C               	andwf	(floorf@u+3)& (0+255),f,b
  5011  003E70  D03A               	goto	l5542
  5012  003E72                     l5534:
  5013                           
  5014                           ; BSR set to: 0
  5015  003E72  0060  F224  F07D   	movff	floorf@u,??_floorf
  5016  003E78  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  5017  003E7E  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  5018  003E84  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  5019  003E8A  0E20               	movlw	32
  5020  003E8C  D005               	goto	u7110
  5021  003E8E                     u7115:
  5022  003E8E  90D8               	bcf	status,0,c
  5023  003E90  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  5024  003E92  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  5025  003E94  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  5026  003E96  337D               	rrcf	??_floorf& (0+255),f,b
  5027  003E98                     u7110:
  5028  003E98  2EE8               	decfsz	wreg,f,c
  5029  003E9A  D7F9               	goto	u7115
  5030  003E9C  517D               	movf	??_floorf& (0+255),w,b
  5031  003E9E  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5032  003EA0  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5033  003EA2  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5034  003EA4  A4D8               	btfss	status,2,c
  5035  003EA6  D008               	goto	l5538
  5036                           
  5037                           ; BSR set to: 0
  5038  003EA8  0E00               	movlw	0
  5039  003EAA  6F89               	movwf	floorf@u& (0+255),b
  5040  003EAC  0E00               	movlw	0
  5041  003EAE  6F8A               	movwf	(floorf@u+1)& (0+255),b
  5042  003EB0  0E00               	movlw	0
  5043  003EB2  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5044  003EB4  0E00               	movlw	0
  5045  003EB6  D016               	goto	L5
  5046  003EB8                     l5538:
  5047                           
  5048                           ; BSR set to: 0
  5049  003EB8  90D8               	bcf	status,0,c
  5050  003EBA  3589               	rlcf	floorf@u& (0+255),w,b
  5051  003EBC  6F7D               	movwf	??_floorf& (0+255),b
  5052  003EBE  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  5053  003EC0  6F7E               	movwf	(??_floorf+1)& (0+255),b
  5054  003EC2  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  5055  003EC4  6F7F               	movwf	(??_floorf+2)& (0+255),b
  5056  003EC6  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  5057  003EC8  6F80               	movwf	(??_floorf+3)& (0+255),b
  5058  003ECA  517D               	movf	??_floorf& (0+255),w,b
  5059  003ECC  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5060  003ECE  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5061  003ED0  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5062  003ED2  B4D8               	btfsc	status,2,c
  5063  003ED4  D008               	goto	l5542
  5064                           
  5065                           ; BSR set to: 0
  5066  003ED6  0E00               	movlw	0
  5067  003ED8  6F89               	movwf	floorf@u& (0+255),b
  5068  003EDA  0E00               	movlw	0
  5069  003EDC  6F8A               	movwf	(floorf@u+1)& (0+255),b
  5070  003EDE  0E80               	movlw	128
  5071  003EE0  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5072  003EE2  0EBF               	movlw	191
  5073  003EE4                     L5:
  5074  003EE4  6F8C               	movwf	(floorf@u+3)& (0+255),b
  5075  003EE6                     l5542:
  5076                           
  5077                           ; BSR set to: 0
  5078  003EE6  0060  F224  F079   	movff	floorf@u,?_floorf
  5079  003EEC  0060  F228  F07A   	movff	floorf@u+1,?_floorf+1
  5080  003EF2  0060  F22C  F07B   	movff	floorf@u+2,?_floorf+2
  5081  003EF8  0060  F230  F07C   	movff	floorf@u+3,?_floorf+3
  5082                           
  5083                           ; BSR set to: 0
  5084  003EFE  0012               	return		;funcret
  5085  003F00                     __end_of_floorf:
  5086                           	opt callstack 0
  5087                           
  5088 ;; *************** function ___fpclassifyf *****************
  5089 ;; Defined at:
  5090 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  x               4    0[BANK0 ] float 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  u               4   10[BANK0 ] struct .
  5095 ;;  e               2    8[BANK0 ] int 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  2    0[BANK0 ] int 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5106 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5107 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5108 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5109 ;;Total ram usage:       14 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    2
  5112 ;; This function calls:
  5113 ;;		Nothing
  5114 ;; This function is called by:
  5115 ;;		_efgtoa
  5116 ;; This function uses a non-reentrant model
  5117 ;;
  5118                           
  5119                           	psect	text17
  5120  0044E6                     __ptext17:
  5121                           	opt callstack 0
  5122  0044E6                     ___fpclassifyf:
  5123                           	opt callstack 23
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;incstack = 0
  5127  0044E6  0060  F0C4  F06A   	movff	___fpclassifyf@F463,___fpclassifyf@u
  5128  0044EC  0060  F0C8  F06B   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5129  0044F2  0060  F0CC  F06C   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5130  0044F8  0060  F0D0  F06D   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5131  0044FE  0060  F180  F06A   	movff	___fpclassifyf@x,___fpclassifyf@u
  5132  004504  0060  F184  F06B   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5133  00450A  0060  F188  F06C   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5134  004510  0060  F18C  F06D   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5135  004516  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  5136  00451C  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5137  004522  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5138  004528  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5139  00452E  0E18               	movlw	24
  5140  004530  D006               	goto	u6920
  5141  004532                     u6925:
  5142  004532  0100               	movlb	0	; () banked
  5143  004534  90D8               	bcf	status,0,c
  5144  004536  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5145  004538  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5146  00453A  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5147  00453C  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5148  00453E                     u6920:
  5149  00453E  2EE8               	decfsz	wreg,f,c
  5150  004540  D7F8               	goto	u6925
  5151  004542  5164               	movf	??___fpclassifyf& (0+255),w,b
  5152  004544  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5153  004546  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5154  004548  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5155  00454A  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5156  00454C  A4D8               	btfss	status,2,c
  5157  00454E  D019               	goto	l5494
  5158                           
  5159                           ; BSR set to: 0
  5160  004550  90D8               	bcf	status,0,c
  5161  004552  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5162  004554  6F64               	movwf	??___fpclassifyf& (0+255),b
  5163  004556  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5164  004558  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5165  00455A  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5166  00455C  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5167  00455E  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5168  004560  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5169  004562  5164               	movf	??___fpclassifyf& (0+255),w,b
  5170  004564  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5171  004566  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5172  004568  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5173  00456A  A4D8               	btfss	status,2,c
  5174  00456C  D005               	goto	l5490
  5175                           
  5176                           ; BSR set to: 0
  5177  00456E  0E00               	movlw	0
  5178  004570  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5179  004572  0E02               	movlw	2
  5180  004574  6F60               	movwf	?___fpclassifyf& (0+255),b
  5181  004576  0012               	return	
  5182  004578                     l5490:
  5183                           
  5184                           ; BSR set to: 0
  5185  004578  0E00               	movlw	0
  5186  00457A  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5187  00457C  0E03               	movlw	3
  5188  00457E  6F60               	movwf	?___fpclassifyf& (0+255),b
  5189  004580  0012               	return	
  5190  004582                     l5494:
  5191                           
  5192                           ; BSR set to: 0
  5193  004582  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5194  004584  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5195  004586  A4D8               	btfss	status,2,c
  5196  004588  D020               	goto	l5500
  5197                           
  5198                           ; BSR set to: 0
  5199  00458A  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  5200  004590  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5201  004596  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5202  00459C  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5203  0045A2  0E09               	movlw	9
  5204  0045A4                     u6965:
  5205  0045A4  90D8               	bcf	status,0,c
  5206  0045A6  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5207  0045A8  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5208  0045AA  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5209  0045AC  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5210  0045AE  2EE8               	decfsz	wreg,f,c
  5211  0045B0  D7F9               	goto	u6965
  5212  0045B2  5164               	movf	??___fpclassifyf& (0+255),w,b
  5213  0045B4  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5214  0045B6  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5215  0045B8  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5216  0045BA  A4D8               	btfss	status,2,c
  5217  0045BC  D002               	goto	u6970
  5218  0045BE  0E01               	movlw	1
  5219  0045C0  D001               	goto	u6980
  5220  0045C2                     u6970:
  5221  0045C2  0E00               	movlw	0
  5222  0045C4                     u6980:
  5223  0045C4  6F60               	movwf	?___fpclassifyf& (0+255),b
  5224  0045C6  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5225  0045C8  0012               	return	
  5226  0045CA                     l5500:
  5227                           
  5228                           ; BSR set to: 0
  5229  0045CA  0E00               	movlw	0
  5230  0045CC  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5231  0045CE  0E04               	movlw	4
  5232  0045D0  6F60               	movwf	?___fpclassifyf& (0+255),b
  5233                           
  5234                           ; BSR set to: 0
  5235  0045D2  0012               	return		;funcret
  5236  0045D4                     __end_of___fpclassifyf:
  5237                           	opt callstack 0
  5238                           
  5239 ;; *************** function ___fltol *****************
  5240 ;; Defined at:
  5241 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  f1              4    0[BANK0 ] int 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  exp1            1    9[BANK0 ] unsigned char 
  5246 ;;  sign1           1    8[BANK0 ] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  4    0[BANK0 ] long 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5256 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5257 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5258 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5259 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5260 ;;Total ram usage:       10 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    2
  5263 ;; This function calls:
  5264 ;;		Nothing
  5265 ;; This function is called by:
  5266 ;;		_efgtoa
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text18
  5271  004776                     __ptext18:
  5272                           	opt callstack 0
  5273  004776                     ___fltol:
  5274                           	opt callstack 23
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;incstack = 0
  5278  004776  0100               	movlb	0	; () banked
  5279  004778  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5280  00477A  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5281  00477C  6F69               	movwf	___fltol@exp1& (0+255),b
  5282  00477E  5169               	movf	___fltol@exp1& (0+255),w,b
  5283  004780  A4D8               	btfss	status,2,c
  5284  004782  D009               	goto	l5952
  5285  004784                     u7770:
  5286                           
  5287                           ; BSR set to: 0
  5288  004784  0E00               	movlw	0
  5289  004786  6F60               	movwf	?___fltol& (0+255),b
  5290  004788  0E00               	movlw	0
  5291  00478A  6F61               	movwf	(?___fltol+1)& (0+255),b
  5292  00478C  0E00               	movlw	0
  5293  00478E  6F62               	movwf	(?___fltol+2)& (0+255),b
  5294  004790  0E00               	movlw	0
  5295  004792  6F63               	movwf	(?___fltol+3)& (0+255),b
  5296  004794  0012               	return	
  5297  004796                     l5952:
  5298                           
  5299                           ; BSR set to: 0
  5300  004796  0060  F180  F064   	movff	___fltol@f1,??___fltol
  5301  00479C  0060  F184  F065   	movff	___fltol@f1+1,??___fltol+1
  5302  0047A2  0060  F188  F066   	movff	___fltol@f1+2,??___fltol+2
  5303  0047A8  0060  F18C  F067   	movff	___fltol@f1+3,??___fltol+3
  5304  0047AE  0E20               	movlw	32
  5305  0047B0  D005               	goto	u7780
  5306  0047B2                     u7785:
  5307  0047B2  90D8               	bcf	status,0,c
  5308  0047B4  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  5309  0047B6  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  5310  0047B8  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  5311  0047BA  3364               	rrcf	??___fltol& (0+255),f,b
  5312  0047BC                     u7780:
  5313  0047BC  2EE8               	decfsz	wreg,f,c
  5314  0047BE  D7F9               	goto	u7785
  5315  0047C0  5164               	movf	??___fltol& (0+255),w,b
  5316  0047C2  6F68               	movwf	___fltol@sign1& (0+255),b
  5317                           
  5318                           ; BSR set to: 0
  5319  0047C4  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  5320                           
  5321                           ; BSR set to: 0
  5322  0047C6  0EFF               	movlw	255
  5323  0047C8  1760               	andwf	___fltol@f1& (0+255),f,b
  5324  0047CA  0EFF               	movlw	255
  5325  0047CC  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  5326  0047CE  0EFF               	movlw	255
  5327  0047D0  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  5328  0047D2  0E00               	movlw	0
  5329  0047D4  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  5330                           
  5331                           ; BSR set to: 0
  5332  0047D6  0E96               	movlw	150
  5333  0047D8  5F69               	subwf	___fltol@exp1& (0+255),f,b
  5334                           
  5335                           ; BSR set to: 0
  5336  0047DA  AF69               	btfss	___fltol@exp1& (0+255),7,b
  5337  0047DC  D00D               	goto	l5972
  5338                           
  5339                           ; BSR set to: 0
  5340  0047DE  5169               	movf	___fltol@exp1& (0+255),w,b
  5341  0047E0  0A80               	xorlw	128
  5342  0047E2  0F97               	addlw	151
  5343  0047E4  A0D8               	btfss	status,0,c
  5344  0047E6  D7CE               	goto	u7770
  5345  0047E8                     l5968:
  5346                           
  5347                           ; BSR set to: 0
  5348  0047E8  90D8               	bcf	status,0,c
  5349  0047EA  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5350  0047EC  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5351  0047EE  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5352  0047F0  3360               	rrcf	___fltol@f1& (0+255),f,b
  5353                           
  5354                           ; BSR set to: 0
  5355  0047F2  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  5356  0047F4  D7F9               	goto	l5968
  5357  0047F6  D00D               	goto	u7820
  5358  0047F8                     l5972:
  5359                           
  5360                           ; BSR set to: 0
  5361  0047F8  0E1F               	movlw	31
  5362  0047FA  6569               	cpfsgt	___fltol@exp1& (0+255),b
  5363  0047FC  D007               	goto	l5980
  5364  0047FE  D7C2               	goto	u7770
  5365  004800                     l5978:
  5366                           
  5367                           ; BSR set to: 0
  5368  004800  90D8               	bcf	status,0,c
  5369  004802  3760               	rlcf	___fltol@f1& (0+255),f,b
  5370  004804  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5371  004806  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5372  004808  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5373  00480A  0769               	decf	___fltol@exp1& (0+255),f,b
  5374  00480C                     l5980:
  5375                           
  5376                           ; BSR set to: 0
  5377  00480C  5169               	movf	___fltol@exp1& (0+255),w,b
  5378  00480E  A4D8               	btfss	status,2,c
  5379  004810  D7F7               	goto	l5978
  5380  004812                     u7820:
  5381                           
  5382                           ; BSR set to: 0
  5383  004812  5168               	movf	___fltol@sign1& (0+255),w,b
  5384  004814  B4D8               	btfsc	status,2,c
  5385  004816  D008               	goto	l5986
  5386                           
  5387                           ; BSR set to: 0
  5388  004818  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  5389  00481A  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  5390  00481C  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  5391  00481E  6D60               	negf	___fltol@f1& (0+255),b
  5392  004820  0E00               	movlw	0
  5393  004822  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5394  004824  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5395  004826  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5396  004828                     l5986:
  5397                           
  5398                           ; BSR set to: 0
  5399  004828  0060  F180  F060   	movff	___fltol@f1,?___fltol
  5400  00482E  0060  F184  F061   	movff	___fltol@f1+1,?___fltol+1
  5401  004834  0060  F188  F062   	movff	___fltol@f1+2,?___fltol+2
  5402  00483A  0060  F18C  F063   	movff	___fltol@f1+3,?___fltol+3
  5403                           
  5404                           ; BSR set to: 0
  5405  004840  0012               	return		;funcret
  5406  004842                     __end_of___fltol:
  5407                           	opt callstack 0
  5408                           
  5409 ;; *************** function ___flsub *****************
  5410 ;; Defined at:
  5411 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  b               4   25[BANK0 ] long 
  5414 ;;  a               4   29[BANK0 ] long 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  4   25[BANK0 ] long 
  5419 ;; Registers used:
  5420 ;;		wreg, status,2, status,0, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5426 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5429 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5430 ;;Total ram usage:        8 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    3
  5433 ;; This function calls:
  5434 ;;		___fladd
  5435 ;; This function is called by:
  5436 ;;		_efgtoa
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text19
  5441  004EF6                     __ptext19:
  5442                           	opt callstack 0
  5443  004EF6                     ___flsub:
  5444                           	opt callstack 22
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;incstack = 0
  5448  004EF6  0E00               	movlw	0
  5449  004EF8  0100               	movlb	0	; () banked
  5450  004EFA  1B7D               	xorwf	___flsub@a& (0+255),f,b
  5451  004EFC  0E00               	movlw	0
  5452  004EFE  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  5453  004F00  0E00               	movlw	0
  5454  004F02  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  5455  004F04  0E80               	movlw	128
  5456  004F06  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  5457                           
  5458                           ; BSR set to: 0
  5459  004F08  0060  F1E4  F060   	movff	___flsub@b,___fladd@b
  5460  004F0E  0060  F1E8  F061   	movff	___flsub@b+1,___fladd@b+1
  5461  004F14  0060  F1EC  F062   	movff	___flsub@b+2,___fladd@b+2
  5462  004F1A  0060  F1F0  F063   	movff	___flsub@b+3,___fladd@b+3
  5463  004F20  0060  F1F4  F064   	movff	___flsub@a,___fladd@a
  5464  004F26  0060  F1F8  F065   	movff	___flsub@a+1,___fladd@a+1
  5465  004F2C  0060  F1FC  F066   	movff	___flsub@a+2,___fladd@a+2
  5466  004F32  0060  F200  F067   	movff	___flsub@a+3,___fladd@a+3
  5467  004F38  EC86  F01B         	call	___fladd	;wreg free
  5468  004F3C  0060  F180  F079   	movff	?___fladd,?___flsub
  5469  004F42  0060  F184  F07A   	movff	?___fladd+1,?___flsub+1
  5470  004F48  0060  F188  F07B   	movff	?___fladd+2,?___flsub+2
  5471  004F4E  0060  F18C  F07C   	movff	?___fladd+3,?___flsub+3
  5472  004F54  0012               	return		;funcret
  5473  004F56                     __end_of___flsub:
  5474                           	opt callstack 0
  5475                           
  5476 ;; *************** function ___fladd *****************
  5477 ;; Defined at:
  5478 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  b               4    0[BANK0 ] long 
  5481 ;;  a               4    4[BANK0 ] long 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  grs             1   15[BANK0 ] unsigned char 
  5484 ;;  bexp            1   14[BANK0 ] unsigned char 
  5485 ;;  aexp            1   13[BANK0 ] unsigned char 
  5486 ;;  signs           1   12[BANK0 ] unsigned char 
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  4    0[BANK0 ] unsigned char 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5496 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5497 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5498 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5499 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5500 ;;Total ram usage:       16 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    2
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_efgtoa
  5507 ;;		___flsub
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text20
  5512  00370C                     __ptext20:
  5513                           	opt callstack 0
  5514  00370C                     ___fladd:
  5515                           	opt callstack 22
  5516                           
  5517                           ;incstack = 0
  5518  00370C  0100               	movlb	0	; () banked
  5519  00370E  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5520  003710  0B80               	andlw	128
  5521  003712  6F6C               	movwf	___fladd@signs& (0+255),b
  5522  003714  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5523  003716  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  5524  003718  6F6E               	movwf	___fladd@bexp& (0+255),b
  5525                           
  5526                           ; BSR set to: 0
  5527  00371A  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
  5528                           
  5529                           ; BSR set to: 0
  5530  00371C  816E               	bsf	___fladd@bexp& (0+255),0,b
  5531                           
  5532                           ; BSR set to: 0
  5533  00371E  516E               	movf	___fladd@bexp& (0+255),w,b
  5534  003720  B4D8               	btfsc	status,2,c
  5535  003722  D00D               	goto	l5274
  5536                           
  5537                           ; BSR set to: 0
  5538  003724  296E               	incf	___fladd@bexp& (0+255),w,b
  5539  003726  A4D8               	btfss	status,2,c
  5540  003728  D008               	goto	l5270
  5541                           
  5542                           ; BSR set to: 0
  5543  00372A  0E00               	movlw	0
  5544  00372C  6F60               	movwf	___fladd@b& (0+255),b
  5545  00372E  0E00               	movlw	0
  5546  003730  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5547  003732  0E00               	movlw	0
  5548  003734  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5549  003736  0E00               	movlw	0
  5550  003738  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5551  00373A                     l5270:
  5552                           
  5553                           ; BSR set to: 0
  5554  00373A  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5555  00373C  D006               	goto	L6
  5556  00373E                     l5274:
  5557                           
  5558                           ; BSR set to: 0
  5559  00373E  0E00               	movlw	0
  5560  003740  6F60               	movwf	___fladd@b& (0+255),b
  5561  003742  0E00               	movlw	0
  5562  003744  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5563  003746  0E00               	movlw	0
  5564  003748  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5565  00374A                     L6:
  5566  00374A  0E00               	movlw	0
  5567  00374C  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5568                           
  5569                           ; BSR set to: 0
  5570  00374E  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5571  003750  0B80               	andlw	128
  5572  003752  6F6D               	movwf	___fladd@aexp& (0+255),b
  5573                           
  5574                           ; BSR set to: 0
  5575  003754  516C               	movf	___fladd@signs& (0+255),w,b
  5576  003756  196D               	xorwf	___fladd@aexp& (0+255),w,b
  5577  003758  A4D8               	btfss	status,2,c
  5578                           
  5579                           ; BSR set to: 0
  5580  00375A  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5581                           
  5582                           ; BSR set to: 0
  5583  00375C  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5584  00375E  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5585  003760  6F6D               	movwf	___fladd@aexp& (0+255),b
  5586                           
  5587                           ; BSR set to: 0
  5588  003762  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
  5589                           
  5590                           ; BSR set to: 0
  5591  003764  816D               	bsf	___fladd@aexp& (0+255),0,b
  5592                           
  5593                           ; BSR set to: 0
  5594  003766  516D               	movf	___fladd@aexp& (0+255),w,b
  5595  003768  B4D8               	btfsc	status,2,c
  5596  00376A  D00D               	goto	l5298
  5597                           
  5598                           ; BSR set to: 0
  5599  00376C  296D               	incf	___fladd@aexp& (0+255),w,b
  5600  00376E  A4D8               	btfss	status,2,c
  5601  003770  D008               	goto	l5294
  5602                           
  5603                           ; BSR set to: 0
  5604  003772  0E00               	movlw	0
  5605  003774  6F64               	movwf	___fladd@a& (0+255),b
  5606  003776  0E00               	movlw	0
  5607  003778  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5608  00377A  0E00               	movlw	0
  5609  00377C  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5610  00377E  0E00               	movlw	0
  5611  003780  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5612  003782                     l5294:
  5613                           
  5614                           ; BSR set to: 0
  5615  003782  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5616  003784  D006               	goto	L7
  5617  003786                     l5298:
  5618                           
  5619                           ; BSR set to: 0
  5620  003786  0E00               	movlw	0
  5621  003788  6F64               	movwf	___fladd@a& (0+255),b
  5622  00378A  0E00               	movlw	0
  5623  00378C  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5624  00378E  0E00               	movlw	0
  5625  003790  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5626  003792                     L7:
  5627  003792  0E00               	movlw	0
  5628  003794  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5629                           
  5630                           ; BSR set to: 0
  5631  003796  516E               	movf	___fladd@bexp& (0+255),w,b
  5632  003798  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5633  00379A  B0D8               	btfsc	status,0,c
  5634  00379C  D031               	goto	l5336
  5635                           
  5636                           ; BSR set to: 0
  5637  00379E  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5638  0037A0  D002               	goto	l5306
  5639                           
  5640                           ; BSR set to: 0
  5641  0037A2  0E80               	movlw	128
  5642  0037A4  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5643  0037A6                     l5306:
  5644                           
  5645                           ; BSR set to: 0
  5646  0037A6  0060  F1B8  F06F   	movff	___fladd@bexp,___fladd@grs
  5647                           
  5648                           ; BSR set to: 0
  5649  0037AC  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  5650                           
  5651                           ; BSR set to: 0
  5652  0037B2  0060  F1BC  F06D   	movff	___fladd@grs,___fladd@aexp
  5653                           
  5654                           ; BSR set to: 0
  5655  0037B8  0060  F180  F06F   	movff	___fladd@b,___fladd@grs
  5656                           
  5657                           ; BSR set to: 0
  5658  0037BE  0060  F190  F060   	movff	___fladd@a,___fladd@b
  5659                           
  5660                           ; BSR set to: 0
  5661  0037C4  0060  F1BC  F064   	movff	___fladd@grs,___fladd@a
  5662                           
  5663                           ; BSR set to: 0
  5664  0037CA  0060  F184  F06F   	movff	___fladd@b+1,___fladd@grs
  5665                           
  5666                           ; BSR set to: 0
  5667  0037D0  0060  F194  F061   	movff	___fladd@a+1,___fladd@b+1
  5668                           
  5669                           ; BSR set to: 0
  5670  0037D6  0060  F1BC  F065   	movff	___fladd@grs,___fladd@a+1
  5671                           
  5672                           ; BSR set to: 0
  5673  0037DC  0060  F188  F06F   	movff	___fladd@b+2,___fladd@grs
  5674                           
  5675                           ; BSR set to: 0
  5676  0037E2  0060  F198  F062   	movff	___fladd@a+2,___fladd@b+2
  5677                           
  5678                           ; BSR set to: 0
  5679  0037E8  0060  F1BC  F066   	movff	___fladd@grs,___fladd@a+2
  5680                           
  5681                           ; BSR set to: 0
  5682  0037EE  0060  F18C  F06F   	movff	___fladd@b+3,___fladd@grs
  5683                           
  5684                           ; BSR set to: 0
  5685  0037F4  0060  F19C  F063   	movff	___fladd@a+3,___fladd@b+3
  5686                           
  5687                           ; BSR set to: 0
  5688  0037FA  0060  F1BC  F067   	movff	___fladd@grs,___fladd@a+3
  5689  003800                     l5336:
  5690                           
  5691                           ; BSR set to: 0
  5692  003800  0E00               	movlw	0
  5693  003802  6F6F               	movwf	___fladd@grs& (0+255),b
  5694                           
  5695                           ; BSR set to: 0
  5696  003804  516E               	movf	___fladd@bexp& (0+255),w,b
  5697  003806  0060  F1B4  F068   	movff	___fladd@aexp,??___fladd
  5698  00380C  6B69               	clrf	(??___fladd+1)& (0+255),b
  5699  00380E  5F68               	subwf	??___fladd& (0+255),f,b
  5700  003810  0E00               	movlw	0
  5701  003812  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5702  003814  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5703  003816  D02D               	goto	l1146
  5704  003818  5169               	movf	(??___fladd+1)& (0+255),w,b
  5705  00381A  E104               	bnz	u6580
  5706  00381C  0E1A               	movlw	26
  5707  00381E  5D68               	subwf	??___fladd& (0+255),w,b
  5708  003820  A0D8               	btfss	status,0,c
  5709  003822  D027               	goto	l1146
  5710  003824                     u6580:
  5711                           
  5712                           ; BSR set to: 0
  5713  003824  5160               	movf	___fladd@b& (0+255),w,b
  5714  003826  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5715  003828  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5716  00382A  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5717  00382C  B4D8               	btfsc	status,2,c
  5718  00382E  D002               	goto	u6590
  5719  003830  0E01               	movlw	1
  5720  003832  D001               	goto	u6600
  5721  003834                     u6590:
  5722  003834  0E00               	movlw	0
  5723  003836                     u6600:
  5724  003836  6F6F               	movwf	___fladd@grs& (0+255),b
  5725                           
  5726                           ; BSR set to: 0
  5727  003838  0E00               	movlw	0
  5728  00383A  6F60               	movwf	___fladd@b& (0+255),b
  5729  00383C  0E00               	movlw	0
  5730  00383E  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5731  003840  0E00               	movlw	0
  5732  003842  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5733  003844  0E00               	movlw	0
  5734  003846  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5735                           
  5736                           ; BSR set to: 0
  5737  003848  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  5738  00384E  D015               	goto	u6630
  5739  003850                     l1147:
  5740                           
  5741                           ; BSR set to: 0
  5742  003850  A16F               	btfss	___fladd@grs& (0+255),0,b
  5743  003852  D005               	goto	l5348
  5744                           
  5745                           ; BSR set to: 0
  5746  003854  90D8               	bcf	status,0,c
  5747  003856  316F               	rrcf	___fladd@grs& (0+255),w,b
  5748  003858  0901               	iorlw	1
  5749  00385A  6F6F               	movwf	___fladd@grs& (0+255),b
  5750  00385C  D002               	goto	l5350
  5751  00385E                     l5348:
  5752                           
  5753                           ; BSR set to: 0
  5754  00385E  90D8               	bcf	status,0,c
  5755  003860  336F               	rrcf	___fladd@grs& (0+255),f,b
  5756  003862                     l5350:
  5757                           
  5758                           ; BSR set to: 0
  5759  003862  B160               	btfsc	___fladd@b& (0+255),0,b
  5760                           
  5761                           ; BSR set to: 0
  5762  003864  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5763                           
  5764                           ; BSR set to: 0
  5765  003866  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5766  003868  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5767  00386A  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5768  00386C  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5769  00386E  3360               	rrcf	___fladd@b& (0+255),f,b
  5770                           
  5771                           ; BSR set to: 0
  5772  003870  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5773  003872                     l1146:
  5774                           
  5775                           ; BSR set to: 0
  5776  003872  516D               	movf	___fladd@aexp& (0+255),w,b
  5777  003874  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5778  003876  A0D8               	btfss	status,0,c
  5779  003878  D7EB               	goto	l1147
  5780  00387A                     u6630:
  5781                           
  5782                           ; BSR set to: 0
  5783  00387A  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5784  00387C  D028               	goto	l5382
  5785                           
  5786                           ; BSR set to: 0
  5787  00387E  516E               	movf	___fladd@bexp& (0+255),w,b
  5788  003880  A4D8               	btfss	status,2,c
  5789  003882  D009               	goto	l5364
  5790                           
  5791                           ; BSR set to: 0
  5792  003884  0E00               	movlw	0
  5793  003886  6F60               	movwf	?___fladd& (0+255),b
  5794  003888  0E00               	movlw	0
  5795  00388A  6F61               	movwf	(?___fladd+1)& (0+255),b
  5796  00388C  0E00               	movlw	0
  5797  00388E  6F62               	movwf	(?___fladd+2)& (0+255),b
  5798  003890  0E00               	movlw	0
  5799  003892  6F63               	movwf	(?___fladd+3)& (0+255),b
  5800  003894  0012               	return	
  5801  003896                     l5364:
  5802                           
  5803                           ; BSR set to: 0
  5804  003896  5164               	movf	___fladd@a& (0+255),w,b
  5805  003898  2760               	addwf	___fladd@b& (0+255),f,b
  5806  00389A  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5807  00389C  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5808  00389E  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5809  0038A0  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5810  0038A2  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5811  0038A4  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5812                           
  5813                           ; BSR set to: 0
  5814  0038A6  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5815  0038A8  D071               	goto	u6760
  5816                           
  5817                           ; BSR set to: 0
  5818  0038AA  A16F               	btfss	___fladd@grs& (0+255),0,b
  5819  0038AC  D005               	goto	l5372
  5820                           
  5821                           ; BSR set to: 0
  5822  0038AE  90D8               	bcf	status,0,c
  5823  0038B0  316F               	rrcf	___fladd@grs& (0+255),w,b
  5824  0038B2  0901               	iorlw	1
  5825  0038B4  6F6F               	movwf	___fladd@grs& (0+255),b
  5826  0038B6  D002               	goto	l5374
  5827  0038B8                     l5372:
  5828                           
  5829                           ; BSR set to: 0
  5830  0038B8  90D8               	bcf	status,0,c
  5831  0038BA  336F               	rrcf	___fladd@grs& (0+255),f,b
  5832  0038BC                     l5374:
  5833                           
  5834                           ; BSR set to: 0
  5835  0038BC  B160               	btfsc	___fladd@b& (0+255),0,b
  5836                           
  5837                           ; BSR set to: 0
  5838  0038BE  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5839                           
  5840                           ; BSR set to: 0
  5841  0038C0  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5842  0038C2  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5843  0038C4  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5844  0038C6  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5845  0038C8  3360               	rrcf	___fladd@b& (0+255),f,b
  5846                           
  5847                           ; BSR set to: 0
  5848  0038CA  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5849  0038CC  D05F               	goto	u6760
  5850  0038CE                     l5382:
  5851                           
  5852                           ; BSR set to: 0
  5853  0038CE  5164               	movf	___fladd@a& (0+255),w,b
  5854  0038D0  5D60               	subwf	___fladd@b& (0+255),w,b
  5855  0038D2  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5856  0038D4  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5857  0038D6  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5858  0038D8  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5859  0038DA  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5860  0038DC  0A80               	xorlw	128
  5861  0038DE  6F68               	movwf	??___fladd& (0+255),b
  5862  0038E0  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5863  0038E2  0A80               	xorlw	128
  5864  0038E4  5968               	subwfb	??___fladd& (0+255),w,b
  5865  0038E6  B0D8               	btfsc	status,0,c
  5866  0038E8  D025               	goto	l5392
  5867                           
  5868                           ; BSR set to: 0
  5869  0038EA  5160               	movf	___fladd@b& (0+255),w,b
  5870  0038EC  5D64               	subwf	___fladd@a& (0+255),w,b
  5871  0038EE  6F68               	movwf	??___fladd& (0+255),b
  5872  0038F0  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5873  0038F2  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5874  0038F4  6F69               	movwf	(??___fladd+1)& (0+255),b
  5875  0038F6  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5876  0038F8  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5877  0038FA  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5878  0038FC  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5879  0038FE  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5880  003900  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5881  003902  0EFF               	movlw	255
  5882  003904  2568               	addwf	??___fladd& (0+255),w,b
  5883  003906  6F60               	movwf	___fladd@b& (0+255),b
  5884  003908  0EFF               	movlw	255
  5885  00390A  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5886  00390C  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5887  00390E  0EFF               	movlw	255
  5888  003910  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5889  003912  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5890  003914  0EFF               	movlw	255
  5891  003916  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5892  003918  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5893  00391A  0E80               	movlw	128
  5894  00391C  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5895                           
  5896                           ; BSR set to: 0
  5897  00391E  6D6F               	negf	___fladd@grs& (0+255),b
  5898                           
  5899                           ; BSR set to: 0
  5900  003920  516F               	movf	___fladd@grs& (0+255),w,b
  5901  003922  A4D8               	btfss	status,2,c
  5902  003924  D00F               	goto	l1162
  5903                           
  5904                           ; BSR set to: 0
  5905  003926  0E01               	movlw	1
  5906  003928  2760               	addwf	___fladd@b& (0+255),f,b
  5907  00392A  0E00               	movlw	0
  5908  00392C  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5909  00392E  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5910  003930  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5911  003932  D008               	goto	l1162
  5912  003934                     l5392:
  5913                           
  5914                           ; BSR set to: 0
  5915  003934  5164               	movf	___fladd@a& (0+255),w,b
  5916  003936  5F60               	subwf	___fladd@b& (0+255),f,b
  5917  003938  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5918  00393A  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5919  00393C  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5920  00393E  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5921  003940  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5922  003942  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5923  003944                     l1162:
  5924                           
  5925                           ; BSR set to: 0
  5926  003944  5160               	movf	___fladd@b& (0+255),w,b
  5927  003946  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5928  003948  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5929  00394A  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5930  00394C  A4D8               	btfss	status,2,c
  5931  00394E  D01C               	goto	l5416
  5932                           
  5933                           ; BSR set to: 0
  5934  003950  516F               	movf	___fladd@grs& (0+255),w,b
  5935  003952  A4D8               	btfss	status,2,c
  5936  003954  D019               	goto	l5416
  5937                           
  5938                           ; BSR set to: 0
  5939  003956  0E00               	movlw	0
  5940  003958  6F60               	movwf	?___fladd& (0+255),b
  5941  00395A  0E00               	movlw	0
  5942  00395C  6F61               	movwf	(?___fladd+1)& (0+255),b
  5943  00395E  0E00               	movlw	0
  5944  003960  6F62               	movwf	(?___fladd+2)& (0+255),b
  5945  003962  0E00               	movlw	0
  5946  003964  6F63               	movwf	(?___fladd+3)& (0+255),b
  5947  003966  0012               	return	
  5948  003968                     l5400:
  5949                           
  5950                           ; BSR set to: 0
  5951  003968  90D8               	bcf	status,0,c
  5952  00396A  3760               	rlcf	___fladd@b& (0+255),f,b
  5953  00396C  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5954  00396E  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5955  003970  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5956                           
  5957                           ; BSR set to: 0
  5958  003972  BF6F               	btfsc	___fladd@grs& (0+255),7,b
  5959                           
  5960                           ; BSR set to: 0
  5961  003974  8160               	bsf	___fladd@b& (0+255),0,b
  5962                           
  5963                           ; BSR set to: 0
  5964  003976  A16F               	btfss	___fladd@grs& (0+255),0,b
  5965  003978  D002               	goto	l5410
  5966                           
  5967                           ; BSR set to: 0
  5968  00397A  80D8               	bsf	status,0,c
  5969  00397C  D001               	goto	L8
  5970  00397E                     l5410:
  5971                           
  5972                           ; BSR set to: 0
  5973  00397E  90D8               	bcf	status,0,c
  5974  003980                     L8:
  5975  003980  376F               	rlcf	___fladd@grs& (0+255),f,b
  5976                           
  5977                           ; BSR set to: 0
  5978  003982  516E               	movf	___fladd@bexp& (0+255),w,b
  5979  003984  A4D8               	btfss	status,2,c
  5980                           
  5981                           ; BSR set to: 0
  5982  003986  076E               	decf	___fladd@bexp& (0+255),f,b
  5983  003988                     l5416:
  5984                           
  5985                           ; BSR set to: 0
  5986  003988  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5987  00398A  D7EE               	goto	l5400
  5988  00398C                     u6760:
  5989                           
  5990                           ; BSR set to: 0
  5991  00398C  0E00               	movlw	0
  5992  00398E  6F6D               	movwf	___fladd@aexp& (0+255),b
  5993                           
  5994                           ; BSR set to: 0
  5995  003990  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5996  003992  D00C               	goto	l1171
  5997                           
  5998                           ; BSR set to: 0
  5999  003994  0060  F1BC  F068   	movff	___fladd@grs,??___fladd
  6000  00399A  0E7F               	movlw	127
  6001  00399C  1768               	andwf	??___fladd& (0+255),f,b
  6002  00399E  B4D8               	btfsc	status,2,c
  6003  0039A0  D003               	goto	l1172
  6004  0039A2                     u6780:
  6005                           
  6006                           ; BSR set to: 0
  6007  0039A2  0E01               	movlw	1
  6008  0039A4  6F6D               	movwf	___fladd@aexp& (0+255),b
  6009  0039A6  D002               	goto	l1171
  6010  0039A8                     l1172:
  6011                           
  6012                           ; BSR set to: 0
  6013  0039A8  B160               	btfsc	___fladd@b& (0+255),0,b
  6014  0039AA  D7FB               	goto	u6780
  6015  0039AC                     l1171:
  6016                           
  6017                           ; BSR set to: 0
  6018  0039AC  516D               	movf	___fladd@aexp& (0+255),w,b
  6019  0039AE  B4D8               	btfsc	status,2,c
  6020  0039B0  D028               	goto	l5436
  6021                           
  6022                           ; BSR set to: 0
  6023  0039B2  0E01               	movlw	1
  6024  0039B4  2760               	addwf	___fladd@b& (0+255),f,b
  6025  0039B6  0E00               	movlw	0
  6026  0039B8  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  6027  0039BA  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  6028  0039BC  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  6029                           
  6030                           ; BSR set to: 0
  6031  0039BE  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  6032  0039C0  D020               	goto	l5436
  6033                           
  6034                           ; BSR set to: 0
  6035  0039C2  0060  F180  F068   	movff	___fladd@b,??___fladd
  6036  0039C8  0060  F184  F069   	movff	___fladd@b+1,??___fladd+1
  6037  0039CE  0060  F188  F06A   	movff	___fladd@b+2,??___fladd+2
  6038  0039D4  0060  F18C  F06B   	movff	___fladd@b+3,??___fladd+3
  6039  0039DA  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  6040  0039DC  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  6041  0039DE  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  6042  0039E0  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  6043  0039E2  3368               	rrcf	??___fladd& (0+255),f,b
  6044  0039E4  0060  F1A0  F060   	movff	??___fladd,___fladd@b
  6045  0039EA  0060  F1A4  F061   	movff	??___fladd+1,___fladd@b+1
  6046  0039F0  0060  F1A8  F062   	movff	??___fladd+2,___fladd@b+2
  6047  0039F6  0060  F1AC  F063   	movff	??___fladd+3,___fladd@b+3
  6048  0039FC  296E               	incf	___fladd@bexp& (0+255),w,b
  6049  0039FE  A4D8               	btfss	status,2,c
  6050                           
  6051                           ; BSR set to: 0
  6052  003A00  2B6E               	incf	___fladd@bexp& (0+255),f,b
  6053  003A02                     l5436:
  6054                           
  6055                           ; BSR set to: 0
  6056  003A02  296E               	incf	___fladd@bexp& (0+255),w,b
  6057  003A04  B4D8               	btfsc	status,2,c
  6058  003A06  D003               	goto	u6840
  6059                           
  6060                           ; BSR set to: 0
  6061  003A08  516E               	movf	___fladd@bexp& (0+255),w,b
  6062  003A0A  A4D8               	btfss	status,2,c
  6063  003A0C  D00D               	goto	l5444
  6064  003A0E                     u6840:
  6065                           
  6066                           ; BSR set to: 0
  6067  003A0E  0E00               	movlw	0
  6068  003A10  6F60               	movwf	___fladd@b& (0+255),b
  6069  003A12  0E00               	movlw	0
  6070  003A14  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6071  003A16  0E00               	movlw	0
  6072  003A18  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6073  003A1A  0E00               	movlw	0
  6074  003A1C  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6075  003A1E  516E               	movf	___fladd@bexp& (0+255),w,b
  6076  003A20  A4D8               	btfss	status,2,c
  6077  003A22  D002               	goto	l5444
  6078                           
  6079                           ; BSR set to: 0
  6080  003A24  0E00               	movlw	0
  6081  003A26  6F6C               	movwf	___fladd@signs& (0+255),b
  6082  003A28                     l5444:
  6083                           
  6084                           ; BSR set to: 0
  6085  003A28  A16E               	btfss	___fladd@bexp& (0+255),0,b
  6086  003A2A  D002               	goto	l5448
  6087                           
  6088                           ; BSR set to: 0
  6089  003A2C  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  6090  003A2E  D001               	goto	l5450
  6091  003A30                     l5448:
  6092                           
  6093                           ; BSR set to: 0
  6094  003A30  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  6095  003A32                     l5450:
  6096                           
  6097                           ; BSR set to: 0
  6098  003A32  90D8               	bcf	status,0,c
  6099  003A34  316E               	rrcf	___fladd@bexp& (0+255),w,b
  6100  003A36  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6101                           
  6102                           ; BSR set to: 0
  6103  003A38  BF6C               	btfsc	___fladd@signs& (0+255),7,b
  6104                           
  6105                           ; BSR set to: 0
  6106  003A3A  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  6107                           
  6108                           ; BSR set to: 0
  6109  003A3C  0060  F180  F060   	movff	___fladd@b,?___fladd
  6110  003A42  0060  F184  F061   	movff	___fladd@b+1,?___fladd+1
  6111  003A48  0060  F188  F062   	movff	___fladd@b+2,?___fladd+2
  6112  003A4E  0060  F18C  F063   	movff	___fladd@b+3,?___fladd+3
  6113                           
  6114                           ; BSR set to: 0
  6115  003A54  0012               	return		;funcret
  6116  003A56                     __end_of___fladd:
  6117                           	opt callstack 0
  6118                           
  6119 ;; *************** function ___flneg *****************
  6120 ;; Defined at:
  6121 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  f1              4    0[BANK0 ] unsigned char 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  4    0[BANK0 ] unsigned char 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6138 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6139 ;;Total ram usage:        4 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    2
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_efgtoa
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text21
  6150  00513E                     __ptext21:
  6151                           	opt callstack 0
  6152  00513E                     ___flneg:
  6153                           	opt callstack 23
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;incstack = 0
  6157  00513E  0100               	movlb	0	; () banked
  6158  005140  5160               	movf	___flneg@f1& (0+255),w,b
  6159  005142  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6160  005144  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6161  005146  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6162  005148  B4D8               	btfsc	status,2,c
  6163  00514A  D008               	goto	l5942
  6164                           
  6165                           ; BSR set to: 0
  6166  00514C  0E00               	movlw	0
  6167  00514E  1B60               	xorwf	___flneg@f1& (0+255),f,b
  6168  005150  0E00               	movlw	0
  6169  005152  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6170  005154  0E00               	movlw	0
  6171  005156  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6172  005158  0E80               	movlw	128
  6173  00515A  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6174  00515C                     l5942:
  6175                           
  6176                           ; BSR set to: 0
  6177  00515C  0060  F180  F060   	movff	___flneg@f1,?___flneg
  6178  005162  0060  F184  F061   	movff	___flneg@f1+1,?___flneg+1
  6179  005168  0060  F188  F062   	movff	___flneg@f1+2,?___flneg+2
  6180  00516E  0060  F18C  F063   	movff	___flneg@f1+3,?___flneg+3
  6181                           
  6182                           ; BSR set to: 0
  6183  005174  0012               	return		;funcret
  6184  005176                     __end_of___flneg:
  6185                           	opt callstack 0
  6186                           
  6187 ;; *************** function ___flmul *****************
  6188 ;; Defined at:
  6189 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  b               4    0[BANK0 ] unsigned char 
  6192 ;;  a               4    4[BANK0 ] unsigned char 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  prod            4   19[BANK0 ] struct .
  6195 ;;  grs             4   14[BANK0 ] unsigned long 
  6196 ;;  temp            2   23[BANK0 ] struct .
  6197 ;;  bexp            1   18[BANK0 ] unsigned char 
  6198 ;;  aexp            1   13[BANK0 ] unsigned char 
  6199 ;;  sign            1   12[BANK0 ] unsigned char 
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  4    0[BANK0 ] unsigned char 
  6202 ;; Registers used:
  6203 ;;		wreg, status,2, status,0, prodl, prodh
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6209 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6210 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6211 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6212 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6213 ;;Total ram usage:       25 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    2
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_efgtoa
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text22
  6224  002C10                     __ptext22:
  6225                           	opt callstack 0
  6226  002C10                     ___flmul:
  6227                           	opt callstack 23
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;incstack = 0
  6231  002C10  0100               	movlb	0	; () banked
  6232  002C12  5163               	movf	(___flmul@b+3)& (0+255),w,b
  6233  002C14  0B80               	andlw	128
  6234  002C16  6F6C               	movwf	___flmul@sign& (0+255),b
  6235  002C18  5163               	movf	(___flmul@b+3)& (0+255),w,b
  6236  002C1A  2563               	addwf	(___flmul@b+3)& (0+255),w,b
  6237  002C1C  6F72               	movwf	___flmul@bexp& (0+255),b
  6238                           
  6239                           ; BSR set to: 0
  6240  002C1E  BF62               	btfsc	(___flmul@b+2)& (0+255),7,b
  6241                           
  6242                           ; BSR set to: 0
  6243  002C20  8172               	bsf	___flmul@bexp& (0+255),0,b
  6244                           
  6245                           ; BSR set to: 0
  6246  002C22  5172               	movf	___flmul@bexp& (0+255),w,b
  6247  002C24  B4D8               	btfsc	status,2,c
  6248  002C26  D00D               	goto	l5698
  6249                           
  6250                           ; BSR set to: 0
  6251  002C28  2972               	incf	___flmul@bexp& (0+255),w,b
  6252  002C2A  A4D8               	btfss	status,2,c
  6253  002C2C  D008               	goto	l5696
  6254                           
  6255                           ; BSR set to: 0
  6256  002C2E  0E00               	movlw	0
  6257  002C30  6F60               	movwf	___flmul@b& (0+255),b
  6258  002C32  0E00               	movlw	0
  6259  002C34  6F61               	movwf	(___flmul@b+1)& (0+255),b
  6260  002C36  0E00               	movlw	0
  6261  002C38  6F62               	movwf	(___flmul@b+2)& (0+255),b
  6262  002C3A  0E00               	movlw	0
  6263  002C3C  6F63               	movwf	(___flmul@b+3)& (0+255),b
  6264  002C3E                     l5696:
  6265                           
  6266                           ; BSR set to: 0
  6267  002C3E  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
  6268  002C40  D008               	goto	l5700
  6269  002C42                     l5698:
  6270                           
  6271                           ; BSR set to: 0
  6272  002C42  0E00               	movlw	0
  6273  002C44  6F60               	movwf	___flmul@b& (0+255),b
  6274  002C46  0E00               	movlw	0
  6275  002C48  6F61               	movwf	(___flmul@b+1)& (0+255),b
  6276  002C4A  0E00               	movlw	0
  6277  002C4C  6F62               	movwf	(___flmul@b+2)& (0+255),b
  6278  002C4E  0E00               	movlw	0
  6279  002C50  6F63               	movwf	(___flmul@b+3)& (0+255),b
  6280  002C52                     l5700:
  6281                           
  6282                           ; BSR set to: 0
  6283  002C52  5167               	movf	(___flmul@a+3)& (0+255),w,b
  6284  002C54  0B80               	andlw	128
  6285  002C56  1B6C               	xorwf	___flmul@sign& (0+255),f,b
  6286                           
  6287                           ; BSR set to: 0
  6288  002C58  5167               	movf	(___flmul@a+3)& (0+255),w,b
  6289  002C5A  2567               	addwf	(___flmul@a+3)& (0+255),w,b
  6290  002C5C  6F6D               	movwf	___flmul@aexp& (0+255),b
  6291                           
  6292                           ; BSR set to: 0
  6293  002C5E  BF66               	btfsc	(___flmul@a+2)& (0+255),7,b
  6294                           
  6295                           ; BSR set to: 0
  6296  002C60  816D               	bsf	___flmul@aexp& (0+255),0,b
  6297                           
  6298                           ; BSR set to: 0
  6299  002C62  516D               	movf	___flmul@aexp& (0+255),w,b
  6300  002C64  B4D8               	btfsc	status,2,c
  6301  002C66  D00D               	goto	l5716
  6302                           
  6303                           ; BSR set to: 0
  6304  002C68  296D               	incf	___flmul@aexp& (0+255),w,b
  6305  002C6A  A4D8               	btfss	status,2,c
  6306  002C6C  D008               	goto	l5714
  6307                           
  6308                           ; BSR set to: 0
  6309  002C6E  0E00               	movlw	0
  6310  002C70  6F64               	movwf	___flmul@a& (0+255),b
  6311  002C72  0E00               	movlw	0
  6312  002C74  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6313  002C76  0E00               	movlw	0
  6314  002C78  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6315  002C7A  0E00               	movlw	0
  6316  002C7C  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6317  002C7E                     l5714:
  6318                           
  6319                           ; BSR set to: 0
  6320  002C7E  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
  6321  002C80  D008               	goto	l1231
  6322  002C82                     l5716:
  6323                           
  6324                           ; BSR set to: 0
  6325  002C82  0E00               	movlw	0
  6326  002C84  6F64               	movwf	___flmul@a& (0+255),b
  6327  002C86  0E00               	movlw	0
  6328  002C88  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6329  002C8A  0E00               	movlw	0
  6330  002C8C  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6331  002C8E  0E00               	movlw	0
  6332  002C90  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6333  002C92                     l1231:
  6334                           
  6335                           ; BSR set to: 0
  6336  002C92  516D               	movf	___flmul@aexp& (0+255),w,b
  6337  002C94  B4D8               	btfsc	status,2,c
  6338  002C96  D003               	goto	u7440
  6339                           
  6340                           ; BSR set to: 0
  6341  002C98  5172               	movf	___flmul@bexp& (0+255),w,b
  6342  002C9A  A4D8               	btfss	status,2,c
  6343  002C9C  D009               	goto	l5724
  6344  002C9E                     u7440:
  6345                           
  6346                           ; BSR set to: 0
  6347  002C9E  0E00               	movlw	0
  6348  002CA0  6F60               	movwf	?___flmul& (0+255),b
  6349  002CA2  0E00               	movlw	0
  6350  002CA4  6F61               	movwf	(?___flmul+1)& (0+255),b
  6351  002CA6  0E00               	movlw	0
  6352  002CA8  6F62               	movwf	(?___flmul+2)& (0+255),b
  6353  002CAA  0E00               	movlw	0
  6354  002CAC  6F63               	movwf	(?___flmul+3)& (0+255),b
  6355  002CAE  0012               	return	
  6356  002CB0                     l5724:
  6357                           
  6358                           ; BSR set to: 0
  6359  002CB0  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6360  002CB2  0360               	mulwf	___flmul@b& (0+255),b
  6361  002CB4  006F FFCC  F077    	movff	prodl,___flmul@temp
  6362  002CBA  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6363                           
  6364                           ; BSR set to: 0
  6365  002CC0  5177               	movf	___flmul@temp& (0+255),w,b
  6366  002CC2  6F6E               	movwf	___flmul@grs& (0+255),b
  6367  002CC4  6B6F               	clrf	(___flmul@grs+1)& (0+255),b
  6368  002CC6  6B70               	clrf	(___flmul@grs+2)& (0+255),b
  6369  002CC8  6B71               	clrf	(___flmul@grs+3)& (0+255),b
  6370                           
  6371                           ; BSR set to: 0
  6372  002CCA  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6373  002CCC  6F73               	movwf	___flmul@prod& (0+255),b
  6374  002CCE  6B74               	clrf	(___flmul@prod+1)& (0+255),b
  6375  002CD0  6B75               	clrf	(___flmul@prod+2)& (0+255),b
  6376  002CD2  6B76               	clrf	(___flmul@prod+3)& (0+255),b
  6377  002CD4  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6378  002CD6  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6379  002CD8  006F FFCC  F077    	movff	prodl,___flmul@temp
  6380  002CDE  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6381                           
  6382                           ; BSR set to: 0
  6383  002CE4  5177               	movf	___flmul@temp& (0+255),w,b
  6384  002CE6  276E               	addwf	___flmul@grs& (0+255),f,b
  6385  002CE8  0E00               	movlw	0
  6386  002CEA  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6387  002CEC  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6388  002CEE  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6389                           
  6390                           ; BSR set to: 0
  6391  002CF0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6392  002CF2  2773               	addwf	___flmul@prod& (0+255),f,b
  6393  002CF4  0E00               	movlw	0
  6394  002CF6  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6395  002CF8  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6396  002CFA  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6397  002CFC  5164               	movf	___flmul@a& (0+255),w,b
  6398  002CFE  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6399  002D00  006F FFCC  F077    	movff	prodl,___flmul@temp
  6400  002D06  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6401                           
  6402                           ; BSR set to: 0
  6403  002D0C  5177               	movf	___flmul@temp& (0+255),w,b
  6404  002D0E  276E               	addwf	___flmul@grs& (0+255),f,b
  6405  002D10  0E00               	movlw	0
  6406  002D12  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6407  002D14  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6408  002D16  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6409                           
  6410                           ; BSR set to: 0
  6411  002D18  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6412  002D1A  2773               	addwf	___flmul@prod& (0+255),f,b
  6413  002D1C  0E00               	movlw	0
  6414  002D1E  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6415  002D20  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6416  002D22  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6417                           
  6418                           ; BSR set to: 0
  6419  002D24  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6420  002D2A  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6421  002D30  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6422  002D36  6B6E               	clrf	___flmul@grs& (0+255),b
  6423                           
  6424                           ; BSR set to: 0
  6425  002D38  5164               	movf	___flmul@a& (0+255),w,b
  6426  002D3A  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6427  002D3C  006F FFCC  F077    	movff	prodl,___flmul@temp
  6428  002D42  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6429                           
  6430                           ; BSR set to: 0
  6431  002D48  5177               	movf	___flmul@temp& (0+255),w,b
  6432  002D4A  276E               	addwf	___flmul@grs& (0+255),f,b
  6433  002D4C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6434  002D4E  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6435  002D50  0E00               	movlw	0
  6436  002D52  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6437  002D54  0E00               	movlw	0
  6438  002D56  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6439                           
  6440                           ; BSR set to: 0
  6441  002D58  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6442  002D5A  0360               	mulwf	___flmul@b& (0+255),b
  6443  002D5C  006F FFCC  F077    	movff	prodl,___flmul@temp
  6444  002D62  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6445                           
  6446                           ; BSR set to: 0
  6447  002D68  5177               	movf	___flmul@temp& (0+255),w,b
  6448  002D6A  276E               	addwf	___flmul@grs& (0+255),f,b
  6449  002D6C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6450  002D6E  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6451  002D70  0E00               	movlw	0
  6452  002D72  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6453  002D74  0E00               	movlw	0
  6454  002D76  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6455                           
  6456                           ; BSR set to: 0
  6457  002D78  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6458  002D7E  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6459  002D84  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6460  002D8A  6B6E               	clrf	___flmul@grs& (0+255),b
  6461  002D8C  5164               	movf	___flmul@a& (0+255),w,b
  6462  002D8E  0360               	mulwf	___flmul@b& (0+255),b
  6463  002D90  006F FFCC  F077    	movff	prodl,___flmul@temp
  6464  002D96  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6465                           
  6466                           ; BSR set to: 0
  6467  002D9C  5177               	movf	___flmul@temp& (0+255),w,b
  6468  002D9E  276E               	addwf	___flmul@grs& (0+255),f,b
  6469  002DA0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6470  002DA2  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6471  002DA4  0E00               	movlw	0
  6472  002DA6  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6473  002DA8  0E00               	movlw	0
  6474  002DAA  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6475                           
  6476                           ; BSR set to: 0
  6477  002DAC  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6478  002DAE  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6479  002DB0  006F FFCC  F077    	movff	prodl,___flmul@temp
  6480  002DB6  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6481  002DBC  5177               	movf	___flmul@temp& (0+255),w,b
  6482  002DBE  2773               	addwf	___flmul@prod& (0+255),f,b
  6483  002DC0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6484  002DC2  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6485  002DC4  0E00               	movlw	0
  6486  002DC6  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6487  002DC8  0E00               	movlw	0
  6488  002DCA  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6489                           
  6490                           ; BSR set to: 0
  6491  002DCC  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6492  002DCE  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6493  002DD0  006F FFCC  F077    	movff	prodl,___flmul@temp
  6494  002DD6  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6495                           
  6496                           ; BSR set to: 0
  6497  002DDC  5177               	movf	___flmul@temp& (0+255),w,b
  6498  002DDE  2773               	addwf	___flmul@prod& (0+255),f,b
  6499  002DE0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6500  002DE2  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6501  002DE4  0E00               	movlw	0
  6502  002DE6  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6503  002DE8  0E00               	movlw	0
  6504  002DEA  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6505  002DEC  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6506  002DEE  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6507  002DF0  006F FFCC  F077    	movff	prodl,___flmul@temp
  6508  002DF6  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  6509                           
  6510                           ; BSR set to: 0
  6511  002DFC  5177               	movf	___flmul@temp& (0+255),w,b
  6512  002DFE  6F68               	movwf	??___flmul& (0+255),b
  6513  002E00  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6514  002E02  6F69               	movwf	(??___flmul+1)& (0+255),b
  6515  002E04  6B6A               	clrf	(??___flmul+2)& (0+255),b
  6516  002E06  6B6B               	clrf	(??___flmul+3)& (0+255),b
  6517  002E08  0060  F1A8  F06B   	movff	??___flmul+2,??___flmul+3
  6518  002E0E  0060  F1A4  F06A   	movff	??___flmul+1,??___flmul+2
  6519  002E14  0060  F1A0  F069   	movff	??___flmul,??___flmul+1
  6520  002E1A  6B68               	clrf	??___flmul& (0+255),b
  6521  002E1C  5168               	movf	??___flmul& (0+255),w,b
  6522  002E1E  2773               	addwf	___flmul@prod& (0+255),f,b
  6523  002E20  5169               	movf	(??___flmul+1)& (0+255),w,b
  6524  002E22  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6525  002E24  516A               	movf	(??___flmul+2)& (0+255),w,b
  6526  002E26  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6527  002E28  516B               	movf	(??___flmul+3)& (0+255),w,b
  6528  002E2A  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6529                           
  6530                           ; BSR set to: 0
  6531  002E2C  0060  F1B8  F068   	movff	___flmul@grs,??___flmul
  6532  002E32  0060  F1BC  F069   	movff	___flmul@grs+1,??___flmul+1
  6533  002E38  0060  F1C0  F06A   	movff	___flmul@grs+2,??___flmul+2
  6534  002E3E  0060  F1C4  F06B   	movff	___flmul@grs+3,??___flmul+3
  6535  002E44  0E19               	movlw	25
  6536  002E46  D005               	goto	u7450
  6537  002E48                     u7455:
  6538  002E48  90D8               	bcf	status,0,c
  6539  002E4A  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  6540  002E4C  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  6541  002E4E  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  6542  002E50  3368               	rrcf	??___flmul& (0+255),f,b
  6543  002E52                     u7450:
  6544  002E52  2EE8               	decfsz	wreg,f,c
  6545  002E54  D7F9               	goto	u7455
  6546  002E56  5168               	movf	??___flmul& (0+255),w,b
  6547  002E58  2773               	addwf	___flmul@prod& (0+255),f,b
  6548  002E5A  5169               	movf	(??___flmul+1)& (0+255),w,b
  6549  002E5C  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6550  002E5E  516A               	movf	(??___flmul+2)& (0+255),w,b
  6551  002E60  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6552  002E62  516B               	movf	(??___flmul+3)& (0+255),w,b
  6553  002E64  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6554                           
  6555                           ; BSR set to: 0
  6556  002E66  0060  F1C0  F071   	movff	___flmul@grs+2,___flmul@grs+3
  6557  002E6C  0060  F1BC  F070   	movff	___flmul@grs+1,___flmul@grs+2
  6558  002E72  0060  F1B8  F06F   	movff	___flmul@grs,___flmul@grs+1
  6559  002E78  6B6E               	clrf	___flmul@grs& (0+255),b
  6560                           
  6561                           ; BSR set to: 0
  6562  002E7A  516D               	movf	___flmul@aexp& (0+255),w,b
  6563  002E7C  0060  F1C8  F068   	movff	___flmul@bexp,??___flmul
  6564  002E82  6B69               	clrf	(??___flmul+1)& (0+255),b
  6565  002E84  2768               	addwf	??___flmul& (0+255),f,b
  6566  002E86  0E00               	movlw	0
  6567  002E88  2369               	addwfc	(??___flmul+1)& (0+255),f,b
  6568  002E8A  0E82               	movlw	130
  6569  002E8C  2568               	addwf	??___flmul& (0+255),w,b
  6570  002E8E  6F77               	movwf	___flmul@temp& (0+255),b
  6571  002E90  0EFF               	movlw	255
  6572  002E92  2169               	addwfc	(??___flmul+1)& (0+255),w,b
  6573  002E94  6F78               	movwf	(___flmul@temp+1)& (0+255),b
  6574  002E96  D00F               	goto	l5772
  6575  002E98                     l5766:
  6576                           
  6577                           ; BSR set to: 0
  6578  002E98  90D8               	bcf	status,0,c
  6579  002E9A  3773               	rlcf	___flmul@prod& (0+255),f,b
  6580  002E9C  3774               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6581  002E9E  3775               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6582  002EA0  3776               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6583                           
  6584                           ; BSR set to: 0
  6585  002EA2  BF71               	btfsc	(___flmul@grs+3)& (0+255),7,b
  6586                           
  6587                           ; BSR set to: 0
  6588  002EA4  8173               	bsf	___flmul@prod& (0+255),0,b
  6589                           
  6590                           ; BSR set to: 0
  6591  002EA6  90D8               	bcf	status,0,c
  6592  002EA8  376E               	rlcf	___flmul@grs& (0+255),f,b
  6593  002EAA  376F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6594  002EAC  3770               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6595  002EAE  3771               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6596  002EB0  0777               	decf	___flmul@temp& (0+255),f,b
  6597  002EB2  A0D8               	btfss	status,0,c
  6598  002EB4  0778               	decf	(___flmul@temp+1)& (0+255),f,b
  6599  002EB6                     l5772:
  6600                           
  6601                           ; BSR set to: 0
  6602  002EB6  AF75               	btfss	(___flmul@prod+2)& (0+255),7,b
  6603  002EB8  D7EF               	goto	l5766
  6604                           
  6605                           ; BSR set to: 0
  6606  002EBA  0E00               	movlw	0
  6607  002EBC  6F6D               	movwf	___flmul@aexp& (0+255),b
  6608                           
  6609                           ; BSR set to: 0
  6610  002EBE  AF71               	btfss	(___flmul@grs+3)& (0+255),7,b
  6611  002EC0  D017               	goto	l1240
  6612                           
  6613                           ; BSR set to: 0
  6614  002EC2  0EFF               	movlw	255
  6615  002EC4  156E               	andwf	___flmul@grs& (0+255),w,b
  6616  002EC6  6F68               	movwf	??___flmul& (0+255),b
  6617  002EC8  0EFF               	movlw	255
  6618  002ECA  156F               	andwf	(___flmul@grs+1)& (0+255),w,b
  6619  002ECC  6F69               	movwf	(??___flmul+1)& (0+255),b
  6620  002ECE  0EFF               	movlw	255
  6621  002ED0  1570               	andwf	(___flmul@grs+2)& (0+255),w,b
  6622  002ED2  6F6A               	movwf	(??___flmul+2)& (0+255),b
  6623  002ED4  0E7F               	movlw	127
  6624  002ED6  1571               	andwf	(___flmul@grs+3)& (0+255),w,b
  6625  002ED8  6F6B               	movwf	(??___flmul+3)& (0+255),b
  6626  002EDA  5168               	movf	??___flmul& (0+255),w,b
  6627  002EDC  1169               	iorwf	(??___flmul+1)& (0+255),w,b
  6628  002EDE  116A               	iorwf	(??___flmul+2)& (0+255),w,b
  6629  002EE0  116B               	iorwf	(??___flmul+3)& (0+255),w,b
  6630  002EE2  B4D8               	btfsc	status,2,c
  6631  002EE4  D003               	goto	l1241
  6632  002EE6                     u7490:
  6633                           
  6634                           ; BSR set to: 0
  6635  002EE6  0E01               	movlw	1
  6636  002EE8  6F6D               	movwf	___flmul@aexp& (0+255),b
  6637  002EEA  D002               	goto	l1240
  6638  002EEC                     l1241:
  6639                           
  6640                           ; BSR set to: 0
  6641  002EEC  B173               	btfsc	___flmul@prod& (0+255),0,b
  6642  002EEE  D7FB               	goto	u7490
  6643  002EF0                     l1240:
  6644                           
  6645                           ; BSR set to: 0
  6646  002EF0  516D               	movf	___flmul@aexp& (0+255),w,b
  6647  002EF2  B4D8               	btfsc	status,2,c
  6648  002EF4  D027               	goto	l5792
  6649                           
  6650                           ; BSR set to: 0
  6651  002EF6  0E01               	movlw	1
  6652  002EF8  2773               	addwf	___flmul@prod& (0+255),f,b
  6653  002EFA  0E00               	movlw	0
  6654  002EFC  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6655  002EFE  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6656  002F00  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6657                           
  6658                           ; BSR set to: 0
  6659  002F02  A176               	btfss	(___flmul@prod+3)& (0+255),0,b
  6660  002F04  D01F               	goto	l5792
  6661                           
  6662                           ; BSR set to: 0
  6663  002F06  0060  F1CC  F068   	movff	___flmul@prod,??___flmul
  6664  002F0C  0060  F1D0  F069   	movff	___flmul@prod+1,??___flmul+1
  6665  002F12  0060  F1D4  F06A   	movff	___flmul@prod+2,??___flmul+2
  6666  002F18  0060  F1D8  F06B   	movff	___flmul@prod+3,??___flmul+3
  6667  002F1E  356B               	rlcf	(??___flmul+3)& (0+255),w,b
  6668  002F20  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  6669  002F22  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  6670  002F24  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  6671  002F26  3368               	rrcf	??___flmul& (0+255),f,b
  6672  002F28  0060  F1A0  F073   	movff	??___flmul,___flmul@prod
  6673  002F2E  0060  F1A4  F074   	movff	??___flmul+1,___flmul@prod+1
  6674  002F34  0060  F1A8  F075   	movff	??___flmul+2,___flmul@prod+2
  6675  002F3A  0060  F1AC  F076   	movff	??___flmul+3,___flmul@prod+3
  6676                           
  6677                           ; BSR set to: 0
  6678  002F40  4B77               	infsnz	___flmul@temp& (0+255),f,b
  6679  002F42  2B78               	incf	(___flmul@temp+1)& (0+255),f,b
  6680  002F44                     l5792:
  6681                           
  6682                           ; BSR set to: 0
  6683  002F44  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6684  002F46  D00D               	goto	l5796
  6685  002F48  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6686  002F4A  E103               	bnz	u7530
  6687  002F4C  2977               	incf	___flmul@temp& (0+255),w,b
  6688  002F4E  A0D8               	btfss	status,0,c
  6689  002F50  D008               	goto	l5796
  6690  002F52                     u7530:
  6691                           
  6692                           ; BSR set to: 0
  6693  002F52  0E00               	movlw	0
  6694  002F54  6F73               	movwf	___flmul@prod& (0+255),b
  6695  002F56  0E00               	movlw	0
  6696  002F58  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6697  002F5A  0E80               	movlw	128
  6698  002F5C  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6699  002F5E  0E7F               	movlw	127
  6700  002F60  D021               	goto	L9
  6701  002F62                     l5796:
  6702                           
  6703                           ; BSR set to: 0
  6704  002F62  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6705  002F64  D005               	goto	u7540
  6706  002F66  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6707  002F68  E10E               	bnz	l1248
  6708  002F6A  0577               	decf	___flmul@temp& (0+255),w,b
  6709  002F6C  B0D8               	btfsc	status,0,c
  6710  002F6E  D00B               	goto	l1248
  6711  002F70                     u7540:
  6712                           
  6713                           ; BSR set to: 0
  6714  002F70  0E00               	movlw	0
  6715  002F72  6F73               	movwf	___flmul@prod& (0+255),b
  6716  002F74  0E00               	movlw	0
  6717  002F76  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6718  002F78  0E00               	movlw	0
  6719  002F7A  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6720  002F7C  0E00               	movlw	0
  6721  002F7E  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6722  002F80  0E00               	movlw	0
  6723  002F82  6F6C               	movwf	___flmul@sign& (0+255),b
  6724  002F84  D010               	goto	l5808
  6725  002F86                     l1248:
  6726                           
  6727                           ; BSR set to: 0
  6728  002F86  0060  F1DC  F072   	movff	___flmul@temp,___flmul@bexp
  6729                           
  6730                           ; BSR set to: 0
  6731  002F8C  0EFF               	movlw	255
  6732  002F8E  1773               	andwf	___flmul@prod& (0+255),f,b
  6733  002F90  0EFF               	movlw	255
  6734  002F92  1774               	andwf	(___flmul@prod+1)& (0+255),f,b
  6735  002F94  0E7F               	movlw	127
  6736  002F96  1775               	andwf	(___flmul@prod+2)& (0+255),f,b
  6737  002F98  0E00               	movlw	0
  6738  002F9A  1776               	andwf	(___flmul@prod+3)& (0+255),f,b
  6739                           
  6740                           ; BSR set to: 0
  6741  002F9C  B172               	btfsc	___flmul@bexp& (0+255),0,b
  6742                           
  6743                           ; BSR set to: 0
  6744  002F9E  8F75               	bsf	(___flmul@prod+2)& (0+255),7,b
  6745                           
  6746                           ; BSR set to: 0
  6747  002FA0  90D8               	bcf	status,0,c
  6748  002FA2  3172               	rrcf	___flmul@bexp& (0+255),w,b
  6749  002FA4                     L9:
  6750  002FA4  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6751  002FA6                     l5808:
  6752                           
  6753                           ; BSR set to: 0
  6754  002FA6  516C               	movf	___flmul@sign& (0+255),w,b
  6755  002FA8  1376               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6756                           
  6757                           ; BSR set to: 0
  6758  002FAA  0060  F1CC  F060   	movff	___flmul@prod,?___flmul
  6759  002FB0  0060  F1D0  F061   	movff	___flmul@prod+1,?___flmul+1
  6760  002FB6  0060  F1D4  F062   	movff	___flmul@prod+2,?___flmul+2
  6761  002FBC  0060  F1D8  F063   	movff	___flmul@prod+3,?___flmul+3
  6762                           
  6763                           ; BSR set to: 0
  6764  002FC2  0012               	return		;funcret
  6765  002FC4                     __end_of___flmul:
  6766                           	opt callstack 0
  6767                           
  6768 ;; *************** function ___flge *****************
  6769 ;; Defined at:
  6770 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  ff1             4   25[BANK0 ] unsigned char 
  6773 ;;  ff2             4   29[BANK0 ] unsigned char 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;		None
  6776 ;; Return value:  Size  Location     Type
  6777 ;;		None               void
  6778 ;; Registers used:
  6779 ;;		wreg, status,2, status,0
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6785 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6788 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6789 ;;Total ram usage:       12 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:    2
  6792 ;; This function calls:
  6793 ;;		Nothing
  6794 ;; This function is called by:
  6795 ;;		_efgtoa
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text23
  6800  0045D4                     __ptext23:
  6801                           	opt callstack 0
  6802  0045D4                     ___flge:
  6803                           	opt callstack 23
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;incstack = 0
  6807  0045D4  0E00               	movlw	0
  6808  0045D6  0100               	movlb	0	; () banked
  6809  0045D8  1579               	andwf	___flge@ff1& (0+255),w,b
  6810  0045DA  6F81               	movwf	??___flge& (0+255),b
  6811  0045DC  0E00               	movlw	0
  6812  0045DE  157A               	andwf	(___flge@ff1+1)& (0+255),w,b
  6813  0045E0  6F82               	movwf	(??___flge+1)& (0+255),b
  6814  0045E2  0E80               	movlw	128
  6815  0045E4  157B               	andwf	(___flge@ff1+2)& (0+255),w,b
  6816  0045E6  6F83               	movwf	(??___flge+2)& (0+255),b
  6817  0045E8  0E7F               	movlw	127
  6818  0045EA  157C               	andwf	(___flge@ff1+3)& (0+255),w,b
  6819  0045EC  6F84               	movwf	(??___flge+3)& (0+255),b
  6820  0045EE  5181               	movf	??___flge& (0+255),w,b
  6821  0045F0  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6822  0045F2  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6823  0045F4  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6824  0045F6  A4D8               	btfss	status,2,c
  6825  0045F8  D008               	goto	l5920
  6826                           
  6827                           ; BSR set to: 0
  6828  0045FA  0E00               	movlw	0
  6829  0045FC  6F79               	movwf	___flge@ff1& (0+255),b
  6830  0045FE  0E00               	movlw	0
  6831  004600  6F7A               	movwf	(___flge@ff1+1)& (0+255),b
  6832  004602  0E00               	movlw	0
  6833  004604  6F7B               	movwf	(___flge@ff1+2)& (0+255),b
  6834  004606  0E00               	movlw	0
  6835  004608  6F7C               	movwf	(___flge@ff1+3)& (0+255),b
  6836  00460A                     l5920:
  6837                           
  6838                           ; BSR set to: 0
  6839  00460A  0E00               	movlw	0
  6840  00460C  157D               	andwf	___flge@ff2& (0+255),w,b
  6841  00460E  6F81               	movwf	??___flge& (0+255),b
  6842  004610  0E00               	movlw	0
  6843  004612  157E               	andwf	(___flge@ff2+1)& (0+255),w,b
  6844  004614  6F82               	movwf	(??___flge+1)& (0+255),b
  6845  004616  0E80               	movlw	128
  6846  004618  157F               	andwf	(___flge@ff2+2)& (0+255),w,b
  6847  00461A  6F83               	movwf	(??___flge+2)& (0+255),b
  6848  00461C  0E7F               	movlw	127
  6849  00461E  1580               	andwf	(___flge@ff2+3)& (0+255),w,b
  6850  004620  6F84               	movwf	(??___flge+3)& (0+255),b
  6851  004622  5181               	movf	??___flge& (0+255),w,b
  6852  004624  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6853  004626  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6854  004628  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6855  00462A  A4D8               	btfss	status,2,c
  6856  00462C  D008               	goto	l5924
  6857                           
  6858                           ; BSR set to: 0
  6859  00462E  0E00               	movlw	0
  6860  004630  6F7D               	movwf	___flge@ff2& (0+255),b
  6861  004632  0E00               	movlw	0
  6862  004634  6F7E               	movwf	(___flge@ff2+1)& (0+255),b
  6863  004636  0E00               	movlw	0
  6864  004638  6F7F               	movwf	(___flge@ff2+2)& (0+255),b
  6865  00463A  0E00               	movlw	0
  6866  00463C  6F80               	movwf	(___flge@ff2+3)& (0+255),b
  6867  00463E                     l5924:
  6868                           
  6869                           ; BSR set to: 0
  6870  00463E  AF7C               	btfss	(___flge@ff1+3)& (0+255),7,b
  6871  004640  D009               	goto	l5928
  6872                           
  6873                           ; BSR set to: 0
  6874  004642  6D79               	negf	___flge@ff1& (0+255),b
  6875  004644  1F7A               	comf	(___flge@ff1+1)& (0+255),f,b
  6876  004646  B0D8               	btfsc	status,0,c
  6877  004648  2B7A               	incf	(___flge@ff1+1)& (0+255),f,b
  6878  00464A  1F7B               	comf	(___flge@ff1+2)& (0+255),f,b
  6879  00464C  B0D8               	btfsc	status,0,c
  6880  00464E  2B7B               	incf	(___flge@ff1+2)& (0+255),f,b
  6881  004650  0E80               	movlw	128
  6882  004652  577C               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6883  004654                     l5928:
  6884                           
  6885                           ; BSR set to: 0
  6886  004654  AF80               	btfss	(___flge@ff2+3)& (0+255),7,b
  6887  004656  D009               	goto	l882
  6888                           
  6889                           ; BSR set to: 0
  6890  004658  6D7D               	negf	___flge@ff2& (0+255),b
  6891  00465A  1F7E               	comf	(___flge@ff2+1)& (0+255),f,b
  6892  00465C  B0D8               	btfsc	status,0,c
  6893  00465E  2B7E               	incf	(___flge@ff2+1)& (0+255),f,b
  6894  004660  1F7F               	comf	(___flge@ff2+2)& (0+255),f,b
  6895  004662  B0D8               	btfsc	status,0,c
  6896  004664  2B7F               	incf	(___flge@ff2+2)& (0+255),f,b
  6897  004666  0E80               	movlw	128
  6898  004668  5780               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6899  00466A                     l882:
  6900                           
  6901                           ; BSR set to: 0
  6902  00466A  0E00               	movlw	0
  6903  00466C  1B79               	xorwf	___flge@ff1& (0+255),f,b
  6904  00466E  0E00               	movlw	0
  6905  004670  1B7A               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6906  004672  0E00               	movlw	0
  6907  004674  1B7B               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6908  004676  0E80               	movlw	128
  6909  004678  1B7C               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6910  00467A  0E00               	movlw	0
  6911  00467C  1B7D               	xorwf	___flge@ff2& (0+255),f,b
  6912  00467E  0E00               	movlw	0
  6913  004680  1B7E               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6914  004682  0E00               	movlw	0
  6915  004684  1B7F               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6916  004686  0E80               	movlw	128
  6917  004688  1B80               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6918  00468A  517D               	movf	___flge@ff2& (0+255),w,b
  6919  00468C  5D79               	subwf	___flge@ff1& (0+255),w,b
  6920  00468E  517E               	movf	(___flge@ff2+1)& (0+255),w,b
  6921  004690  597A               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6922  004692  517F               	movf	(___flge@ff2+2)& (0+255),w,b
  6923  004694  597B               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6924  004696  5180               	movf	(___flge@ff2+3)& (0+255),w,b
  6925  004698  597C               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6926  00469A  B0D8               	btfsc	status,0,c
  6927  00469C  D002               	goto	l5934
  6928                           
  6929                           ; BSR set to: 0
  6930  00469E  90D8               	bcf	status,0,c
  6931  0046A0  0012               	return	
  6932  0046A2                     l5934:
  6933                           
  6934                           ; BSR set to: 0
  6935  0046A2  80D8               	bsf	status,0,c
  6936                           
  6937                           ; BSR set to: 0
  6938  0046A4  0012               	return		;funcret
  6939  0046A6                     __end_of___flge:
  6940                           	opt callstack 0
  6941                           
  6942 ;; *************** function ___fleq *****************
  6943 ;; Defined at:
  6944 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  ff1             4    0[BANK0 ] unsigned char 
  6947 ;;  ff2             4    4[BANK0 ] unsigned char 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;		None
  6950 ;; Return value:  Size  Location     Type
  6951 ;;		None               void
  6952 ;; Registers used:
  6953 ;;		wreg, status,2, status,0
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6959 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6961 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6962 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6963 ;;Total ram usage:       12 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    2
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		_efgtoa
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text24
  6974  004BA0                     __ptext24:
  6975                           	opt callstack 0
  6976  004BA0                     ___fleq:
  6977                           	opt callstack 23
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;incstack = 0
  6981  004BA0  0E00               	movlw	0
  6982  004BA2  0100               	movlb	0	; () banked
  6983  004BA4  1560               	andwf	___fleq@ff1& (0+255),w,b
  6984  004BA6  6F68               	movwf	??___fleq& (0+255),b
  6985  004BA8  0E00               	movlw	0
  6986  004BAA  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6987  004BAC  6F69               	movwf	(??___fleq+1)& (0+255),b
  6988  004BAE  0E80               	movlw	128
  6989  004BB0  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6990  004BB2  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6991  004BB4  0E7F               	movlw	127
  6992  004BB6  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6993  004BB8  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6994  004BBA  5168               	movf	??___fleq& (0+255),w,b
  6995  004BBC  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6996  004BBE  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6997  004BC0  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6998  004BC2  A4D8               	btfss	status,2,c
  6999  004BC4  D008               	goto	l5904
  7000                           
  7001                           ; BSR set to: 0
  7002  004BC6  0E00               	movlw	0
  7003  004BC8  6F60               	movwf	___fleq@ff1& (0+255),b
  7004  004BCA  0E00               	movlw	0
  7005  004BCC  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  7006  004BCE  0E00               	movlw	0
  7007  004BD0  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  7008  004BD2  0E00               	movlw	0
  7009  004BD4  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  7010  004BD6                     l5904:
  7011                           
  7012                           ; BSR set to: 0
  7013  004BD6  0E00               	movlw	0
  7014  004BD8  1564               	andwf	___fleq@ff2& (0+255),w,b
  7015  004BDA  6F68               	movwf	??___fleq& (0+255),b
  7016  004BDC  0E00               	movlw	0
  7017  004BDE  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  7018  004BE0  6F69               	movwf	(??___fleq+1)& (0+255),b
  7019  004BE2  0E80               	movlw	128
  7020  004BE4  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  7021  004BE6  6F6A               	movwf	(??___fleq+2)& (0+255),b
  7022  004BE8  0E7F               	movlw	127
  7023  004BEA  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  7024  004BEC  6F6B               	movwf	(??___fleq+3)& (0+255),b
  7025  004BEE  5168               	movf	??___fleq& (0+255),w,b
  7026  004BF0  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  7027  004BF2  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  7028  004BF4  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  7029  004BF6  A4D8               	btfss	status,2,c
  7030  004BF8  D008               	goto	l5908
  7031                           
  7032                           ; BSR set to: 0
  7033  004BFA  0E00               	movlw	0
  7034  004BFC  6F64               	movwf	___fleq@ff2& (0+255),b
  7035  004BFE  0E00               	movlw	0
  7036  004C00  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  7037  004C02  0E00               	movlw	0
  7038  004C04  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  7039  004C06  0E00               	movlw	0
  7040  004C08  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  7041  004C0A                     l5908:
  7042                           
  7043                           ; BSR set to: 0
  7044  004C0A  5164               	movf	___fleq@ff2& (0+255),w,b
  7045  004C0C  1960               	xorwf	___fleq@ff1& (0+255),w,b
  7046  004C0E  E10A               	bnz	u7700
  7047  004C10  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  7048  004C12  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  7049  004C14  E107               	bnz	u7700
  7050  004C16  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  7051  004C18  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  7052  004C1A  E104               	bnz	u7700
  7053  004C1C  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  7054  004C1E  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  7055  004C20  B4D8               	btfsc	status,2,c
  7056  004C22  D002               	goto	l5912
  7057  004C24                     u7700:
  7058                           
  7059                           ; BSR set to: 0
  7060  004C24  90D8               	bcf	status,0,c
  7061  004C26  0012               	return	
  7062  004C28                     l5912:
  7063                           
  7064                           ; BSR set to: 0
  7065  004C28  80D8               	bsf	status,0,c
  7066                           
  7067                           ; BSR set to: 0
  7068  004C2A  0012               	return		;funcret
  7069  004C2C                     __end_of___fleq:
  7070                           	opt callstack 0
  7071                           
  7072 ;; *************** function ___fldiv *****************
  7073 ;; Defined at:
  7074 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;  b               4    0[BANK0 ] unsigned char 
  7077 ;;  a               4    4[BANK0 ] unsigned char 
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;  grs             4   19[BANK0 ] unsigned long 
  7080 ;;  rem             4   12[BANK0 ] unsigned long 
  7081 ;;  new_exp         2   17[BANK0 ] short 
  7082 ;;  aexp            1   24[BANK0 ] unsigned char 
  7083 ;;  bexp            1   23[BANK0 ] unsigned char 
  7084 ;;  sign            1   16[BANK0 ] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  4    0[BANK0 ] unsigned char 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7094 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7095 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7097 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7098 ;;Total ram usage:       25 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    2
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_efgtoa
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text25
  7109  003A56                     __ptext25:
  7110                           	opt callstack 0
  7111  003A56                     ___fldiv:
  7112                           	opt callstack 23
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;incstack = 0
  7116  003A56  0100               	movlb	0	; () banked
  7117  003A58  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7118  003A5A  0B80               	andlw	128
  7119  003A5C  6F70               	movwf	___fldiv@sign& (0+255),b
  7120  003A5E  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7121  003A60  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  7122  003A62  6F77               	movwf	___fldiv@bexp& (0+255),b
  7123                           
  7124                           ; BSR set to: 0
  7125  003A64  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  7126                           
  7127                           ; BSR set to: 0
  7128  003A66  8177               	bsf	___fldiv@bexp& (0+255),0,b
  7129                           
  7130                           ; BSR set to: 0
  7131  003A68  5177               	movf	___fldiv@bexp& (0+255),w,b
  7132  003A6A  B4D8               	btfsc	status,2,c
  7133  003A6C  D00D               	goto	l5562
  7134                           
  7135                           ; BSR set to: 0
  7136  003A6E  2977               	incf	___fldiv@bexp& (0+255),w,b
  7137  003A70  A4D8               	btfss	status,2,c
  7138  003A72  D008               	goto	l5558
  7139                           
  7140                           ; BSR set to: 0
  7141  003A74  0E00               	movlw	0
  7142  003A76  6F60               	movwf	___fldiv@b& (0+255),b
  7143  003A78  0E00               	movlw	0
  7144  003A7A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7145  003A7C  0E00               	movlw	0
  7146  003A7E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7147  003A80  0E00               	movlw	0
  7148  003A82  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7149  003A84                     l5558:
  7150                           
  7151                           ; BSR set to: 0
  7152  003A84  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7153  003A86  D006               	goto	L10
  7154  003A88                     l5562:
  7155                           
  7156                           ; BSR set to: 0
  7157  003A88  0E00               	movlw	0
  7158  003A8A  6F60               	movwf	___fldiv@b& (0+255),b
  7159  003A8C  0E00               	movlw	0
  7160  003A8E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7161  003A90  0E00               	movlw	0
  7162  003A92  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7163  003A94                     L10:
  7164  003A94  0E00               	movlw	0
  7165  003A96  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7166                           
  7167                           ; BSR set to: 0
  7168  003A98  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7169  003A9A  0B80               	andlw	128
  7170  003A9C  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  7171                           
  7172                           ; BSR set to: 0
  7173  003A9E  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7174  003AA0  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  7175  003AA2  6F78               	movwf	___fldiv@aexp& (0+255),b
  7176                           
  7177                           ; BSR set to: 0
  7178  003AA4  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  7179                           
  7180                           ; BSR set to: 0
  7181  003AA6  8178               	bsf	___fldiv@aexp& (0+255),0,b
  7182                           
  7183                           ; BSR set to: 0
  7184  003AA8  5178               	movf	___fldiv@aexp& (0+255),w,b
  7185  003AAA  B4D8               	btfsc	status,2,c
  7186  003AAC  D00D               	goto	l5582
  7187                           
  7188                           ; BSR set to: 0
  7189  003AAE  2978               	incf	___fldiv@aexp& (0+255),w,b
  7190  003AB0  A4D8               	btfss	status,2,c
  7191  003AB2  D008               	goto	l5578
  7192                           
  7193                           ; BSR set to: 0
  7194  003AB4  0E00               	movlw	0
  7195  003AB6  6F64               	movwf	___fldiv@a& (0+255),b
  7196  003AB8  0E00               	movlw	0
  7197  003ABA  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7198  003ABC  0E00               	movlw	0
  7199  003ABE  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7200  003AC0  0E00               	movlw	0
  7201  003AC2  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7202  003AC4                     l5578:
  7203                           
  7204                           ; BSR set to: 0
  7205  003AC4  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  7206  003AC6  D006               	goto	L11
  7207  003AC8                     l5582:
  7208                           
  7209                           ; BSR set to: 0
  7210  003AC8  0E00               	movlw	0
  7211  003ACA  6F64               	movwf	___fldiv@a& (0+255),b
  7212  003ACC  0E00               	movlw	0
  7213  003ACE  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7214  003AD0  0E00               	movlw	0
  7215  003AD2  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7216  003AD4                     L11:
  7217  003AD4  0E00               	movlw	0
  7218  003AD6  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7219                           
  7220                           ; BSR set to: 0
  7221  003AD8  5164               	movf	___fldiv@a& (0+255),w,b
  7222  003ADA  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7223  003ADC  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7224  003ADE  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7225  003AE0  A4D8               	btfss	status,2,c
  7226  003AE2  D01B               	goto	l5596
  7227                           
  7228                           ; BSR set to: 0
  7229  003AE4  0E00               	movlw	0
  7230  003AE6  6F60               	movwf	___fldiv@b& (0+255),b
  7231  003AE8  0E00               	movlw	0
  7232  003AEA  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7233  003AEC  0E00               	movlw	0
  7234  003AEE  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7235  003AF0  0E00               	movlw	0
  7236  003AF2  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7237                           
  7238                           ; BSR set to: 0
  7239  003AF4  0E80               	movlw	128
  7240  003AF6  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7241  003AF8  0E7F               	movlw	127
  7242  003AFA  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7243  003AFC                     l5590:
  7244                           
  7245                           ; BSR set to: 0
  7246  003AFC  5170               	movf	___fldiv@sign& (0+255),w,b
  7247  003AFE  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7248                           
  7249                           ; BSR set to: 0
  7250  003B00  0060  F180  F060   	movff	___fldiv@b,?___fldiv
  7251  003B06  0060  F184  F061   	movff	___fldiv@b+1,?___fldiv+1
  7252  003B0C  0060  F188  F062   	movff	___fldiv@b+2,?___fldiv+2
  7253  003B12  0060  F18C  F063   	movff	___fldiv@b+3,?___fldiv+3
  7254  003B18  0012               	return	
  7255  003B1A                     l5596:
  7256                           
  7257                           ; BSR set to: 0
  7258  003B1A  5177               	movf	___fldiv@bexp& (0+255),w,b
  7259  003B1C  A4D8               	btfss	status,2,c
  7260  003B1E  D009               	goto	l5604
  7261                           
  7262                           ; BSR set to: 0
  7263                           
  7264                           ; BSR set to: 0
  7265  003B20  0E00               	movlw	0
  7266  003B22  6F60               	movwf	?___fldiv& (0+255),b
  7267  003B24  0E00               	movlw	0
  7268  003B26  6F61               	movwf	(?___fldiv+1)& (0+255),b
  7269  003B28  0E00               	movlw	0
  7270  003B2A  6F62               	movwf	(?___fldiv+2)& (0+255),b
  7271  003B2C  0E00               	movlw	0
  7272  003B2E  6F63               	movwf	(?___fldiv+3)& (0+255),b
  7273  003B30  0012               	return	
  7274  003B32                     l5604:
  7275                           
  7276                           ; BSR set to: 0
  7277  003B32  5178               	movf	___fldiv@aexp& (0+255),w,b
  7278  003B34  0060  F1DC  F068   	movff	___fldiv@bexp,??___fldiv
  7279  003B3A  6B69               	clrf	(??___fldiv+1)& (0+255),b
  7280  003B3C  5F68               	subwf	??___fldiv& (0+255),f,b
  7281  003B3E  0E00               	movlw	0
  7282  003B40  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  7283  003B42  0E7F               	movlw	127
  7284  003B44  2568               	addwf	??___fldiv& (0+255),w,b
  7285  003B46  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7286  003B48  0E00               	movlw	0
  7287  003B4A  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  7288  003B4C  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7289                           
  7290                           ; BSR set to: 0
  7291  003B4E  0060  F180  F06C   	movff	___fldiv@b,___fldiv@rem
  7292  003B54  0060  F184  F06D   	movff	___fldiv@b+1,___fldiv@rem+1
  7293  003B5A  0060  F188  F06E   	movff	___fldiv@b+2,___fldiv@rem+2
  7294  003B60  0060  F18C  F06F   	movff	___fldiv@b+3,___fldiv@rem+3
  7295                           
  7296                           ; BSR set to: 0
  7297  003B66  0E00               	movlw	0
  7298  003B68  6F60               	movwf	___fldiv@b& (0+255),b
  7299  003B6A  0E00               	movlw	0
  7300  003B6C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7301  003B6E  0E00               	movlw	0
  7302  003B70  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7303  003B72  0E00               	movlw	0
  7304  003B74  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7305                           
  7306                           ; BSR set to: 0
  7307  003B76  0E00               	movlw	0
  7308  003B78  6F73               	movwf	___fldiv@grs& (0+255),b
  7309  003B7A  0E00               	movlw	0
  7310  003B7C  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  7311  003B7E  0E00               	movlw	0
  7312  003B80  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  7313  003B82  0E00               	movlw	0
  7314  003B84  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  7315                           
  7316                           ; BSR set to: 0
  7317  003B86  0E00               	movlw	0
  7318  003B88  6F78               	movwf	___fldiv@aexp& (0+255),b
  7319  003B8A  D028               	goto	l1201
  7320  003B8C                     l5614:
  7321                           
  7322                           ; BSR set to: 0
  7323  003B8C  5178               	movf	___fldiv@aexp& (0+255),w,b
  7324  003B8E  B4D8               	btfsc	status,2,c
  7325  003B90  D011               	goto	l5622
  7326                           
  7327                           ; BSR set to: 0
  7328  003B92  90D8               	bcf	status,0,c
  7329  003B94  376C               	rlcf	___fldiv@rem& (0+255),f,b
  7330  003B96  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7331  003B98  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7332  003B9A  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7333  003B9C  90D8               	bcf	status,0,c
  7334  003B9E  3760               	rlcf	___fldiv@b& (0+255),f,b
  7335  003BA0  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7336  003BA2  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7337  003BA4  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7338                           
  7339                           ; BSR set to: 0
  7340  003BA6  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7341                           
  7342                           ; BSR set to: 0
  7343  003BA8  8160               	bsf	___fldiv@b& (0+255),0,b
  7344                           
  7345                           ; BSR set to: 0
  7346  003BAA  90D8               	bcf	status,0,c
  7347  003BAC  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7348  003BAE  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7349  003BB0  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7350  003BB2  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7351  003BB4                     l5622:
  7352                           
  7353                           ; BSR set to: 0
  7354  003BB4  5164               	movf	___fldiv@a& (0+255),w,b
  7355  003BB6  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  7356  003BB8  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7357  003BBA  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7358  003BBC  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7359  003BBE  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7360  003BC0  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7361  003BC2  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7362  003BC4  A0D8               	btfss	status,0,c
  7363  003BC6  D009               	goto	l5628
  7364                           
  7365                           ; BSR set to: 0
  7366  003BC8  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7367                           
  7368                           ; BSR set to: 0
  7369  003BCA  5164               	movf	___fldiv@a& (0+255),w,b
  7370  003BCC  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  7371  003BCE  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7372  003BD0  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7373  003BD2  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7374  003BD4  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7375  003BD6  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7376  003BD8  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7377  003BDA                     l5628:
  7378                           
  7379                           ; BSR set to: 0
  7380  003BDA  2B78               	incf	___fldiv@aexp& (0+255),f,b
  7381  003BDC                     l1201:
  7382                           
  7383                           ; BSR set to: 0
  7384  003BDC  0E19               	movlw	25
  7385  003BDE  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  7386  003BE0  D7D5               	goto	l5614
  7387                           
  7388                           ; BSR set to: 0
  7389  003BE2  516C               	movf	___fldiv@rem& (0+255),w,b
  7390  003BE4  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7391  003BE6  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7392  003BE8  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7393  003BEA  B4D8               	btfsc	status,2,c
  7394  003BEC  D011               	goto	l5640
  7395                           
  7396                           ; BSR set to: 0
  7397  003BEE  8173               	bsf	___fldiv@grs& (0+255),0,b
  7398  003BF0  D00F               	goto	l5640
  7399  003BF2                     l5634:
  7400                           
  7401                           ; BSR set to: 0
  7402  003BF2  90D8               	bcf	status,0,c
  7403  003BF4  3760               	rlcf	___fldiv@b& (0+255),f,b
  7404  003BF6  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7405  003BF8  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7406  003BFA  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7407                           
  7408                           ; BSR set to: 0
  7409  003BFC  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7410                           
  7411                           ; BSR set to: 0
  7412  003BFE  8160               	bsf	___fldiv@b& (0+255),0,b
  7413                           
  7414                           ; BSR set to: 0
  7415  003C00  90D8               	bcf	status,0,c
  7416  003C02  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7417  003C04  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7418  003C06  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7419  003C08  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7420  003C0A  0771               	decf	___fldiv@new_exp& (0+255),f,b
  7421  003C0C  A0D8               	btfss	status,0,c
  7422  003C0E  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7423  003C10                     l5640:
  7424                           
  7425                           ; BSR set to: 0
  7426  003C10  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  7427  003C12  D7EF               	goto	l5634
  7428                           
  7429                           ; BSR set to: 0
  7430  003C14  0E00               	movlw	0
  7431  003C16  6F78               	movwf	___fldiv@aexp& (0+255),b
  7432                           
  7433                           ; BSR set to: 0
  7434  003C18  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7435  003C1A  D017               	goto	l1212
  7436                           
  7437                           ; BSR set to: 0
  7438  003C1C  0EFF               	movlw	255
  7439  003C1E  1573               	andwf	___fldiv@grs& (0+255),w,b
  7440  003C20  6F68               	movwf	??___fldiv& (0+255),b
  7441  003C22  0EFF               	movlw	255
  7442  003C24  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7443  003C26  6F69               	movwf	(??___fldiv+1)& (0+255),b
  7444  003C28  0EFF               	movlw	255
  7445  003C2A  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7446  003C2C  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  7447  003C2E  0E7F               	movlw	127
  7448  003C30  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7449  003C32  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  7450  003C34  5168               	movf	??___fldiv& (0+255),w,b
  7451  003C36  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  7452  003C38  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  7453  003C3A  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  7454  003C3C  B4D8               	btfsc	status,2,c
  7455  003C3E  D003               	goto	l1213
  7456  003C40                     u7300:
  7457                           
  7458                           ; BSR set to: 0
  7459  003C40  0E01               	movlw	1
  7460  003C42  6F78               	movwf	___fldiv@aexp& (0+255),b
  7461  003C44  D002               	goto	l1212
  7462  003C46                     l1213:
  7463                           
  7464                           ; BSR set to: 0
  7465  003C46  B160               	btfsc	___fldiv@b& (0+255),0,b
  7466  003C48  D7FB               	goto	u7300
  7467  003C4A                     l1212:
  7468                           
  7469                           ; BSR set to: 0
  7470  003C4A  5178               	movf	___fldiv@aexp& (0+255),w,b
  7471  003C4C  B4D8               	btfsc	status,2,c
  7472  003C4E  D027               	goto	l5660
  7473                           
  7474                           ; BSR set to: 0
  7475  003C50  0E01               	movlw	1
  7476  003C52  2760               	addwf	___fldiv@b& (0+255),f,b
  7477  003C54  0E00               	movlw	0
  7478  003C56  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7479  003C58  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7480  003C5A  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7481                           
  7482                           ; BSR set to: 0
  7483  003C5C  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  7484  003C5E  D01F               	goto	l5660
  7485                           
  7486                           ; BSR set to: 0
  7487  003C60  0060  F180  F068   	movff	___fldiv@b,??___fldiv
  7488  003C66  0060  F184  F069   	movff	___fldiv@b+1,??___fldiv+1
  7489  003C6C  0060  F188  F06A   	movff	___fldiv@b+2,??___fldiv+2
  7490  003C72  0060  F18C  F06B   	movff	___fldiv@b+3,??___fldiv+3
  7491  003C78  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  7492  003C7A  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  7493  003C7C  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  7494  003C7E  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  7495  003C80  3368               	rrcf	??___fldiv& (0+255),f,b
  7496  003C82  0060  F1A0  F060   	movff	??___fldiv,___fldiv@b
  7497  003C88  0060  F1A4  F061   	movff	??___fldiv+1,___fldiv@b+1
  7498  003C8E  0060  F1A8  F062   	movff	??___fldiv+2,___fldiv@b+2
  7499  003C94  0060  F1AC  F063   	movff	??___fldiv+3,___fldiv@b+3
  7500                           
  7501                           ; BSR set to: 0
  7502  003C9A  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  7503  003C9C  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7504  003C9E                     l5660:
  7505                           
  7506                           ; BSR set to: 0
  7507  003C9E  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7508  003CA0  D010               	goto	l5664
  7509  003CA2  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7510  003CA4  E103               	bnz	u7340
  7511  003CA6  2971               	incf	___fldiv@new_exp& (0+255),w,b
  7512  003CA8  A0D8               	btfss	status,0,c
  7513  003CAA  D00B               	goto	l5664
  7514  003CAC                     u7340:
  7515                           
  7516                           ; BSR set to: 0
  7517  003CAC  0E00               	movlw	0
  7518  003CAE  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7519  003CB0  6971               	setf	___fldiv@new_exp& (0+255),b
  7520  003CB2  0E00               	movlw	0
  7521  003CB4  6F60               	movwf	___fldiv@b& (0+255),b
  7522  003CB6  0E00               	movlw	0
  7523  003CB8  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7524  003CBA  0E00               	movlw	0
  7525  003CBC  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7526  003CBE  0E00               	movlw	0
  7527  003CC0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7528  003CC2                     l5664:
  7529                           
  7530                           ; BSR set to: 0
  7531  003CC2  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7532  003CC4  D005               	goto	u7350
  7533  003CC6  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7534  003CC8  E111               	bnz	l5668
  7535  003CCA  0571               	decf	___fldiv@new_exp& (0+255),w,b
  7536  003CCC  B0D8               	btfsc	status,0,c
  7537  003CCE  D00E               	goto	l5668
  7538  003CD0                     u7350:
  7539                           
  7540                           ; BSR set to: 0
  7541  003CD0  0E00               	movlw	0
  7542  003CD2  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7543  003CD4  0E00               	movlw	0
  7544  003CD6  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7545  003CD8  0E00               	movlw	0
  7546  003CDA  6F60               	movwf	___fldiv@b& (0+255),b
  7547  003CDC  0E00               	movlw	0
  7548  003CDE  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7549  003CE0  0E00               	movlw	0
  7550  003CE2  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7551  003CE4  0E00               	movlw	0
  7552  003CE6  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7553  003CE8  0E00               	movlw	0
  7554  003CEA  6F70               	movwf	___fldiv@sign& (0+255),b
  7555  003CEC                     l5668:
  7556                           
  7557                           ; BSR set to: 0
  7558  003CEC  0060  F1C4  F077   	movff	___fldiv@new_exp,___fldiv@bexp
  7559                           
  7560                           ; BSR set to: 0
  7561  003CF2  A177               	btfss	___fldiv@bexp& (0+255),0,b
  7562  003CF4  D002               	goto	l5674
  7563                           
  7564                           ; BSR set to: 0
  7565  003CF6  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7566  003CF8  D001               	goto	l5676
  7567  003CFA                     l5674:
  7568                           
  7569                           ; BSR set to: 0
  7570  003CFA  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  7571  003CFC                     l5676:
  7572                           
  7573                           ; BSR set to: 0
  7574  003CFC  90D8               	bcf	status,0,c
  7575  003CFE  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  7576  003D00  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7577  003D02  D6FC               	goto	l5590
  7578  003D04                     __end_of___fldiv:
  7579                           	opt callstack 0
  7580                           
  7581 ;; *************** function ___awmod *****************
  7582 ;; Defined at:
  7583 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  dividend        2    0[BANK0 ] int 
  7586 ;;  divisor         2    2[BANK0 ] int 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  sign            1    5[BANK0 ] unsigned char 
  7589 ;;  counter         1    4[BANK0 ] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  2    0[BANK0 ] int 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7599 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7602 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7603 ;;Total ram usage:        6 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    2
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_efgtoa
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text26
  7614  004D3C                     __ptext26:
  7615                           	opt callstack 0
  7616  004D3C                     ___awmod:
  7617                           	opt callstack 23
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;incstack = 0
  7621  004D3C  0E00               	movlw	0
  7622  004D3E  0100               	movlb	0	; () banked
  7623  004D40  6F65               	movwf	___awmod@sign& (0+255),b
  7624                           
  7625                           ; BSR set to: 0
  7626  004D42  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7627  004D44  D006               	goto	l5872
  7628                           
  7629                           ; BSR set to: 0
  7630  004D46  6D60               	negf	___awmod@dividend& (0+255),b
  7631  004D48  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7632  004D4A  B0D8               	btfsc	status,0,c
  7633  004D4C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7634                           
  7635                           ; BSR set to: 0
  7636  004D4E  0E01               	movlw	1
  7637  004D50  6F65               	movwf	___awmod@sign& (0+255),b
  7638  004D52                     l5872:
  7639                           
  7640                           ; BSR set to: 0
  7641  004D52  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7642  004D54  D004               	goto	l5876
  7643                           
  7644                           ; BSR set to: 0
  7645  004D56  6D62               	negf	___awmod@divisor& (0+255),b
  7646  004D58  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7647  004D5A  B0D8               	btfsc	status,0,c
  7648  004D5C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7649  004D5E                     l5876:
  7650                           
  7651                           ; BSR set to: 0
  7652  004D5E  5162               	movf	___awmod@divisor& (0+255),w,b
  7653  004D60  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7654  004D62  B4D8               	btfsc	status,2,c
  7655  004D64  D018               	goto	l5892
  7656                           
  7657                           ; BSR set to: 0
  7658  004D66  0E01               	movlw	1
  7659  004D68  6F64               	movwf	___awmod@counter& (0+255),b
  7660  004D6A  D004               	goto	l5882
  7661  004D6C                     l5880:
  7662                           
  7663                           ; BSR set to: 0
  7664  004D6C  90D8               	bcf	status,0,c
  7665  004D6E  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7666  004D70  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7667  004D72  2B64               	incf	___awmod@counter& (0+255),f,b
  7668  004D74                     l5882:
  7669                           
  7670                           ; BSR set to: 0
  7671  004D74  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7672  004D76  D7FA               	goto	l5880
  7673  004D78                     u7650:
  7674                           
  7675                           ; BSR set to: 0
  7676  004D78  5162               	movf	___awmod@divisor& (0+255),w,b
  7677  004D7A  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7678  004D7C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7679  004D7E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7680  004D80  A0D8               	btfss	status,0,c
  7681  004D82  D004               	goto	l5888
  7682                           
  7683                           ; BSR set to: 0
  7684  004D84  5162               	movf	___awmod@divisor& (0+255),w,b
  7685  004D86  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7686  004D88  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7687  004D8A  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7688  004D8C                     l5888:
  7689                           
  7690                           ; BSR set to: 0
  7691  004D8C  90D8               	bcf	status,0,c
  7692  004D8E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7693  004D90  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7694                           
  7695                           ; BSR set to: 0
  7696  004D92  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7697  004D94  D7F1               	goto	u7650
  7698  004D96                     l5892:
  7699                           
  7700                           ; BSR set to: 0
  7701  004D96  5165               	movf	___awmod@sign& (0+255),w,b
  7702  004D98  B4D8               	btfsc	status,2,c
  7703  004D9A  D004               	goto	l5896
  7704                           
  7705                           ; BSR set to: 0
  7706  004D9C  6D60               	negf	___awmod@dividend& (0+255),b
  7707  004D9E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7708  004DA0  B0D8               	btfsc	status,0,c
  7709  004DA2  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7710  004DA4                     l5896:
  7711                           
  7712                           ; BSR set to: 0
  7713  004DA4  0060  F180  F060   	movff	___awmod@dividend,?___awmod
  7714  004DAA  0060  F184  F061   	movff	___awmod@dividend+1,?___awmod+1
  7715                           
  7716                           ; BSR set to: 0
  7717  004DB0  0012               	return		;funcret
  7718  004DB2                     __end_of___awmod:
  7719                           	opt callstack 0
  7720                           
  7721 ;; *************** function ___awdiv *****************
  7722 ;; Defined at:
  7723 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  dividend        2    0[BANK0 ] int 
  7726 ;;  divisor         2    2[BANK0 ] int 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  quotient        2    6[BANK0 ] int 
  7729 ;;  sign            1    5[BANK0 ] unsigned char 
  7730 ;;  counter         1    4[BANK0 ] unsigned char 
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  2    0[BANK0 ] int 
  7733 ;; Registers used:
  7734 ;;		wreg, status,2, status,0
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7740 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7741 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7743 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7744 ;;Total ram usage:        8 bytes
  7745 ;; Hardware stack levels used:    1
  7746 ;; Hardware stack levels required when called:    2
  7747 ;; This function calls:
  7748 ;;		Nothing
  7749 ;; This function is called by:
  7750 ;;		_efgtoa
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text27
  7755  004C2C                     __ptext27:
  7756                           	opt callstack 0
  7757  004C2C                     ___awdiv:
  7758                           	opt callstack 23
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;incstack = 0
  7762  004C2C  0E00               	movlw	0
  7763  004C2E  0100               	movlb	0	; () banked
  7764  004C30  6F65               	movwf	___awdiv@sign& (0+255),b
  7765                           
  7766                           ; BSR set to: 0
  7767  004C32  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7768  004C34  D006               	goto	l5828
  7769                           
  7770                           ; BSR set to: 0
  7771  004C36  6D62               	negf	___awdiv@divisor& (0+255),b
  7772  004C38  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7773  004C3A  B0D8               	btfsc	status,0,c
  7774  004C3C  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7775                           
  7776                           ; BSR set to: 0
  7777  004C3E  0E01               	movlw	1
  7778  004C40  6F65               	movwf	___awdiv@sign& (0+255),b
  7779  004C42                     l5828:
  7780                           
  7781                           ; BSR set to: 0
  7782  004C42  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7783  004C44  D006               	goto	l5834
  7784                           
  7785                           ; BSR set to: 0
  7786  004C46  6D60               	negf	___awdiv@dividend& (0+255),b
  7787  004C48  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7788  004C4A  B0D8               	btfsc	status,0,c
  7789  004C4C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7790                           
  7791                           ; BSR set to: 0
  7792  004C4E  0E01               	movlw	1
  7793  004C50  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7794  004C52                     l5834:
  7795                           
  7796                           ; BSR set to: 0
  7797  004C52  0E00               	movlw	0
  7798  004C54  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7799  004C56  0E00               	movlw	0
  7800  004C58  6F66               	movwf	___awdiv@quotient& (0+255),b
  7801                           
  7802                           ; BSR set to: 0
  7803  004C5A  5162               	movf	___awdiv@divisor& (0+255),w,b
  7804  004C5C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7805  004C5E  B4D8               	btfsc	status,2,c
  7806  004C60  D01C               	goto	l5856
  7807                           
  7808                           ; BSR set to: 0
  7809  004C62  0E01               	movlw	1
  7810  004C64  6F64               	movwf	___awdiv@counter& (0+255),b
  7811  004C66  D004               	goto	l5842
  7812  004C68                     l5840:
  7813                           
  7814                           ; BSR set to: 0
  7815  004C68  90D8               	bcf	status,0,c
  7816  004C6A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7817  004C6C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7818  004C6E  2B64               	incf	___awdiv@counter& (0+255),f,b
  7819  004C70                     l5842:
  7820                           
  7821                           ; BSR set to: 0
  7822  004C70  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7823  004C72  D7FA               	goto	l5840
  7824  004C74                     u7590:
  7825                           
  7826                           ; BSR set to: 0
  7827  004C74  90D8               	bcf	status,0,c
  7828  004C76  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7829  004C78  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7830                           
  7831                           ; BSR set to: 0
  7832  004C7A  5162               	movf	___awdiv@divisor& (0+255),w,b
  7833  004C7C  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7834  004C7E  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7835  004C80  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7836  004C82  A0D8               	btfss	status,0,c
  7837  004C84  D005               	goto	l5852
  7838                           
  7839                           ; BSR set to: 0
  7840  004C86  5162               	movf	___awdiv@divisor& (0+255),w,b
  7841  004C88  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7842  004C8A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7843  004C8C  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7844                           
  7845                           ; BSR set to: 0
  7846  004C8E  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7847  004C90                     l5852:
  7848                           
  7849                           ; BSR set to: 0
  7850  004C90  90D8               	bcf	status,0,c
  7851  004C92  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7852  004C94  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7853                           
  7854                           ; BSR set to: 0
  7855  004C96  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7856  004C98  D7ED               	goto	u7590
  7857  004C9A                     l5856:
  7858                           
  7859                           ; BSR set to: 0
  7860  004C9A  5165               	movf	___awdiv@sign& (0+255),w,b
  7861  004C9C  B4D8               	btfsc	status,2,c
  7862  004C9E  D004               	goto	l5860
  7863                           
  7864                           ; BSR set to: 0
  7865  004CA0  6D66               	negf	___awdiv@quotient& (0+255),b
  7866  004CA2  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7867  004CA4  B0D8               	btfsc	status,0,c
  7868  004CA6  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7869  004CA8                     l5860:
  7870                           
  7871                           ; BSR set to: 0
  7872  004CA8  0060  F198  F060   	movff	___awdiv@quotient,?___awdiv
  7873  004CAE  0060  F19C  F061   	movff	___awdiv@quotient+1,?___awdiv+1
  7874                           
  7875                           ; BSR set to: 0
  7876  004CB4  0012               	return		;funcret
  7877  004CB6                     __end_of___awdiv:
  7878                           	opt callstack 0
  7879                           
  7880 ;; *************** function _memset *****************
  7881 ;; Defined at:
  7882 ;;		line 283 in file "main.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  st              2    0[BANK0 ] PTR unsigned char 
  7885 ;;		 -> tx_buffer(55), 
  7886 ;;  x               1    2[BANK0 ] unsigned char 
  7887 ;;  size            2    3[BANK0 ] int 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  i               2    6[BANK0 ] int 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7899 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7900 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7901 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7902 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7903 ;;Total ram usage:        8 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    2
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_USART_handler
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text28
  7914  005176                     __ptext28:
  7915                           	opt callstack 0
  7916  005176                     _memset:
  7917                           	opt callstack 27
  7918                           
  7919                           ;main.c: 284:     for(int i=0;i<size;i++){
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;incstack = 0
  7923  005176  0E00               	movlw	0
  7924  005178  0100               	movlb	0	; () banked
  7925  00517A  6F67               	movwf	(memset@i+1)& (0+255),b
  7926  00517C  0E00               	movlw	0
  7927  00517E  6F66               	movwf	memset@i& (0+255),b
  7928  005180  D00B               	goto	l6452
  7929  005182                     l6448:
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;main.c: 285:         st[i] = x;
  7933  005182  5166               	movf	memset@i& (0+255),w,b
  7934  005184  2560               	addwf	memset@st& (0+255),w,b
  7935  005186  6ED9               	movwf	fsr2l,c
  7936  005188  5167               	movf	(memset@i+1)& (0+255),w,b
  7937  00518A  2161               	addwfc	(memset@st+1)& (0+255),w,b
  7938  00518C  6EDA               	movwf	fsr2h,c
  7939  00518E  0060  F18B  FFDF   	movff	memset@x,indf2
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;main.c: 286:     }
  7943  005194  4B66               	infsnz	memset@i& (0+255),f,b
  7944  005196  2B67               	incf	(memset@i+1)& (0+255),f,b
  7945  005198                     l6452:
  7946                           
  7947                           ; BSR set to: 0
  7948  005198  5163               	movf	memset@size& (0+255),w,b
  7949  00519A  5D66               	subwf	memset@i& (0+255),w,b
  7950  00519C  5167               	movf	(memset@i+1)& (0+255),w,b
  7951  00519E  0A80               	xorlw	128
  7952  0051A0  6F65               	movwf	??_memset& (0+255),b
  7953  0051A2  5164               	movf	(memset@size+1)& (0+255),w,b
  7954  0051A4  0A80               	xorlw	128
  7955  0051A6  5965               	subwfb	??_memset& (0+255),w,b
  7956  0051A8  B0D8               	btfsc	status,0,c
  7957  0051AA  0012               	return	
  7958  0051AC  D7EA               	goto	l6448
  7959  0051AE                     __end_of_memset:
  7960                           	opt callstack 0
  7961                           
  7962 ;; *************** function _USART1_SendString *****************
  7963 ;; Defined at:
  7964 ;;		line 58 in file "USART1.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  str             2    4[BANK0 ] PTR unsigned char 
  7967 ;;		 -> tx_buffer(55), 
  7968 ;;  size            2    6[BANK0 ] int 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  attempts        2   10[BANK0 ] unsigned int 
  7971 ;;  i               2    8[BANK0 ] unsigned int 
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      unsigned char 
  7974 ;; Registers used:
  7975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7981 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7982 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7984 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7985 ;;Total ram usage:        8 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    3
  7988 ;; This function calls:
  7989 ;;		_USART1_SendByte
  7990 ;; This function is called by:
  7991 ;;		_USART_handler
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text29
  7996  004A5C                     __ptext29:
  7997                           	opt callstack 0
  7998  004A5C                     _USART1_SendString:
  7999                           	opt callstack 26
  8000                           
  8001                           ;USART1.c: 59:     unsigned int attempts = 65000,i;
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;incstack = 0
  8005  004A5C  0EFD               	movlw	253
  8006  004A5E  0100               	movlb	0	; () banked
  8007  004A60  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  8008  004A62  0EE8               	movlw	232
  8009  004A64  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  8010                           
  8011                           ;USART1.c: 60:     for(i=0;i<size;i++){
  8012  004A66  0E00               	movlw	0
  8013  004A68  6F69               	movwf	(USART1_SendString@i+1)& (0+255),b
  8014  004A6A  0E00               	movlw	0
  8015  004A6C  6F68               	movwf	USART1_SendString@i& (0+255),b
  8016  004A6E  D01E               	goto	l6434
  8017  004A70                     l6422:
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;USART1.c: 61:         if(!USART1_SendByte(*(str + i))){
  8021  004A70  5168               	movf	USART1_SendString@i& (0+255),w,b
  8022  004A72  2564               	addwf	USART1_SendString@str& (0+255),w,b
  8023  004A74  6ED9               	movwf	fsr2l,c
  8024  004A76  5169               	movf	(USART1_SendString@i+1)& (0+255),w,b
  8025  004A78  2165               	addwfc	(USART1_SendString@str+1)& (0+255),w,b
  8026  004A7A  6EDA               	movwf	fsr2h,c
  8027  004A7C  50DF               	movf	indf2,w,c
  8028  004A7E  EC5C  F029         	call	_USART1_SendByte
  8029  004A82  0900               	iorlw	0
  8030  004A84  A4D8               	btfss	status,2,c
  8031  004A86  D007               	goto	l6426
  8032                           
  8033                           ;USART1.c: 62:             attempts --;
  8034  004A88  0100               	movlb	0	; () banked
  8035  004A8A  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  8036  004A8C  A0D8               	btfss	status,0,c
  8037  004A8E  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  8038                           
  8039                           ;USART1.c: 63:             i --;
  8040  004A90  0768               	decf	USART1_SendString@i& (0+255),f,b
  8041  004A92  A0D8               	btfss	status,0,c
  8042  004A94  0769               	decf	(USART1_SendString@i+1)& (0+255),f,b
  8043  004A96                     l6426:
  8044                           
  8045                           ;USART1.c: 65:         if(!attempts)
  8046  004A96  0100               	movlb	0	; () banked
  8047  004A98  516A               	movf	USART1_SendString@attempts& (0+255),w,b
  8048  004A9A  116B               	iorwf	(USART1_SendString@attempts+1)& (0+255),w,b
  8049  004A9C  B4D8               	btfsc	status,2,c
  8050  004A9E  0012               	return	
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;USART1.c: 67:         attempts = 65000;
  8054  004AA0  0EFD               	movlw	253
  8055  004AA2  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  8056  004AA4  0EE8               	movlw	232
  8057  004AA6  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;USART1.c: 68:     }
  8061  004AA8  4B68               	infsnz	USART1_SendString@i& (0+255),f,b
  8062  004AAA  2B69               	incf	(USART1_SendString@i+1)& (0+255),f,b
  8063  004AAC                     l6434:
  8064                           
  8065                           ; BSR set to: 0
  8066  004AAC  5166               	movf	USART1_SendString@size& (0+255),w,b
  8067  004AAE  5D68               	subwf	USART1_SendString@i& (0+255),w,b
  8068  004AB0  5167               	movf	(USART1_SendString@size+1)& (0+255),w,b
  8069  004AB2  5969               	subwfb	(USART1_SendString@i+1)& (0+255),w,b
  8070  004AB4  A0D8               	btfss	status,0,c
  8071  004AB6  D7DC               	goto	l6422
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;USART1.c: 69:     attempts =65000;
  8075  004AB8  0EFD               	movlw	253
  8076  004ABA  6F6B               	movwf	(USART1_SendString@attempts+1)& (0+255),b
  8077  004ABC  0EE8               	movlw	232
  8078  004ABE  6F6A               	movwf	USART1_SendString@attempts& (0+255),b
  8079  004AC0                     l6438:
  8080                           
  8081                           ; BSR set to: 0
  8082  004AC0  0E0D               	movlw	13
  8083  004AC2  EC5C  F029         	call	_USART1_SendByte
  8084  004AC6  0900               	iorlw	0
  8085  004AC8  A4D8               	btfss	status,2,c
  8086  004ACA  D009               	goto	u8600
  8087  004ACC  0100               	movlb	0	; () banked
  8088  004ACE  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  8089  004AD0  A0D8               	btfss	status,0,c
  8090  004AD2  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  8091  004AD4  296A               	incf	USART1_SendString@attempts& (0+255),w,b
  8092  004AD6  E1F4               	bnz	l6438
  8093  004AD8  296B               	incf	(USART1_SendString@attempts+1)& (0+255),w,b
  8094  004ADA  A4D8               	btfss	status,2,c
  8095  004ADC  D7F1               	goto	l6438
  8096  004ADE                     u8600:
  8097  004ADE                     l6442:
  8098  004ADE  0E0A               	movlw	10
  8099  004AE0  EC5C  F029         	call	_USART1_SendByte
  8100  004AE4  0900               	iorlw	0
  8101  004AE6  A4D8               	btfss	status,2,c
  8102  004AE8  0012               	return	
  8103  004AEA  0100               	movlb	0	; () banked
  8104  004AEC  076A               	decf	USART1_SendString@attempts& (0+255),f,b
  8105  004AEE  A0D8               	btfss	status,0,c
  8106  004AF0  076B               	decf	(USART1_SendString@attempts+1)& (0+255),f,b
  8107  004AF2  296A               	incf	USART1_SendString@attempts& (0+255),w,b
  8108  004AF4  E1F4               	bnz	l6442
  8109  004AF6  296B               	incf	(USART1_SendString@attempts+1)& (0+255),w,b
  8110  004AF8  B4D8               	btfsc	status,2,c
  8111  004AFA  0012               	return	
  8112  004AFC  D7F0               	goto	u8600
  8113  004AFE                     __end_of_USART1_SendString:
  8114                           	opt callstack 0
  8115                           
  8116 ;; *************** function _USART1_SendByte *****************
  8117 ;; Defined at:
  8118 ;;		line 49 in file "USART1.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;  byte            1    wreg     unsigned char 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  byte            1    0[BANK0 ] unsigned char 
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  1    wreg      unsigned char 
  8125 ;; Registers used:
  8126 ;;		wreg
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8135 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8136 ;;Total ram usage:        1 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:    2
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_USART1_SendString
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text30
  8147  0052B8                     __ptext30:
  8148                           	opt callstack 0
  8149  0052B8                     _USART1_SendByte:
  8150                           	opt callstack 26
  8151                           
  8152                           ;incstack = 0
  8153                           ;USART1_SendByte@byte stored from wreg
  8154  0052B8  0100               	movlb	0	; () banked
  8155  0052BA  6F60               	movwf	USART1_SendByte@byte& (0+255),b
  8156                           
  8157                           ;USART1.c: 50:     if(!PIE3bits.U1TXIE){
  8158  0052BC  0139               	movlb	57	; () banked
  8159  0052BE  B993               	btfsc	147,4,b	;volatile
  8160  0052C0  D006               	goto	l6386
  8161                           
  8162                           ; BSR set to: 57
  8163                           ;USART1.c: 51:         tx_byte = byte;
  8164  0052C2  0060  F180  F03E   	movff	USART1_SendByte@byte,_tx_byte
  8165                           
  8166                           ; BSR set to: 57
  8167                           ;USART1.c: 52:         PIE3bits.U1TXIE = 1;
  8168  0052C8  8993               	bsf	147,4,b	;volatile
  8169                           
  8170                           ;USART1.c: 53:         return 1;
  8171  0052CA  0E01               	movlw	1
  8172  0052CC  0012               	return	
  8173  0052CE                     l6386:
  8174                           
  8175                           ; BSR set to: 57
  8176                           ;USART1.c: 55:     return 0;
  8177  0052CE  0E00               	movlw	0
  8178                           
  8179                           ; BSR set to: 57
  8180  0052D0  0012               	return		;funcret
  8181  0052D2                     __end_of_USART1_SendByte:
  8182                           	opt callstack 0
  8183                           
  8184 ;; *************** function _I2C_handler *****************
  8185 ;; Defined at:
  8186 ;;		line 89 in file "I2C.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  value           2   12[BANK0 ] int 
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;		None
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  1    wreg      void 
  8193 ;; Registers used:
  8194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8203 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8204 ;;Total ram usage:        2 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; Hardware stack levels required when called:    3
  8207 ;; This function calls:
  8208 ;;		_I2C_Transmit
  8209 ;; This function is called by:
  8210 ;;		_USART_handler
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text31
  8215  00524A                     __ptext31:
  8216                           	opt callstack 0
  8217  00524A                     _I2C_handler:
  8218                           	opt callstack 26
  8219                           
  8220                           ;I2C.c: 90:     AD5272_COMMANDS[0] = (unsigned char)(AD5272_COMMANDS[0] | (value >> 8));
  8221                           
  8222                           ; BSR set to: 57
  8223                           ;incstack = 0
  8224  00524A  0100               	movlb	0	; () banked
  8225  00524C  516D               	movf	(I2C_handler@value+1)& (0+255),w,b
  8226  00524E  11FD               	iorwf	_AD5272_COMMANDS& (0+255),w,b
  8227  005250  6FFD               	movwf	_AD5272_COMMANDS& (0+255),b
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;I2C.c: 91:     AD5272_COMMANDS[1] = (unsigned char)value;
  8231  005252  0060  F1B0  F0FE   	movff	I2C_handler@value,_AD5272_COMMANDS+1
  8232                           
  8233                           ; BSR set to: 0
  8234  005258  0EFD               	movlw	low _AD5272_COMMANDS
  8235  00525A  6F60               	movwf	I2C_Transmit@buffer& (0+255),b
  8236  00525C  0E00               	movlw	high _AD5272_COMMANDS
  8237  00525E  6F61               	movwf	(I2C_Transmit@buffer+1)& (0+255),b
  8238  005260  0E02               	movlw	2
  8239  005262  6F62               	movwf	I2C_Transmit@buffer_size& (0+255),b
  8240  005264  0E5E               	movlw	94
  8241  005266  6F63               	movwf	I2C_Transmit@address& (0+255),b
  8242  005268  EC7F  F025         	call	_I2C_Transmit	;wreg free
  8243  00526C                     l6472:
  8244  00526C  0100               	movlb	0	; () banked
  8245  00526E  51FA               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  8246  005270  A4D8               	btfss	status,2,c
  8247  005272  0012               	return	
  8248  005274  D7FB               	goto	l6472
  8249  005276                     __end_of_I2C_handler:
  8250                           	opt callstack 0
  8251                           
  8252 ;; *************** function _I2C_Transmit *****************
  8253 ;; Defined at:
  8254 ;;		line 49 in file "I2C.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  buffer          2    0[BANK0 ] PTR unsigned char 
  8257 ;;		 -> AD5272_COMMANDS(2), 
  8258 ;;  buffer_size     1    2[BANK0 ] unsigned char 
  8259 ;;  address         1    3[BANK0 ] unsigned char 
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;  i               1   11[BANK0 ] unsigned char 
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1    wreg      unsigned char 
  8264 ;; Registers used:
  8265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8271 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8273 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8274 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8275 ;;Total ram usage:       12 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    2
  8278 ;; This function calls:
  8279 ;;		Nothing
  8280 ;; This function is called by:
  8281 ;;		_main
  8282 ;;		_I2C_handler
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           	psect	text32
  8287  004AFE                     __ptext32:
  8288                           	opt callstack 0
  8289  004AFE                     _I2C_Transmit:
  8290                           	opt callstack 26
  8291                           
  8292                           ;I2C.c: 50:     if(I2C_STOP_DETECTED && I2C1STAT0bits.BFRE && I2C1CNT == 0){
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;incstack = 0
  8296  004AFE  0100               	movlb	0	; () banked
  8297  004B00  51FA               	movf	_I2C_STOP_DETECTED& (0+255),w,b
  8298  004B02  B4D8               	btfsc	status,2,c
  8299  004B04  0012               	return	
  8300                           
  8301                           ; BSR set to: 0
  8302  004B06  013D               	movlb	61	; () banked
  8303  004B08  AF77               	btfss	119,7,b	;volatile
  8304  004B0A  0012               	return	
  8305                           
  8306                           ; BSR set to: 61
  8307  004B0C  516C               	movf	108,w,b	;volatile
  8308  004B0E  A4D8               	btfss	status,2,c
  8309  004B10  0012               	return	
  8310                           
  8311                           ; BSR set to: 61
  8312                           ;I2C.c: 51:         I2C_STOP_DETECTED = 0;
  8313  004B12  0E00               	movlw	0
  8314  004B14  0100               	movlb	0	; () banked
  8315  004B16  6FFA               	movwf	_I2C_STOP_DETECTED& (0+255),b
  8316                           
  8317                           ;I2C.c: 52:         for(unsigned char i=0;i<(buffer_size-1);i++){
  8318  004B18  0E00               	movlw	0
  8319  004B1A  6F6B               	movwf	I2C_Transmit@i& (0+255),b
  8320  004B1C  D016               	goto	l6402
  8321  004B1E                     l6398:
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;I2C.c: 53:             I2C_TX_BUFFER[i] = buffer[i+1];
  8325  004B1E  516B               	movf	I2C_Transmit@i& (0+255),w,b
  8326  004B20  2560               	addwf	I2C_Transmit@buffer& (0+255),w,b
  8327  004B22  6F64               	movwf	??_I2C_Transmit& (0+255),b
  8328  004B24  0E00               	movlw	0
  8329  004B26  2161               	addwfc	(I2C_Transmit@buffer+1)& (0+255),w,b
  8330  004B28  6F65               	movwf	(??_I2C_Transmit+1)& (0+255),b
  8331  004B2A  0E01               	movlw	1
  8332  004B2C  2564               	addwf	??_I2C_Transmit& (0+255),w,b
  8333  004B2E  6ED9               	movwf	fsr2l,c
  8334  004B30  0E00               	movlw	0
  8335  004B32  2165               	addwfc	(??_I2C_Transmit+1)& (0+255),w,b
  8336  004B34  6EDA               	movwf	fsr2h,c
  8337  004B36  0E23               	movlw	low _I2C_TX_BUFFER
  8338  004B38  256B               	addwf	I2C_Transmit@i& (0+255),w,b
  8339  004B3A  6EE1               	movwf	fsr1l,c
  8340  004B3C  6AE2               	clrf	fsr1h,c
  8341  004B3E  0E00               	movlw	high _I2C_TX_BUFFER
  8342  004B40  22E2               	addwfc	fsr1h,f,c
  8343  004B42  006F FF7F FFE7     	movff	indf2,indf1
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;I2C.c: 54:         }
  8347  004B48  2B6B               	incf	I2C_Transmit@i& (0+255),f,b
  8348  004B4A                     l6402:
  8349                           
  8350                           ; BSR set to: 0
  8351  004B4A  0EFF               	movlw	255
  8352  004B4C  6F64               	movwf	??_I2C_Transmit& (0+255),b
  8353  004B4E  0EFF               	movlw	255
  8354  004B50  6F65               	movwf	(??_I2C_Transmit+1)& (0+255),b
  8355  004B52  5162               	movf	I2C_Transmit@buffer_size& (0+255),w,b
  8356  004B54  6F66               	movwf	(??_I2C_Transmit+2)& (0+255),b
  8357  004B56  6B67               	clrf	(??_I2C_Transmit+3)& (0+255),b
  8358  004B58  5164               	movf	??_I2C_Transmit& (0+255),w,b
  8359  004B5A  2766               	addwf	(??_I2C_Transmit+2)& (0+255),f,b
  8360  004B5C  5165               	movf	(??_I2C_Transmit+1)& (0+255),w,b
  8361  004B5E  2367               	addwfc	(??_I2C_Transmit+3)& (0+255),f,b
  8362  004B60  516B               	movf	I2C_Transmit@i& (0+255),w,b
  8363  004B62  6F68               	movwf	(??_I2C_Transmit+4)& (0+255),b
  8364  004B64  6B69               	clrf	(??_I2C_Transmit+5)& (0+255),b
  8365  004B66  5166               	movf	(??_I2C_Transmit+2)& (0+255),w,b
  8366  004B68  5D68               	subwf	(??_I2C_Transmit+4)& (0+255),w,b
  8367  004B6A  5169               	movf	(??_I2C_Transmit+5)& (0+255),w,b
  8368  004B6C  0A80               	xorlw	128
  8369  004B6E  6F6A               	movwf	(??_I2C_Transmit+6)& (0+255),b
  8370  004B70  5167               	movf	(??_I2C_Transmit+3)& (0+255),w,b
  8371  004B72  0A80               	xorlw	128
  8372  004B74  596A               	subwfb	(??_I2C_Transmit+6)& (0+255),w,b
  8373  004B76  A0D8               	btfss	status,0,c
  8374  004B78  D7D2               	goto	l6398
  8375                           
  8376                           ; BSR set to: 0
  8377                           ;I2C.c: 55:         I2C1ADB1 = address;
  8378  004B7A  0060  F18F  FD6E   	movff	I2C_Transmit@address,15726	;volatile
  8379                           
  8380                           ;I2C.c: 56:         I2C1CNT = buffer_size;
  8381  004B80  0060  F18B  FD6C   	movff	I2C_Transmit@buffer_size,15724	;volatile
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;I2C.c: 57:         I2C1TXB = buffer[0];
  8385  004B86  0060  F183  FFD9   	movff	I2C_Transmit@buffer,fsr2l
  8386  004B8C  0060  F187  FFDA   	movff	I2C_Transmit@buffer+1,fsr2h
  8387  004B92  50DF               	movf	indf2,w,c
  8388  004B94  013D               	movlb	61	; () banked
  8389  004B96  6F6B               	movwf	107,b	;volatile
  8390                           
  8391                           ; BSR set to: 61
  8392                           ;I2C.c: 58:         I2C_TX_COUNTER = 0;
  8393  004B98  0E00               	movlw	0
  8394  004B9A  6E3D               	movwf	_I2C_TX_COUNTER,c
  8395                           
  8396                           ; BSR set to: 61
  8397                           ;I2C.c: 59:         I2C1CON0bits.S = 1;
  8398  004B9C  8B73               	bsf	115,5,b	;volatile
  8399  004B9E  0012               	return		;funcret
  8400  004BA0                     __end_of_I2C_Transmit:
  8401                           	opt callstack 0
  8402                           
  8403 ;; *************** function _GetStringSize *****************
  8404 ;; Defined at:
  8405 ;;		line 273 in file "main.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;		None
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  i               2    2[BANK0 ] int 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  2    0[BANK0 ] int 
  8412 ;; Registers used:
  8413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8422 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8423 ;;Total ram usage:        4 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:    2
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_USART_handler
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           
  8433                           	psect	text33
  8434  005100                     __ptext33:
  8435                           	opt callstack 0
  8436  005100                     _GetStringSize:
  8437                           	opt callstack 27
  8438                           
  8439                           ;main.c: 274:     int i;;main.c: 275:     for(i=0;i<55;i++){
  8440                           
  8441                           ;incstack = 0
  8442  005100  0E00               	movlw	0
  8443  005102  0100               	movlb	0	; () banked
  8444  005104  6F63               	movwf	(GetStringSize@i+1)& (0+255),b
  8445  005106  0E00               	movlw	0
  8446  005108  6F62               	movwf	GetStringSize@i& (0+255),b
  8447  00510A                     l6480:
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;main.c: 276:         if(tx_buffer[i] == 0){
  8451  00510A  0E7A               	movlw	low _tx_buffer
  8452  00510C  2562               	addwf	GetStringSize@i& (0+255),w,b
  8453  00510E  6ED9               	movwf	fsr2l,c
  8454  005110  0E01               	movlw	high _tx_buffer
  8455  005112  2163               	addwfc	(GetStringSize@i+1)& (0+255),w,b
  8456  005114  6EDA               	movwf	fsr2h,c
  8457  005116  50DF               	movf	indf2,w,c
  8458  005118  B4D8               	btfsc	status,2,c
  8459  00511A  D00A               	goto	u8660
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;main.c: 279:     }
  8463  00511C  4B62               	infsnz	GetStringSize@i& (0+255),f,b
  8464  00511E  2B63               	incf	(GetStringSize@i+1)& (0+255),f,b
  8465                           
  8466                           ; BSR set to: 0
  8467  005120  BF63               	btfsc	(GetStringSize@i+1)& (0+255),7,b
  8468  005122  D7F3               	goto	l6480
  8469  005124  5163               	movf	(GetStringSize@i+1)& (0+255),w,b
  8470  005126  E104               	bnz	u8660
  8471  005128  0E37               	movlw	55
  8472  00512A  5D62               	subwf	GetStringSize@i& (0+255),w,b
  8473  00512C  A0D8               	btfss	status,0,c
  8474  00512E  D7ED               	goto	l6480
  8475  005130                     u8660:
  8476                           
  8477                           ; BSR set to: 0
  8478                           ;main.c: 280:     return i;
  8479  005130  0060  F188  F060   	movff	GetStringSize@i,?_GetStringSize
  8480  005136  0060  F18C  F061   	movff	GetStringSize@i+1,?_GetStringSize+1
  8481                           
  8482                           ; BSR set to: 0
  8483  00513C  0012               	return		;funcret
  8484  00513E                     __end_of_GetStringSize:
  8485                           	opt callstack 0
  8486                           
  8487 ;; *************** function _USART1_ReceiveCommand *****************
  8488 ;; Defined at:
  8489 ;;		line 84 in file "USART1.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;		None
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  1    wreg      unsigned char 
  8496 ;; Registers used:
  8497 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8505 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8507 ;;Total ram usage:        2 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    3
  8510 ;; This function calls:
  8511 ;;		___wmul
  8512 ;; This function is called by:
  8513 ;;		_main
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text34
  8518  003F00                     __ptext34:
  8519                           	opt callstack 0
  8520  003F00                     _USART1_ReceiveCommand:
  8521                           	opt callstack 27
  8522                           
  8523                           ;USART1.c: 85:     if(rx_counter == 0)
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;incstack = 0
  8527  003F00  503F               	movf	_rx_counter,w,c
  8528  003F02  A4D8               	btfss	status,2,c
  8529  003F04  D002               	goto	l6532
  8530  003F06                     u8670:
  8531                           
  8532                           ;USART1.c: 86:         return 0;
  8533  003F06  0E00               	movlw	0
  8534  003F08  0012               	return	
  8535  003F0A                     l6532:
  8536                           
  8537                           ;USART1.c: 87:     if(rx_counter == 1 && rx_buffer[0] != 'W' && rx_buffer[0] != 'R'){
  8538  003F0A  043F               	decf	_rx_counter,w,c
  8539  003F0C  A4D8               	btfss	status,2,c
  8540  003F0E  D00C               	goto	l6544
  8541  003F10  0E57               	movlw	87
  8542  003F12  0101               	movlb	1	; () banked
  8543  003F14  1900               	xorwf	_rx_buffer& (0+255),w,b
  8544  003F16  B4D8               	btfsc	status,2,c
  8545  003F18  D007               	goto	l6544
  8546                           
  8547                           ; BSR set to: 1
  8548  003F1A  0E52               	movlw	82
  8549  003F1C  1900               	xorwf	_rx_buffer& (0+255),w,b
  8550  003F1E  B4D8               	btfsc	status,2,c
  8551  003F20  D003               	goto	l6544
  8552  003F22                     u8700:
  8553                           
  8554                           ; BSR set to: 1
  8555                           ;USART1.c: 88:         rx_counter = 0;
  8556  003F22  0E00               	movlw	0
  8557  003F24  6E3F               	movwf	_rx_counter,c
  8558  003F26  D7EF               	goto	u8670
  8559  003F28                     l6544:
  8560                           
  8561                           ;USART1.c: 91:     if(rx_buffer[0] == 'R') {
  8562  003F28  0E52               	movlw	82
  8563  003F2A  0101               	movlb	1	; () banked
  8564  003F2C  1900               	xorwf	_rx_buffer& (0+255),w,b
  8565  003F2E  A4D8               	btfss	status,2,c
  8566  003F30  D035               	goto	l6588
  8567                           
  8568                           ; BSR set to: 1
  8569                           ;USART1.c: 92:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57)
      +                          )){
  8570  003F32  0E02               	movlw	2
  8571  003F34  183F               	xorwf	_rx_counter,w,c
  8572  003F36  A4D8               	btfss	status,2,c
  8573  003F38  D007               	goto	l6554
  8574                           
  8575                           ; BSR set to: 1
  8576  003F3A  0E2F               	movlw	47
  8577  003F3C  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8578  003F3E  D7F1               	goto	u8700
  8579                           
  8580                           ; BSR set to: 1
  8581  003F40  0E39               	movlw	57
  8582  003F42  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8583  003F44  D001               	goto	l6554
  8584  003F46  D7ED               	goto	u8700
  8585  003F48                     l6554:
  8586                           
  8587                           ; BSR set to: 1
  8588  003F48  0E03               	movlw	3
  8589  003F4A  183F               	xorwf	_rx_counter,w,c
  8590  003F4C  A4D8               	btfss	status,2,c
  8591  003F4E  D004               	goto	l6560
  8592                           
  8593                           ; BSR set to: 1
  8594  003F50  0E0D               	movlw	13
  8595  003F52  1902               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8596  003F54  A4D8               	btfss	status,2,c
  8597  003F56  D7E5               	goto	u8700
  8598  003F58                     l6560:
  8599                           
  8600                           ; BSR set to: 1
  8601  003F58  0E04               	movlw	4
  8602  003F5A  183F               	xorwf	_rx_counter,w,c
  8603  003F5C  A4D8               	btfss	status,2,c
  8604  003F5E  D7D3               	goto	u8670
  8605                           
  8606                           ; BSR set to: 1
  8607                           ;USART1.c: 97:             if(rx_buffer[0] != 'R' || (rx_buffer[1] < 48) || (rx_buffer[1
      +                          ] > 57) || rx_buffer[2] != '\r' || rx_buffer[3] != '\n'){
  8608  003F60  0E52               	movlw	82
  8609  003F62  1900               	xorwf	_rx_buffer& (0+255),w,b
  8610  003F64  A4D8               	btfss	status,2,c
  8611  003F66  D7DD               	goto	u8700
  8612                           
  8613                           ; BSR set to: 1
  8614  003F68  0E2F               	movlw	47
  8615  003F6A  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8616  003F6C  D7DA               	goto	u8700
  8617                           
  8618                           ; BSR set to: 1
  8619  003F6E  0E3A               	movlw	58
  8620  003F70  6101               	cpfslt	(_rx_buffer+1)& (0+255),b
  8621  003F72  D7D7               	goto	u8700
  8622                           
  8623                           ; BSR set to: 1
  8624  003F74  0E0D               	movlw	13
  8625  003F76  1902               	xorwf	(_rx_buffer+2)& (0+255),w,b
  8626  003F78  A4D8               	btfss	status,2,c
  8627  003F7A  D7D3               	goto	u8700
  8628                           
  8629                           ; BSR set to: 1
  8630  003F7C  0E0A               	movlw	10
  8631  003F7E  1903               	xorwf	(_rx_buffer+3)& (0+255),w,b
  8632  003F80  A4D8               	btfss	status,2,c
  8633  003F82  D7CF               	goto	u8700
  8634                           
  8635                           ; BSR set to: 1
  8636                           ;USART1.c: 101:             COMMAND_WR = 1;
  8637  003F84  0E01               	movlw	1
  8638  003F86  0100               	movlb	0	; () banked
  8639  003F88  6FFC               	movwf	_COMMAND_WR& (0+255),b
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;USART1.c: 102:             COMMAND = rx_buffer[1]-48;
  8643  003F8A  0101               	movlb	1	; () banked
  8644  003F8C  5101               	movf	(_rx_buffer+1)& (0+255),w,b
  8645  003F8E  0FD0               	addlw	208
  8646  003F90  0100               	movlb	0	; () banked
  8647  003F92  6FFB               	movwf	_COMMAND& (0+255),b
  8648  003F94                     l6582:
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;USART1.c: 103:             rx_counter = 0;
  8652  003F94  0E00               	movlw	0
  8653  003F96  6E3F               	movwf	_rx_counter,c
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;USART1.c: 104:             return 1;
  8657  003F98  0E01               	movlw	1
  8658  003F9A  0012               	return	
  8659  003F9C                     l6588:
  8660                           
  8661                           ; BSR set to: 1
  8662                           ;USART1.c: 107:         if(rx_counter == 2 && ((rx_buffer[1] < 48) || (rx_buffer[1] > 57
      +                          ))){
  8663  003F9C  0E02               	movlw	2
  8664  003F9E  183F               	xorwf	_rx_counter,w,c
  8665  003FA0  A4D8               	btfss	status,2,c
  8666  003FA2  D007               	goto	l6596
  8667                           
  8668                           ; BSR set to: 1
  8669  003FA4  0E2F               	movlw	47
  8670  003FA6  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8671  003FA8  D7BC               	goto	u8700
  8672                           
  8673                           ; BSR set to: 1
  8674  003FAA  0E39               	movlw	57
  8675  003FAC  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8676  003FAE  D001               	goto	l6596
  8677  003FB0  D7B8               	goto	u8700
  8678  003FB2                     l6596:
  8679                           
  8680                           ; BSR set to: 1
  8681  003FB2  0E03               	movlw	3
  8682  003FB4  183F               	xorwf	_rx_counter,w,c
  8683  003FB6  A4D8               	btfss	status,2,c
  8684  003FB8  D007               	goto	l6604
  8685                           
  8686                           ; BSR set to: 1
  8687  003FBA  0E2F               	movlw	47
  8688  003FBC  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8689  003FBE  D7B1               	goto	u8700
  8690                           
  8691                           ; BSR set to: 1
  8692  003FC0  0E39               	movlw	57
  8693  003FC2  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8694  003FC4  D001               	goto	l6604
  8695  003FC6  D7AD               	goto	u8700
  8696  003FC8                     l6604:
  8697                           
  8698                           ; BSR set to: 1
  8699  003FC8  0E04               	movlw	4
  8700  003FCA  183F               	xorwf	_rx_counter,w,c
  8701  003FCC  A4D8               	btfss	status,2,c
  8702  003FCE  D007               	goto	l6612
  8703                           
  8704                           ; BSR set to: 1
  8705  003FD0  0E2F               	movlw	47
  8706  003FD2  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8707  003FD4  D7A6               	goto	u8700
  8708                           
  8709                           ; BSR set to: 1
  8710  003FD6  0E39               	movlw	57
  8711  003FD8  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8712  003FDA  D001               	goto	l6612
  8713  003FDC  D7A2               	goto	u8700
  8714  003FDE                     l6612:
  8715                           
  8716                           ; BSR set to: 1
  8717  003FDE  0E05               	movlw	5
  8718  003FE0  183F               	xorwf	_rx_counter,w,c
  8719  003FE2  A4D8               	btfss	status,2,c
  8720  003FE4  D007               	goto	l6620
  8721                           
  8722                           ; BSR set to: 1
  8723  003FE6  0E2F               	movlw	47
  8724  003FE8  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8725  003FEA  D79B               	goto	u8700
  8726                           
  8727                           ; BSR set to: 1
  8728  003FEC  0E39               	movlw	57
  8729  003FEE  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8730  003FF0  D001               	goto	l6620
  8731  003FF2  D797               	goto	u8700
  8732  003FF4                     l6620:
  8733                           
  8734                           ; BSR set to: 1
  8735  003FF4  0E06               	movlw	6
  8736  003FF6  183F               	xorwf	_rx_counter,w,c
  8737  003FF8  A4D8               	btfss	status,2,c
  8738  003FFA  D007               	goto	l6628
  8739                           
  8740                           ; BSR set to: 1
  8741  003FFC  0E2F               	movlw	47
  8742  003FFE  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8743  004000  D790               	goto	u8700
  8744                           
  8745                           ; BSR set to: 1
  8746  004002  0E39               	movlw	57
  8747  004004  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8748  004006  D001               	goto	l6628
  8749  004008  D78C               	goto	u8700
  8750  00400A                     l6628:
  8751                           
  8752                           ; BSR set to: 1
  8753  00400A  0E07               	movlw	7
  8754  00400C  183F               	xorwf	_rx_counter,w,c
  8755  00400E  A4D8               	btfss	status,2,c
  8756  004010  D004               	goto	l6634
  8757                           
  8758                           ; BSR set to: 1
  8759  004012  0E0D               	movlw	13
  8760  004014  1906               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8761  004016  A4D8               	btfss	status,2,c
  8762  004018  D784               	goto	u8700
  8763  00401A                     l6634:
  8764                           
  8765                           ; BSR set to: 1
  8766  00401A  0E08               	movlw	8
  8767  00401C  183F               	xorwf	_rx_counter,w,c
  8768  00401E  A4D8               	btfss	status,2,c
  8769  004020  D772               	goto	u8670
  8770                           
  8771                           ; BSR set to: 1
  8772                           ;USART1.c: 120:             if(rx_buffer[0] != 'W' || (rx_buffer[1] < 48) || (rx_buffer[
      +                          1] > 57) || (rx_buffer[2] < 48) || (rx_buffer[2] > 57) || (rx_buffer[3] < 48) || (rx_buf
      +                          fer[3] > 57) || (rx_buffer[4] < 48) || (rx_buffer[4] > 57) || (rx_buffer[5] < 48) || (rx
      +                          _buffer[5] > 57) || rx_buffer[6] != '\r' || rx_buffer[7] != '\n'){
  8773  004022  0E57               	movlw	87
  8774  004024  1900               	xorwf	_rx_buffer& (0+255),w,b
  8775  004026  A4D8               	btfss	status,2,c
  8776  004028  D77C               	goto	u8700
  8777                           
  8778                           ; BSR set to: 1
  8779  00402A  0E2F               	movlw	47
  8780  00402C  6501               	cpfsgt	(_rx_buffer+1)& (0+255),b
  8781  00402E  D779               	goto	u8700
  8782                           
  8783                           ; BSR set to: 1
  8784  004030  0E3A               	movlw	58
  8785  004032  6101               	cpfslt	(_rx_buffer+1)& (0+255),b
  8786  004034  D776               	goto	u8700
  8787                           
  8788                           ; BSR set to: 1
  8789  004036  0E2F               	movlw	47
  8790  004038  6502               	cpfsgt	(_rx_buffer+2)& (0+255),b
  8791  00403A  D773               	goto	u8700
  8792                           
  8793                           ; BSR set to: 1
  8794  00403C  0E3A               	movlw	58
  8795  00403E  6102               	cpfslt	(_rx_buffer+2)& (0+255),b
  8796  004040  D770               	goto	u8700
  8797                           
  8798                           ; BSR set to: 1
  8799  004042  0E2F               	movlw	47
  8800  004044  6503               	cpfsgt	(_rx_buffer+3)& (0+255),b
  8801  004046  D76D               	goto	u8700
  8802                           
  8803                           ; BSR set to: 1
  8804  004048  0E3A               	movlw	58
  8805  00404A  6103               	cpfslt	(_rx_buffer+3)& (0+255),b
  8806  00404C  D76A               	goto	u8700
  8807                           
  8808                           ; BSR set to: 1
  8809  00404E  0E2F               	movlw	47
  8810  004050  6504               	cpfsgt	(_rx_buffer+4)& (0+255),b
  8811  004052  D767               	goto	u8700
  8812                           
  8813                           ; BSR set to: 1
  8814  004054  0E3A               	movlw	58
  8815  004056  6104               	cpfslt	(_rx_buffer+4)& (0+255),b
  8816  004058  D764               	goto	u8700
  8817                           
  8818                           ; BSR set to: 1
  8819  00405A  0E2F               	movlw	47
  8820  00405C  6505               	cpfsgt	(_rx_buffer+5)& (0+255),b
  8821  00405E  D761               	goto	u8700
  8822                           
  8823                           ; BSR set to: 1
  8824  004060  0E3A               	movlw	58
  8825  004062  6105               	cpfslt	(_rx_buffer+5)& (0+255),b
  8826  004064  D75E               	goto	u8700
  8827                           
  8828                           ; BSR set to: 1
  8829  004066  0E0D               	movlw	13
  8830  004068  1906               	xorwf	(_rx_buffer+6)& (0+255),w,b
  8831  00406A  A4D8               	btfss	status,2,c
  8832  00406C  D75A               	goto	u8700
  8833                           
  8834                           ; BSR set to: 1
  8835  00406E  0E0A               	movlw	10
  8836  004070  1907               	xorwf	(_rx_buffer+7)& (0+255),w,b
  8837  004072  A4D8               	btfss	status,2,c
  8838  004074  D756               	goto	u8700
  8839                           
  8840                           ; BSR set to: 1
  8841                           ;USART1.c: 124:             COMMAND_WR = 0;
  8842  004076  0E00               	movlw	0
  8843  004078  0100               	movlb	0	; () banked
  8844  00407A  6FFC               	movwf	_COMMAND_WR& (0+255),b
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;USART1.c: 125:             COMMAND = rx_buffer[1]-48;
  8848  00407C  0101               	movlb	1	; () banked
  8849  00407E  5101               	movf	(_rx_buffer+1)& (0+255),w,b
  8850  004080  0FD0               	addlw	208
  8851  004082  0100               	movlb	0	; () banked
  8852  004084  6FFB               	movwf	_COMMAND& (0+255),b
  8853                           
  8854                           ; BSR set to: 0
  8855                           ;USART1.c: 126:             COMMAND_WRITE_NUMBER = ((rx_buffer[2]-48) * 1000) + ((rx_buf
      +                          fer[3]-48) * 100) + ((rx_buffer[4]-48) * 10) + (rx_buffer[5]-48);
  8856  004086  0060  F408  F060   	movff	_rx_buffer+2,___wmul@multiplier
  8857  00408C  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  8858  00408E  0E03               	movlw	3
  8859  004090  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8860  004092  0EE8               	movlw	232
  8861  004094  6F62               	movwf	___wmul@multiplicand& (0+255),b
  8862  004096  EC0D  F029         	call	___wmul	;wreg free
  8863  00409A  0101               	movlb	1	; () banked
  8864  00409C  5103               	movf	(_rx_buffer+3)& (0+255),w,b
  8865  00409E  0D64               	mullw	100
  8866  0040A0  006F FFCC  F066    	movff	prodl,??_USART1_ReceiveCommand
  8867  0040A6  006F FFD0  F067    	movff	prodh,??_USART1_ReceiveCommand+1
  8868  0040AC  5104               	movf	(_rx_buffer+4)& (0+255),w,b
  8869  0040AE  0D0A               	mullw	10
  8870  0040B0  50F3               	movf	prodl,w,c
  8871  0040B2  0100               	movlb	0	; () banked
  8872  0040B4  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8873  0040B6  50F4               	movf	prodh,w,c
  8874  0040B8  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8875  0040BA  5160               	movf	?___wmul& (0+255),w,b
  8876  0040BC  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8877  0040BE  5161               	movf	(?___wmul+1)& (0+255),w,b
  8878  0040C0  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8879  0040C2  0101               	movlb	1	; () banked
  8880  0040C4  5105               	movf	(_rx_buffer+5)& (0+255),w,b
  8881  0040C6  0100               	movlb	0	; () banked
  8882  0040C8  2766               	addwf	??_USART1_ReceiveCommand& (0+255),f,b
  8883  0040CA  0E00               	movlw	0
  8884  0040CC  2367               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),f,b
  8885  0040CE  0EB0               	movlw	176
  8886  0040D0  2566               	addwf	??_USART1_ReceiveCommand& (0+255),w,b
  8887  0040D2  6FF7               	movwf	_COMMAND_WRITE_NUMBER& (0+255),b
  8888  0040D4  0E2F               	movlw	47
  8889  0040D6  2167               	addwfc	(??_USART1_ReceiveCommand+1)& (0+255),w,b
  8890  0040D8  6FF8               	movwf	(_COMMAND_WRITE_NUMBER+1)& (0+255),b
  8891  0040DA  D75C               	goto	l6582
  8892  0040DC                     __end_of_USART1_ReceiveCommand:
  8893                           	opt callstack 0
  8894                           
  8895 ;; *************** function ___wmul *****************
  8896 ;; Defined at:
  8897 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8900 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  product         2    4[BANK0 ] unsigned int 
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  2    0[BANK0 ] unsigned int 
  8905 ;; Registers used:
  8906 ;;		wreg, status,2, status,0, prodl, prodh
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8913 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8915 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8916 ;;Total ram usage:        6 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; Hardware stack levels required when called:    2
  8919 ;; This function calls:
  8920 ;;		Nothing
  8921 ;; This function is called by:
  8922 ;;		_USART1_ReceiveCommand
  8923 ;; This function uses a non-reentrant model
  8924 ;;
  8925                           
  8926                           	psect	text35
  8927  00521A                     __ptext35:
  8928                           	opt callstack 0
  8929  00521A                     ___wmul:
  8930                           	opt callstack 27
  8931                           
  8932                           ;incstack = 0
  8933  00521A  0100               	movlb	0	; () banked
  8934  00521C  5160               	movf	___wmul@multiplier& (0+255),w,b
  8935  00521E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8936  005220  006F FFCC  F064    	movff	prodl,___wmul@product
  8937  005226  006F FFD0  F065    	movff	prodh,___wmul@product+1
  8938  00522C  5160               	movf	___wmul@multiplier& (0+255),w,b
  8939  00522E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8940  005230  50F3               	movf	prodl,w,c
  8941  005232  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8942  005234  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8943  005236  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8944  005238  50F3               	movf	prodl,w,c
  8945  00523A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8946                           
  8947                           ; BSR set to: 0
  8948  00523C  0060  F190  F060   	movff	___wmul@product,?___wmul
  8949  005242  0060  F194  F061   	movff	___wmul@product+1,?___wmul+1
  8950                           
  8951                           ; BSR set to: 0
  8952  005248  0012               	return		;funcret
  8953  00524A                     __end_of___wmul:
  8954                           	opt callstack 0
  8955                           
  8956 ;; *************** function _USART1_Init *****************
  8957 ;; Defined at:
  8958 ;;		line 5 in file "USART1.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  baud_rate       1    wreg     unsigned char 
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;  baud_rate       1    2[BANK0 ] unsigned char 
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  1    wreg      void 
  8965 ;; Registers used:
  8966 ;;		wreg, status,2, status,0
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8974 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8975 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8976 ;;Total ram usage:        3 bytes
  8977 ;; Hardware stack levels used:    1
  8978 ;; Hardware stack levels required when called:    2
  8979 ;; This function calls:
  8980 ;;		Nothing
  8981 ;; This function is called by:
  8982 ;;		_main
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           	psect	text36
  8987  004CB6                     __ptext36:
  8988                           	opt callstack 0
  8989  004CB6                     _USART1_Init:
  8990                           	opt callstack 28
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;incstack = 0
  8994                           ;USART1_Init@baud_rate stored from wreg
  8995  004CB6  0100               	movlb	0	; () banked
  8996  004CB8  6F62               	movwf	USART1_Init@baud_rate& (0+255),b
  8997                           
  8998                           ;USART1.c: 7:     TRISCbits.TRISC6 = 1;
  8999  004CBA  8CC4               	bsf	16324,6,c	;volatile
  9000                           
  9001                           ;USART1.c: 8:     TRISCbits.TRISC7 = 0;
  9002  004CBC  9EC4               	bcf	16324,7,c	;volatile
  9003                           
  9004                           ;USART1.c: 9:     ANSELCbits.ANSELC6 = 0;
  9005  004CBE  013A               	movlb	58	; () banked
  9006  004CC0  9D60               	bcf	96,6,b	;volatile
  9007                           
  9008                           ;USART1.c: 10:     ANSELCbits.ANSELC7 = 0;
  9009  004CC2  9F60               	bcf	96,7,b	;volatile
  9010                           
  9011                           ; BSR set to: 58
  9012                           ;USART1.c: 11:     U1RXPPS = 0x16;
  9013  004CC4  0E16               	movlw	22
  9014  004CC6  6FE5               	movwf	229,b	;volatile
  9015                           
  9016                           ;USART1.c: 12:     RC7PPS = 0x13;
  9017  004CC8  0E13               	movlw	19
  9018  004CCA  6F17               	movwf	23,b	;volatile
  9019                           
  9020                           ;USART1.c: 15:     switch(baud_rate){
  9021  004CCC  D010               	goto	l6508
  9022  004CCE                     l6498:
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;USART1.c: 17:             U1BRGH = 0x03;
  9026  004CCE  0E03               	movlw	3
  9027  004CD0  013D               	movlb	61	; () banked
  9028  004CD2  6FF6               	movwf	246,b	;volatile
  9029                           
  9030                           ;USART1.c: 18:             U1BRGL = 0x40;
  9031  004CD4  0E40               	movlw	64
  9032  004CD6  D009               	goto	L13
  9033  004CD8                     l6500:
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;USART1.c: 21:             U1BRGH = 0x01;
  9037  004CD8  0E01               	movlw	1
  9038  004CDA  013D               	movlb	61	; () banked
  9039  004CDC  6FF6               	movwf	246,b	;volatile
  9040                           
  9041                           ;USART1.c: 22:             U1BRGL = 0x14;
  9042  004CDE  0E14               	movlw	20
  9043  004CE0  D004               	goto	L13
  9044  004CE2                     l6502:
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;USART1.c: 25:             U1BRGH = 0x00;
  9048  004CE2  0E00               	movlw	0
  9049  004CE4  013D               	movlb	61	; () banked
  9050  004CE6  6FF6               	movwf	246,b	;volatile
  9051                           
  9052                           ;USART1.c: 26:             U1BRGL = 0x89;
  9053  004CE8  0E89               	movlw	137
  9054  004CEA                     L13:
  9055  004CEA  6FF5               	movwf	245,b	;volatile
  9056                           
  9057                           ;USART1.c: 27:             break;
  9058  004CEC  D011               	goto	l6510
  9059  004CEE                     l6508:
  9060                           
  9061                           ; BSR set to: 58
  9062  004CEE  0100               	movlb	0	; () banked
  9063  004CF0  5162               	movf	USART1_Init@baud_rate& (0+255),w,b
  9064  004CF2  6F60               	movwf	??_USART1_Init& (0+255),b
  9065  004CF4  6B61               	clrf	(??_USART1_Init+1)& (0+255),b
  9066                           
  9067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9068                           ; Switch size 1, requested type "simple"
  9069                           ; Number of cases is 1, Range of values is 0 to 0
  9070                           ; switch strategies available:
  9071                           ; Name         Instructions Cycles
  9072                           ; simple_byte            4     3 (average)
  9073                           ;	Chosen strategy is simple_byte
  9074  004CF6  5161               	movf	(??_USART1_Init+1)& (0+255),w,b
  9075  004CF8  0A00               	xorlw	0	; case 0
  9076  004CFA  A4D8               	btfss	status,2,c
  9077  004CFC  D7F2               	goto	l6502
  9078                           
  9079                           ; BSR set to: 0
  9080                           ; Switch size 1, requested type "simple"
  9081                           ; Number of cases is 3, Range of values is 1 to 3
  9082                           ; switch strategies available:
  9083                           ; Name         Instructions Cycles
  9084                           ; simple_byte           10     6 (average)
  9085                           ;	Chosen strategy is simple_byte
  9086  004CFE  5160               	movf	??_USART1_Init& (0+255),w,b
  9087  004D00  0A01               	xorlw	1	; case 1
  9088  004D02  B4D8               	btfsc	status,2,c
  9089  004D04  D7E4               	goto	l6498
  9090  004D06  0A03               	xorlw	3	; case 2
  9091  004D08  B4D8               	btfsc	status,2,c
  9092  004D0A  D7E6               	goto	l6500
  9093  004D0C  0A01               	xorlw	1	; case 3
  9094  004D0E  D7E9               	goto	l6502
  9095  004D10                     l6510:
  9096                           
  9097                           ; BSR set to: 61
  9098                           ;USART1.c: 34:     rx_counter = 0;
  9099  004D10  0E00               	movlw	0
  9100  004D12  6E3F               	movwf	_rx_counter,c
  9101                           
  9102                           ;USART1.c: 36:     U1CON0 = 0xB0;
  9103  004D14  0EB0               	movlw	176
  9104  004D16  6FF2               	movwf	242,b	;volatile
  9105                           
  9106                           ;USART1.c: 37:     U1CON1 = 0x00;
  9107  004D18  0E00               	movlw	0
  9108  004D1A  6FF3               	movwf	243,b	;volatile
  9109                           
  9110                           ;USART1.c: 38:     U2CON2 = 0x80;
  9111  004D1C  0E80               	movlw	128
  9112  004D1E  6FDC               	movwf	220,b	;volatile
  9113                           
  9114                           ;USART1.c: 39:     U1ERRIE = 0x00;
  9115  004D20  0E00               	movlw	0
  9116  004D22  6FFA               	movwf	250,b	;volatile
  9117                           
  9118                           ;USART1.c: 40:     U1UIR = 0x00;
  9119  004D24  0E00               	movlw	0
  9120  004D26  6FF8               	movwf	248,b	;volatile
  9121                           
  9122                           ; BSR set to: 61
  9123                           ;USART1.c: 41:     PIE3bits.U1RXIE = 1;
  9124  004D28  0139               	movlb	57	; () banked
  9125  004D2A  8793               	bsf	147,3,b	;volatile
  9126                           
  9127                           ; BSR set to: 57
  9128                           ;USART1.c: 42:     PIE3bits.U1TXIE =1;
  9129  004D2C  8993               	bsf	147,4,b	;volatile
  9130                           
  9131                           ; BSR set to: 57
  9132                           ;USART1.c: 43:     IPR3bits.U1RXIP = 1;
  9133  004D2E  8783               	bsf	131,3,b	;volatile
  9134                           
  9135                           ; BSR set to: 57
  9136                           ;USART1.c: 44:     IPR3bits.U1TXIP = 1;
  9137  004D30  8983               	bsf	131,4,b	;volatile
  9138                           
  9139                           ;USART1.c: 45:     PIR3 = 0x00;
  9140  004D32  0E00               	movlw	0
  9141  004D34  6FA3               	movwf	163,b	;volatile
  9142                           
  9143                           ; BSR set to: 57
  9144                           ;USART1.c: 46:     U1CON1bits.ON = 1;
  9145  004D36  013D               	movlb	61	; () banked
  9146  004D38  8FF3               	bsf	243,7,b	;volatile
  9147                           
  9148                           ; BSR set to: 61
  9149  004D3A  0012               	return		;funcret
  9150  004D3C                     __end_of_USART1_Init:
  9151                           	opt callstack 0
  9152                           
  9153 ;; *************** function _I2C_Init *****************
  9154 ;; Defined at:
  9155 ;;		line 4 in file "I2C.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;		None
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;		None
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  1    wreg      void 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9173 ;;Total ram usage:        0 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:    2
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		_main
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text37
  9184  004E20                     __ptext37:
  9185                           	opt callstack 0
  9186  004E20                     _I2C_Init:
  9187                           	opt callstack 28
  9188                           
  9189                           ;I2C.c: 6:     TRISBbits.TRISB1 = 0;
  9190                           
  9191                           ; BSR set to: 61
  9192                           ;incstack = 0
  9193  004E20  92C3               	bcf	16323,1,c	;volatile
  9194                           
  9195                           ;I2C.c: 7:     TRISBbits.TRISB0 = 0;
  9196  004E22  90C3               	bcf	16323,0,c	;volatile
  9197                           
  9198                           ;I2C.c: 8:     LATBbits.LATB1 = 0;
  9199  004E24  92BB               	bcf	16315,1,c	;volatile
  9200                           
  9201                           ;I2C.c: 9:     LATBbits.LATB0 = 0;
  9202  004E26  90BB               	bcf	16315,0,c	;volatile
  9203                           
  9204                           ;I2C.c: 10:     ANSELBbits.ANSELB1 = 0;
  9205  004E28  013A               	movlb	58	; () banked
  9206  004E2A  9350               	bcf	80,1,b	;volatile
  9207                           
  9208                           ;I2C.c: 11:     ANSELBbits.ANSELB0 = 0;
  9209  004E2C  9150               	bcf	80,0,b	;volatile
  9210                           
  9211                           ;I2C.c: 12:     ODCONBbits.ODCB1 = 1;
  9212  004E2E  8352               	bsf	82,1,b	;volatile
  9213                           
  9214                           ;I2C.c: 13:     ODCONBbits.ODCB0 = 1;
  9215  004E30  8152               	bsf	82,0,b	;volatile
  9216                           
  9217                           ; BSR set to: 58
  9218                           ;I2C.c: 14:     RB1I2C = 0x01;
  9219  004E32  0E01               	movlw	1
  9220  004E34  6F5A               	movwf	90,b	;volatile
  9221                           
  9222                           ; BSR set to: 58
  9223                           ;I2C.c: 15:     SLRCONBbits.SLRB1 = 0;
  9224  004E36  9353               	bcf	83,1,b	;volatile
  9225                           
  9226                           ; BSR set to: 58
  9227                           ;I2C.c: 16:     SLRCONBbits.SLRB0 = 0;
  9228  004E38  9153               	bcf	83,0,b	;volatile
  9229                           
  9230                           ;I2C.c: 17:     I2C1SCLPPS = 0x09;
  9231  004E3A  0E09               	movlw	9
  9232  004E3C  6FE1               	movwf	225,b	;volatile
  9233                           
  9234                           ;I2C.c: 18:     I2C1SDAPPS = 0x08;
  9235  004E3E  0E08               	movlw	8
  9236  004E40  6FE2               	movwf	226,b	;volatile
  9237                           
  9238                           ;I2C.c: 19:     RB1PPS = 0x21;
  9239  004E42  0E21               	movlw	33
  9240  004E44  6F09               	movwf	9,b	;volatile
  9241                           
  9242                           ;I2C.c: 20:     RB0PPS = 0x22;
  9243  004E46  0E22               	movlw	34
  9244  004E48  6F08               	movwf	8,b	;volatile
  9245                           
  9246                           ;I2C.c: 22:     I2C1CON0 = 0x04;
  9247  004E4A  0E04               	movlw	4
  9248  004E4C  013D               	movlb	61	; () banked
  9249  004E4E  6F73               	movwf	115,b	;volatile
  9250                           
  9251                           ;I2C.c: 23:     I2C1CON1 = 0x80;
  9252  004E50  0E80               	movlw	128
  9253  004E52  6F74               	movwf	116,b	;volatile
  9254                           
  9255                           ;I2C.c: 24:     I2C1CON2 = 0x24;
  9256  004E54  0E24               	movlw	36
  9257  004E56  6F75               	movwf	117,b	;volatile
  9258                           
  9259                           ;I2C.c: 25:     I2C1CLK = 0x03;
  9260  004E58  0E03               	movlw	3
  9261  004E5A  6F7B               	movwf	123,b	;volatile
  9262                           
  9263                           ;I2C.c: 27:     I2C1PIR = 0x00;
  9264  004E5C  0E00               	movlw	0
  9265  004E5E  6F79               	movwf	121,b	;volatile
  9266                           
  9267                           ;I2C.c: 28:     I2C1ERR = 0x00;
  9268  004E60  0E00               	movlw	0
  9269  004E62  6F76               	movwf	118,b	;volatile
  9270                           
  9271                           ;I2C.c: 30:     I2C_STOP_DETECTED = 1;
  9272  004E64  0E01               	movlw	1
  9273  004E66  0100               	movlb	0	; () banked
  9274  004E68  6FFA               	movwf	_I2C_STOP_DETECTED& (0+255),b
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;I2C.c: 32:     IPR3bits.I2C1TXIP = 0;
  9278  004E6A  0139               	movlb	57	; () banked
  9279  004E6C  9183               	bcf	131,0,b	;volatile
  9280                           
  9281                           ; BSR set to: 57
  9282                           ;I2C.c: 33:     IPR2bits.I2C1RXIP = 0;
  9283  004E6E  9F82               	bcf	130,7,b	;volatile
  9284                           
  9285                           ; BSR set to: 57
  9286                           ;I2C.c: 34:     PIR3bits.I2C1TXIF = 0;
  9287  004E70  91A3               	bcf	163,0,b	;volatile
  9288                           
  9289                           ; BSR set to: 57
  9290                           ;I2C.c: 35:     PIR2bits.I2C1RXIF = 0;
  9291  004E72  9FA2               	bcf	162,7,b	;volatile
  9292                           
  9293                           ; BSR set to: 57
  9294                           ;I2C.c: 36:     PIE3bits.I2C1TXIE = 1;
  9295  004E74  8193               	bsf	147,0,b	;volatile
  9296                           
  9297                           ; BSR set to: 57
  9298                           ;I2C.c: 37:     PIE2bits.I2C1RXIE = 1;
  9299  004E76  8F92               	bsf	146,7,b	;volatile
  9300                           
  9301                           ; BSR set to: 57
  9302                           ;I2C.c: 40:     I2C1PIRbits.PC1IF = 0;
  9303  004E78  013D               	movlb	61	; () banked
  9304  004E7A  9579               	bcf	121,2,b	;volatile
  9305                           
  9306                           ; BSR set to: 61
  9307                           ;I2C.c: 41:     I2C1PIEbits.PC1IE = 1;
  9308  004E7C  857A               	bsf	122,2,b	;volatile
  9309                           
  9310                           ; BSR set to: 61
  9311                           ;I2C.c: 42:     IPR3bits.I2C1IP = 0;
  9312  004E7E  0139               	movlb	57	; () banked
  9313  004E80  9383               	bcf	131,1,b	;volatile
  9314                           
  9315                           ; BSR set to: 57
  9316                           ;I2C.c: 43:     PIR3bits.I2C1IF = 0;
  9317  004E82  93A3               	bcf	163,1,b	;volatile
  9318                           
  9319                           ; BSR set to: 57
  9320                           ;I2C.c: 44:     PIE3bits.I2C1IE = 1;
  9321  004E84  8393               	bsf	147,1,b	;volatile
  9322                           
  9323                           ; BSR set to: 57
  9324                           ;I2C.c: 46:     I2C1CON0bits.EN = 1;
  9325  004E86  013D               	movlb	61	; () banked
  9326  004E88  8F73               	bsf	115,7,b	;volatile
  9327                           
  9328                           ; BSR set to: 61
  9329  004E8A  0012               	return		;funcret
  9330  004E8C                     __end_of_I2C_Init:
  9331                           	opt callstack 0
  9332                           
  9333 ;; *************** function _ADC_Init *****************
  9334 ;; Defined at:
  9335 ;;		line 249 in file "main.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;		None
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;		None
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      void 
  9342 ;; Registers used:
  9343 ;;		wreg, status,2
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9353 ;;Total ram usage:        0 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; Hardware stack levels required when called:    2
  9356 ;; This function calls:
  9357 ;;		Nothing
  9358 ;; This function is called by:
  9359 ;;		_main
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           	psect	text38
  9364  005276                     __ptext38:
  9365                           	opt callstack 0
  9366  005276                     _ADC_Init:
  9367                           	opt callstack 28
  9368                           
  9369                           ;main.c: 251:     TRISBbits.TRISB4 = 1;
  9370                           
  9371                           ; BSR set to: 61
  9372                           ;incstack = 0
  9373  005276  88C3               	bsf	16323,4,c	;volatile
  9374                           
  9375                           ;main.c: 252:     ANSELBbits.ANSELB4 = 1;
  9376  005278  013A               	movlb	58	; () banked
  9377  00527A  8950               	bsf	80,4,b	;volatile
  9378                           
  9379                           ; BSR set to: 58
  9380                           ;main.c: 253:     ADCON0 = 0x94;
  9381  00527C  0E94               	movlw	148
  9382  00527E  013E               	movlb	62	; () banked
  9383  005280  6FF8               	movwf	248,b	;volatile
  9384                           
  9385                           ;main.c: 254:     ADCON1 = 0x00;
  9386  005282  0E00               	movlw	0
  9387  005284  6FF9               	movwf	249,b	;volatile
  9388                           
  9389                           ;main.c: 255:     ADCON2 = 0x00;
  9390  005286  0E00               	movlw	0
  9391  005288  6FFA               	movwf	250,b	;volatile
  9392                           
  9393                           ;main.c: 256:     ADREF = 0x00;
  9394  00528A  0E00               	movlw	0
  9395  00528C  6FFD               	movwf	253,b	;volatile
  9396                           
  9397                           ; BSR set to: 62
  9398                           ;main.c: 257:     IPR1bits.ADIP = 0;
  9399  00528E  0139               	movlb	57	; () banked
  9400  005290  9581               	bcf	129,2,b	;volatile
  9401                           
  9402                           ; BSR set to: 57
  9403                           ;main.c: 258:     PIE1bits.ADIE = 1;
  9404  005292  8591               	bsf	145,2,b	;volatile
  9405                           
  9406                           ; BSR set to: 57
  9407                           ;main.c: 259:     PIR1bits.ADIF = 0;
  9408  005294  95A1               	bcf	161,2,b	;volatile
  9409                           
  9410                           ; BSR set to: 57
  9411  005296  0012               	return		;funcret
  9412  005298                     __end_of_ADC_Init:
  9413                           	opt callstack 0
  9414                           
  9415 ;; *************** function _TIMER0_ISR *****************
  9416 ;; Defined at:
  9417 ;;		line 65 in file "main.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;		None
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;		None
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  1    wreg      void 
  9424 ;; Registers used:
  9425 ;;		wreg, status,2, status,0, cstack
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9435 ;;Total ram usage:        0 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; Hardware stack levels required when called:    1
  9438 ;; This function calls:
  9439 ;;		_ADC_Start
  9440 ;; This function is called by:
  9441 ;;		Interrupt level 2
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445                           	psect	text39
  9446  005068                     __ptext39:
  9447                           	opt callstack 0
  9448  005068                     _TIMER0_ISR:
  9449                           	opt callstack 20
  9450                           
  9451                           ;main.c: 66:     T0CON0bits.EN = 0;
  9452                           
  9453                           ; BSR set to: 57
  9454                           ;incstack = 0
  9455  005068  9EB8               	bcf	16312,7,c	;volatile
  9456                           
  9457                           ;main.c: 67:     counter_timer0 ++;
  9458  00506A  2A3B               	incf	_counter_timer0,f,c
  9459                           
  9460                           ;main.c: 68:     if(counter_timer0 == 2){
  9461  00506C  0E02               	movlw	2
  9462  00506E  183B               	xorwf	_counter_timer0,w,c
  9463  005070  A4D8               	btfss	status,2,c
  9464  005072  D002               	goto	i2l5056
  9465                           
  9466                           ;main.c: 69:         LATAbits.LA0 = 0;
  9467  005074  90BA               	bcf	16314,0,c	;volatile
  9468                           
  9469                           ;main.c: 70:     }else if(counter_timer0 == 40){
  9470  005076  D00A               	goto	i2l270
  9471  005078                     i2l5056:
  9472  005078  0E28               	movlw	40
  9473  00507A  183B               	xorwf	_counter_timer0,w,c
  9474  00507C  A4D8               	btfss	status,2,c
  9475  00507E  D006               	goto	i2l270
  9476                           
  9477                           ;main.c: 71:         if(led_enable)
  9478  005080  0100               	movlb	0	; () banked
  9479  005082  51F9               	movf	_led_enable& (0+255),w,b
  9480  005084  A4D8               	btfss	status,2,c
  9481                           
  9482                           ; BSR set to: 0
  9483                           ;main.c: 72:             LATAbits.LA0 = 1;
  9484  005086  80BA               	bsf	16314,0,c	;volatile
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;main.c: 73:         counter_timer0 = 0;
  9488  005088  0E00               	movlw	0
  9489  00508A  6E3B               	movwf	_counter_timer0,c
  9490  00508C                     i2l270:
  9491                           
  9492                           ;main.c: 75:     TMR0L = 0xB0;
  9493  00508C  0EB0               	movlw	176
  9494  00508E  6EB6               	movwf	16310,c	;volatile
  9495                           
  9496                           ;main.c: 76:     TMR0H = 0x3C;
  9497  005090  0E3C               	movlw	60
  9498  005092  6EB7               	movwf	16311,c	;volatile
  9499                           
  9500                           ;main.c: 77:     if(measur_vol_or_cur)
  9501  005094  5040               	movf	_measur_vol_or_cur,w,c
  9502  005096  B4D8               	btfsc	status,2,c
  9503  005098  D004               	goto	i2l5066
  9504                           
  9505                           ;main.c: 78:         ADC_Start(12);
  9506  00509A  0E0C               	movlw	12
  9507  00509C  EC98  F029         	call	_ADC_Start
  9508  0050A0  D003               	goto	i2l5068
  9509  0050A2                     i2l5066:
  9510                           
  9511                           ;main.c: 80:         ADC_Start(13);
  9512  0050A2  0E0D               	movlw	13
  9513  0050A4  EC98  F029         	call	_ADC_Start
  9514  0050A8                     i2l5068:
  9515                           
  9516                           ;main.c: 81:     measur_vol_or_cur = !measur_vol_or_cur;
  9517  0050A8  5040               	movf	_measur_vol_or_cur,w,c
  9518  0050AA  A4D8               	btfss	status,2,c
  9519  0050AC  D002               	goto	i2u632_40
  9520  0050AE  0E01               	movlw	1
  9521  0050B0  D001               	goto	i2u633_40
  9522  0050B2                     i2u632_40:
  9523  0050B2  0E00               	movlw	0
  9524  0050B4                     i2u633_40:
  9525  0050B4  6E40               	movwf	_measur_vol_or_cur,c
  9526                           
  9527                           ;main.c: 82:     PIR3bits.TMR0IF = 0;
  9528  0050B6  0139               	movlb	57	; () banked
  9529  0050B8  9FA3               	bcf	163,7,b	;volatile
  9530                           
  9531                           ; BSR set to: 57
  9532                           ;main.c: 83:     T0CON0bits.EN = 1;
  9533  0050BA  8EB8               	bsf	16312,7,c	;volatile
  9534                           
  9535                           ; BSR set to: 57
  9536  0050BC  0011               	retfie		f
  9537  0050BE                     __end_of_TIMER0_ISR:
  9538                           	opt callstack 0
  9539                           
  9540 ;; *************** function _ADC_Start *****************
  9541 ;; Defined at:
  9542 ;;		line 263 in file "main.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;  pin             1    wreg     unsigned char 
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;  pin             1    0[COMRAM] unsigned char 
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      void 
  9549 ;; Registers used:
  9550 ;;		wreg
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9560 ;;Total ram usage:        1 bytes
  9561 ;; Hardware stack levels used:    1
  9562 ;; This function calls:
  9563 ;;		Nothing
  9564 ;; This function is called by:
  9565 ;;		_TIMER0_ISR
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           	psect	text40
  9570  005330                     __ptext40:
  9571                           	opt callstack 0
  9572  005330                     _ADC_Start:
  9573                           	opt callstack 20
  9574                           
  9575                           ; BSR set to: 57
  9576                           ;incstack = 0
  9577                           ;ADC_Start@pin stored from wreg
  9578  005330  6E01               	movwf	ADC_Start@pin,c
  9579                           
  9580                           ;main.c: 264:     if(!ADCON0bits.GO){
  9581  005332  013E               	movlb	62	; () banked
  9582  005334  B1F8               	btfsc	248,0,b	;volatile
  9583  005336  0012               	return	
  9584                           
  9585                           ; BSR set to: 62
  9586                           ;main.c: 265:         ADPCH = pin;
  9587  005338  0060  F007  FEF1   	movff	ADC_Start@pin,16113	;volatile
  9588                           
  9589                           ; BSR set to: 62
  9590                           ;main.c: 266:         ADCON0bits.GO = 1;
  9591  00533E  81F8               	bsf	248,0,b	;volatile
  9592                           
  9593                           ; BSR set to: 62
  9594  005340  0012               	return		;funcret
  9595  005342                     __end_of_ADC_Start:
  9596                           	opt callstack 0
  9597                           
  9598 ;; *************** function _UART1_TX_ISR *****************
  9599 ;; Defined at:
  9600 ;;		line 86 in file "main.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;		None
  9603 ;; Auto vars:     Size  Location     Type
  9604 ;;		None
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  1    wreg      void 
  9607 ;; Registers used:
  9608 ;;		None
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9618 ;;Total ram usage:        0 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; This function calls:
  9621 ;;		Nothing
  9622 ;; This function is called by:
  9623 ;;		Interrupt level 2
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text41
  9628  005344                     __ptext41:
  9629                           	opt callstack 0
  9630  005344                     _UART1_TX_ISR:
  9631                           	opt callstack 21
  9632                           
  9633                           ;main.c: 88:     U1TXB = tx_byte;
  9634                           
  9635                           ; BSR set to: 62
  9636                           ;incstack = 0
  9637  005344  0060  F0FB  FDEA   	movff	_tx_byte,15850	;volatile
  9638                           
  9639                           ;main.c: 89:     PIE3bits.U1TXIE = 0;
  9640  00534A  0139               	movlb	57	; () banked
  9641  00534C  9993               	bcf	147,4,b	;volatile
  9642                           
  9643                           ; BSR set to: 57
  9644  00534E  0011               	retfie		f
  9645  005350                     __end_of_UART1_TX_ISR:
  9646                           	opt callstack 0
  9647                           
  9648 ;; *************** function _UART1_RX_ISR *****************
  9649 ;; Defined at:
  9650 ;;		line 92 in file "main.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;		None
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;		None
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  1    wreg      void 
  9657 ;; Registers used:
  9658 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9668 ;;Total ram usage:        0 bytes
  9669 ;; Hardware stack levels used:    1
  9670 ;; This function calls:
  9671 ;;		Nothing
  9672 ;; This function is called by:
  9673 ;;		Interrupt level 2
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text42
  9678  0052D4                     __ptext42:
  9679                           	opt callstack 0
  9680  0052D4                     _UART1_RX_ISR:
  9681                           	opt callstack 21
  9682                           
  9683                           ;main.c: 93:     rx_buffer[rx_counter] = U1RXB;
  9684                           
  9685                           ; BSR set to: 57
  9686                           ;incstack = 0
  9687  0052D4  0E00               	movlw	low _rx_buffer
  9688  0052D6  243F               	addwf	_rx_counter,w,c
  9689  0052D8  6ED9               	movwf	fsr2l,c
  9690  0052DA  6ADA               	clrf	fsr2h,c
  9691  0052DC  0E01               	movlw	high _rx_buffer
  9692  0052DE  22DA               	addwfc	fsr2h,f,c
  9693  0052E0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9694                           
  9695                           ;main.c: 94:     rx_counter ++;
  9696  0052E6  2A3F               	incf	_rx_counter,f,c
  9697  0052E8  0011               	retfie		f
  9698  0052EA                     __end_of_UART1_RX_ISR:
  9699                           	opt callstack 0
  9700                           
  9701 ;; *************** function _ADC_ISR *****************
  9702 ;; Defined at:
  9703 ;;		line 97 in file "main.c"
  9704 ;; Parameters:    Size  Location     Type
  9705 ;;		None
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;  adc_float       4   28[COMRAM] float 
  9708 ;;  adc_result      2   32[COMRAM] int 
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9719 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9721 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9722 ;;Total ram usage:        8 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:    1
  9725 ;; This function calls:
  9726 ;;		___xxtofl
  9727 ;;		i2___flmul
  9728 ;; This function is called by:
  9729 ;;		Interrupt level 2
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733                           	psect	text43
  9734  0043F4                     __ptext43:
  9735                           	opt callstack 0
  9736  0043F4                     _ADC_ISR:
  9737                           	opt callstack 20
  9738                           
  9739                           ;main.c: 98:     int adc_result = ADRESL;
  9740                           
  9741                           ;incstack = 0
  9742  0043F4  006F FBBC  F021    	movff	16111,ADC_ISR@adc_result	;volatile
  9743  0043FA  6A22               	clrf	ADC_ISR@adc_result+1,c
  9744                           
  9745                           ;main.c: 99:     adc_result = adc_result | (ADRESH <<8);
  9746  0043FC  013E               	movlb	62	; () banked
  9747  0043FE  51F0               	movf	240,w,b	;volatile
  9748  004400  6E1C               	movwf	(??_ADC_ISR+1)& (0+255),c
  9749  004402  6A1B               	clrf	??_ADC_ISR& (0+255),c
  9750  004404  5021               	movf	ADC_ISR@adc_result,w,c
  9751  004406  101B               	iorwf	??_ADC_ISR,w,c
  9752  004408  6E21               	movwf	ADC_ISR@adc_result,c
  9753  00440A  5022               	movf	ADC_ISR@adc_result+1,w,c
  9754  00440C  101C               	iorwf	??_ADC_ISR+1,w,c
  9755  00440E  6E22               	movwf	ADC_ISR@adc_result+1,c
  9756                           
  9757                           ; BSR set to: 62
  9758                           ;main.c: 100:     float adc_float = (float)adc_result;
  9759  004410  0060  F084  F002   	movff	ADC_ISR@adc_result,___xxtofl@val
  9760  004416  0060  F088  F003   	movff	ADC_ISR@adc_result+1,___xxtofl@val+1
  9761  00441C  0E00               	movlw	0
  9762  00441E  BE03               	btfsc	___xxtofl@val+1,7,c
  9763  004420  0EFF               	movlw	-1
  9764  004422  6E04               	movwf	___xxtofl@val+2,c
  9765  004424  6E05               	movwf	___xxtofl@val+3,c
  9766  004426  0E01               	movlw	1
  9767  004428  EC47  F021         	call	___xxtofl
  9768  00442C  0060  F008  F01D   	movff	?___xxtofl,ADC_ISR@adc_float
  9769  004432  0060  F00C  F01E   	movff	?___xxtofl+1,ADC_ISR@adc_float+1
  9770  004438  0060  F010  F01F   	movff	?___xxtofl+2,ADC_ISR@adc_float+2
  9771  00443E  0060  F014  F020   	movff	?___xxtofl+3,ADC_ISR@adc_float+3
  9772                           
  9773                           ;main.c: 101:     if(ADPCH == 12)
  9774  004444  0E0C               	movlw	12
  9775  004446  013E               	movlb	62	; () banked
  9776  004448  19F1               	xorwf	241,w,b	;volatile
  9777  00444A  A4D8               	btfss	status,2,c
  9778  00444C  D023               	goto	i2l5088
  9779                           
  9780                           ; BSR set to: 62
  9781                           ;main.c: 102:         ADC_VOLTAGE_RESULT = adc_float * 0.012;
  9782  00444E  0060  F074  F002   	movff	ADC_ISR@adc_float,i2___flmul@b
  9783  004454  0060  F078  F003   	movff	ADC_ISR@adc_float+1,i2___flmul@b+1
  9784  00445A  0060  F07C  F004   	movff	ADC_ISR@adc_float+2,i2___flmul@b+2
  9785  004460  0060  F080  F005   	movff	ADC_ISR@adc_float+3,i2___flmul@b+3
  9786  004466  0EA6               	movlw	166
  9787  004468  6E06               	movwf	i2___flmul@a,c
  9788  00446A  0E9B               	movlw	155
  9789  00446C  6E07               	movwf	i2___flmul@a+1,c
  9790  00446E  0E44               	movlw	68
  9791  004470  6E08               	movwf	i2___flmul@a+2,c
  9792  004472  0E3C               	movlw	60
  9793  004474  6E09               	movwf	i2___flmul@a+3,c
  9794  004476  ECE2  F017         	call	i2___flmul	;wreg free
  9795  00447A  0060  F008  F0ED   	movff	?i2___flmul,_ADC_VOLTAGE_RESULT
  9796  004480  0060  F00C  F0EE   	movff	?i2___flmul+1,_ADC_VOLTAGE_RESULT+1
  9797  004486  0060  F010  F0EF   	movff	?i2___flmul+2,_ADC_VOLTAGE_RESULT+2
  9798  00448C  0060  F014  F0F0   	movff	?i2___flmul+3,_ADC_VOLTAGE_RESULT+3
  9799  004492  D026               	goto	i2l5092
  9800  004494                     i2l5088:
  9801                           
  9802                           ; BSR set to: 62
  9803  004494  0E0D               	movlw	13
  9804  004496  19F1               	xorwf	241,w,b	;volatile
  9805  004498  A4D8               	btfss	status,2,c
  9806  00449A  D022               	goto	i2l5092
  9807                           
  9808                           ; BSR set to: 62
  9809                           ;main.c: 104:         ADC_CURRENT_RESULT = adc_float * 0.012;
  9810  00449C  0060  F074  F002   	movff	ADC_ISR@adc_float,i2___flmul@b
  9811  0044A2  0060  F078  F003   	movff	ADC_ISR@adc_float+1,i2___flmul@b+1
  9812  0044A8  0060  F07C  F004   	movff	ADC_ISR@adc_float+2,i2___flmul@b+2
  9813  0044AE  0060  F080  F005   	movff	ADC_ISR@adc_float+3,i2___flmul@b+3
  9814  0044B4  0EA6               	movlw	166
  9815  0044B6  6E06               	movwf	i2___flmul@a,c
  9816  0044B8  0E9B               	movlw	155
  9817  0044BA  6E07               	movwf	i2___flmul@a+1,c
  9818  0044BC  0E44               	movlw	68
  9819  0044BE  6E08               	movwf	i2___flmul@a+2,c
  9820  0044C0  0E3C               	movlw	60
  9821  0044C2  6E09               	movwf	i2___flmul@a+3,c
  9822  0044C4  ECE2  F017         	call	i2___flmul	;wreg free
  9823  0044C8  0060  F008  F035   	movff	?i2___flmul,_ADC_CURRENT_RESULT
  9824  0044CE  0060  F00C  F036   	movff	?i2___flmul+1,_ADC_CURRENT_RESULT+1
  9825  0044D4  0060  F010  F037   	movff	?i2___flmul+2,_ADC_CURRENT_RESULT+2
  9826  0044DA  0060  F014  F038   	movff	?i2___flmul+3,_ADC_CURRENT_RESULT+3
  9827  0044E0                     i2l5092:
  9828                           
  9829                           ;main.c: 105:     PIR1bits.ADIF = 0;
  9830  0044E0  0139               	movlb	57	; () banked
  9831  0044E2  95A1               	bcf	161,2,b	;volatile
  9832                           
  9833                           ; BSR set to: 57
  9834  0044E4  0011               	retfie		f
  9835  0044E6                     __end_of_ADC_ISR:
  9836                           	opt callstack 0
  9837                           
  9838 ;; *************** function i2___flmul *****************
  9839 ;; Defined at:
  9840 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;  b               4    1[COMRAM] void 
  9843 ;;  a               4    5[COMRAM] void 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;  __flmul         4   20[COMRAM] struct .
  9846 ;;  __flmul         4   14[COMRAM] unsigned long 
  9847 ;;  __flmul         2   24[COMRAM] struct .
  9848 ;;  __flmul         1   19[COMRAM] unsigned char 
  9849 ;;  __flmul         1   18[COMRAM] unsigned char 
  9850 ;;  __flmul         1   13[COMRAM] unsigned char 
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  4    1[COMRAM] unsigned char 
  9853 ;; Registers used:
  9854 ;;		wreg, status,2, status,0, prodl, prodh
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/0
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9860 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9861 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9862 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9863 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9864 ;;Total ram usage:       25 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; This function calls:
  9867 ;;		Nothing
  9868 ;; This function is called by:
  9869 ;;		_ADC_ISR
  9870 ;; This function uses a non-reentrant model
  9871 ;;
  9872                           
  9873                           	psect	text44
  9874  002FC4                     __ptext44:
  9875                           	opt callstack 0
  9876  002FC4                     i2___flmul:
  9877                           	opt callstack 20
  9878                           
  9879                           ; BSR set to: 57
  9880                           ;incstack = 0
  9881  002FC4  5005               	movf	i2___flmul@b+3,w,c
  9882  002FC6  0B80               	andlw	128
  9883  002FC8  6E0E               	movwf	i2___flmul@sign,c
  9884  002FCA  5005               	movf	i2___flmul@b+3,w,c
  9885  002FCC  2405               	addwf	i2___flmul@b+3,w,c
  9886  002FCE  6E14               	movwf	i2___flmul@bexp,c
  9887  002FD0  BE04               	btfsc	i2___flmul@b+2,7,c
  9888  002FD2  8014               	bsf	i2___flmul@bexp,0,c
  9889  002FD4  5014               	movf	i2___flmul@bexp,w,c
  9890  002FD6  B4D8               	btfsc	status,2,c
  9891  002FD8  D00D               	goto	i2l4932
  9892  002FDA  2814               	incf	i2___flmul@bexp,w,c
  9893  002FDC  A4D8               	btfss	status,2,c
  9894  002FDE  D008               	goto	i2l4930
  9895  002FE0  0E00               	movlw	0
  9896  002FE2  6E02               	movwf	i2___flmul@b,c
  9897  002FE4  0E00               	movlw	0
  9898  002FE6  6E03               	movwf	i2___flmul@b+1,c
  9899  002FE8  0E00               	movlw	0
  9900  002FEA  6E04               	movwf	i2___flmul@b+2,c
  9901  002FEC  0E00               	movlw	0
  9902  002FEE  6E05               	movwf	i2___flmul@b+3,c
  9903  002FF0                     i2l4930:
  9904  002FF0  8E04               	bsf	i2___flmul@b+2,7,c
  9905  002FF2  D008               	goto	i2l4934
  9906  002FF4                     i2l4932:
  9907  002FF4  0E00               	movlw	0
  9908  002FF6  6E02               	movwf	i2___flmul@b,c
  9909  002FF8  0E00               	movlw	0
  9910  002FFA  6E03               	movwf	i2___flmul@b+1,c
  9911  002FFC  0E00               	movlw	0
  9912  002FFE  6E04               	movwf	i2___flmul@b+2,c
  9913  003000  0E00               	movlw	0
  9914  003002  6E05               	movwf	i2___flmul@b+3,c
  9915  003004                     i2l4934:
  9916  003004  5009               	movf	i2___flmul@a+3,w,c
  9917  003006  0B80               	andlw	128
  9918  003008  1A0E               	xorwf	i2___flmul@sign,f,c
  9919  00300A  5009               	movf	i2___flmul@a+3,w,c
  9920  00300C  2409               	addwf	i2___flmul@a+3,w,c
  9921  00300E  6E13               	movwf	i2___flmul@aexp,c
  9922  003010  BE08               	btfsc	i2___flmul@a+2,7,c
  9923  003012  8013               	bsf	i2___flmul@aexp,0,c
  9924  003014  5013               	movf	i2___flmul@aexp,w,c
  9925  003016  B4D8               	btfsc	status,2,c
  9926  003018  D00D               	goto	i2l4950
  9927  00301A  2813               	incf	i2___flmul@aexp,w,c
  9928  00301C  A4D8               	btfss	status,2,c
  9929  00301E  D008               	goto	i2l4948
  9930  003020  0E00               	movlw	0
  9931  003022  6E06               	movwf	i2___flmul@a,c
  9932  003024  0E00               	movlw	0
  9933  003026  6E07               	movwf	i2___flmul@a+1,c
  9934  003028  0E00               	movlw	0
  9935  00302A  6E08               	movwf	i2___flmul@a+2,c
  9936  00302C  0E00               	movlw	0
  9937  00302E  6E09               	movwf	i2___flmul@a+3,c
  9938  003030                     i2l4948:
  9939  003030  8E08               	bsf	i2___flmul@a+2,7,c
  9940  003032  D008               	goto	i2l1231
  9941  003034                     i2l4950:
  9942  003034  0E00               	movlw	0
  9943  003036  6E06               	movwf	i2___flmul@a,c
  9944  003038  0E00               	movlw	0
  9945  00303A  6E07               	movwf	i2___flmul@a+1,c
  9946  00303C  0E00               	movlw	0
  9947  00303E  6E08               	movwf	i2___flmul@a+2,c
  9948  003040  0E00               	movlw	0
  9949  003042  6E09               	movwf	i2___flmul@a+3,c
  9950  003044                     i2l1231:
  9951  003044  5013               	movf	i2___flmul@aexp,w,c
  9952  003046  B4D8               	btfsc	status,2,c
  9953  003048  D003               	goto	i2u616_40
  9954  00304A  5014               	movf	i2___flmul@bexp,w,c
  9955  00304C  A4D8               	btfss	status,2,c
  9956  00304E  D009               	goto	i2l4958
  9957  003050                     i2u616_40:
  9958  003050  0E00               	movlw	0
  9959  003052  6E02               	movwf	?i2___flmul,c
  9960  003054  0E00               	movlw	0
  9961  003056  6E03               	movwf	?i2___flmul+1,c
  9962  003058  0E00               	movlw	0
  9963  00305A  6E04               	movwf	?i2___flmul+2,c
  9964  00305C  0E00               	movlw	0
  9965  00305E  6E05               	movwf	?i2___flmul+3,c
  9966  003060  0012               	return	
  9967  003062                     i2l4958:
  9968  003062  5008               	movf	i2___flmul@a+2,w,c
  9969  003064  0202               	mulwf	i2___flmul@b,c
  9970  003066  006F FFCC  F019    	movff	prodl,i2___flmul@temp
  9971  00306C  006F FFD0  F01A    	movff	prodh,i2___flmul@temp+1
  9972  003072  5019               	movf	i2___flmul@temp,w,c
  9973  003074  6E0F               	movwf	i2___flmul@grs,c
  9974  003076  6A10               	clrf	i2___flmul@grs+1,c
  9975  003078  6A11               	clrf	i2___flmul@grs+2,c
  9976  00307A  6A12               	clrf	i2___flmul@grs+3,c
  9977  00307C  501A               	movf	i2___flmul@temp+1,w,c
  9978  00307E  6E15               	movwf	i2___flmul@prod,c
  9979  003080  6A16               	clrf	i2___flmul@prod+1,c
  9980  003082  6A17               	clrf	i2___flmul@prod+2,c
  9981  003084  6A18               	clrf	i2___flmul@prod+3,c
  9982  003086  5007               	movf	i2___flmul@a+1,w,c
  9983  003088  0203               	mulwf	i2___flmul@b+1,c
  9984  00308A  006F FFCC  F019    	movff	prodl,i2___flmul@temp
  9985  003090  006F FFD0  F01A    	movff	prodh,i2___flmul@temp+1
  9986  003096  5019               	movf	i2___flmul@temp,w,c
  9987  003098  260F               	addwf	i2___flmul@grs,f,c
  9988  00309A  0E00               	movlw	0
  9989  00309C  2210               	addwfc	i2___flmul@grs+1,f,c
  9990  00309E  2211               	addwfc	i2___flmul@grs+2,f,c
  9991  0030A0  2212               	addwfc	i2___flmul@grs+3,f,c
  9992  0030A2  501A               	movf	i2___flmul@temp+1,w,c
  9993  0030A4  2615               	addwf	i2___flmul@prod,f,c
  9994  0030A6  0E00               	movlw	0
  9995  0030A8  2216               	addwfc	i2___flmul@prod+1,f,c
  9996  0030AA  2217               	addwfc	i2___flmul@prod+2,f,c
  9997  0030AC  2218               	addwfc	i2___flmul@prod+3,f,c
  9998  0030AE  5006               	movf	i2___flmul@a,w,c
  9999  0030B0  0204               	mulwf	i2___flmul@b+2,c
 10000  0030B2  006F FFCC  F019    	movff	prodl,i2___flmul@temp
 10001  0030B8  006F FFD0  F01A    	movff	prodh,i2___flmul@temp+1
 10002  0030BE  5019               	movf	i2___flmul@temp,w,c
 10003  0030C0  260F               	addwf	i2___flmul@grs,f,c
 10004  0030C2  0E00               	movlw	0
 10005  0030C4  2210               	addwfc	i2___flmul@grs+1,f,c
 10006  0030C6  2211               	addwfc	i2___flmul@grs+2,f,c
 10007  0030C8  2212               	addwfc	i2___flmul@grs+3,f,c
 10008  0030CA  501A               	movf	i2___flmul@temp+1,w,c
 10009  0030CC  2615               	addwf	i2___flmul@prod,f,c
 10010  0030CE  0E00               	movlw	0
 10011  0030D0  2216               	addwfc	i2___flmul@prod+1,f,c
 10012  0030D2  2217               	addwfc	i2___flmul@prod+2,f,c
 10013  0030D4  2218               	addwfc	i2___flmul@prod+3,f,c
 10014  0030D6  0060  F044  F012   	movff	i2___flmul@grs+2,i2___flmul@grs+3
 10015  0030DC  0060  F040  F011   	movff	i2___flmul@grs+1,i2___flmul@grs+2
 10016  0030E2  0060  F03C  F010   	movff	i2___flmul@grs,i2___flmul@grs+1
 10017  0030E8  6A0F               	clrf	i2___flmul@grs,c
 10018  0030EA  5006               	movf	i2___flmul@a,w,c
 10019  0030EC  0203               	mulwf	i2___flmul@b+1,c
 10020  0030EE  006F FFCC  F019    	movff	prodl,i2___flmul@temp
 10021  0030F4  006F FFD0  F01A    	movff	prodh,i2___flmul@temp+1
 10022  0030FA  5019               	movf	i2___flmul@temp,w,c
 10023  0030FC  260F               	addwf	i2___flmul@grs,f,c
 10024  0030FE  501A               	movf	i2___flmul@temp+1,w,c
 10025  003100  2210               	addwfc	i2___flmul@grs+1,f,c
 10026  003102  0E00               	movlw	0
 10027  003104  2211               	addwfc	i2___flmul@grs+2,f,c
 10028  003106  0E00               	movlw	0
 10029  003108  2212               	addwfc	i2___flmul@grs+3,f,c
 10030  00310A  5007               	movf	i2___flmul@a+1,w,c
 10031  00310C  0202               	mulwf	i2___flmul@b,c
 10032  00310E  006F FFCC  F019    	movff	prodl,i2___flmul@temp
 10033  003114  006F FFD0  F01A    	movff	prodh,i2___flmul@temp+1
 10034  00311A  5019               	movf	i2___flmul@temp,w,c
 10035  00311C  260F               	addwf	i2___flmul@grs,f,c
 10036  00311E  501A               	movf	i2___flmul@temp+1,w,c
 10037  003120  2210               	addwfc	i2___flmul@grs+1,f,c
 10038  003122  0E00               	movlw	0
 10039  003124  2211               	addwfc	i2___flmul@grs+2,f,c
 10040  003126  0E00               	movlw	0
 10041  003128  2212               	addwfc	i2___flmul@grs+3,f,c
 10042  00312A  0060  F044  F012   	movff	i2___flmul@grs+2,i2___flmul@grs+3
 10043  003130  0060  F040  F011   	movff	i2___flmul@grs+1,i2___flmul@grs+2
 10044  003136  0060  F03C  F010   	movff	i2___flmul@grs,i2___flmul@grs+1
 10045  00313C  6A0F               	clrf	i2___flmul@grs,c
 10046  00313E  5006               	movf	i2___flmul@a,w,c
 10047  003140  0202               	mulwf	i2___flmul@b,c
 10048  003142  006F FFCC  F019    	movff	prodl,i2___flmul@temp
 10049  003148  006F FFD0  F01A    	movff	prodh,i2___flmul@temp+1
 10050  00314E  5019               	movf	i2___flmul@temp,w,c
 10051  003150  260F               	addwf	i2___flmul@grs,f,c
 10052  003152  501A               	movf	i2___flmul@temp+1,w,c
 10053  003154  2210               	addwfc	i2___flmul@grs+1,f,c
 10054  003156  0E00               	movlw	0
 10055  003158  2211               	addwfc	i2___flmul@grs+2,f,c
 10056  00315A  0E00               	movlw	0
 10057  00315C  2212               	addwfc	i2___flmul@grs+3,f,c
 10058  00315E  5008               	movf	i2___flmul@a+2,w,c
 10059  003160  0203               	mulwf	i2___flmul@b+1,c
 10060  003162  006F FFCC  F019    	movff	prodl,i2___flmul@temp
 10061  003168  006F FFD0  F01A    	movff	prodh,i2___flmul@temp+1
 10062  00316E  5019               	movf	i2___flmul@temp,w,c
 10063  003170  2615               	addwf	i2___flmul@prod,f,c
 10064  003172  501A               	movf	i2___flmul@temp+1,w,c
 10065  003174  2216               	addwfc	i2___flmul@prod+1,f,c
 10066  003176  0E00               	movlw	0
 10067  003178  2217               	addwfc	i2___flmul@prod+2,f,c
 10068  00317A  0E00               	movlw	0
 10069  00317C  2218               	addwfc	i2___flmul@prod+3,f,c
 10070  00317E  5007               	movf	i2___flmul@a+1,w,c
 10071  003180  0204               	mulwf	i2___flmul@b+2,c
 10072  003182  006F FFCC  F019    	movff	prodl,i2___flmul@temp
 10073  003188  006F FFD0  F01A    	movff	prodh,i2___flmul@temp+1
 10074  00318E  5019               	movf	i2___flmul@temp,w,c
 10075  003190  2615               	addwf	i2___flmul@prod,f,c
 10076  003192  501A               	movf	i2___flmul@temp+1,w,c
 10077  003194  2216               	addwfc	i2___flmul@prod+1,f,c
 10078  003196  0E00               	movlw	0
 10079  003198  2217               	addwfc	i2___flmul@prod+2,f,c
 10080  00319A  0E00               	movlw	0
 10081  00319C  2218               	addwfc	i2___flmul@prod+3,f,c
 10082  00319E  5008               	movf	i2___flmul@a+2,w,c
 10083  0031A0  0204               	mulwf	i2___flmul@b+2,c
 10084  0031A2  006F FFCC  F019    	movff	prodl,i2___flmul@temp
 10085  0031A8  006F FFD0  F01A    	movff	prodh,i2___flmul@temp+1
 10086  0031AE  5019               	movf	i2___flmul@temp,w,c
 10087  0031B0  6E0A               	movwf	??i2___flmul& (0+255),c
 10088  0031B2  501A               	movf	i2___flmul@temp+1,w,c
 10089  0031B4  6E0B               	movwf	(??i2___flmul+1)& (0+255),c
 10090  0031B6  6A0C               	clrf	(??i2___flmul+2)& (0+255),c
 10091  0031B8  6A0D               	clrf	(??i2___flmul+3)& (0+255),c
 10092  0031BA  0060  F030  F00D   	movff	??i2___flmul+2,??i2___flmul+3
 10093  0031C0  0060  F02C  F00C   	movff	??i2___flmul+1,??i2___flmul+2
 10094  0031C6  0060  F028  F00B   	movff	??i2___flmul,??i2___flmul+1
 10095  0031CC  6A0A               	clrf	??i2___flmul,c
 10096  0031CE  500A               	movf	??i2___flmul,w,c
 10097  0031D0  2615               	addwf	i2___flmul@prod,f,c
 10098  0031D2  500B               	movf	??i2___flmul+1,w,c
 10099  0031D4  2216               	addwfc	i2___flmul@prod+1,f,c
 10100  0031D6  500C               	movf	??i2___flmul+2,w,c
 10101  0031D8  2217               	addwfc	i2___flmul@prod+2,f,c
 10102  0031DA  500D               	movf	??i2___flmul+3,w,c
 10103  0031DC  2218               	addwfc	i2___flmul@prod+3,f,c
 10104  0031DE  0060  F03C  F00A   	movff	i2___flmul@grs,??i2___flmul
 10105  0031E4  0060  F040  F00B   	movff	i2___flmul@grs+1,??i2___flmul+1
 10106  0031EA  0060  F044  F00C   	movff	i2___flmul@grs+2,??i2___flmul+2
 10107  0031F0  0060  F048  F00D   	movff	i2___flmul@grs+3,??i2___flmul+3
 10108  0031F6  0E19               	movlw	25
 10109  0031F8  D005               	goto	i2u617_40
 10110  0031FA                     i2u617_45:
 10111  0031FA  90D8               	bcf	status,0,c
 10112  0031FC  320D               	rrcf	??i2___flmul+3,f,c
 10113  0031FE  320C               	rrcf	??i2___flmul+2,f,c
 10114  003200  320B               	rrcf	??i2___flmul+1,f,c
 10115  003202  320A               	rrcf	??i2___flmul,f,c
 10116  003204                     i2u617_40:
 10117  003204  2EE8               	decfsz	wreg,f,c
 10118  003206  D7F9               	goto	i2u617_45
 10119  003208  500A               	movf	??i2___flmul,w,c
 10120  00320A  2615               	addwf	i2___flmul@prod,f,c
 10121  00320C  500B               	movf	??i2___flmul+1,w,c
 10122  00320E  2216               	addwfc	i2___flmul@prod+1,f,c
 10123  003210  500C               	movf	??i2___flmul+2,w,c
 10124  003212  2217               	addwfc	i2___flmul@prod+2,f,c
 10125  003214  500D               	movf	??i2___flmul+3,w,c
 10126  003216  2218               	addwfc	i2___flmul@prod+3,f,c
 10127  003218  0060  F044  F012   	movff	i2___flmul@grs+2,i2___flmul@grs+3
 10128  00321E  0060  F040  F011   	movff	i2___flmul@grs+1,i2___flmul@grs+2
 10129  003224  0060  F03C  F010   	movff	i2___flmul@grs,i2___flmul@grs+1
 10130  00322A  6A0F               	clrf	i2___flmul@grs,c
 10131  00322C  5013               	movf	i2___flmul@aexp,w,c
 10132  00322E  0060  F050  F00A   	movff	i2___flmul@bexp,??i2___flmul
 10133  003234  6A0B               	clrf	(??i2___flmul+1)& (0+255),c
 10134  003236  260A               	addwf	??i2___flmul,f,c
 10135  003238  0E00               	movlw	0
 10136  00323A  220B               	addwfc	??i2___flmul+1,f,c
 10137  00323C  0E82               	movlw	130
 10138  00323E  240A               	addwf	??i2___flmul,w,c
 10139  003240  6E19               	movwf	i2___flmul@temp,c
 10140  003242  0EFF               	movlw	255
 10141  003244  200B               	addwfc	??i2___flmul+1,w,c
 10142  003246  6E1A               	movwf	i2___flmul@temp+1,c
 10143  003248  D00F               	goto	i2l5006
 10144  00324A                     i2l5000:
 10145  00324A  90D8               	bcf	status,0,c
 10146  00324C  3615               	rlcf	i2___flmul@prod,f,c
 10147  00324E  3616               	rlcf	i2___flmul@prod+1,f,c
 10148  003250  3617               	rlcf	i2___flmul@prod+2,f,c
 10149  003252  3618               	rlcf	i2___flmul@prod+3,f,c
 10150  003254  BE12               	btfsc	i2___flmul@grs+3,7,c
 10151  003256  8015               	bsf	i2___flmul@prod,0,c
 10152  003258  90D8               	bcf	status,0,c
 10153  00325A  360F               	rlcf	i2___flmul@grs,f,c
 10154  00325C  3610               	rlcf	i2___flmul@grs+1,f,c
 10155  00325E  3611               	rlcf	i2___flmul@grs+2,f,c
 10156  003260  3612               	rlcf	i2___flmul@grs+3,f,c
 10157  003262  0619               	decf	i2___flmul@temp,f,c
 10158  003264  A0D8               	btfss	status,0,c
 10159  003266  061A               	decf	i2___flmul@temp+1,f,c
 10160  003268                     i2l5006:
 10161  003268  AE17               	btfss	i2___flmul@prod+2,7,c
 10162  00326A  D7EF               	goto	i2l5000
 10163  00326C  0E00               	movlw	0
 10164  00326E  6E13               	movwf	i2___flmul@aexp,c
 10165  003270  AE12               	btfss	i2___flmul@grs+3,7,c
 10166  003272  D017               	goto	i2l1240
 10167  003274  0EFF               	movlw	255
 10168  003276  140F               	andwf	i2___flmul@grs,w,c
 10169  003278  6E0A               	movwf	??i2___flmul& (0+255),c
 10170  00327A  0EFF               	movlw	255
 10171  00327C  1410               	andwf	i2___flmul@grs+1,w,c
 10172  00327E  6E0B               	movwf	(??i2___flmul+1)& (0+255),c
 10173  003280  0EFF               	movlw	255
 10174  003282  1411               	andwf	i2___flmul@grs+2,w,c
 10175  003284  6E0C               	movwf	(??i2___flmul+2)& (0+255),c
 10176  003286  0E7F               	movlw	127
 10177  003288  1412               	andwf	i2___flmul@grs+3,w,c
 10178  00328A  6E0D               	movwf	(??i2___flmul+3)& (0+255),c
 10179  00328C  500A               	movf	??i2___flmul,w,c
 10180  00328E  100B               	iorwf	??i2___flmul+1,w,c
 10181  003290  100C               	iorwf	??i2___flmul+2,w,c
 10182  003292  100D               	iorwf	??i2___flmul+3,w,c
 10183  003294  B4D8               	btfsc	status,2,c
 10184  003296  D003               	goto	i2l1241
 10185  003298                     i2u621_40:
 10186  003298  0E01               	movlw	1
 10187  00329A  6E13               	movwf	i2___flmul@aexp,c
 10188  00329C  D002               	goto	i2l1240
 10189  00329E                     i2l1241:
 10190  00329E  B015               	btfsc	i2___flmul@prod,0,c
 10191  0032A0  D7FB               	goto	i2u621_40
 10192  0032A2                     i2l1240:
 10193  0032A2  5013               	movf	i2___flmul@aexp,w,c
 10194  0032A4  B4D8               	btfsc	status,2,c
 10195  0032A6  D027               	goto	i2l5026
 10196  0032A8  0E01               	movlw	1
 10197  0032AA  2615               	addwf	i2___flmul@prod,f,c
 10198  0032AC  0E00               	movlw	0
 10199  0032AE  2216               	addwfc	i2___flmul@prod+1,f,c
 10200  0032B0  2217               	addwfc	i2___flmul@prod+2,f,c
 10201  0032B2  2218               	addwfc	i2___flmul@prod+3,f,c
 10202  0032B4  A018               	btfss	i2___flmul@prod+3,0,c
 10203  0032B6  D01F               	goto	i2l5026
 10204  0032B8  0060  F054  F00A   	movff	i2___flmul@prod,??i2___flmul
 10205  0032BE  0060  F058  F00B   	movff	i2___flmul@prod+1,??i2___flmul+1
 10206  0032C4  0060  F05C  F00C   	movff	i2___flmul@prod+2,??i2___flmul+2
 10207  0032CA  0060  F060  F00D   	movff	i2___flmul@prod+3,??i2___flmul+3
 10208  0032D0  340D               	rlcf	??i2___flmul+3,w,c
 10209  0032D2  320D               	rrcf	??i2___flmul+3,f,c
 10210  0032D4  320C               	rrcf	??i2___flmul+2,f,c
 10211  0032D6  320B               	rrcf	??i2___flmul+1,f,c
 10212  0032D8  320A               	rrcf	??i2___flmul,f,c
 10213  0032DA  0060  F028  F015   	movff	??i2___flmul,i2___flmul@prod
 10214  0032E0  0060  F02C  F016   	movff	??i2___flmul+1,i2___flmul@prod+1
 10215  0032E6  0060  F030  F017   	movff	??i2___flmul+2,i2___flmul@prod+2
 10216  0032EC  0060  F034  F018   	movff	??i2___flmul+3,i2___flmul@prod+3
 10217  0032F2  4A19               	infsnz	i2___flmul@temp,f,c
 10218  0032F4  2A1A               	incf	i2___flmul@temp+1,f,c
 10219  0032F6                     i2l5026:
 10220  0032F6  BE1A               	btfsc	i2___flmul@temp+1,7,c
 10221  0032F8  D00D               	goto	i2l5030
 10222  0032FA  501A               	movf	i2___flmul@temp+1,w,c
 10223  0032FC  E103               	bnz	i2u625_40
 10224  0032FE  2819               	incf	i2___flmul@temp,w,c
 10225  003300  A0D8               	btfss	status,0,c
 10226  003302  D008               	goto	i2l5030
 10227  003304                     i2u625_40:
 10228  003304  0E00               	movlw	0
 10229  003306  6E15               	movwf	i2___flmul@prod,c
 10230  003308  0E00               	movlw	0
 10231  00330A  6E16               	movwf	i2___flmul@prod+1,c
 10232  00330C  0E80               	movlw	128
 10233  00330E  6E17               	movwf	i2___flmul@prod+2,c
 10234  003310  0E7F               	movlw	127
 10235  003312  D021               	goto	L14
 10236  003314                     i2l5030:
 10237  003314  BE1A               	btfsc	i2___flmul@temp+1,7,c
 10238  003316  D005               	goto	i2u626_40
 10239  003318  501A               	movf	i2___flmul@temp+1,w,c
 10240  00331A  E10E               	bnz	i2l1248
 10241  00331C  0419               	decf	i2___flmul@temp,w,c
 10242  00331E  B0D8               	btfsc	status,0,c
 10243  003320  D00B               	goto	i2l1248
 10244  003322                     i2u626_40:
 10245  003322  0E00               	movlw	0
 10246  003324  6E15               	movwf	i2___flmul@prod,c
 10247  003326  0E00               	movlw	0
 10248  003328  6E16               	movwf	i2___flmul@prod+1,c
 10249  00332A  0E00               	movlw	0
 10250  00332C  6E17               	movwf	i2___flmul@prod+2,c
 10251  00332E  0E00               	movlw	0
 10252  003330  6E18               	movwf	i2___flmul@prod+3,c
 10253  003332  0E00               	movlw	0
 10254  003334  6E0E               	movwf	i2___flmul@sign,c
 10255  003336  D010               	goto	i2l5042
 10256  003338                     i2l1248:
 10257  003338  0060  F064  F014   	movff	i2___flmul@temp,i2___flmul@bexp
 10258  00333E  0EFF               	movlw	255
 10259  003340  1615               	andwf	i2___flmul@prod,f,c
 10260  003342  0EFF               	movlw	255
 10261  003344  1616               	andwf	i2___flmul@prod+1,f,c
 10262  003346  0E7F               	movlw	127
 10263  003348  1617               	andwf	i2___flmul@prod+2,f,c
 10264  00334A  0E00               	movlw	0
 10265  00334C  1618               	andwf	i2___flmul@prod+3,f,c
 10266  00334E  B014               	btfsc	i2___flmul@bexp,0,c
 10267  003350  8E17               	bsf	i2___flmul@prod+2,7,c
 10268  003352  90D8               	bcf	status,0,c
 10269  003354  3014               	rrcf	i2___flmul@bexp,w,c
 10270  003356                     L14:
 10271  003356  6E18               	movwf	i2___flmul@prod+3,c
 10272  003358                     i2l5042:
 10273  003358  500E               	movf	i2___flmul@sign,w,c
 10274  00335A  1218               	iorwf	i2___flmul@prod+3,f,c
 10275  00335C  0060  F054  F002   	movff	i2___flmul@prod,?i2___flmul
 10276  003362  0060  F058  F003   	movff	i2___flmul@prod+1,?i2___flmul+1
 10277  003368  0060  F05C  F004   	movff	i2___flmul@prod+2,?i2___flmul+2
 10278  00336E  0060  F060  F005   	movff	i2___flmul@prod+3,?i2___flmul+3
 10279  003374  0012               	return		;funcret
 10280  003376                     __end_ofi2___flmul:
 10281                           	opt callstack 0
 10282                           
 10283 ;; *************** function ___xxtofl *****************
 10284 ;; Defined at:
 10285 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;  sign            1    wreg     unsigned char 
 10288 ;;  val             4    1[COMRAM] long 
 10289 ;; Auto vars:     Size  Location     Type
 10290 ;;  sign            1    9[COMRAM] unsigned char 
 10291 ;;  arg             4   11[COMRAM] unsigned long 
 10292 ;;  exp             1   10[COMRAM] unsigned char 
 10293 ;; Return value:  Size  Location     Type
 10294 ;;                  4    1[COMRAM] unsigned char 
 10295 ;; Registers used:
 10296 ;;		wreg, status,2, status,0
 10297 ;; Tracked objects:
 10298 ;;		On entry : 0/0
 10299 ;;		On exit  : 0/0
 10300 ;;		Unchanged: 0/0
 10301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10303 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10304 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10305 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10306 ;;Total ram usage:       14 bytes
 10307 ;; Hardware stack levels used:    1
 10308 ;; This function calls:
 10309 ;;		Nothing
 10310 ;; This function is called by:
 10311 ;;		_ADC_ISR
 10312 ;; This function uses a non-reentrant model
 10313 ;;
 10314                           
 10315                           	psect	text45
 10316  00428E                     __ptext45:
 10317                           	opt callstack 0
 10318  00428E                     ___xxtofl:
 10319                           	opt callstack 20
 10320                           
 10321                           ;incstack = 0
 10322                           ;___xxtofl@sign stored from wreg
 10323  00428E  6E0A               	movwf	___xxtofl@sign,c
 10324  004290  500A               	movf	___xxtofl@sign,w,c
 10325  004292  A4D8               	btfss	status,2,c
 10326  004294  AE05               	btfss	___xxtofl@val+3,7,c
 10327  004296  D022               	goto	i2l1272
 10328  004298  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 10329  00429E  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 10330  0042A4  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 10331  0042AA  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 10332  0042B0  1E06               	comf	??___xxtofl,f,c
 10333  0042B2  1E07               	comf	??___xxtofl+1,f,c
 10334  0042B4  1E08               	comf	??___xxtofl+2,f,c
 10335  0042B6  1E09               	comf	??___xxtofl+3,f,c
 10336  0042B8  2A06               	incf	??___xxtofl,f,c
 10337  0042BA  0E00               	movlw	0
 10338  0042BC  2207               	addwfc	??___xxtofl+1,f,c
 10339  0042BE  2208               	addwfc	??___xxtofl+2,f,c
 10340  0042C0  2209               	addwfc	??___xxtofl+3,f,c
 10341  0042C2  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 10342  0042C8  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 10343  0042CE  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 10344  0042D4  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 10345  0042DA  D00C               	goto	i2l4878
 10346  0042DC                     i2l1272:
 10347  0042DC  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 10348  0042E2  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 10349  0042E8  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 10350  0042EE  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 10351  0042F4                     i2l4878:
 10352  0042F4  5002               	movf	___xxtofl@val,w,c
 10353  0042F6  1003               	iorwf	___xxtofl@val+1,w,c
 10354  0042F8  1004               	iorwf	___xxtofl@val+2,w,c
 10355  0042FA  1005               	iorwf	___xxtofl@val+3,w,c
 10356  0042FC  A4D8               	btfss	status,2,c
 10357  0042FE  D009               	goto	i2l4884
 10358  004300  0E00               	movlw	0
 10359  004302  6E02               	movwf	?___xxtofl,c
 10360  004304  0E00               	movlw	0
 10361  004306  6E03               	movwf	?___xxtofl+1,c
 10362  004308  0E00               	movlw	0
 10363  00430A  6E04               	movwf	?___xxtofl+2,c
 10364  00430C  0E00               	movlw	0
 10365  00430E  6E05               	movwf	?___xxtofl+3,c
 10366  004310  0012               	return	
 10367  004312                     i2l4884:
 10368  004312  0E96               	movlw	150
 10369  004314  6E0B               	movwf	___xxtofl@exp,c
 10370  004316  D006               	goto	i2l4888
 10371  004318                     i2l4886:
 10372  004318  2A0B               	incf	___xxtofl@exp,f,c
 10373  00431A  90D8               	bcf	status,0,c
 10374  00431C  320F               	rrcf	___xxtofl@arg+3,f,c
 10375  00431E  320E               	rrcf	___xxtofl@arg+2,f,c
 10376  004320  320D               	rrcf	___xxtofl@arg+1,f,c
 10377  004322  320C               	rrcf	___xxtofl@arg,f,c
 10378  004324                     i2l4888:
 10379  004324  0E00               	movlw	0
 10380  004326  140C               	andwf	___xxtofl@arg,w,c
 10381  004328  6E06               	movwf	??___xxtofl& (0+255),c
 10382  00432A  0E00               	movlw	0
 10383  00432C  140D               	andwf	___xxtofl@arg+1,w,c
 10384  00432E  6E07               	movwf	(??___xxtofl+1)& (0+255),c
 10385  004330  0E00               	movlw	0
 10386  004332  140E               	andwf	___xxtofl@arg+2,w,c
 10387  004334  6E08               	movwf	(??___xxtofl+2)& (0+255),c
 10388  004336  0EFE               	movlw	254
 10389  004338  140F               	andwf	___xxtofl@arg+3,w,c
 10390  00433A  6E09               	movwf	(??___xxtofl+3)& (0+255),c
 10391  00433C  5006               	movf	??___xxtofl,w,c
 10392  00433E  1007               	iorwf	??___xxtofl+1,w,c
 10393  004340  1008               	iorwf	??___xxtofl+2,w,c
 10394  004342  1009               	iorwf	??___xxtofl+3,w,c
 10395  004344  B4D8               	btfsc	status,2,c
 10396  004346  D00D               	goto	i2l1279
 10397  004348  D7E7               	goto	i2l4886
 10398  00434A                     i2l4890:
 10399  00434A  2A0B               	incf	___xxtofl@exp,f,c
 10400  00434C  0E01               	movlw	1
 10401  00434E  260C               	addwf	___xxtofl@arg,f,c
 10402  004350  0E00               	movlw	0
 10403  004352  220D               	addwfc	___xxtofl@arg+1,f,c
 10404  004354  220E               	addwfc	___xxtofl@arg+2,f,c
 10405  004356  220F               	addwfc	___xxtofl@arg+3,f,c
 10406  004358  90D8               	bcf	status,0,c
 10407  00435A  320F               	rrcf	___xxtofl@arg+3,f,c
 10408  00435C  320E               	rrcf	___xxtofl@arg+2,f,c
 10409  00435E  320D               	rrcf	___xxtofl@arg+1,f,c
 10410  004360  320C               	rrcf	___xxtofl@arg,f,c
 10411  004362                     i2l1279:
 10412  004362  0E00               	movlw	0
 10413  004364  140C               	andwf	___xxtofl@arg,w,c
 10414  004366  6E06               	movwf	??___xxtofl& (0+255),c
 10415  004368  0E00               	movlw	0
 10416  00436A  140D               	andwf	___xxtofl@arg+1,w,c
 10417  00436C  6E07               	movwf	(??___xxtofl+1)& (0+255),c
 10418  00436E  0E00               	movlw	0
 10419  004370  140E               	andwf	___xxtofl@arg+2,w,c
 10420  004372  6E08               	movwf	(??___xxtofl+2)& (0+255),c
 10421  004374  0EFF               	movlw	255
 10422  004376  140F               	andwf	___xxtofl@arg+3,w,c
 10423  004378  6E09               	movwf	(??___xxtofl+3)& (0+255),c
 10424  00437A  5006               	movf	??___xxtofl,w,c
 10425  00437C  1007               	iorwf	??___xxtofl+1,w,c
 10426  00437E  1008               	iorwf	??___xxtofl+2,w,c
 10427  004380  1009               	iorwf	??___xxtofl+3,w,c
 10428  004382  B4D8               	btfsc	status,2,c
 10429  004384  D007               	goto	i2l4898
 10430  004386  D7E1               	goto	i2l4890
 10431  004388                     i2l4896:
 10432  004388  060B               	decf	___xxtofl@exp,f,c
 10433  00438A  90D8               	bcf	status,0,c
 10434  00438C  360C               	rlcf	___xxtofl@arg,f,c
 10435  00438E  360D               	rlcf	___xxtofl@arg+1,f,c
 10436  004390  360E               	rlcf	___xxtofl@arg+2,f,c
 10437  004392  360F               	rlcf	___xxtofl@arg+3,f,c
 10438  004394                     i2l4898:
 10439  004394  BE0E               	btfsc	___xxtofl@arg+2,7,c
 10440  004396  D003               	goto	i2u605_40
 10441  004398  0E02               	movlw	2
 10442  00439A  600B               	cpfslt	___xxtofl@exp,c
 10443  00439C  D7F5               	goto	i2l4896
 10444  00439E                     i2u605_40:
 10445  00439E  A00B               	btfss	___xxtofl@exp,0,c
 10446  0043A0  9E0E               	bcf	___xxtofl@arg+2,7,c
 10447  0043A2  90D8               	bcf	status,0,c
 10448  0043A4  320B               	rrcf	___xxtofl@exp,f,c
 10449  0043A6  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 10450  0043AC  6A07               	clrf	(??___xxtofl+1)& (0+255),c
 10451  0043AE  6A08               	clrf	(??___xxtofl+2)& (0+255),c
 10452  0043B0  6A09               	clrf	(??___xxtofl+3)& (0+255),c
 10453  0043B2  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 10454  0043B8  6A08               	clrf	??___xxtofl+2,c
 10455  0043BA  6A07               	clrf	??___xxtofl+1,c
 10456  0043BC  6A06               	clrf	??___xxtofl,c
 10457  0043BE  5006               	movf	??___xxtofl,w,c
 10458  0043C0  120C               	iorwf	___xxtofl@arg,f,c
 10459  0043C2  5007               	movf	??___xxtofl+1,w,c
 10460  0043C4  120D               	iorwf	___xxtofl@arg+1,f,c
 10461  0043C6  5008               	movf	??___xxtofl+2,w,c
 10462  0043C8  120E               	iorwf	___xxtofl@arg+2,f,c
 10463  0043CA  5009               	movf	??___xxtofl+3,w,c
 10464  0043CC  120F               	iorwf	___xxtofl@arg+3,f,c
 10465  0043CE  500A               	movf	___xxtofl@sign,w,c
 10466  0043D0  A4D8               	btfss	status,2,c
 10467  0043D2  AE05               	btfss	___xxtofl@val+3,7,c
 10468  0043D4  D001               	goto	i2l4914
 10469  0043D6  8E0F               	bsf	___xxtofl@arg+3,7,c
 10470  0043D8                     i2l4914:
 10471  0043D8  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 10472  0043DE  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 10473  0043E4  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 10474  0043EA  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 10475  0043F0  0012               	return		;funcret
 10476  0043F2                     __end_of___xxtofl:
 10477                           	opt callstack 0
 10478                           
 10479 ;; *************** function _I2C_TX_ISR *****************
 10480 ;; Defined at:
 10481 ;;		line 108 in file "main.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;		None
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;		None
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  1    wreg      void 
 10488 ;; Registers used:
 10489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10499 ;;Total ram usage:        0 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; This function calls:
 10502 ;;		Nothing
 10503 ;; This function is called by:
 10504 ;;		Interrupt level 2
 10505 ;; This function uses a non-reentrant model
 10506 ;;
 10507                           
 10508                           	psect	text46
 10509  0052EC                     __ptext46:
 10510                           	opt callstack 0
 10511  0052EC                     _I2C_TX_ISR:
 10512                           	opt callstack 21
 10513                           
 10514                           ;main.c: 109:     I2C1TXB = I2C_TX_BUFFER[I2C_TX_COUNTER];
 10515                           
 10516                           ;incstack = 0
 10517  0052EC  0E23               	movlw	low _I2C_TX_BUFFER
 10518  0052EE  243D               	addwf	_I2C_TX_COUNTER,w,c
 10519  0052F0  6ED9               	movwf	fsr2l,c
 10520  0052F2  6ADA               	clrf	fsr2h,c
 10521  0052F4  0E00               	movlw	high _I2C_TX_BUFFER
 10522  0052F6  22DA               	addwfc	fsr2h,f,c
 10523  0052F8  50DF               	movf	indf2,w,c
 10524  0052FA  013D               	movlb	61	; () banked
 10525  0052FC  6F6B               	movwf	107,b	;volatile
 10526                           
 10527                           ; BSR set to: 61
 10528                           ;main.c: 110:     I2C_TX_COUNTER ++;
 10529  0052FE  2A3D               	incf	_I2C_TX_COUNTER,f,c
 10530                           
 10531                           ; BSR set to: 61
 10532  005300  0011               	retfie		f
 10533  005302                     __end_of_I2C_TX_ISR:
 10534                           	opt callstack 0
 10535                           
 10536 ;; *************** function _I2C_RX_ISR *****************
 10537 ;; Defined at:
 10538 ;;		line 112 in file "main.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;		None
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;		None
 10543 ;; Return value:  Size  Location     Type
 10544 ;;                  1    wreg      void 
 10545 ;; Registers used:
 10546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10547 ;; Tracked objects:
 10548 ;;		On entry : 0/0
 10549 ;;		On exit  : 0/0
 10550 ;;		Unchanged: 0/0
 10551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10556 ;;Total ram usage:        0 bytes
 10557 ;; Hardware stack levels used:    1
 10558 ;; This function calls:
 10559 ;;		Nothing
 10560 ;; This function is called by:
 10561 ;;		Interrupt level 2
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           	psect	text47
 10566  005304                     __ptext47:
 10567                           	opt callstack 0
 10568  005304                     _I2C_RX_ISR:
 10569                           	opt callstack 21
 10570                           
 10571                           ;main.c: 113:     I2C_RX_BUFFER[I2C_RX_COUNTER] = I2C1RXB;
 10572                           
 10573                           ; BSR set to: 61
 10574                           ;incstack = 0
 10575  005304  0E20               	movlw	low _I2C_RX_BUFFER
 10576  005306  243C               	addwf	_I2C_RX_COUNTER,w,c
 10577  005308  6ED9               	movwf	fsr2l,c
 10578  00530A  6ADA               	clrf	fsr2h,c
 10579  00530C  0E01               	movlw	high _I2C_RX_BUFFER
 10580  00530E  22DA               	addwfc	fsr2h,f,c
 10581  005310  006F F5AB FFDF     	movff	15722,indf2	;volatile
 10582                           
 10583                           ;main.c: 114:     I2C_RX_COUNTER ++;
 10584  005316  2A3C               	incf	_I2C_RX_COUNTER,f,c
 10585  005318  0011               	retfie		f
 10586  00531A                     __end_of_I2C_RX_ISR:
 10587                           	opt callstack 0
 10588                           
 10589 ;; *************** function _I2C_GENERAL_ISR *****************
 10590 ;; Defined at:
 10591 ;;		line 117 in file "main.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;		None
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;		None
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  1    wreg      void 
 10598 ;; Registers used:
 10599 ;;		wreg, status,2
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10609 ;;Total ram usage:        0 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		Interrupt level 2
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618                           	psect	text48
 10619  00531C                     __ptext48:
 10620                           	opt callstack 0
 10621  00531C                     _I2C_GENERAL_ISR:
 10622                           	opt callstack 21
 10623                           
 10624                           ;main.c: 118:     if(I2C1PIRbits.PC1IF)
 10625                           
 10626                           ;incstack = 0
 10627  00531C  013D               	movlb	61	; () banked
 10628  00531E  A579               	btfss	121,2,b	;volatile
 10629  005320  D003               	goto	i2l308
 10630                           
 10631                           ; BSR set to: 61
 10632                           ;main.c: 119:         I2C_STOP_DETECTED = 1;
 10633  005322  0E01               	movlw	1
 10634  005324  0100               	movlb	0	; () banked
 10635  005326  6FFA               	movwf	_I2C_STOP_DETECTED& (0+255),b
 10636  005328                     i2l308:
 10637                           
 10638                           ;main.c: 120:     I2C1PIR = 0x00;
 10639  005328  0E00               	movlw	0
 10640  00532A  013D               	movlb	61	; () banked
 10641  00532C  6F79               	movwf	121,b	;volatile
 10642                           
 10643                           ; BSR set to: 61
 10644  00532E  0011               	retfie		f
 10645  005330                     __end_of_I2C_GENERAL_ISR:
 10646                           	opt callstack 0
 10647                           
 10648 ;; *************** function _DEFAULT_ISR *****************
 10649 ;; Defined at:
 10650 ;;		line 123 in file "main.c"
 10651 ;; Parameters:    Size  Location     Type
 10652 ;;		None
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;		None
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  1    wreg      void 
 10657 ;; Registers used:
 10658 ;;		None
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10668 ;;Total ram usage:        0 bytes
 10669 ;; Hardware stack levels used:    1
 10670 ;; This function calls:
 10671 ;;		Nothing
 10672 ;; This function is called by:
 10673 ;;		Interrupt level 2
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           	psect	text49
 10678  005354                     __ptext49:
 10679                           	opt callstack 0
 10680  005354                     _DEFAULT_ISR:
 10681                           	opt callstack 21
 10682                           
 10683                           ; BSR set to: 61
 10684                           ;incstack = 0
 10685  005354  0011               	retfie		f
 10686  005356                     __end_of_DEFAULT_ISR:
 10687                           	opt callstack 0
 10688                           
 10689                           ;
 10690                           ; Interrupt Vector Table @ 0x8
 10691                           ;
 10692                           
 10693                           	psect	ivt0x8
 10694  000008                     __pivt0x8:
 10695                           	opt callstack 0
 10696  000008                     ivt0x8_base:
 10697                           	opt callstack 0
 10698                           
 10699                           ; Vector 0 : SWINT
 10700  000008  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10701                           
 10702                           ; Vector 1 : HLVD
 10703  00000A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10704                           
 10705                           ; Vector 2 : OSF
 10706  00000C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10707                           
 10708                           ; Vector 3 : CSW
 10709  00000E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10710                           
 10711                           ; Vector 4 : NVM
 10712  000010  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10713                           
 10714                           ; Vector 5 : SCAN
 10715  000012  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10716                           
 10717                           ; Vector 6 : CRC
 10718  000014  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10719                           
 10720                           ; Vector 7 : IOC
 10721  000016  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10722                           
 10723                           ; Vector 8 : INT0
 10724  000018  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10725                           
 10726                           ; Vector 9 : ZCD
 10727  00001A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10728                           
 10729                           ; Vector 10 : AD
 10730  00001C  10FD               	dw	_ADC_ISR shr (0+2)
 10731                           
 10732                           ; Vector 11 : ADT
 10733  00001E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10734                           
 10735                           ; Vector 12 : CMP1
 10736  000020  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10737                           
 10738                           ; Vector 13 : SMT1
 10739  000022  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10740                           
 10741                           ; Vector 14 : SMT1PRA
 10742  000024  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10743                           
 10744                           ; Vector 15 : SMT1PRW
 10745  000026  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10746                           
 10747                           ; Vector 16 : DMA1SCNT
 10748  000028  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10749                           
 10750                           ; Vector 17 : DMA1DCNT
 10751  00002A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10752                           
 10753                           ; Vector 18 : DMA1OR
 10754  00002C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10755                           
 10756                           ; Vector 19 : DMA1A
 10757  00002E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10758                           
 10759                           ; Vector 20 : SPI1RX
 10760  000030  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10761                           
 10762                           ; Vector 21 : SPI1TX
 10763  000032  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10764                           
 10765                           ; Vector 22 : SPI1
 10766  000034  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10767                           
 10768                           ; Vector 23 : I2C1RX
 10769  000036  14C1               	dw	_I2C_RX_ISR shr (0+2)
 10770                           
 10771                           ; Vector 24 : I2C1TX
 10772  000038  14BB               	dw	_I2C_TX_ISR shr (0+2)
 10773                           
 10774                           ; Vector 25 : I2C1
 10775  00003A  14C7               	dw	_I2C_GENERAL_ISR shr (0+2)
 10776                           
 10777                           ; Vector 26 : I2C1E
 10778  00003C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10779                           
 10780                           ; Vector 27 : U1RX
 10781  00003E  14B5               	dw	_UART1_RX_ISR shr (0+2)
 10782                           
 10783                           ; Vector 28 : U1TX
 10784  000040  14D1               	dw	_UART1_TX_ISR shr (0+2)
 10785                           
 10786                           ; Vector 29 : U1E
 10787  000042  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10788                           
 10789                           ; Vector 30 : U1
 10790  000044  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10791                           
 10792                           ; Vector 31 : TMR0
 10793  000046  141A               	dw	_TIMER0_ISR shr (0+2)
 10794                           
 10795                           ; Vector 32 : TMR1
 10796  000048  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10797                           
 10798                           ; Vector 33 : TMR1G
 10799  00004A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10800                           
 10801                           ; Vector 34 : TMR2
 10802  00004C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10803                           
 10804                           ; Vector 35 : CCP1
 10805  00004E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10806                           
 10807                           ; Vector 36 : Undefined
 10808  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10809                           
 10810                           ; Vector 37 : NCO1
 10811  000052  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10812                           
 10813                           ; Vector 38 : CWG1
 10814  000054  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10815                           
 10816                           ; Vector 39 : CLC1
 10817  000056  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10818                           
 10819                           ; Vector 40 : INT1
 10820  000058  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10821                           
 10822                           ; Vector 41 : CMP2
 10823  00005A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10824                           
 10825                           ; Vector 42 : DMA2SCNT
 10826  00005C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10827                           
 10828                           ; Vector 43 : DMA2DCNT
 10829  00005E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10830                           
 10831                           ; Vector 44 : DMA2OR
 10832  000060  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10833                           
 10834                           ; Vector 45 : DMA2A
 10835  000062  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10836                           
 10837                           ; Vector 46 : I2C2RX
 10838  000064  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10839                           
 10840                           ; Vector 47 : I2C2TX
 10841  000066  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10842                           
 10843                           ; Vector 48 : I2C2
 10844  000068  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10845                           
 10846                           ; Vector 49 : I2C2E
 10847  00006A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10848                           
 10849                           ; Vector 50 : U2RX
 10850  00006C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10851                           
 10852                           ; Vector 51 : U2TX
 10853  00006E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10854                           
 10855                           ; Vector 52 : U2E
 10856  000070  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10857                           
 10858                           ; Vector 53 : U2
 10859  000072  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10860                           
 10861                           ; Vector 54 : TMR3
 10862  000074  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10863                           
 10864                           ; Vector 55 : TMR3G
 10865  000076  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10866                           
 10867                           ; Vector 56 : TMR4
 10868  000078  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10869                           
 10870                           ; Vector 57 : CCP2
 10871  00007A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10872                           
 10873                           ; Vector 58 : Undefined
 10874  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10875                           
 10876                           ; Vector 59 : CWG2
 10877  00007E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10878                           
 10879                           ; Vector 60 : CLC2
 10880  000080  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10881                           
 10882                           ; Vector 61 : INT2
 10883  000082  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10884                           
 10885                           ; Vector 62 : Undefined
 10886  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10887                           
 10888                           ; Vector 63 : Undefined
 10889  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10890                           
 10891                           ; Vector 64 : Undefined
 10892  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10893                           
 10894                           ; Vector 65 : Undefined
 10895  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10896                           
 10897                           ; Vector 66 : Undefined
 10898  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10899                           
 10900                           ; Vector 67 : Undefined
 10901  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10902                           
 10903                           ; Vector 68 : Undefined
 10904  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10905                           
 10906                           ; Vector 69 : Undefined
 10907  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10908                           
 10909                           ; Vector 70 : TMR5
 10910  000094  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10911                           
 10912                           ; Vector 71 : TMR5G
 10913  000096  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10914                           
 10915                           ; Vector 72 : TMR6
 10916  000098  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10917                           
 10918                           ; Vector 73 : CCP3
 10919  00009A  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10920                           
 10921                           ; Vector 74 : CWG3
 10922  00009C  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10923                           
 10924                           ; Vector 75 : CLC3
 10925  00009E  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10926                           
 10927                           ; Vector 76 : Undefined
 10928  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10929                           
 10930                           ; Vector 77 : Undefined
 10931  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10932                           
 10933                           ; Vector 78 : Undefined
 10934  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10935                           
 10936                           ; Vector 79 : Undefined
 10937  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10938                           
 10939                           ; Vector 80 : CCP4
 10940  0000A8  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10941                           
 10942                           ; Vector 81 : CLC4
 10943  0000AA  14D5               	dw	_DEFAULT_ISR shr (0+2)
 10944  0000AC                     ivt0x8_undefint:
 10945                           	opt callstack 0
 10946  0000AC  00FF               	reset	
 10947                           
 10948                           	psect	param0
 10949  0000                     tosu	equ	0x3FFF
 10950                           tosh	equ	0x3FFE
 10951                           tosl	equ	0x3FFD
 10952                           stkptr	equ	0x3FFC
 10953                           pclatu	equ	0x3FFB
 10954                           pclath	equ	0x3FFA
 10955                           pcl	equ	0x3FF9
 10956                           tblptru	equ	0x3FF8
 10957                           tblptrh	equ	0x3FF7
 10958                           tblptrl	equ	0x3FF6
 10959                           tablat	equ	0x3FF5
 10960                           prodh	equ	0x3FF4
 10961                           prodl	equ	0x3FF3
 10962                           indf0	equ	0x3FEF
 10963                           postinc0	equ	0x3FEE
 10964                           postdec0	equ	0x3FED
 10965                           preinc0	equ	0x3FEC
 10966                           plusw0	equ	0x3FEB
 10967                           fsr0h	equ	0x3FEA
 10968                           fsr0l	equ	0x3FE9
 10969                           wreg	equ	0x3FE8
 10970                           indf1	equ	0x3FE7
 10971                           postinc1	equ	0x3FE6
 10972                           postdec1	equ	0x3FE5
 10973                           preinc1	equ	0x3FE4
 10974                           plusw1	equ	0x3FE3
 10975                           fsr1h	equ	0x3FE2
 10976                           fsr1l	equ	0x3FE1
 10977                           bsr	equ	0x3FE0
 10978                           indf2	equ	0x3FDF
 10979                           postinc2	equ	0x3FDE
 10980                           postdec2	equ	0x3FDD
 10981                           preinc2	equ	0x3FDC
 10982                           plusw2	equ	0x3FDB
 10983                           fsr2h	equ	0x3FDA
 10984                           fsr2l	equ	0x3FD9
 10985                           status	equ	0x3FD8


Data Sizes:
    Strings     178
    Constant    0
    Data        2
    BSS         224
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      64
    BANK0           160    141     160
    BANK1           256     23     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_9(CODE[24]), STR_8(CODE[19]), STR_7(CODE[13]), STR_6(CODE[21]), 
		 -> STR_5(CODE[20]), STR_4(CODE[24]), STR_3(CODE[52]), STR_2(CODE[5]), 
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S2159_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_9(CODE[24]), STR_8(CODE[19]), STR_7(CODE[13]), STR_6(CODE[21]), 
		 -> STR_5(CODE[20]), STR_4(CODE[24]), STR_3(CODE[52]), STR_2(CODE[5]), 
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_9(CODE[24]), STR_8(CODE[19]), STR_7(CODE[13]), STR_6(CODE[21]), 
		 -> STR_5(CODE[20]), STR_4(CODE[24]), STR_3(CODE[52]), STR_2(CODE[5]), 
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    I2C_Transmit@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> AD5272_COMMANDS(BANK0[2]), 

    memset@st	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 

    USART1_SendString@str	PTR unsigned char  size(2) Largest target is 55
		 -> tx_buffer(BANK1[55]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER0_ISR in COMRAM

    _TIMER0_ISR->_ADC_Start

Critical Paths under _UART1_TX_ISR in COMRAM

    None.

Critical Paths under _UART1_RX_ISR in COMRAM

    None.

Critical Paths under _ADC_ISR in COMRAM

    _ADC_ISR->i2___flmul

Critical Paths under _I2C_TX_ISR in COMRAM

    None.

Critical Paths under _I2C_RX_ISR in COMRAM

    None.

Critical Paths under _I2C_GENERAL_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _USART1_SendString->_GetStringSize
    _I2C_handler->_I2C_Transmit
    _USART1_ReceiveCommand->___wmul

Critical Paths under _TIMER0_ISR in BANK0

    None.

Critical Paths under _UART1_TX_ISR in BANK0

    None.

Critical Paths under _UART1_RX_ISR in BANK0

    None.

Critical Paths under _ADC_ISR in BANK0

    None.

Critical Paths under _I2C_TX_ISR in BANK0

    None.

Critical Paths under _I2C_RX_ISR in BANK0

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK0

    None.

Critical Paths under _DEFAULT_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_USART_handler
    _USART_handler->_sprintf

Critical Paths under _TIMER0_ISR in BANK1

    None.

Critical Paths under _UART1_TX_ISR in BANK1

    None.

Critical Paths under _UART1_RX_ISR in BANK1

    None.

Critical Paths under _ADC_ISR in BANK1

    None.

Critical Paths under _I2C_TX_ISR in BANK1

    None.

Critical Paths under _I2C_RX_ISR in BANK1

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK1

    None.

Critical Paths under _DEFAULT_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0_ISR in BANK2

    None.

Critical Paths under _UART1_TX_ISR in BANK2

    None.

Critical Paths under _UART1_RX_ISR in BANK2

    None.

Critical Paths under _ADC_ISR in BANK2

    None.

Critical Paths under _I2C_TX_ISR in BANK2

    None.

Critical Paths under _I2C_RX_ISR in BANK2

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK2

    None.

Critical Paths under _DEFAULT_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0_ISR in BANK3

    None.

Critical Paths under _UART1_TX_ISR in BANK3

    None.

Critical Paths under _UART1_RX_ISR in BANK3

    None.

Critical Paths under _ADC_ISR in BANK3

    None.

Critical Paths under _I2C_TX_ISR in BANK3

    None.

Critical Paths under _I2C_RX_ISR in BANK3

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK3

    None.

Critical Paths under _DEFAULT_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0_ISR in BANK4

    None.

Critical Paths under _UART1_TX_ISR in BANK4

    None.

Critical Paths under _UART1_RX_ISR in BANK4

    None.

Critical Paths under _ADC_ISR in BANK4

    None.

Critical Paths under _I2C_TX_ISR in BANK4

    None.

Critical Paths under _I2C_RX_ISR in BANK4

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK4

    None.

Critical Paths under _DEFAULT_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0_ISR in BANK5

    None.

Critical Paths under _UART1_TX_ISR in BANK5

    None.

Critical Paths under _UART1_RX_ISR in BANK5

    None.

Critical Paths under _ADC_ISR in BANK5

    None.

Critical Paths under _I2C_TX_ISR in BANK5

    None.

Critical Paths under _I2C_RX_ISR in BANK5

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0_ISR in BANK6

    None.

Critical Paths under _UART1_TX_ISR in BANK6

    None.

Critical Paths under _UART1_RX_ISR in BANK6

    None.

Critical Paths under _ADC_ISR in BANK6

    None.

Critical Paths under _I2C_TX_ISR in BANK6

    None.

Critical Paths under _I2C_RX_ISR in BANK6

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0_ISR in BANK7

    None.

Critical Paths under _UART1_TX_ISR in BANK7

    None.

Critical Paths under _UART1_RX_ISR in BANK7

    None.

Critical Paths under _ADC_ISR in BANK7

    None.

Critical Paths under _I2C_TX_ISR in BANK7

    None.

Critical Paths under _I2C_RX_ISR in BANK7

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TIMER0_ISR in BANK8

    None.

Critical Paths under _UART1_TX_ISR in BANK8

    None.

Critical Paths under _UART1_RX_ISR in BANK8

    None.

Critical Paths under _ADC_ISR in BANK8

    None.

Critical Paths under _I2C_TX_ISR in BANK8

    None.

Critical Paths under _I2C_RX_ISR in BANK8

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TIMER0_ISR in BANK9

    None.

Critical Paths under _UART1_TX_ISR in BANK9

    None.

Critical Paths under _UART1_RX_ISR in BANK9

    None.

Critical Paths under _ADC_ISR in BANK9

    None.

Critical Paths under _I2C_TX_ISR in BANK9

    None.

Critical Paths under _I2C_RX_ISR in BANK9

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TIMER0_ISR in BANK10

    None.

Critical Paths under _UART1_TX_ISR in BANK10

    None.

Critical Paths under _UART1_RX_ISR in BANK10

    None.

Critical Paths under _ADC_ISR in BANK10

    None.

Critical Paths under _I2C_TX_ISR in BANK10

    None.

Critical Paths under _I2C_RX_ISR in BANK10

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TIMER0_ISR in BANK11

    None.

Critical Paths under _UART1_TX_ISR in BANK11

    None.

Critical Paths under _UART1_RX_ISR in BANK11

    None.

Critical Paths under _ADC_ISR in BANK11

    None.

Critical Paths under _I2C_TX_ISR in BANK11

    None.

Critical Paths under _I2C_RX_ISR in BANK11

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TIMER0_ISR in BANK12

    None.

Critical Paths under _UART1_TX_ISR in BANK12

    None.

Critical Paths under _UART1_RX_ISR in BANK12

    None.

Critical Paths under _ADC_ISR in BANK12

    None.

Critical Paths under _I2C_TX_ISR in BANK12

    None.

Critical Paths under _I2C_RX_ISR in BANK12

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TIMER0_ISR in BANK13

    None.

Critical Paths under _UART1_TX_ISR in BANK13

    None.

Critical Paths under _UART1_RX_ISR in BANK13

    None.

Critical Paths under _ADC_ISR in BANK13

    None.

Critical Paths under _I2C_TX_ISR in BANK13

    None.

Critical Paths under _I2C_RX_ISR in BANK13

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TIMER0_ISR in BANK14

    None.

Critical Paths under _UART1_TX_ISR in BANK14

    None.

Critical Paths under _UART1_RX_ISR in BANK14

    None.

Critical Paths under _ADC_ISR in BANK14

    None.

Critical Paths under _I2C_TX_ISR in BANK14

    None.

Critical Paths under _I2C_RX_ISR in BANK14

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TIMER0_ISR in BANK15

    None.

Critical Paths under _UART1_TX_ISR in BANK15

    None.

Critical Paths under _UART1_RX_ISR in BANK15

    None.

Critical Paths under _ADC_ISR in BANK15

    None.

Critical Paths under _I2C_TX_ISR in BANK15

    None.

Critical Paths under _I2C_RX_ISR in BANK15

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TIMER0_ISR in BANK16

    None.

Critical Paths under _UART1_TX_ISR in BANK16

    None.

Critical Paths under _UART1_RX_ISR in BANK16

    None.

Critical Paths under _ADC_ISR in BANK16

    None.

Critical Paths under _I2C_TX_ISR in BANK16

    None.

Critical Paths under _I2C_RX_ISR in BANK16

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TIMER0_ISR in BANK17

    None.

Critical Paths under _UART1_TX_ISR in BANK17

    None.

Critical Paths under _UART1_RX_ISR in BANK17

    None.

Critical Paths under _ADC_ISR in BANK17

    None.

Critical Paths under _I2C_TX_ISR in BANK17

    None.

Critical Paths under _I2C_RX_ISR in BANK17

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TIMER0_ISR in BANK18

    None.

Critical Paths under _UART1_TX_ISR in BANK18

    None.

Critical Paths under _UART1_RX_ISR in BANK18

    None.

Critical Paths under _ADC_ISR in BANK18

    None.

Critical Paths under _I2C_TX_ISR in BANK18

    None.

Critical Paths under _I2C_RX_ISR in BANK18

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TIMER0_ISR in BANK19

    None.

Critical Paths under _UART1_TX_ISR in BANK19

    None.

Critical Paths under _UART1_RX_ISR in BANK19

    None.

Critical Paths under _ADC_ISR in BANK19

    None.

Critical Paths under _I2C_TX_ISR in BANK19

    None.

Critical Paths under _I2C_RX_ISR in BANK19

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TIMER0_ISR in BANK20

    None.

Critical Paths under _UART1_TX_ISR in BANK20

    None.

Critical Paths under _UART1_RX_ISR in BANK20

    None.

Critical Paths under _ADC_ISR in BANK20

    None.

Critical Paths under _I2C_TX_ISR in BANK20

    None.

Critical Paths under _I2C_RX_ISR in BANK20

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TIMER0_ISR in BANK21

    None.

Critical Paths under _UART1_TX_ISR in BANK21

    None.

Critical Paths under _UART1_RX_ISR in BANK21

    None.

Critical Paths under _ADC_ISR in BANK21

    None.

Critical Paths under _I2C_TX_ISR in BANK21

    None.

Critical Paths under _I2C_RX_ISR in BANK21

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TIMER0_ISR in BANK22

    None.

Critical Paths under _UART1_TX_ISR in BANK22

    None.

Critical Paths under _UART1_RX_ISR in BANK22

    None.

Critical Paths under _ADC_ISR in BANK22

    None.

Critical Paths under _I2C_TX_ISR in BANK22

    None.

Critical Paths under _I2C_RX_ISR in BANK22

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TIMER0_ISR in BANK23

    None.

Critical Paths under _UART1_TX_ISR in BANK23

    None.

Critical Paths under _UART1_RX_ISR in BANK23

    None.

Critical Paths under _ADC_ISR in BANK23

    None.

Critical Paths under _I2C_TX_ISR in BANK23

    None.

Critical Paths under _I2C_RX_ISR in BANK23

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TIMER0_ISR in BANK24

    None.

Critical Paths under _UART1_TX_ISR in BANK24

    None.

Critical Paths under _UART1_RX_ISR in BANK24

    None.

Critical Paths under _ADC_ISR in BANK24

    None.

Critical Paths under _I2C_TX_ISR in BANK24

    None.

Critical Paths under _I2C_RX_ISR in BANK24

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TIMER0_ISR in BANK25

    None.

Critical Paths under _UART1_TX_ISR in BANK25

    None.

Critical Paths under _UART1_RX_ISR in BANK25

    None.

Critical Paths under _ADC_ISR in BANK25

    None.

Critical Paths under _I2C_TX_ISR in BANK25

    None.

Critical Paths under _I2C_RX_ISR in BANK25

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TIMER0_ISR in BANK26

    None.

Critical Paths under _UART1_TX_ISR in BANK26

    None.

Critical Paths under _UART1_RX_ISR in BANK26

    None.

Critical Paths under _ADC_ISR in BANK26

    None.

Critical Paths under _I2C_TX_ISR in BANK26

    None.

Critical Paths under _I2C_RX_ISR in BANK26

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TIMER0_ISR in BANK27

    None.

Critical Paths under _UART1_TX_ISR in BANK27

    None.

Critical Paths under _UART1_RX_ISR in BANK27

    None.

Critical Paths under _ADC_ISR in BANK27

    None.

Critical Paths under _I2C_TX_ISR in BANK27

    None.

Critical Paths under _I2C_RX_ISR in BANK27

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TIMER0_ISR in BANK28

    None.

Critical Paths under _UART1_TX_ISR in BANK28

    None.

Critical Paths under _UART1_RX_ISR in BANK28

    None.

Critical Paths under _ADC_ISR in BANK28

    None.

Critical Paths under _I2C_TX_ISR in BANK28

    None.

Critical Paths under _I2C_RX_ISR in BANK28

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TIMER0_ISR in BANK29

    None.

Critical Paths under _UART1_TX_ISR in BANK29

    None.

Critical Paths under _UART1_RX_ISR in BANK29

    None.

Critical Paths under _ADC_ISR in BANK29

    None.

Critical Paths under _I2C_TX_ISR in BANK29

    None.

Critical Paths under _I2C_RX_ISR in BANK29

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TIMER0_ISR in BANK30

    None.

Critical Paths under _UART1_TX_ISR in BANK30

    None.

Critical Paths under _UART1_RX_ISR in BANK30

    None.

Critical Paths under _ADC_ISR in BANK30

    None.

Critical Paths under _I2C_TX_ISR in BANK30

    None.

Critical Paths under _I2C_RX_ISR in BANK30

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TIMER0_ISR in BANK31

    None.

Critical Paths under _UART1_TX_ISR in BANK31

    None.

Critical Paths under _UART1_RX_ISR in BANK31

    None.

Critical Paths under _ADC_ISR in BANK31

    None.

Critical Paths under _I2C_TX_ISR in BANK31

    None.

Critical Paths under _I2C_RX_ISR in BANK31

    None.

Critical Paths under _I2C_GENERAL_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   39443
                                             20 BANK1      3     3      0
                           _ADC_Init
                           _I2C_Init
                       _I2C_Transmit
                        _USART1_Init
              _USART1_ReceiveCommand
                      _USART_handler
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_handler                                        2     2      0   38172
                                             18 BANK1      2     2      0
                      _GetStringSize
                        _I2C_handler
                  _USART1_SendString
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   36216
                                              0 BANK1     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   34278
                                            133 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   33784
                                            113 BANK0     20    14      6
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   29087
                                             45 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3957
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3453
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             25 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     3      5     431
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _USART1_SendString                                    8     4      4     449
                                              4 BANK0      8     4      4
                      _GetStringSize (ARG)
                    _USART1_SendByte
 ---------------------------------------------------------------------------------
 (3) _USART1_SendByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_handler                                          2     0      2     946
                                             12 BANK0      2     0      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C_Transmit                                        12     8      4     794
                                              0 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (2) _GetStringSize                                        4     2      2     130
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _USART1_ReceiveCommand                                2     2      0     412
                                              6 BANK0      2     2      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _USART1_Init                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _TIMER0_ISR                                          0     0      0      22
                          _ADC_Start
 ---------------------------------------------------------------------------------
 (11) _ADC_Start                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _UART1_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ADC_ISR                                             8     8      0    2059
                                             26 COMRAM     8     8      0
                           ___xxtofl
                          i2___flmul
 ---------------------------------------------------------------------------------
 (11) i2___flmul                                          25    17      8    1570
                                              1 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (11) ___xxtofl                                           14    10      4     398
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_TX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_RX_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _I2C_GENERAL_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _DEFAULT_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Init
   _I2C_Transmit
   _USART1_Init
   _USART1_ReceiveCommand
     ___wmul
   _USART_handler
     _GetStringSize
     _I2C_handler
       _I2C_Transmit
     _USART1_SendString
       _GetStringSize (ARG)
       _USART1_SendByte (ARG)
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isupper
           _strncmp
           _tolower
             _isupper
   _timer0_init

 _TIMER0_ISR (ROOT)
   _ADC_Start

 _UART1_TX_ISR (ROOT)

 _UART1_RX_ISR (ROOT)

 _ADC_ISR (ROOT)
   ___xxtofl
   i2___flmul

 _I2C_TX_ISR (ROOT)

 _I2C_RX_ISR (ROOT)

 _I2C_GENERAL_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     17      C8       7       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8D      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      40       1       67.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A8      58        0.0%
DATA                 0      0     1A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 14 22:33:27 2019

         USART1_SendString@size 0066                    ___fldiv@aexp 0078                    ___fldiv@bexp 0077  
           __size_of_I2C_RX_ISR 0016                    ___fldiv@sign 0070             __size_of_I2C_TX_ISR 0016  
                   __CFG_CP$OFF 000000                    ___awdiv@sign 0065              __size_of_ADC_Start 0012  
           ___wmul@multiplicand 0062                             l319 4908                             l538 2484  
                           l564 2836                             l497 487E                             l882 466A  
                           _pad 4842                 __end_of_ADC_ISR 44E6                    ___awmod@sign 0065  
                           wreg 003FE8                     i2___flmul@a 0006                     i2___flmul@b 0002  
                  ___flmul@aexp 006D                    ___flmul@bexp 0072                    ___flmul@sign 006C  
                  ___flmul@temp 0077                    ___flmul@prod 0073                   __CFG_BBEN$OFF 000000  
          __size_of_DEFAULT_ISR 0002                    __CFG_LVP$OFF 000000                    __CFG_ZCD$OFF 000000  
                  ___fltol@exp1 0069                            l1201 3BDC                            l1212 3C4A  
                          l1213 3C46                            l1231 2C92                            l1240 2EF0  
                          l1241 2EEC                            l1162 3944                            l1146 3872  
                          l1171 39AC                            l1147 3850                            l1172 39A8  
                          l1308 3E50                            l1248 2F86                            l1374 5058  
                          l6000 2116                            l6012 2148                            l6020 2160  
                          l6102 24E4                            l6030 21D4                            l5400 3968  
                          l6120 252E                            l6104 24E8                            l6032 21EC  
                          l5410 397E                            l5306 37A6                            l5242 50E8  
                          l6202 2972                            l6210 2A44                            l6130 2578  
                          l6114 250A                            l6034 21F6                            l5500 45CA  
                          l5228 49C6                            l6124 253E                            l5350 3862  
                          l5270 373A                            l5238 50CA                            l5246 51F2  
                          l6222 2A86                            l6062 2304                            l6038 222A  
                          ?_pad 0070                            l5416 3988                            l5336 3800  
                          l5248 51F8                            l6240 2ADE                            l6160 282E  
                          l6152 27B2                            l6072 2402                            l6048 229E  
                          l6056 22B8                            l6402 4B4A                            l5450 3A32  
                          l5274 373E                            l5506 4EA4                            l6250 2B42  
                          l6162 2850                            l6138 26D4                            l6066 234E  
                          l6500 4CD8                            l5604 3B32                            l5700 2C52  
                          l5444 3A28                            l5436 3A02                            l5372 38B8  
                          l5364 3896                            l5348 385E                            l5524 3D9E  
                          l6260 2B6E                            l6084 246C                            l6068 23B6  
                          l6502 4CE2                            l6510 4D10                            l6422 4A70  
                          l5622 3BB4                            l5614 3B8C                            l5374 38BC  
                          l5382 38CE                            l5294 3782                            l5542 3EE6  
                          l5534 3E72                            l5470 4888                            l6238 2AD4  
                          l6174 28FE                            l6094 2498                            l6334 3508  
                          l6326 3486                            l5640 3C10                            l5448 3A30  
                          l5392 3934                            l5464 4862                            l6088 2492  
                          l6360 369A                            l6416 4DCA                            l6442 4ADE  
                          l6426 4A96                            l6434 4AAC                            l5634 3BF2  
                          l5562 3A88                            l5714 2C7E                            l5298 3786  
                          l5490 4578                            l5538 3EB8                            l5474 48A6  
                          l6186 292E                            l6194 294E                            l6354 364A  
                          l6338 3544                            l6370 36C2                            l6418 4DF8  
                          l6508 4CEE                            l6620 3FF4                            l6612 3FDE  
                          l6604 3FC8                            l6532 3F0A                            l6452 5198  
                          l5660 3C9E                            l5628 3BDA                            l5724 2CB0  
                          l5716 2C82                            l5468 4876                            l6276 2BD0  
                          l6364 36A6                            l6438 4AC0                            l5590 3AFC  
                          l5582 3AC8                            l5558 3A84                            l5494 4582  
                          l5478 48DA                            l6294 46DA                            l6560 3F58  
                          l6544 3F28                            l6480 510A                            l6472 526C  
                          l6448 5182                            l5840 4C68                            l5664 3CC2  
                          l5912 4C28                            l5904 4BD6                            l5920 460A  
                          l5808 2FA6                            l6296 46E8                            l6634 401A  
                          l6554 3F48                            l6386 52CE                            l5842 4C70  
                          l5834 4C52                            l5674 3CFA                            l5578 3AC4  
                          l6628 400A                            l5860 4CA8                            l5852 4C90  
                          l5828 4C42                            l5676 3CFC                            l5668 3CEC  
                          l5596 3B1A                            l5908 4C0A                            l5924 463E  
                          l5772 2EB6                            l6582 3F94                            l6398 4B1E  
                          l5934 46A2                            l5766 2E98                            l5942 515C  
                          l6742 4100                            l5856 4C9A                            l5880 4D6C  
                          l5872 4D52                            l5928 4654                            l5792 2F44  
                          l5696 2C3E                            l5952 4796                            l6760 41F4  
                          l6744 412E                            l6752 4188                            l6498 4CCE  
                          l5882 4D74                            l5698 2C42                            l6754 41AE  
                          l6746 415C                            l6770 4248                            l6596 3FB2  
                          l6588 3F9C                            l5892 4D96                            l5876 4D5E  
                          l5796 2F62                            l5980 480C                            l5972 47F8  
                          l6764 421C                            l6748 4172                            l6772 426E  
                          l6852 4998                            l6766 4232                            l6758 41DC  
                          l5896 4DA4                            l5888 4D8C                            l5968 47E8  
                          l6848 498C                            l5986 4828                            l5978 4800  
                          STR_1 209B                            STR_2 2096                            STR_3 2001  
                          STR_4 2035                            STR_5 2062                            STR_6 204D  
                          STR_7 2089                            STR_8 2076                            STR_9 2035  
                          u7010 503E                            u7020 5040                            u7110 3E98  
                          u7040 3D64                            u7050 3D84                            u8010 247A  
                          u7115 3E8E                            u7300 3C40                            u6420 49BE  
                          u7045 3D5A                            u6600 3836                            u6440 4A06  
                          u8040 24B0                            u7090 3E30                            u7075 3DB8  
                          _PIR3 0039A3                            u7340 3CAC                            u7076 3DBE  
                          u7077 3DCC                            u7350 3CD0                            u6630 387A  
                          u6470 51DC                            u8310 2B58                            u8150 27A2  
                          u7095 3E26                            u7440 2C9E                            u6480 51DE  
                          u8080 2506                            u8400 4746                            u9200 4910  
                          u7530 2F52                            u7450 2E52                            u8330 2BBA  
                          u8250 2A68                            u7700 4C24                            u7540 2F70  
                          u6580 3824                            u8340 2BBC                            u6590 3834  
                          u9150 41BA                            u7455 2E48                            u8600 4ADE  
                          u6840 3A0E                            u6760 398C                            u6920 453E  
                          u9160 41BC                            u7650 4D78                            u7490 2EE6  
                          u8700 3F22                            u6780 39A2                            u7820 4812  
                          u7900 21AE                            u8460 35E6                            u6925 4532  
                          u9237 4960                            u7590 4C74                            u8470 35E8  
                          u7770 4784                            u6970 45C2                            u7930 2276  
                          u8660 5130                            u7780 47BC                            u6980 45C4  
                          u7940 2278                            u7860 2138                            u6965 45A4  
                          u8670 3F06                            u6990 4EEC                            u7785 47B2  
                          u7890 21AC                            u7980 243C                            u6997 4EDE  
                          _dbuf 012A            __size_of_I2C_handler 002C                            _main 48FA  
                          _prec 00F5                __end_of_I2C_Init 4E8C                            _nout 00F1  
                          pad@i 0077                            pad@p 0074                            fsr1h 003FE2  
                          fsr2h 003FDA                            indf1 003FE7                            indf2 003FDF  
                          fsr1l 003FE1                            pad@w 0079                            fsr2l 003FD9  
              __end_of_ADC_Init 5298                   ___fpclassifyf 44E6                            prodh 003FF4  
                          prodl 003FF3                            start 00AE                 ___fldiv@new_exp 0071  
                ?_USART_handler 0001                    _tolower$2231 006C                    ___param_bank 000000  
                   ?_TIMER0_ISR 0001                           ??_pad 0076           __size_of_I2C_Transmit 00A2  
                 ___fltol@sign1 0068                 __end_of___fladd 3A56                           ?_main 0001  
                         _ADPCH 003EF1                 __end_of___fldiv 3D04                           _ADREF 003EFD  
               __end_of___awdiv 4CB6                 __end_of___flneg 5176                           STR_10 20A0  
                         STR_11 20A8                           STR_20 20B0                           STR_14 20A4  
                         STR_15 20AC                   __CFG_WDTE$OFF 000000                           STR_18 20B0  
               __end_of___awmod 4DB2                 __end_of___flmul 2FC4                 __end_of___flsub 4F56  
               __end_of___fltol 4842                 ___awdiv@divisor 0062                  __CFG_DEBUG$OFF 000000  
                         _U1UIR 003DF8                           _U1RXB 003DE8                           _U1TXB 003DEA  
                         i2l308 5328                           i2l270 508C                 ___awdiv@counter 0064  
                         _OSCEN 0039DD                    vfpfcnvrt@fmt 00D3                           _TMR0H 003FB7  
                         _TMR0L 003FB6          _AD5272_VOLTAGE_ADDRESS 00FF                I2C_handler@value 006C  
                __CFG_FCMEN$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                           _flags 0039                           _fputc 49AC  
                         _fputs 50BE              __CFG_MCLRE$EXTMCLR 000000                           pad@fp 0070  
                         _width 00F3                           _putch 5350                 __end_of_isupper 51E4  
                         tablat 003FF5               __end_of_ADC_Start 5342                           status 003FD8  
               __end_of_sprintf 5010                  ?___fpclassifyf 0060                 __end_of_tolower 5066  
             _USART1_SendString 4A5C                   i2___flmul@grs 000F                 __end_of_strncmp 4776  
            USART1_SendString@i 0068              __size_ofi2___flmul 03B2                    _I2C_Transmit 4AFE  
            ?_USART1_SendString 0064                  __CFG_CSWEN$OFF 000000         I2C_Transmit@buffer_size 0062  
      __size_of_USART1_SendByte 001A                 __initialization 4F56                    __end_of_main 49AC  
                __CFG_SAFEN$OFF 000000             ??_USART1_SendString 0068                       ??_ADC_ISR 001B  
                 _I2C_RX_BUFFER 0120                          ??_main 01C5                  __CFG_PR1WAY$ON 000000  
                 __activetblptr 000003                   _I2C_TX_BUFFER 0023                  __CFG_MVECEN$ON 000000  
                  ??_I2C_RX_ISR 0060                    ??_I2C_TX_ISR 0060                          _ADCON0 003EF8  
                        _ADCON1 003EF9                          _ADCON2 003EFA                          ?_fputc 0060  
                        ?_fputs 0069                          _ADRESH 003EF0                          _ADRESL 003EEF  
              ___awdiv@dividend 0060                          ?_putch 0001                          _T0CON0 003FB8  
                        _T0CON1 003FB9                          _RB1I2C 003A5A                          _U1CON0 003DF2  
                        _U1CON1 003DF3                          _U1BRGH 003DF6                          _U1BRGL 003DF5  
                        _U2CON2 003DDC                          _RB0PPS 003A08              __CFG_PWRTS$PWRT_64 000000  
                        _RB1PPS 003A09       __end_of_USART1_SendString 4AFE                          _RC7PPS 003A17  
                        i2l1231 3044                          i2l1240 32A2                          i2l1241 329E  
                        i2l1272 42DC                          i2l1248 3338                  __CFG_WDTCCS$SC 000000  
                        i2l1279 4362                          i2l5000 324A                          i2l5030 3314  
                        i2l5006 3268                          i2l5042 3358                          i2l5026 32F6  
           USART1_SendByte@byte 0060                          i2l5056 5078                          i2l5066 50A2  
                        i2l5092 44E0                          i2l5068 50A8                          i2l5088 4494  
           __size_of_TIMER0_ISR 0056                          i2l4914 43D8                          i2l4930 2FF0  
                        i2l4932 2FF4                          i2l4950 3034                          i2l4934 3004  
                        i2l4890 434A                          i2l4884 4312                          i2l4948 3030  
                        i2l4886 4318                          i2l4878 42F4                          i2l4958 3062  
                        i2l4896 4388                          i2l4888 4324                          i2l4898 4394  
               _I2C_GENERAL_ISR 531C                          _OSCFRQ 0039DF                 ??_USART_handler 01C3  
              __end_of___xxtofl 43F2                  __CFG_XINST$OFF 000000               _I2C_STOP_DETECTED 00FA  
                  vfprintf@cfmt 00EB                          ___flge 45D4                          ___fleq 4BA0  
                     ??___fladd 0068                          ___wmul 521A                       ??___fldiv 0068  
                     ??___awdiv 0064                       ??___flneg 0064                  __CFG_STVREN$ON 000000  
                     ??___awmod 0064                       ??___flmul 0068                       ??___flsub 0081  
                     ??___fltol 0064                    ?_timer0_init 0001                          _efgtoa 20B4  
            __end_of_I2C_RX_ISR 531A              __end_of_I2C_TX_ISR 5302                          _floorf 3D04  
                        _memset 5176                          clear_0 4F84                          clear_1 4F90  
                        clear_2 4F9C                ___awdiv@quotient 0066                 ___awmod@divisor 0062  
               ___awmod@counter 0064                          pad@buf 0072                          _strcpy 4E8C  
                        _strlen 51E4                          fputc@c 0060                          fputs@c 006D  
                        fputs@i 006E                    __pdataCOMRAM 0040                          fputs@s 0069  
                     ?_I2C_Init 0001               __end_ofi2___flmul 3376                 ___fpclassifyf@e 0068  
                     ?_ADC_Init 0001                 ___fpclassifyf@u 006A                 ___fpclassifyf@x 0060  
                  __mediumconst 0000  __size_of_USART1_ReceiveCommand 01DC   __end_of_USART1_ReceiveCommand 40DC  
                        tblptrh 003FF7                       ??_isupper 0062                          tblptrl 003FF6  
                        tblptru 003FF8                    ?_USART1_Init 0001                          putch@c 0001  
              __end_of_vfprintf 4E20                       ??_sprintf 00ED                       ??_tolower 0068  
         __end_of_GetStringSize 513E                  i2___flmul@aexp 0013                  i2___flmul@bexp 0014  
                     ??_strncmp 0066                  i2___flmul@sign 000E                  i2___flmul@temp 0019  
                i2___flmul@prod 0015                      ___flge@ff1 0079                      ___flge@ff2 007D  
               ??___fpclassifyf 0064                    ___xxtofl@arg 000C                    ___xxtofl@exp 000B  
                  ___xxtofl@val 0002                      ___fleq@ff1 0060                      ___fleq@ff2 0064  
                    __accesstop 0060         __end_of__initialization 4FAE                      ___flneg@f1 0060  
                 ___rparam_used 000000                      ___fltol@f1 0060                  __pcstackCOMRAM 0001  
                  __pidataBANK0 5357                  ivt0x8_undefint 00AC                   __end_of_fputc 4A5C  
                 __end_of_fputs 5100                   __end_of_putch 5352               ??_USART1_SendByte 0060  
                 ?_UART1_RX_ISR 0001                   ?_UART1_TX_ISR 0001                      ??_I2C_Init 0060  
                    ??_ADC_Init 0060         __end_of_I2C_GENERAL_ISR 5330                  _I2C_RX_COUNTER 003C  
                       ??_fputc 0064                         ??_fputs 006D                 __CFG_IVT1WAY$ON 000000  
                       ??_putch 0060                      __pbssBANK0 00ED                      __pbssBANK1 0100  
    __size_of_USART1_SendString 00A2                  _I2C_TX_COUNTER 003D                         IVTBASEH 003FD6  
                       IVTBASEL 003FD5                         IVTBASEU 003FD7                         ?___flge 0079  
                       ?___fleq 0060                         _I2C1CLK 003D7B                         _I2C1CNT 003D6C  
                       _I2C1ERR 003D76                         ?___wmul 0060                         _I2C1PIR 003D79  
                       _I2C1RXB 003D6A                         _I2C1TXB 003D6B                 __CFG_PPS1WAY$ON 000000  
                  ??_TIMER0_ISR 0002                         ?_efgtoa 008D                  _counter_timer0 003B  
                       ?_floorf 0079                         _ADC_ISR 43F4                         ?_memset 0060  
                ??_UART1_RX_ISR 0002                  ??_UART1_TX_ISR 0002                         _COMMAND 00FB  
                       ?_strcpy 0060                         ?_strlen 0060                         _U1ERRIE 003DFA  
                 ??_DEFAULT_ISR 0060                         _U1RXPPS 003AE5                       ?___xxtofl 0002  
                       _IVTLOCK 003FD4              __size_of_vfpfcnvrt 0396                         _OSCTUNE 0039DE  
                       _WDTCON0 00395B                         _WDTCON1 00395C                      _led_enable 00F9  
                 ??_I2C_handler 006E              _ADC_VOLTAGE_RESULT 00ED              __end_of_TIMER0_ISR 50BE  
                GetStringSize@i 0062                       _ADC_Start 5330                         __Hparam 0000  
                       __Lparam 0000      __CFG_RSTOSC$HFINTOSC_64MHZ 000000                 __size_of___flge 00D2  
               __size_of___fleq 008C                         ___fladd 370C                         ___fldiv 3A56  
                       ___awdiv 4C2C                         ___flneg 513E                         ___awmod 4D3C  
                       ___flmul 2C10                         ___flsub 4EF6                         ___fltol 4776  
               __size_of___wmul 0030                       ?_vfprintf 00E5                    __psmallconst 2000  
               __size_of_efgtoa 0B5C                 __size_of_floorf 01FC                         __pcinit 4F56  
               __size_of_memset 0038                         __ramtop 2000            __size_of_timer0_init 0020  
                       __ptext0 48FA                         __ptext1 5298                         __ptext2 40DC  
                       __ptext3 4FB4                         __ptext4 4DB2                         __ptext5 3376  
                       __ptext6 46A6                         __ptext7 20B4                         __ptext8 5010  
                       __ptext9 51AE                 __CFG_WRTAPP$OFF 000000                 __size_of_strcpy 006A  
               __size_of_strlen 0036                    __size_of_pad 00B8                      ??___xxtofl 0006  
              ___awmod@dividend 0060                     _I2C1PIEbits 003D7A                 __CFG_WRTSAF$OFF 000000  
                       _isupper 51AE                         efgtoa@c 0093                         efgtoa@d 00B1  
                       efgtoa@e 00C9                         efgtoa@f 008F                         efgtoa@g 00C5  
                       efgtoa@h 00BB                         efgtoa@i 00C3                ?_I2C_GENERAL_ISR 0001  
                       efgtoa@l 00BF                         efgtoa@m 00AD                         efgtoa@n 00CB  
                       efgtoa@p 00B5                         efgtoa@t 00A9                         efgtoa@u 00CD  
                       efgtoa@w 00B8                     _I2C1PIRbits 003D79                         _sprintf 4FB4  
                       _tolower 5010                         _tx_byte 003E                         _strncmp 46A6  
           __end_of_DEFAULT_ISR 5356            end_of_initialization 4FAE            __size_of_USART1_Init 0086  
                       floorf@e 0087                         floorf@m 0083                         floorf@u 0089  
                       floorf@x 0079                         fputc@fp 0062                __CFG_BOREN$NOSLP 000000  
                       memset@i 0066                         memset@x 0062                         fputs@fp 006B  
                  ADC_Start@pin 0001             __end_of_I2C_handler 5276                      ?_ADC_Start 0001  
             __end_of_vfpfcnvrt 370C                      efgtoa@mode 00BA                      efgtoa@sign 00B3  
                       postdec2 003FDD                         postinc0 003FEE                         postinc1 003FE6  
                       postinc2 003FDE              _ADC_CURRENT_RESULT 0035                      ??_vfprintf 00EB  
         __CFG_WDTCPS$WDTCPS_31 000000                         strcpy@d 0068                         strlen@a 0062  
                       strcpy@s 0066                         strlen@s 0060                     ___fladd@grs 006F  
                 ___xxtofl@sign 000A                       _TRISAbits 003FC2                       _TRISBbits 003FC3  
                     _TRISCbits 003FC4            USART1_SendString@str 0064               __size_of_I2C_Init 006C  
                   ___fldiv@grs 0073                     ___fldiv@rem 006C                      _rx_counter 003F  
             __size_of_ADC_Init 0022                       i2___flmul 2FC4                __CFG_FEXTOSC$OFF 000000  
                   ___flmul@grs 006E            __end_of_UART1_RX_ISR 52EA            __end_of_UART1_TX_ISR 5350  
         __end_of_USART_handler 428E                 _USART1_SendByte 52B8                  __end_of___flge 46A6  
                __end_of___fleq 4C2C                     vfpfcnvrt@ap 00D5                     vfpfcnvrt@ct 00E1  
                   vfpfcnvrt@fp 00D1                  __end_of___wmul 524A                   __pidataCOMRAM 5356  
                __end_of_efgtoa 2C10                  __end_of_floorf 3F00                      floorf@F524 002D  
                __end_of_memset 51AE                     _DEFAULT_ISR 5354                  __end_of_strcpy 4EF6  
                __end_of_strlen 521A             start_initialization 4F56               ADC_ISR@adc_result 0021  
                   __end_of_pad 48FA                      ?i2___flmul 0002           _USART1_ReceiveCommand 3F00  
                    ivt0x8_base 0008                     _I2C_handler 524A           __end_of___fpclassifyf 45D4  
                   ??_ADC_Start 0001            USART1_Init@baud_rate 0062                __CFG_LPBOREN$OFF 000000  
                   vfprintf@fmt 00E7                        ??___flge 0081                        ??___fleq 0068  
                      ??___wmul 0064                        ??_efgtoa 0094                     __pdataBANK0 00FF  
                      ??_floorf 007D            _COMMAND_WRITE_NUMBER 00F7          __size_of_GetStringSize 003E  
                      ?_ADC_ISR 0001                        ??_memset 0065                 _AD5272_COMMANDS 00FD  
                    memset@size 0063                        ??_strcpy 0064                        ??_strlen 0062  
                     ___fladd@a 0064                       ___fladd@b 0060                       ___fldiv@a 0064  
                     ___fldiv@b 0060                       ___flmul@a 0064                       ___flmul@b 0060  
                   __pbssCOMRAM 0023                       ___flsub@a 007D                       ___flsub@b 0079  
                 __pcstackBANK0 0060                   __pcstackBANK1 01B1               __size_of___xxtofl 0164  
     USART1_SendString@attempts 006A         __end_of_USART1_SendByte 52D2                   ?_I2C_Transmit 0060  
                   _efgtoa$1653 00A1                     _efgtoa$1647 009D                     _efgtoa$1648 009F  
                   _efgtoa$1657 00A3                     _efgtoa$1658 00A5                     _efgtoa$1659 00A7  
                      ?___fladd 0060                        ?___fldiv 0060                        ?___awdiv 0060  
                      ?___flneg 0060                        ?___awmod 0060                        ?___flmul 0060  
                      ?___flsub 0079                        ?___fltol 0060                        _I2C1ADB1 003D6E  
                      _I2C1CON0 003D73                        _I2C1CON1 003D74                        _I2C1CON2 003D75  
           main@receive_command 01C7               __size_of_vfprintf 006E          __CFG_BBSIZE$BBSIZE_512 000000  
                   __smallconst 2000                        _I2C_Init 4E20                        _ADC_Init 5276  
                      ?_isupper 0060          ?_USART1_ReceiveCommand 0001           __size_of_UART1_RX_ISR 0016  
         __size_of_UART1_TX_ISR 000C                        ?_sprintf 01B1                        ?_tolower 0066  
                   ??i2___flmul 000A                  __size_of_fputc 00B0                  __size_of_fputs 0042  
                      ?_strncmp 0060                  __size_of_putch 0002                   _GetStringSize 5100  
                    _I2C1SDAPPS 003AE2                      _I2C1SCLPPS 003AE1                  ___wmul@product 0064  
                      _LATAbits 003FBA                        _LATBbits 003FBB                  ??_I2C_Transmit 0064  
                      _IPR1bits 003981                        _IPR2bits 003982                        _IPR3bits 003983  
                      _PIE1bits 003991                        _PIE2bits 003992                        _PIE3bits 003993  
           __CFG_BORV$VBOR_2P85 000000                   _I2C1STAT0bits 003D77                        _PIR1bits 0039A1  
                      _PIR2bits 0039A2                        i2u605_40 439E                        i2u621_40 3298  
                      _PIR3bits 0039A3                        i2u616_40 3050                        i2u632_40 50B2  
                      i2u625_40 3304                        i2u617_40 3204                        i2u633_40 50B4  
                      i2u617_45 31FA                        i2u626_40 3322                   ??_timer0_init 0060  
                     _vfpfcnvrt 3376                       _rx_buffer 0100                __size_of_ADC_ISR 00F2  
                    _ADCON0bits 003EF8               ___wmul@multiplier 0060                    _UART1_RX_ISR 52D4  
                  _UART1_TX_ISR 5344                       _tx_buffer 017A                   ??_USART1_Init 0060  
                    _I2C_RX_ISR 5304                      _I2C_TX_ISR 52EC                      vfpfcnvrt@c 00E4  
                    vfpfcnvrt@f 00DD                     _INTCON0bits 003FD2                  ?_GetStringSize 0060  
                 I2C_Transmit@i 006B                ADC_ISR@adc_float 001D                ?_USART1_SendByte 0001  
             _measur_vol_or_cur 0040        __size_of_I2C_GENERAL_ISR 0014                        __Hparam0 0000  
                      __Lparam0 0000                      vfprintf@ap 00E9                      vfprintf@fp 00E5  
              __size_of___fladd 034A                __size_of___fldiv 02AE                __size_of___awdiv 008A  
              __size_of___flneg 0038                __size_of___awmod 0076                __size_of___flmul 03B4  
              __size_of___flsub 0060                __size_of___fltol 00CC                      ?_vfpfcnvrt 00D1  
                    _ANSELAbits 003A40                      _ANSELBbits 003A50                      _ANSELCbits 003A60  
            ___fpclassifyf@F463 0031             __end_of_timer0_init 52B8                    ?_DEFAULT_ISR 0001  
                    sprintf@fmt 01B3                        ___xxtofl 428E                      _T0CON0bits 003FB8  
                    _COMMAND_WR 00FC                    _I2C1CON0bits 003D73                        __pivt0x8 0008  
                      __ptext10 4E8C                        __ptext11 4842                        __ptext20 370C  
                      __ptext12 51E4                        __ptext21 513E                        __ptext13 50BE  
                      __ptext30 52B8                        __ptext22 2C10                        __ptext14 49AC  
                      __ptext31 524A                        __ptext23 45D4                        __ptext15 5350  
                      __ptext40 5330                        __ptext32 4AFE                        __ptext24 4BA0  
                      __ptext16 3D04                        __ptext41 5344                        __ptext33 5100  
                      __ptext25 3A56                        __ptext17 44E6                        __ptext42 52D4  
                      __ptext34 3F00                        __ptext26 4D3C                        __ptext18 4776  
                      __ptext43 43F4                        __ptext35 521A                        __ptext27 4C2C  
                      __ptext19 4EF6                        __ptext44 2FC4                        __ptext36 4CB6  
                      __ptext28 5176                        __ptext45 428E                        __ptext37 4E20  
                      __ptext29 4A5C                        __ptext46 52EC                        __ptext38 5276  
                      __ptext47 5304                        __ptext39 5068                        __ptext48 531C  
                      __ptext49 5354                __size_of_isupper 0036                      _U1CON1bits 003DF3  
                  ?_I2C_handler 006C                __size_of_sprintf 005C                __size_of_tolower 0056  
                    strcpy@dest 0060                __size_of_strncmp 00D0             __end_of_USART1_Init 4D3C  
                 __size_of_main 00B2            __CFG_WDTCWS$WDTCWS_7 000000                        efgtoa@fp 008D  
                      efgtoa@ne 00AF                        efgtoa@pp 00AB                        efgtoa@ou 0099  
           I2C_Transmit@address 0063                      _ODCONBbits 003A52                        _vfprintf 4DB2  
                   _OSCSTATbits 0039DC            __end_of_I2C_Transmit 4BA0                  _vfpfcnvrt$1676 00DB  
        __size_of_USART_handler 01B2                 ??_GetStringSize 0062                     ?_I2C_RX_ISR 0001  
                   ?_I2C_TX_ISR 0001                        memset@st 0060                        intlevel2 0000  
                     sprintf@ap 01BB               __CFG_CLKOUTEN$OFF 000000                     _SLRCONBbits 003A53  
                     strcpy@src 0062                     _PPSLOCKbits 003ABF                        isupper@c 0060  
                     strncmp@_l 0060                       strncmp@_r 0062               ??_I2C_GENERAL_ISR 0060  
                   efgtoa@nmode 00B7              I2C_Transmit@buffer 0060                     _timer0_init 5298  
                    _TIMER0_ISR 5068                     ??_vfpfcnvrt 00D7                        sprintf@f 01BD  
                      tolower@c 0066                        sprintf@s 01B1         ??_USART1_ReceiveCommand 0066  
        __size_of___fpclassifyf 00EE                        strncmp@l 0067                        strncmp@n 0064  
                      strncmp@r 0069                     _USART1_Init 4CB6                   ___fladd@signs 006C  
                  ___fladd@aexp 006D                    ___fladd@bexp 006E                   _USART_handler 40DC  
